{"UNKNOWN to If":[{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((necessary.size()) == 1) { queries.add(necessary.get(0)); }else { queries.add(new edu.umd.cs.psl.model.formula.Conjunction(((edu.umd.cs.psl.model.formula.Formula[]) (necessary.toArray(new edu.umd.cs.psl.model.formula.Formula[necessary.size()]))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5916/buggy-version/psl-core.src.main.java.edu.umd.cs.psl.model.formula.traversal.FormulaEventAnalysis.java", "BodyUseAPI": [], "Fixed commit": "1ac1a94085e097d4de6b32f613fa6fdea9a2baa0", "Url": "https://api.github.com/repos/linqs/psl", "Date": "2011-08-10T17:51:09Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (documentManager.hasPermission(navigationContext.getCurrentDocument().getRef(), SecurityConstants.READ)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7803/buggy-version/nuxeo-platform-document-routing-web.src.main.java.org.nuxeo.ecm.platform.routing.web.RoutingTaskActionsBean.java", "BodyUseAPI": [], "Fixed commit": "d24f8313c14c9f322674c3c4037ab4d91b3005c3", "Url": "https://api.github.com/repos/nuxeo/nuxeo-platform-document-routing", "Date": "2013-01-07T11:33:47Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(source.equals(\"Detect Language\"))) { sourceQuery = \"&source=\" + source; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3029/buggy-version/app.src.main.java.charlesli.com.personalvocabbuilder.controller.GoogleTranslate.java", "BodyUseAPI": [], "Fixed commit": "f25ce16dc57e51434ad2923cd9775acce21fa7bd", "Url": "https://api.github.com/repos/CJLS/VocabBuilder", "Date": "2016-05-27T20:27:48Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (MyConstants.DEBUG) android.util.Log.e(MyConstants.LogTag_STR, \"Just to avoid app crashes on null fragments if the SingleHymn activity is active.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5700/buggy-version/app.src.main.java.com.fransis1981.Android_Hymns.MainScreenPagerAdapter.java", "BodyUseAPI": [], "Fixed commit": "73c2314c644342b06618adee7157fa45a515843f", "Url": "https://api.github.com/repos/fransis1981/AS_Hymns_for_Android", "Date": "2014-10-14T10:45:30Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.web.servlet.support.RequestContextUtils.getLocaleResolver(javax.servlet.http.HttpServletRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (localeResolver == null) { throw new java.lang.IllegalStateException(\"No LocaleResolver found: not in a DispatcherServlet request?\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1190/buggy-version/aciertoteam-i18n.src.main.java.com.aciertoteam.i18n.interceptor.AciertoteamLocaleChangeInterceptor.java", "BodyUseAPI": [], "Fixed commit": "9b746a92d2878abe259abbdac537ce12c2afc359", "Url": "https://api.github.com/repos/acierto/acierto-components", "Date": "2014-02-08T19:34:46Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (from == (-1)) { from = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1547/buggy-version/src.com.duotin.timelyhack.widget.TimerTextView.java", "BodyUseAPI": [], "Fixed commit": "b2404a7368103816f52ac050fde8eb0979a68ddf", "Url": "https://api.github.com/repos/jerry0908mo/TimelyHack", "Date": "2014-07-12T09:49:25Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (to == (-1)) { to = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1547/buggy-version/src.com.duotin.timelyhack.widget.TimerTextView.java", "BodyUseAPI": [], "Fixed commit": "b2404a7368103816f52ac050fde8eb0979a68ddf", "Url": "https://api.github.com/repos/jerry0908mo/TimelyHack", "Date": "2014-07-12T09:49:25Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bufferIndex) < (dataLen)) { bufferIndex -= charCount; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4440/buggy-version/src.main.java.io.bdrc.lucene.sa.SkrtWordTokenizer.java", "BodyUseAPI": [], "Fixed commit": "da7e8e5f49d9f9c92e6f483781a4d1af0e33239b", "Url": "https://api.github.com/repos/BuddhistDigitalResourceCenter/lucene-sa", "Date": "2017-10-03T09:19:19Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<ru.runa.wfe.audit.TaskCreateLog, ru.runa.wfe.audit.TaskEndLog>.get(ru.runa.wfe.audit.TaskCreateLog)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (endLog != null) { executorName = endLog.getActorName(); }else { ru.runa.wfe.user.Executor owner = taskService.getTask(getUser(), createLog.getTaskId()).getOwner(); if (owner != null) { executorName = owner.getName(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4460/buggy-version/wfe-web.src.main.java.ru.runa.wf.web.tag.ShowGanttDiagramTag.java", "BodyUseAPI": ["ru.runa.wfe.audit.TaskEndLog.getActorName()"], "Fixed commit": "fc110abbd6908aac8e513b45b7b40b7d1c6b767a", "Url": "https://api.github.com/repos/dataobject/runawfe-server", "Date": "2017-01-17T09:29:59Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (breakpoint != null) { allBreakpoints.add(breakpoint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3666/buggy-version/sztools.java.com.google.code.vimsztool.debug.BreakpointManager.java", "BodyUseAPI": ["java.util.List<com.google.code.vimsztool.debug.Breakpoint>.add(com.google.code.vimsztool.debug.Breakpoint)"], "Fixed commit": "09c5cd12968c0254d7ee23bc58e72086077d1fd2", "Url": "https://api.github.com/repos/shrekwang/vim-sztool", "Date": "2013-02-04T06:50:00Z"},
{"Line": "=>542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mage.game.Game.getPermanent(java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((attackingCreature == null) || (!(attackingCreature.isAttacking()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3578/buggy-version/Mage.src.mage.game.combat.Combat.java", "BodyUseAPI": [], "Fixed commit": "b9add2e04171f1590c445693156dfe71b2ebaf54", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2015-11-28T21:19:21Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Element.getNodeName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.nutz.ioc.loader.xml.XmlIocLoader.APP_TAG.equalsIgnoreCase(type)) { iocValue.setType(org.nutz.ioc.loader.xml.XmlIocLoader.APP_TAG); iocValue.setValue(element.getTextContent()); }else if (org.nutz.ioc.loader.xml.XmlIocLoader.OBJ_TAG.equalsIgnoreCase(type)) { iocValue.setType(org.nutz.ioc.loader.xml.XmlIocLoader.REFER_TAG); iocValue.setValue(paserBean(element, true)); }else if (org.nutz.ioc.loader.xml.XmlIocLoader.MAP_TAG.equalsIgnoreCase(type)) { iocValue.setType(null); iocValue.setValue(paserMap(element)); }else if (org.nutz.ioc.loader.xml.XmlIocLoader.LIST_TAG.equalsIgnoreCase(type)) { iocValue.setType(null); iocValue.setValue(paserCollection(element)); }else if (org.nutz.ioc.loader.xml.XmlIocLoader.ARRAY_TAG.equalsIgnoreCase(type)) { iocValue.setType(null); iocValue.setValue(paserCollection(element).toArray()); }else if (org.nutz.ioc.loader.xml.XmlIocLoader.SET_TAG.equalsIgnoreCase(type)) { iocValue.setType(null); java.util.Set<java.lang.Object> set = new java.util.HashSet<java.lang.Object>(); set.addAll(paserCollection(element)); iocValue.setValue(set); }else { iocValue.setType(null); if ((element.getFirstChild()) != null) iocValue.setValue(element.getFirstChild().getTextContent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2557/buggy-version/src.org.nutz.ioc.loader.xml.XmlIocLoader.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "org.nutz.ioc.meta.IocValue.setType(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "9a33165c3c30ecd0f439128fca57d7c62ea50a0a", "Url": "https://api.github.com/repos/nutzam/nutz", "Date": "2013-02-25T03:52:26Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["type.asArrayTypeName().getArrayBaseType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (baseType.isUnknown()) { baseType = cc.kave.commons.model.naming.Names.newType(\"p:object\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/807/buggy-version/exec.exec.recommender_reimplementation.src.main.java.exec.recommender_reimplementation.java_transformation.JavaTypeTransformer.java", "BodyUseAPI": [], "Fixed commit": "f2f8af191ce4f2ae8fa8a073b5c6eac7a37ea48a", "Url": "https://api.github.com/repos/stg-tud/kave-java", "Date": "2016-09-10T21:11:18Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((meals) == null) meals = new java.util.ArrayList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1014/buggy-version/app.src.main.java.com.pasta.mensadd.activity.MealsFragment.java", "BodyUseAPI": [], "Fixed commit": "8ec770197bf53c937a8fccd80e67b47796be1567", "Url": "https://api.github.com/repos/julianctni/mensaDD", "Date": "2015-09-12T13:59:31Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((charPos > 0) && ((string.charAt((charPos - 1))) == '\\\\')) { singleQuoteOn = !singleQuoteOn; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/220/buggy-version/src.main.java.cz.startnet.utils.pgdiff.parsers.Parser.java", "BodyUseAPI": [], "Fixed commit": "94217c45fa73f9a251a7ad0d0987f93f5173be21", "Url": "https://api.github.com/repos/laurentmartelli/apgdiff", "Date": "2012-09-22T18:39:19Z"},
{"Line": "=>735", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTimerTask) != null) { mTimerTask.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5740/buggy-version/src.com.asgj.android.appusage.service.UsageTrackingService.java", "BodyUseAPI": [], "Fixed commit": "4ea171965e98c52d8aa4a43e881789966d977a9a", "Url": "https://api.github.com/repos/gaurav133/PhoneUse", "Date": "2015-06-08T05:19:10Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.willshex.blogwt.client.controller.SessionController.get().isValidSession()) { pager.sortBy = PostSortType.PostSortTypeCreated.toString(); }else { pager.sortBy = PostSortType.PostSortTypePublished.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7585/buggy-version/src.main.java.com.willshex.blogwt.client.controller.PostController.java", "BodyUseAPI": [], "Fixed commit": "d7c9cf16f5be7107d00696c49a82dd83de8e81f7", "Url": "https://api.github.com/repos/billy1380/blogwt", "Date": "2015-09-28T13:36:20Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((call_counter) == 0) { mp.start(); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7359/buggy-version/app.src.main.java.com.example.jackson.gameuebung_3.MGDExerciseActivity.java", "BodyUseAPI": [], "Fixed commit": "9824c27aa762b0ade63d12c0c09631127f75138c", "Url": "https://api.github.com/repos/dz020/VR_BubbleShoot", "Date": "2016-06-05T13:58:39Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.starts.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((start.get()) instanceof org.apache.tinkerpop.gremlin.structure.util.Attachable) && (this.getTraversal().getGraph().isPresent())) start.set(((org.apache.tinkerpop.gremlin.structure.util.Attachable<S>) (start.get())).attach(Attachable.Method.get(this.getTraversal().getGraph().get())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2110/buggy-version/gremlin-core.src.main.java.org.apache.tinkerpop.gremlin.process.traversal.step.sideEffect.StartStep.java", "BodyUseAPI": ["((org.apache.tinkerpop.gremlin.structure.util.Attachable<S>) (start.get())).attach(Attachable.Method.get(this.getTraversal().getGraph().get()))", "start.set(((org.apache.tinkerpop.gremlin.structure.util.Attachable<S>) (start.get())).attach(Attachable.Method.get(this.getTraversal().getGraph().get())))", "start.get()"], "Fixed commit": "79b621c9a0ddc2d96f951c54ee3f1db3c8490d4c", "Url": "https://api.github.com/repos/apache/tinkerpop", "Date": "2017-10-18T22:45:16Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.architecture.project.utils.ProjectUtils.inArrays(this.instruction.getOperatorCode(), com.architecture.project.instruction.InstructionsFactory.IO_INSTRUCTIONS)) { return new com.architecture.project.instruction.IOInstructions(this.instruction); }else if (com.architecture.project.utils.ProjectUtils.inArrays(this.instruction.getOperatorCode(), com.architecture.project.instruction.InstructionsFactory.FLOATING_VECTOR_INSTRUCTIONS)) { return new com.architecture.project.instruction.FloatingVectorInstructions(this.instruction); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2310/buggy-version/src.com.architecture.project.instruction.InstructionsFactory.java", "BodyUseAPI": ["com.architecture.project.instruction.Instruction.getOperatorCode()", "com.architecture.project.utils.ProjectUtils.inArrays(this.instruction.getOperatorCode(),int[])"], "Fixed commit": "33048842b07e1ab1077c4c9ef3d38371e072d8f2", "Url": "https://api.github.com/repos/lele94218/ArchitectureProject", "Date": "2016-12-05T05:30:58Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showOptionDialog(<nulltype>,java.lang.String,java.lang.String,int,int,<nulltype>,java.lang.String[],java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i == 1) { score = 0; }else if (i == (-1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3489/buggy-version/src.EventHandler.java", "BodyUseAPI": [], "Fixed commit": "643b619d8f5a4878058a749b40a54fb71f4e6d41", "Url": "https://api.github.com/repos/TheMaxJ/BES", "Date": "2017-01-02T23:49:31Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(path.substring(0, 1).equals(\"/\"))) { path = \"/\" + path; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4340/buggy-version/src.utility.BufferedImageLoader.java", "BodyUseAPI": [], "Fixed commit": "9b768ba3dc48fbbe7468c2090b1e03da22a972b2", "Url": "https://api.github.com/repos/Oven450/super-duper-lamp", "Date": "2016-07-07T21:33:08Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((i + j) + k) != 0) { phi[i][j][(2 * k)] = (cellArea * (trho[i][j][(2 * k)])) / (d * eps0); phi[i][j][((2 * k) + 1)] = (cellArea * (trho[i][j][((2 * k) + 1)])) / (d * eps0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5308/buggy-version/pixi.src.main.java.org.openpixi.pixi.physics.fields.PoissonSolverFFTPeriodic.java", "BodyUseAPI": [], "Fixed commit": "601f06256e59c24c0176cea966bbf295a234f95c", "Url": "https://api.github.com/repos/aipp/openpixi", "Date": "2015-04-13T11:07:20Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getActivity()) != null) && ((getActivity().getResources()) != null)) { android.graphics.drawable.Drawable to = getActivity().getResources().getDrawable(backgroundRes); android.graphics.drawable.TransitionDrawable td = new android.graphics.drawable.TransitionDrawable(new android.graphics.drawable.Drawable[]{ from, to }); describeWeatherLayout.setBackground(td); td.startTransition(800); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2193/buggy-version/app.src.main.java.ru.ifmo.md.lesson8.CommonWeatherFragment.java", "BodyUseAPI": [], "Fixed commit": "71cdb9652ca776449ad21d0404fee81ec5108bed", "Url": "https://api.github.com/repos/pva701/lesson8", "Date": "2014-11-29T00:55:56Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends ro.isdc.wro.model.resource.locator.support.ClasspathResourceLocator>.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (url == null) { url = getClass().getResource(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4285/buggy-version/wro4j-core.src.main.java.ro.isdc.wro.model.resource.locator.support.ClasspathResourceLocator.java", "BodyUseAPI": [], "Fixed commit": "04ecdae7c86f33e05ae1e9d3e552fb678a5cfa7d", "Url": "https://api.github.com/repos/alexo/wro4j", "Date": "2011-07-17T15:33:29Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (resource.content.endsWith(\",\")) { resource.content = resource.content.substring(0, ((resource.content.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/9208/buggy-version/src.main.java.de.thingweb.directory.handlers.TDLookUpEPHandler.java", "BodyUseAPI": ["resource.content.substring(int,((resource.content.length()) - 1))", "resource.content.length()"], "Fixed commit": "06de1c4ab0890579ae6debaa32701f3c13579834", "Url": "https://api.github.com/repos/onovo1/thingweb-directory", "Date": "2017-10-26T10:38:19Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (totalLength < 27) { totalLength = 27; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7641/buggy-version/p-adic.src.main.java.vvk.numbers.Application.java", "BodyUseAPI": [], "Fixed commit": "1e1bf919c5f5e68c9a434c8899c047f2c2d760fc", "Url": "https://api.github.com/repos/Estraaanged/P-adic-numbers", "Date": "2014-04-27T09:36:28Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.simonvt.cathode.settings.Settings.get(context).getInt(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentVersion < 3) { jobQueue.add(new net.simonvt.cathode.remote.sync.shows.SyncEpisodesRatings()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2897/buggy-version/cathode.src.main.java.net.simonvt.cathode.Upgrader.java", "BodyUseAPI": [], "Fixed commit": "16941e0ae7a6ba4c66951c6cd7cfaa31fdf46503", "Url": "https://api.github.com/repos/SimonVT/cathode", "Date": "2017-08-10T20:03:56Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (a < (PVmax)) { PV += ((int) (nbPV)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1927/buggy-version/src.tp3.Combatant.java", "BodyUseAPI": [], "Fixed commit": "5325e22d43c0ee54d9de93de67ac3c3b9c617890", "Url": "https://api.github.com/repos/alexCampus/RPG_Java", "Date": "2017-03-20T08:23:36Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (id instanceof java.lang.Number) { remove0(((java.lang.Number) (id))); }else { remove0(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5095/buggy-version/errai-cordova.src.main.java.org.jboss.errai.aerogear.api.datamanager.impl.StoreAdapter.java", "BodyUseAPI": ["org.jboss.errai.aerogear.api.datamanager.impl.StoreAdapter<T>.remove0(java.io.Serializable)"], "Fixed commit": "762d751b750c83739d84207053cdabb5272dac5b", "Url": "https://api.github.com/repos/edewit/errai", "Date": "2013-04-11T07:28:10Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (adjust.matches(\".*/(##?|bb?)?[0-9]+\")) { int step = 0; java.lang.String orig = \"\"; if ((adjust.indexOf(\"/\")) != 0) orig = adjust.substring(0, adjust.indexOf(\"/\")); adjust = adjust.substring(adjust.indexOf(\"/\")); if ((adjust.charAt(1)) == '#') { step++; adjust = adjust.substring(2); }else if ((adjust.charAt(1)) == 'b') { step--; adjust = adjust.substring(2); }else adjust = adjust.substring(1); if ((adjust.charAt(0)) == '#') { step++; adjust = adjust.substring(1); }else if ((adjust.charAt(0)) == 'b') { step--; adjust = adjust.substring(1); } adjust = (orig + \"/\") + (key.halfStep(((musicmaker.theory.Chord.findStep(java.lang.Integer.parseInt(adjust))) + step))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6019/buggy-version/src.musicmaker.theory.ProgressionMap.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "3d15aee794a72f5e06b837582f6e9a9d931349d5", "Url": "https://api.github.com/repos/keelimeguy/MusicMaker", "Date": "2016-08-17T17:56:25Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isRenamed) { java.lang.System.out.println(((((\"Renaming file [\" + (file.getAbsolutePath())) + \"] to [\") + (newFileName.toString())) + \"] FAILED\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8695/buggy-version/src.net.martenhz.photoszipper.PhotosZipperUtils.java", "BodyUseAPI": [], "Fixed commit": "aedbdf1cf78facb107dc816139c8b1bb80ecfe2f", "Url": "https://api.github.com/repos/martenhz/photos-zipper", "Date": "2015-07-20T20:48:26Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(newFile.exists())) { isRenamed = file.renameTo(newFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8695/buggy-version/src.net.martenhz.photoszipper.PhotosZipperUtils.java", "BodyUseAPI": ["java.io.File.renameTo(java.io.File)"], "Fixed commit": "aedbdf1cf78facb107dc816139c8b1bb80ecfe2f", "Url": "https://api.github.com/repos/martenhz/photos-zipper", "Date": "2015-07-20T20:48:26Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((eHandler.handleMouseX(deltaTime)) < (world.Width())) && ((eHandler.handleMouseY(deltaTime)) < (world.Height()))) && ((eHandler.rawMouse(deltaTime)[0]) > 0)) && ((eHandler.rawMouse(deltaTime)[1]) > 0)) { batch.draw(select, (((eHandler.handleMouseX(deltaTime)) * 64) - (cam.correctionX)), (((eHandler.handleMouseY(deltaTime)) * 64) - (cam.correctionY))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6256/buggy-version/core.src.com.musicdev.game.JGame.java", "BodyUseAPI": ["com.musicdev.game.EventHandler.handleMouseX(float)", "com.badlogic.gdx.graphics.g2d.SpriteBatch.draw(com.badlogic.gdx.graphics.Texture,(((eHandler.handleMouseX(deltaTime)) * 64) - (cam.correctionX)),(((eHandler.handleMouseY(deltaTime)) * 64) - (cam.correctionY)))", "com.musicdev.game.EventHandler.handleMouseY(float)"], "Fixed commit": "1c6837d7274318beee8aad56e06d560a9555d0f2", "Url": "https://api.github.com/repos/MusicDev33/JGame", "Date": "2017-06-12T06:58:50Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.joda.time.DateTime.now().compareTo(nextLoopTime)) < 0) { org.joda.time.Interval i = new org.joda.time.Interval(org.joda.time.DateTime.now(), nextLoopTime); msToWait = i.toDurationMillis(); }else msToWait = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7647/buggy-version/core.src.main.java.org.oxymores.chronix.engine.SelfTriggerAgent.java", "BodyUseAPI": [], "Fixed commit": "5d3c593cc462b91c68bb9014435fae44e8ce2df3", "Url": "https://api.github.com/repos/marcanpilami/jChronix", "Date": "2012-11-18T10:32:05Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (element.replace(\"\\n\", \"\").trim().equals(\"\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2348/buggy-version/src.main.java.com.whitewoodcity.core.bean.XmlV.java", "BodyUseAPI": [], "Fixed commit": "f50aed841e32dca63bfab08ef99367bdcb55c378", "Url": "https://api.github.com/repos/whitewoodcity/xbrowser", "Date": "2017-09-30T18:28:37Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldAtr.isImmunized()) { newAtr.immunize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8951/buggy-version/languagetool-core.src.main.java.org.languagetool.tagging.disambiguation.rules.DisambiguationPatternRuleReplacer.java", "BodyUseAPI": [], "Fixed commit": "09d841cf3fb6fe424bb3122f1f441b0c06f79045", "Url": "https://api.github.com/repos/languagetool-org/languagetool", "Date": "2014-03-23T18:27:40Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (formattedToken.isImmunized()) { anTkRead.immunize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8951/buggy-version/languagetool-core.src.main.java.org.languagetool.rules.patterns.MatchState.java", "BodyUseAPI": [], "Fixed commit": "09d841cf3fb6fe424bb3122f1f441b0c06f79045", "Url": "https://api.github.com/repos/languagetool-org/languagetool", "Date": "2014-03-23T18:27:40Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (userId != null) { clauses.add(\"UserId = ?\"); parameters.add(userId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8964/buggy-version/Xenia.src.managers.TransactionManager.java", "BodyUseAPI": ["java.util.List<java.lang.Object>.add(java.lang.Integer)"], "Fixed commit": "8b69221f025e5bf800f30681eee2eb8cafc3e6b2", "Url": "https://api.github.com/repos/pluddy/Xenia", "Date": "2016-03-17T21:19:22Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (cardHolderName != null) { clauses.add(\"CardHolderName = ?\"); parameters.add(cardHolderName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8964/buggy-version/Xenia.src.managers.TransactionManager.java", "BodyUseAPI": ["java.util.List<java.lang.Object>.add(java.lang.String)"], "Fixed commit": "8b69221f025e5bf800f30681eee2eb8cafc3e6b2", "Url": "https://api.github.com/repos/pluddy/Xenia", "Date": "2016-03-17T21:19:22Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (cardNickname != null) { clauses.add(\"CardNickname = ?\"); parameters.add(cardNickname); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8964/buggy-version/Xenia.src.managers.TransactionManager.java", "BodyUseAPI": ["java.util.List<java.lang.Object>.add(java.lang.String)"], "Fixed commit": "8b69221f025e5bf800f30681eee2eb8cafc3e6b2", "Url": "https://api.github.com/repos/pluddy/Xenia", "Date": "2016-03-17T21:19:22Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (id != null) { clauses.add(\"Id = ?\"); parameters.add(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8964/buggy-version/Xenia.src.managers.TransactionManager.java", "BodyUseAPI": ["java.util.List<java.lang.Object>.add(java.lang.Integer)"], "Fixed commit": "8b69221f025e5bf800f30681eee2eb8cafc3e6b2", "Url": "https://api.github.com/repos/pluddy/Xenia", "Date": "2016-03-17T21:19:22Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (balance != null) { clauses.add(\"Balance = ?\"); parameters.add(balance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8964/buggy-version/Xenia.src.managers.TransactionManager.java", "BodyUseAPI": ["java.util.List<java.lang.Object>.add(java.lang.Double)"], "Fixed commit": "8b69221f025e5bf800f30681eee2eb8cafc3e6b2", "Url": "https://api.github.com/repos/pluddy/Xenia", "Date": "2016-03-17T21:19:22Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (creditCardNumber != null) { clauses.add(\"CreditCardNumber = ?\"); parameters.add(creditCardNumber); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8964/buggy-version/Xenia.src.managers.TransactionManager.java", "BodyUseAPI": ["java.util.List<java.lang.Object>.add(java.lang.String)"], "Fixed commit": "8b69221f025e5bf800f30681eee2eb8cafc3e6b2", "Url": "https://api.github.com/repos/pluddy/Xenia", "Date": "2016-03-17T21:19:22Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (cvv != null) { clauses.add(\"CVV = ?\"); parameters.add(cvv); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8964/buggy-version/Xenia.src.managers.TransactionManager.java", "BodyUseAPI": ["java.util.List<java.lang.Object>.add(java.lang.String)"], "Fixed commit": "8b69221f025e5bf800f30681eee2eb8cafc3e6b2", "Url": "https://api.github.com/repos/pluddy/Xenia", "Date": "2016-03-17T21:19:22Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (message == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5331/buggy-version/ProjectSource.app-library.src.main.java.com.kayako.sdk.android.k5.common.adapter.messengerlist.helper.MessageStyleHelper.java", "BodyUseAPI": [], "Fixed commit": "77ccc4a0117aba7ec32d27bf4b4499326293b220", "Url": "https://api.github.com/repos/metalwihen/Kayako-Android-SDK", "Date": "2017-05-24T07:26:53Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(readEndOfStream)) { asyncTcpSocket.read(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6684/buggy-version/async-streams.src.main.java.io.datakernel.stream.net.MessagingWithBinaryStreaming.java", "BodyUseAPI": [], "Fixed commit": "c7d7780efd73b77994b959e6ac9f6a5a55fe88d2", "Url": "https://api.github.com/repos/softindex/datakernel", "Date": "2016-08-30T19:30:11Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == o) { return true; }else if (!(o instanceof com.staticbloc.events.Event)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1432/buggy-version/src.com.staticbloc.events.Event.java", "BodyUseAPI": [], "Fixed commit": "0da8687044c9bb5e6e4be646bcc6c79e6d7f1c91", "Url": "https://api.github.com/repos/eygraber/events", "Date": "2014-09-22T12:57:01Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.redhat.ceylon.compiler.typechecker.model.ProducedType.getDeclaration()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tn.isAlias()) { return com.redhat.ceylon.eclipse.code.correct.CorrectionUtil.defaultValue(unit, tn.getExtendedType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5772/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.src.com.redhat.ceylon.eclipse.code.correct.CorrectionUtil.java", "BodyUseAPI": ["com.redhat.ceylon.eclipse.code.correct.CorrectionUtil.defaultValue(com.redhat.ceylon.compiler.typechecker.model.Unit,tn.getExtendedType())", "com.redhat.ceylon.compiler.typechecker.model.TypeDeclaration.getExtendedType()"], "Fixed commit": "d0523f6feb6cc2b3947e02806e77b282f01e8eec", "Url": "https://api.github.com/repos/ceylon/ceylon-ide-eclipse", "Date": "2014-07-29T20:48:13Z"},
{"Line": "=>451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getStringExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (reason != null) { if (reason.equals(\"homekey\")) log.e(\"home key\"); else if (reason.equals(\"recentapps\")) log.e(\"recentapps key\"); else log.e(\"other\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8295/buggy-version/Savigation.src.com.tochange.yang.sector.service.FloatWindowService.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "458d993054c513b6615b8bd0aa9f874d87a928d9", "Url": "https://api.github.com/repos/tochange/Savigation", "Date": "2014-06-10T12:24:29Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.bananaco.bpermissions.imp.Calculable.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (name.equals(\"\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3928/buggy-version/bukkit.src.main.java.de.bananaco.bpermissions.imp.YamlWorld.java", "BodyUseAPI": [], "Fixed commit": "5eda547c87028d7a1b9bb94d7aec372e0cdf3bc4", "Url": "https://api.github.com/repos/rymate1234/bPermissions", "Date": "2016-03-05T22:12:52Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (right < (left)) { actualLeft = actualRight; actualRight = left; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5950/buggy-version/app.src.main.java.multitouch.multitouchapp.Rectangle.java", "BodyUseAPI": [], "Fixed commit": "f9e6f2885a6bf05e69b75fe5872b2aff4199d91f", "Url": "https://api.github.com/repos/lwinston7/multitouch", "Date": "2016-11-16T04:11:37Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bottom < (top)) { actualTop = actualBottom; actualBottom = top; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5950/buggy-version/app.src.main.java.multitouch.multitouchapp.Rectangle.java", "BodyUseAPI": [], "Fixed commit": "f9e6f2885a6bf05e69b75fe5872b2aff4199d91f", "Url": "https://api.github.com/repos/lwinston7/multitouch", "Date": "2016-11-16T04:11:37Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(weaponInfo.contains(weapon))) weaponInfo.add(weapon);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8242/buggy-version/RPTool.app.src.main.java.com.example.khaldir.rptool.WiFiDirect.java", "BodyUseAPI": ["java.util.List<com.example.khaldir.rptool.WeaponItem>.add(com.example.khaldir.rptool.WeaponItem)"], "Fixed commit": "263dfa2915bfe0df2910b3f1a56275843a6e37c5", "Url": "https://api.github.com/repos/Khaldir/RPTool", "Date": "2017-05-07T18:30:44Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.common.model.TRSRTransformation.toItemTransform()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (0.1 <= (((java.lang.Math.abs(((itemTransform7.rotation.x) - (itemTransform7rev.rotation.x)))) + (java.lang.Math.abs(((itemTransform7.rotation.y) - (itemTransform7rev.rotation.y))))) + (java.lang.Math.abs(((itemTransform7.rotation.z) - (itemTransform7rev.rotation.z)))))) { java.lang.System.out.format(\"[%f, %f, %f] -> [%f, %f, %f]\\n\", itemTransform7.rotation.x, itemTransform7.rotation.y, itemTransform7.rotation.z, itemTransform7rev.rotation.x, itemTransform7rev.rotation.y, itemTransform7rev.rotation.z); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/284/buggy-version/src.main.java.itemtransformhelper.MenuItemCameraTransforms.java", "BodyUseAPI": ["java.io.PrintStream.format(java.lang.String,itemTransform7.rotation.x,itemTransform7.rotation.y,itemTransform7.rotation.z,itemTransform7rev.rotation.x,itemTransform7rev.rotation.y,itemTransform7rev.rotation.z)"], "Fixed commit": "c9059d3275b386b98835bbfd1e2a333f58e3a628", "Url": "https://api.github.com/repos/TheGreyGhost/ItemTransformHelper", "Date": "2016-08-08T11:56:49Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isCircle())) { canvas.drawCircle(mWheelCurX, mWheelCurY, mPointerRadius, mPointerPaint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/29/buggy-version/library.src.main.java.com.tomduan.library.CircleSeekBar.java", "BodyUseAPI": [], "Fixed commit": "ac3978e9338506868cd1a943cdb33703ec23d045", "Url": "https://api.github.com/repos/DuanTzXavier/conciseclock", "Date": "2016-04-14T02:59:32Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (started) { com.onyx.quadcopter.control.LOGGER.debug(((getName()) + \" started!\")); }else { com.onyx.quadcopter.control.LOGGER.debug(((getName()) + \" stopped!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3427/buggy-version/com.onyx.quadcopter.src.main.java.com.onyx.quadcopter.control.PidController.java", "BodyUseAPI": [], "Fixed commit": "6258e2984eea47e3f5f0fe0502476fd1ab04b8c7", "Url": "https://api.github.com/repos/javachaos/Onyx", "Date": "2016-05-17T05:16:49Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cdom = currentDoms.get(key)) != null) fw.write(((cdom.toString()) + \"\\n\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/9064/buggy-version/src.info.radm.scanner.hmmer.HmmerParser.java", "BodyUseAPI": [], "Fixed commit": "390fd475619c937ef33e810f96f4dae31388c7cd", "Url": "https://api.github.com/repos/radmoore/PfamScanner", "Date": "2012-07-13T13:08:34Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cdom = currentDoms.get(key)) != null) fw.write(((cdom.toString()) + \"\\n\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/9064/buggy-version/src.info.radm.scanner.hmmer.HmmerParser.java", "BodyUseAPI": [], "Fixed commit": "390fd475619c937ef33e810f96f4dae31388c7cd", "Url": "https://api.github.com/repos/radmoore/PfamScanner", "Date": "2012-07-13T13:08:34Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cdom = currentDoms.get(key)) != null) fw.write(((cdom.toString()) + \"\\n\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/9064/buggy-version/src.info.radm.scanner.hmmer.HmmerParser.java", "BodyUseAPI": [], "Fixed commit": "390fd475619c937ef33e810f96f4dae31388c7cd", "Url": "https://api.github.com/repos/radmoore/PfamScanner", "Date": "2012-07-13T13:08:34Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getFile()) != null) { return getFile().toURI().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/688/buggy-version/xmlconnector.src.main.java.org.openflexo.technologyadapter.xml.rm.XMLFileResourceImpl.java", "BodyUseAPI": [], "Fixed commit": "7b0579ca50fa05d44c1c2472c609f2c4adecf2c1", "Url": "https://api.github.com/repos/openflexo-team/openflexo-technology-adapters", "Date": "2014-02-17T14:03:12Z"},
{"Line": "=>545", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Long, pt.ulisboa.tecnico.amorphous.types.NetworkHost>.get(Host.getDeviceKey())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (host != null) { if ((Host.getIPv4Addresses().length) > 0) { int rawip = Host.getIPv4Addresses()[0].getInt(); for (org.projectfloodlight.openflow.types.IPv4Address IPAddress : Host.getIPv4Addresses()) { rawip = IPAddress.getInt(); if ((rawip > 0) && (((host.getIPAddress()) == null) || (rawip != (host.getIPAddress())))) { this.removeLocalHost(Host); return this.addLocalHost(Host); } } } }else { this.addLocalHost(Host); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/360/buggy-version/src.main.java.pt.ulisboa.tecnico.amorphous.internal.state.LocalStateService.java", "BodyUseAPI": ["pt.ulisboa.tecnico.amorphous.types.NetworkHost.getIPAddress()", "pt.ulisboa.tecnico.amorphous.types.NetworkHost.getIPAddress()"], "Fixed commit": "b312cf0e540b61b19c1a46953a018642b08cf322", "Url": "https://api.github.com/repos/fazevedo86/floodlight", "Date": "2015-10-14T18:25:09Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imagesPath) != null) if ((imagesPath.length) > 1) imageView.setImageBitmap(android.graphics.BitmapFactory.decodeFile((((file.getPath()) + \"/\") + (imagesPath[i]))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7885/buggy-version/app.src.main.java.com.example.sertac.androidcustomcamera.GalleryActivity.java", "BodyUseAPI": [], "Fixed commit": "2101eeeda634e05ae75f730fad532f3697750f0c", "Url": "https://api.github.com/repos/sertacyardimci/AndroidCustomCamera", "Date": "2017-12-04T07:04:34Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mClickedSnapePosition) == 0) { mClickedSnapePosition = (mSnapeLib.size()) - 1; }else { (mClickedSnapePosition)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3091/buggy-version/app.src.main.java.io.github.mwaggett.snapechat.ui.ShowPhotosActivity.java", "BodyUseAPI": [], "Fixed commit": "a0be8fec1d3b78bbdf92795a87dfafe2827d28cc", "Url": "https://api.github.com/repos/mwaggett/epicodus_android_snapechat", "Date": "2015-11-03T22:15:00Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mClickedSnapePosition) == ((mSnapeLib.size()) - 1)) { mClickedSnapePosition = 0; }else { (mClickedSnapePosition)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3091/buggy-version/app.src.main.java.io.github.mwaggett.snapechat.ui.ShowPhotosActivity.java", "BodyUseAPI": [], "Fixed commit": "a0be8fec1d3b78bbdf92795a87dfafe2827d28cc", "Url": "https://api.github.com/repos/mwaggett/epicodus_android_snapechat", "Date": "2015-11-03T22:15:00Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Patient.findHealthFriends(MyConnection)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((prospectiveFriends.size()) > 0) { int fid = java.lang.Integer.parseInt(ODL.input.nextLine()); HealthFriend.insert(pid, prospectiveFriends.get((fid - 1)).pid, ODL.myConn); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8864/buggy-version/src.ODL.java", "BodyUseAPI": ["java.util.List<Patient>.get(int)", "HealthFriend.insert(int,prospectiveFriends.get((fid - 1)).pid,MyConnection)"], "Fixed commit": "19705b0b17aefeb4b85c02336ee801f49291a7a9", "Url": "https://api.github.com/repos/soniaghanekar/ODL", "Date": "2013-11-03T03:50:29Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (column == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6719/buggy-version/health.src.main.java.com.health.visuals.BoxPlot.java", "BodyUseAPI": [], "Fixed commit": "69c1782016a3a4381768f758ad97aa533cb9438b", "Url": "https://api.github.com/repos/adamIqbal/Health", "Date": "2015-06-18T09:35:48Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (responseObj.getBoolean(\"isLoggedIn\")) { if (!(responseObj.isNull(\"hasFinishedSetup\"))) { if (!(responseObj.getBoolean(\"hasFinishedSetup\"))) { openSetupActivities(); }else { openMainActivity(); } }else { openLoginActivity(); } }else { openLoginActivity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2959/buggy-version/app.src.main.java.com.melodies.bandup.SplashActivity.java", "BodyUseAPI": ["org.json.JSONObject.getBoolean(java.lang.String)", "org.json.JSONObject.isNull(java.lang.String)"], "Fixed commit": "6961d24621cd8e4e91f4078e0a41d7f45a9ac884", "Url": "https://api.github.com/repos/BandUp/band-up-android", "Date": "2016-10-30T01:54:54Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(response.isEmpty())) { final java.lang.String[] lines = response.split(\"\\n\"); for (java.lang.String line : lines) { line = line.replaceFirst(\"^key:\", \"\"); line = line.substring(0, ((line.length()) - 1)); final java.lang.String[] portions = line.split(\":value:\"); map.put(portions[0], portions[1]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2458/buggy-version/pandora-core.src.main.java.me.theyinspire.pandora.core.datastore.cmd.impl.DataStoreCommandDeserializer.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "0b9b6172ff85793a8acdb3df4b64ebe9fc5d3e33", "Url": "https://api.github.com/repos/zsadeghi/pandora", "Date": "2017-11-18T04:13:48Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (seconds > 9) { newTime = (minutes + \":\") + seconds; }else { newTime = (minutes + \":0\") + seconds; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1697/buggy-version/app.src.main.java.scottnickamanda.sliderpuzzle.HighScoresActivity.java", "BodyUseAPI": [], "Fixed commit": "2df02f235b1c13a33dfde1b1b48f5e68e22a6319", "Url": "https://api.github.com/repos/wilsonsc/sliderPuzzle", "Date": "2016-04-19T15:02:48Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.android.SdkConstants.CURRENT_PLATFORM) == (com.android.SdkConstants.PLATFORM_WINDOWS)) { ndkOut = ndkOut.replace('\\\\', '/'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7850/buggy-version/build-system.gradle-core.src.main.java.com.android.build.gradle.tasks.NdkBuildExternalNativeJsonGenerator.java", "BodyUseAPI": [], "Fixed commit": "c46f357d24e8b84aaf7567cd2a9714863c3e1628", "Url": "https://api.github.com/repos/JetBrains/adt-tools-base", "Date": "2016-09-21T17:36:08Z"},
{"Line": "=>661", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((concreteGameType.getGameTypeList().size()) == 1) { evaluateGame(activePlayerWhoTookCards); continuePlaying = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3209/buggy-version/UltiCardGame.src.ulti.UltiGame.java", "BodyUseAPI": [], "Fixed commit": "f43d5e58dcea13bf70952b143d860a79219360e4", "Url": "https://api.github.com/repos/enepeti/szoftarch-ulti", "Date": "2015-11-29T16:57:01Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (startNDX == 0) { d.put(cB.substring(startNDX, cB.indexOf('=', startNDX)), cB.substring(((cB.indexOf('=', startNDX)) + 2), cB.length())); }else { startNDX = (cB.lastIndexOf(',')) + 2; d.put(cB.substring(startNDX, cB.indexOf('=', startNDX)), cB.substring(((cB.indexOf('=', startNDX)) + 2), cB.length())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7745/buggy-version/src.cpsc215project1.GameReader.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(char,int)", "java.lang.String.substring(int,int)", "java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.lang.String.indexOf(char,int)"], "Fixed commit": "22ad580a60a7d94ec466676b4d6057e1b3abe57b", "Url": "https://api.github.com/repos/antogon/CPSC215Project1", "Date": "2011-10-24T21:14:32Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (startNDX == 0) { d.put(cB.substring(startNDX, cB.indexOf('=', startNDX)), cB.substring(((cB.indexOf('=', startNDX)) + 2), cB.length())); }else { startNDX = (cB.lastIndexOf(',')) + 2; d.put(cB.substring(startNDX, cB.indexOf('=', startNDX)), cB.substring(((cB.indexOf('=', startNDX)) + 2), cB.length())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7745/buggy-version/src.cpsc215project1.GameReader.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.lang.String.indexOf(char,int)", "java.lang.String.indexOf(char,int)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)"], "Fixed commit": "22ad580a60a7d94ec466676b4d6057e1b3abe57b", "Url": "https://api.github.com/repos/antogon/CPSC215Project1", "Date": "2011-10-24T21:14:32Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (startNDX == 0) { d.put(cB.substring(startNDX, cB.indexOf('=', startNDX)), cB.substring(((cB.indexOf('=', startNDX)) + 2), cB.length())); }else { startNDX = (cB.lastIndexOf(',')) + 2; d.put(cB.substring(startNDX, cB.indexOf('=', startNDX)), cB.substring(((cB.indexOf('=', startNDX)) + 2), cB.length())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7745/buggy-version/src.cpsc215project1.GameReader.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(char,int)", "java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.indexOf(char,int)"], "Fixed commit": "22ad580a60a7d94ec466676b4d6057e1b3abe57b", "Url": "https://api.github.com/repos/antogon/CPSC215Project1", "Date": "2011-10-24T21:14:32Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (scanner.hasNext()) { scanner.nextLine(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1450/buggy-version/src.main.java.Main.java", "BodyUseAPI": ["java.util.Scanner.nextLine()"], "Fixed commit": "dfa04d2dc1667faaae3030d59153f3795486a72f", "Url": "https://api.github.com/repos/landaire/cscd350-minesweeper", "Date": "2015-09-30T17:37:34Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((UltimateRace.RaceTrack.rsound.getState()) == (jig.engine.audio.AudioState.PAUSED)) UltimateRace.RaceTrack.rsound.resume(); else UltimateRace.RaceTrack.rsound.loop(0.4, 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/121/buggy-version/src.UltimateRace.RaceTrack.java", "BodyUseAPI": ["jig.engine.audio.jsound.AudioStream.loop(double,int)", "jig.engine.audio.jsound.AudioStream.resume()"], "Fixed commit": "e4a2651ce748b256d5ea5b07a9989124ebec3424", "Url": "https://api.github.com/repos/squalami/UltimateRace", "Date": "2012-12-03T10:34:31Z"},
{"Line": "=>541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (value != null) { queryParameters.put(key, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2919/buggy-version/src.gmo.cloud.api.GmoCloud.java", "BodyUseAPI": ["java.util.TreeMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "aab14535068127742f73e6c8d92d077894ac8464", "Url": "https://api.github.com/repos/yukoba/GmoCloudAPI", "Date": "2012-09-30T08:06:38Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jetbrains.php.lang.psi.elements.FunctionReference.getParameters()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((params[1]) instanceof com.jetbrains.php.lang.psi.elements.impl.StringLiteralExpressionImpl) { holder.registerProblem(reference, message, ProblemHighlightType.LIKE_DEPRECATED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1471/buggy-version/src.main.java.com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.TypesCastingWithFunctionsInspector.java", "BodyUseAPI": [], "Fixed commit": "5d8660b84c38a09ee19d734fd21b75e0577789b5", "Url": "https://api.github.com/repos/kalessil/phpinspectionsea", "Date": "2016-11-07T08:42:08Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ahsgaming.valleyofbones.units.Prototypes.getPlayerCanBuild(game.getPlayer(),game.getNetController().getGameController())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(items.equals(this.items))) { this.items = items; dirty = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5978/buggy-version/src.com.ahsgaming.valleyofbones.screens.panels.BuildPanel.java", "BodyUseAPI": [], "Fixed commit": "07b756be9fec7a113d09417f143ae1b2f95a6000", "Url": "https://api.github.com/repos/fbcouch/valley-of-bones", "Date": "2013-05-18T05:49:20Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((presenter) != null) presenter.onDestroy();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6349/buggy-version/app.src.main.java.com.naks.vk.view.fragment.NewsPageFragment.java", "BodyUseAPI": [], "Fixed commit": "528dbb34894007c49697a8e9ffdf7bb99f43d667", "Url": "https://api.github.com/repos/Sergey11166/vk", "Date": "2016-04-01T22:44:09Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(isInAccessibleTile(player.getGlobalX(), player.getGlobalY()))) { java.awt.Point p = getNearestAccessiblePoint(player.getGlobalX(), player.getGlobalY(), player); player.setGlobalLocation(((int) (p.getX())), ((int) (p.getY()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2628/buggy-version/DugeonGeneration.src.world.DungeonMap.java", "BodyUseAPI": ["player.Player.getGlobalY()", "world.DungeonMap.getNearestAccessiblePoint(player.getGlobalX(),player.getGlobalY(),player.Player)", "player.Player.setGlobalLocation(double,double)", "player.Player.getGlobalX()"], "Fixed commit": "e02a3207b35e545dca5136207a52ecd8de09dcb3", "Url": "https://api.github.com/repos/x2spieler/GreenfootTeam6", "Date": "2015-12-10T09:30:18Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (paymentResponseItem.getTransactionSuccess()) { remainingTotal = remainingTotal.subtract(paymentResponseItem.getTransactionAmount()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3722/buggy-version/core.broadleaf-framework.src.main.java.org.broadleafcommerce.core.payment.service.workflow.PaymentActivity.java", "BodyUseAPI": ["org.broadleafcommerce.common.money.Money.subtract(paymentResponseItem.getTransactionAmount())", "org.broadleafcommerce.core.payment.domain.PaymentResponseItem.getTransactionAmount()"], "Fixed commit": "d26adfb5961bb2e5895c4f821d5093eef620c1e6", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2013-04-09T01:10:19Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (paymentResponseItem.getTransactionAmount().lessThan(transactionTotal.getAmount())) { throw new org.broadleafcommerce.core.payment.service.exception.InsufficientFundsException(java.lang.String.format(\"Transaction amount was [%s] but paid amount was [%s]\", transactionTotal.getAmount(), paymentResponseItem.getTransactionAmount())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3722/buggy-version/core.broadleaf-framework.src.main.java.org.broadleafcommerce.core.payment.service.workflow.PaymentActivity.java", "BodyUseAPI": ["org.broadleafcommerce.common.money.Money.getAmount()", "org.broadleafcommerce.core.payment.domain.PaymentResponseItem.getTransactionAmount()", "java.lang.String.format(java.lang.String,transactionTotal.getAmount(),paymentResponseItem.getTransactionAmount())"], "Fixed commit": "d26adfb5961bb2e5895c4f821d5093eef620c1e6", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2013-04-09T01:10:19Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (dorkbox.util.OS.isWindows()) { dorkbox.util.tray.SystemTray.TRAY_SIZE -= 4; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1708/buggy-version/src.dorkbox.util.tray.SystemTray.java", "BodyUseAPI": [], "Fixed commit": "6d85d8fbd794dcfb450b9b0ada55172df9926b7e", "Url": "https://api.github.com/repos/dorkbox/SystemTray", "Date": "2015-01-26T12:55:22Z"},
{"Line": "=>833", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((name.length()) > (com.emc.storageos.api.service.impl.resource.NetworkSystemService.ZONE_NAME_LENGTH)) { com.emc.storageos.api.service.impl.resource.NetworkSystemService._log.info(\"Zone name {} is not valid for device type {}\", name, deviceType); throw APIException.badRequests.nameZoneLongerThanAllowed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4641/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.NetworkSystemService.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "5115795b0769d1cbfb03f068a1032389453bc184", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-11-02T21:00:01Z"},
{"Line": "=>949", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (ttr != null) list.append(ttr);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5107/buggy-version/OpenJML.src.com.sun.tools.javac.parser.JmlParser.java", "BodyUseAPI": ["com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree>.append(com.sun.tools.javac.tree.JCTree)"], "Fixed commit": "b8d3b1c01e538e4eb16f72fad6794dca3a5c91ec", "Url": "https://api.github.com/repos/OpenJML/OpenJML", "Date": "2017-04-06T23:33:12Z"},
{"Line": "=>3662", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sun.tools.javac.parser.JavacParser.ident()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((name == (names.error)) || (type instanceof com.sun.tools.javac.tree.JCTree.JCErroneous)) { method = syntaxError(token.pos, null, \"illegal.start.of.expr\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5107/buggy-version/OpenJDK.trunk.langtools.src.share.classes.com.sun.tools.javac.parser.JavacParser.java", "BodyUseAPI": [], "Fixed commit": "b8d3b1c01e538e4eb16f72fad6794dca3a5c91ec", "Url": "https://api.github.com/repos/OpenJML/OpenJML", "Date": "2017-04-06T23:33:12Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connectionChecker.isNetworkOnline(this)) { profileIoHandler.loadSpecificProfileForView(userNameValue, this, profilePicture, userName, biography, twitter, facebook); }else { android.widget.Toast.makeText(getApplicationContext(), \"Offline.\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7383/buggy-version/App.src.activity.OtherProfilePageActivity.java", "BodyUseAPI": [], "Fixed commit": "b70b097f72b0e47322e238ae2bbc3ec6e7638048", "Url": "https://api.github.com/repos/CMPUT301W14T14/Team14RecipeFinder", "Date": "2014-04-02T00:19:21Z"},
{"Line": "=>732", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value.equals(\"monkey's audio\")) { format = net.pms.configuration.FormatConfiguration.MONKEYS_AUDIO; }else if (value.contains(\"musepack\")) { format = net.pms.configuration.FormatConfiguration.MPC; }else if (value.contains(\"wavpack\")) { format = net.pms.configuration.FormatConfiguration.WAVPACK; }else if (value.contains(\"mlp\")) { format = net.pms.configuration.FormatConfiguration.MLP; }else if (value.equals(\"openmg\")) { format = net.pms.configuration.FormatConfiguration.ATRAC; }else if (value.startsWith(\"atrac\")) { format = net.pms.configuration.FormatConfiguration.ATRAC; }else if (((media.getContainer()) != null) && (media.getContainer().equals(FormatConfiguration.WMV))) { if ((((media.getCodecV()) != null) && ((!(media.getCodecV().equals(FormatConfiguration.WMV))) || (!(media.getCodecV().equals(FormatConfiguration.VC1))))) || (((audio.getCodecA()) != null) && (((((!(audio.getCodecA().equals(FormatConfiguration.WMA))) || (!(audio.getCodecA().equals(FormatConfiguration.WMAPRO)))) || (!(audio.getCodecA().equals(FormatConfiguration.WMALOSSLESS)))) || (!(audio.getCodecA().equals(FormatConfiguration.WMAVOICE)))) || (!(audio.getCodecA().equals(FormatConfiguration.WMA10)))))) { media.setContainer(FormatConfiguration.ASF); } }else if (value.equals(\"nellymoser\")) { format = net.pms.configuration.FormatConfiguration.NELLYMOSER; }else if (value.equals(\"jpeg\")) { format = net.pms.configuration.FormatConfiguration.JPG; }else if (value.equals(\"png\")) { format = net.pms.configuration.FormatConfiguration.PNG; }else if (value.equals(\"gif\")) { format = net.pms.configuration.FormatConfiguration.GIF; }else if (value.equals(\"bitmap\")) { format = net.pms.configuration.FormatConfiguration.BMP; }else if (value.equals(\"tiff\")) { format = net.pms.configuration.FormatConfiguration.TIFF; }else if ((containsIgnoreCase(value, \"@l\")) && (streamType == (net.pms.dlna.MediaInfo.StreamType.Video))) { media.setAvcLevel(net.pms.dlna.LibMediaInfoParser.getAvcLevel(value)); media.setH264Profile(net.pms.dlna.LibMediaInfoParser.getAvcProfile(value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/310/buggy-version/src.main.java.net.pms.dlna.LibMediaInfoParser.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "net.pms.dlna.DLNAMediaInfo.setAvcLevel(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.contains(java.lang.String)", "net.pms.dlna.DLNAMediaInfo.setH264Profile(java.lang.String)", "java.lang.String.equals(java.lang.String)", "net.pms.dlna.LibMediaInfoParser.getAvcLevel(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.equals(java.lang.String)", "net.pms.dlna.LibMediaInfoParser.containsIgnoreCase(java.lang.String,java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "net.pms.dlna.LibMediaInfoParser.getAvcProfile(java.lang.String)"], "Fixed commit": "7228898ec024e3a6cdf44ab9a19334edc8798d3c", "Url": "https://api.github.com/repos/Sami32/UniversalMediaServer", "Date": "2017-09-15T03:27:16Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(c.equals(source))) { qubl3ss.Message connections = new qubl3ss.MyMessage((\"@\" + (c.getAddress()))); conn.send(connections); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4033/buggy-version/src.qubl3ss.MyServer.java", "BodyUseAPI": ["qubl3ss.HostedConnection.getAddress()"], "Fixed commit": "4c54ef3e80d4d8e602e0e0d863abb26500bdad3e", "Url": "https://api.github.com/repos/talsemgeest/qubl3ss", "Date": "2013-04-30T23:25:20Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cloudstar.model.Result.getDataToCompareTo()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (result2Date == null) { return -(result.getTitle().compareTo(result2.getTitle())); }else { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3237/buggy-version/CloudStarProject.CloudStar.src.main.java.com.cloudstar.model.ResultChronologicalComparator.java", "BodyUseAPI": [], "Fixed commit": "4065c10c6d049c63d21a464c7a8100e242cab985", "Url": "https://api.github.com/repos/Cloud-Star/cloudstar-android", "Date": "2014-02-03T01:53:44Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.imixs.workflow.ItemCollection.getItemValueString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(sEmail.isEmpty())) { pattern = java.util.regex.Pattern.compile(org.imixs.marty.plugins.ProfilePlugin.EMAIL_PATTERN); matcher = pattern.matcher(sEmail); if (!(matcher.matches())) { throw new org.imixs.workflow.exceptions.PluginException(org.imixs.marty.plugins.ProfilePlugin.class.getSimpleName(), org.imixs.marty.plugins.ProfilePlugin.INVALID_EMAIL, \"Invalid Email Address\", new java.lang.Object[]{ profile.getItemValueString(\"txtEmail\") }); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/739/buggy-version/imixs-marty-ejb.src.main.java.org.imixs.marty.plugins.ProfilePlugin.java", "BodyUseAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Fixed commit": "1760de6311986695564c562c2d1d733f5fd44da0", "Url": "https://api.github.com/repos/imixs/imixs-marty", "Date": "2014-04-15T21:40:39Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((params.aid) != null) && ((params.aid.getAudioProperties().getNumberOfChannels()) >= 8)) && ((params.aid.isAACLC()) || (params.aid.isHEAAC()))) { transcodeOptions.add(\"-strict\"); transcodeOptions.add(\"1\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2980/buggy-version/src.main.java.net.pms.encoders.FFMpegVideo.java", "BodyUseAPI": [], "Fixed commit": "62a38ddbd7d79e0e35f14fe670b6605bc15958e3", "Url": "https://api.github.com/repos/Sami32/UniversalMediaServer", "Date": "2017-11-16T03:12:46Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNotBlank(value)) { currentAudioTrack.getAudioProperties().setNumberOfChannels(net.pms.dlna.LibMediaInfoParser.MI.Get(audio, i, \"Channel(s)_Original\")); }else { currentAudioTrack.getAudioProperties().setNumberOfChannels(net.pms.dlna.LibMediaInfoParser.MI.Get(audio, i, \"Channel(s)\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2980/buggy-version/src.main.java.net.pms.dlna.LibMediaInfoParser.java", "BodyUseAPI": [], "Fixed commit": "62a38ddbd7d79e0e35f14fe670b6605bc15958e3", "Url": "https://api.github.com/repos/Sami32/UniversalMediaServer", "Date": "2017-11-16T03:12:46Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { parseArguments(getArguments()); arguments = getArguments(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2441/buggy-version/app.src.main.java.au.com.taaffe.spotifystreamer.PlayerDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "1a774a30f62dae2557ec6ef90322d50f0683d22d", "Url": "https://api.github.com/repos/eamontaaffe/SpotifyStreamer", "Date": "2015-08-10T03:41:29Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((in.peek()) == '.') && (in.hasNext())) && (!(aya.parser.Parser.isDigit(in.peek(1))))) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1550/buggy-version/src.aya.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "ccf58e00bffc5ab84bc4c9d1c75296e25266f1aa", "Url": "https://api.github.com/repos/nick-paul/aya-lang", "Date": "2017-02-26T15:28:26Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.block.state.IBlockState.getBlock()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((block instanceof net.minecraft.block.BlockRedstoneOre) || (block instanceof net.minecraft.block.BlockOre)) || (blocks.contains(block))) { if ((((playermp.worldObj.getBlockState(pos.up()).getBlock()) instanceof net.minecraft.block.BlockRedstoneOre) || ((playermp.worldObj.getBlockState(pos.up()).getBlock()) instanceof net.minecraft.block.BlockOre)) || (blocks.contains(playermp.worldObj.getBlockState(pos.up()).getBlock()))) { this.breaking(pos.up(), playermp); } if ((((playermp.worldObj.getBlockState(pos.down()).getBlock()) instanceof net.minecraft.block.BlockRedstoneOre) || ((playermp.worldObj.getBlockState(pos.down()).getBlock()) instanceof net.minecraft.block.BlockOre)) || (blocks.contains(playermp.worldObj.getBlockState(pos.down()).getBlock()))) { this.breaking(pos.down(), playermp); } if ((((playermp.worldObj.getBlockState(pos.north()).getBlock()) instanceof net.minecraft.block.BlockRedstoneOre) || ((playermp.worldObj.getBlockState(pos.north()).getBlock()) instanceof net.minecraft.block.BlockOre)) || (blocks.contains(playermp.worldObj.getBlockState(pos.north()).getBlock()))) { this.breaking(pos.north(), playermp); } if ((((playermp.worldObj.getBlockState(pos.south()).getBlock()) instanceof net.minecraft.block.BlockRedstoneOre) || ((playermp.worldObj.getBlockState(pos.south()).getBlock()) instanceof net.minecraft.block.BlockOre)) || (blocks.contains(playermp.worldObj.getBlockState(pos.south()).getBlock()))) { this.breaking(pos.south(), playermp); } if ((((playermp.worldObj.getBlockState(pos.west()).getBlock()) instanceof net.minecraft.block.BlockRedstoneOre) || ((playermp.worldObj.getBlockState(pos.west()).getBlock()) instanceof net.minecraft.block.BlockOre)) || (blocks.contains(playermp.worldObj.getBlockState(pos.west()).getBlock()))) { this.breaking(pos.west(), playermp); } if ((((playermp.worldObj.getBlockState(pos.east()).getBlock()) instanceof net.minecraft.block.BlockRedstoneOre) || ((playermp.worldObj.getBlockState(pos.east()).getBlock()) instanceof net.minecraft.block.BlockOre)) || (blocks.contains(playermp.worldObj.getBlockState(pos.east()).getBlock()))) { this.breaking(pos.east(), playermp); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7491/buggy-version/src.main.java.net.hycrafthd.teambattle.item.ItemTeambattlePickAxe.java", "BodyUseAPI": ["java.util.List<net.minecraft.block.Block>.contains(playermp.worldObj.getBlockState(pos.north()).getBlock())", "java.util.List<net.minecraft.block.Block>.contains(playermp.worldObj.getBlockState(pos.east()).getBlock())", "java.util.List<net.minecraft.block.Block>.contains(playermp.worldObj.getBlockState(pos.south()).getBlock())", "java.util.List<net.minecraft.block.Block>.contains(playermp.worldObj.getBlockState(pos.up()).getBlock())", "java.util.List<net.minecraft.block.Block>.contains(playermp.worldObj.getBlockState(pos.down()).getBlock())", "java.util.List<net.minecraft.block.Block>.contains(playermp.worldObj.getBlockState(pos.west()).getBlock())"], "Fixed commit": "449f1e4cf123600fc960707d41b8be3f99d086f5", "Url": "https://api.github.com/repos/HyCraftHD/TeambattleMod", "Date": "2016-03-10T18:30:51Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(net.sacredlabyrinth.Phaed.PreciousStones.PreciousStones.getInstance().getForceFieldManager().isField(field.getField().getBlock()))) { field.setError(); this.stopMe(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8773/buggy-version/src.main.java.me.scriblon.plugins.expensivestones.tasks.UpKeeper.java", "BodyUseAPI": ["me.scriblon.plugins.expensivestones.ExpensiveField.setError()"], "Fixed commit": "9431b6ff45c9f87b0816e4a388060b798c58adce", "Url": "https://api.github.com/repos/Scribblon/ExpensiveStones", "Date": "2011-11-26T16:07:32Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6620/buggy-version/mobile.src.main.java.treehou.se.habit.ui.SitemapListFragment.java", "BodyUseAPI": [], "Fixed commit": "6c85fafb7e243f78840eeb53b64c6f07c9a6ec68", "Url": "https://api.github.com/repos/Human/3House", "Date": "2015-08-05T22:46:56Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6620/buggy-version/mobile.src.main.java.treehou.se.habit.ui.SitemapListFragment.java", "BodyUseAPI": [], "Fixed commit": "6c85fafb7e243f78840eeb53b64c6f07c9a6ec68", "Url": "https://api.github.com/repos/Human/3House", "Date": "2015-08-05T22:46:56Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((buttonCell.getItem()) == null) { buttonCell.setCommand(\"\"); }else if ((buttonCell.getItem().getType().equals(ItemDB.TYPE_STRING)) || (buttonCell.getItem().getType().equals(ItemDB.TYPE_NUMBER))) { buttonCell.setCommand(txtCommand.getText().toString()); }else if (buttonCell.getItem().getType().equals(ItemDB.TYPE_CONTACT)) { buttonCell.setCommand((tglOnOff.isChecked() ? treehou.se.habit.connector.Constants.COMMAND_OPEN : treehou.se.habit.connector.Constants.COMMAND_CLOSE)); }else { buttonCell.setCommand((tglOnOff.isChecked() ? treehou.se.habit.connector.Constants.COMMAND_ON : treehou.se.habit.connector.Constants.COMMAND_OFF)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6620/buggy-version/mobile.src.main.java.treehou.se.habit.ui.control.config.CellButtonConfigFragment.java", "BodyUseAPI": ["treehou.se.habit.core.db.controller.ButtonCellDB.getItem()", "buttonCell.getItem().getType()", "buttonCell.getItem().getType().equals(ItemDB.TYPE_NUMBER)", "treehou.se.habit.core.db.controller.ButtonCellDB.getItem()", "treehou.se.habit.core.db.controller.ButtonCellDB.setCommand(txtCommand.getText().toString())", "treehou.se.habit.core.db.controller.ButtonCellDB.setCommand((tglOnOff.isChecked() ? treehou.se.habit.connector.Constants.COMMAND_ON : treehou.se.habit.connector.Constants.COMMAND_OFF))", "treehou.se.habit.core.db.controller.ButtonCellDB.setCommand(java.lang.String)", "buttonCell.getItem().getType()", "buttonCell.getItem().getType().equals(ItemDB.TYPE_STRING)", "buttonCell.getItem().getType()", "buttonCell.getItem().getType().equals(ItemDB.TYPE_CONTACT)", "treehou.se.habit.core.db.controller.ButtonCellDB.getItem()", "treehou.se.habit.core.db.controller.ButtonCellDB.setCommand((tglOnOff.isChecked() ? treehou.se.habit.connector.Constants.COMMAND_OPEN : treehou.se.habit.connector.Constants.COMMAND_CLOSE))"], "Fixed commit": "6c85fafb7e243f78840eeb53b64c6f07c9a6ec68", "Url": "https://api.github.com/repos/Human/3House", "Date": "2015-08-05T22:46:56Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAvailable()) { mPlayController.pendingRunWithDelay(this, 0L); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/394/buggy-version/doodle.src.main.java.com.idonans.doodle.player.DoodleViewPlayer.java", "BodyUseAPI": [], "Fixed commit": "8860d3d4e82c88bd951055ac0ef231c682dcd9f1", "Url": "https://api.github.com/repos/idonans/doodle", "Date": "2016-07-08T04:26:01Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s.isActive()) j++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3276/buggy-version/src.main.java.model.Board.java", "BodyUseAPI": [], "Fixed commit": "27180192e8a06e20a64ab3f6220a7519c70e5d19", "Url": "https://api.github.com/repos/arthurlockman/sixeswild", "Date": "2015-04-29T21:34:50Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.ohdm.de.editor.activities.MainActivity.getSystemService(Context.LOCATION_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (locationManager.isProviderEnabled(LocationManager.NETWORK_PROVIDER)) { locationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 0, 0, locationListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3306/buggy-version/app.src.main.java.android.ohdm.de.editor.activities.MainActivity.java", "BodyUseAPI": ["android.location.LocationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER,int,int,android.location.LocationListener)"], "Fixed commit": "6cd6adc1feb1cde68412a2415d71193ea6a50dba", "Url": "https://api.github.com/repos/OpenHistoricalDataMap/OHDMAndroidEditor", "Date": "2015-04-23T14:20:50Z"},
{"Line": "=>1977", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ofbiz.entity.util.EntityUtil.getFirst(delegator.findByAnd(\"GoodIdentification\", org.ofbiz.base.util.UtilMisc.toMap(\"productId\", noVirtualNoVariantProduct.get(\"productId\"), \"goodIdentificationTypeId\", \"ZUCZUG_CODE\")))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.ofbiz.base.util.UtilValidate.isNotEmpty(goodIdentification)) { if (((java.lang.String) (goodIdentification.get(\"idValue\"))).contains(idValue)) { resultList.add(noVirtualNoVariantProduct); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6205/buggy-version/hot-deploy.zuczugcommon.src.com.zuczug.product.ZuczugProductServices.java", "BodyUseAPI": ["org.ofbiz.entity.GenericValue.get(java.lang.String)", "((java.lang.String) (goodIdentification.get(\"idValue\"))).contains(java.lang.String)"], "Fixed commit": "3814e9ba58e36ee6c750c7827e46659446dbc86f", "Url": "https://api.github.com/repos/zuczug/bluemountain", "Date": "2016-06-24T09:22:25Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gnzlt.ucotren.util.Preferences.getValue(com.gnzlt.ucotren.ui.MainActivity,Preferences.PREF_LAST_MENU_ITEM,R.id.nav_train)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((mBinding.bottomNavigation.getMenu().findItem(homeItemId)) == null) { homeMenuItem = mBinding.bottomNavigation.getMenu().findItem(R.id.nav_train); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3743/buggy-version/app.src.main.java.com.gnzlt.ucotren.ui.MainActivity.java", "BodyUseAPI": ["mBinding.bottomNavigation.getMenu().findItem(R.id.nav_train)", "mBinding.bottomNavigation.getMenu()"], "Fixed commit": "f998dfc96d2625e13ba03d5a2b24f6c231585a6e", "Url": "https://api.github.com/repos/Gnzlt/UCOmove", "Date": "2017-07-09T09:13:31Z"},
{"Line": "=>469", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.ws.rs.core.MediaType.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((s.equals(contentTypeSPARQLUpdate)) || ((contentTypeToLang(s)) != null)) { objectType = FEDORA_OBJECT; }else { if (hasContent) { return status(org.fcrepo.http.api.SC_CONFLICT).entity((path + \" is an existing resource!\")).build(); } objectType = FEDORA_DATASTREAM; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8871/buggy-version/fcrepo-http-api.src.main.java.org.fcrepo.http.api.FedoraNodes.java", "BodyUseAPI": [], "Fixed commit": "08c70104aede67d7701c4e8f96e163c5bd9e38ea", "Url": "https://api.github.com/repos/futures/fcrepo4", "Date": "2014-04-17T14:16:07Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((view.getId()) == (R.id.list_item_parent)) { return ((android.view.ViewGroup) (view)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5610/buggy-version/app.src.main.java.com.workouttracker.WorkoutActivity.java", "BodyUseAPI": [], "Fixed commit": "643e24afb38cbfe5d185f4bca294233b92c4724a", "Url": "https://api.github.com/repos/theag/workout-organizer", "Date": "2016-02-04T12:47:40Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((view.getId()) == (R.id.list_item_parent)) { return ((android.view.ViewGroup) (view)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5610/buggy-version/app.src.main.java.com.workouttracker.MainWorkoutActivity.java", "BodyUseAPI": [], "Fixed commit": "643e24afb38cbfe5d185f4bca294233b92c4724a", "Url": "https://api.github.com/repos/theag/workout-organizer", "Date": "2016-02-04T12:47:40Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((view.getId()) == (R.id.list_item_parent)) { return ((android.view.ViewGroup) (view)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5610/buggy-version/app.src.main.java.com.workouttracker.EditActivity.java", "BodyUseAPI": [], "Fixed commit": "643e24afb38cbfe5d185f4bca294233b92c4724a", "Url": "https://api.github.com/repos/theag/workout-organizer", "Date": "2016-02-04T12:47:40Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (closest != null) closest.setMeshID(meshID);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2118/buggy-version/src.raytrace.geometry.meshes.MeshSurface.java", "BodyUseAPI": ["raytrace.data.IntersectionData.setMeshID(int)"], "Fixed commit": "7f6c7e58f0bc82712b1c97c251f747c6178f836b", "Url": "https://api.github.com/repos/CalVR/ParallelRaytracing", "Date": "2014-05-23T16:14:19Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (finalIndex != 0) { if (index == finalIndex) { builder.append(resourceBundle.getString(\"finalJoiner\")); }else if (index != 0) { builder.append(resourceBundle.getString(\"joiner\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2817/buggy-version/src.main.java.uk.co.unclealex.music.message.MessageServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "853d438858cd8534eb5c11bb7025482b3afae8d2", "Url": "https://api.github.com/repos/dcs3apj/flac-manager", "Date": "2012-11-17T12:53:07Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((rowsetBody) != null) && ((rowsetBody.length) > 0)) { for (int i = 0; i < (rowsetBody[0].length); i++) { workbookSheet.autoSizeColumn(i); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7909/buggy-version/saiku-core.saiku-service.src.main.java.org.saiku.service.util.export.excel.ExcelWorksheetBuilder.java", "BodyUseAPI": [], "Fixed commit": "6286bb37ed7f308ac8215333adc1e06d71f90539", "Url": "https://api.github.com/repos/NAUMEN-GP/saiku", "Date": "2014-02-18T11:20:02Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["graphql.ExecutionResult.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (data1 instanceof java.util.concurrent.CompletionStage) { return ((java.util.concurrent.CompletionStage<java.util.Map<java.lang.String, java.lang.Object>>) (data1)).thenApply(( data) -> new graphql.ExecutionResultImpl(data, result.getErrors())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4497/buggy-version/src.main.java.graphql.GraphQLAsync.java", "BodyUseAPI": [], "Fixed commit": "97fc4941651681781b739a89e3f5e1d7ed88e128", "Url": "https://api.github.com/repos/dminkovsky/graphql-java", "Date": "2016-12-03T02:12:52Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedMenu) != 0) mainFrame.switchPanel(this, menuMap.get(selectedMenu));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6179/buggy-version/Client.gui.panel.MenuPanel.java", "BodyUseAPI": [], "Fixed commit": "345daae9cf571ddf41670b241d57e32858b88730", "Url": "https://api.github.com/repos/YosukeHiguchi/Tetrish", "Date": "2017-06-14T14:24:00Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cpw.mods.fml.common.FMLCommonHandler.instance().getSide().equals(Side.CLIENT)) cpw.mods.fml.common.registry.TickRegistry.registerTickHandler(new com.ForgeEssentials.WorldControl.TickHandler(), Side.CLIENT);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/847/buggy-version/src.common.com.ForgeEssentials.WorldControl.WorldControlMain.java", "BodyUseAPI": [], "Fixed commit": "97c9507e49f3db7a7f653e1d4b395a870c3af013", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentialsMain", "Date": "2012-11-01T20:00:58Z"},
{"Line": "=>483", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((list.length()) > 0) { Purchases = list.split(\",\"); for (java.lang.String item : Purchases) { java.lang.String[] temp = item.split(\":\"); PurchaseList.add(temp[0]); PurchaseList.add(temp[1]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7575/buggy-version/src.my.honeypot.Main.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "1c21637e8db1453f036f33204d1361718ea86a84", "Url": "https://api.github.com/repos/glen-mac/HoneyPot", "Date": "2014-08-11T10:07:39Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getStack().getAmount()) <= 1) { amt = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1578/buggy-version/Game.src.Game.inventory.Slot.java", "BodyUseAPI": [], "Fixed commit": "2f0ae5e56bad469d844ac583397d8bb24e0f3103", "Url": "https://api.github.com/repos/maximumtech/Game", "Date": "2013-04-07T08:55:07Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstClaimDone) { sbuild.append(','); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/148/buggy-version/src.org.wikibase.data.Entity.java", "BodyUseAPI": [], "Fixed commit": "d9fd0b945dc8cc641e1067558a7cecad312fc62f", "Url": "https://api.github.com/repos/andreistroe/wiki-java", "Date": "2016-04-05T14:19:13Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ru.hh.resumebuilderbot.question.storage.QuestionsStorage.finished(chatId)) { questionGeneratorsQueue.add(new ru.hh.resumebuilderbot.question.generator.FixedQuestionGenerator(ru.hh.resumebuilderbot.texts.storage.TextId.FINISHED)); return questionGeneratorsQueue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8078/buggy-version/src.main.java.ru.hh.resumebuilderbot.message.handler.AnswerMessageHandler.java", "BodyUseAPI": [], "Fixed commit": "b43e264e33581f63d88111ef995f49a126864118", "Url": "https://api.github.com/repos/hh-school/bot-resume-builder", "Date": "2017-04-03T11:24:34Z"},
{"Line": "=>999", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (outWorst > newOut) { outWorst = newOut; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7076/buggy-version/src.instancefactory.service.Tools.java", "BodyUseAPI": [], "Fixed commit": "26268b3928abbd9df1166cbdbafef2d2f53f38ca", "Url": "https://api.github.com/repos/kartoffelkart/BudgetMinimizationGUI", "Date": "2017-08-19T17:34:47Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) == (frame.PlayFrame.GAME_FINISH)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4441/buggy-version/src.frame.PlayFrame.java", "BodyUseAPI": [], "Fixed commit": "2d26a95439fdc897c4a12641e4ddd9412ad88395", "Url": "https://api.github.com/repos/5730289021-NN/KnightofPuzzle", "Date": "2015-11-29T22:38:43Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((truckingdetail.getTransreportext()) != null) { docsgeneral.setDebit(docsgeneral.getDebit().add(com.vn.ael.webapp.util.ConvertUtil.getNotNullValue(truckingdetail.getTransreportext().getTotal()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8060/buggy-version/src.main.java.com.vn.ael.webapp.controller.AccountingProfitLossController.java", "BodyUseAPI": ["truckingdetail.getTransreportext().getTotal()", "com.vn.ael.persistence.entity.Docsgeneral.setDebit(docsgeneral.getDebit().add(com.vn.ael.webapp.util.ConvertUtil.getNotNullValue(truckingdetail.getTransreportext().getTotal())))", "com.vn.ael.persistence.entity.Truckingdetail.getTransreportext()", "docsgeneral.getDebit().add(com.vn.ael.webapp.util.ConvertUtil.getNotNullValue(truckingdetail.getTransreportext().getTotal()))", "com.vn.ael.webapp.util.ConvertUtil.getNotNullValue(truckingdetail.getTransreportext().getTotal())"], "Fixed commit": "be9fb153e44aab6aad6104ed6429229d16bbd27a", "Url": "https://api.github.com/repos/linhrepo/ael", "Date": "2015-06-21T19:05:53Z"},
{"Line": "=>531", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSheetView().getMeasuredHeight()) < (this.getMeasuredHeight())) { expandSheet(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2219/buggy-version/bottomsheet.src.main.java.com.flipboard.bottomsheet.BottomSheetLayout.java", "BodyUseAPI": [], "Fixed commit": "a3ac2828b6c79e94f8452b76f58741c091fa78d0", "Url": "https://api.github.com/repos/sergio-moura88/bottomsheet", "Date": "2016-02-24T16:27:22Z"},
{"Line": "=>2206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (plot != null) plot.setLegend(\"Sampled Data\\n\", 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5316/buggy-version/src.main.java.sholl.Sholl_Analysis.java", "BodyUseAPI": ["sholl.gui.ShollPlot.setLegend(java.lang.String,int)"], "Fixed commit": "0d34ac0c589623cbad8af5c9c567cd0bd823af06", "Url": "https://api.github.com/repos/tferr/ASA", "Date": "2017-08-30T17:43:53Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(q.showInLog)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/476/buggy-version/AndorsTrail.src.com.gpl.rpg.AndorsTrail.model.GameStatistics.java", "BodyUseAPI": [], "Fixed commit": "f620ca924ee7e44d7e0179e5801b06d45ab4b8ee", "Url": "https://api.github.com/repos/oskarwiksten/andors-trail", "Date": "2013-08-20T17:45:39Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(entityplayer.capabilities.isCreativeMode)) --(entityplayer.getHeldItem().stackSize);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8010/buggy-version/DT-source.slimevoid.dynamictransport.tileentity.TileEntityElevator.java", "BodyUseAPI": ["net.minecraft.entity.player.EntityPlayer.getHeldItem()"], "Fixed commit": "a1c8bf7ef8ea0b6cc87e3a71f61ee5986131ebe1", "Url": "https://api.github.com/repos/SlimeVoid/DynamicTransport", "Date": "2014-01-25T18:00:22Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(entityplayer.capabilities.isCreativeMode)) --(entityplayer.getHeldItem().stackSize);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8010/buggy-version/DT-source.slimevoid.dynamictransport.tileentity.TileEntityFloorMarker.java", "BodyUseAPI": ["net.minecraft.entity.player.EntityPlayer.getHeldItem()"], "Fixed commit": "a1c8bf7ef8ea0b6cc87e3a71f61ee5986131ebe1", "Url": "https://api.github.com/repos/SlimeVoid/DynamicTransport", "Date": "2014-01-25T18:00:22Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((net.minecraft.item.ItemStack.loadItemStackFromNBT(nbttagcompound.getCompoundTag(\"CamoItem\"))) != null) { this.getDataWatcher().updateObject(4, net.minecraft.item.ItemStack.loadItemStackFromNBT(nbttagcompound.getCompoundTag(\"CamoItem\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8010/buggy-version/DT-source.slimevoid.dynamictransport.entities.EntityElevator.java", "BodyUseAPI": ["net.minecraft.nbt.NBTTagCompound.getCompoundTag(java.lang.String)", "this.getDataWatcher().updateObject(int,net.minecraft.item.ItemStack.loadItemStackFromNBT(nbttagcompound.getCompoundTag(\"CamoItem\")))", "net.minecraft.item.ItemStack.loadItemStackFromNBT(nbttagcompound.getCompoundTag(\"CamoItem\"))"], "Fixed commit": "a1c8bf7ef8ea0b6cc87e3a71f61ee5986131ebe1", "Url": "https://api.github.com/repos/SlimeVoid/DynamicTransport", "Date": "2014-01-25T18:00:22Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((slimevoid.dynamictransport.tileentity.TileEntityElevator) (tile)).getCamoItem()) != null) { this.getDataWatcher().updateObject(4, ((slimevoid.dynamictransport.tileentity.TileEntityElevator) (tile)).getCamoItem()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8010/buggy-version/DT-source.slimevoid.dynamictransport.entities.EntityElevator.java", "BodyUseAPI": ["this.getDataWatcher().updateObject(int,((slimevoid.dynamictransport.tileentity.TileEntityElevator) (tile)).getCamoItem())", "net.minecraft.tileentity.TileEntity.getCamoItem()"], "Fixed commit": "a1c8bf7ef8ea0b6cc87e3a71f61ee5986131ebe1", "Url": "https://api.github.com/repos/SlimeVoid/DynamicTransport", "Date": "2014-01-25T18:00:22Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tag == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3617/buggy-version/src.main.java.com.pratilipi.data.util.TagDataUtil.java", "BodyUseAPI": [], "Fixed commit": "988da29c8c6e32ff6c56a9a495001e310abb49ed", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2017-04-24T08:58:37Z"},
{"Line": "=>933", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.powertac.officecomplexcustomer.customers.OfficeComplex.findActiveSubscriptionsForCustomer(org.powertac.common.CustomerInfo)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((subscriptions != null) || ((subscriptions.size()) != 0)) { subscriptions.get(0).usePower(load); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4013/buggy-version/src.main.java.org.powertac.officecomplexcustomer.customers.OfficeComplex.java", "BodyUseAPI": ["subscriptions.get(0).usePower(double)", "java.util.List<org.powertac.common.TariffSubscription>.get(int)"], "Fixed commit": "5a0b5172ba33d704dea969ffb0674ca97548a98f", "Url": "https://api.github.com/repos/powertac/officecomplex-customer", "Date": "2013-06-12T07:54:13Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["IC.Symbols.SymbolTable.getSymbol(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((symbol.getKind()) == (IC.Types.Kind.Method)) || ((symbol.getKind()) == (IC.Types.Kind.StaticMethod))) throw new IC.SemanticChecks.SemanticError(method.getLine(), \"Method overloading is not supported\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7157/buggy-version/src.IC.SemanticChecks.SymbolTableBuilder.java", "BodyUseAPI": [], "Fixed commit": "fa6499c1676903ab9eac19a42bb03fd8e984d688", "Url": "https://api.github.com/repos/sharon-rozinsky/ICCompiler", "Date": "2014-12-19T09:11:08Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (icClass.hasSuperClass()) { boolean superClassExist = IC.Types.TypeTable.classTypeExists(icClass.getSuperClassName()); if (!superClassExist) { throw new IC.SemanticChecks.SemanticError(icClass.getLine(), (\"Cannot extend a class that has not already been defined: \" + (icClass.getSuperClassName()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7157/buggy-version/src.IC.SemanticChecks.TypeTableBuilder.java", "BodyUseAPI": ["IC.AST.ICClass.getLine()", "IC.Types.TypeTable.classTypeExists(icClass.getSuperClassName())", "IC.AST.ICClass.getSuperClassName()", "IC.AST.ICClass.getSuperClassName()"], "Fixed commit": "fa6499c1676903ab9eac19a42bb03fd8e984d688", "Url": "https://api.github.com/repos/sharon-rozinsky/ICCompiler", "Date": "2014-12-19T09:11:08Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((model.getName()) != null) && (model.getName().equals(\"ProutLeColorSelector1\"))) { java.lang.System.out.println(\"OK, je l'ai !!!!!!!!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8318/buggy-version/gina-swing.src.main.java.org.openflexo.gina.swing.view.widget.JFIBColorWidget.java", "BodyUseAPI": [], "Fixed commit": "fc6b5f494094cf517443a7f9d5081f0e94f73267", "Url": "https://api.github.com/repos/openflexo-team/gina", "Date": "2016-06-17T20:05:16Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (repo.getZipUrl().equals(\"https://github.com/travis/cosmo/archive/master.zip\")) java.lang.System.out.println(\"Shit\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2655/buggy-version/src.main.java.com.elasticthree.projectparser.Main.java", "BodyUseAPI": [], "Fixed commit": "0acd2da41a85fcac7361363fccde31301e32cc48", "Url": "https://api.github.com/repos/ElasticThree/github-repo-parser", "Date": "2016-09-05T14:48:55Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((i == 38) && ((this.falling) != null)) && ((pause) == false)) { tetris.Poly temp = this.falling.rotateRight(); if ((this.movePolyY(temp)) && (this.movePolyRight(temp))) this.falling = temp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2449/buggy-version/src.tetris.Board.java", "BodyUseAPI": [], "Fixed commit": "ad185fdd9b0564abd5403d506a255a9a3581631d", "Url": "https://api.github.com/repos/YAMproductions/sirtet", "Date": "2014-05-14T12:09:01Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((c1 == null) ^ (c2 == null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1614/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.util.ui.colourpicker.ColourPickerUtil.java", "BodyUseAPI": [], "Fixed commit": "699dada2bf24cd733493fbbb52b42a28087637cf", "Url": "https://api.github.com/repos/snoopycrimecop/openmicroscopy", "Date": "2017-07-03T01:31:31Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.openmicroscopy.shoola.util.CommonsLangUtils.isNotEmpty(model.getLUT())) fireChangeEvent(PaintPotUI.LUT_PROPERTY); else fireChangeEvent(PaintPotUI.COLOUR_CHANGED_PROPERTY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1614/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.util.ui.colourpicker.RGBControl.java", "BodyUseAPI": [], "Fixed commit": "699dada2bf24cd733493fbbb52b42a28087637cf", "Url": "https://api.github.com/repos/snoopycrimecop/openmicroscopy", "Date": "2017-07-03T01:31:31Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.Board.getPiece(aiMove[1])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((movedPiece instanceof variants.BasicChess.Pawn) && (((movedPiece.cords.getX()) == 0) || ((movedPiece.cords.getX()) == ((control.board.numCols()) - 1)))) { pawnPromotion.PawnPromotion pp = new pawnPromotion.PawnPromotion(movedPiece); pp.promote(PromotablePiece.QUEEN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6184/buggy-version/src.main.GameController.java", "BodyUseAPI": [], "Fixed commit": "c5a7508b4c73cf2acd95bcc1bdf7fe5c81937e45", "Url": "https://api.github.com/repos/HJohnson-/Kingtaker", "Date": "2014-12-22T16:04:10Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.demoParser) != null) && (this.waitForDemo)) { this.waitForDemo = false; }else { this.frameTime += deltaTime; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2054/buggy-version/src.org.racenet.racesow.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "47164abd3257f107c66c3cc05497a8ecf62077ea", "Url": "https://api.github.com/repos/zolex/Racesow2D", "Date": "2012-04-09T12:15:06Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((leadingLengthBytes) == (-1)) leadingLengthBytes = afpin.getLeadingLengthBytes();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/237/buggy-version/org.afplib.src.main.java.org.afplib.io.AfpFile.java", "BodyUseAPI": [], "Fixed commit": "74ef4c69004489caba532419963a8909e15d4015", "Url": "https://api.github.com/repos/yan74/afplib", "Date": "2017-07-11T18:04:19Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (buf == (-1)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/237/buggy-version/org.afplib.src.main.java.org.afplib.io.AfpInputStream.java", "BodyUseAPI": [], "Fixed commit": "74ef4c69004489caba532419963a8909e15d4015", "Url": "https://api.github.com/repos/yan74/afplib", "Date": "2017-07-11T18:04:19Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.telephony.ServiceState.getOperatorNumeric()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (null != operatorNum) { mcc = operatorNum.substring(0, 3); mnc = operatorNum.substring(3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1147/buggy-version/SignalQualityTracker.src.org.bdouze.android.signalqualitytracker.SqtMainActivity.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int)"], "Fixed commit": "947ec27125c610e74c1d033f479c854c121f3433", "Url": "https://api.github.com/repos/BDouze/AndroTwelve", "Date": "2014-09-30T23:14:52Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (stickyEvents.containsKey(action)) { stickyEvents.remove(action); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3104/buggy-version/EventBus.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.baidu.bdweather.event.AbsEvent>.remove(java.lang.String)"], "Fixed commit": "c50ac42f1ad22c9ef71d36f35e400c04ac18fcc7", "Url": "https://api.github.com/repos/LNeway/EventBus", "Date": "2017-03-29T09:35:43Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ed.startMapID) != (ed.endMapID)) { ed.startPoint.type = Point.Type.WAYPOINT; ed.endPoint.type = Point.Type.WAYPOINT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2746/buggy-version/src.adminmodule.AdminFrame.java", "BodyUseAPI": [], "Fixed commit": "6b06979cb05efe74a48d461acbe792d3e932d1ba", "Url": "https://api.github.com/repos/yihaozhou/CS509_TeamE_WPIWayFinder", "Date": "2015-11-19T22:11:28Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pt.type) == (Point.Type.CONNECTION)) { for (int i = 0; i < (maps.size()); ++i) { copy = ((java.util.ArrayList<adminmodule.Edge>) (maps.get(i).edgeList.clone())); for (adminmodule.Edge e : copy) { if (e.startPoint.equals(pt)) { e.endPoint.type = Point.Type.WAYPOINT; maps.get(i).edgeList.remove(e); } if (e.endPoint.equals(pt)) { e.startPoint.type = Point.Type.WAYPOINT; maps.get(i).edgeList.remove(e); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2746/buggy-version/src.adminmodule.AdminFrame.java", "BodyUseAPI": ["e.endPoint.equals(adminmodule.Point)", "e.startPoint.equals(adminmodule.Point)"], "Fixed commit": "6b06979cb05efe74a48d461acbe792d3e932d1ba", "Url": "https://api.github.com/repos/yihaozhou/CS509_TeamE_WPIWayFinder", "Date": "2015-11-19T22:11:28Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((text.equals(\"\")) == true) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5503/buggy-version/venue.HelperFunctions.java", "BodyUseAPI": [], "Fixed commit": "ffcd3b83b814d5e547e9daf929a3d0ecfc207860", "Url": "https://api.github.com/repos/jing200588/T2G4_EM", "Date": "2012-04-07T13:46:39Z"},
{"Line": "=>986", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.taskResult.getTenantId()) != null) { intent.putExtra(AuthenticationConstants.Broker.ACCOUNT_USERINFO_TENANTID, result.taskResult.getTenantId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1525/buggy-version/src.src.com.microsoft.aad.adal.AuthenticationActivity.java", "BodyUseAPI": ["android.content.Intent.putExtra(AuthenticationConstants.Broker.ACCOUNT_USERINFO_TENANTID,result.taskResult.getTenantId())", "com.microsoft.aad.adal.AuthenticationResult.getTenantId()"], "Fixed commit": "77ed5a70ed87aedb2f210726c1e077e490219b4f", "Url": "https://api.github.com/repos/AzureAD/azure-activedirectory-library-for-android", "Date": "2015-08-31T22:51:44Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (RGB_TAG.equals(mTabHost.getCurrentTabTag())) { maxViewHeight = getMeasuredHeight(); maxViewWidth = getMeasuredWidth(); }else if (CIRCLE_TAG.equals(mTabHost.getCurrentTabTag())) { maxViewHeight = getMeasuredHeight(); maxViewWidth = getMeasuredWidth(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7498/buggy-version/Paintroid.src.main.java.org.catrobat.paintroid.dialog.colorpicker.ColorPickerView.java", "BodyUseAPI": ["android.widget.TabHost.getCurrentTabTag()", "java.lang.String.equals(mTabHost.getCurrentTabTag())"], "Fixed commit": "028f3448628b353a4a751a2d7727e0ef0dd3a07b", "Url": "https://api.github.com/repos/qianlvable/Paintroid", "Date": "2015-02-24T03:02:29Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.lang.Integer>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((leaders[child]) != (-1)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4101/buggy-version/src.main.java.br.com.ooboo.asm.defuse.DefUseAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "3783e7a276a0c012a22c40141beea5b97a8722fc", "Url": "https://api.github.com/repos/andrioli/asm-defuse", "Date": "2014-02-14T00:39:10Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.atomic.AtomicReference<org.apache.hc.core5.reactor.IOReactorStatus>.getAndSet(IOReactorStatus.SHUT_DOWN)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((previousStatus.compareTo(IOReactorStatus.ACTIVE)) == 0) { this.selector.wakeup(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7986/buggy-version/httpcore5.src.main.java.org.apache.hc.core5.reactor.IOReactorImpl.java", "BodyUseAPI": [], "Fixed commit": "239c9a3a80e9b1947da35efbf0a7784a60632a2e", "Url": "https://api.github.com/repos/ok2c/httpcore", "Date": "2017-06-08T12:17:20Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jsonTorrentMessage.size()) >= (com.utorrent.webapiwrapper.core.MessageParser.BUILD_221)) { torrentBuilder = torrentBuilder.hash(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_HASH.getAsString(jsonTorrentMessage)).statuses(com.utorrent.webapiwrapper.core.entities.Torrent.TorrentStatus.decodeStatus(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_STATUS.getAsInt(jsonTorrentMessage))).name(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_NAME.getAsString(jsonTorrentMessage)).size(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_SIZE.getAsLong(jsonTorrentMessage)).progress(((com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_PROGRESS.getAsLong(jsonTorrentMessage)) / 10)).downloaded(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_DOWNLOADED.getAsLong(jsonTorrentMessage)).uploaded(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_UPLOADED.getAsLong(jsonTorrentMessage)).ratio(((com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_RATIO.getAsFloat(jsonTorrentMessage)) / 1000)).uploadSpeed(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_UPSPEED.getAsLong(jsonTorrentMessage)).downloadSpeed(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_DOWNSPEED.getAsLong(jsonTorrentMessage)).eta(java.time.Duration.ofSeconds(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_ETA.getAsLong(jsonTorrentMessage))).label(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_LABEL.getAsString(jsonTorrentMessage)).peersConnected(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_PEERS_CONNECTED.getAsInt(jsonTorrentMessage)).peersInSwarm(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_PEERS_SWARM.getAsInt(jsonTorrentMessage)).seedsConnected(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_SEEDS_CONNECTED.getAsInt(jsonTorrentMessage)).seedsInSwarm(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_SEEDS_SWARM.getAsInt(jsonTorrentMessage)).availability(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_AVAILABILITY.getAsLong(jsonTorrentMessage)).torrentQueueOrder(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_QUEUE_POSITION.getAsLong(jsonTorrentMessage)).remaining(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_REMAINING.getAsLong(jsonTorrentMessage)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8766/buggy-version/src.main.java.com.utorrent.webapiwrapper.core.MessageParser.java", "BodyUseAPI": ["torrentBuilder.hash(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_HASH.getAsString(jsonTorrentMessage)).statuses(com.utorrent.webapiwrapper.core.entities.Torrent.TorrentStatus.decodeStatus(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_STATUS.getAsInt(jsonTorrentMessage))).name(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_NAME.getAsString(jsonTorrentMessage)).size(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_SIZE.getAsLong(jsonTorrentMessage)).progress(((com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_PROGRESS.getAsLong(jsonTorrentMessage)) / 10)).downloaded(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_DOWNLOADED.getAsLong(jsonTorrentMessage)).uploaded(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_UPLOADED.getAsLong(jsonTorrentMessage)).ratio(((com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_RATIO.getAsFloat(jsonTorrentMessage)) / 1000)).uploadSpeed(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_UPSPEED.getAsLong(jsonTorrentMessage)).downloadSpeed(long)", "com.utorrent.webapiwrapper.core.MessageParser.TorrentField.getAsLong(com.google.gson.JsonArray)", "com.utorrent.webapiwrapper.core.MessageParser.TorrentField.getAsInt(com.google.gson.JsonArray)", "com.utorrent.webapiwrapper.core.MessageParser.TorrentField.getAsLong(com.google.gson.JsonArray)", "java.time.Duration.ofSeconds(long)", "torrentBuilder.hash(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_HASH.getAsString(jsonTorrentMessage)).statuses(com.utorrent.webapiwrapper.core.entities.Torrent.TorrentStatus.decodeStatus(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_STATUS.getAsInt(jsonTorrentMessage))).name(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_NAME.getAsString(jsonTorrentMessage)).size(long)", "com.utorrent.webapiwrapper.core.MessageParser.TorrentField.getAsLong(com.google.gson.JsonArray)", "com.utorrent.webapiwrapper.core.MessageParser.TorrentField.getAsString(com.google.gson.JsonArray)", "torrentBuilder.hash(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_HASH.getAsString(jsonTorrentMessage)).statuses(com.utorrent.webapiwrapper.core.entities.Torrent.TorrentStatus.decodeStatus(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_STATUS.getAsInt(jsonTorrentMessage))).name(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_NAME.getAsString(jsonTorrentMessage)).size(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_SIZE.getAsLong(jsonTorrentMessage)).progress(((com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_PROGRESS.getAsLong(jsonTorrentMessage)) / 10)).downloaded(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_DOWNLOADED.getAsLong(jsonTorrentMessage)).uploaded(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_UPLOADED.getAsLong(jsonTorrentMessage)).ratio(((com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_RATIO.getAsFloat(jsonTorrentMessage)) / 1000)).uploadSpeed(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_UPSPEED.getAsLong(jsonTorrentMessage)).downloadSpeed(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_DOWNSPEED.getAsLong(jsonTorrentMessage)).eta(java.time.Duration.ofSeconds(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_ETA.getAsLong(jsonTorrentMessage))).label(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_LABEL.getAsString(jsonTorrentMessage)).peersConnected(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_PEERS_CONNECTED.getAsInt(jsonTorrentMessage)).peersInSwarm(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_PEERS_SWARM.getAsInt(jsonTorrentMessage)).seedsConnected(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_SEEDS_CONNECTED.getAsInt(jsonTorrentMessage)).seedsInSwarm(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_SEEDS_SWARM.getAsInt(jsonTorrentMessage)).availability(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_AVAILABILITY.getAsLong(jsonTorrentMessage)).torrentQueueOrder(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_QUEUE_POSITION.getAsLong(jsonTorrentMessage)).remaining(long)", "torrentBuilder.hash(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_HASH.getAsString(jsonTorrentMessage)).statuses(com.utorrent.webapiwrapper.core.entities.Torrent.TorrentStatus.decodeStatus(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_STATUS.getAsInt(jsonTorrentMessage))).name(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_NAME.getAsString(jsonTorrentMessage)).size(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_SIZE.getAsLong(jsonTorrentMessage)).progress(((com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_PROGRESS.getAsLong(jsonTorrentMessage)) / 10)).downloaded(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_DOWNLOADED.getAsLong(jsonTorrentMessage)).uploaded(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_UPLOADED.getAsLong(jsonTorrentMessage)).ratio(((com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_RATIO.getAsFloat(jsonTorrentMessage)) / 1000)).uploadSpeed(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_UPSPEED.getAsLong(jsonTorrentMessage)).downloadSpeed(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_DOWNSPEED.getAsLong(jsonTorrentMessage)).eta(java.time.Duration)", "com.utorrent.webapiwrapper.core.MessageParser.TorrentField.getAsInt(com.google.gson.JsonArray)", "torrentBuilder.hash(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_HASH.getAsString(jsonTorrentMessage)).statuses(com.utorrent.webapiwrapper.core.entities.Torrent.TorrentStatus.decodeStatus(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_STATUS.getAsInt(jsonTorrentMessage))).name(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_NAME.getAsString(jsonTorrentMessage)).size(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_SIZE.getAsLong(jsonTorrentMessage)).progress(((com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_PROGRESS.getAsLong(jsonTorrentMessage)) / 10)).downloaded(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_DOWNLOADED.getAsLong(jsonTorrentMessage)).uploaded(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_UPLOADED.getAsLong(jsonTorrentMessage)).ratio(((com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_RATIO.getAsFloat(jsonTorrentMessage)) / 1000)).uploadSpeed(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_UPSPEED.getAsLong(jsonTorrentMessage)).downloadSpeed(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_DOWNSPEED.getAsLong(jsonTorrentMessage)).eta(java.time.Duration.ofSeconds(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_ETA.getAsLong(jsonTorrentMessage))).label(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_LABEL.getAsString(jsonTorrentMessage)).peersConnected(int)", "com.utorrent.webapiwrapper.core.entities.Torrent.TorrentStatus.decodeStatus(int)", "torrentBuilder.hash(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_HASH.getAsString(jsonTorrentMessage)).statuses(com.utorrent.webapiwrapper.core.entities.Torrent.TorrentStatus.decodeStatus(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_STATUS.getAsInt(jsonTorrentMessage))).name(java.lang.String)", "com.utorrent.webapiwrapper.core.MessageParser.TorrentField.getAsLong(com.google.gson.JsonArray)", "com.utorrent.webapiwrapper.core.MessageParser.TorrentField.getAsLong(com.google.gson.JsonArray)", "torrentBuilder.hash(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_HASH.getAsString(jsonTorrentMessage)).statuses(com.utorrent.webapiwrapper.core.entities.Torrent.TorrentStatus.decodeStatus(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_STATUS.getAsInt(jsonTorrentMessage))).name(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_NAME.getAsString(jsonTorrentMessage)).size(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_SIZE.getAsLong(jsonTorrentMessage)).progress(((com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_PROGRESS.getAsLong(jsonTorrentMessage)) / 10)).downloaded(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_DOWNLOADED.getAsLong(jsonTorrentMessage)).uploaded(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_UPLOADED.getAsLong(jsonTorrentMessage)).ratio(((com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_RATIO.getAsFloat(jsonTorrentMessage)) / 1000)).uploadSpeed(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_UPSPEED.getAsLong(jsonTorrentMessage)).downloadSpeed(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_DOWNSPEED.getAsLong(jsonTorrentMessage)).eta(java.time.Duration.ofSeconds(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_ETA.getAsLong(jsonTorrentMessage))).label(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_LABEL.getAsString(jsonTorrentMessage)).peersConnected(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_PEERS_CONNECTED.getAsInt(jsonTorrentMessage)).peersInSwarm(int)", "com.utorrent.webapiwrapper.core.MessageParser.TorrentField.getAsLong(com.google.gson.JsonArray)", "com.utorrent.webapiwrapper.core.MessageParser.TorrentField.getAsLong(com.google.gson.JsonArray)", "torrentBuilder.hash(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_HASH.getAsString(jsonTorrentMessage)).statuses(com.utorrent.webapiwrapper.core.entities.Torrent.TorrentStatus.decodeStatus(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_STATUS.getAsInt(jsonTorrentMessage))).name(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_NAME.getAsString(jsonTorrentMessage)).size(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_SIZE.getAsLong(jsonTorrentMessage)).progress(((com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_PROGRESS.getAsLong(jsonTorrentMessage)) / 10)).downloaded(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_DOWNLOADED.getAsLong(jsonTorrentMessage)).uploaded(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_UPLOADED.getAsLong(jsonTorrentMessage)).ratio(((com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_RATIO.getAsFloat(jsonTorrentMessage)) / 1000))", "torrentBuilder.hash(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_HASH.getAsString(jsonTorrentMessage)).statuses(com.utorrent.webapiwrapper.core.entities.Torrent.TorrentStatus.decodeStatus(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_STATUS.getAsInt(jsonTorrentMessage))).name(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_NAME.getAsString(jsonTorrentMessage)).size(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_SIZE.getAsLong(jsonTorrentMessage)).progress(((com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_PROGRESS.getAsLong(jsonTorrentMessage)) / 10)).downloaded(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_DOWNLOADED.getAsLong(jsonTorrentMessage)).uploaded(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_UPLOADED.getAsLong(jsonTorrentMessage)).ratio(((com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_RATIO.getAsFloat(jsonTorrentMessage)) / 1000)).uploadSpeed(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_UPSPEED.getAsLong(jsonTorrentMessage)).downloadSpeed(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_DOWNSPEED.getAsLong(jsonTorrentMessage)).eta(java.time.Duration.ofSeconds(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_ETA.getAsLong(jsonTorrentMessage))).label(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_LABEL.getAsString(jsonTorrentMessage)).peersConnected(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_PEERS_CONNECTED.getAsInt(jsonTorrentMessage)).peersInSwarm(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_PEERS_SWARM.getAsInt(jsonTorrentMessage)).seedsConnected(int)", "com.utorrent.webapiwrapper.core.MessageParser.TorrentField.getAsLong(com.google.gson.JsonArray)", "torrentBuilder.hash(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_HASH.getAsString(jsonTorrentMessage)).statuses(com.utorrent.webapiwrapper.core.entities.Torrent.TorrentStatus.decodeStatus(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_STATUS.getAsInt(jsonTorrentMessage))).name(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_NAME.getAsString(jsonTorrentMessage)).size(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_SIZE.getAsLong(jsonTorrentMessage)).progress(((com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_PROGRESS.getAsLong(jsonTorrentMessage)) / 10)).downloaded(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_DOWNLOADED.getAsLong(jsonTorrentMessage)).uploaded(long)", "torrentBuilder.hash(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_HASH.getAsString(jsonTorrentMessage)).statuses(com.utorrent.webapiwrapper.core.entities.Torrent.TorrentStatus.decodeStatus(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_STATUS.getAsInt(jsonTorrentMessage))).name(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_NAME.getAsString(jsonTorrentMessage)).size(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_SIZE.getAsLong(jsonTorrentMessage)).progress(((com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_PROGRESS.getAsLong(jsonTorrentMessage)) / 10)).downloaded(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_DOWNLOADED.getAsLong(jsonTorrentMessage)).uploaded(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_UPLOADED.getAsLong(jsonTorrentMessage)).ratio(((com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_RATIO.getAsFloat(jsonTorrentMessage)) / 1000)).uploadSpeed(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_UPSPEED.getAsLong(jsonTorrentMessage)).downloadSpeed(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_DOWNSPEED.getAsLong(jsonTorrentMessage)).eta(java.time.Duration.ofSeconds(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_ETA.getAsLong(jsonTorrentMessage))).label(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_LABEL.getAsString(jsonTorrentMessage)).peersConnected(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_PEERS_CONNECTED.getAsInt(jsonTorrentMessage)).peersInSwarm(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_PEERS_SWARM.getAsInt(jsonTorrentMessage)).seedsConnected(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_SEEDS_CONNECTED.getAsInt(jsonTorrentMessage)).seedsInSwarm(int)", "torrentBuilder.hash(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_HASH.getAsString(jsonTorrentMessage)).statuses(com.utorrent.webapiwrapper.core.entities.Torrent.TorrentStatus.decodeStatus(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_STATUS.getAsInt(jsonTorrentMessage))).name(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_NAME.getAsString(jsonTorrentMessage)).size(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_SIZE.getAsLong(jsonTorrentMessage)).progress(((com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_PROGRESS.getAsLong(jsonTorrentMessage)) / 10)).downloaded(long)", "torrentBuilder.hash(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_HASH.getAsString(jsonTorrentMessage)).statuses(com.utorrent.webapiwrapper.core.entities.Torrent.TorrentStatus.decodeStatus(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_STATUS.getAsInt(jsonTorrentMessage))).name(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_NAME.getAsString(jsonTorrentMessage)).size(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_SIZE.getAsLong(jsonTorrentMessage)).progress(((com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_PROGRESS.getAsLong(jsonTorrentMessage)) / 10)).downloaded(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_DOWNLOADED.getAsLong(jsonTorrentMessage)).uploaded(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_UPLOADED.getAsLong(jsonTorrentMessage)).ratio(((com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_RATIO.getAsFloat(jsonTorrentMessage)) / 1000)).uploadSpeed(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_UPSPEED.getAsLong(jsonTorrentMessage)).downloadSpeed(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_DOWNSPEED.getAsLong(jsonTorrentMessage)).eta(java.time.Duration.ofSeconds(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_ETA.getAsLong(jsonTorrentMessage))).label(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_LABEL.getAsString(jsonTorrentMessage)).peersConnected(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_PEERS_CONNECTED.getAsInt(jsonTorrentMessage)).peersInSwarm(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_PEERS_SWARM.getAsInt(jsonTorrentMessage)).seedsConnected(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_SEEDS_CONNECTED.getAsInt(jsonTorrentMessage)).seedsInSwarm(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_SEEDS_SWARM.getAsInt(jsonTorrentMessage)).availability(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_AVAILABILITY.getAsLong(jsonTorrentMessage)).torrentQueueOrder(long)", "Torrent.TorrentBuilder.hash(java.lang.String)", "torrentBuilder.hash(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_HASH.getAsString(jsonTorrentMessage)).statuses(com.utorrent.webapiwrapper.core.entities.Torrent.TorrentStatus.decodeStatus(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_STATUS.getAsInt(jsonTorrentMessage))).name(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_NAME.getAsString(jsonTorrentMessage)).size(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_SIZE.getAsLong(jsonTorrentMessage)).progress(((com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_PROGRESS.getAsLong(jsonTorrentMessage)) / 10)).downloaded(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_DOWNLOADED.getAsLong(jsonTorrentMessage)).uploaded(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_UPLOADED.getAsLong(jsonTorrentMessage)).ratio(((com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_RATIO.getAsFloat(jsonTorrentMessage)) / 1000)).uploadSpeed(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_UPSPEED.getAsLong(jsonTorrentMessage)).downloadSpeed(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_DOWNSPEED.getAsLong(jsonTorrentMessage)).eta(java.time.Duration.ofSeconds(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_ETA.getAsLong(jsonTorrentMessage))).label(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_LABEL.getAsString(jsonTorrentMessage)).peersConnected(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_PEERS_CONNECTED.getAsInt(jsonTorrentMessage)).peersInSwarm(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_PEERS_SWARM.getAsInt(jsonTorrentMessage)).seedsConnected(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_SEEDS_CONNECTED.getAsInt(jsonTorrentMessage)).seedsInSwarm(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_SEEDS_SWARM.getAsInt(jsonTorrentMessage)).availability(long)", "com.utorrent.webapiwrapper.core.MessageParser.TorrentField.getAsString(com.google.gson.JsonArray)", "com.utorrent.webapiwrapper.core.MessageParser.TorrentField.getAsString(com.google.gson.JsonArray)", "com.utorrent.webapiwrapper.core.MessageParser.TorrentField.getAsInt(com.google.gson.JsonArray)", "com.utorrent.webapiwrapper.core.MessageParser.TorrentField.getAsLong(com.google.gson.JsonArray)", "com.utorrent.webapiwrapper.core.MessageParser.TorrentField.getAsLong(com.google.gson.JsonArray)", "com.utorrent.webapiwrapper.core.MessageParser.TorrentField.getAsFloat(com.google.gson.JsonArray)", "torrentBuilder.hash(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_HASH.getAsString(jsonTorrentMessage)).statuses(com.utorrent.webapiwrapper.core.entities.Torrent.TorrentStatus.decodeStatus(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_STATUS.getAsInt(jsonTorrentMessage))).name(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_NAME.getAsString(jsonTorrentMessage)).size(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_SIZE.getAsLong(jsonTorrentMessage)).progress(((com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_PROGRESS.getAsLong(jsonTorrentMessage)) / 10)).downloaded(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_DOWNLOADED.getAsLong(jsonTorrentMessage)).uploaded(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_UPLOADED.getAsLong(jsonTorrentMessage)).ratio(((com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_RATIO.getAsFloat(jsonTorrentMessage)) / 1000)).uploadSpeed(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_UPSPEED.getAsLong(jsonTorrentMessage)).downloadSpeed(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_DOWNSPEED.getAsLong(jsonTorrentMessage)).eta(java.time.Duration.ofSeconds(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_ETA.getAsLong(jsonTorrentMessage))).label(java.lang.String)", "com.utorrent.webapiwrapper.core.MessageParser.TorrentField.getAsInt(com.google.gson.JsonArray)", "com.utorrent.webapiwrapper.core.MessageParser.TorrentField.getAsInt(com.google.gson.JsonArray)", "torrentBuilder.hash(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_HASH.getAsString(jsonTorrentMessage)).statuses(com.utorrent.webapiwrapper.core.entities.Torrent.TorrentStatus.decodeStatus(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_STATUS.getAsInt(jsonTorrentMessage))).name(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_NAME.getAsString(jsonTorrentMessage)).size(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_SIZE.getAsLong(jsonTorrentMessage)).progress(((com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_PROGRESS.getAsLong(jsonTorrentMessage)) / 10)).downloaded(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_DOWNLOADED.getAsLong(jsonTorrentMessage)).uploaded(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_UPLOADED.getAsLong(jsonTorrentMessage)).ratio(((com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_RATIO.getAsFloat(jsonTorrentMessage)) / 1000)).uploadSpeed(long)", "torrentBuilder.hash(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_HASH.getAsString(jsonTorrentMessage)).statuses(com.utorrent.webapiwrapper.core.entities.Torrent.TorrentStatus.decodeStatus(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_STATUS.getAsInt(jsonTorrentMessage)))", "torrentBuilder.hash(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_HASH.getAsString(jsonTorrentMessage)).statuses(com.utorrent.webapiwrapper.core.entities.Torrent.TorrentStatus.decodeStatus(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_STATUS.getAsInt(jsonTorrentMessage))).name(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_NAME.getAsString(jsonTorrentMessage)).size(com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_SIZE.getAsLong(jsonTorrentMessage)).progress(((com.utorrent.webapiwrapper.core.MessageParser.TorrentField.TORRENT_PROGRESS.getAsLong(jsonTorrentMessage)) / 10))"], "Fixed commit": "82e622338b9c06bf522e1675ec725459d8712e11", "Url": "https://api.github.com/repos/gleb619/uTorrent-Web-API-Wrapper", "Date": "2016-09-11T13:51:35Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.executor.getModule()) == null) { craftoplugin.core.CraftoMessenger.error(((\"Error: Module in CommandExecutor is null! (\" + (this.getCommand())) + \")\")); }else if (!(this.executor.getModule().isEnabled())) { return false; }else if ((this.method) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7776/buggy-version/src.craftoplugin.core.structs.CraftoCommand.java", "BodyUseAPI": ["this.executor.getModule().isEnabled()", "craftoplugin.core.structs.CommandExecutor.getModule()"], "Fixed commit": "96401e1edcb4ceb9dfa78458795b9453e0362d56", "Url": "https://api.github.com/repos/Craftolution/CraftoPlugin", "Date": "2014-09-18T20:33:28Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((me.allenz.androidapplog.LoggerFactory.appContext) != null) { me.allenz.androidapplog.LoggerFactory.packageName = me.allenz.androidapplog.LoggerFactory.appContext.getPackageName(); }else { try { final java.lang.Class<?> activityThreadClass = me.allenz.androidapplog.LoggerFactory.class.getClassLoader().loadClass(\"android.app.ActivityThread\"); final java.lang.reflect.Method currentPackageName = activityThreadClass.getDeclaredMethod(\"currentPackageName\"); me.allenz.androidapplog.LoggerFactory.packageName = ((java.lang.String) (currentPackageName.invoke(null))); } catch (final java.lang.Exception e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1664/buggy-version/android-app-log.src.main.java.me.allenz.androidapplog.LoggerFactory.java", "BodyUseAPI": [], "Fixed commit": "343277d690299203dfdc6ab2200549a3bb2851ec", "Url": "https://api.github.com/repos/allenz8512/AndroidAppLog", "Date": "2015-11-07T10:12:20Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((game.getBoard().getTile(i, j)) instanceof se.chalmers.group11.core.EmptyTile) { grassImage.getScaledCopy(0.08F).draw((i * 60), (j * 60), 60, 60); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3385/buggy-version/src.se.chalmers.group11.BombSquadGUI.GamePlayState.java", "BodyUseAPI": ["grassImage.getScaledCopy(0.08F).draw(int,int,int,int)"], "Fixed commit": "5f3c3436ae04539bd92720e243ea7ce28bd3eaac", "Url": "https://api.github.com/repos/epoxy/BombSquad", "Date": "2012-05-06T17:41:36Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pNotification) != null) pNotification.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3803/buggy-version/app.src.main.java.it.vibwear.app.VibWearActivity.java", "BodyUseAPI": [], "Fixed commit": "73541503e0b4c3472382f2b3b4d69d5b2ab8068f", "Url": "https://api.github.com/repos/biospank/vibwear-studio", "Date": "2016-01-18T17:52:53Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.rawQuery(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((cursor.getCount()) != 0) entry = cursor.getFloat(cursor.getColumnIndex(\"bmi\")); else return 0.0F;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1377/buggy-version/mobile.src.main.java.uk.co.appsbystudio.easybmi.database.DatabaseHelper.java", "BodyUseAPI": ["android.database.Cursor.getFloat(cursor.getColumnIndex(\"bmi\"))", "android.database.Cursor.getColumnIndex(java.lang.String)"], "Fixed commit": "83f3cb4aad77189d6fea48be2859f4d1e0e57699", "Url": "https://api.github.com/repos/STUDIO-apps/EasyBMI", "Date": "2017-07-30T18:51:15Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.semanticweb.ontop.owlrefplatform.core.sql.Function.getFunctionSymbol()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (typePred.isStringOperationPredicate()) { org.semanticweb.ontop.owlrefplatform.core.sql.Predicate unifiedType = unifyTypes(ansTypes.get(j), dtfac.getTypePredicate(COL_TYPE.LITERAL)); ansTypes.set(j, unifiedType); }else if ((typePred.isDataTypePredicate()) || (typePred.getName().equals(OBDAVocabulary.QUEST_URI))) { org.semanticweb.ontop.owlrefplatform.core.sql.Predicate unifiedType = unifyTypes(ansTypes.get(j), typePred); ansTypes.set(j, unifiedType); }else if (typePred.getName().equals(COL_TYPE.BNODE)) { ansTypes.set(j, dtfac.getTypePredicate(COL_TYPE.STRING)); }else if ((((typePred.getName().equals(OBDAVocabulary.SPARQL_AVG_URI)) || (typePred.getName().equals(OBDAVocabulary.SPARQL_SUM_URI))) || (typePred.getName().equals(OBDAVocabulary.SPARQL_MAX_URI))) || (typePred.getName().equals(OBDAVocabulary.SPARQL_MIN_URI))) { org.semanticweb.ontop.owlrefplatform.core.sql.Term agTerm = f.getTerm(0); if (agTerm instanceof org.semanticweb.ontop.owlrefplatform.core.sql.Function) { org.semanticweb.ontop.owlrefplatform.core.sql.Function agFunc = ((org.semanticweb.ontop.owlrefplatform.core.sql.Function) (agTerm)); typePred = agFunc.getFunctionSymbol(); org.semanticweb.ontop.owlrefplatform.core.sql.Predicate unifiedType = unifyTypes(ansTypes.get(j), typePred); ansTypes.set(j, unifiedType); }else { org.semanticweb.ontop.owlrefplatform.core.sql.Predicate unifiedType = unifyTypes(ansTypes.get(j), dtfac.getTypePredicate(COL_TYPE.DECIMAL)); ansTypes.set(j, unifiedType); } }else { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4991/buggy-version/reformulation-core.src.main.java.org.semanticweb.ontop.owlrefplatform.core.sql.SQLGenerator.java", "BodyUseAPI": ["typePred.getName().equals(OBDAVocabulary.SPARQL_MAX_URI)", "org.semanticweb.ontop.owlrefplatform.core.sql.Predicate.getName()", "org.semanticweb.ontop.owlrefplatform.core.sql.Predicate.getName()", "org.semanticweb.ontop.owlrefplatform.core.sql.Predicate.getName()", "org.semanticweb.ontop.owlrefplatform.core.sql.Predicate.getName()", "typePred.getName().equals(COL_TYPE.BNODE)", "org.semanticweb.ontop.owlrefplatform.core.sql.Predicate.getName()", "typePred.getName().equals(OBDAVocabulary.SPARQL_SUM_URI)", "typePred.getName().equals(OBDAVocabulary.SPARQL_MIN_URI)", "typePred.getName().equals(OBDAVocabulary.QUEST_URI)", "org.semanticweb.ontop.owlrefplatform.core.sql.SQLGenerator.unifyTypes(ansTypes.get(j),org.semanticweb.ontop.owlrefplatform.core.sql.Predicate)", "typePred.getName().equals(OBDAVocabulary.SPARQL_AVG_URI)", "org.semanticweb.ontop.owlrefplatform.core.sql.Predicate.isDataTypePredicate()", "org.semanticweb.ontop.owlrefplatform.core.sql.Predicate.getName()"], "Fixed commit": "6b4b2b21264e99f7d623a06cd7ea3f92c0116a32", "Url": "https://api.github.com/repos/ontop/ontop", "Date": "2015-08-07T09:15:53Z"},
{"Line": "=>1733", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.semanticweb.ontop.owlrefplatform.core.sql.Function.getFunctionSymbol()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (mainFunctionSymbol instanceof org.semanticweb.ontop.owlrefplatform.core.sql.StringOperationPredicate) { type = org.semanticweb.ontop.model.Predicate.COL_TYPE.LITERAL; }else if (mainFunctionSymbol instanceof org.semanticweb.ontop.owlrefplatform.core.sql.BNodePredicate) { type = org.semanticweb.ontop.model.Predicate.COL_TYPE.BNODE; }else { type = dtfac.getDatatype(mainFunctionSymbol.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4991/buggy-version/reformulation-core.src.main.java.org.semanticweb.ontop.owlrefplatform.core.sql.SQLGenerator.java", "BodyUseAPI": ["org.semanticweb.ontop.owlrefplatform.core.sql.Predicate.toString()", "org.semanticweb.ontop.owlrefplatform.core.sql.DatatypeFactory.getDatatype(mainFunctionSymbol.toString())"], "Fixed commit": "6b4b2b21264e99f7d623a06cd7ea3f92c0116a32", "Url": "https://api.github.com/repos/ontop/ontop", "Date": "2015-08-07T09:15:53Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!shutdown) { org.bukkit.Bukkit.getScheduler().runTaskLater(org.mcsg.survivalgames.GameManager.getInstance().getPlugin(), new java.lang.Runnable() { @java.lang.Override public void run() { while (ent.hasNext()) { org.bukkit.entity.Entity e = ent.next(); if (e.isValid()) e.remove(); ent.remove(); } } }, 2); }else { while (ent.hasNext()) { org.bukkit.entity.Entity e = ent.next(); if (e.isValid()) e.remove(); ent.remove(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1564/buggy-version/src.main.java.org.mcsg.survivalgames.logging.QueueManager.java", "BodyUseAPI": [], "Fixed commit": "30d1ab2297f94d35c74988e1bd6bf425647eb4af", "Url": "https://api.github.com/repos/khobbits/Survival-Games", "Date": "2013-06-28T07:04:09Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (error != null) { model.addAttribute(\"error\", \"Virheellinen k\u00e4ytt\u00e4j\u00e4nimi tai salasana.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7769/buggy-version/grind.src.main.java.controller.TaskController.java", "BodyUseAPI": [], "Fixed commit": "52fd9b7aa22de89faf5451468f9da27b968ca7d8", "Url": "https://api.github.com/repos/InkaH/tehtavanhallinta", "Date": "2015-12-08T21:43:03Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["input.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(email.matches(\"^[a-zA-Z0-9_\\\\-+%\\\\.]+@[a-zA-Z0-9\\\\-\\\\.]+\\\\.[a-zA-Z\\\\.]{2,6}$\"))) { android.widget.Toast.makeText(this, \"Invalid Email\", Toast.LENGTH_SHORT).show(); }else { Util.emails.add(email); data.PreferencesLayer.getInstance().setEmails(Util.emails); listAdapter.notifyDataSetChanged(); listView.invalidateViews(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8100/buggy-version/android.app.src.main.java.activities.EmailAddresses.java", "BodyUseAPI": ["Util.emails.add(java.lang.String)"], "Fixed commit": "cbd559c39a667a120505ab531f7944b1fdf73d7e", "Url": "https://api.github.com/repos/stevex86/RandomActsOfKindness", "Date": "2015-03-08T07:52:17Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["input.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((phoneNumber.length()) != 10) { android.widget.Toast.makeText(this, \"Invalid phone number\", Toast.LENGTH_SHORT).show(); }else { Util.phoneNumbers.add(phoneNumber); data.PreferencesLayer.getInstance().setPhoneNumbers(Util.phoneNumbers); listAdapter.notifyDataSetChanged(); listView.invalidateViews(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8100/buggy-version/android.app.src.main.java.activities.PhoneNumbers.java", "BodyUseAPI": ["Util.phoneNumbers.add(java.lang.String)"], "Fixed commit": "cbd559c39a667a120505ab531f7944b1fdf73d7e", "Url": "https://api.github.com/repos/stevex86/RandomActsOfKindness", "Date": "2015-03-08T07:52:17Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((receiver) != null) { unregisterReceiver(receiver); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5839/buggy-version/SpeedoMeter.app.src.main.java.com.example.suneet.speedometer.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f7ba35d45a9c5a84ab197b6e0ca12e2d45275257", "Url": "https://api.github.com/repos/codedsun/SpeedoMeter", "Date": "2017-07-24T17:05:15Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bank.getClass()) == (client.KBBank.class)) KBBankAccountNumber = \"0\"; else if ((bank.getClass()) == (client.NHBank.class)) NHBankAccountNumber = \"0\"; else WooriBankAccountNumber = \"0\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6427/buggy-version/src.client.Client.java", "BodyUseAPI": ["client.Bank.getClass()"], "Fixed commit": "8367c54f6f34cc627341f49276f1d894b4dda1fe", "Url": "https://api.github.com/repos/KMU-bank/KMU-Bank", "Date": "2015-12-06T16:26:10Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (byteChars.containsKey(c)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2339/buggy-version/Core.src.net.gerritk.bytefont.ByteFont.java", "BodyUseAPI": [], "Fixed commit": "ef4a15f8792d87b98039882fc2074578d138ec2c", "Url": "https://api.github.com/repos/GerritK/ByteFont", "Date": "2015-03-11T20:45:31Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.resolve(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (java.nio.file.Files.exists(expandedPath)) { try { alien4cloud.utils.FileUtil.zip(expandedPath, zippedPath); return zippedPath; } catch (java.io.IOException e) { log.error((\"Failed to zip directory \" + expandedPath), e); throw new alien4cloud.component.repository.exception.CSARVersionNotFoundException(((((\"CSAR: \" + name) + \", Version: \") + version) + \" not found in the repository.\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2793/buggy-version/alien4cloud-core.src.main.java.alien4cloud.component.repository.CsarFileRepository.java", "BodyUseAPI": ["alien4cloud.utils.FileUtil.zip(java.nio.file.Path,java.nio.file.Path)", "alien4cloud.component.repository.CsarFileRepository.error(java.lang.String,java.io.IOException)"], "Fixed commit": "97d845e82eab15b4126a6aa85e8153a96ef8880c", "Url": "https://api.github.com/repos/alien4cloud/alien4cloud", "Date": "2015-11-27T12:56:47Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reports[month]) == null) reports[month] = new Rev_report();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6351/buggy-version/src.Rev_rep_list.java", "BodyUseAPI": [], "Fixed commit": "3103b96f5d133fae835304b15ecacf1b8125331c", "Url": "https://api.github.com/repos/Chen-Hailin/RRPSS", "Date": "2016-11-08T14:12:37Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(fIsLightweightAutoRefresh)) || ((org.eclipse.core.resources.IResourceStatus.FAILED_READ_LOCAL) != (e.getStatus().getCode()))) { java.lang.String[] args = new java.lang.String[]{ getExceptionMessage(e), file.getFullPath().makeRelative().toString() }; java.lang.String message = org.eclipse.search.internal.ui.Messages.format(SearchMessages.TextSearchVisitor_error, args); return new org.eclipse.core.runtime.Status(org.eclipse.core.runtime.IStatus.ERROR, org.eclipse.search.ui.NewSearchUI.PLUGIN_ID, org.eclipse.core.runtime.IStatus.ERROR, message, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8619/buggy-version/org.eclipse.search.search.org.eclipse.search.internal.core.text.TextSearchVisitor.java", "BodyUseAPI": ["org.eclipse.search.internal.core.text.TextSearchVisitor.getExceptionMessage(org.eclipse.core.runtime.CoreException)"], "Fixed commit": "8e77ba037585e316d24b11d18bf19c67d668141f", "Url": "https://api.github.com/repos/eclipse/eclipse.platform.text", "Date": "2015-03-17T10:57:52Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resultObj.getInt(\"status\")) == 210) { java.lang.System.out.println(\"\u6ca1\u6709\u4fe1\u606f\"); pw.println(\"\u6ca1\u6709\u4fe1\u606f\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7182/buggy-version/src.main.java.verify_service.credit_check.java", "BodyUseAPI": [], "Fixed commit": "d7a96e9a70c85c1ee4c8565d6617a4743858ec6b", "Url": "https://api.github.com/repos/fanfannnmn/aliyun-id-verify", "Date": "2017-11-03T03:37:14Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((++count) < (headers.size())) { builder.addSP(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7655/buggy-version/src.main.java.au.id.villar.net.imap.Fetch.java", "BodyUseAPI": [], "Fixed commit": "b9e6b7b92e288f912a319245f8c8307d5fae36c4", "Url": "https://api.github.com/repos/morgano5/commons-net-bis", "Date": "2017-05-01T00:10:31Z"},
{"Line": "=>822", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reallyComplete) { reserveToCheckout.setCheckedIn(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1347/buggy-version/HotelManagement.src.hotelmanagement.HotelManagement.java", "BodyUseAPI": [], "Fixed commit": "53741ddc1210c88046f3a1891e90384b5f1f0ae1", "Url": "https://api.github.com/repos/varygoode/321-project", "Date": "2016-03-27T20:20:09Z"},
{"Line": "=>1803", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((actualTypes[i]) instanceof java.lang.reflect.TypeVariable) { type = typeArgsMap.get(((java.lang.reflect.TypeVariable<?>) (actualTypes[i])).getName()); }else if ((actualTypes[i]) instanceof java.lang.Class) { type = actualTypes[i]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6424/buggy-version/src.main.java.uk.co.jemos.podam.api.PodamFactoryImpl.java", "BodyUseAPI": ["java.lang.reflect.Type.getName()", "java.util.Map<java.lang.String, java.lang.reflect.Type>.get(java.lang.String)"], "Fixed commit": "8fc9c186ae23a9917e1f180942d50ec5a7bf2887", "Url": "https://api.github.com/repos/daivanov/joinmo", "Date": "2015-02-21T19:45:12Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.newerData) == null) { this.newerData = new java.util.HashMap<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1154/buggy-version/src.main.java.io.sysmo.nchecks.states.PerformanceGroupState.java", "BodyUseAPI": [], "Fixed commit": "be56580516a4c2f0f60a105e71b7b794ee36ac8f", "Url": "https://api.github.com/repos/sysmo-nms/nchecks", "Date": "2016-06-02T07:56:34Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((arg1 instanceof formulator.ConstantElement) && (arg2 instanceof formulator.ConstantElement)) { java.lang.Double d_arg1 = ((formulator.ConstantElement) (arg1)).getValue(); java.lang.Double d_arg2 = ((formulator.ConstantElement) (arg2)).getValue(); addArgument(new formulator.ConstantElement((d_arg1 * d_arg2))); }else { addArgument(arg1); addArgument(arg2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4273/buggy-version/Calc3.src.formulator.MultipleFunctionElement.java", "BodyUseAPI": [], "Fixed commit": "da28a897dc97c8515e0553bc4e106e4da5ea3aec", "Url": "https://api.github.com/repos/FlamingoIndustries/Calculator3.0", "Date": "2014-04-29T23:18:13Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ioLog) != null) ioLog.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/300/buggy-version/src.org.csgeeks.TinyG.Support.TinyGService.java", "BodyUseAPI": [], "Fixed commit": "6891fddb71ea5ecec391360123599468c96c3cb0", "Url": "https://api.github.com/repos/mattstock/android-tinyg", "Date": "2013-07-22T15:47:52Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((columns.length) > 0) { locations.add(new com.music.cornell.music.Place(columns)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/240/buggy-version/app.src.main.java.com.music.cornell.music.LocationHolder.java", "BodyUseAPI": [], "Fixed commit": "5987a5d9b841f845a836b0e67ce66ba7bdef77c5", "Url": "https://api.github.com/repos/spdrucker/CAES-App", "Date": "2016-11-21T23:09:56Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.uic.service.imp.StudentServiceImp.getListObject(java.lang.String,java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tl.size()) > 0) { time = tl.get(0); stuTime = getStudentPreTime(time.getWeek(), time.getDay(), time.getTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8002/buggy-version/src.com.uic.service.imp.StudentServiceImp.java", "BodyUseAPI": ["java.util.List<com.uic.domain.Timeslot>.get(int)"], "Fixed commit": "998d5a65cbbdfc7045d611474dda6180e117d670", "Url": "https://api.github.com/repos/UIC-FYP-2014-Fall/FYP-Coordination-System", "Date": "2014-12-22T08:02:12Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.uic.service.inter.StudentServiceInter.getSupervisor(stuAl.get(i))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((al.size()) > 1) { for (int j = 0; j < (al.size()); j++) { supervisors = ((al.get(j).getName()) + \", \") + supervisors; } }else { supervisors = al.get(0).getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8002/buggy-version/src.com.uic.web.struts.action.ExportAction.java", "BodyUseAPI": ["java.util.ArrayList<com.uic.domain.Teacher>.get(int)", "al.get(0).getName()", "al.get(j).getName()", "java.util.ArrayList<com.uic.domain.Teacher>.size()", "java.util.ArrayList<com.uic.domain.Teacher>.get(int)"], "Fixed commit": "998d5a65cbbdfc7045d611474dda6180e117d670", "Url": "https://api.github.com/repos/UIC-FYP-2014-Fall/FYP-Coordination-System", "Date": "2014-12-22T08:02:12Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.esa.beam.framework.datamodel.Product, org.esa.beam.visat.toolviews.stat.ScatterPlotPanel.UserSettings>.remove(event.getProduct())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (userSettings != null) { userSettings.dispose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1769/buggy-version/beam-visat-rcp.src.main.java.org.esa.beam.visat.toolviews.stat.ScatterPlotPanel.java", "BodyUseAPI": ["org.esa.beam.visat.toolviews.stat.ScatterPlotPanel.UserSettings.dispose()"], "Fixed commit": "675ab52f98ce7ac4d333a1d5d48e8286f42f33de", "Url": "https://api.github.com/repos/bcdev/beam", "Date": "2012-08-31T08:28:01Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["rawChunk.getBeds().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (be != null) color = tectonicus.world.Colors.byId(be.getColor()).getName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1453/buggy-version/Source.tectonicus.blockTypes.BedNew.java", "BodyUseAPI": ["tectonicus.raw.BedEntity.getColor()", "tectonicus.world.Colors.byId(be.getColor())", "tectonicus.world.Colors.byId(be.getColor()).getName()"], "Fixed commit": "50ab45ca7c37a93a72e3c2a0ca2086a0dd5da49e", "Url": "https://api.github.com/repos/tectonicus/tectonicus", "Date": "2017-11-10T06:53:18Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((wrapped.body.currentAnim) != null) wrapped.animate();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6940/buggy-version/src.main.java.thut.extra.client.smd.SMDModel.java", "BodyUseAPI": ["thut.extra.client.smd.impl.SmdModelLoader.animate()"], "Fixed commit": "55fbc043afb811dbe25b48e24d1b6f12cf0dc94f", "Url": "https://api.github.com/repos/Thutmose/ThutExtras", "Date": "2017-08-03T02:57:00Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((library.graphs.SCC.dfs_num[v]) == (-1)) { library.graphs.SCC.tarjanSCC(v); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7987/buggy-version/graphs.SCC.java", "BodyUseAPI": ["library.graphs.SCC.tarjanSCC(int)"], "Fixed commit": "53bc73caa78c2d3affdfd11a2a4399110bd35e60", "Url": "https://api.github.com/repos/mostafa-abdullah/algorithms-library", "Date": "2016-06-18T12:58:31Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { getActivity().runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { setGridView(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/396/buggy-version/app.src.main.java.com.example.henrybethke.popularmovies.MainActivityFragment.java", "BodyUseAPI": [], "Fixed commit": "ab64bfbf4058e0683280a53a9004168a06bc8f38", "Url": "https://api.github.com/repos/henrybethke/Popular-Movies", "Date": "2015-12-21T01:08:02Z"},
{"Line": "=>501", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(isReadOnly())) && (!(isAutoCommit))) { connection.rollback(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6447/buggy-version/dspace-api.src.main.java.org.dspace.core.Context.java", "BodyUseAPI": [], "Fixed commit": "6ff431e3d0f08816b4cc0f2e5c0e80c566c456fc", "Url": "https://api.github.com/repos/CILEA/DSpace", "Date": "2013-08-03T14:15:12Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (main.isTablet) { ((android.widget.EditText) (main.findViewById(R.id.tasks_new))).setOnFocusChangeListener(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6414/buggy-version/src.de.azapps.mirakel.main_activity.TaskFragment.java", "BodyUseAPI": ["de.azapps.mirakel.main_activity.MainActivity.findViewById(R.id.tasks_new)", "((android.widget.EditText) (main.findViewById(R.id.tasks_new))).setOnFocusChangeListener(<nulltype>)"], "Fixed commit": "d65bc8b30beeed38aaaadd16888b032e573375b4", "Url": "https://api.github.com/repos/azapps/mirakel-android", "Date": "2013-09-22T13:30:53Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (presenter.getUnitMeasuerement().equals(\"mg/dL\")) { readingTextView.setText(java.lang.String.valueOf(readingToEdit.getReading())); }else { readingTextView.setText(java.lang.String.valueOf(presenter.convertToMmol(readingToEdit.getReading()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7272/buggy-version/app.src.main.java.org.glucosio.android.activity.AddGlucoseActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "org.glucosio.android.presenter.AddGlucosePresenter.convertToMmol(readingToEdit.getReading())", "java.lang.String.valueOf(presenter.convertToMmol(readingToEdit.getReading()))"], "Fixed commit": "1296617bdf8b14a43948640f9ac8b42fed8ab334", "Url": "https://api.github.com/repos/Glucosio/glucosio-android", "Date": "2016-10-14T08:55:35Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mServerObject.getNumUsersOnline()) == 0) enfieldacademy.convrgecompanion.ConVRgeHelper.clearIndividualPlayerNotifications(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2807/buggy-version/app.src.main.java.enfieldacademy.convrgecompanion.ConVRgeCompanionService.java", "BodyUseAPI": [], "Fixed commit": "59c99cefa14072c7ec9a5d451a99a20a6e5b8f5c", "Url": "https://api.github.com/repos/christiancoleman/Who-s-Online-for-ConVRge", "Date": "2015-12-04T19:22:00Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((match.getImgs().size()) > 0) imageLoader.displayImage(match.getImgs().get(0).getUrl(), imageSwitcher, 1, height, width);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/994/buggy-version/app.src.main.java.activities.ProfileActivity.java", "BodyUseAPI": ["match.getImgs().get(int)", "Abstract.AbstractUsersData.getImgs()", "match.getImgs().get(0).getUrl()", "memory.ImageLoader.displayImage(match.getImgs().get(0).getUrl(),android.widget.ImageSwitcher,int,int,int)"], "Fixed commit": "3e2f2ca8125ad7446c2ac8fdb7b58c287337272c", "Url": "https://api.github.com/repos/kebouh/Android-SitchozrApp-AndroidStudio", "Date": "2015-11-19T00:24:32Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (metaDataSecurityDomain == null) { if (unit.hasAttachment(UndertowAttachments.DEFAULT_SECURITY_DOMAIN)) { metaDataSecurityDomain = unit.getAttachment(UndertowAttachments.DEFAULT_SECURITY_DOMAIN); }else { metaDataSecurityDomain = org.jboss.security.SecurityConstants.DEFAULT_APPLICATION_POLICY; } }else { metaDataSecurityDomain = org.jboss.security.SecurityUtil.unprefixSecurityDomain(metaDataSecurityDomain.trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/9226/buggy-version/webservices.server-integration.src.main.java.org.jboss.as.webservices.service.EndpointService.java", "BodyUseAPI": ["org.jboss.security.SecurityUtil.unprefixSecurityDomain(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "6c7bed10a7446ca0e589ed2eb3a932f31f0cf863", "Url": "https://api.github.com/repos/ChesterSVK/wildfly", "Date": "2017-07-27T21:04:11Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["p.getClass().getResourceAsStream(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (inStream == null) throw new java.io.FileNotFoundException((\"Could not find file: /plugin.info @ \" + (p.getClass().getName())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6045/buggy-version/src.heroesgrave.spade.main.Spade.java", "BodyUseAPI": [], "Fixed commit": "c078648287f57c1b787132cc25769b4af5ceaa6e", "Url": "https://api.github.com/repos/Longor1996/Spade", "Date": "2014-12-30T14:36:58Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.dataParser.getInt(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (mode == 4) shunt.setVscDcLine(this.dataParser.getString(\"RMIDNT\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5550/buggy-version/ieee.odm_pss.src.org.ieee.odm.adapter.psse.mapper.aclf.PSSESwitchedSShuntDataMapper.java", "BodyUseAPI": [], "Fixed commit": "3542d11bb901c0f475bd45439bcbc8bb9c7d844f", "Url": "https://api.github.com/repos/InterPSS-Project/ipss-odm", "Date": "2013-11-20T15:37:38Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.fasterxml.jackson.databind.JsonNode>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (curField.get(\"fieldType\").asText().equalsIgnoreCase(\"facet\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5763/buggy-version/src.main.java.uk.ac.ebi.biostudies.api.util.analyzer.AnalyzerManager.java", "BodyUseAPI": [], "Fixed commit": "4ff78056162269e4fc9f00ff0327cd0b9eb51ac4", "Url": "https://api.github.com/repos/EBIBioStudies/ribs", "Date": "2017-10-11T15:52:22Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item1.levelupRequirements) == null) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5094/buggy-version/AndorsTrail.src.com.gpl.rpg.AndorsTrail.view.SkillListAdapter.java", "BodyUseAPI": [], "Fixed commit": "f528953d959cd290088381ac804547951cd7ef8a", "Url": "https://api.github.com/repos/HummusSamurai/andors-trail", "Date": "2017-03-01T14:42:03Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item2.levelupRequirements) == null) return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5094/buggy-version/AndorsTrail.src.com.gpl.rpg.AndorsTrail.view.SkillListAdapter.java", "BodyUseAPI": [], "Fixed commit": "f528953d959cd290088381ac804547951cd7ef8a", "Url": "https://api.github.com/repos/HummusSamurai/andors-trail", "Date": "2017-03-01T14:42:03Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isEmpty(copyFromVersionSlug)) { setDefaultCopyFromVersion(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1637/buggy-version/zanata-war.src.main.java.org.zanata.action.VersionHome.java", "BodyUseAPI": [], "Fixed commit": "689ed8f6b8928db4af5ceccf04afc55d8a283612", "Url": "https://api.github.com/repos/zanata/zanata-server", "Date": "2014-10-28T00:16:13Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.flexiblepower.simulation.battery.BatterySimulation.getCurrentState()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (state != null) { double soc = state.getStateOfCharge(); int socPercentage = ((int) (soc * 100.0)); double capacity = state.getTotalCapacity().doubleValue(org.flexiblepower.simulation.battery.KWH); org.flexiblepower.ral.drivers.battery.BatteryMode mode = state.getCurrentMode(); java.lang.System.out.println((\"ZEN_BAT \" + (java.lang.String.valueOf(socPercentage)))); return new org.flexiblepower.simulation.battery.BatteryWidget.Update(socPercentage, java.lang.String.format(\"%2.1f kWh\", capacity), mode.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8108/buggy-version/flexiblepower.simulation.battery.src.org.flexiblepower.simulation.battery.BatteryWidget.java", "BodyUseAPI": ["state.getTotalCapacity().doubleValue(org.flexiblepower.simulation.battery.KWH)", "org.flexiblepower.ral.drivers.battery.BatteryState.getStateOfCharge()", "org.flexiblepower.ral.drivers.battery.BatteryState.getTotalCapacity()", "org.flexiblepower.ral.drivers.battery.BatteryState.getCurrentMode()"], "Fixed commit": "72286e4b8529e602363546d71b32aee73bec8b17", "Url": "https://api.github.com/repos/flexiblepower/fpai-apps", "Date": "2015-11-29T12:18:51Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.invoke(server.RMI_Server.obtbl.getObject(key),java.lang.Object[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (returnValue != null) java.lang.System.out.println((\"return class:\" + (returnValue.getClass())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1341/buggy-version/src.server.RMI_Server.java", "BodyUseAPI": ["java.lang.Object.getClass()", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "9080aa8c4d676a5647286b757a6fb3910a56457c", "Url": "https://api.github.com/repos/lavalake/lab2Rmi", "Date": "2014-10-06T03:55:52Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(claimedViews.contains(viewId))) { claimedViews.add(viewId); if ((claimedViews.size()) == (renderers.size())) { displayUnit(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5418/buggy-version/shop-list.src.main.java.net.buggy.shoplist.units.Unit.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.size()", "java.util.List<java.lang.Integer>.add(int)"], "Fixed commit": "7a7fc50a0e16f5f94305e85deec1973fb3dcfa17", "Url": "https://api.github.com/repos/bugy/SheLi", "Date": "2017-03-12T11:55:23Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.Spinner.getAdapter()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((adapter.getCount()) > 0) { spinner.setSelection(0, true); com.firebirdberlin.tinytimetracker.TrackerEntry tracker = ((com.firebirdberlin.tinytimetracker.TrackerEntry) (spinner.getItemAtPosition(0))); android.util.Log.i(com.firebirdberlin.tinytimetracker.MainFragment.TAG, (\"Tracker selected \" + (tracker.verbose_name))); de.greenrobot.event.EventBus bus = de.greenrobot.event.EventBus.getDefault(); bus.post(new com.firebirdberlin.tinytimetracker.OnTrackerSelected(tracker)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/145/buggy-version/android.src.com.firebirdberlin.tinytimetracker.MainFragment.java", "BodyUseAPI": [], "Fixed commit": "02e101324ac7a8d4c2ecd4e350e3044fc5a5e744", "Url": "https://api.github.com/repos/firebirdberlin/tinytimetracker", "Date": "2016-05-11T14:53:44Z"},
{"Line": "=>1511", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cluster.isNodeGroupAware()) && (isOnSameNodeGroupWithReplicas(target, block, source))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2900/buggy-version/src.hdfs.org.apache.hadoop.hdfs.server.balancer.Balancer.java", "BodyUseAPI": [], "Fixed commit": "af6dad84ffa27222237a90312688ac941d9977b7", "Url": "https://api.github.com/repos/vmware-bdc/hadoop-common-topology", "Date": "2012-09-10T08:26:32Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(skipSchemaErrors)) { throw new java.io.IOException(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5647/buggy-version/camus-etl-kafka.src.main.java.com.linkedin.camus.etl.kafka.mapred.EtlRecordReader.java", "BodyUseAPI": [], "Fixed commit": "4024f8fef5b911fca8f4aab528902a4e44a7c7ed", "Url": "https://api.github.com/repos/kameshb/camus", "Date": "2016-08-12T08:29:00Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f.getName().equalsIgnoreCase(\"sigla\")) { java.lang.System.out.println(\"parada\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4193/buggy-version/src.utils.GenerateUtils.java", "BodyUseAPI": [], "Fixed commit": "d955f30055fb86f1981f3fc4c4695436f51dd18d", "Url": "https://api.github.com/repos/iileandro/moduleMaker", "Date": "2017-07-30T16:23:02Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.equalsIgnoreCase(\"\")) { type = \"Notification\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1643/buggy-version/eOMP.ElasticityOperationsManagementPlatform.src.main.java.at.ac.tuwien.dsg.rsybl.operationsmanagementplatform.managedBeans.InformationManagedBean.java", "BodyUseAPI": [], "Fixed commit": "b6e3c1b53a9bed06fe86e1840116d8333757bcfd", "Url": "https://api.github.com/repos/tuwiendsg/rSYBL", "Date": "2015-05-29T15:14:23Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null == text) || (text.isEmpty())) return java.util.Collections.emptyList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2239/buggy-version/back-end.src.com.tidings.backend.domain.TextSanitizer.java", "BodyUseAPI": [], "Fixed commit": "899c2de757a42b24669cb7c3b9f0574537bec7e4", "Url": "https://api.github.com/repos/dvguruprasad/tidings", "Date": "2012-08-14T05:16:09Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.umn.fingagunz.gametime.domain.Game.getGameDate()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (gameDate != null) { ((android.widget.TextView) (findViewById(R.id.game_time_label))).setText(new java.text.SimpleDateFormat(\"h:mm a\").format(game.getGameDate())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4157/buggy-version/app.src.main.java.edu.umn.fingagunz.gametime.AddEditGameActivity.java", "BodyUseAPI": [], "Fixed commit": "f6d0ebc4588820e98caa4b8484df4cfc26bd55fe", "Url": "https://api.github.com/repos/weis0292/GameTime", "Date": "2015-05-08T00:49:50Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.res.TypedArray.getDrawable(R.styleable.FloatLabeledEditText_fletBackground)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (background != null) { if ((android.os.Build.VERSION.SDK_INT) >= (android.os.Build.VERSION_CODES.JELLY_BEAN)) { mHintTextView.setBackground(background); }else { mHintTextView.setBackgroundDrawable(background); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3270/buggy-version/library.src.com.wrapp.floatlabelededittext.FloatLabeledEditText.java", "BodyUseAPI": ["android.widget.TextView.setBackground(android.graphics.drawable.Drawable)", "android.widget.TextView.setBackgroundDrawable(android.graphics.drawable.Drawable)"], "Fixed commit": "9a2644a29ff0ac52831f0d51d0972317702e1dc0", "Url": "https://api.github.com/repos/wrapp-archive/floatlabelededittext", "Date": "2014-12-18T01:16:48Z"},
{"Line": "=>727", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (includeCommands) { java.util.Collection<org.apache.commons.cli.Option> optionList = options.getOptions(); for (org.apache.commons.cli.Option option : optionList) { if (option.getOpt().startsWith(text)) { matches.add(option.getOpt()); } if ((option.hasLongOpt()) && (option.getLongOpt().startsWith(text))) { matches.add(option.getLongOpt()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1080/buggy-version/sudokil.core.src.com.custardgames.sudokil.managers.CommandLineManager.java", "BodyUseAPI": [], "Fixed commit": "53ff51caec8e75df84750b996715c44f540f0947", "Url": "https://api.github.com/repos/locknic/Sudokil", "Date": "2017-03-15T11:11:18Z"},
{"Line": "=>868", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((width % 2) > 0) width += 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/31/buggy-version/src.uploadframe.UploadFrameView.java", "BodyUseAPI": [], "Fixed commit": "4beabcb8defb0eaffb0e71d168b0169f86060004", "Url": "https://api.github.com/repos/jerrcs/dapp", "Date": "2011-07-19T01:26:51Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(shapes.isEmpty())) shapes.get(i).draw(this, \"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1104/buggy-version/Project2.src.drawings2.DrawingPalette.java", "BodyUseAPI": ["java.util.ArrayList<java.awt.Shape>.get(int)", "java.awt.Shape.draw(drawings2.DrawingPalette,java.lang.String)"], "Fixed commit": "70e9ca4bf06567991a56bd436398afbb3cf42898", "Url": "https://api.github.com/repos/apetricc/workspace", "Date": "2016-10-14T19:04:04Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.ebay.gpf.paas.faultinject.web.server.persistence.JsonPersistence.logger.isDebugEnabled()) com.ebay.gpf.paas.faultinject.web.server.persistence.JsonPersistence.logger.debug(java.lang.String.format(\"The IP [%s] required to load the application [%s]\", ip, application.getAppId()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8620/buggy-version/src.main.java.com.ebay.gpf.paas.faultinject.web.server.persistence.JsonPersistence.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "38bbe383a124077fca2180d5da20b72ad7799297", "Url": "https://api.github.com/repos/xuyun1976/FaultInjectWeb", "Date": "2015-08-10T16:54:49Z"},
{"Line": "=>1016", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (local != null) { return local.containsKey(label); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1287/buggy-version/src.main.java.io.usethesource.vallang.type.TypeStore.java", "BodyUseAPI": ["java.util.Map<java.lang.String, io.usethesource.vallang.type.Type>.containsKey(java.lang.String)"], "Fixed commit": "0cba23866480d99a54fed77f56277ef802c83f74", "Url": "https://api.github.com/repos/usethesource/vallang", "Date": "2017-08-18T06:27:49Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(line.contains(\"<th\"))) { com.jvcruz.generator.main.Generator.lines.add(((\"entity.setUpdatedby(\" + (model.toLowerCase())) + \".getUpdatedby());\")); com.jvcruz.generator.main.Generator.lines.add(((\"entity.setUpdatedat(\" + (model.toLowerCase())) + \".getUpdatedat());\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2743/buggy-version/src.main.java.com.jvcruz.generator.main.Generator.java", "BodyUseAPI": [], "Fixed commit": "bf910b2a9de3f19bd8aefeab58c496c6ce51db7b", "Url": "https://api.github.com/repos/jvmcruz/generator", "Date": "2017-05-21T07:30:58Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (numSlots < (cells.size())) { cells.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7708/buggy-version/engine.src.main.java.org.terasology.rendering.nui.layers.ingame.inventory.InventoryGrid.java", "BodyUseAPI": ["java.util.List<org.terasology.rendering.nui.layers.ingame.inventory.InventoryCell>.clear()"], "Fixed commit": "bfd1884a482ba086a708d14fbd47ca31319b125b", "Url": "https://api.github.com/repos/MovingBlocks/Terasology", "Date": "2014-09-17T15:12:33Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sslConfig.getTrustStorePath()) != null) { java.io.InputStream trustStoreIS = org.eclipse.jetty.util.resource.Resource.newResource(sslConfig.getTrustStorePath()).getInputStream(); final java.security.KeyStore trustStore = java.security.KeyStore.getInstance(sslConfig.getTrustStoreType()); trustStore.load(trustStoreIS, sslConfig.getTrustStorePassword().toCharArray()); final javax.net.ssl.TrustManagerFactory trustManagerFactory = javax.net.ssl.TrustManagerFactory.getInstance(javax.net.ssl.TrustManagerFactory.getDefaultAlgorithm()); trustManagerFactory.init(trustStore); trustManagers = trustManagerFactory.getTrustManagers(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7189/buggy-version/src.main.java.com.discoverydns.dnsapiclient.internal.DefaultSSLContextFactory.java", "BodyUseAPI": ["org.eclipse.jetty.util.resource.Resource.newResource(sslConfig.getTrustStorePath())", "com.discoverydns.dnsapiclient.config.DefaultSSLContextFactoryConfig.getTrustStoreType()", "java.security.KeyStore.load(java.io.InputStream,sslConfig.getTrustStorePassword().toCharArray())", "com.discoverydns.dnsapiclient.config.DefaultSSLContextFactoryConfig.getTrustStorePath()", "com.discoverydns.dnsapiclient.config.DefaultSSLContextFactoryConfig.getTrustStorePassword()", "org.eclipse.jetty.util.resource.Resource.newResource(sslConfig.getTrustStorePath()).getInputStream()", "java.security.KeyStore.getInstance(sslConfig.getTrustStoreType())", "sslConfig.getTrustStorePassword().toCharArray()"], "Fixed commit": "5efcc7072d750219cb86799e5db94e64f08fa89a", "Url": "https://api.github.com/repos/discoverydns/dnsapi-client", "Date": "2014-02-04T23:54:36Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFinishing()) mDialogResult = com.android.certinstaller.CertInstaller.CANCELLED;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4522/buggy-version/src.com.android.certinstaller.CertInstaller.java", "BodyUseAPI": [], "Fixed commit": "1c0ebf4585c9cf9c0a451b46bb237b92c14dfe07", "Url": "https://api.github.com/repos/TeamNyx/packages_apps_CertInstaller", "Date": "2009-10-01T11:43:12Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dasein.cloud.openstack.nova.os.AuthenticationContext.getNetworkUrl()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((resource != null) && ((!(endpoint.endsWith(\"/\"))) && (!(resource.startsWith(\"/\"))))) { endpoint = endpoint + \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3959/buggy-version/src.main.java.org.dasein.cloud.openstack.nova.os.NovaMethod.java", "BodyUseAPI": [], "Fixed commit": "405716e9543d3f0faf7b8b07948cb42b1d76f4b6", "Url": "https://api.github.com/repos/greese/dasein-cloud-openstack", "Date": "2013-09-26T11:43:22Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playground.agarwalamit.mixedTraffic.patnaIndia.policies.PatnaPolicyControler.addBikeTrack) outputDir = (playground.agarwalamit.mixedTraffic.patnaIndia.policies.PatnaPolicyControler.dir) + \"/bikeTrack/\"; else if ((playground.agarwalamit.mixedTraffic.patnaIndia.policies.PatnaPolicyControler.applyTrafficRestrain) && (playground.agarwalamit.mixedTraffic.patnaIndia.policies.PatnaPolicyControler.addBikeTrack)) outputDir = (playground.agarwalamit.mixedTraffic.patnaIndia.policies.PatnaPolicyControler.dir) + \"/both/\"; else outputDir = (playground.agarwalamit.mixedTraffic.patnaIndia.policies.PatnaPolicyControler.dir) + \"/baseCaseCtd/\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3297/buggy-version/playgrounds.agarwalamit.src.main.java.playground.agarwalamit.mixedTraffic.patnaIndia.policies.PatnaPolicyControler.java", "BodyUseAPI": [], "Fixed commit": "b4b120dc018a63a1c5af3f919b264bf9b563aeb9", "Url": "https://api.github.com/repos/matsim-org/matsim", "Date": "2016-08-23T22:21:21Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (prefix == null) { prefix = (prefixIdx != (org.exist.xquery.Constants.STRING_NOT_FOUND)) ? qname.substring(0, prefixIdx) : null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/9107/buggy-version/src.org.exist.dom.memtree.MemTreeBuilder.java", "BodyUseAPI": [], "Fixed commit": "c888751a24aa6aace3f2fadcf8488bf6deaf81e4", "Url": "https://api.github.com/repos/dizzzz/exist", "Date": "2015-04-29T20:48:40Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.diyefi.openlogviewer.OpenLogViewerApp.getInstance().getEntireGraphingPanel().getZoom()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (zoom > 5) { if (((atGraphEnd && firstDataPoint) || (prevTraceData == null)) || (!(prevTraceData.equals(traceData)))) { g2d.fillOval((screenPositionXCoord - 2), (screenPositionYCoord - 2), 4, 4); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4609/buggy-version/src.main.java.org.diyefi.openlogviewer.graphing.SingleGraphPanel.java", "BodyUseAPI": [], "Fixed commit": "84279a6858c9849529b007f5d4934fe843861054", "Url": "https://api.github.com/repos/gufi/OpenLogViewer", "Date": "2011-10-20T20:28:10Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (shortName == null) { org.openmrs.ConceptName nameInLocale = aConcept.getName(org.openmrs.util.LocaleUtility.fromSpecification(defaultLocale)); if (nameInLocale != null) { shortName = nameInLocale.getName(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2755/buggy-version/bahmni-emr-api.src.main.java.org.openmrs.module.bahmniemrapi.encountertransaction.mapper.ETObsToBahmniObsMapper.java", "BodyUseAPI": [], "Fixed commit": "bde99fd8a1ebb3e1fad4ab445a98be20e54f214b", "Url": "https://api.github.com/repos/Bahmni/bahmni-core", "Date": "2016-05-19T06:01:56Z"},
{"Line": "=>608", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (leval instanceof com.sipstacks.script.Assignable) { ((com.sipstacks.script.Assignable) (leval)).assign(obj); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5026/buggy-version/src.main.java.com.sipstacks.script.Script.java", "BodyUseAPI": [], "Fixed commit": "58ab726fc978e58712f3f248c08ee1b185e3cf50", "Url": "https://api.github.com/repos/midoricorp/script", "Date": "2015-06-19T07:49:30Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getInventory().getHolder()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (holder instanceof org.bukkit.block.DoubleChest) { holder = ((org.bukkit.block.DoubleChest) (holder)).getLeftSide(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4302/buggy-version/src.com.massivecraft.factions.listeners.FactionsInventoryListener.java", "BodyUseAPI": [], "Fixed commit": "6da903cc6d2573c475832e29f29928bffbeca02c", "Url": "https://api.github.com/repos/DieReicheErethons/FactionsDRE", "Date": "2014-02-06T06:40:42Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(gotLastLocation())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6202/buggy-version/app.src.main.java.org.sunjw.whereami.baidu.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "4955f12367e8103c2acd2402ebbb6a52e5a4c5d4", "Url": "https://api.github.com/repos/sunjw/WhereAmIBaidu", "Date": "2016-08-23T03:28:31Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(wrapped.equals(bridge))) { bridge.setTarget(wrapped); }else { bridge.setTarget(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3823/buggy-version/camel-core.src.main.java.org.apache.camel.processor.interceptor.DefaultChannel.java", "BodyUseAPI": ["org.apache.camel.processor.InterceptorToAsyncProcessorBridge.setTarget(<nulltype>)", "org.apache.camel.processor.InterceptorToAsyncProcessorBridge.setTarget(org.apache.camel.Processor)"], "Fixed commit": "587f43e3beafeaed732ee75876a99f866a331b29", "Url": "https://api.github.com/repos/apache/camel", "Date": "2015-05-21T03:20:13Z"},
{"Line": "=>516", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gateBlock == null) gateBlock = new com.sk89q.craftbook.util.ItemInfo(0, 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3257/buggy-version/src.main.java.com.sk89q.craftbook.mech.Gate.java", "BodyUseAPI": [], "Fixed commit": "402577193ccbb24ea016687fe1b78e0f0c6d0d20", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-10-20T01:59:56Z"},
{"Line": "=>3200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cqframework.cql.cql2elm.Cql2ElmVisitor.parseString(ctx.identifier())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((libraryName == null) || (libraryName.equals(\"System\"))) && (functionName.equals(\"distinct\"))) { functionName = \"Distinct\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4025/buggy-version/Src.java.cql-to-elm.src.main.java.org.cqframework.cql.cql2elm.Cql2ElmVisitor.java", "BodyUseAPI": [], "Fixed commit": "0db677ca4322e23ebc8b903da20846cdafb14fec", "Url": "https://api.github.com/repos/cqframework/clinical_quality_language", "Date": "2017-05-24T18:51:17Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["models.Interest.filterBy(java.util.List<java.util.function.Function<com.avaje.ebean.ExpressionList<models.Interest>, com.avaje.ebean.ExpressionList<models.Interest>>>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (evaluatedOffset > (interests.size())) { return utils.ResponseBuilder.buildBadRequest(\"The offset you have requested is larger than the number of results.\", ResponseBuilder.OUT_OF_RANGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8439/buggy-version/app.controllers.InterestsController.java", "BodyUseAPI": [], "Fixed commit": "beb2b3259b79d974a890618af62df0ba4c877aa9", "Url": "https://api.github.com/repos/simpa2k/PVT-REST-API", "Date": "2017-05-05T17:16:12Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.seam.forge.shell.plugins.builtin.ListCommandsPlugin.render(java.util.List<java.lang.String>,boolean,java.lang.Class,org.jboss.seam.forge.shell.command.CommandMetadata)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(\"\".equals(name))) listData.add(name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4378/buggy-version/shell.src.main.java.org.jboss.seam.forge.shell.plugins.builtin.ListCommandsPlugin.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "4c7a0fc2ad77bc625db94753c6958981edd71e9e", "Url": "https://api.github.com/repos/mojavelinux/seam-forge", "Date": "2010-10-31T04:29:45Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.headers().get(HttpHeaders.ORIGIN)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (origin != null) { switch (origin) { case \"http://agar.io\" : case \"https://agar.io\" : case \"http://localhost\" : case \"https://localhost\" : case \"http://127.0.0.1\" : case \"https://127.0.0.1\" : break; default : ctx.channel().close(); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2383/buggy-version/src.main.java.com.ogarproject.ogar.server.net.WebSocketHandler.java", "BodyUseAPI": [], "Fixed commit": "89cee6b1d62af564b184accd56a983f2d72deb4a", "Url": "https://api.github.com/repos/OgarProject/Ogar2-Server", "Date": "2016-02-16T01:26:24Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getPropertyType()) == (org.openflexo.foundation.fml.action.PropertyEntry.PropertyType.TECHNOLOGY_ROLE)) { java.lang.reflect.Type genericRoleClass = java.lang.Object.class; if ((getFlexoRoleClass()) != null) { genericRoleClass = org.openflexo.connie.type.TypeUtils.getTypeArgument(getFlexoRoleClass(), org.openflexo.foundation.fml.FlexoRole.class, 0); } if (((type) != null) && (org.openflexo.connie.type.TypeUtils.isTypeAssignableFrom(genericRoleClass, type))) { return type; } return genericRoleClass; }else if ((getPropertyType()) == (org.openflexo.foundation.fml.action.PropertyEntry.PropertyType.FLEXO_CONCEPT_INSTANCE)) { if ((getFlexoConcept()) != null) { return getFlexoConcept().getInstanceType(); }else { return org.openflexo.foundation.fml.FlexoConceptInstanceType.UNDEFINED_FLEXO_CONCEPT_INSTANCE_TYPE; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/709/buggy-version/flexo-foundation.src.main.java.org.openflexo.foundation.fml.action.PropertyEntry.java", "BodyUseAPI": [], "Fixed commit": "f68f7940cf9149873ed8aa8b4ce6e3c5bd5f97a9", "Url": "https://api.github.com/repos/openflexo-team/openflexo-core", "Date": "2017-10-19T14:06:48Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.ContentValues.getAsString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(content.startsWith(\"<msg\"))) { content = content.substring(content.indexOf(\"<msg\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2974/buggy-version/app.src.main.java.me.veryyoung.wechat.luckymoney.Main.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "932d16864941fa6ca2b53b7cbce868cfc4b136d9", "Url": "https://api.github.com/repos/veryyoung/WechatLuckyMoney", "Date": "2017-12-29T13:00:43Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ch == (org.neo4j.csv.reader.BufferedCharSeeker.EOL_CHAR)) { (lineNumber)++; return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1961/buggy-version/community.csv.src.main.java.org.neo4j.csv.reader.BufferedCharSeeker.java", "BodyUseAPI": [], "Fixed commit": "07275acb22d6be6fbae3f41f3b09ec0f8c6e3d92", "Url": "https://api.github.com/repos/neo4j/neo4j", "Date": "2015-02-11T17:08:44Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedButtonID == (-1)) && (selectedButton == null)) { checkResult(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7488/buggy-version/app.src.main.java.com.rohantaneja.tictactoe.ComputerActivity.java", "BodyUseAPI": [], "Fixed commit": "2a7cea962c257a31df9bb9ea00aac8b70224261a", "Url": "https://api.github.com/repos/rohan20/Tic-Tac-Toe", "Date": "2017-08-09T04:07:17Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((availableButtonsForComputer.size()) == 0) { disableButtonClicks(); performMove((-1), null); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7488/buggy-version/app.src.main.java.com.rohantaneja.tictactoe.ComputerActivity.java", "BodyUseAPI": [], "Fixed commit": "2a7cea962c257a31df9bb9ea00aac8b70224261a", "Url": "https://api.github.com/repos/rohan20/Tic-Tac-Toe", "Date": "2017-08-09T04:07:17Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (intent == null) { return super.onStartCommand(intent, flags, startId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6615/buggy-version/cachewebviewlib.src.main.java.ren.yale.android.cachewebviewlib.CachePreLoadService.java", "BodyUseAPI": ["android.app.Service.onStartCommand(android.content.Intent,int,int)"], "Fixed commit": "59d9142db913ce4e9b3ef4ec3a59dd6ebb09dd7f", "Url": "https://api.github.com/repos/yale8848/CacheWebView", "Date": "2017-11-22T03:01:21Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.reactome.restfulapi.APIControllerHelper.getContainedEventIds(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((dbIds == null) || ((dbIds.size()) == 0)) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3718/buggy-version/src.org.reactome.restfulapi.RESTfulAPIResource.java", "BodyUseAPI": [], "Fixed commit": "7d28745995d44ddf09742c5bf3f50d1b76f91417", "Url": "https://api.github.com/repos/reactome/RESTfulAPI", "Date": "2015-04-22T20:35:48Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (k > 0) { double x = 1.0 - ((lodThreshold - (lod[(k - 1)])) / ((lod[k]) - (lod[(k - 1)]))); power = x * (p[(k - 1)]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8748/buggy-version/src.org.broadinstitute.cga.tools.gatk.walkers.cancer.mutect.TumorPowerCalculator.java", "BodyUseAPI": [], "Fixed commit": "4979d11d3ac9b2442c282a4fff7c0f0c89582135", "Url": "https://api.github.com/repos/broadinstitute/mutect", "Date": "2011-12-19T17:17:33Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.speedruntracker.SegmentsAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (currentSegment.getDiff().equals(\"-\")) { currentSegment.setDiffColor(android.support.v4.content.ContextCompat.getColor(getApplicationContext(), R.color.textColorPrimary)); }else if (currentSegment.getDiff().contains(\"+\")) { currentSegment.setDiffColor(android.support.v4.content.ContextCompat.getColor(getApplicationContext(), R.color.behindDiffColor)); }else { currentSegment.setDiffColor(android.support.v4.content.ContextCompat.getColor(getApplicationContext(), R.color.aheadDiffColor)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4824/buggy-version/SpeedrunTracker.app.src.main.java.com.example.speedruntracker.TimerActivity.java", "BodyUseAPI": ["com.example.speedruntracker.Segment.getDiff()", "com.example.speedruntracker.Segment.setDiffColor(android.support.v4.content.ContextCompat.getColor(getApplicationContext(), R.color.behindDiffColor))", "currentSegment.getDiff().contains(java.lang.String)", "com.example.speedruntracker.Segment.setDiffColor(android.support.v4.content.ContextCompat.getColor(getApplicationContext(), R.color.textColorPrimary))", "com.example.speedruntracker.Segment.setDiffColor(android.support.v4.content.ContextCompat.getColor(getApplicationContext(), R.color.aheadDiffColor))"], "Fixed commit": "12a728e7603e625625dafbefa280a9ebf0b54d7a", "Url": "https://api.github.com/repos/AustinHinckley/SpeedrunTracker", "Date": "2017-04-16T22:04:10Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resultObj.getInt(\"status\")) == 210) { java.lang.System.out.println(\"\u6ca1\u6709\u4fe1\u606f\"); pw.println(\"\u6ca1\u6709\u4fe1\u606f\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1198/buggy-version/src.main.java.verify_service.credit_check.java", "BodyUseAPI": [], "Fixed commit": "3655be9c765b5079c8093d4045fc0851102d2b1c", "Url": "https://api.github.com/repos/fanfannnmn/aliyun-id-verify", "Date": "2017-10-23T04:46:22Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (frontend.getText().isEmpty()) { document.setFileName(file.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/65/buggy-version/src.org.textanalyzer.documentimporter.DocumentImporter.java", "BodyUseAPI": [], "Fixed commit": "ded4303810216dc56a0f5a7827d5c10361c98458", "Url": "https://api.github.com/repos/Schille/Text-Analyzer", "Date": "2012-11-13T13:14:26Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (listener != null) listener.serverConnectionChanged(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4636/buggy-version/de.remote.mobile.src.de.remote.mobile.services.RemoteBaseService.java", "BodyUseAPI": ["de.remote.mobile.services.RemoteService.IRemoteActionListener.serverConnectionChanged(<nulltype>)"], "Fixed commit": "cd1edf02d6afe7b673f5d67b097e1b7cb6edbe14", "Url": "https://api.github.com/repos/dabastynator/RemoteControlSystem", "Date": "2012-06-15T08:45:17Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == 0) { android.support.v7.widget.RecyclerView.LayoutParams params = ((android.support.v7.widget.RecyclerView.LayoutParams) (viewHolder.rl.getLayoutParams())); params.setMargins(params.leftMargin, ((params.topMargin) + 8), params.rightMargin, params.bottomMargin); viewHolder.rl.setLayoutParams(params); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5939/buggy-version/app.src.main.java.de.appphil.categories.utils.TBMAdapter.java", "BodyUseAPI": [], "Fixed commit": "889f0712a4e151d25fa49cddebd3fa86b31e5ae5", "Url": "https://api.github.com/repos/PhilippDE/Categories", "Date": "2017-06-09T16:39:23Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size) == 0) { array[0] = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1558/buggy-version/ArrayList.java", "BodyUseAPI": [], "Fixed commit": "42c04c0d761d5fc683109737ed528227a8ab4091", "Url": "https://api.github.com/repos/jvadi/CW3", "Date": "2015-01-02T21:42:35Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<objects.Locomotive>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((selectedLoc.getFunnel()) == null) selectedLoc.setColorWithoutFunnel(color, this.id); else selectedLoc.setColor(color, this.id);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5539/buggy-version/sbcm.src.main.java.workers.Painter.java", "BodyUseAPI": ["objects.Locomotive.setColor(java.lang.String,java.lang.Integer)", "objects.Locomotive.setColorWithoutFunnel(java.lang.String,java.lang.Integer)"], "Fixed commit": "2f96fe377ce1dec5e9102b356a4ad41556af861c", "Url": "https://api.github.com/repos/Karatekiwi/sbcm", "Date": "2013-01-23T15:32:03Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((array[(i - 1)]) > temp) { array[i] = array[(i - 1)]; array[(i - 1)] = temp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5990/buggy-version/src.medium.InterruptedBubbleSort.java", "BodyUseAPI": [], "Fixed commit": "f335c557882be0784097e466d747e73c2b293cad", "Url": "https://api.github.com/repos/sergey-zhidkov/CodeEval", "Date": "2015-09-28T13:39:13Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.module.chirdlutilbackports.service.ChirdlUtilBackportsService.getFormAttributeValue(java.lang.Integer,efa.getName(),tag.getId(),currLoc.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((theValue != null) && ((theValue.getValue()) != null)) { theValue.setValue(theValue.getValue().replace(\"\\\\\", org.openmrs.module.atd.web.ConfigFormAttributeValueController.ESCAPE_BACKSLASH)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/520/buggy-version/web.src.org.openmrs.module.atd.web.ConfigFormAttributeValueController.java", "BodyUseAPI": ["org.openmrs.module.chirdlutilbackports.hibernateBeans.FormAttributeValue.setValue(theValue.getValue().replace(\"\\\\\", org.openmrs.module.atd.web.ConfigFormAttributeValueController.ESCAPE_BACKSLASH))", "theValue.getValue().replace(java.lang.String,java.lang.String)", "org.openmrs.module.chirdlutilbackports.hibernateBeans.FormAttributeValue.getValue()"], "Fixed commit": "c4335153561d7d15fc7ae9e7129450b1fe6b827c", "Url": "https://api.github.com/repos/CHIRDL-Openmrs-Modules/atd", "Date": "2015-10-26T18:38:46Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gameLogic.Game.getInstance().getPlayerManager().getCurrentPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (train.isOwnedBy(currentPlayer)) { fvs.taxe.dialog.DialogButtonClicked listener = new fvs.taxe.dialog.DialogButtonClicked(context, currentPlayer, train); fvs.taxe.dialog.DialogResourceTrain dia = new fvs.taxe.dialog.DialogResourceTrain(train, context.getSkin(), ((train.getPosition()) != null)); dia.show(context.getStage()); dia.subscribeClick(listener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6901/buggy-version/taxe.core.src.fvs.taxe.dialog.TrainClicked.java", "BodyUseAPI": ["gameLogic.resource.Train.getPosition()"], "Fixed commit": "d86f4952a182a39b293013fea439d91281914f59", "Url": "https://api.github.com/repos/Dynamic-Underground-Strippers/Assessment3", "Date": "2015-02-15T16:38:13Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((texture) == null) || (texture.equals(\"\"))) { texture = \"C:5\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1481/buggy-version/common.enhancedportals.portal.network.DialDeviceNetworkObject.java", "BodyUseAPI": [], "Fixed commit": "fb6c432dcc0016957e6abffdf5e4e00a3a9544dd", "Url": "https://api.github.com/repos/ShadedDimension/enhanced-portals", "Date": "2013-05-21T21:03:36Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jitsi.videobridge.influxdb.InfluxDBEvent.getValues()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((values[i]) instanceof java.lang.Object[])) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1373/buggy-version/src.org.jitsi.videobridge.influxdb.InfluxDBLoggingHandler.java", "BodyUseAPI": [], "Fixed commit": "df40771a82fcfd7d886ab7de374d8070a8c81172", "Url": "https://api.github.com/repos/jitsi/jitsi-videobridge", "Date": "2015-02-05T14:00:18Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.enchantment.EnchantItemEvent.getEnchantsToAdd()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((toAdd == null) || (toAdd.isEmpty())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4318/buggy-version/src.main.java.net.glowstone.inventory.EnchantmentManager.java", "BodyUseAPI": [], "Fixed commit": "bc537d888f4f81926916321c370580d1a6f0b6be", "Url": "https://api.github.com/repos/Tonodus/Glowstone", "Date": "2014-12-12T18:58:15Z"},
{"Line": "=>1151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((endTimeSec - startTimeSec) < (stripData[((stripData.length) - 1)].yPos)) { endTimeSec = startTimeSec + 60; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2512/buggy-version/app.src.main.java.com.rareventure.gps2.reviewer.timeview.TimeView.java", "BodyUseAPI": [], "Fixed commit": "13408376551b0fcd80676cb2f0971553951114a8", "Url": "https://api.github.com/repos/redfish64/TinyTravelTracker", "Date": "2016-02-20T01:56:37Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (plugin.isIPv6()) connector.setUri(new java.net.URI(\"tcp://[::]:32010\")); else connector.setUri(new java.net.URI(\"tcp://0.0.0.0:32010\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3576/buggy-version/src.main.java.com.researchworx.cresco.controller.communication.ActiveBroker.java", "BodyUseAPI": [], "Fixed commit": "987b913c50c4498c4b72b184d9ae568cc9c048fc", "Url": "https://api.github.com/repos/ResearchWorx/Cresco-Agent-Controller-Plugin", "Date": "2016-08-11T13:25:33Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pageOffsets != null) { this.pageOffsets = pageOffsets; }else { pageOffsets = new java.util.ArrayList<java.util.List<java.lang.Integer>>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4243/buggy-version/src.net.nightwhistler.pageturner.epub.PageTurnerSpine.java", "BodyUseAPI": [], "Fixed commit": "ed983c79e66b44e7e2be188a1e7668de95fffb0d", "Url": "https://api.github.com/repos/NightWhistler/PageTurner", "Date": "2013-04-20T08:25:36Z"},
{"Line": "=>679", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.ednovo.gooru.client.mvp.gshelf.righttabs.MyCollectionsRightClusterView.ASSESSMENT_URL.equalsIgnoreCase(currentTypeView)) { lnkshare.setVisible(false); lnkContent.setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2720/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.gshelf.righttabs.MyCollectionsRightClusterView.java", "BodyUseAPI": [], "Fixed commit": "d76a5096d41ce2851bbaafee8ac6292cb3019782", "Url": "https://api.github.com/repos/chandrasekharv/Gooru-Web", "Date": "2015-10-21T12:26:57Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (specialReportsElementsHandler)) { specialReportsElementsHandler = new jsystem.extensions.report.jsonToHtml.HtmlReporter.SpecialReportElementsHandler(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/256/buggy-version/jsystem-core-projects.jsystemCore.src.main.java.jsystem.extensions.report.jsonToHtml.HtmlReporter.java", "BodyUseAPI": [], "Fixed commit": "b23f7171d8105cfdb1c828dcf68091c454d83739", "Url": "https://api.github.com/repos/Top-Q/jsystem", "Date": "2014-04-12T19:32:55Z"},
{"Line": "=>599", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (element instanceof com.intellij.plugins.haxe.util.HaxeType) { className = ((com.intellij.plugins.haxe.util.HaxeType) (element)).getReferenceExpression().getText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/907/buggy-version/src.common.com.intellij.plugins.haxe.util.HaxeResolveUtil.java", "BodyUseAPI": [], "Fixed commit": "1ee031168c840341d3600866c765e7a87dd656fe", "Url": "https://api.github.com/repos/eliasku/intellij-haxe", "Date": "2016-02-26T07:58:17Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null != resultListener) resultListener.onSearchError(\"Network Error\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5897/buggy-version/visearch-android.src.main.java.com.visenze.visearch.android.http.HttpInstance.java", "BodyUseAPI": ["ViSearch.ResultListener.onSearchError(java.lang.String)"], "Fixed commit": "50edd3eaf13d8302d686eeaffafd68f4de43fe95", "Url": "https://api.github.com/repos/visenze/visearch-sdk-android", "Date": "2015-02-17T09:27:30Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null != resultListener) resultListener.onSearchError(\"Network Error\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5897/buggy-version/visearch-android.src.main.java.com.visenze.visearch.android.http.HttpInstance.java", "BodyUseAPI": ["ViSearch.ResultListener.onSearchError(java.lang.String)"], "Fixed commit": "50edd3eaf13d8302d686eeaffafd68f4de43fe95", "Url": "https://api.github.com/repos/visenze/visearch-sdk-android", "Date": "2015-02-17T09:27:30Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((d1Errors[i]) > maxVal) { maxVal = d1Errors[i]; maxIndex = i; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4020/buggy-version/src.main.java.cornerfinders.impl.combination.SBFSCombinationSegmenter.java", "BodyUseAPI": [], "Fixed commit": "d94caccc1c2c5210939c79ee3f487b1cba6c6ef9", "Url": "https://api.github.com/repos/jaideepray1989/ParallelCornerFinder", "Date": "2014-12-14T08:12:40Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCDIPaint) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8893/buggy-version/src.com.ds.avare.instruments.CDI.java", "BodyUseAPI": [], "Fixed commit": "734dbc140fa3a75fd8089b65d35a4dfacb22a158", "Url": "https://api.github.com/repos/apps4av/avare", "Date": "2015-04-28T09:40:52Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.microsoft.gittf.core.config.GitTFConfiguration.loadFrom(org.eclipse.jgit.lib.Repository)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (currentConfiguration != null) { tempDir = currentConfiguration.getTempDirectory(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6971/buggy-version/com.microsoft.gittf.client.clc.src.main.java.com.microsoft.gittf.client.clc.commands.ConfigureCommand.java", "BodyUseAPI": ["com.microsoft.gittf.core.config.GitTFConfiguration.getTempDirectory()"], "Fixed commit": "b7d646490b02620c4fe15baf2c05b4b0d236e720", "Url": "https://api.github.com/repos/PKRoma/gittf", "Date": "2012-10-19T18:05:49Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.spittr.user.dao.UserRelationshipDao.getMainUserRelationships(com.spittr.user.model.User)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((userRelationships.size()) != 0) { for (com.spittr.user.model.UserRelationship userRelationship : userRelationships) { uids.add(userRelationship.getObjectUser().getUid()); } messages = messageDao.getByUids(uids, tmbefore, com.spittr.message.core.ITEM_PER_PAGE); messages = judgeLikee(com.spittr.message.core.MessageIssues.removeFakeMessage(com.spittr.message.core.MessageIssues.generateFakeMessageList(messages)), mainUser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4627/buggy-version/src.main.java.com.spittr.message.core.MessageServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "4640ead50a2492531004d067f0b6899c76341b4d", "Url": "https://api.github.com/repos/wususu/Mimi-Sever", "Date": "2017-10-10T13:26:47Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v7.content.res.AppCompatResources.getDrawable(com.example.saschpe.customtabs.activity.MainActivity,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (drawable == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2859/buggy-version/customtabs-example.src.main.java.com.example.saschpe.customtabs.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3e8564d0160f6cb358e1d9aac8fa252bdc406547", "Url": "https://api.github.com/repos/saschpe/android-customtabs", "Date": "2017-08-27T12:09:30Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scheduleManager) != null) { dayOffCheckBox.setChecked(scheduleManager.isDayOff()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8473/buggy-version/Handyboy.src.com.vallverk.handyboy.view.schedule.CustomScheduleViewFragment.java", "BodyUseAPI": [], "Fixed commit": "1594a7de832114ef234f7ec261a0ff5abb86c257", "Url": "https://api.github.com/repos/voKrab/HandyBoy", "Date": "2015-02-03T14:49:46Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.jboss.pressgang.ccms.contentspec.client.commands.PushTranslationCommand.MessageType, java.util.List<java.lang.String>>.get(org.jboss.pressgang.ccms.contentspec.client.commands.PushTranslationCommand.MessageType)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(errors.isEmpty())) { com.beust.jcommander.JCommander.getConsole().println(\"Errors:\"); for (final java.lang.String message : errors) { com.beust.jcommander.JCommander.getConsole().println((\"\\t\" + message)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4519/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.client.commands.PushTranslationCommand.java", "BodyUseAPI": [], "Fixed commit": "d9ff2dac8f0d36a73e7e4ab8cf3a939c6b31e137", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSCSPClient", "Date": "2014-03-24T00:19:09Z"},
{"Line": "=>479", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.jboss.pressgang.ccms.contentspec.client.commands.PushTranslationCommand.MessageType, java.util.List<java.lang.String>>.get(org.jboss.pressgang.ccms.contentspec.client.commands.PushTranslationCommand.MessageType)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(warnings.isEmpty())) { com.beust.jcommander.JCommander.getConsole().println(\"Warnings:\"); for (final java.lang.String message : warnings) { com.beust.jcommander.JCommander.getConsole().println((\"\\t\" + message)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4519/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.client.commands.PushTranslationCommand.java", "BodyUseAPI": [], "Fixed commit": "d9ff2dac8f0d36a73e7e4ab8cf3a939c6b31e137", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSCSPClient", "Date": "2014-03-24T00:19:09Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result.matches(\"^\\\\.0*$\")) result = \"0\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8657/buggy-version/src.main.java.com.andrewsears.novus.bc.BC.java", "BodyUseAPI": [], "Fixed commit": "9c74b3e6b86bec2c9542c9aa2292ca6aa92e71fa", "Url": "https://api.github.com/repos/andrewsears/novus-bc", "Date": "2015-03-14T16:55:12Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((quotes[i].indexOf(\"<\")) == 21) { if (pattern.matcher(quotes[i].substring(((quotes[i].indexOf(\">\")) + 1))).matches()) { matches.add(quotes[i]); } }else { if (pattern.matcher(quotes[i].substring(21)).matches()) { matches.add(quotes[i]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6153/buggy-version/src.org.pircbotx.features.Outofcontext.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)", "java.util.regex.Pattern.matcher(java.lang.String)", "java.util.regex.Pattern.matcher(java.lang.String)", "java.lang.String.substring(int)", "java.util.regex.Matcher.matches()", "java.util.regex.Matcher.matches()", "java.util.ArrayList<java.lang.String>.add(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "903b27a275e9a634901c2205993765a984128524", "Url": "https://api.github.com/repos/Heufneutje/HeufyBot", "Date": "2013-09-30T21:36:05Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (target instanceof org.bukkit.entity.Player) { if (((com.gmail.nossr50.skills.unarmed.Unarmed.pvpEnabled) && ((((org.bukkit.entity.Player) (target)).getItemInHand().getType()) == (org.bukkit.Material.AIR))) && (com.gmail.nossr50.util.Permissions.deflect(((org.bukkit.entity.Player) (target))))) { com.gmail.nossr50.skills.unarmed.UnarmedManager unarmedManager = new com.gmail.nossr50.skills.unarmed.UnarmedManager(com.gmail.nossr50.util.Users.getPlayer(((org.bukkit.entity.Player) (target)))); unarmedManager.deflectCheck(event); } if (com.gmail.nossr50.util.Permissions.daze(shooter)) { archeryManager.dazeCheck(((org.bukkit.entity.Player) (target)), event); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1867/buggy-version/src.main.java.com.gmail.nossr50.skills.utilities.CombatTools.java", "BodyUseAPI": [], "Fixed commit": "a16d5b62cf7a8b095c8a0a94158985d27daba6e7", "Url": "https://api.github.com/repos/mcMMO-Dev/mcMMO", "Date": "2013-02-02T19:23:40Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((info.getDsMetaInfo().getJndiConfig()) != null) { sourceList.add(info.getDsMetaInfo().getJndiConfig().getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2005/buggy-version/components.mediation-ui.mediators-ui.org.wso2.carbon.mediator.dblookup.ui.src.main.java.org.wso2.carbon.mediator.dblookup.DBLookupMediatorClient.java", "BodyUseAPI": ["info.getDsMetaInfo().getJndiConfig().getName()", "info.getDsMetaInfo().getJndiConfig()", "java.util.List<java.lang.String>.add(info.getDsMetaInfo().getJndiConfig().getName())", "org.wso2.carbon.ndatasource.ui.stub.core.services.xsd.WSDataSourceInfo.getDsMetaInfo()"], "Fixed commit": "cac567db8df796250f186be9ebb8f7e69043099a", "Url": "https://api.github.com/repos/isudana/carbon-mediation", "Date": "2014-06-05T07:52:02Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((managementAccess) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8341/buggy-version/src.main.java.orca.flukes.OrcaNode.java", "BodyUseAPI": [], "Fixed commit": "88be88e396bfc57e781010a30dc0e0915dce73fa", "Url": "https://api.github.com/repos/RENCI-NRIG/flukes", "Date": "2015-11-10T16:07:02Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (setPerm) { this.permission = (rs.getInt(\"Doctor_Staff.permission\")) == 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7859/buggy-version/Project.src.java.models.Staff.java", "BodyUseAPI": [], "Fixed commit": "4565defd41d1afc7b4d4faa6c058ddaeb6d654ad", "Url": "https://api.github.com/repos/wlindsay/ECE356-Project", "Date": "2014-03-27T22:50:08Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((securityDomainContext) == null) { throw Messages.MESSAGES.cannotGetJBossSecurityContext(this.getName().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7719/buggy-version/src.main.java.org.jboss.ws.common.deployment.AbstractDefaultEndpoint.java", "BodyUseAPI": [], "Fixed commit": "1398a50e7307b55340726ba12f40b651f9de78cc", "Url": "https://api.github.com/repos/jbossws/jbossws-common", "Date": "2016-11-17T05:47:20Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!visible) { for (com.ait.lienzo.client.core.shape.wires.WiresShape shape : m_wires_shape.getChildShapes()) { if ((shape.getControls()) == null) { continue; } shape.getControls().hide(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8897/buggy-version/src.main.java.com.ait.lienzo.client.core.shape.wires.WiresShapeControlHandleList.java", "BodyUseAPI": [], "Fixed commit": "b08717844e1e9cfdd7b6afb0131908f90e01cfae", "Url": "https://api.github.com/repos/manstis/lienzo-core", "Date": "2017-03-15T22:04:16Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dest.getName().equals(SootMethod.staticInitializerName)) && ((dest.getParameterCount()) == 0)) return java.util.Collections.emptySet();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3272/buggy-version/src.soot.jimple.toolkits.ide.exampleproblems.IFDSLocalInfoFlow.java", "BodyUseAPI": [], "Fixed commit": "bb33e619a0b85c94841eed1737a22e998ffb75dd", "Url": "https://api.github.com/repos/Sable/soot", "Date": "2014-08-08T14:13:37Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((targetRow) == (-1)) { targetRow = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3303/buggy-version/src.com.google.gwt.sample.stockwatcher.client.FlexTableDropController.java", "BodyUseAPI": [], "Fixed commit": "8c2d8246ffbb241639753d9f93e1e66bee1b8eac", "Url": "https://api.github.com/repos/chrte/TemperatureWatcher", "Date": "2013-01-22T13:05:30Z"},
{"Line": "=>2298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.ichi2.anki.AnkiDroidApp.colIsOpen())) { loadCollection(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4091/buggy-version/src.com.ichi2.anki.DeckPicker.java", "BodyUseAPI": [], "Fixed commit": "e4ed92208d0e443f6cfa54f1876e2abccd7c1e12", "Url": "https://api.github.com/repos/iniju/Anki-Android", "Date": "2012-07-24T20:22:27Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (def.getCellName().toLowerCase().startsWith(\"stratio\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6515/buggy-version/meta-core.src.main.java.com.stratio.meta.deep.utils.DeepUtils.java", "BodyUseAPI": [], "Fixed commit": "579d6b5a024c63d4658c33be5308900da7d5937b", "Url": "https://api.github.com/repos/Stratio/stratio-meta", "Date": "2014-06-25T13:38:15Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.donbosco.android.porlosjovenes.data.UserSerializer.getInstance().load(com.donbosco.android.porlosjovenes.activities.ProfileActivity)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(user.isGuest())) tvProfileEmail.setText(user.getEmail());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4351/buggy-version/app.src.main.java.com.donbosco.android.porlosjovenes.activities.ProfileActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(user.getEmail())", "com.donbosco.android.porlosjovenes.model.User.getEmail()"], "Fixed commit": "e75a0e32b33a389f34d7a675742cb7999813575e", "Url": "https://api.github.com/repos/fredoariaudo/DonBosco", "Date": "2017-09-26T18:39:57Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t < 0) t += 256;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3195/buggy-version/cryptography.src.GeneralRoutines.java", "BodyUseAPI": [], "Fixed commit": "1eced5d42c008531104702a0f45c08c463e6eb66", "Url": "https://api.github.com/repos/inpefess/my-rubbish", "Date": "2012-07-08T12:04:50Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bson.Document.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (bufObj instanceof org.bson.types.Binary) { buf = ((org.bson.types.Binary) (bufObj)).getData(); }else { buf = ((byte[]) (bufObj)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5979/buggy-version/src.com.naryx.tagfusion.cfm.application.sessionstorage.SessionStorageMongoImpl.java", "BodyUseAPI": [], "Fixed commit": "f5d0c17b32d8f040a378ca0be4da1a3dfb4852b6", "Url": "https://api.github.com/repos/OpenBD/openbd-core", "Date": "2015-10-30T11:26:21Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mRecipient) == null) || ((mSms) == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7930/buggy-version/app.src.main.java.com.fjg.android.zxing.fragments.MakeSmsFragment.java", "BodyUseAPI": [], "Fixed commit": "969fe2e91c7b2b91bd200c93a4da99eb0eb882ac", "Url": "https://api.github.com/repos/damonfu/Qrcode", "Date": "2016-12-13T02:17:54Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(isCompanyAlreadyInserted(strike.getCompany().getId()))) { insertCompany(strike.getCompany()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/874/buggy-version/app.src.main.java.com.dfl.grevesapp.database.DatabaseAdapter.java", "BodyUseAPI": ["com.dfl.grevesapp.database.DatabaseAdapter.insertCompany(strike.getCompany())", "com.dfl.grevesapp.datamodels.Strike.getCompany()"], "Fixed commit": "4bb2d36602d0683c4808f5b2673d4e1ed44be962", "Url": "https://api.github.com/repos/dfloureiro/greves", "Date": "2017-06-10T18:58:03Z"},
{"Line": "=>794", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.endercrest.colorcube.game.Location.clone()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.endercrest.colorcube.game.SettingsManager.getInstance().getPluginConfig().getStringList(\"paintable-blocks\").contains(loc2.getBlock().getType().toString())) { if ((loc.getBlock().getType()) != (Material.AIR)) { createPowerup(loc, true); finish = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6232/buggy-version/src.main.java.com.endercrest.colorcube.game.Game.java", "BodyUseAPI": [], "Fixed commit": "0fa32ac1f7bc8281bfe5769c28113d4afd2fbd14", "Url": "https://api.github.com/repos/endercrest/ColorCube", "Date": "2015-01-06T06:19:54Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.portlet.ActionRequest.getAttribute(WebKeys.USER)", "it.italiangrid.wnodes.utils.WnodesConfig.getProperties(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (users.contains((\";\" + (user.getUserId())))) { users = users.replaceAll((\";\" + (user.getUserId())), \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8416/buggy-version/src.main.java.it.italiangrid.wnodes.controllers.UploadController.java", "BodyUseAPI": ["com.liferay.portal.model.User.getUserId()", "java.lang.String.replaceAll((\";\" + (user.getUserId())),java.lang.String)"], "Fixed commit": "36c7e997e78e4f994398ac056f975f6f9f4c50bd", "Url": "https://api.github.com/repos/italiangrid/IGIPortalWnodes", "Date": "2013-03-11T14:12:33Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p.getUsername().equals(Game.client.getUsername())) { if (Game.client.isConnectedToLocalhost()) { start.setEnabled(true); back.setX((((org.lwjgl.opengl.Display.getWidth()) / 2) - ((com.vloxlands.ui.TextButton.WIDTH) / 2))); disco.setX(((int) (((org.lwjgl.opengl.Display.getWidth()) / 2) - ((com.vloxlands.ui.TextButton.WIDTH) * 1.5F)))); mapsize.setEnabled(Game.client.isConnectedToLocalhost()); content.add(start); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6587/buggy-version/src.com.vloxlands.scene.SceneNewGame.java", "BodyUseAPI": [], "Fixed commit": "b5000a83b7b5d4f772e12b52c51ddc24005d4704", "Url": "https://api.github.com/repos/Ichmed/Vloxlands", "Date": "2013-09-21T18:30:30Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((activeNode) != null) && ((activeNode) != foundNode)) { toastify((\"left \" + (activeNode.getDevice()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1437/buggy-version/app.src.main.java.com.example.davelkan.mapv2.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "3ceaf8445737eb0f509621ffe1ffb9579fd42efd", "Url": "https://api.github.com/repos/davelkan/whisperspot", "Date": "2014-12-17T00:17:24Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEnableCross()) { mCrossAreaPadding = ((mCrossAreaPadding) > ((getHeight()) / 2)) ? (getHeight()) / 2 : mCrossAreaPadding; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6661/buggy-version/androidtagview.src.main.java.co.lujun.androidtagview.TagView.java", "BodyUseAPI": [], "Fixed commit": "da1318dbbbb3f03fae2c76527bf0b0e96542e266", "Url": "https://api.github.com/repos/whilu/AndroidTagView", "Date": "2016-11-09T01:18:31Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lushprojects.circuitjs1.client.CircuitElm.getScopeUnits(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (u == (com.lushprojects.circuitjs1.client.Scope.UNITS_V)) showV = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1549/buggy-version/src.com.lushprojects.circuitjs1.client.Scope.java", "BodyUseAPI": [], "Fixed commit": "9f20be9f11fbae408fa3b5d645d46de3dfeb019d", "Url": "https://api.github.com/repos/bartsimp/circuitjs1", "Date": "2017-02-11T21:45:12Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lushprojects.circuitjs1.client.CircuitElm.getScopeUnits(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (u == (com.lushprojects.circuitjs1.client.Scope.UNITS_A)) showI = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1549/buggy-version/src.com.lushprojects.circuitjs1.client.Scope.java", "BodyUseAPI": [], "Fixed commit": "9f20be9f11fbae408fa3b5d645d46de3dfeb019d", "Url": "https://api.github.com/repos/bartsimp/circuitjs1", "Date": "2017-02-11T21:45:12Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (initializing) { notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5595/buggy-version/UserVoiceSDK.src.com.uservoice.uservoicesdk.activity.ForumActivity.java", "BodyUseAPI": [], "Fixed commit": "6f3001a822730b69466cdcea49019de72e98b1f7", "Url": "https://api.github.com/repos/HiTask/uservoice-android-sdk", "Date": "2014-01-02T15:59:23Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (worldObj == null) { worldObj = net.minecraft.src.buildcraft.krapht.routing.WorldProxy.getMainWorld(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1786/buggy-version/common.net.minecraft.src.buildcraft.krapht.routing.Router.java", "BodyUseAPI": [], "Fixed commit": "2a17dca1384037a4cbc6cd87ae41cae71f3c924b", "Url": "https://api.github.com/repos/mistaqur/LogisticsPipes", "Date": "2012-08-13T18:52:37Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4328/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "70bd1fc3dfd86287c1c15fd6ab635757efb1ad8d", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-04-12T03:01:31Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.zt.simpledao.SQLDataType.TEXT) == sqlType) { sb.append(\" \"); sb.append(\"statement.bindString(\").append(bindId).append(\", \"); if ((javax.lang.model.type.TypeKind.DECLARED) == fieldType) { sb.append(\"null == bean.\").append(fieldName).append(\" ? \\\"\\\" : \"); sb.append(\"bean.\").append(fieldName).append(\".toString()\"); }else { sb.append(\"bean.\").append(fieldName).append(\" + \\\"\\\"\"); } sb.append(\");\\n\"); }else if ((com.zt.simpledao.SQLDataType.NULL) == sqlType) { sb.append(\" \"); sb.append(\"statement.bindNull(\").append(bindId).append(\");\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8551/buggy-version/source.src.com.zt.simpledao.apt.DAOProcessor.java", "BodyUseAPI": [], "Fixed commit": "91dc70e8cc46dbf49a68bb2937871c20d1bc2190", "Url": "https://api.github.com/repos/zxfrdas/SimpleDAO", "Date": "2015-03-02T09:16:42Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((al.size()) == 0) errSet.add(o);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7230/buggy-version/src.main.java.jp.ac.keio.bio.fun.gomaotsu.Scraper.java", "BodyUseAPI": [], "Fixed commit": "1adb6e95a3872d08a24570f1abd4d7cebb5fe6c4", "Url": "https://api.github.com/repos/funasoul/gomaotsu", "Date": "2016-11-05T17:30:23Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (priority == null) { java.lang.System.out.println(\"was null\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5431/buggy-version/model.ValidationSystem.java", "BodyUseAPI": [], "Fixed commit": "d5e86c2823cec4842f15cdf13f96c88a0878cac9", "Url": "https://api.github.com/repos/xuanshenbo/KPSmart-System", "Date": "2016-06-12T22:59:24Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((c1 == null) ^ (c2 == null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8761/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.util.ui.colourpicker.ColourPickerUtil.java", "BodyUseAPI": [], "Fixed commit": "4f7c121c5c2cd6d6afbebefeae7d2f28e30b0c00", "Url": "https://api.github.com/repos/snoopycrimecop/openmicroscopy", "Date": "2017-07-03T03:55:37Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.openmicroscopy.shoola.util.CommonsLangUtils.isNotEmpty(model.getLUT())) fireChangeEvent(PaintPotUI.LUT_PROPERTY); else fireChangeEvent(PaintPotUI.COLOUR_CHANGED_PROPERTY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8761/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.util.ui.colourpicker.RGBControl.java", "BodyUseAPI": [], "Fixed commit": "4f7c121c5c2cd6d6afbebefeae7d2f28e30b0c00", "Url": "https://api.github.com/repos/snoopycrimecop/openmicroscopy", "Date": "2017-07-03T03:55:37Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.TKnudsen.activeLearning.models.learning.ILearningModel<java.lang.Double, com.github.TKnudsen.ComplexDataObject.data.features.numericalData.NumericalFeatureVector, java.lang.String>.test(java.util.List<com.github.TKnudsen.ComplexDataObject.data.features.numericalData.NumericalFeatureVector>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((test.size()) != (testData.size())) throw new java.lang.IllegalArgumentException(\"input size != output size\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8900/buggy-version/src.main.java.com.github.TKnudsen.activeLearning.models.evaluation.classification.ClassificationAccuracy.java", "BodyUseAPI": [], "Fixed commit": "304cb0613fe846dd888f81c79cf5a26c4dadd9e3", "Url": "https://api.github.com/repos/TKnudsen/activeLearning", "Date": "2017-03-24T10:27:43Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data != null) { org.json.JSONObject obj = new org.json.JSONObject(data); java.lang.Integer status = obj.getInt(\"status\"); if (status == 0) { recognizedId = obj.getString(\"id\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7629/buggy-version/src.com.tooploox.blackberryjam.activities.StartActivity.java", "BodyUseAPI": [], "Fixed commit": "c2830c062fce4a63ddf941d0b68ba0def7630860", "Url": "https://api.github.com/repos/christarnowski/blackberry-jam-sessions-wroclaw-2012", "Date": "2012-12-13T15:41:07Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (arg0.wasEvicted()) { com.aimmac23.node.servlet.VideoRecordingControlServlet.log.info((\"Deleted recording due to excess videos: \" + (arg0.getKey()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1652/buggy-version/src.main.java.com.aimmac23.node.servlet.VideoRecordingControlServlet.java", "BodyUseAPI": ["com.google.common.cache.RemovalNotification<java.lang.String, java.io.File>.getKey()", "java.util.logging.Logger.info((\"Deleted recording due to excess videos: \" + (arg0.getKey())))"], "Fixed commit": "d8f5391c31dbbb4ef2802fd39d90f896cb9990fa", "Url": "https://api.github.com/repos/aimmac23/selenium-video-node", "Date": "2014-09-07T09:52:50Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.maps.GoogleMap.addPolyline(com.google.android.gms.maps.model.PolylineOptions)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((polyline.getPoints().size()) == 0) { android.widget.Toast.makeText(getApplicationContext(), \"This story has no elements\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2202/buggy-version/app.src.main.java.de.ifgi.igiapp.igi_app.StoryLineMap.java", "BodyUseAPI": [], "Fixed commit": "39f91661d687d80c3d73193fe8d32a88bf2e008f", "Url": "https://api.github.com/repos/froehr/IGI-app", "Date": "2015-02-02T12:15:26Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hdfs.server.namenode.ScopedAclEntries.getDefaultEntries()", "org.apache.hadoop.fs.permission.AclEntry.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((type == (org.apache.hadoop.fs.permission.AclEntryType.GROUP)) && ((defaultEntries.size()) == 3)) { permission = entry.getPermission().and(childPerm.getGroupAction()); }else if (type == (org.apache.hadoop.fs.permission.AclEntryType.MASK)) { permission = entry.getPermission().and(childPerm.getGroupAction()); }else if (type == (org.apache.hadoop.fs.permission.AclEntryType.OTHER)) { permission = entry.getPermission().and(childPerm.getOtherAction()); }else { permission = entry.getPermission(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6137/buggy-version/hadoop-hdfs-project.hadoop-hdfs.src.main.java.org.apache.hadoop.hdfs.server.namenode.AclStorage.java", "BodyUseAPI": [], "Fixed commit": "6662697effe6e5d9d0e459c3a98c95adcb209d09", "Url": "https://api.github.com/repos/cnauroth/hadoop-common", "Date": "2014-02-05T07:36:46Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (src.startsWith(\"api/bennu-portal/configuration/logo\")) { realPath = ((\"data:\" + (org.fenixedu.bennu.portal.domain.PortalConfiguration.getInstance().getLogoType())) + \";base64,\") + (java.util.Base64.getEncoder().encodeToString(org.fenixedu.bennu.portal.domain.PortalConfiguration.getInstance().getLogo())); }else { realPath = servletContext.getResource(src).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3410/buggy-version/src.main.java.org.fenixedu.academic.servlet.ProcessCandidacyPrintAllDocumentsFilter.java", "BodyUseAPI": ["servletContext.getResource(src).toString()", "javax.servlet.ServletContext.getResource(java.lang.String)"], "Fixed commit": "cd076adaff595cbe01915975c990c41fe0838376", "Url": "https://api.github.com/repos/Luis-Cruz/fenixedu-academic", "Date": "2015-08-28T17:20:44Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == fieldName) { fieldName = (com.vimeo.stag.processor.generators.TypeAdapterGenerator.TYPE_ADAPTER_FIELD_PREFIX) + (typeAdapterNamesMap.size()); typeAdapterNamesMap.put(fieldType.toString(), fieldName); java.lang.String originalFieldName = com.vimeo.stag.processor.utils.FileGenUtils.unescapeEscapedString(fieldName); adapterBuilder.addField(typeName, originalFieldName, javax.lang.model.element.Modifier.PRIVATE, javax.lang.model.element.Modifier.FINAL); constructorBuilder.addStatement((((fieldName + \" = gson.getAdapter(\") + (typeTokenConstantsGenerator.addTypeToken(fieldType))) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/41/buggy-version/stag-library-compiler.src.main.java.com.vimeo.stag.processor.generators.TypeAdapterGenerator.java", "BodyUseAPI": [], "Fixed commit": "5f73280cacf17c606a2b6043873ce147831e3b65", "Url": "https://api.github.com/repos/Flipkart/stag-java", "Date": "2016-11-04T18:59:57Z"},
{"Line": "=>1111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((buffer[index]) == 'N') { if ((to - from) == 3) { if (((buffer[(index + 1)]) == 'a') && ((buffer[(index + 2)]) == 'N')) { return java.lang.Double.NaN; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6345/buggy-version/reflekt.src.main.java.io.advantageous.boon.primitive.CharScanner.java", "BodyUseAPI": [], "Fixed commit": "bcf242e61be1e3b41af5148075489d2bfa0a40ad", "Url": "https://api.github.com/repos/advantageous/boon", "Date": "2015-04-19T01:33:03Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (catalogName == null) throw new java.lang.NullPointerException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2471/buggy-version/ckanalyze-client.src.main.java.eu.trentorise.opendata.ckanalyze.client.CkanalyzeClient.java", "BodyUseAPI": [], "Fixed commit": "794d23eb38622e8d54dba6dce461894995aa69a0", "Url": "https://api.github.com/repos/opendatatrentino/CKANalyze", "Date": "2013-09-03T13:35:46Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (catalogName == null) throw new java.lang.NullPointerException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2471/buggy-version/ckanalyze-client.src.main.java.eu.trentorise.opendata.ckanalyze.client.CkanalyzeClient.java", "BodyUseAPI": [], "Fixed commit": "794d23eb38622e8d54dba6dce461894995aa69a0", "Url": "https://api.github.com/repos/opendatatrentino/CKANalyze", "Date": "2013-09-03T13:35:46Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resourceId == null) throw new java.lang.NullPointerException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2471/buggy-version/ckanalyze-client.src.main.java.eu.trentorise.opendata.ckanalyze.client.CkanalyzeClient.java", "BodyUseAPI": [], "Fixed commit": "794d23eb38622e8d54dba6dce461894995aa69a0", "Url": "https://api.github.com/repos/opendatatrentino/CKANalyze", "Date": "2013-09-03T13:35:46Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (FragmentManagerActivity.searchView.isIconified()) { FragmentManagerActivity.menu.findItem(R.id.menu_filter).setVisible(true); FragmentManagerActivity.menu.findItem(R.id.menu_search).setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5724/buggy-version/AndroidApp.src.com.beerdev.androidapp.SwipeViewFragment.java", "BodyUseAPI": [], "Fixed commit": "250bb12cb2826822eb9db0431a897722570acd7f", "Url": "https://api.github.com/repos/BeerDev/AndroidApp", "Date": "2014-05-06T09:04:01Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (FragmentManagerActivity.searchView.isIconified()) { FragmentManagerActivity.menu.findItem(R.id.menu_filter).setVisible(true); FragmentManagerActivity.menu.findItem(R.id.menu_search).setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5724/buggy-version/AndroidApp.src.com.beerdev.androidapp.ListViewFragment.java", "BodyUseAPI": [], "Fixed commit": "250bb12cb2826822eb9db0431a897722570acd7f", "Url": "https://api.github.com/repos/BeerDev/AndroidApp", "Date": "2014-05-06T09:04:01Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((login) == null) || (login.equals(\"\"))) { errorMessage = \"Login can not be empty!\"; }else { super.doTag(); user = model.actions.DataBaseInterraction.login(st, login, password, errorMessage); getJspContext().setAttribute(\"authUser\", user, PageContext.SESSION_SCOPE); if (user == null) { getJspContext().setAttribute(\"userLogin\", login, PageContext.SESSION_SCOPE); errorMessage = \"Check login/passowrd\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6073/buggy-version/src.controller.tag.Login.java", "BodyUseAPI": ["model.actions.DataBaseInterraction.login(controller.tag.Login,java.lang.String,java.lang.String,java.lang.String)", "getJspContext().setAttribute(java.lang.String,java.lang.String,PageContext.SESSION_SCOPE)"], "Fixed commit": "5f1a784764c466b95c708d5e732d53c7efcd46c5", "Url": "https://api.github.com/repos/MaximLukoshko/EPAM.TASK.WEB-PROJECT", "Date": "2016-03-09T19:36:30Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == 1) { Settings.System.putInt(getContentResolver(), Settings.System.RECENTS_CLEAR_ALL_LOCATION, 1); summary = R.string.recents_clear_all_location_top_left; }else if (value == 2) { Settings.System.putInt(getContentResolver(), Settings.System.RECENTS_CLEAR_ALL_LOCATION, 2); summary = R.string.recents_clear_all_location_top_center; }else if (value == 3) { Settings.System.putInt(getContentResolver(), Settings.System.RECENTS_CLEAR_ALL_LOCATION, 3); summary = R.string.recents_clear_all_location_bottom_right; }else if (value == 4) { Settings.System.putInt(getContentResolver(), Settings.System.RECENTS_CLEAR_ALL_LOCATION, 4); summary = R.string.recents_clear_all_location_bottom_left; }else if (value == 5) { Settings.System.putInt(getContentResolver(), Settings.System.RECENTS_CLEAR_ALL_LOCATION, 5); summary = R.string.recents_clear_all_location_bottom_center; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1398/buggy-version/src.com.android.settings.slim.RecentPanel.java", "BodyUseAPI": [], "Fixed commit": "8461c8f9fe655a486e5d926d96ed812d11af112e", "Url": "https://api.github.com/repos/TeamOrion/packages_apps_Settings", "Date": "2015-12-03T21:15:55Z"},
{"Line": "=>502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["BLL.MainFrameLogic.getNextPanel()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (next == null) { approveListPanel.clearList(); fillApproveListPanel(); tv.setSelectedComponent(approvePanel); }else { if (next == (alarmPanel)) tv.setSelectedIndex(0); else tv.setSelectedComponent(next); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4896/buggy-version/src.Presentation.Frames.MainFrame.java", "BodyUseAPI": ["Presentation.Components.TabView.setSelectedComponent(javax.swing.JPanel)"], "Fixed commit": "4157d83b1a3fb0936a9528b0b57c52e2fc8d0a7e", "Url": "https://api.github.com/repos/NielsRavn/friggCheckUd", "Date": "2014-05-20T19:34:26Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flag) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8531/buggy-version/dclsuite.src.dclsuite.core.Architecture.java", "BodyUseAPI": [], "Fixed commit": "058a2f018c0959e8825227c6bee354da067d3930", "Url": "https://api.github.com/repos/rterrabh/DCL", "Date": "2012-08-29T16:17:17Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, de.ovgu.ifdefrevolver.bugs.minecommits.OrderedCommit>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (parent == null) { de.ovgu.ifdefrevolver.bugs.minecommits.OrderingCommitVisitor.LOG.warn((((\"Commit \" + (c.getHash())) + \" refers to unknown parent: \") + parentHashValue)); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8953/buggy-version/src.main.java.de.ovgu.ifdefrevolver.bugs.minecommits.OrderingCommitVisitor.java", "BodyUseAPI": [], "Fixed commit": "4903843a2fb470128958eee411ab6a68ea47591d", "Url": "https://api.github.com/repos/wfenske/IfdefRevolver", "Date": "2017-05-02T17:55:45Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.springframework.core.annotation.AnnotationUtils.isAnnotationDeclaredLocally(org.springframework.stereotype.Component.class, clazz)) { classAnnotation = org.springframework.core.annotation.AnnotationUtils.findAnnotation(clazz, org.springframework.stereotype.Component.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1062/buggy-version/core.src.main.java.io.github.jhipster.loaded.reloader.ReloaderUtils.java", "BodyUseAPI": ["org.springframework.core.annotation.AnnotationUtils.findAnnotation(java.lang.Class,java.lang.Class)"], "Fixed commit": "5abb26bf93afc0432657b3bd7d212a3dcb30884f", "Url": "https://api.github.com/repos/jhipster/jhipster-loaded", "Date": "2014-05-15T00:12:51Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (isExistingFile) { for (int k = 0; k < (m_currmap.rsize); k++) { for (int i = 0; i < (m_currmap.csize); i++) { if (((pathTempValue) < (m_currmap.GetMapArray()[k][i])) && ((m_currmap.GetMapArray()[k][i]) != 9999)) pathTempValue = m_currmap.GetMapArray()[k][i]; } } (pathTempValue)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1607/buggy-version/src.MapMaker.java", "BodyUseAPI": [], "Fixed commit": "3b5d471511adf7e393bbaa9325f0f16c0bb24b05", "Url": "https://api.github.com/repos/umerkk/TD-MapMaker", "Date": "2016-03-16T00:14:51Z"},
{"Line": "=>653", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((question.getTitle()) != null) && ((question.getTitle().length()) < 1000)) { existingQuestion.setTitle(question.getTitle()); }else if ((question.getTitle().length()) > 1000) { throw new org.ednovo.gooru.core.exception.BadRequestException(org.ednovo.gooru.core.application.util.ServerValidationUtils.generateErrorMessage(org.ednovo.gooru.domain.service.assessment.GL0017)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/898/buggy-version/api.src.main.java.org.ednovo.gooru.domain.service.assessment.AssessmentServiceImpl.java", "BodyUseAPI": ["question.getTitle().length()", "org.ednovo.gooru.core.api.model.AssessmentQuestion.getTitle()", "org.ednovo.gooru.core.api.model.AssessmentQuestion.setTitle(question.getTitle())", "org.ednovo.gooru.core.api.model.AssessmentQuestion.getTitle()"], "Fixed commit": "b25541f1182153b823639abb711fbed755062324", "Url": "https://api.github.com/repos/viji-m/Gooru-Core-API", "Date": "2015-04-02T08:08:59Z"},
{"Line": "=>699", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((question.getTitle()) != null) && ((question.getTitle().length()) < 1000)) { question.setTitle(question.getTitle()); }else if ((question.getTitle().length()) > 1000) { throw new org.ednovo.gooru.core.exception.BadRequestException(org.ednovo.gooru.core.application.util.ServerValidationUtils.generateErrorMessage(org.ednovo.gooru.domain.service.assessment.GL0017)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/898/buggy-version/api.src.main.java.org.ednovo.gooru.domain.service.assessment.AssessmentServiceImpl.java", "BodyUseAPI": ["question.getTitle().length()", "org.ednovo.gooru.core.api.model.AssessmentQuestion.setTitle(question.getTitle())", "org.ednovo.gooru.core.api.model.AssessmentQuestion.getTitle()", "org.ednovo.gooru.core.api.model.AssessmentQuestion.getTitle()"], "Fixed commit": "b25541f1182153b823639abb711fbed755062324", "Url": "https://api.github.com/repos/viji-m/Gooru-Core-API", "Date": "2015-04-02T08:08:59Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mBooks) != null) && ((mBooks.size()) > 0)) { mBooks.clear(); mAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8077/buggy-version/app.src.main.java.com.auto.jarvis.libraryicognite.fragments.SearchFragment.java", "BodyUseAPI": ["java.util.List<com.auto.jarvis.libraryicognite.models.Book>.clear()"], "Fixed commit": "394f9a25dbbe7e077a277f8d2263e1a070980aef", "Url": "https://api.github.com/repos/kyokid/JWL_Mobile_App", "Date": "2017-04-05T16:53:27Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bugfixLine) { version = wv.getNextBugfixVersion(currentVersion); }else if (minorLine) { version = wv.getNextMinorVersion(currentVersion); }else { version = wv.getNextMajorVersion(currentVersion); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4361/buggy-version/vertumnus.src.main.java.vertumnus.client.Updater.java", "BodyUseAPI": [], "Fixed commit": "938bf86cde826b1b0f014bf18ebf793ed84be4e7", "Url": "https://api.github.com/repos/SoltauFintel/vertumnus", "Date": "2013-12-08T13:59:45Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(new java.io.File(fileName).exists())) { new java.io.File(fileName).createNewFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7591/buggy-version/src.main.java.fr.minepod.launcher.VersionsManager.java", "BodyUseAPI": [], "Fixed commit": "8926e86c8d9aa8a364dc161ed1bceef0ac09b4db", "Url": "https://api.github.com/repos/MinePod/Launcher", "Date": "2014-02-22T21:14:41Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(new java.io.File(fileName).getParentFile().exists())) { new java.io.File(fileName).getParentFile().mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7591/buggy-version/src.main.java.fr.minepod.launcher.VersionsManager.java", "BodyUseAPI": [], "Fixed commit": "8926e86c8d9aa8a364dc161ed1bceef0ac09b4db", "Url": "https://api.github.com/repos/MinePod/Launcher", "Date": "2014-02-22T21:14:41Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Exception.getCause()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((e instanceof groovy.util.ResourceException) && (cause instanceof java.io.FileNotFoundException)) { throw new org.craftercms.engine.exception.ScriptNotFoundException(cause.getMessage(), cause); }else { throw new org.craftercms.engine.exception.ScriptException(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1706/buggy-version/src.main.java.org.craftercms.engine.scripting.impl.GroovyScript.java", "BodyUseAPI": ["java.lang.Throwable.getMessage()", "java.lang.Exception.getMessage()"], "Fixed commit": "3a0fd81cb5a848e330f1d802c9882ac97c36dc3b", "Url": "https://api.github.com/repos/avasquez614/engine", "Date": "2014-07-04T16:30:17Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.getMaxLines()) < 1) || ((this.getMaxLines()) == (java.lang.Integer.MAX_VALUE))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6964/buggy-version/src.main.java.ayar.oktay.advancedtextview.AdvancedTextView.java", "BodyUseAPI": [], "Fixed commit": "e51a7b9c742bc552b88df00f6142e32a75225834", "Url": "https://api.github.com/repos/oktayayr/advancedtextview", "Date": "2016-05-25T09:22:57Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((defaultPolicy != null) && (defaultPolicy.getClass().getName().contains(\"LegacyGlueFocusTraversalPolicy\"))) { throw new java.lang.IllegalArgumentException(\"VisibilityFocusTraversalPolicy can't work well with LegacyGlueFocusTraversalPolicy.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5294/buggy-version/src.com.jidesoft.swing.VisibilityFocusTraversalPolicy.java", "BodyUseAPI": [], "Fixed commit": "8b19e162259726c09fa934e434ea8af400980304", "Url": "https://api.github.com/repos/jidesoft/jide-oss", "Date": "2012-07-12T17:57:51Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((outputOffset + inputLen) > (output.length)) { throw new javax.crypto.ShortBufferException(\"output buffer too short for input.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/992/buggy-version/prov.src.main.java.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher.java", "BodyUseAPI": [], "Fixed commit": "47e9947e52e8b0929dab30685fb8bf6ec0bde1f0", "Url": "https://api.github.com/repos/rtyley/spongycastle", "Date": "2015-03-07T05:24:11Z"},
{"Line": "=>848", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((outputOffset + (engineGetOutputSize(inputLen))) > (output.length)) { throw new javax.crypto.ShortBufferException(\"output buffer too short for input.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/992/buggy-version/prov.src.main.java.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher.java", "BodyUseAPI": [], "Fixed commit": "47e9947e52e8b0929dab30685fb8bf6ec0bde1f0", "Url": "https://api.github.com/repos/rtyley/spongycastle", "Date": "2015-03-07T05:24:11Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((window.getTriggerPolicy()) == (com.ibm.streams.operator.window.StreamWindow.Policy.TIME)) new com.ibm.streamsx.topology.internal.functional.window.PeriodicAggregator<T, A>(this, window); else if ((window.getEvictionPolicy()) == (com.ibm.streams.operator.window.StreamWindow.Policy.TIME)) new com.ibm.streamsx.topology.internal.functional.window.ContinuousAggregatorTimeEvict<T, A>(this, window); else new com.ibm.streamsx.topology.internal.functional.window.ContinuousAggregatorCountEvict<T, A>(this, window);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1252/buggy-version/java.src.com.ibm.streamsx.topology.internal.functional.ops.FunctionAggregate.java", "BodyUseAPI": ["com.ibm.streams.operator.window.StreamWindow<com.ibm.streams.operator.Tuple>.getEvictionPolicy()"], "Fixed commit": "2441456626d3671632f5b3f3918e517ce0cc4188", "Url": "https://api.github.com/repos/wmarshall484/streamsx.topology", "Date": "2015-07-03T13:28:57Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<? extends org.jclouds.blobstore.domain.StorageMetadata>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (storageMetadata.getType().equals(StorageType.BLOB)) { org.jclouds.blobstore.domain.Blob blob = blobStore.getBlob(containerName, storageMetadata.getName()); org.jclouds.blobstore.domain.BlobMetadata blobMetadata = blob.getMetadata(); if (isExpired(blobMetadata)) { entries.add(storageMetadata.getName()); if ((entries.size()) == (org.infinispan.persistence.cloud.CloudStore.BATCH_SIZE)) { final java.util.Set<java.lang.String> batch = entries; entries = new java.util.HashSet<java.lang.String>(org.infinispan.persistence.cloud.CloudStore.BATCH_SIZE); submitPurgeTask(eacs, batch, purgeListener); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7088/buggy-version/src.main.java.org.infinispan.persistence.cloud.CloudStore.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(storageMetadata.getName())", "org.jclouds.blobstore.domain.StorageMetadata.getName()", "org.jclouds.blobstore.domain.StorageMetadata.getName()", "org.jclouds.blobstore.BlobStore.getBlob(java.lang.String,storageMetadata.getName())"], "Fixed commit": "4b86080ad4ae32aacb9d98a6e28bd515ee1ae9d2", "Url": "https://api.github.com/repos/bbranan/infinispan-cachestore-cloud", "Date": "2016-03-11T16:28:34Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(parserContext.getActiveFormattingElements().isEmpty())) { com.html5parser.algorithms.ListOfActiveFormattingElements.reconstruct(parserContext); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7947/buggy-version/Code.src.main.java.com.html5parser.insertionModes.InBody.java", "BodyUseAPI": ["com.html5parser.algorithms.ListOfActiveFormattingElements.reconstruct(com.html5parser.classes.ParserContext)"], "Fixed commit": "2b12f04436956055cd59928736ca53eee26f0fe6", "Url": "https://api.github.com/repos/Prin4/HTML5Parser", "Date": "2015-05-24T18:57:49Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (n == null) { Nv.x = gd4.xn; Nv.y = gd4.yn; Nv.z = gd4.zn; Nv.w = 1.0F; org.lwjgl.util.vector.Matrix4f loc = matrixMap.get(gd4.parent); if (loc == null) { final org.lwjgl.util.vector.Matrix4f rotation = new org.lwjgl.util.vector.Matrix4f(gd4.parent.productMatrix); rotation.m30 = 0.0F; rotation.m31 = 0.0F; rotation.m32 = 0.0F; rotation.invert(); rotation.transpose(); matrixMap.put(gd4.parent, rotation); loc = rotation; } org.lwjgl.util.vector.Matrix4f.transform(loc, Nv, Nv); n = new org.lwjgl.util.vector.Vector3f[4]; n[0] = new org.lwjgl.util.vector.Vector3f(Nv.x, Nv.y, Nv.z); n[1] = n[0]; n[2] = n[0]; n[3] = n[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2275/buggy-version/src.org.nschmidt.ldparteditor.data.GL33TexmapRenderer.java", "BodyUseAPI": [], "Fixed commit": "3def4a87628f5fb95f489922b911db6da4b07c37", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-10-30T13:50:34Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<org.nschmidt.ldparteditor.data.GData, org.lwjgl.util.vector.Vector3f[]>.get(org.nschmidt.ldparteditor.data.GData)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (n == null) { Nv.x = gd3.xn; Nv.y = gd3.yn; Nv.z = gd3.zn; Nv.w = 1.0F; org.lwjgl.util.vector.Matrix4f loc = matrixMap.get(gd3.parent); if (loc == null) { final org.lwjgl.util.vector.Matrix4f rotation = new org.lwjgl.util.vector.Matrix4f(gd3.parent.productMatrix); rotation.m30 = 0.0F; rotation.m31 = 0.0F; rotation.m32 = 0.0F; rotation.invert(); rotation.transpose(); matrixMap.put(gd3.parent, rotation); loc = rotation; } org.lwjgl.util.vector.Matrix4f.transform(loc, Nv, Nv); n = new org.lwjgl.util.vector.Vector3f[3]; n[0] = new org.lwjgl.util.vector.Vector3f(Nv.x, Nv.y, Nv.z); n[1] = n[0]; n[2] = n[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2275/buggy-version/src.org.nschmidt.ldparteditor.data.GL33TexmapRenderer.java", "BodyUseAPI": [], "Fixed commit": "3def4a87628f5fb95f489922b911db6da4b07c37", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-10-30T13:50:34Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files.size()) == 0) { storage.FileSplitter fs = new storage.FileSplitter(); fs.createDocumentCollection(); storage.StorageManager.load(eliminateStopwords, useStemming); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4145/buggy-version/src.storage.StorageManager.java", "BodyUseAPI": [], "Fixed commit": "f31f59e0682460d94df118cbebdc8dc0bb573a10", "Url": "https://api.github.com/repos/J-Ahlers/Information-Retrieval", "Date": "2015-06-11T19:42:37Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_raum) == null) { java.lang.System.err.println(\"Katze tot.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/914/buggy-version/src.de.uni_hamburg.informatik.sep.zuul.server.features.Katze.java", "BodyUseAPI": [], "Fixed commit": "3b84e390a5480f6cbfa66f87cfd457fd5be0c11d", "Url": "https://api.github.com/repos/FlaShG/SEP12", "Date": "2012-09-25T10:15:20Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((params.aid.getAudioProperties().getNumberOfChannels()) >= 7) && ((params.aid) != null)) && ((params.aid.isAACLC()) || (params.aid.isHEAAC()))) { transcodeOptions.add(\"-strict\"); transcodeOptions.add(\"1\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8411/buggy-version/src.main.java.net.pms.encoders.FFMpegVideo.java", "BodyUseAPI": [], "Fixed commit": "7046ccff8a8cbfc2875d3169d6421c0a28164293", "Url": "https://api.github.com/repos/Sami32/UniversalMediaServer", "Date": "2017-11-16T03:12:46Z"},
{"Line": "=>1225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (endpoints.isEmpty()) { org.apache.cassandra.service.epaxos.EpaxosState.logger.warn(\"no endpoints found for instance: {} at {}, natural: {}, pending: {}, remote: {}\", instance, instance.getConsistencyLevel(), naturalEndpoints, pendingEndpoints, remoteEndpoints); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5195/buggy-version/src.java.org.apache.cassandra.service.epaxos.EpaxosState.java", "BodyUseAPI": [], "Fixed commit": "7c8e58e009d510db4cb6a8828f056a79943feccb", "Url": "https://api.github.com/repos/bdeggleston/cassandra", "Date": "2015-04-15T20:51:31Z"},
{"Line": "=>508", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.getClass()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((paramType.isEnum()) && (objectType.equals(java.lang.String.class))) { org.apache.storm.flux.FluxBuilder.LOG.debug(\"Yes, will convert a String to enum\"); constructorParams[i] = java.lang.Enum.valueOf(paramType, ((java.lang.String) (args.get(i)))); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5828/buggy-version/flux-core.src.main.java.org.apache.storm.flux.FluxBuilder.java", "BodyUseAPI": ["java.lang.Enum.valueOf(java.lang.Class,java.lang.Object)"], "Fixed commit": "21df8259d95e69adc6e63517e179d5c4f5e0250e", "Url": "https://api.github.com/repos/ptgoetz/flux", "Date": "2015-03-27T21:25:54Z"},
{"Line": "=>489", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (paramType == (java.lang.Float.TYPE)) { constructorParams[i] = num.floatValue(); }else if (paramType == (java.lang.Double.TYPE)) { constructorParams[i] = num.doubleValue(); }else if (paramType == (java.lang.Long.TYPE)) { constructorParams[i] = num.longValue(); }else if (paramType == (java.lang.Integer.TYPE)) { constructorParams[i] = num.intValue(); }else if (paramType == (java.lang.Short.TYPE)) { constructorParams[i] = num.shortValue(); }else if (paramType == (java.lang.Byte.TYPE)) { constructorParams[i] = num.byteValue(); }else { constructorParams[i] = args.get(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5828/buggy-version/flux-core.src.main.java.org.apache.storm.flux.FluxBuilder.java", "BodyUseAPI": [], "Fixed commit": "21df8259d95e69adc6e63517e179d5c4f5e0250e", "Url": "https://api.github.com/repos/ptgoetz/flux", "Date": "2015-03-27T21:25:54Z"},
{"Line": "=>566", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.getClass()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((paramType.isEnum()) && (objectType.equals(java.lang.String.class))) { org.apache.storm.flux.FluxBuilder.LOG.debug(\"Yes, will convert a String to enum\"); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5828/buggy-version/flux-core.src.main.java.org.apache.storm.flux.FluxBuilder.java", "BodyUseAPI": [], "Fixed commit": "21df8259d95e69adc6e63517e179d5c4f5e0250e", "Url": "https://api.github.com/repos/ptgoetz/flux", "Date": "2015-03-27T21:25:54Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dexels.navajo.entity.adapters.EntityMap.prepareOutDoc()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((request.getHeader()) == null) { com.dexels.navajo.document.Header h = com.dexels.navajo.document.NavajoFactory.getInstance().createHeader(request, myEntity.getName(), access.rpcUser, access.rpcName, (-1)); request.addHeader(h); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1120/buggy-version/server.com.dexels.navajo.entity.src.com.dexels.navajo.entity.adapters.EntityMap.java", "BodyUseAPI": ["com.dexels.navajo.document.Navajo.addHeader(com.dexels.navajo.document.Header)", "com.dexels.navajo.document.NavajoFactory.getInstance().createHeader(com.dexels.navajo.document.Navajo,myEntity.getName(),access.rpcUser,access.rpcName,int)"], "Fixed commit": "a0fb50b09a850f9bf793b186399874ef851d250c", "Url": "https://api.github.com/repos/Dexels/navajo", "Date": "2014-09-26T09:35:13Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cs2103.CommandParser.splitFirstWord(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((splitResult[0]) != null) { parameterMap.put(splitResult[0], splitResult[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3821/buggy-version/CEO.src.cs2103.CommandParser.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "03f182ff9c91d419b61c6399ed0abe8e4ccc29b1", "Url": "https://api.github.com/repos/cs2103aug2014-f11-2j/main", "Date": "2014-10-08T02:32:15Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getOperatingSystem().equals(OperatingSystem.WINDOWS)) { fullCommand = (((getOperatingSystem().getShellCommand()) + \"\\\"\") + currentPath) + \"\\\"\"; }else { fullCommand = (getOperatingSystem().getShellCommand()) + currentPath; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4359/buggy-version/OSCommands.src.com.sessonad.oscommands.commands.Commands.java", "BodyUseAPI": [], "Fixed commit": "375615630bfd3d44d27e278c96f7252ed5e6d445", "Url": "https://api.github.com/repos/kinkadzs/oscommands", "Date": "2012-12-19T17:49:18Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xmlcalabash.io.ReadablePipe.read()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (doc == null) { finest(null, \"Error step read empty\"); }else { finest(null, (\"Error step read \" + (doc.getDocumentURI()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3914/buggy-version/src.com.xmlcalabash.library.Error.java", "BodyUseAPI": ["net.sf.saxon.s9api.XdmNode.getDocumentURI()", "com.xmlcalabash.library.Error.finest(<nulltype>,(\"Error step read \" + (doc.getDocumentURI())))"], "Fixed commit": "475fcd20683823d8fe79636099431c01cb0c9c46", "Url": "https://api.github.com/repos/rdeltour/xmlcalabash1", "Date": "2014-08-21T11:40:28Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xmlcalabash.io.ReadablePipe.read()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (doc == null) { throw new com.xmlcalabash.core.XProcException(errorCode); }else { throw new com.xmlcalabash.core.XProcException(errorCode, doc, doc.getStringValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3914/buggy-version/src.com.xmlcalabash.library.Error.java", "BodyUseAPI": ["net.sf.saxon.s9api.XdmNode.getStringValue()"], "Fixed commit": "475fcd20683823d8fe79636099431c01cb0c9c46", "Url": "https://api.github.com/repos/rdeltour/xmlcalabash1", "Date": "2014-08-21T11:40:28Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ThreadLocal<org.apache.lucene.index.IndexWriterConfig>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (config == null) { config = new org.apache.lucene.index.IndexWriterConfig(org.apache.lucene.util.Version.LUCENE_34, analyzer); proj.zoie.impl.indexing.internal.RAMSearchIndex.indexWriterConfigStorage.set(config); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2114/buggy-version/zoie-core.src.main.java.proj.zoie.impl.indexing.internal.RAMSearchIndex.java", "BodyUseAPI": [], "Fixed commit": "0b75f871d8a8463b045f97f9bcee2e7f54d535bf", "Url": "https://api.github.com/repos/linkedin/zoie", "Date": "2012-11-29T18:32:40Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(scanner.hasNext())) { throw new java.lang.IllegalArgumentException(\"Attempting to scan from invalid source\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/378/buggy-version/src.main.java.de.strullerbaumann.visualee.examiner.Examiner.java", "BodyUseAPI": [], "Fixed commit": "345b4bc78fb4d6c34b31aadcb04414c6ab9bf28d", "Url": "https://api.github.com/repos/emopers/visualee", "Date": "2015-09-25T22:05:33Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (intent != null) { android.os.Bundle args = intent.getBundleExtra(com.dnbitstudio.spotifystreamer.services.PlayTrackService.ARGS_BUNDLE); if ((args != null) && ((args.size()) > 0)) { tracks = args.getParcelableArrayList(PlayTrackActivityFragment.TRACKS); trackNumber = args.getInt(PlayTrackActivityFragment.TRACK_NUMBER); if ((tracks.get(trackNumber)) != null) { track = tracks.get(trackNumber); } } playTrackResultReceiver = intent.getParcelableExtra(com.dnbitstudio.spotifystreamer.services.PlayTrackService.RECEIVER_TAG); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1908/buggy-version/app.src.main.java.com.dnbitstudio.spotifystreamer.services.PlayTrackService.java", "BodyUseAPI": ["android.content.Intent.getBundleExtra(java.lang.String)", "android.content.Intent.getParcelableExtra(java.lang.String)"], "Fixed commit": "f8082e4b66dc7b2811320e0c9c14d832de88e1dd", "Url": "https://api.github.com/repos/dnbit/Nanodegree-SpotifyStreamer", "Date": "2015-08-06T20:35:21Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_meta) == null) { _meta = new clojure.lang.PersistentArrayMap(new java.lang.Object[]{ makeKeyword(\"stream\"), getSourceStreamId(), makeKeyword(\"component\"), getSourceComponent(), makeKeyword(\"task\"), getSourceTask() }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3134/buggy-version/src.jvm.backtype.storm.tuple.Tuple.java", "BodyUseAPI": [], "Fixed commit": "fa8a26fc55e74400c7abc2cd88b1c54f8fb0c53e", "Url": "https://api.github.com/repos/simpleconcepts/storm", "Date": "2012-02-02T23:29:52Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((me.stutiguias.cdsc.init.Cdsc.Areas) == null) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8387/buggy-version/src.me.stutiguias.cdsc.init.Cdsc.java", "BodyUseAPI": [], "Fixed commit": "abe507a967cc28fb7001bcf03d8adf20c8ad95da", "Url": "https://api.github.com/repos/stutiguias/cdsc", "Date": "2014-01-10T13:14:11Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (me.stutiguias.cdsc.init.Cdsc.Areas.isEmpty()) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8387/buggy-version/src.me.stutiguias.cdsc.init.Cdsc.java", "BodyUseAPI": [], "Fixed commit": "abe507a967cc28fb7001bcf03d8adf20c8ad95da", "Url": "https://api.github.com/repos/stutiguias/cdsc", "Date": "2014-01-10T13:14:11Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (location == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8387/buggy-version/src.me.stutiguias.cdsc.init.Util.java", "BodyUseAPI": [], "Fixed commit": "abe507a967cc28fb7001bcf03d8adf20c8ad95da", "Url": "https://api.github.com/repos/stutiguias/cdsc", "Date": "2014-01-10T13:14:11Z"},
{"Line": "=>1089", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tar < (copyList.size())) copyList.get(i).addEdgePointPairs(edgePointPair.direction, copyList.get(tar));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5310/buggy-version/UIModule.ChessBoardGraphicAreaPanel.java", "BodyUseAPI": ["java.util.ArrayList<Chreator.ObjectModel.Point>.get(int)", "java.util.ArrayList<Chreator.ObjectModel.Point>.get(int)", "copyList.get(i).addEdgePointPairs(edgePointPair.direction,copyList.get(tar))"], "Fixed commit": "1ca8e7c19ba453ada708c89e94db37c65b936105", "Url": "https://api.github.com/repos/sammyli20082000/Chreator", "Date": "2016-01-11T06:13:41Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentField.getName().contains(\"_\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8708/buggy-version/framework.api.src.main.java.eu.europeana.uim.UIMRegistry.java", "BodyUseAPI": [], "Fixed commit": "b55d85bdfea5f9cc80a3da55d1b18bceaf715e03", "Url": "https://api.github.com/repos/europeana/uim-core", "Date": "2015-02-27T15:02:12Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index >= 0) keyBuilder.delete(index, (index + 2));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1331/buggy-version/ssp-data-importer-impl.src.main.java.org.jasig.ssp.util.importer.job.listener.StagingAndUpsertSkipListener.java", "BodyUseAPI": ["java.lang.StringBuilder.delete(java.lang.Integer,int)"], "Fixed commit": "00b06272b763b68b0a9652a691853c1f67c918a5", "Url": "https://api.github.com/repos/Jasig/ssp-data-importer", "Date": "2013-12-17T20:42:24Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isWaiting()) { return \"...\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8049/buggy-version/src.main.java.com.fitness.blast.dao.Game.java", "BodyUseAPI": [], "Fixed commit": "eeb54cf81401daa70e8a3fd72bdaba0342dd821a", "Url": "https://api.github.com/repos/alarmatwork/blastgame", "Date": "2017-11-04T20:11:56Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldItem != null) { items[slot] = null; (itemsCount)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5822/buggy-version/src.eg.game.model.item.inv.AbstractInventory.java", "BodyUseAPI": [], "Fixed commit": "27944ac097237f89d2e6845228e163aeaa0e2757", "Url": "https://api.github.com/repos/Bubletan/evergreen", "Date": "2015-06-19T18:59:27Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldItem == null) { (itemsCount)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5822/buggy-version/src.eg.game.model.item.inv.AbstractInventory.java", "BodyUseAPI": [], "Fixed commit": "27944ac097237f89d2e6845228e163aeaa0e2757", "Url": "https://api.github.com/repos/Bubletan/evergreen", "Date": "2015-06-19T18:59:27Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(response.getData().isPresent())) return java.util.Optional.empty();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4875/buggy-version/src.main.java.address.sync.RemoteManager.java", "BodyUseAPI": [], "Fixed commit": "9ffd9ecca2d977f578e1a9daed68fcddc6b84f75", "Url": "https://api.github.com/repos/m133225/addressbook", "Date": "2016-06-20T03:07:29Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (n == 0) { return 0; }else { return Recursion.helper(n, guess); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7438/buggy-version/01recursion.Recursion.java", "BodyUseAPI": ["Recursion.helper(double,double)"], "Fixed commit": "7d970507defa747b7a884866e1b244dee4c0bff1", "Url": "https://api.github.com/repos/lliu2/MKS22X", "Date": "2016-02-09T04:40:20Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vmware.bdd.service.utils.VcResourceUtils.findRPInVCCluster(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (rp == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8636/buggy-version/server.res-mgmt.src.main.java.com.vmware.bdd.service.utils.VcResourceUtils.java", "BodyUseAPI": [], "Fixed commit": "b52237607315a4231d04d4d92685ea64624dede6", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2013-04-25T05:24:01Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.pentaho.di.core.row.RowMetaInterface.getFieldNames()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((fieldnames.length) > 0) && (!(java.util.Arrays.asList(fieldnames).contains(null)))) { wIncomingFieldname.setItems(previousFields.getFieldNames()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2623/buggy-version/src.main.java.org.pentaho.di.ui.trans.steps.zendesk.ZendeskInputHCArticleDialog.java", "BodyUseAPI": [], "Fixed commit": "ea36506007032ea8d90b1e91404045ebe13d2b22", "Url": "https://api.github.com/repos/matthewtckr/pdi-zendesk-plugin", "Date": "2016-01-21T19:38:10Z"},
{"Line": "=>853", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((mView) != null) && ((mView.getParent()) != null)) && ((mView.getParent()) != parent)) { detach(mView, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6388/buggy-version/conductor.src.main.java.com.bluelinelabs.conductor.Controller.java", "BodyUseAPI": ["com.bluelinelabs.conductor.Controller.detach(android.view.View,boolean)"], "Fixed commit": "116b5066c9d16147480f493f3b1b564e17472efa", "Url": "https://api.github.com/repos/adipascu/Conductor", "Date": "2016-04-26T19:33:37Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((quelElement.getEntityType()) == (zildo.monde.sprites.desc.EntityType.PERSO)) { perso = ((zildo.monde.sprites.persos.Perso) (quelElement)); allowOverBottomLess = (quelElement.flying) || (quelElement.isZildo()); }else if ((quelElement.getEntityType()) == (zildo.monde.sprites.desc.EntityType.ELEMENT)) { allowOverBottomLess = quelElement.getDesc().isSliping(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6614/buggy-version/zildo.src.main.java.zildo.server.MapManagement.java", "BodyUseAPI": ["zildo.monde.sprites.elements.Element.isZildo()", "zildo.monde.sprites.elements.Element.getDesc()", "zildo.monde.sprites.elements.Element.getEntityType()", "quelElement.getDesc().isSliping()"], "Fixed commit": "6cc3063095d71372218c4924608889bb661e76ef", "Url": "https://api.github.com/repos/tchegito/zildo", "Date": "2017-07-20T20:38:10Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (update && ((mBoard[getBoardIndex(x, y)]) == color)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3477/buggy-version/src.main.java.com.artbeatte.exercises.games.othello.Othello.java", "BodyUseAPI": [], "Fixed commit": "69e1609862a97e32e31c0c62ce9a7eea9ab5cb53", "Url": "https://api.github.com/repos/abeatte/Exercises", "Date": "2016-01-28T21:21:15Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getRemoteUser()) != null) { javax.servlet.http.HttpServletRequest request = com.opensymphony.webwork.ServletActionContext.getRequest(); javax.servlet.http.HttpSession session = request.getSession(); chatBoxMap = chatManager.getOpenChats(session); chatManager.setOnlineStatus(getRemoteUser(), ChatStatus.NO_CHANGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8663/buggy-version/src.main.java.confluence.chat.actions.ChatAction.java", "BodyUseAPI": [], "Fixed commit": "989fc7df9405fa2f91715a4f6e5ffb5682c00833", "Url": "https://api.github.com/repos/muchino/confluence.chat", "Date": "2011-12-19T17:53:15Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["antlr.collections.AST.getNextSibling()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (next != null) { sb.append(resolveAsSimpleString(part.getNextSibling())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4116/buggy-version/egradle-plugin-main.src.main.java.de.jcup.egradle.core.model.groovyantlr.GradleModelBuilderSupport.java", "BodyUseAPI": [], "Fixed commit": "c5e783c62d8f23200df18313d2b4495c49f63650", "Url": "https://api.github.com/repos/de-jcup/egradle", "Date": "2016-12-03T20:27:43Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getStringExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (contentWarning != null) { startingHideText = !(contentWarning.isEmpty()); if (startingHideText) { startingContentWarning = contentWarning; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2786/buggy-version/app.src.main.java.com.keylesspalace.tusky.ComposeActivity.java", "BodyUseAPI": ["java.lang.String.isEmpty()"], "Fixed commit": "857f39b480be121107f553c1c30199e9e82c4173", "Url": "https://api.github.com/repos/tuskyapp/Tusky", "Date": "2017-07-17T04:06:18Z"},
{"Line": "=>1038", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(field.equals(\"type\"))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7935/buggy-version/src.catgen.in.javasrc.CatalogDiffEngine.java", "BodyUseAPI": [], "Fixed commit": "38351d716e18429dcc1a82a00097bd47793019bf", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2017-10-25T02:22:20Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (board.isJumped()) { moves = board.getJumps(lastMove.movRow, lastMove.movCol); }else { moves = board.getAllLegalMovesForColor(color); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/905/buggy-version/src.gameLogic.aiMove.java", "BodyUseAPI": ["gameLogic.board.getJumps(lastMove.movRow,lastMove.movCol)", "gameLogic.board.getAllLegalMovesForColor(board.color)"], "Fixed commit": "48d5d152b466cb3544ecbfc761d0c853bc01f771", "Url": "https://api.github.com/repos/vrnaz/checkers", "Date": "2016-07-05T21:13:59Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((quantity) > 0) { quantity = (quantity) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2550/buggy-version/app.src.main.java.com.example.kevin.justjava.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "66de5d30f646b4f4dc0f9d797feb712bb35d954b", "Url": "https://api.github.com/repos/K17020/android_just_java", "Date": "2017-08-09T22:26:28Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sql.code.generator.modules.android.dataBean.SQLiteWithJavaClassType.getJavaTypeClass(info.getType())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == cls) { com.sql.code.generator.modules.android.service.impl.CodeGeneratorImpl.log.error(((\"sql type: \" + (info.getType())) + \" cannot find java type !\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7800/buggy-version/src.main.java.com.sql.code.generator.modules.android.service.impl.CodeGeneratorImpl.java", "BodyUseAPI": [], "Fixed commit": "1fd3c0ef67efa7167ca36d1d2f2e4261061710f8", "Url": "https://api.github.com/repos/SvenOu/SqlCodeGenerator", "Date": "2017-02-22T06:09:05Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["listener.Players.get(p.getUniqueId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (player != null) { return !(player.isFlying()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1255/buggy-version/src.me.cmesh.SmoothFlight.SmoothFlight.java", "BodyUseAPI": ["me.cmesh.SmoothFlight.SFPlayer.isFlying()"], "Fixed commit": "bed52e259d56fcac3e087f6d16403f55766ddfde", "Url": "https://api.github.com/repos/cam72cam/Bukkit-SmoothFlight", "Date": "2012-12-29T09:31:23Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.molgenis.util.tuple.Tuple.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value instanceof java.util.Collection) { value = org.elasticsearch.common.base.Joiner.on(\" , \").join(((java.util.Collection<?>) (value))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6837/buggy-version/molgenis-search-elasticsearch.src.main.java.org.molgenis.elasticsearch.index.IndexRequestGenerator.java", "BodyUseAPI": [], "Fixed commit": "bb6048b0f56cb76636ee25511003a22d3aef9231", "Url": "https://api.github.com/repos/dennishendriksen/molgenis", "Date": "2013-06-26T13:15:05Z"},
{"Line": "=>1037", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pathList.isEmpty()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7036/buggy-version/railo-java.railo-core.src.railo.runtime.PageContextImpl.java", "BodyUseAPI": [], "Fixed commit": "5bedf3affb467231bb8fda5dec6c92e77d9204c3", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2014-09-04T07:00:20Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (specificPhase.get(\"powerfactor\").getClass().equals(java.lang.Double.class)) { powerfactor = ((double) (specificPhase.get(\"powerfactor\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6934/buggy-version/src.dbServer.SensorMeasure.java", "BodyUseAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Fixed commit": "601275b53d0bca25101d09acd64352bd2074f59b", "Url": "https://api.github.com/repos/diogo-gsa/dbServer", "Date": "2014-04-15T01:31:39Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (specificPhase.get(\"powerfactor\").getClass().equals(java.lang.Long.class)) { powerfactor = ((double) (new java.lang.Double(((long) (specificPhase.get(\"powerfactor\")))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6934/buggy-version/src.dbServer.SensorMeasure.java", "BodyUseAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Fixed commit": "601275b53d0bca25101d09acd64352bd2074f59b", "Url": "https://api.github.com/repos/diogo-gsa/dbServer", "Date": "2014-04-15T01:31:39Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.connorlinfoot.multispawns.MultiSpawns.getPlugin().getConfig()", "config.getConfigurationSection(\"Spawns\").getKeys(false).size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((config.getConfigurationSection(\"Spawns\").getKeys(false)) == null) || (size == 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2185/buggy-version/src.main.java.com.connorlinfoot.multispawns.Listeners.PlayerJoin.java", "BodyUseAPI": [], "Fixed commit": "a86dfd9708af5adde2a385e67bf56df9a52f0ef2", "Url": "https://api.github.com/repos/ConnorLinfoot/MultiSpawns", "Date": "2014-11-25T13:46:38Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arg instanceof java.lang.Enum<?>) { arg = ((java.lang.Enum<?>) (arg)).name(); resolved = true; }else if (arg instanceof java.lang.ThreadLocal) { arg = ((java.lang.ThreadLocal<?>) (arg)).get(); }else { resolved = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7273/buggy-version/squidb.src.com.yahoo.squidb.sql.DefaultArgumentResolver.java", "BodyUseAPI": [], "Fixed commit": "ef620a9e2575423558f70d70a1504f50a184d3fd", "Url": "https://api.github.com/repos/yahoo/squidb", "Date": "2016-08-29T17:11:59Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.getAllQuestions()) { for (int i = 0; i < requiredCountQuestions; i++) { randoms.add(i); } }else { while ((randoms.size()) != requiredCountQuestions) { java.lang.Integer randomInt = random.nextInt(category.getnOfQuestions()); if (!(randoms.contains(randomInt))) randoms.add(randomInt); java.lang.System.err.println(\"cycling..\"); maximumAttemps++; if (maximumAttemps == 101) { break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8666/buggy-version/questioner.JavaApplication1.src.com.ap.logic.QuizClasses.Quiz.java", "BodyUseAPI": [], "Fixed commit": "f64e467e405c444c8302432a276c35d0207f8512", "Url": "https://api.github.com/repos/AndrewPonyk/JustForFunPROJECTS", "Date": "2013-12-01T17:50:24Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (vol == null) { return new com.cloud.agent.api.Answer(command, false, \" Can't create Physical Disk\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1382/buggy-version/plugins.hypervisors.kvm.src.com.cloud.hypervisor.kvm.resource.wrapper.LibvirtCreateCommandWrapper.java", "BodyUseAPI": [], "Fixed commit": "3cc0feccccd22bc23ed62bd465dfc0b15cb5bf2c", "Url": "https://api.github.com/repos/rafaelweingartner/cloudstack", "Date": "2015-07-28T12:06:48Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JViewport.getView()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (ssPaneAdded != null) { ssPaneAdded.setAllSelected(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8660/buggy-version/src.com.fluffynukeit.SpriteClipper.GUI.SpriteClipperGUI.java", "BodyUseAPI": ["com.fluffynukeit.SpriteClipper.GUI.SpriteSheetPane.setAllSelected(boolean)"], "Fixed commit": "1f089f730ad2ef4c2efbfa8b12c3e86161cb9677", "Url": "https://api.github.com/repos/fluffynukeit/Sprite-Clipper", "Date": "2011-06-21T03:44:19Z"},
{"Line": "=>687", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cpc.getRootNode().getModuleDescriptor()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (md != null) { com.redhat.ceylon.compiler.typechecker.tree.Tree.ImportModuleList iml = md.getImportModuleList(); if (iml != null) { for (com.redhat.ceylon.compiler.typechecker.tree.Tree.ImportModule im : iml.getImportModules()) { if ((im.getImportPath()) != null) { if (formatPath(im.getImportPath().getIdentifiers()).equals(mod)) { return true; } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7293/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.src.com.redhat.ceylon.eclipse.code.propose.CeylonContentProposer.java", "BodyUseAPI": ["Tree.ModuleDescriptor.getImportModuleList()"], "Fixed commit": "af3b475a39f166c4f77fb82370bd82d94cc7a9a1", "Url": "https://api.github.com/repos/gavinking/ceylon-ide-eclipse", "Date": "2013-09-08T21:14:16Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentTokenString.length()) > 0) addToken(tokens, createTokenFromString(location, currentTokenString), lastArithmeticTokenType);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/462/buggy-version/src.main.java.parser.tokenizer.LanguageTokenizer.java", "BodyUseAPI": ["parser.tokenizer.LanguageTokenizer.createTokenFromString(int,java.lang.String)", "parser.tokenizer.LanguageTokenizer.addToken(java.util.List<parser.tokenizer.Token>,parser.tokenizer.Token,parser.tokenizer.ArithmeticType)"], "Fixed commit": "e647ac60e73473644c34e2c8df42eb7835e183e4", "Url": "https://api.github.com/repos/laihaotao/COMP354", "Date": "2017-05-23T14:10:39Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.maven.model.Model.getGroupId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (groupId == null) { groupId = parentPom.getParent().getGroupId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8183/buggy-version/maven.impl-projects.src.main.java.org.jboss.forge.addon.maven.projects.MavenMultiModuleProvider.java", "BodyUseAPI": [], "Fixed commit": "57659a627c5cd313e0622c0bb99761483a46e57b", "Url": "https://api.github.com/repos/jerr/jbossforge-core", "Date": "2015-06-29T18:48:23Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((movieList) != null) && (!(movieList.isEmpty()))) { outState.putString(com.example.karthikeyanp.popularmovies.MainActivity.MOVIE_LIST_JSON, com.example.karthikeyanp.popularmovies.MovieUtils.getJsonString(movieList)); outState.putSerializable(com.example.karthikeyanp.popularmovies.MainActivity.SORT_ORDER, sortOrder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1944/buggy-version/app.src.main.java.com.example.karthikeyanp.popularmovies.MainActivity.java", "BodyUseAPI": ["com.example.karthikeyanp.popularmovies.MovieUtils.getJsonString(java.util.List<com.example.karthikeyanp.popularmovies.Movie>)", "android.os.Bundle.putString(java.lang.String,com.example.karthikeyanp.popularmovies.MovieUtils.getJsonString(movieList))"], "Fixed commit": "ac5c7aee3c15f0ca14277d321cd5c911f4ae4b81", "Url": "https://api.github.com/repos/karthik12/MoviesAppStage1", "Date": "2017-02-27T13:56:48Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.sevenbits.web.service.goods.DealService.getDeal(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((user.getId()) != (deal.getLandlordId())) { return \"home/error_message\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4656/buggy-version/sport-rent-equipment.src.main.java.it.sevenbits.web.controllers.announcement.DealController.java", "BodyUseAPI": [], "Fixed commit": "d9265e28c91db8b87eda39aaad8726195e47229b", "Url": "https://api.github.com/repos/7bits/internship-2015-sport-equipment-rent", "Date": "2015-08-10T06:51:01Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((input) != null) input.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6764/buggy-version/jminor.io.ObjectFiles.java", "BodyUseAPI": [], "Fixed commit": "885fc1c1cb08af31d00c9fe914497e4815c3668d", "Url": "https://api.github.com/repos/AndrewMiTe/j-minor", "Date": "2016-11-05T20:27:00Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"time_zone\".equals(kv.key)) { dateRange.timeZone(org.joda.time.DateTimeZone.forTimeZone(java.util.TimeZone.getTimeZone(java.time.ZoneOffset.of(value)))); continue; }else if (\"from\".equals(kv.key)) { dateRange.addUnboundedFrom(kv.value.toString()); continue; }else if (\"to\".equals(kv.key)) { dateRange.addUnboundedTo(kv.value.toString()); continue; }else if (((\"alias\".equals(kv.key)) || (\"nested\".equals(kv.key))) || (\"children\".equals(kv.key))) { continue; }else { ranges.add(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7646/buggy-version/src.main.java.org.nlpcn.es4sql.query.maker.AggMaker.java", "BodyUseAPI": ["kv.value.toString()", "kv.value.toString()", "java.lang.String.equals(kv.key)", "java.lang.String.equals(kv.key)", "org.elasticsearch.search.aggregations.bucket.range.date.DateRangeAggregationBuilder.addUnboundedTo(kv.value.toString())", "java.lang.String.equals(kv.key)", "java.lang.String.equals(kv.key)", "org.elasticsearch.search.aggregations.bucket.range.date.DateRangeAggregationBuilder.addUnboundedFrom(kv.value.toString())", "java.lang.String.equals(kv.key)"], "Fixed commit": "aef29120798a4549bb8b6c7fbb0859d9ed58682d", "Url": "https://api.github.com/repos/NLPchina/elasticsearch-sql", "Date": "2017-08-04T13:35:28Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.earthdawn.ui2.SkillsTableModel.getValueAt(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (v == null) return java.lang.String.class;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3742/buggy-version/src.de.earthdawn.ui2.SkillsTableModel.java", "BodyUseAPI": [], "Fixed commit": "a277feb9f397d7e8ae21da6d8cc5fefc7edea85c", "Url": "https://api.github.com/repos/lortas/Earthdawn-Character-Editor", "Date": "2015-08-08T11:00:41Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(finished)) { handler.postDelayed(this, com.example.mjokic.quizapp.activities.ChallengeActivity.QUIZ_TICK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5576/buggy-version/app.src.main.java.com.example.mjokic.quizapp.activities.ChallengeActivity.java", "BodyUseAPI": [], "Fixed commit": "a227c33419dd4d71da7719de70c5b7657411d366", "Url": "https://api.github.com/repos/mjokic/QuizAndroidApp", "Date": "2017-10-03T13:32:55Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((value.QList) (visitor.visit(ctx.xq()))).isEmpty()) res.add(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5664/buggy-version/src.xqueryEvaluator.java", "BodyUseAPI": [], "Fixed commit": "28934a73a90d0658ebc1ccb346d5070fe771ab47", "Url": "https://api.github.com/repos/rafaliang/lmx", "Date": "2017-02-19T05:49:25Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (drawerToggle.onOptionsItemSelected(item)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3611/buggy-version/src.com.lazexe.mystatfit.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "35b4e7fd68eb88ac781c26c450da2390f3ea4a32", "Url": "https://api.github.com/repos/lazexe/MyStatfit", "Date": "2014-07-12T06:22:26Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((requestSingleton.getTempRequest().getStatus()) == (com.dryver.Models.RequestStatus.RATED)) { ratingBar.setVisibility(View.VISIBLE); ratingBar.setEnabled(false); cancelButton.setEnabled(false); viewDriversButton.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4817/buggy-version/app.src.main.java.com.dryver.Activities.ActivityRyderSelection.java", "BodyUseAPI": [], "Fixed commit": "394f5df86b9d9f12e9bbe3266eda0b25905eca08", "Url": "https://api.github.com/repos/CMPUT301F16T02/Dryver", "Date": "2016-11-29T20:11:12Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (owningBucketOrdinal >= maxSize) { return buildEmptyAggregation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8792/buggy-version/src.main.java.fr.v3d.elasticsearch.search.aggregations.metrics.multiplemetric.MultipleMetricAggregator.java", "BodyUseAPI": [], "Fixed commit": "adc50e0796197eeaf5014db4556858b6a614c32f", "Url": "https://api.github.com/repos/eliep/elasticsearch-multiple-metric-aggregation", "Date": "2016-08-18T11:46:48Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bodyParams) != null) { return bodyParams.getString(key, defVal); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2509/buggy-version/src.com.leap12.common.HttpRequest.java", "BodyUseAPI": [], "Fixed commit": "c6a802670453fa536eb6d2163224904ec3f83a8e", "Url": "https://api.github.com/repos/aarontharris/DataBuddy", "Date": "2016-01-20T09:41:36Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((prof[i3]) != null) profList.create(prof[i3].getName(), prof[i3].getSubjectArray(), prof[i3].getTimePeriodArray());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7245/buggy-version/src.Kubaner.Logic.Plan.java", "BodyUseAPI": ["prof[i3].getSubjectArray()", "prof[i3].getTimePeriodArray()", "prof[i3].getName()", "Kubaner.Logic.ProfList.create(prof[i3].getName(),prof[i3].getSubjectArray(),prof[i3].getTimePeriodArray())"], "Fixed commit": "7b2d32c1890fd4fdffe2eb37772fcf707b2c1dd0", "Url": "https://api.github.com/repos/Freakmiko/Kubaner", "Date": "2015-06-20T15:18:00Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((subjects[i3]) != null) subjectList.create(subjects[i3].getName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7245/buggy-version/src.Kubaner.Logic.Plan.java", "BodyUseAPI": ["subjects[i3].getName()", "Kubaner.Logic.SubjectList.create(subjects[i3].getName())"], "Fixed commit": "7b2d32c1890fd4fdffe2eb37772fcf707b2c1dd0", "Url": "https://api.github.com/repos/Freakmiko/Kubaner", "Date": "2015-06-20T15:18:00Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNetworkFilterReset) { int subId = mPhones[index].getSubId(); mNetworkFilter[index].setNetworkSpecifier(java.lang.String.valueOf(subId)); com.android.internal.telephony.dataconnection.DctController.logd((\"Network specifier set with subid: \" + subId)); isNetworkFilterReset = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/638/buggy-version/src.java.com.android.internal.telephony.dataconnection.DctController.java", "BodyUseAPI": [], "Fixed commit": "7d3998549efb0ed346e583cf0f7d0de853ac27c9", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-frameworks-opt-telephony", "Date": "2016-06-18T06:11:07Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (errorType == null) { return successMessage; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7320/buggy-version/src.main.java.com.roche.opengarden.ocid.mailsender.controllers.ConfirmationController.java", "BodyUseAPI": [], "Fixed commit": "ca6b014daee36908fb68ad91a060a225cc6d4008", "Url": "https://api.github.com/repos/wisniewskikr/mail-sender", "Date": "2017-06-20T11:29:36Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arg == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6098/buggy-version/JMPDComm.src.org.a0z.mpd.MPDConnection.java", "BodyUseAPI": [], "Fixed commit": "f5090375ff409ae66036d920a61d17842cb63e95", "Url": "https://api.github.com/repos/abarisain/dmix", "Date": "2012-07-02T20:07:24Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.event.ActionEvent.getSource()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (modifyBoard(java.lang.Integer.parseInt(temp.getName()), (-1))) { turn = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7582/buggy-version/NN.src.bananaNetwork.GUI.TicTacToeBoard.java", "BodyUseAPI": [], "Fixed commit": "01cdd1ce79d189f5dc7be90f91aea6e5f67db611", "Url": "https://api.github.com/repos/banana01/Neural-Network", "Date": "2016-01-22T18:51:11Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.event.ActionEvent.getSource()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (modifyBoard(java.lang.Integer.parseInt(temp.getName()), 1)) { turn = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7582/buggy-version/NN.src.bananaNetwork.GUI.TicTacToeBoard.java", "BodyUseAPI": [], "Fixed commit": "01cdd1ce79d189f5dc7be90f91aea6e5f67db611", "Url": "https://api.github.com/repos/banana01/Neural-Network", "Date": "2016-01-22T18:51:11Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((repeatingTime) == 60000L) { checkBox.setText(getString(R.string.repeat_every_min)); }else if ((repeatingTime) == 86400000L) { checkBox.setText(getString(R.string.repeat_every_day)); }else if ((repeatingTime) == 604800000L) { checkBox.setText(getString(R.string.repeat_every_week)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7289/buggy-version/KnotIt.app.src.main.java.com.forkthecode.knotit.DetailView.java", "BodyUseAPI": [], "Fixed commit": "846238347fae148b9c57d478322ca717940871ef", "Url": "https://api.github.com/repos/ForkTheCode/Knot-It", "Date": "2015-04-23T16:16:00Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nybatis.core.db.sql.sqlNode.element.ForEachSqlElement.getParams(org.nybatis.core.db.session.executor.util.QueryParameter,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.nybatis.core.validation.Validator.isEmpty(params)) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8567/buggy-version/src.main.java.org.nybatis.core.db.sql.sqlNode.element.ForEachSqlElement.java", "BodyUseAPI": [], "Fixed commit": "1c53cadad78225c16b7190012405127bfe313c43", "Url": "https://api.github.com/repos/NyBatis/NyBatisCore", "Date": "2016-12-07T03:55:09Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node.isLeaf()) { }else { node = (next) ? ((cz.zcu.kiv.ti.sp.huffman.TreeNode) (node)).getLeft() : ((cz.zcu.kiv.ti.sp.huffman.TreeNode) (node)).getRight(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6466/buggy-version/src.cz.zcu.kiv.ti.sp.Decoder.java", "BodyUseAPI": [], "Fixed commit": "23398b53c7b71bc08d5ee7e2aceb8bdfe60d13e5", "Url": "https://api.github.com/repos/Hartrik/KIV-TI", "Date": "2016-12-12T17:08:33Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["movieEditText.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (movieSearch.equals(\"\")) { android.widget.Toast.makeText(this, \"Please enter a movie title\", Toast.LENGTH_SHORT).show(); }else { nl.mprog.glimp.gidolimperg_pset3.MovieAsyncTask asyncTask = new nl.mprog.glimp.gidolimperg_pset3.MovieAsyncTask(this); asyncTask.execute(movieSearch); movieEditText.getText().clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5747/buggy-version/app.src.main.java.nl.mprog.glimp.gidolimperg_pset3.MainActivity.java", "BodyUseAPI": ["nl.mprog.glimp.gidolimperg_pset3.MovieAsyncTask.execute(java.lang.String)"], "Fixed commit": "9f0dfc3e7c2194f7f595d8dbd48de3b736e52077", "Url": "https://api.github.com/repos/glimperg/GidoLimperg-pset3", "Date": "2017-02-27T13:02:35Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((org.eclipse.dltk.core.search.FieldReferenceMatch) (match)).getNode()) instanceof org.eclipse.dltk.ast.references.VariableReference) { return null; }else { java.lang.String newElementName = getNewElementName(); newElementName = newElementName.replace(\"$\", \"\"); return new org.eclipse.text.edits.ReplaceEdit(match.getOffset(), ((currentName.length()) - 1), newElementName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7253/buggy-version/org.pdtextensions.core.ui.src.org.pdtextensions.internal.corext.refactoring.rename.RenameFieldProcessor.java", "BodyUseAPI": [], "Fixed commit": "178189daa42b50c9eecafa1d90d7b10ddcfee68f", "Url": "https://api.github.com/repos/pdt-eg/Core-Plugin", "Date": "2013-04-23T22:57:37Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c.isLoaded()) && (!(c.getWorld().isChunkLoaded(c)))) { c.unload(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3855/buggy-version/src.com.pauldavdesign.mineauz.minigames.minigame.ScoreboardDisplay.java", "BodyUseAPI": ["org.bukkit.Chunk.unload()"], "Fixed commit": "328fb70b06ad8dab3f51a1aa015e37c12e77308e", "Url": "https://api.github.com/repos/Razz0991/Minigames", "Date": "2014-02-26T02:22:53Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRelation.mTrainee.mIdDb) == (fr.sims.coachingproject.util.SharedPrefUtil.getConnectedUserId(this))) { partner = mRelation.mCoach; }else { partner = mRelation.mTrainee; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6605/buggy-version/app.src.main.java.fr.sims.coachingproject.ui.activity.RelationActivity.java", "BodyUseAPI": [], "Fixed commit": "328d55a96438d45ce114939b91ea3484377dd66a", "Url": "https://api.github.com/repos/d-fournier/CoachingProject-android", "Date": "2016-03-01T13:34:57Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.xikolo.storages.databases.adapters.DataAdapter<java.lang.Module>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (module != null) { module.progress = progressDataAccess.get(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1302/buggy-version/app.src.main.java.de.xikolo.storages.databases.adapters.ModuleDataAdapter.java", "BodyUseAPI": [], "Fixed commit": "d307bc167dbc23e0b9e8bdf972aa42a5d52af6d8", "Url": "https://api.github.com/repos/openHPI/xikolo-android", "Date": "2017-03-25T11:30:14Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mPaused)) { start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1012/buggy-version/android.src.main.java.com.brentvatne.react.ReactVideoView.java", "BodyUseAPI": [], "Fixed commit": "79a579ff3ecd1104c8baead241253736845db760", "Url": "https://api.github.com/repos/salhk/react-native-video", "Date": "2017-06-22T03:28:15Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["crawler.MyLinkedBlockingQueue<crawler.PortableExecutableFile>.take()", "doc.select(\"#pdl-manual\").attr(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((url.contains(\"appid=\")) && (pe.getOperationSystem().equals(\"Windows\"))) { extension = \".exe\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4564/buggy-version/src.main.java.cnet.com.Consumer.java", "BodyUseAPI": [], "Fixed commit": "606f0d19173ff78d0982f4ec3089f9ebb3b2e3dd", "Url": "https://api.github.com/repos/yholovko/PortableExecutableCrawler", "Date": "2015-06-14T02:26:19Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.smf.main.ExpenseReportService.getDailyExpenseReport(user.getUserName())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dailyReport.getLocalDateTime()) == null) { com.smf.main.DailyExpensesScheduler.logger.info(java.lang.String.format(\"No expenses registered today for user %s\", user.getUserName())); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2137/buggy-version/smf-service.src.main.java.com.smf.main.DailyExpensesScheduler.java", "BodyUseAPI": [], "Fixed commit": "9db40e994f52ab78fa7d5e0bd77ebb3a9f3f04d1", "Url": "https://api.github.com/repos/HurmuzacheCiprian/SMF_B", "Date": "2015-12-24T10:26:12Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numPlayers) != 0) { btnGo.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2108/buggy-version/Source.Cypher.app.src.main.java.com.semaphore_soft.apps.cypher.CharacterSelectActivity.java", "BodyUseAPI": [], "Fixed commit": "fbf1b670a7c36ee119003d5d6df30ad6ce3646f7", "Url": "https://api.github.com/repos/semaphore-soft/Cypher", "Date": "2017-02-13T06:20:37Z"},
{"Line": "=>535", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(fr.cph.chicago.activity.MainActivity)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (sharedPref.contains(\"cta_alert\")) { loadAlert = sharedPref.getBoolean(\"cta_alert\", true); }else { android.content.SharedPreferences.Editor editor = sharedPref.edit(); editor.putBoolean(\"cta_alert\", false); editor.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3580/buggy-version/ChicagoTracker.src.fr.cph.chicago.activity.MainActivity.java", "BodyUseAPI": ["android.content.SharedPreferences.getBoolean(java.lang.String,boolean)", "android.content.SharedPreferences.edit()"], "Fixed commit": "26742c3e15133ae52e812d8711be6b418da47487", "Url": "https://api.github.com/repos/carlphilipp/Chicago-Tracker", "Date": "2014-07-20T20:54:34Z"},
{"Line": "=>542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(fr.cph.chicago.activity.MainActivity)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (sharedPref.contains(\"divvy_bike\")) { this.loadBike = sharedPref.getBoolean(\"divvy_bike\", true); }else { android.content.SharedPreferences.Editor editor = sharedPref.edit(); editor.putBoolean(\"divvy_bike\", false); editor.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3580/buggy-version/ChicagoTracker.src.fr.cph.chicago.activity.MainActivity.java", "BodyUseAPI": ["android.content.SharedPreferences.edit()", "android.content.SharedPreferences.getBoolean(java.lang.String,boolean)"], "Fixed commit": "26742c3e15133ae52e812d8711be6b418da47487", "Url": "https://api.github.com/repos/carlphilipp/Chicago-Tracker", "Date": "2014-07-20T20:54:34Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(fr.cph.chicago.activity.BaseActivity)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (sharedPref.contains(\"cta_bus\")) { loadBus = sharedPref.getBoolean(\"cta_bus\", true); }else { android.content.SharedPreferences.Editor editor = sharedPref.edit(); editor.putBoolean(\"cta_bus\", true); editor.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3580/buggy-version/ChicagoTracker.src.fr.cph.chicago.activity.BaseActivity.java", "BodyUseAPI": ["android.content.SharedPreferences.getBoolean(java.lang.String,boolean)", "android.content.SharedPreferences.edit()"], "Fixed commit": "26742c3e15133ae52e812d8711be6b418da47487", "Url": "https://api.github.com/repos/carlphilipp/Chicago-Tracker", "Date": "2014-07-20T20:54:34Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(fr.cph.chicago.activity.BaseActivity)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (sharedPref.contains(\"cta_train\")) { loadTrain = sharedPref.getBoolean(\"cta_train\", true); }else { android.content.SharedPreferences.Editor editor = sharedPref.edit(); editor.putBoolean(\"cta_train\", true); editor.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3580/buggy-version/ChicagoTracker.src.fr.cph.chicago.activity.BaseActivity.java", "BodyUseAPI": ["android.content.SharedPreferences.edit()", "android.content.SharedPreferences.getBoolean(java.lang.String,boolean)"], "Fixed commit": "26742c3e15133ae52e812d8711be6b418da47487", "Url": "https://api.github.com/repos/carlphilipp/Chicago-Tracker", "Date": "2014-07-20T20:54:34Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.parse.ParseUser.getCurrentUser()) == null) { mCompleteTask.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/68/buggy-version/app.src.main.java.com.patels95.sanam.ewb.ui.TaskActivity.java", "BodyUseAPI": [], "Fixed commit": "b49af5e249a8fbe14631fc913037d48c05d5e68f", "Url": "https://api.github.com/repos/patels95/EWB-Android", "Date": "2016-08-30T20:59:19Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id == null) { try { matcher = org.hyperic.hq.ui.util.SaveChartToDashboardUtil.AEID_PATTERN_C.matcher(java.net.URLDecoder.decode(url, \"UTF-8\")); if (matcher.matches()) { id = new org.hyperic.hq.appdef.shared.AppdefEntityID(matcher.group(1)); } } catch (java.io.UnsupportedEncodingException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2408/buggy-version/hq-web.src.main.java.org.hyperic.hq.ui.util.SaveChartToDashboardUtil.java", "BodyUseAPI": [], "Fixed commit": "c871fb2afbb60ef32e37265bbb1bdfcb80792a83", "Url": "https://api.github.com/repos/hyperic/hq", "Date": "2015-11-12T10:32:05Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.thingml.compilers.java.JavaHelper.getJavaType(p.getType(), ((p.getCardinality()) != null), ctx).equals(\"char\")) cast = \"Character\"; else if (org.thingml.compilers.java.JavaHelper.getJavaType(p.getType(), ((p.getCardinality()) != null), ctx).contains(\".\")) cast = org.thingml.compilers.java.JavaHelper.getJavaType(p.getType(), ((p.getCardinality()) != null), ctx); else cast = ctx.firstToUpper(org.thingml.compilers.java.JavaHelper.getJavaType(p.getType(), ((p.getCardinality()) != null), ctx));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/502/buggy-version/compilers.java.src.main.java.org.thingml.compilers.java.JavaThingImplCompiler.java", "BodyUseAPI": ["org.thingml.compilers.java.Parameter.getCardinality()", "org.thingml.compilers.java.Parameter.getType()", "org.thingml.compilers.java.Parameter.getCardinality()", "org.thingml.compilers.java.JavaHelper.getJavaType(p.getType(),((p.getCardinality()) != null),org.thingml.compilers.Context)", "org.thingml.compilers.java.Parameter.getType()", "org.thingml.compilers.java.Parameter.getCardinality()", "org.thingml.compilers.java.JavaHelper.getJavaType(p.getType(),((p.getCardinality()) != null),org.thingml.compilers.Context)", "org.thingml.compilers.Context.firstToUpper(org.thingml.compilers.java.JavaHelper.getJavaType(p.getType(), ((p.getCardinality()) != null), ctx))", "org.thingml.compilers.java.JavaHelper.getJavaType(p.getType(),((p.getCardinality()) != null),org.thingml.compilers.Context)", "org.thingml.compilers.java.JavaHelper.getJavaType(p.getType(), ((p.getCardinality()) != null), ctx).contains(java.lang.String)", "org.thingml.compilers.java.Parameter.getType()"], "Fixed commit": "6bcb5ea9d2b0aad0b384abfcd3a0efd8804a83e5", "Url": "https://api.github.com/repos/TelluIoT/ThingML", "Date": "2015-12-11T10:12:52Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.memtrip.sqlking.preprocessor.processor.freemarker.method.JoinReferencesMethod.getTableFromName(java.lang.String,java.util.List<com.memtrip.sqlking.preprocessor.processor.data.Table>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (joinTable != null) { java.util.List<com.memtrip.sqlking.preprocessor.processor.data.Column> columns = joinTable.getColumns(); for (com.memtrip.sqlking.preprocessor.processor.data.Column column : columns) { if (column.isJoinable(tables)) { java.lang.System.out.println((\"++ \" + (column.getName()))); com.memtrip.sqlking.preprocessor.processor.data.Table columnTable = column.getRootTable(tables); sb.append(buildJoinTable(joinTableName, columnTable)); sb.append(build(column.getClassName(), tables)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2587/buggy-version/preprocessor.src.main.java.com.memtrip.sqlking.preprocessor.processor.freemarker.method.JoinReferencesMethod.java", "BodyUseAPI": ["com.memtrip.sqlking.preprocessor.processor.data.Table.getColumns()"], "Fixed commit": "41c58bb97f61539be1f95081ef01226a690a2344", "Url": "https://api.github.com/repos/memtrip/SQLKing", "Date": "2016-09-02T14:19:31Z"},
{"Line": "=>681", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.galadar.example.stockxchange.MainActivity.p.getLevel()) == 1) return com.galadar.example.stockxchange.MainActivity.EconomyState.Normal;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5048/buggy-version/app.src.main.java.com.galadar.example.stockxchange.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9a5a04771b9a0e495017036484d70ae3488d19c9", "Url": "https://api.github.com/repos/Twilight-Hacker/StockXchange2", "Date": "2016-01-18T21:41:48Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["LogIn.loginAccount.getActiveFriends()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (activeFriend == null) { activeFriend = new java.util.ArrayList<model.BasicAccount>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7235/buggy-version/Application.src.main.java.ui.Contact.java", "BodyUseAPI": [], "Fixed commit": "ab5deb6c10c72433a11fbf63baf4da20e21e60fb", "Url": "https://api.github.com/repos/PushenGao/WeRun-Frontend", "Date": "2015-05-02T21:27:48Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["LogIn.loginAccount.getActiveFriends()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (activeFriend == null) { activeFriend = new java.util.ArrayList<model.BasicAccount>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7235/buggy-version/Application.src.main.java.ui.Contact.java", "BodyUseAPI": [], "Fixed commit": "ab5deb6c10c72433a11fbf63baf4da20e21e60fb", "Url": "https://api.github.com/repos/PushenGao/WeRun-Frontend", "Date": "2015-05-02T21:27:48Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["LogIn.loginAccount.getPendingFriends()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (pendingFriend == null) { pendingFriend = new java.util.ArrayList<model.BasicAccount>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7235/buggy-version/Application.src.main.java.ui.Contact.java", "BodyUseAPI": [], "Fixed commit": "ab5deb6c10c72433a11fbf63baf4da20e21e60fb", "Url": "https://api.github.com/repos/PushenGao/WeRun-Frontend", "Date": "2015-05-02T21:27:48Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["LogIn.loginAccount.getPendingFriends()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (pendingFriend == null) { pendingFriend = new java.util.ArrayList<model.BasicAccount>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7235/buggy-version/Application.src.main.java.ui.Contact.java", "BodyUseAPI": [], "Fixed commit": "ab5deb6c10c72433a11fbf63baf4da20e21e60fb", "Url": "https://api.github.com/repos/PushenGao/WeRun-Frontend", "Date": "2015-05-02T21:27:48Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (objWorkingChannel != null) { synchronized(workingChannelCacheList) { this.workingChannelCacheList.remove(objWorkingChannel.getCacheID()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6434/buggy-version/ServiceFramework2.java.main.service.framework.comsume.ConsumerBean.java", "BodyUseAPI": ["service.framework.io.common.WorkingChannel.getCacheID()", "java.util.HashMap<java.lang.String, service.framework.io.common.WorkingChannel>.remove(objWorkingChannel.getCacheID())"], "Fixed commit": "cfac2465b6b6c6ed2c6542defd4c657f45749d44", "Url": "https://api.github.com/repos/xusleep/ServiceFramework2", "Date": "2014-11-02T15:44:34Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((locationResolverClass) == null) { return TaskServiceXMLConfiguration.DEFAULT_LOCATION_RESOLVER_CLASS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/9166/buggy-version/components.ntask.org.wso2.carbon.ntask.core.src.main.java.org.wso2.carbon.ntask.core.service.impl.TaskServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "5a70111c902fbbd2b3384e766332b6ed0bb2616a", "Url": "https://api.github.com/repos/lankavitharana/carbon-utils", "Date": "2014-07-23T06:14:24Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (presize) { for (java.lang.String s : sparseFeatureIndex.keySet()) { int size = sparseFeatureIndex.get(s).size(); vector.setDenseComponent(ensureFeature(s), new double[size]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8271/buggy-version/src.main.java.com.github.keenon.loglinear.model.ConcatVectorNamespace.java", "BodyUseAPI": [], "Fixed commit": "c1da19312898208bee3aef90f4a0ec9f635c3824", "Url": "https://api.github.com/repos/keenon/loglinear", "Date": "2016-05-29T18:45:30Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["chatRoom.getList().getSelectedValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (chat != null) { java.lang.String message = ((java.lang.String) (javax.swing.JOptionPane.showInputDialog(ChatCreator.frame, \"Enter message:\", \"Send keyrequest\", javax.swing.JOptionPane.PLAIN_MESSAGE, null, null, ((\"I request a key for \" + (java.lang.String.valueOf(chatRoom.getKeyRequestEncryption()))) + \"!\")))); if (message != null) { final java.lang.String chatName = chat.getName(); o.println(java.lang.String.format((\"<message sender=\\\"%s\\\">\" + ((\"<text color=\\\"%s\\\"><keyrequest \" + \"type=\\\"%s\\\">%s\") + \"</keyrequest></text></message>\")), chatRoom.getName(), chatRoom.color, java.lang.String.valueOf(chatRoom.getKeyRequestEncryption()), message)); startKeyTimer(chatName); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7200/buggy-version/Client.java", "BodyUseAPI": ["chatbox.ChatRoom.getName()"], "Fixed commit": "95e7c466d9054a9e193a57c85230e9898b954b70", "Url": "https://api.github.com/repos/SirCunningham/chatbox", "Date": "2014-05-31T11:58:09Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isLoggable(record))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3/buggy-version/src.main.java.me.ferrybig.javacoding.graphical.decompiler.DebugPane.java", "BodyUseAPI": [], "Fixed commit": "cb002852469b3460e3e6efbc547ec96eb348f796", "Url": "https://api.github.com/repos/ferrybig/java-graphical-decompiler", "Date": "2017-08-13T13:47:19Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((newFile.getParentFile()) != null) && (!(newFile.getParentFile().exists()))) newFile.getParentFile().mkdirs();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5545/buggy-version/src.main.java.bspkrs.mmv.RemoteZipHandler.java", "BodyUseAPI": ["java.io.File.mkdirs()", "java.io.File.getParentFile()"], "Fixed commit": "95dd1c5571196f250919318ad476153b1d97b12d", "Url": "https://api.github.com/repos/bspkrs/MCPMappingViewer", "Date": "2016-12-07T00:09:35Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((groupProject.Main.simpleList.size()) > 1) { groupProject.Main.saveNewData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6863/buggy-version/src.groupProject.Main.java", "BodyUseAPI": [], "Fixed commit": "053736e56135c7cf9a0478b5dde59e365097779a", "Url": "https://api.github.com/repos/UHSDFall17/project1", "Date": "2017-11-27T02:15:47Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((groupProject.Main.simpleAddList.size()) > 1) { groupProject.Main.saveNewData(); groupProject.Main.AddNewDateToExistingList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6863/buggy-version/src.groupProject.Main.java", "BodyUseAPI": [], "Fixed commit": "053736e56135c7cf9a0478b5dde59e365097779a", "Url": "https://api.github.com/repos/UHSDFall17/project1", "Date": "2017-11-27T02:15:47Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((profile.getApplicationStatus()) == null) { profile.setApplicationStatus(ApplicationStatus.None); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1151/buggy-version/app.controllers.Profiles.java", "BodyUseAPI": ["models.Profile.setApplicationStatus(ApplicationStatus.None)"], "Fixed commit": "e6f532eb22eccb513d71098df47a25bb66e052e3", "Url": "https://api.github.com/repos/Temuge/ums", "Date": "2015-01-28T04:26:40Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getInt(java.lang.String)", "android.content.SharedPreferences.getInt(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (userID != UserID) { matchingTrips.add(trip); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6774/buggy-version/app.src.main.java.com.android.littleminions.poolme.SearchTripActivity.java", "BodyUseAPI": [], "Fixed commit": "4cc58c7510c4652d64e82bf88e97a213e8b294e5", "Url": "https://api.github.com/repos/sahmedcse/POOLME", "Date": "2015-02-27T15:35:15Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springfield.lou.screen.Html5Element.getController()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (object != null) { try { java.lang.reflect.Method method = object.getClass().getMethod(methodname, org.springfield.lou.screen.Screen.class, org.json.simple.JSONObject.class); if (method != null) { org.springfield.lou.screen.Screen fs = app.getScreen(from); method.invoke(object, fs, data); }else { java.lang.System.out.println((\"MISSING METHOD IN APP =\" + method)); } } catch (java.lang.Exception e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5717/buggy-version/src.org.springfield.lou.screen.Screen.java", "BodyUseAPI": ["java.lang.Class<? extends java.lang.Object>.getMethod(java.lang.String,java.lang.Class,java.lang.Class)", "java.lang.Object.getClass()", "java.lang.reflect.Method.invoke(java.lang.Object,org.springfield.lou.screen.Screen,org.json.simple.JSONObject)"], "Fixed commit": "7296d4209f5e79cf87c34ce824ce1ccf05ec3080", "Url": "https://api.github.com/repos/Noterik/lou3", "Date": "2017-11-21T08:34:01Z"},
{"Line": "=>4327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (includeAddress) { com.codename1.contacts.Address tmp = new com.codename1.contacts.Address(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7191/buggy-version/Ports.iOSPort.src.com.codename1.impl.ios.IOSImplementation.java", "BodyUseAPI": [], "Fixed commit": "95fc9a63bec7e8acc7a1fabc8d0e0c7fd1b7c889", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2015-04-13T22:04:12Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seedu.taskell.model.task.TaskDate.getTodayDate()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (endDate.isBefore(today)) { endDate = today; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5127/buggy-version/src.main.java.seedu.taskell.logic.commands.EditCommand.java", "BodyUseAPI": [], "Fixed commit": "b13a149e14a45b3a645bf0d1d6464c9ad422b376", "Url": "https://api.github.com/repos/CS2103AUG2016-W15-C3/main", "Date": "2016-11-06T13:02:06Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((cities != null) && (!(cities.isEmpty()))) org.greenrobot.eventbus.EventBus.getDefault().post(new com.havrylyuk.weather.events.ContentChangeEvent(cities.size()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7998/buggy-version/app.src.main.java.com.havrylyuk.weather.data.local.LocalDataSource.java", "BodyUseAPI": ["org.greenrobot.eventbus.EventBus.getDefault().post(com.havrylyuk.weather.events.ContentChangeEvent)", "java.util.List<com.havrylyuk.weather.dao.OrmCity>.size()"], "Fixed commit": "cbe2c4aa50f9a817d9c28d4ae0e434df75183443", "Url": "https://api.github.com/repos/graviton57/Weather", "Date": "2017-03-08T10:54:20Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (other != null) { otherArrayCount = other.arrayCount; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2249/buggy-version/src.main.java.org.walkmod.javalang.compiler.symbols.SymbolType.java", "BodyUseAPI": [], "Fixed commit": "036edec3bb64f07fc182638b6daacafb67a2cb13", "Url": "https://api.github.com/repos/cal101/javalang-compiler", "Date": "2017-03-23T16:00:38Z"},
{"Line": "=>5816", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.getSystemService(Context.WIFI_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (manager.isWifiEnabled()) { handleScreenStateChanged(((message.arg1) != 0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2191/buggy-version/service.java.com.android.server.wifi.WifiStateMachine.java", "BodyUseAPI": [], "Fixed commit": "e06e7bd420424a8c13ae54213334020658890818", "Url": "https://api.github.com/repos/EpirexDevProjects/android_frameworks_opt_net_wifi", "Date": "2016-08-14T07:23:39Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newProfile.getAboutMe()) != null) { rejectIfMaxLimitExceed(500, newProfile.getAboutMe(), org.ednovo.gooru.domain.service.userManagement.GL0014, org.ednovo.gooru.domain.service.userManagement.ABOUT_ME, \"400\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5889/buggy-version/api.src.main.java.org.ednovo.gooru.domain.service.userManagement.UserManagementServiceImpl.java", "BodyUseAPI": ["org.ednovo.gooru.domain.service.userManagement.UserManagementServiceImpl.rejectIfMaxLimitExceed(int,newProfile.getAboutMe(),org.ednovo.gooru.domain.service.userManagement.GL0014,org.ednovo.gooru.domain.service.userManagement.ABOUT_ME,java.lang.String)", "org.ednovo.gooru.core.api.model.Profile.getAboutMe()"], "Fixed commit": "87b4c6787ceb44c552dbebaa5f4493b2c8aa4fb8", "Url": "https://api.github.com/repos/parthibane/Gooru-Core-API", "Date": "2015-11-23T09:58:38Z"},
{"Line": "=>907", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((channelIndex < 0) || (channelIndex >= (dabRadioStations.length))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4253/buggy-version/app.src.main.java.com.freshollie.monkeyboard.keystoneradio.playback.RadioPlayerService.java", "BodyUseAPI": [], "Fixed commit": "e9245d33819ffee1c232b0a50ecddb51dc940309", "Url": "https://api.github.com/repos/freshollie/monkeyboard-radio-android", "Date": "2017-06-25T22:59:21Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.epam.dlab.configuration.BillingToolConfiguration.getModule(com.google.common.collect.ImmutableList<com.epam.dlab.core.FilterBase>,java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (f != null) { f.setModuleData(moduleData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8689/buggy-version/services.billing.src.main.java.com.epam.dlab.configuration.BillingToolConfiguration.java", "BodyUseAPI": ["com.epam.dlab.core.FilterBase.setModuleData(com.epam.dlab.core.ModuleData)"], "Fixed commit": "4fc2ddfccd73e4e60a8ef3ce07c8ca7cc54fad5c", "Url": "https://api.github.com/repos/epam/DLab", "Date": "2017-10-18T13:37:33Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cc.takacs.php_codeverage_display.config.ConfigValues.getCloverXmlPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (configPath != null) { java.io.File configFile = new java.io.File(configPath); if ((xmlFile == null) || ((xmlFile.lastModified()) < (configFile.lastModified()))) { xmlFile = configFile; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8275/buggy-version/src.cc.takacs.php_codeverage_display.display.DisplayHandler.java", "BodyUseAPI": [], "Fixed commit": "5966e0e921d798462d27f74e9c2034745be716f8", "Url": "https://api.github.com/repos/oker1/phpunit_codecoverage_display", "Date": "2013-09-01T15:22:00Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (xmlFile == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8275/buggy-version/src.cc.takacs.php_codeverage_display.display.DisplayHandler.java", "BodyUseAPI": [], "Fixed commit": "5966e0e921d798462d27f74e9c2034745be716f8", "Url": "https://api.github.com/repos/oker1/phpunit_codecoverage_display", "Date": "2013-09-01T15:22:00Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPrice) < 1) { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/40/buggy-version/SomeSortofCommerce,YouSay.app.src.main.java.com.jonathanlieblich.somesortofcommerceyousay.ShoppingCartActivity.java", "BodyUseAPI": [], "Fixed commit": "338782865a7656f174a956c43f9a139989f490bb", "Url": "https://api.github.com/repos/jlieblich/project-2", "Date": "2016-11-09T16:56:57Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.chinamobile.iot.onenet.edp.toolbox.EdpClient.getInstance().isConnected()) { com.chinamobile.iot.onenet.edp.toolbox.EdpClient.getInstance().disconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7827/buggy-version/Android-EDP-Sample.src.com.chinamobile.iot.onenet.edp.sample.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e7433c9e8fff78c9a54f87670fd448db21d896cb", "Url": "https://api.github.com/repos/cm-heclouds/Android-EDP-SDK", "Date": "2017-03-29T03:35:48Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((values.length) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2079/buggy-version/src.main.mondrian.rolap.agg.DenseDoubleSegmentDataset.java", "BodyUseAPI": [], "Fixed commit": "b6d3244b450f53d4f4e6348aed6247b1cd7258a3", "Url": "https://api.github.com/repos/pentaho/mondrian", "Date": "2013-07-08T16:36:24Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (propertyValueString.equals(\"Unknown\")) propertyValue = null; else propertyValue = java.lang.Boolean.parseBoolean(propertyValueString);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/9223/buggy-version/c3po-webapi.app.controllers.Filters.java", "BodyUseAPI": ["java.lang.Boolean.parseBoolean(java.lang.String)"], "Fixed commit": "e068922dc3fbd0e33c02a4193f8767d2e68f5842", "Url": "https://api.github.com/repos/datascience/c3po", "Date": "2016-06-27T12:18:38Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDrawer) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2164/buggy-version/laevatein.src.main.java.com.laevatein.internal.ui.PhotoSelectionActivity.java", "BodyUseAPI": [], "Fixed commit": "994e4c2533f9bfadc5d704ab5a95e6b9bfbd60ba", "Url": "https://api.github.com/repos/nohana/Laevatein", "Date": "2014-04-04T05:38:52Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.zarwanhashem.ideatrackr.MainActivity.ideas) == null) { com.zarwanhashem.ideatrackr.MainActivity.ideas = new java.util.ArrayList<com.zarwanhashem.ideatrackr.Idea>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8131/buggy-version/app.src.main.java.com.zarwanhashem.ideatrackr.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5e642527f173b0653a100fdb7e5e9e8431d8f537", "Url": "https://api.github.com/repos/Zarwan/IdeaTrackr", "Date": "2015-08-28T02:03:38Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((g == null) || ((array.length) == 0)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8674/buggy-version/src.omnikryptec.logger.SystemOutputStream.java", "BodyUseAPI": [], "Fixed commit": "02da9c33f5c6f78969c25bbed10876e971b79ca7", "Url": "https://api.github.com/repos/OmniKryptec/OmniKryptec-Engine", "Date": "2017-05-25T22:26:18Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.type) == (ccre.rconf.RConf.F_AUTO_REFRESH)) { field++; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1657/buggy-version/PoultryInspector.src.ccre.supercanvas.components.channels.RConfComponent.java", "BodyUseAPI": [], "Fixed commit": "a11bb8d36e486f5d00fa596945a7e08e2baef9d2", "Url": "https://api.github.com/repos/flamingchickens1540/common-chicken-runtime-engine", "Date": "2015-05-01T00:07:33Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getAttribute().getValueAsObject()) != null) { equalValues = this.getAttribute().getValueAsObject().equals(other.getAttribute().getValueAsObject()); }else { equalValues = (other.getAttribute().getValueAsObject()) == null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/504/buggy-version/src.gov.nist.javax.sdp.fields.AttributeField.java", "BodyUseAPI": [], "Fixed commit": "c68d9ca18af6932fb59e0f5353e482d1cd2b0044", "Url": "https://api.github.com/repos/vladimirralev/jsip", "Date": "2017-06-20T19:11:32Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"wrappedWebElement\".equals(field.getName())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/9245/buggy-version/src.main.java.org.andidev.webdriverextension.WebDriverExtensionFieldDecorator.java", "BodyUseAPI": [], "Fixed commit": "14d293ac9615b05d7fc14c0f5063c57b2df42e22", "Url": "https://api.github.com/repos/andidev/webdriver-extension", "Date": "2013-05-07T05:22:55Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"delegateWebElement\".equals(field.getName())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/9245/buggy-version/src.main.java.org.andidev.webdriverextension.WebDriverExtensionFieldDecorator.java", "BodyUseAPI": [], "Fixed commit": "14d293ac9615b05d7fc14c0f5063c57b2df42e22", "Url": "https://api.github.com/repos/andidev/webdriver-extension", "Date": "2013-05-07T05:22:55Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.uci.ics.asterix.optimizer.rules.am.OptimizableOperatorSubTree.initFromSubTree(join.getInputs().get(1))", "edu.uci.ics.asterix.optimizer.rules.am.OptimizableOperatorSubTree.initFromSubTree(join.getInputs().get(0))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!leftSubTreeMatched) || (!rightSubTreeMatched)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3413/buggy-version/asterix-algebra.src.main.java.edu.uci.ics.asterix.optimizer.rules.am.IntroduceJoinAccessMethodRule.java", "BodyUseAPI": [], "Fixed commit": "734e210eac54cc7e642d9676ce78d848d5ec786c", "Url": "https://api.github.com/repos/sjaco002/incubator-asterixdb", "Date": "2015-05-19T22:39:01Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (topLevel) { org.bouncycastle.mail.smime.SMIMEUtil.outputPostamble(lOut, mimePart, mp.getCount(), boundary); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6222/buggy-version/mail.src.main.java.org.bouncycastle.mail.smime.SMIMEUtil.java", "BodyUseAPI": [], "Fixed commit": "8fe38a8bdabdc61b2a37c3b9ef3978dc35a4017e", "Url": "https://api.github.com/repos/bcgit/bc-java", "Date": "2015-04-27T04:22:50Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newNodeInfo.isMaster()) && ((newNodeInfo.getSlotRanges().length) == 0)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8195/buggy-version/src.main.java.redis.clients.jedis.JedisClusterInfoCache.java", "BodyUseAPI": [], "Fixed commit": "5159233799e35a9e91fffb176910703bbe36adcc", "Url": "https://api.github.com/repos/carlvine500/jedis", "Date": "2016-02-29T12:53:44Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event.getMessage().equalsIgnoreCase(\"%\")) { event.setFormat(event.getFormat()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3395/buggy-version/src.es.wiky.chat.Eventos.java", "BodyUseAPI": ["org.bukkit.event.player.AsyncPlayerChatEvent.getFormat()", "org.bukkit.event.player.AsyncPlayerChatEvent.setFormat(event.getFormat())"], "Fixed commit": "15b694ddda438861f7cab57ae270f760e5dce214", "Url": "https://api.github.com/repos/Wikijito7/ChatPlus", "Date": "2016-06-03T13:55:46Z"},
{"Line": "=>544", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.magnet.mmx.util.ChannelHelper.parseNode(node.getNodeID())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tid.isUserChannel()) { channelInfo = com.magnet.mmx.server.plugin.mmxmgmt.handler.MMXChannelManager.getInstance().nodeToChannelInfo(com.magnet.mmx.server.plugin.mmxmgmt.util.JIDUtil.getUserId(node.getCreator()), node); }else { channelInfo = com.magnet.mmx.server.plugin.mmxmgmt.handler.MMXChannelManager.getInstance().nodeToChannelInfo(null, node); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1775/buggy-version/server.plugins.mmxmgmt.src.main.java.com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.IntegrationChannelResource.java", "BodyUseAPI": [], "Fixed commit": "d73cc99e4ab3062276eb351d186290a4411a9c4c", "Url": "https://api.github.com/repos/magnetsystems/message-server", "Date": "2015-12-18T19:49:01Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (weapon.getName().contains(\"LRM\")) { ans.add(((weapon.getRangeMin()) - ((java.lang.Math.ulp(weapon.getRangeMin())) * 4))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/956/buggy-version/src.lisong_mechlab.view.graphs.DamageGraph.java", "BodyUseAPI": ["java.lang.Math.ulp(weapon.getRangeMin())", "lisong_mechlab.model.item.Weapon.getRangeMin()", "lisong_mechlab.model.item.Weapon.getRangeMin()", "java.util.SortedSet<java.lang.Double>.add(((weapon.getRangeMin()) - ((java.lang.Math.ulp(weapon.getRangeMin())) * 4)))"], "Fixed commit": "e508c60b801daaff8d3f48198039650aad847a46", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2013-08-30T16:04:54Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCursor) != null) mCursor.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7407/buggy-version/app.src.main.java.com.example.profbola.bakingtime.ui.widget.GridWidgetService.java", "BodyUseAPI": [], "Fixed commit": "99952f0eac64947d31a1a4cde530f696ed5d7c37", "Url": "https://api.github.com/repos/Ehbraheem/Baking-Time", "Date": "2017-07-09T16:43:43Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (amount > (maxResources)) { resourcesLeft = maxResources; }else if (amount >= 0) { resourcesLeft = amount; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/254/buggy-version/src.Model.RenewableResource.java", "BodyUseAPI": [], "Fixed commit": "1a3d806bca0e5c43c00c77e5b722541f0785eb98", "Url": "https://api.github.com/repos/Pessimus/KandidatarbeteAI", "Date": "2016-03-30T13:42:34Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAuthCallback) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/399/buggy-version/src.draugiem.lv.api.DraugiemAuth.java", "BodyUseAPI": [], "Fixed commit": "8d1ebf395e9d0c7acaf570a99687faaa0cca1660", "Url": "https://api.github.com/repos/mstrengis/DraugiemApi", "Date": "2014-02-04T14:11:28Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cls.isEnum()) { return com.cloudburst.bigquery.FieldType.STRING; }else if (java.util.Map.class.isAssignableFrom(cls)) { return com.cloudburst.bigquery.FieldType.RECORD; }else { return com.cloudburst.bigquery.FieldType.RECORD; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1/buggy-version/src.main.java.com.cloudburst.bigquery.FieldType.java", "BodyUseAPI": ["java.lang.Class.isAssignableFrom(java.lang.Class)"], "Fixed commit": "e51eaed84787edad513eafb0e83c245a7e6e8249", "Url": "https://api.github.com/repos/CloudburstStrategy/bigquery-tools", "Date": "2016-10-14T13:51:29Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (excludedProperties.contains(prop.getName())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1/buggy-version/src.main.java.com.cloudburst.bigquery.ReflectionBigQueryTable.java", "BodyUseAPI": [], "Fixed commit": "e51eaed84787edad513eafb0e83c245a7e6e8249", "Url": "https://api.github.com/repos/CloudburstStrategy/bigquery-tools", "Date": "2016-10-14T13:51:29Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((indexType.equalsIgnoreCase(OClass.INDEX_TYPE.UNIQUE_HASH_INDEX.name())) || (indexType.equalsIgnoreCase(OClass.INDEX_TYPE.NOTUNIQUE_HASH_INDEX.name()))) || (indexType.equalsIgnoreCase(OClass.INDEX_TYPE.DICTIONARY_HASH_INDEX.name()))) algorithm = com.orientechnologies.orient.core.index.hashindex.local.OHashIndexFactory.HASH_INDEX_ALGORITHM;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4173/buggy-version/core.src.main.java.com.orientechnologies.orient.core.index.OIndexes.java", "BodyUseAPI": [], "Fixed commit": "74eb51a1667f09e11b6ac85632e9892149827e19", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-10-12T09:11:30Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((children) != null) { com.meniga.sdk.models.categories.MenigaCategory self = null; for (com.meniga.sdk.models.categories.MenigaCategory cat : children) { if ((cat.getId()) == (id)) { self = cat; break; } } if (self != null) { children.remove(self); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4990/buggy-version/sdk.src.main.java.com.meniga.sdk.models.categories.MenigaCategory.java", "BodyUseAPI": [], "Fixed commit": "df52b2ed5c39f59c9e8053f05e88087bb41df81a", "Url": "https://api.github.com/repos/meniga/mobile-sdk-android", "Date": "2017-10-02T10:57:01Z"},
{"Line": "=>707", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.taobao.api.domain.Order.getSkuPropertiesName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (null != skuStr) { java.lang.String[] properties = skuStr.split(\";\"); color = properties[0].split(\":\")[1]; size = properties[1].split(\":\")[1]; sku = mySkuMapper.select(order.getOuterIid(), color, size); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2653/buggy-version/src.main.java.cn.halen.service.TradeService.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "2f966090b24154a75907f9b8258af7bb2b126556", "Url": "https://api.github.com/repos/halentest/dongganjituan", "Date": "2014-12-03T03:46:06Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rootApplication) != null) { rootApplication.setTitle(participant.getCNAME()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7974/buggy-version/ClientReceiver.java", "BodyUseAPI": [], "Fixed commit": "4334ca5ee4938b43ec32a27199dbc1a8ffcfe26c", "Url": "https://api.github.com/repos/danbolt/assignment4-461", "Date": "2013-04-05T22:59:34Z"},
{"Line": "=>1187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(canOverrideFonts())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7224/buggy-version/src.com.wanikani.androidnotifier.LocalIMEKeyboard.java", "BodyUseAPI": [], "Fixed commit": "15f1f653e9a49220cc78133b4689716c6132fd37", "Url": "https://api.github.com/repos/WaniKani/Android-Notification", "Date": "2013-11-30T17:27:25Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (line.toLowerCase().startsWith(\"pm:\")) { bw.write(line); }else if (!(line.toLowerCase().startsWith(\"to::\"))) { broadcastMessage(mClient.getLogin(), line); }else { bw.write(((((mClient.getLogin()) + \": \") + line) + \"\\r\\n\")); bw.flush(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7854/buggy-version/src.sample.chat.server.SampleChatServer.java", "BodyUseAPI": ["java.io.BufferedWriter.write(((((mClient.getLogin()) + \": \") + line) + \"\\r\\n\"))", "java.io.BufferedWriter.write(java.lang.String)", "sample.chat.server.SampleChatServer.broadcastMessage(mClient.getLogin(),java.lang.String)", "java.lang.String.toLowerCase()", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "83096f331cfd416b464cac12e839b8a8275bc952", "Url": "https://api.github.com/repos/bhansriguer/java-chat-server", "Date": "2017-08-07T06:37:40Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mm.mayorideas.objects.User.isUserLoggedIn()) { android.content.Intent intent = new android.content.Intent(this, mm.mayorideas.NewIdeaActivity.class); startActivity(intent); }else { mm.mayorideas.utils.LoginUtil.showLoginDialog(this, R.string.login_necessary_new_idea, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6493/buggy-version/app.src.main.java.mm.mayorideas.OverviewActivity.java", "BodyUseAPI": [], "Fixed commit": "541058599b92c269ec9af87251a2bf12304c82cf", "Url": "https://api.github.com/repos/MarekMatejka/MayorIdeasAndroid", "Date": "2016-03-28T21:07:57Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.salesforce.androidsdk.accounts.UserAccount>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (numAccounts > 0) { for (int i = 0; i < (numAccounts - 1); i++) { final com.salesforce.androidsdk.accounts.UserAccount account = userAccounts.get(i); userAccMgr.signoutUser(account, null, false); } final com.salesforce.androidsdk.accounts.UserAccount lastAccount = userAccounts.get((numAccounts - 1)); userAccMgr.signoutUser(lastAccount, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6683/buggy-version/native.SalesforceSDK.src.com.salesforce.androidsdk.ui.PasscodeActivity.java", "BodyUseAPI": ["java.util.List<com.salesforce.androidsdk.accounts.UserAccount>.get(int)"], "Fixed commit": "28d39bb939c784674ef8840b881a706dd615271a", "Url": "https://api.github.com/repos/bhariharan/SalesforceMobileSDK-Android", "Date": "2014-05-19T19:22:36Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eraseMode) { path_color = saved_color; paint_canvas.setColor(path_color); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6665/buggy-version/app.src.main.java.com.example.kiwitech.socialsketch.canvas.CanvasView.java", "BodyUseAPI": [], "Fixed commit": "fa5b70228c5f8c699a3ae4dac3b59743cea338e7", "Url": "https://api.github.com/repos/rohankaps123/SocialSketch", "Date": "2015-06-11T06:33:18Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (activeService && activeUnit) { activitySvc.run(service, \"du.trigger\", \"Re-evaluating deployment unit state\", new java.lang.Runnable() { @java.lang.Override public void run() { reconcile(unit); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5976/buggy-version/code.iaas.service-discovery.server.src.main.java.io.cattle.platform.servicediscovery.deployment.impl.DeploymentUnitManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "d0fd3f8ea2ccd2be40ac14133207969ae202ce47", "Url": "https://api.github.com/repos/alena1108/cattle", "Date": "2017-02-02T01:37:49Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (selectedidp != null) { java.util.List<nl.surfnet.coin.selfservice.domain.CompoundServiceProvider> services = compoundSPService.getCSPsByIdp(selectedidp); model.put(nl.surfnet.coin.selfservice.control.shopadmin.COMPOUND_SPS, services); model.put(\"filteredIdp\", selectedidp.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5079/buggy-version/coin-selfservice-war.src.main.java.nl.surfnet.coin.selfservice.control.shopadmin.CspStatusController.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,selectedidp.getId())", "nl.surfnet.coin.selfservice.domain.IdentityProvider.getId()", "nl.surfnet.coin.selfservice.service.impl.CompoundSPService.getCSPsByIdp(nl.surfnet.coin.selfservice.domain.IdentityProvider)"], "Fixed commit": "54a3afa6f73b35c6198291117c040f9422ef010f", "Url": "https://api.github.com/repos/OpenConext/OpenConext-selfservice", "Date": "2012-12-13T14:49:15Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) stopRefreshMenuAnimation();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2603/buggy-version/src.org.qii.weiciyuan.ui.userinfo.UserInfoFragment.java", "BodyUseAPI": [], "Fixed commit": "5228ffdebdc62975f6a531bce495602259ce8c28", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-09-19T14:11:10Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) stopRefreshMenuAnimation();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2603/buggy-version/src.org.qii.weiciyuan.ui.userinfo.UserInfoFragment.java", "BodyUseAPI": [], "Fixed commit": "5228ffdebdc62975f6a531bce495602259ce8c28", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-09-19T14:11:10Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((followOrUnfollowTask) != null) followOrUnfollowTask.cancel(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2603/buggy-version/src.org.qii.weiciyuan.ui.userinfo.UserInfoFragment.java", "BodyUseAPI": [], "Fixed commit": "5228ffdebdc62975f6a531bce495602259ce8c28", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-09-19T14:11:10Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dir == (Direction.NORTH)) { g.pos.y -= (g.getColBounds().bottom) - (this.bounds.top); }else if (dir == (Direction.SOUTH)) { g.pos.y += (this.bounds.bottom) - (g.getColBounds().top); }else if (dir == (Direction.EAST)) { g.pos.x += (this.bounds.right) - (g.getColBounds().left); }else { g.pos.x -= (g.getColBounds().right) - (this.bounds.left); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5443/buggy-version/GhostHunter17.src.edu.virginia.cs2110.ghosthunter17.Wall.java", "BodyUseAPI": [], "Fixed commit": "aecc7ba2fe3d4d6410822b1425d9df31e32e385f", "Url": "https://api.github.com/repos/DrWhatsisname/GhostHunterTake2", "Date": "2014-11-25T00:26:09Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(target.equals(pos))) { rot = rotateTo(((float) (((java.lang.Math.atan2(((target.y) - (pos.y)), ((target.x) - (pos.x)))) * 180) / (java.lang.Math.PI))), rot, timePassed, edu.virginia.cs2110.ghosthunter17.Player.ROT_V); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5443/buggy-version/GhostHunter17.src.edu.virginia.cs2110.ghosthunter17.Player.java", "BodyUseAPI": ["java.lang.Math.atan2(((target.y) - (pos.y)),((target.x) - (pos.x)))", "edu.virginia.cs2110.ghosthunter17.Player.rotateTo(((float) (((java.lang.Math.atan2(((target.y) - (pos.y)), ((target.x) - (pos.x)))) * 180) / (java.lang.Math.PI))),float,float,float)"], "Fixed commit": "aecc7ba2fe3d4d6410822b1425d9df31e32e385f", "Url": "https://api.github.com/repos/DrWhatsisname/GhostHunterTake2", "Date": "2014-11-25T00:26:09Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sequenceBarrier.waitFor(nextSequence)) >= nextSequence) { event = ringBuffer.get(nextSequence); workHandler.onEvent(event); processedSequence = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2175/buggy-version/src.main.java.com.lmax.disruptor.WorkProcessor.java", "BodyUseAPI": ["com.lmax.disruptor.RingBuffer<T>.get(long)"], "Fixed commit": "7828e685594325e1716c412f907d442ddef4f4ac", "Url": "https://api.github.com/repos/shantanusharma/disruptor", "Date": "2013-07-06T02:29:35Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (driven) { driven = inACar(((org.bukkit.entity.Player) (passenger))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5516/buggy-version/uCars.src.com.useful.ucars.uCarsListener.java", "BodyUseAPI": [], "Fixed commit": "d700b7812416b91892a000ca32ea9c61c500dea2", "Url": "https://api.github.com/repos/storm345dev/ucars", "Date": "2013-09-05T15:14:28Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (keys.contains(recipient)) { available -= knownSignals.get(recipient).size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1323/buggy-version/src.main.java.ar.edu.itba.pod.legajo50453.mt.SignalStore.java", "BodyUseAPI": ["knownSignals.get(recipient).size()", "com.google.common.collect.ArrayListMultimap<org.jgroups.Address, ar.edu.itba.pod.api.Signal>.get(org.jgroups.Address)"], "Fixed commit": "de33a8429f1675240940a7c0d4bd0fe5a57566b8", "Url": "https://api.github.com/repos/champo/tpe-pod", "Date": "2012-11-12T20:33:43Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (available > count) { count = available; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1323/buggy-version/src.main.java.ar.edu.itba.pod.legajo50453.mt.SignalStore.java", "BodyUseAPI": [], "Fixed commit": "de33a8429f1675240940a7c0d4bd0fe5a57566b8", "Url": "https://api.github.com/repos/champo/tpe-pod", "Date": "2012-11-12T20:33:43Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (peerId < 0) { parameters.put(\"peerId\", \"null\"); }else { parameters.put(\"peerId\", peerId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5862/buggy-version/src.main.java.mytorrent.Peer.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,int)"], "Fixed commit": "f445a7a9b81d7d51d501c9f314eff7a45b864012", "Url": "https://api.github.com/repos/bfeng/myTorrent", "Date": "2012-09-14T06:25:11Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bittrex.bittrexData.Tokens(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (new java.lang.String(Tokens.get(a)).equals(\"}\")) { RecordWord = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2666/buggy-version/src.bittrexData.java", "BodyUseAPI": [], "Fixed commit": "27e0d9fb86c3216abfa9c014d39b27c85978e284", "Url": "https://api.github.com/repos/ClothoQ/BITTREX-JAVA", "Date": "2017-11-03T20:37:19Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.http.HttpEntity.getContentType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (null == (contentType.getValue())) { com.bravostudiodev.grid.client.HttpResponseConverter.LOGGER.warning(\"Response from extension returned null content type - it will not be copied to target servlet response.\"); }else { target.setContentType(contentType.getValue()); com.bravostudiodev.grid.client.HttpResponseConverter.LOGGER.info(((\"Response from extension returned \" + (contentType.getValue())) + \" content type\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3921/buggy-version/bravo-proxy.src.main.java.com.bravostudiodev.grid.client.HttpResponseConverter.java", "BodyUseAPI": ["org.apache.http.Header.getValue()", "java.util.logging.Logger.info(((\"Response from extension returned \" + (contentType.getValue())) + \" content type\"))", "javax.servlet.http.HttpServletResponse.setContentType(contentType.getValue())", "org.apache.http.Header.getValue()"], "Fixed commit": "24a405040cf5e709c6ccc9d32722c1ad2a6b62eb", "Url": "https://api.github.com/repos/bravostudiodev/bravo-grid", "Date": "2017-04-24T11:59:52Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n == first) return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3635/buggy-version/src.Poly.java", "BodyUseAPI": [], "Fixed commit": "db25211fc9faa08ccf86f13ac7a177ac6ea8317f", "Url": "https://api.github.com/repos/yms9654/algo", "Date": "2016-07-06T04:33:37Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Poly.memo[n][first]) != 0) { return Poly.memo[n][first]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3635/buggy-version/src.Poly.java", "BodyUseAPI": [], "Fixed commit": "db25211fc9faa08ccf86f13ac7a177ac6ea8317f", "Url": "https://api.github.com/repos/yms9654/algo", "Date": "2016-07-06T04:33:37Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.eclipse.xtext.GrammarUtil.isEObjectRuleCall(ele)) for (org.eclipse.xtext.Action act : org.eclipse.xtext.GrammarUtil.containedActions(((org.eclipse.xtext.RuleCall) (ele)).getRule().getAlternatives())) if (((act.getFeature()) != null) && ((act.getType().getClassifier()) == (type))) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2402/buggy-version/plugins.org.eclipse.xtext.src.org.eclipse.xtext.serializer.analysis.SerializerPDAProvider.java", "BodyUseAPI": [], "Fixed commit": "0a136321d63e53284612ff1ebe03d3ab1d1000ed", "Url": "https://api.github.com/repos/knutwannheden/xtext", "Date": "2011-10-18T16:07:29Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) == null) allFalse = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2402/buggy-version/plugins.org.eclipse.xtext.src.org.eclipse.xtext.serializer.analysis.SerializerPDAProvider.java", "BodyUseAPI": [], "Fixed commit": "0a136321d63e53284612ff1ebe03d3ab1d1000ed", "Url": "https://api.github.com/repos/knutwannheden/xtext", "Date": "2011-10-18T16:07:29Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dainst.gazetteer.domain.Place.getIdentifier(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(geonamesId.matches(\"\\\\d*\"))) { org.dainst.gazetteer.controller.AdminController.logger.warn((((\"invalid geonames identifier \\\"\" + geonamesId) + \"\\\" for place with id \") + (place.getId()))); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4666/buggy-version/src.main.java.org.dainst.gazetteer.controller.AdminController.java", "BodyUseAPI": ["org.slf4j.Logger.warn((((\"invalid geonames identifier \\\"\" + geonamesId) + \"\\\" for place with id \") + (place.getId())))"], "Fixed commit": "3bfcbfb979a0d95001de25fd59404a7a28b9dedb", "Url": "https://api.github.com/repos/dainst/gazetteer", "Date": "2015-05-12T10:34:48Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.chrthms.hmatic4j.base.impl.AbstractConnectionImpl.singleResult()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(resultClass.isInstance(result))) { throw new de.chrthms.hmatic4j.base.exceptions.HMExecutionException((((\"Type checkup failed! Result is not an instance of resultClass given as parameter = \" + (resultClass.getSimpleName())) + \", class of given result = \") + (result.getClass().getSimpleName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6500/buggy-version/src.main.java.de.chrthms.hmatic4j.base.impl.AbstractConnectionImpl.java", "BodyUseAPI": ["java.lang.Object.getClass()", "java.lang.Class<T>.getSimpleName()", "java.lang.Class<? extends java.lang.Object>.getSimpleName()"], "Fixed commit": "eb20df7233cd38bf606c14031f08727b3881894d", "Url": "https://api.github.com/repos/Chris81T/hmatic4j", "Date": "2016-08-19T20:55:57Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eyeLoc.add(eyeLoc.getDirection().normalize()).getBlock()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((block.getType()) != (org.bukkit.Material.WATER)) { block.setType(Material.STATIONARY_WATER); block.setData(((byte) (8))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/628/buggy-version/src.com.projectkorra.projectkorra.waterbending.Torrent.java", "BodyUseAPI": ["org.bukkit.block.Block.setData(int)", "org.bukkit.block.Block.setType(Material.STATIONARY_WATER)"], "Fixed commit": "7cbfe59b2694ed857938e18184faf6cd80211ed0", "Url": "https://api.github.com/repos/Soringaming/ProjectKorra", "Date": "2016-07-23T02:00:46Z"},
{"Line": "=>752", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.societies.maven.Jaxb2Simple.type2ParcelableAction(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (globalType.endsWith(\"List\")) { return (((((((\"if (null == \" + fieldName) + \") { \") + fieldName) + \" = new ArrayList(); }\\n\\t\\t\") + readMethod) + \"(\") + fieldName) + \")\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3757/buggy-version/utilities.maven.Jaxb2SimpleXMLplugin.src.main.java.org.societies.maven.Jaxb2Simple.java", "BodyUseAPI": [], "Fixed commit": "29a97f4a2ef80412430f1c7d429e89cc63f15907", "Url": "https://api.github.com/repos/societies/SOCIETIES-Platform", "Date": "2013-02-22T16:33:48Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cpw.mods.fml.common.FMLCommonHandler.instance().getEffectiveSide()) == (cpw.mods.fml.relauncher.Side.CLIENT)) temp = micdoodle8.mods.galacticraft.core.util.WorldUtil.getProviderForDimensionClient(this.selectedBody.getDimensionID()); else temp = micdoodle8.mods.galacticraft.core.util.WorldUtil.getProviderForDimensionServer(this.selectedBody.getDimensionID());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/743/buggy-version/src.main.java.com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection.java", "BodyUseAPI": [], "Fixed commit": "706ab79ed545d7ccb582685b43299213a3791482", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2017-12-22T20:46:13Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hour) == 0) { hour = 12; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1626/buggy-version/app.src.main.java.com.example.robbieginsburg.assignment1.BoundedService.java", "BodyUseAPI": [], "Fixed commit": "6cc96fec003f6fb4a18c8857b7c54fe77fe2734e", "Url": "https://api.github.com/repos/rgins16/Assignment1_FINAL", "Date": "2016-03-25T00:22:41Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.assignment.sharingfridge.FridgeWidget.taskDB) == null) { android.assignment.sharingfridge.FridgeWidget.taskDB = android.database.sqlite.SQLiteDatabase.openOrCreateDatabase(((context.getFilesDir().getAbsolutePath().replace(\"files\", \"databases\")) + \"fridge.db\"), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4844/buggy-version/app.src.main.java.android.assignment.sharingfridge.FridgeWidget.java", "BodyUseAPI": [], "Fixed commit": "0a3261b2f2ee7010000fe49718887de664f5216a", "Url": "https://api.github.com/repos/fookie/SharingFridge", "Date": "2016-12-02T14:44:19Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser()) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6268/buggy-version/app.src.main.java.com.inventariumapp.inventarium.Fragments.Pantry.java", "BodyUseAPI": [], "Fixed commit": "befd4c256cdbbceebc75fd703cc166c8768b5a30", "Url": "https://api.github.com/repos/InventariumApp/inventarium-android", "Date": "2017-04-03T05:24:17Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN_MR1)) { this.rightBtn.setCompoundDrawablesRelativeWithIntrinsicBounds(null, null, drawable, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7244/buggy-version/core.src.main.java.jacky.vn.androidcore.toolbar.ToolbarHelper.java", "BodyUseAPI": [], "Fixed commit": "7c408c0203bf0a2df51733d562404c7537d6bb41", "Url": "https://api.github.com/repos/jacky181/AndroidCore", "Date": "2017-08-09T03:24:15Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sorter) != null) { int count = ((limit) != null) ? limit : java.lang.Integer.MAX_VALUE; org.araqne.logdb.sort.CloseableIterator it = null; try { it = sorter.sort(); while (it.hasNext()) { java.lang.Object o = it.next(); if ((--count) < 0) break; java.util.Map<java.lang.String, java.lang.Object> value = ((java.util.Map<java.lang.String, java.lang.Object>) (((org.araqne.logdb.sort.Item) (o)).getKey())); pushPipe(new org.araqne.logdb.Row(value)); } } catch (java.io.IOException e) { } finally { if (it != null) { try { it.close(); } catch (java.io.IOException e) { } } } sorter = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4590/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.query.command.Sort.java", "BodyUseAPI": [], "Fixed commit": "72796e87bbf7e342f472f972db2dca67471c057d", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2014-09-01T11:25:11Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((labelsReportFactory) != null) { getWindow().setContent(new com.constellio.app.ui.framework.components.ReportViewer(labelsReportFactory.getReportBuilder(labelsReportParameters), labelsReportFactory.getFilename(null))); }else { showErrorMessage($(\"ReportViewer.noReportFactoryAvailable\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3972/buggy-version/app.src.com.constellio.app.ui.framework.buttons.LabelsButton.java", "BodyUseAPI": [], "Fixed commit": "8717e725e992ba02a7b7e27e14d7ddc4d19dfab5", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2016-11-30T05:25:07Z"},
{"Line": "=>7", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) < 4) { java.lang.System.out.println(\"Usage: consolidate.sh added removed hdt outputHdt\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1278/buggy-version/src.consolidate.java", "BodyUseAPI": [], "Fixed commit": "dd78e3b577e3a642af7656c213d96dff620c722f", "Url": "https://api.github.com/repos/pabloem/hdt-iris", "Date": "2015-07-27T11:49:20Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.unitn.disi.sweb.core.kb.IConceptService.readAncestors(it.unitn.disi.sweb.core.kb.model.concepts.Concept)", "it.unitn.disi.sweb.core.kb.IConceptService.readConcept(sourceSyn.getConceptID())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (ancestorsOfTarget.contains(sourceConcept)) { return true; }else { traverseTree(ancestorsOfTarget, sourceSyn); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7364/buggy-version/src.main.java.it.unitn.disi.smatch.oracles.ukc.UKCService.java", "BodyUseAPI": ["it.unitn.disi.smatch.oracles.ukc.UKCService.traverseTree(java.util.List<it.unitn.disi.sweb.core.kb.model.concepts.Concept>,it.unitn.disi.smatch.oracles.ukc.UKCSense)"], "Fixed commit": "67040271afe8b89a778c57b353ddf8de07834eab", "Url": "https://api.github.com/repos/AhmedAbuRaed/s-match-ukc", "Date": "2015-03-22T20:33:13Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(ip)) { try { inetAddress = java.net.InetAddress.getByName(ip); } catch (java.lang.Exception e) { noOp(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/830/buggy-version/ngrinder-core.src.main.java.net.grinder.util.NetworkUtils.java", "BodyUseAPI": ["java.net.InetAddress.getByName(java.lang.String)"], "Fixed commit": "87efaffac9ba39cbc9113c844903c962a5d21b19", "Url": "https://api.github.com/repos/nhnopensource/ngrinder", "Date": "2014-01-10T08:30:55Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isFinishing())) { android.app.FragmentManager fragmentManager = getFragmentManager(); fragmentManager.beginTransaction().replace(R.id.main_activity_container, fragment).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4087/buggy-version/Aufgabe2.src.at.friki.aufgabe2.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "04dd46c0d1a017fea4be6bb65752d4a2264d6b68", "Url": "https://api.github.com/repos/Kirimoar/Aufgabe2", "Date": "2013-10-15T10:53:55Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isFinishing())) { android.app.FragmentManager fragmentManager = getFragmentManager(); fragmentManager.beginTransaction().replace(R.id.main_activity_container, fragment).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4087/buggy-version/Aufgabe2.src.at.friki.aufgabe2.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "04dd46c0d1a017fea4be6bb65752d4a2264d6b68", "Url": "https://api.github.com/repos/Kirimoar/Aufgabe2", "Date": "2013-10-15T10:53:55Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((samples.piggate.com.piggateInfoDemo.InfoAdapter.infoList.get(i).getDescription().length()) > 75) viewHolder.infoDescription.setText(((samples.piggate.com.piggateInfoDemo.InfoAdapter.infoList.get(i).getDescription().toString().substring(0, 75)) + \"...\")); else viewHolder.infoDescription.setText(samples.piggate.com.piggateInfoDemo.InfoAdapter.infoList.get(i).getDescription().toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/264/buggy-version/samples.PiggateInfoDemo.app.src.main.java.samples.piggate.com.piggateInfoDemo.InfoAdapter.java", "BodyUseAPI": ["samples.piggate.com.piggateInfoDemo.InfoAdapter.infoList.get(i).getDescription()", "samples.piggate.com.piggateInfoDemo.InfoAdapter.infoList.get(i).getDescription().toString().substring(int,int)", "android.widget.TextView.setText(samples.piggate.com.piggateInfoDemo.InfoAdapter.infoList.get(i).getDescription().toString())", "samples.piggate.com.piggateInfoDemo.InfoAdapter.infoList.get(i).getDescription().toString()", "samples.piggate.com.piggateInfoDemo.InfoAdapter.infoList.get(i).getDescription().toString()", "java.util.ArrayList<com.piggate.sdk.PiggateInfo>.get(int)", "java.util.ArrayList<com.piggate.sdk.PiggateInfo>.get(int)", "samples.piggate.com.piggateInfoDemo.InfoAdapter.infoList.get(i).getDescription()", "android.widget.TextView.setText(((samples.piggate.com.piggateInfoDemo.InfoAdapter.infoList.get(i).getDescription().toString().substring(0, 75)) + \"...\"))"], "Fixed commit": "bf4614d6839fdaf2c761cfc1b9503fb7a416d178", "Url": "https://api.github.com/repos/piggate/Piggate-Android-SDK", "Date": "2015-05-05T10:40:17Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (totalProgress == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2300/buggy-version/code.src.com.bj4.yhh.accountant.fragments.CreatePlanFragment.java", "BodyUseAPI": [], "Fixed commit": "02fd1cd4e15e2eb457619f7db7b514445ab06daa", "Url": "https://api.github.com/repos/s011208/Accountant", "Date": "2014-07-02T16:31:50Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(line.isEmpty())) { retLine = line; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8320/buggy-version/src.main.java.com.ethereal.ymd.utils.RuntimeUtils.java", "BodyUseAPI": [], "Fixed commit": "b654c014235f7b134623041020ca74c813febc58", "Url": "https://api.github.com/repos/sgornostal/youtube-downloader", "Date": "2014-03-20T21:05:27Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((user_id != null) && (user_id instanceof java.lang.Long)) { return dao.find(user_id); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2612/buggy-version/src.main.java.fr.eservices.ifi.user_manager.srv.UserServiceImpl.java", "BodyUseAPI": ["fr.eservices.ifi.user_manager.dao.UserDAO.find(java.lang.Long)"], "Fixed commit": "4f1b01d79052275d7db8feed7e0268650d855b8f", "Url": "https://api.github.com/repos/btrd/jee-user-manager", "Date": "2017-01-06T08:31:15Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (newNumber != null) { ent = com.tinfoil.sms.dataStructures.TrustedContact.isNumberUsed(tc, newNumber.getNumber()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1802/buggy-version/src.com.tinfoil.sms.settings.ImportTask.java", "BodyUseAPI": ["com.tinfoil.sms.dataStructures.TrustedContact.isNumberUsed(java.util.ArrayList<com.tinfoil.sms.dataStructures.TrustedContact>,newNumber.getNumber())", "java.lang.Number.getNumber()"], "Fixed commit": "99583f15d88cbd6d17a1c7c8b458b5c6518ab2bc", "Url": "https://api.github.com/repos/tinfoilhat/tinfoil-sms", "Date": "2014-01-20T20:24:23Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.dialog) != null) { try { if (this.dialog.isShowing()) { this.dialog.dismiss(); } if (success == (com.tinfoil.sms.settings.ImportContacts.FINISH)) { finish(); } } catch (java.lang.IllegalArgumentException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1802/buggy-version/src.com.tinfoil.sms.settings.ImportContacts.java", "BodyUseAPI": [], "Fixed commit": "99583f15d88cbd6d17a1c7c8b458b5c6518ab2bc", "Url": "https://api.github.com/repos/tinfoilhat/tinfoil-sms", "Date": "2014-01-20T20:24:23Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (statement == null) { throw new w094j.ctrl8.exception.ParseException(\"Statement cannot be null.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7812/buggy-version/src.main.java.w094j.ctrl8.parse.CommandParser.java", "BodyUseAPI": [], "Fixed commit": "b59c05af477f846026d365127ffd975cfe34d375", "Url": "https://api.github.com/repos/cs2103jan2015-w09-4j/main", "Date": "2015-03-22T12:08:06Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(valueInField.equals(\" \"))) { square.setValue(java.lang.Integer.valueOf(valueInField)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2443/buggy-version/src.com.roastlechon.games.sudoku.business.SolutionAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "e85ae2204ccc40ad4a190c5ef17d4acddf2d0730", "Url": "https://api.github.com/repos/brian618/sudoku", "Date": "2015-11-29T05:25:41Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((t.getQtdExercitos()) == 0) { t.setOwnerPlayer(currentPlayer); currentPlayer.setCurrentTerritories(((currentPlayer.getCurrentTerritories()) + 1)); lostTerritory = t; if ((attackingArmies) > 1) showInputForAttack(); else { lostTerritory.setQtdExercitos(1); currentTerritory.setQtdExercitos(((currentTerritory.getQtdExercitos()) - 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5900/buggy-version/1110649.src.viewController.GameplayController.java", "BodyUseAPI": ["model.Territory.setOwnerPlayer(model.Player)"], "Fixed commit": "66f98c3578c69d92ece153b71a0208273a4416da", "Url": "https://api.github.com/repos/eaverdeja/INF1636_War", "Date": "2015-07-05T20:30:44Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.curves.franchise.repository.CaRepository.findByCaYearAndCaMonth(int,int,org.springframework.data.domain.Sort)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((lastCas.size()) > 0) { fillOne(lastCas, valueV, field); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6307/buggy-version/src.main.java.com.curves.franchise.web.CaAllHelper.java", "BodyUseAPI": ["com.curves.franchise.web.CaAllHelper.fillOne(java.util.List<com.curves.franchise.domain.Ca>,java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.Number>>,java.lang.reflect.Field)"], "Fixed commit": "92a64122099ed4bf31c1e8377e04d44df42a0490", "Url": "https://api.github.com/repos/xpdz/curves", "Date": "2015-06-09T15:54:29Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cas.size()) > 0) { valueX.put(\"highest\", ((java.lang.Number) (xMethod.invoke(cas.get(0))))); valueX.put(\"lowest\", ((java.lang.Number) (xMethod.invoke(cas.get(((cas.size()) - 1)))))); valueX.put(\"sum\", sumFieldValue); valueX.put(\"avg\", ((sumFieldValue.floatValue()) / (cas.size()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6307/buggy-version/src.main.java.com.curves.franchise.web.CaAllHelper.java", "BodyUseAPI": ["java.lang.reflect.Method.invoke(cas.get(0))", "java.util.Map<java.lang.String, java.lang.Number>.put(java.lang.String,java.lang.Object)", "java.util.List<com.curves.franchise.domain.Ca>.get(((cas.size()) - 1))", "java.util.Map<java.lang.String, java.lang.Number>.put(java.lang.String,java.lang.Object)", "java.util.List<com.curves.franchise.domain.Ca>.size()", "java.util.List<com.curves.franchise.domain.Ca>.size()", "java.lang.reflect.Method.invoke(cas.get(((cas.size()) - 1)))", "java.util.Map<java.lang.String, java.lang.Number>.put(java.lang.String,((sumFieldValue.floatValue()) / (cas.size())))", "java.util.List<com.curves.franchise.domain.Ca>.get(int)"], "Fixed commit": "92a64122099ed4bf31c1e8377e04d44df42a0490", "Url": "https://api.github.com/repos/xpdz/curves", "Date": "2015-06-09T15:54:29Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.osreboot.ridhvl.menu.HvlMenu.popups.isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6301/buggy-version/src.com.osreboot.ridhvl.menu.HvlMenu.java", "BodyUseAPI": [], "Fixed commit": "6764cb7b4bb6b2f55e4b1f6c410bd76db2201c0c", "Url": "https://api.github.com/repos/osreboot/Ridhvl", "Date": "2015-08-03T03:14:38Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.osreboot.ridhvl.menu.HvlMenu.popups.isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6301/buggy-version/src.com.osreboot.ridhvl.menu.HvlMenu.java", "BodyUseAPI": [], "Fixed commit": "6764cb7b4bb6b2f55e4b1f6c410bd76db2201c0c", "Url": "https://api.github.com/repos/osreboot/Ridhvl", "Date": "2015-08-03T03:14:38Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nodes().masterNode()) == null) { }else if (!(nodes.localNodeMaster())) { try { membership.sendLeaveRequestBlocking(nodes.masterNode(), nodes.localNode(), org.elasticsearch.common.unit.TimeValue.timeValueSeconds(1)); } catch (java.lang.Exception e) { logger.debug(\"failed to send leave request to master [{}]\", e, nodes.masterNode()); } }else { org.elasticsearch.cluster.node.DiscoveryNode[] possibleMasters = electMaster.nextPossibleMasters(nodes.nodes().values(), 5); for (org.elasticsearch.cluster.node.DiscoveryNode possibleMaster : possibleMasters) { if (nodes.localNode().equals(possibleMaster)) { continue; } try { membership.sendLeaveRequest(nodes.localNode(), possibleMaster); } catch (java.lang.Exception e) { logger.debug(\"failed to send leave request from master [{}] to possible master [{}]\", e, nodes.masterNode(), possibleMaster); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5586/buggy-version/src.main.java.org.elasticsearch.discovery.zen.ZenDiscovery.java", "BodyUseAPI": [], "Fixed commit": "3f938410ee143216f4b020ccb7ca29551ad8919b", "Url": "https://api.github.com/repos/elasticsearch/elasticsearch", "Date": "2014-09-23T17:14:47Z"},
{"Line": "=>972", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["us.ihmc.robotics.geometry.ConvexPolygon2d.getVertex(int)", "us.ihmc.robotics.geometry.ConvexPolygon2d.getVertex(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (us.ihmc.robotics.geometry.LineSegment2d.areEndpointsTheSame(point0, point1)) { return ((point0.getX()) == x) && ((point0.getY()) == y); }else { us.ihmc.robotics.geometry.LineSegment2d lineSegment = new us.ihmc.robotics.geometry.LineSegment2d(point0.getX(), point0.getY(), point1.getX(), point1.getY()); return lineSegment.isPointOnLineSegment(new javax.vecmath.Point2d(x, y)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6610/buggy-version/IHMCRoboticsToolkit.src.us.ihmc.robotics.geometry.ConvexPolygon2d.java", "BodyUseAPI": ["javax.vecmath.Point2d.getX()", "javax.vecmath.Point2d.getY()", "javax.vecmath.Point2d.getY()", "javax.vecmath.Point2d.getY()", "javax.vecmath.Point2d.getX()", "javax.vecmath.Point2d.getX()"], "Fixed commit": "9511708f2c56c09dddfff485fe2780010d53b08e", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-open-robotics-software", "Date": "2016-04-20T22:26:16Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((value.length()) == 0) { return value; }else if ((m = diag.matcher(value)).matches()) { java.lang.StringBuilder acte = new java.lang.StringBuilder(m.group(1)); if ((m.group(2).length()) != 0) acte.append(\".\").append(m.group(2)); return acte.toString(); }else { throw new java.io.IOException((value + \" is not a diagnosis\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/919/buggy-version/src.main.java.com.github.aiderpmsi.pims.grouper.model.RssContent.java", "BodyUseAPI": ["java.util.regex.Pattern.matcher(java.lang.String)", "java.util.regex.Matcher.matches()"], "Fixed commit": "cccde7dc202b9135744e66907a1f1a18a5e69fad", "Url": "https://api.github.com/repos/aiderpmsi/pims", "Date": "2014-05-23T16:16:18Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["thomasmore.be.travelcommunicationassistant.fragment.ContactListFragment.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (activity instanceof thomasmore.be.travelcommunicationassistant.NavigationDrawerActivity) { thomasmore.be.travelcommunicationassistant.utils.Helper.changeFragment(activity, new thomasmore.be.travelcommunicationassistant.fragment.HomeFragment(), false); }else { getActivity().finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5943/buggy-version/app.src.main.java.thomasmore.be.travelcommunicationassistant.fragment.ContactListFragment.java", "BodyUseAPI": ["thomasmore.be.travelcommunicationassistant.utils.Helper.changeFragment(android.app.Activity,thomasmore.be.travelcommunicationassistant.fragment.HomeFragment,boolean)"], "Fixed commit": "b52ed6119d7b37c9ce1979f171463bedc66b1d2a", "Url": "https://api.github.com/repos/Eshumkv/taca", "Date": "2017-05-15T10:12:21Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.collectionspace.chain.csp.schema.Spec.getRecord(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (restrictedmediaR != null) { addMethod(Operation.READ, new java.lang.String[]{ r.getWebURL(), restrictedmediaR.getWebURL() }, 1, new org.collectionspace.chain.csp.webui.record.RecordSearchList(restrictedmediaR, org.collectionspace.chain.csp.webui.record.RecordSearchList.MODE_SEARCH_RELATED)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6917/buggy-version/cspi-webui.src.main.java.org.collectionspace.chain.csp.webui.main.WebUI.java", "BodyUseAPI": ["org.collectionspace.chain.csp.webui.main.WebUI.addMethod(Operation.READ,java.lang.String[],int,org.collectionspace.chain.csp.webui.record.RecordSearchList)", "org.collectionspace.chain.csp.schema.Record.getWebURL()"], "Fixed commit": "112b9ef68670a6b0b045087faef049b97eae0ec8", "Url": "https://api.github.com/repos/OaklandMuseum/application", "Date": "2016-03-26T23:57:54Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.collectionspace.chain.csp.schema.Spec.getRecord(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (restrictedmediaR == null) org.collectionspace.chain.csp.webui.main.WebUI.log.error(\"No media record configured!!!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6917/buggy-version/cspi-webui.src.main.java.org.collectionspace.chain.csp.webui.main.WebUI.java", "BodyUseAPI": [], "Fixed commit": "112b9ef68670a6b0b045087faef049b97eae0ec8", "Url": "https://api.github.com/repos/OaklandMuseum/application", "Date": "2016-03-26T23:57:54Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (key != null) { org.apache.wicket.markup.html.link.Link<hu.sch.web.kp.search.SearchResultsPage> searchLink = new org.apache.wicket.markup.html.link.BookmarkablePageLink<hu.sch.web.kp.search.SearchResultsPage>(\"searchLink\", hu.sch.web.kp.search.SearchResultsPage.class, new org.apache.wicket.request.mapper.parameter.PageParameters().add(\"type\", type).add(\"key\", key)); searchLink.add(new org.apache.wicket.markup.html.basic.Label(\"searchLinkLabel\", key)); add(searchLink); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4685/buggy-version/sch-pek-web.src.main.java.hu.sch.web.wicket.components.customlinks.SearchLink.java", "BodyUseAPI": [], "Fixed commit": "a2460b702ee2cb7af6b1518dd5e84f63bbf8741a", "Url": "https://api.github.com/repos/kir-dev/korok", "Date": "2013-01-01T22:13:41Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((self.getCurrentFocus().getId()) == (R.id.display_name)) { error_display_name.setVisibility(View.VISIBLE); error_display_name.setText(self.getResources().getString(R.string.display_name_not_blank)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2773/buggy-version/app.src.main.java.com.llp.lunchkaki.activities.RegisterActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(self.getResources().getString(R.string.display_name_not_blank))", "self.getResources().getString(R.string.display_name_not_blank)", "com.llp.lunchkaki.activities.RegisterActivity.getResources()"], "Fixed commit": "4da5bdc621bed39b0446a9377c5a3ac20dc2014a", "Url": "https://api.github.com/repos/brianfwz/lkk", "Date": "2016-05-02T05:27:25Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((self.getCurrentFocus().getId()) == (R.id.password)) { error_password.setVisibility(View.VISIBLE); error_password.setText(self.getResources().getString(R.string.password_not_blank)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2773/buggy-version/app.src.main.java.com.llp.lunchkaki.activities.RegisterActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(self.getResources().getString(R.string.password_not_blank))", "com.llp.lunchkaki.activities.RegisterActivity.getResources()", "self.getResources().getString(R.string.password_not_blank)"], "Fixed commit": "4da5bdc621bed39b0446a9377c5a3ac20dc2014a", "Url": "https://api.github.com/repos/brianfwz/lkk", "Date": "2016-05-02T05:27:25Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((self.getCurrentFocus().getId()) == (R.id.password_confirmation)) { error_password_confirm.setVisibility(View.VISIBLE); error_password_confirm.setText(self.getResources().getString(R.string.password_not_blank)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2773/buggy-version/app.src.main.java.com.llp.lunchkaki.activities.RegisterActivity.java", "BodyUseAPI": ["com.llp.lunchkaki.activities.RegisterActivity.getResources()", "android.widget.TextView.setText(self.getResources().getString(R.string.password_not_blank))", "self.getResources().getString(R.string.password_not_blank)"], "Fixed commit": "4da5bdc621bed39b0446a9377c5a3ac20dc2014a", "Url": "https://api.github.com/repos/brianfwz/lkk", "Date": "2016-05-02T05:27:25Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((java.util.Calendar.getInstance().getTimeInMillis()) - (nb.getCalendar().getTimeInMillis())) < 0) { smartcampus.notifications.MyReceiver mr = new smartcampus.notifications.MyReceiver(); mr.registerAlarm(getApplicationContext(), nb.getCalendar()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3877/buggy-version/BikeRovereto.src.smartcampus.activity.MainActivity.java", "BodyUseAPI": ["smartcampus.model.NotificationBlock.getCalendar()", "smartcampus.notifications.MyReceiver.registerAlarm(getApplicationContext(),nb.getCalendar())"], "Fixed commit": "c3065f9b06756e2da1c91d5e0b8e34151ce177c4", "Url": "https://api.github.com/repos/smartcampuslab/smartcampus.bikesharing", "Date": "2014-06-23T14:52:11Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (k != ((y) - 1)) { if ((k - j) >= 3) { result.add(new int[]{ i, j, i, k - 1 }); break; }else { break; } }else { if ((jewels[i][j].equals(jewels[i][k])) && (((y) - j) >= 3)) { result.add(new int[]{ i, j, i, k }); }else if ((!(jewels[i][j].equals(jewels[i][k]))) && ((k - j) >= 3)) { result.add(new int[]{ i, j, i, k - 1 }); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4259/buggy-version/Main.Board.java", "BodyUseAPI": ["java.util.ArrayList<int[]>.add(int[])", "java.util.ArrayList<int[]>.add(int[])", "java.util.ArrayList<int[]>.add(int[])", "jewels[i][j].equals(jewels[i][k])", "jewels[i][j].equals(jewels[i][k])"], "Fixed commit": "4afe0123b82c16b713c13aedd5a1618b1069a955", "Url": "https://api.github.com/repos/stefintrim/java-jewels", "Date": "2014-11-19T09:18:05Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (k == ((x) - 1)) { if ((jewels[i][j].equals(jewels[k][j])) && (((x) - i) >= 3)) { result.add(new int[]{ i, j, k, j }); }else if ((!(jewels[i][j].equals(jewels[k][j]))) && ((k - i) >= 3)) { result.add(new int[]{ i, j, k - 1, j }); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4259/buggy-version/Main.Board.java", "BodyUseAPI": ["jewels[i][j].equals(jewels[k][j])", "java.util.ArrayList<int[]>.add(int[])", "jewels[i][j].equals(jewels[k][j])", "java.util.ArrayList<int[]>.add(int[])"], "Fixed commit": "4afe0123b82c16b713c13aedd5a1618b1069a955", "Url": "https://api.github.com/repos/stefintrim/java-jewels", "Date": "2014-11-19T09:18:05Z"},
{"Line": "=>956", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(backLocation)) { return backLocation; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1128/buggy-version/rice-middleware.kns.src.main.java.org.kuali.rice.kns.util.WebUtils.java", "BodyUseAPI": [], "Fixed commit": "a928ce8ecc6af703789ae0ec713005005923c478", "Url": "https://api.github.com/repos/jebmiller/rice", "Date": "2016-03-11T04:34:51Z"},
{"Line": "=>641", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e instanceof com.treasure_data.client.HttpClientException) { com.treasure_data.client.HttpClientException ex = ((com.treasure_data.client.HttpClientException) (e)); int statusCode = ex.getResponseCode(); if (statusCode == 401) { com.treasure_data.client.DefaultClientAdaptorImpl.LOG.log(java.util.logging.Level.WARNING, e.getMessage(), e); throw new com.treasure_data.model.AuthenticationException(\"Authentication failed\", e.getMessage()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5946/buggy-version/src.main.java.com.treasure_data.client.DefaultClientAdaptorImpl.java", "BodyUseAPI": ["java.util.logging.Logger.log(java.util.logging.Level,e.getMessage(),com.treasure_data.client.ClientException)", "com.treasure_data.client.ClientException.getMessage()", "com.treasure_data.client.ClientException.getMessage()"], "Fixed commit": "51a1641fcd1dc57effc635d599d4419b8f1c5a48", "Url": "https://api.github.com/repos/treasure-data/td-client-java", "Date": "2014-07-31T19:17:00Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (citationCount == null) citationCount = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1633/buggy-version/src.main.java.ch.tkuhn.memetools.CalculatePaperSuccess.java", "BodyUseAPI": [], "Fixed commit": "ad6e81b7c8bf5f7a85a6ec46b03b2efad2a0134a", "Url": "https://api.github.com/repos/tkuhn/memetools", "Date": "2015-05-07T05:46:13Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (paperCount == null) paperCount = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1633/buggy-version/src.main.java.ch.tkuhn.memetools.CalculatePaperSuccess.java", "BodyUseAPI": [], "Fixed commit": "ad6e81b7c8bf5f7a85a6ec46b03b2efad2a0134a", "Url": "https://api.github.com/repos/tkuhn/memetools", "Date": "2015-05-07T05:46:13Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Long>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (paperDays == null) paperDays = 0L;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1633/buggy-version/src.main.java.ch.tkuhn.memetools.CalculatePaperSuccess.java", "BodyUseAPI": [], "Fixed commit": "ad6e81b7c8bf5f7a85a6ec46b03b2efad2a0134a", "Url": "https://api.github.com/repos/tkuhn/memetools", "Date": "2015-05-07T05:46:13Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (citationCount == null) citationCount = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1633/buggy-version/src.main.java.ch.tkuhn.memetools.CalculatePaperSuccess.java", "BodyUseAPI": [], "Fixed commit": "ad6e81b7c8bf5f7a85a6ec46b03b2efad2a0134a", "Url": "https://api.github.com/repos/tkuhn/memetools", "Date": "2015-05-07T05:46:13Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (paperCount == null) paperCount = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1633/buggy-version/src.main.java.ch.tkuhn.memetools.CalculatePaperSuccess.java", "BodyUseAPI": [], "Fixed commit": "ad6e81b7c8bf5f7a85a6ec46b03b2efad2a0134a", "Url": "https://api.github.com/repos/tkuhn/memetools", "Date": "2015-05-07T05:46:13Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Long>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (lastDay == null) lastDay = 0L;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1633/buggy-version/src.main.java.ch.tkuhn.memetools.CalculatePaperSuccess.java", "BodyUseAPI": [], "Fixed commit": "ad6e81b7c8bf5f7a85a6ec46b03b2efad2a0134a", "Url": "https://api.github.com/repos/tkuhn/memetools", "Date": "2015-05-07T05:46:13Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((action) != null) action.run();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6801/buggy-version/project.core.src.universe25.Agents.States.SequentialStatesWithPriority.java", "BodyUseAPI": [], "Fixed commit": "1066d67422c2a88fc555a7e8ab0703f5bc5f3ebc", "Url": "https://api.github.com/repos/Jorl17/universe-25", "Date": "2015-08-21T14:40:24Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((action) != null) action.run();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6801/buggy-version/project.core.src.universe25.Agents.States.SequentialStatesWithPriority.java", "BodyUseAPI": [], "Fixed commit": "1066d67422c2a88fc555a7e8ab0703f5bc5f3ebc", "Url": "https://api.github.com/repos/Jorl17/universe-25", "Date": "2015-08-21T14:40:24Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clearTags && (!tagsSetByForm)) queryData.remove(\"tags\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/603/buggy-version/src.main.java.org.segrada.servlet.SegradaSimplePageCachingFilter.java", "BodyUseAPI": [], "Fixed commit": "df15c8cd58efbcb3f55855e8920ba7dc690eaccd", "Url": "https://api.github.com/repos/mkalus/segrada", "Date": "2015-12-08T10:32:12Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String[]>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (key.equals(\"tags\")) tagsSetByForm = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/603/buggy-version/src.main.java.org.segrada.servlet.SegradaSimplePageCachingFilter.java", "BodyUseAPI": [], "Fixed commit": "df15c8cd58efbcb3f55855e8920ba7dc690eaccd", "Url": "https://api.github.com/repos/mkalus/segrada", "Date": "2015-12-08T10:32:12Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String[]>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (key.equals(\"clearTags\")) { clearTags = true; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/603/buggy-version/src.main.java.org.segrada.servlet.SegradaSimplePageCachingFilter.java", "BodyUseAPI": [], "Fixed commit": "df15c8cd58efbcb3f55855e8920ba7dc690eaccd", "Url": "https://api.github.com/repos/mkalus/segrada", "Date": "2015-12-08T10:32:12Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["feedEvent.getEvent().getRemovalTargets()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (removalTargets != null) { for (java.lang.String removalTarget : removalTargets) { if (!(com.google.common.base.Strings.isNullOrEmpty(removalTarget))) { removalTargetSet.add(removalTarget); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4929/buggy-version/src.main.java.com.ning.metrics.collector.processing.feed.FeedRollUpProcessor.java", "BodyUseAPI": [], "Fixed commit": "2c13438a17cfaabc6370b0c8b3e5f9151175a2d7", "Url": "https://api.github.com/repos/ning/collector", "Date": "2014-08-20T13:31:32Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tokenHandler) != null) { com.orientechnologies.orient.core.db.document.ODatabaseDocument db = null; com.orientechnologies.orient.core.metadata.security.OSecurityUser user = null; try { db = ((com.orientechnologies.orient.core.db.document.ODatabaseDocument) (server.openDatabase(iRequest.databaseName, username, password))); user = db.getUser(); if (user != null) { byte[] tokenBytes = tokenHandler.getSignedWebToken(db, user); signedToken = new java.lang.String(tokenBytes); }else { } } catch (com.orientechnologies.orient.core.exception.OSecurityAccessException e) { } catch (com.orientechnologies.common.concur.lock.OLockException e) { com.orientechnologies.common.log.OLogManager.instance().error(this, ((\"Cannot access to the database '\" + (iRequest.databaseName)) + \"'\"), com.orientechnologies.orient.core.exception.ODatabaseException.class, e); } finally { if (db != null) { db.close(); } } result = new com.orientechnologies.orient.core.record.impl.ODocument().field(\"access_token\", signedToken).field(\"expires_in\", 3600); iResponse.writeRecord(result, com.orientechnologies.orient.server.network.protocol.http.command.post.OServerCommandPostAuthToken.RESPONSE_FORMAT, null); }else { result = new com.orientechnologies.orient.core.record.impl.ODocument().field(\"error\", \"unsupported_grant_type\"); sendError(iRequest, iResponse, result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/72/buggy-version/server.src.main.java.com.orientechnologies.orient.server.network.protocol.http.command.post.OServerCommandPostAuthToken.java", "BodyUseAPI": [], "Fixed commit": "d84cde2a1c6eeaecf33a9141e303fcf12ef25e9a", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-08-01T14:00:47Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.server.network.protocol.http.OHttpRequest.getUrlEncodedContent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (content == null) { com.orientechnologies.orient.core.record.impl.ODocument result = new com.orientechnologies.orient.core.record.impl.ODocument().field(\"error\", \"missing_auth_data\"); sendError(iRequest, iResponse, result); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/72/buggy-version/server.src.main.java.com.orientechnologies.orient.server.network.protocol.http.command.post.OServerCommandPostAuthToken.java", "BodyUseAPI": [], "Fixed commit": "d84cde2a1c6eeaecf33a9141e303fcf12ef25e9a", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-08-01T14:00:47Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (value instanceof org.json.JSONObject) { target.put(((T) (key)), com.jsonutil.JsonUtil.localJson(jsonObject.getJSONObject(key), sClass)); }else { target.put(((T) (key)), ((S) (org.json.JSONObject.wrap(value)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6671/buggy-version/src.main.java.com.jsonutil.JsonUtil.java", "BodyUseAPI": ["org.json.JSONObject.wrap(java.lang.Object)", "java.util.Map<T, S>.put(java.lang.String,((S) (org.json.JSONObject.wrap(value))))"], "Fixed commit": "c4d8c2f4a2aaa32de4f4a59c9304a0666f18d7e0", "Url": "https://api.github.com/repos/mallikankati/jsonutil", "Date": "2014-01-08T17:39:49Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (aaPlayer.afk) { player.sendMessage(((((((org.bukkit.ChatColor.RED) + \"Note: \") + (onlinePlayers[i].getDisplayName())) + (org.bukkit.ChatColor.RED)) + \" is AFK - \") + (aaPlayer.afkMessage))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5863/buggy-version/src.com.github.rmsy.alertafk.AAListener.java", "BodyUseAPI": ["org.bukkit.entity.Player.sendMessage(((((((org.bukkit.ChatColor.RED) + \"Note: \") + (onlinePlayers[i].getDisplayName())) + (org.bukkit.ChatColor.RED)) + \" is AFK - \") + (aaPlayer.afkMessage)))"], "Fixed commit": "1339744950e9eb2df8e927d132c7c97cfe7b2291", "Url": "https://api.github.com/repos/rmsy/AlertAFK", "Date": "2012-12-20T22:29:37Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["femr.data.daos.IRepository<femr.common.models.IPatient>.findAll(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((patients.size()) > 0) { response.setResponseObject(patients); }else { response.addError(\"patients\", \"No patients available\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5194/buggy-version/app.femr.business.services.ResearchService.java", "BodyUseAPI": ["femr.business.dtos.ServiceResponse<java.util.List<? extends femr.common.models.IPatient>>.setResponseObject(java.util.List<? extends femr.common.models.IPatient>)"], "Fixed commit": "58f4a87e7dab7a2f44e597a87747666a8cc9aa14", "Url": "https://api.github.com/repos/codeitandloadit/femr", "Date": "2014-03-09T04:02:22Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.block.Sign.getLines()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(lines[0].contains(\"[WebAuction]\"))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4818/buggy-version/src.me.stutiguias.webportal.listeners.WebAuctionPlayerListener.java", "BodyUseAPI": [], "Fixed commit": "61029428b7a5a183e5d2e10c8070ffaed534e533", "Url": "https://api.github.com/repos/stutiguias/webportal", "Date": "2013-12-15T20:24:05Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((FBUserIDs == null) || (FBUserIDs.isEmpty())) { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7176/buggy-version/src.main.java.com.mmontes.model.dao.UserAccountDaoHibernate.java", "BodyUseAPI": [], "Fixed commit": "2c76d43a5aea181c0a942312adcb990b2ca26f26", "Url": "https://api.github.com/repos/mmontes11/GeoTourism_server", "Date": "2016-02-05T23:22:05Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null == (this.getI18nManager().getLabelGroup(attributeLabelKey))) { this.addLabelGroups(attributeLabelKey, attribute.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7831/buggy-version/entando-plugin-jpwebdynamicform.src.main.java.com.agiletec.plugins.jpwebdynamicform.aps.internalservlet.message.UserNewMessageAction.java", "BodyUseAPI": ["com.agiletec.plugins.jpwebdynamicform.aps.internalservlet.message.UserNewMessageAction.addLabelGroups(java.lang.String,attribute.getName())"], "Fixed commit": "ec214be2f21a41902582279aee46b0996d470296", "Url": "https://api.github.com/repos/entando/entando-plugins-parent", "Date": "2013-02-11T17:28:49Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (verbService.requestBodyIsAllowedFor(httpVerb)) { setRequestBody(urlConnection, request.getBody()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7558/buggy-version/src.main.java.br.com.tealdi.httpclient.wrapper.HttpConnectorWrapper.java", "BodyUseAPI": [], "Fixed commit": "f9f161b5ae07a53a364d42a47878a5b0d611ccc8", "Url": "https://api.github.com/repos/ricardotealdi/http-client", "Date": "2011-04-07T20:41:28Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (auth) { pwdEditText.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1317/buggy-version/app.src.main.java.net.svglol.airsoft.player.fragment.LoginFragment.java", "BodyUseAPI": [], "Fixed commit": "29b2037fb868b1ecf2855b48344a7c593f64df9a", "Url": "https://api.github.com/repos/svglol/AirsoftPlayer", "Date": "2015-05-13T03:23:41Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (folder.exists()) { for (java.lang.String name : folder.list()) { if (name.toLowerCase().endsWith(\".zip\")) { enabledList_.add(name); }else if (name.toLowerCase().endsWith(\".jar\")) { enabledList_.add(name); }else if (name.toLowerCase().endsWith(\".litemod\")) { enabledList_.add(name); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8710/buggy-version/src.net.ftb.gui.dialogs.EditModPackDialog.java", "BodyUseAPI": ["java.io.File.list()"], "Fixed commit": "070da10c8fee567fd358cdbdcd98c90823349c77", "Url": "https://api.github.com/repos/Energy0124/FTBLaunch", "Date": "2013-01-02T09:18:34Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (folder.exists()) { for (java.lang.String name : folder.list()) { if (name.toLowerCase().endsWith(\".zip.disabled\")) { disabledList_.add(name); }else if (name.toLowerCase().endsWith(\".jar.disabled\")) { disabledList_.add(name); }else if (name.toLowerCase().endsWith(\".litemod.disabled\")) { disabledList_.add(name); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8710/buggy-version/src.net.ftb.gui.dialogs.EditModPackDialog.java", "BodyUseAPI": ["java.io.File.list()"], "Fixed commit": "070da10c8fee567fd358cdbdcd98c90823349c77", "Url": "https://api.github.com/repos/Energy0124/FTBLaunch", "Date": "2013-01-02T09:18:34Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wikiup.core.util.Interfaces.cast(java.lang.Class,java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (processorContext != null) return processorContext;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5095/buggy-version/framework.src.org.wikiup.servlet.impl.context.ProcessorContextSupport.java", "BodyUseAPI": [], "Fixed commit": "1ce08b42401b8748532bec1fd97dacad987cc903", "Url": "https://api.github.com/repos/smantinc/wikiup", "Date": "2015-03-11T10:39:07Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ascending.length) > i) { valueMeta.setSortedDescending((!(ascending[i]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/426/buggy-version/engine.src.org.pentaho.di.trans.steps.sort.SortRowsMeta.java", "BodyUseAPI": ["org.pentaho.di.core.row.ValueMetaInterface.setSortedDescending(boolean)"], "Fixed commit": "b678a4d1c229cf2d472f0c8433a248408ecba7c0", "Url": "https://api.github.com/repos/wseyler/pentaho-kettle", "Date": "2017-03-28T13:58:55Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((collatorEnabled.length) > i) { valueMeta.setCollatorDisabled((!(collatorEnabled[i]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/426/buggy-version/engine.src.org.pentaho.di.trans.steps.sort.SortRowsMeta.java", "BodyUseAPI": ["org.pentaho.di.core.row.ValueMetaInterface.setCollatorDisabled(boolean)"], "Fixed commit": "b678a4d1c229cf2d472f0c8433a248408ecba7c0", "Url": "https://api.github.com/repos/wseyler/pentaho-kettle", "Date": "2017-03-28T13:58:55Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((caseSensitive.length) > i) { valueMeta.setCaseInsensitive((!(caseSensitive[i]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/426/buggy-version/engine.src.org.pentaho.di.trans.steps.sort.SortRowsMeta.java", "BodyUseAPI": ["org.pentaho.di.core.row.ValueMetaInterface.setCaseInsensitive(boolean)"], "Fixed commit": "b678a4d1c229cf2d472f0c8433a248408ecba7c0", "Url": "https://api.github.com/repos/wseyler/pentaho-kettle", "Date": "2017-03-28T13:58:55Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((collatorStrength.length) > i) { valueMeta.setCollatorStrength(collatorStrength[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/426/buggy-version/engine.src.org.pentaho.di.trans.steps.sort.SortRowsMeta.java", "BodyUseAPI": ["org.pentaho.di.core.row.ValueMetaInterface.setCollatorStrength(int)"], "Fixed commit": "b678a4d1c229cf2d472f0c8433a248408ecba7c0", "Url": "https://api.github.com/repos/wseyler/pentaho-kettle", "Date": "2017-03-28T13:58:55Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((partitionInfoString == null) || (partitionInfoString.trim().isEmpty())) { return new org.voltdb.ProcedurePartitionData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1628/buggy-version/src.frontend.org.voltdb.ProcedurePartitionData.java", "BodyUseAPI": [], "Fixed commit": "994eaf0aee7479d73363139a4c6c4d037b6019e3", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2017-11-27T03:56:38Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.item.ItemStack.getItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (item instanceof com.bioxx.tfc.Food.ItemFoodTFC) com.bioxx.tfc.Food.ItemFoodTFC.createTag(ret);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/9100/buggy-version/src.main.java.com.peffern.crops.TFCCropIndex.java", "BodyUseAPI": [], "Fixed commit": "70692886d1a0d5e82858a26db2219b66c2aa2cd3", "Url": "https://api.github.com/repos/Peffern/TFC-Crop-Index", "Date": "2017-02-17T06:02:07Z"},
{"Line": "=>728", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Node.getAttributes()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (attrs != null) { org.w3c.dom.Node attr = attrs.getNamedItem(name); if (attr != null) { return attr.getNodeValue(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6405/buggy-version/core.src.processing.data.XML.java", "BodyUseAPI": ["org.w3c.dom.NamedNodeMap.getNamedItem(java.lang.String)"], "Fixed commit": "959c8c9d09000ae6cc40ebffbb4b1f16b015479a", "Url": "https://api.github.com/repos/JakubValtar/processing", "Date": "2014-10-31T15:05:11Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.jdo.Query.execute(appProperty.getValue())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((userIdList.size()) > 0) { appProperty.setValue(dataAccessor.getUser(userIdList.get(((userIdList.size()) - 1))).getSignUpDate()); dataAccessor.createOrUpdateAppProperty(appProperty); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6446/buggy-version/src.main.java.com.pratilipi.api.impl.user.UserProcessApi.java", "BodyUseAPI": ["com.pratilipi.data.type.AppProperty.setValue(dataAccessor.getUser(userIdList.get(((userIdList.size()) - 1))).getSignUpDate())", "com.pratilipi.data.DataAccessor.getUser(java.lang.Long)", "java.util.List<java.lang.Long>.size()", "dataAccessor.getUser(userIdList.get(((userIdList.size()) - 1))).getSignUpDate()", "java.util.List<java.lang.Long>.get(int)"], "Fixed commit": "349def67507e4ad172000240f5b232d1cced8d4a", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-01-16T12:20:50Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((request.getName()) != null) && (request.getName().equals(\"undefined\"))) throw new com.pratilipi.common.exception.InvalidArgumentException(\"File name 'undefined' is not allowed.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6446/buggy-version/src.main.java.com.pratilipi.api.impl.pratilipi.PratilipiCoverApi.java", "BodyUseAPI": [], "Fixed commit": "349def67507e4ad172000240f5b232d1cced8d4a", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-01-16T12:20:50Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((request.getName()) != null) && (request.getName().equals(\"undefined\"))) throw new com.pratilipi.common.exception.InvalidArgumentException(\"File name 'undefined' is not allowed.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6446/buggy-version/src.main.java.com.pratilipi.api.impl.author.AuthorImageApi.java", "BodyUseAPI": [], "Fixed commit": "349def67507e4ad172000240f5b232d1cced8d4a", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-01-16T12:20:50Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.join(org.apache.commons.lang.ArrayUtils.subarray(splitName, 0, splitName.length), \"/\").equals(typeName))) { java.lang.String rejoinedMimeType = org.apache.commons.lang3.StringUtils.join(org.apache.commons.lang.ArrayUtils.subarray(splitName, 0, splitName.length), \"/\"); javax.swing.JOptionPane.showMessageDialog(null, org.openide.util.NbBundle.getMessage(org.sleuthkit.autopsy.modules.filetypeid.FileTypeIdGlobalSettingsPanel.class, \"AddFileTypePanel.nonStandardMIMEType.message\", rejoinedMimeType), org.openide.util.NbBundle.getMessage(org.sleuthkit.autopsy.modules.filetypeid.FileTypeIdGlobalSettingsPanel.class, \"AddFileTypePanel.nonStandardMIMEType.title\"), javax.swing.JOptionPane.WARNING_MESSAGE); mimeTypeTextField.setText(rejoinedMimeType); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7902/buggy-version/Core.src.org.sleuthkit.autopsy.modules.filetypeid.AddFileTypePanel.java", "BodyUseAPI": ["org.apache.commons.lang3.StringUtils.join(org.apache.commons.lang.ArrayUtils.subarray(splitName, 0, splitName.length),java.lang.String)", "org.apache.commons.lang.ArrayUtils.subarray(java.lang.String[],int,int)"], "Fixed commit": "6ec5f2415cd3f89b18a1125315bd13ad062a2d34", "Url": "https://api.github.com/repos/sleuthkit/autopsy", "Date": "2017-04-12T22:10:08Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cr.isEqual()) return mid; else lo = mid + 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7055/buggy-version/src.main.java.net.sf.jautl.collections.arrays.BinarySearcher.java", "BodyUseAPI": [], "Fixed commit": "a970de1dc092f8bde7fb910cf25ce16955df6a06", "Url": "https://api.github.com/repos/alexcoppo/jautl", "Date": "2014-10-04T15:08:56Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["database.dao.mysql.BrugerDaoImpl.findOne(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (b != null) { database.dto.Rettigheder[] rettigheder = rDao.findDynamic(database.dao.mysql.BrugerDaoImpl.GET_RETTIGHEDER, 0, (-1), new java.lang.Object[]{ b.getBrugerId() }); b.setRettigheder(rettigheder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3931/buggy-version/Xray.src.database.dao.mysql.BrugerDaoImpl.java", "BodyUseAPI": ["database.dto.Bruger.getBrugerId()", "database.dto.Bruger.setRettigheder(database.dto.Rettigheder[])", "database.dao.RettighederDao.findDynamic(java.lang.String,int,int,java.lang.Object[])"], "Fixed commit": "ad6d28324c6dfdc551931466fc3fe98226941349", "Url": "https://api.github.com/repos/Catpaw42/Area51_E2014", "Date": "2014-11-17T18:52:28Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cypherx.xauth.xAuthPlayer.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (player == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/102/buggy-version/src.main.java.com.cypherx.xauth.xAuthPlayer.java", "BodyUseAPI": [], "Fixed commit": "03e56528167c4d592006ae5d60d52febd1ba1550", "Url": "https://api.github.com/repos/CypherX/xAuth", "Date": "2012-04-24T15:10:01Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (arena.getArenaConfig().getBoolean(CFG.USES_DEATHMESSAGES)) { if (killerTeam.equals(respawnTeam)) { arena.broadcast(net.slipcor.pvparena.core.Language.parse(arena, MSG.FIGHT_KILLED_BY, ((respawnTeam.colorizePlayer(respawnPlayer)) + (org.bukkit.ChatColor.YELLOW)), arena.parseDeathCause(respawnPlayer, event.getEntity().getLastDamageCause().getCause(), event.getEntity().getKiller()))); }else { arena.broadcast(net.slipcor.pvparena.core.Language.parse(arena, MSG.FIGHT_KILLED_BY_REMAINING_TEAM_FRAGS, ((respawnTeam.colorizePlayer(respawnPlayer)) + (org.bukkit.ChatColor.YELLOW)), arena.parseDeathCause(respawnPlayer, event.getEntity().getLastDamageCause().getCause(), event.getEntity().getKiller()), java.lang.String.valueOf(getLifeMap().get(killerTeam.getName())), killerTeam.getColoredName())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3002/buggy-version/src.net.slipcor.pvparena.goals.GoalTeamDeathMatch.java", "BodyUseAPI": ["net.slipcor.pvparena.core.Language.parse(net.slipcor.pvparena.goals.GoalTeamDeathMatch,MSG.FIGHT_KILLED_BY_REMAINING_TEAM_FRAGS,((respawnTeam.colorizePlayer(respawnPlayer)) + (org.bukkit.ChatColor.YELLOW)),arena.parseDeathCause(respawnPlayer, event.getEntity().getLastDamageCause().getCause(), event.getEntity().getKiller()),java.lang.String,killerTeam.getColoredName())", "net.slipcor.pvparena.goals.GoalTeamDeathMatch.broadcast(net.slipcor.pvparena.core.Language.parse(arena, MSG.FIGHT_KILLED_BY, ((respawnTeam.colorizePlayer(respawnPlayer)) + (org.bukkit.ChatColor.YELLOW)), arena.parseDeathCause(respawnPlayer, event.getEntity().getLastDamageCause().getCause(), event.getEntity().getKiller())))", "net.slipcor.pvparena.core.Language.parse(net.slipcor.pvparena.goals.GoalTeamDeathMatch,MSG.FIGHT_KILLED_BY,((respawnTeam.colorizePlayer(respawnPlayer)) + (org.bukkit.ChatColor.YELLOW)),arena.parseDeathCause(respawnPlayer, event.getEntity().getLastDamageCause().getCause(), event.getEntity().getKiller()))", "net.slipcor.pvparena.goals.GoalTeamDeathMatch.parseDeathCause(org.bukkit.entity.Player,event.getEntity().getLastDamageCause().getCause(),event.getEntity().getKiller())", "net.slipcor.pvparena.goals.GoalTeamDeathMatch.parseDeathCause(org.bukkit.entity.Player,event.getEntity().getLastDamageCause().getCause(),event.getEntity().getKiller())", "net.slipcor.pvparena.goals.GoalTeamDeathMatch.broadcast(net.slipcor.pvparena.core.Language.parse(arena, MSG.FIGHT_KILLED_BY_REMAINING_TEAM_FRAGS, ((respawnTeam.colorizePlayer(respawnPlayer)) + (org.bukkit.ChatColor.YELLOW)), arena.parseDeathCause(respawnPlayer, event.getEntity().getLastDamageCause().getCause(), event.getEntity().getKiller()), java.lang.String.valueOf(getLifeMap().get(killerTeam.getName())), killerTeam.getColoredName()))"], "Fixed commit": "2a565405acedbcc64ad0e6b91153b167529a4d40", "Url": "https://api.github.com/repos/slipcor/pvparena", "Date": "2014-03-07T22:09:21Z"},
{"Line": "=>542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isShowing) > 0) { (isShowing)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/296/buggy-version/CardSlidePanel.library.src.main.java.com.stone.card.library.CardSlidePanel.java", "BodyUseAPI": [], "Fixed commit": "553139ab0cb3204bb42d2035612a3f2a7384343c", "Url": "https://api.github.com/repos/xmuSistone/CardSlidePanel", "Date": "2017-07-11T02:57:23Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newState.getDodument().getImportDate()) == 0) { org.joda.time.DateTime today = new org.joda.time.DateTime(); newState.getDodument().setImportDate(today.getMillis()); this._importDateEditText.setText(_dateFormatFormatter.print(today)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4952/buggy-version/app.src.main.java.io.centos.crystalmar.ui.crudfragments.ItemFragment.java", "BodyUseAPI": ["newState.getDodument().setImportDate(today.getMillis())", "io.centos.crystalmar.ui.crudfragments.FragmentState<io.centos.crystalmar.model.ItemDocument>.getDodument()"], "Fixed commit": "2a3cdda052cb7df01b01f93afbd008b13d9424fc", "Url": "https://api.github.com/repos/crystal-mar/CrystalMarApp", "Date": "2016-06-11T16:35:30Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["GameOfLife.MVC.model.Repository.PlayerRepository.findOneByName(request.getUserPrincipal().getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((player.getAvatar()) != null) player.setAvatar((\"/img/\" + (player.getAvatar()))); else player.setAvatar(\"/img/warten.gif\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6029/buggy-version/src.main.java.GameOfLife.MVC.controller.Configuration.Index.java", "BodyUseAPI": ["GameOfLife.MVC.model.Entity.Player.setAvatar((\"/img/\" + (player.getAvatar())))", "GameOfLife.MVC.model.Entity.Player.setAvatar(java.lang.String)", "GameOfLife.MVC.model.Entity.Player.getAvatar()"], "Fixed commit": "b0d4caecc8f12d585a4c4a195ae75eea0cbe3978", "Url": "https://api.github.com/repos/chiliconcarne/gol", "Date": "2016-08-26T07:00:26Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Document.getElementsByClass(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((eles != null) && ((eles.size()) > 0)) { for (org.jsoup.nodes.Element ele : eles) { postText.append(ele.text()).append(\" \"); } body = postText.toString(); }else { body = parsedDocument.text(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3369/buggy-version/src.edu.nyu.cs.cs2580.ScoredDocument.java", "BodyUseAPI": [], "Fixed commit": "6d5e8cf7ee93f16f1b1f17febc52d5404b21f1ee", "Url": "https://api.github.com/repos/FeiGuan/search_engine", "Date": "2014-12-15T04:39:33Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((routing.MainFrame.router_vector.size()) <= 1) { javax.swing.JOptionPane.showMessageDialog(routing.MainFrame.frame, \"Please add at least two routers first!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1575/buggy-version/routing.src.routing.MainFrame.java", "BodyUseAPI": [], "Fixed commit": "4c0817c3259bda0746ca7cad0e87063137a3cf59", "Url": "https://api.github.com/repos/jeremysong/Routing", "Date": "2012-04-26T12:24:25Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(<nulltype>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((name.length()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1575/buggy-version/routing.src.routing.MainFrame.java", "BodyUseAPI": [], "Fixed commit": "4c0817c3259bda0746ca7cad0e87063137a3cf59", "Url": "https://api.github.com/repos/jeremysong/Routing", "Date": "2012-04-26T12:24:25Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tryDecorateInCallingAcitivty(xmofElementName, type)) { activeDecorator.setActivityFinished(true); }else { activeDecorator.setActivityFinished(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8631/buggy-version/org.modelexecution.xmof.animation.src.org.modelexecution.xmof.animation.controller.AnimationController.java", "BodyUseAPI": [], "Fixed commit": "149332720ee6d02378c7ca9ba0375a86f37abf24", "Url": "https://api.github.com/repos/tortmayr/ame_lab", "Date": "2016-05-20T05:43:55Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.nbt.NBTTagList.getCompoundTagAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (nbt.hasKey(\"ID\")) { chbachman.api.IUpgrade upgrade = UpgradeList.list.get(nbt.getInteger(\"ID\")); return upgrade; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2397/buggy-version/src.main.java.chbachman.armour.util.NBTUpgradeList.java", "BodyUseAPI": ["UpgradeList.list.get(nbt.getInteger(\"ID\"))", "net.minecraft.nbt.NBTTagCompound.getInteger(java.lang.String)"], "Fixed commit": "fb3e6548cb48aa18fcb37a7d5a752ee8ccab88e5", "Url": "https://api.github.com/repos/chbachman/ModularArmour", "Date": "2014-09-04T01:10:50Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (indexingStartColumnIndex == (partitionColumns.size())) { paths.add(fs.getFileStatus(indexingPath).getPath().toString()); }else { org.apache.hadoop.fs.Path[] pathToFilter = statusToPath(fs.listStatus(indexingPath, new io.druid.indexer.path.PartitionPathSpec.PartitionPathFilter(partitionColumns.get(indexingStartColumnIndex)))); for (int idx = indexingStartColumnIndex + 1; idx < (partitionColumns.size()); idx++) { pathToFilter = statusToPath(fs.listStatus(pathToFilter, new io.druid.indexer.path.PartitionPathSpec.PartitionPathFilter(partitionColumns.get(idx)))); } for (org.apache.hadoop.fs.Path path : pathToFilter) { paths.add(path.toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6967/buggy-version/indexing-hadoop.src.main.java.io.druid.indexer.path.PartitionPathSpec.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)", "org.apache.hadoop.fs.FileSystem.listStatus(org.apache.hadoop.fs.Path[],io.druid.indexer.path.PartitionPathSpec.PartitionPathFilter)", "org.apache.hadoop.fs.FileSystem.listStatus(org.apache.hadoop.fs.Path,io.druid.indexer.path.PartitionPathSpec.PartitionPathFilter)", "io.druid.indexer.path.PartitionPathSpec.statusToPath(fs.listStatus(pathToFilter, new io.druid.indexer.path.PartitionPathSpec.PartitionPathFilter(partitionColumns.get(idx))))", "java.util.List<java.lang.String>.size()", "io.druid.indexer.path.PartitionPathSpec.statusToPath(fs.listStatus(indexingPath, new io.druid.indexer.path.PartitionPathSpec.PartitionPathFilter(partitionColumns.get(indexingStartColumnIndex))))", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "b3825c007261369d7225976a69594f953fb6acd7", "Url": "https://api.github.com/repos/sirpkt/druid", "Date": "2016-05-18T03:55:28Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rs.next()) == false) { endOfRecordset = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/752/buggy-version/src.com.vco.ExtractDBStep.java", "BodyUseAPI": [], "Fixed commit": "9bd1e565b6e6090355442569541a9c49ed139b58", "Url": "https://api.github.com/repos/VCO-Systems/vBatch", "Date": "2014-03-11T03:53:12Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((valueProperty().get()) != null) { return valueProperty().get().getValue(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1998/buggy-version/core.src.main.java.com.dooapp.fxform.model.Element.java", "BodyUseAPI": [], "Fixed commit": "06e5aacd252154d44d5c804abc374ffdf6bc9d46", "Url": "https://api.github.com/repos/dooApp/FXForm2", "Date": "2011-11-09T17:45:24Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.delete()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!delete) { throw new de.ismll.storage.StorageException(((\"Storage directory \" + (targetDirectory)) + \" already exists but could not be deleted (for an unknown reason; delete() returned false; This was tried due to the automatic override switch).\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7316/buggy-version/src.java.de.ismll.storage.FileStorageTarget.java", "BodyUseAPI": [], "Fixed commit": "67db6a9c78320b24ef2a7075ffb5029f623c63ab", "Url": "https://api.github.com/repos/busche/Matrix", "Date": "2014-03-27T16:52:49Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.mkdirs()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!mkdirs) { throw new de.ismll.storage.StorageException(((\"Storage directory \" + (targetDirectory)) + \" could not be re-created (for an unknown reason; mkdirs() returned false).\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7316/buggy-version/src.java.de.ismll.storage.FileStorageTarget.java", "BodyUseAPI": [], "Fixed commit": "67db6a9c78320b24ef2a7075ffb5029f623c63ab", "Url": "https://api.github.com/repos/busche/Matrix", "Date": "2014-03-27T16:52:49Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (obj == null) { if ((arr[i]) == null) return i; }else { if (obj.equals(arr[i])) return i; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6400/buggy-version/DynamicArray.Array.java", "BodyUseAPI": ["java.lang.Object.equals(T)"], "Fixed commit": "0824ca0d901124248d012a6e6f107f84a67a671a", "Url": "https://api.github.com/repos/williamfiset/data-structures", "Date": "2017-06-21T14:48:13Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (patient == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/360/buggy-version/similarity-genotype-view.src.main.java.org.phenotips.data.similarity.genotype.DefaultPatientGenotypeManager.java", "BodyUseAPI": [], "Fixed commit": "9493bade790275fb69fb7503e4ed1d0d3f14ebb6", "Url": "https://api.github.com/repos/phenotips/patient-network", "Date": "2017-12-07T16:56:37Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.genotype) != null) { json.put(\"genesStatus\", this.genotype.getGenesStatus()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/360/buggy-version/matching-notification-api.src.main.java.org.phenotips.matchingnotification.match.internal.DefaultPatientInMatch.java", "BodyUseAPI": [], "Fixed commit": "9493bade790275fb69fb7503e4ed1d0d3f14ebb6", "Url": "https://api.github.com/repos/phenotips/patient-network", "Date": "2017-12-07T16:56:37Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.view.MotionEventCompat.getActionMasked(android.view.MotionEvent)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (action == (android.view.MotionEvent.ACTION_UP)) { if (controller.isVisible()) { controller.hide(); }else { maybeShowController(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2103/buggy-version/app.src.main.java.com.yalin.freevideo.ui.widget.player.ExoPlayerView.java", "BodyUseAPI": [], "Fixed commit": "ee5aba3057c89aafa3f92b77e6edbcb2ec593716", "Url": "https://api.github.com/repos/jinkg/FreeVideo", "Date": "2016-12-12T13:16:45Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (extension.isIncludeTests()) { classpath = classpath.plus(configurations.getByName(\"testRuntimeClasspath\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5043/buggy-version/src.main.groovy.me.champeau.gradle.JMHTask.java", "BodyUseAPI": [], "Fixed commit": "22fd79116f7da8f5803c7fed505b89dc596abb9c", "Url": "https://api.github.com/repos/melix/jmh-gradle-plugin", "Date": "2017-06-23T17:49:35Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jwtc.android.chess.main.getPrefs()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (prefs.getBoolean(\"speechNotification\", false)) { if ((_speech) == null) { _speech = new android.speech.tts.TextToSpeech(this, this); } }else { _speech = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2632/buggy-version/app.src.main.java.jwtc.android.chess.main.java", "BodyUseAPI": [], "Fixed commit": "3d57df675227fb765b050cc545cb8c2577d35abd", "Url": "https://api.github.com/repos/TimmyT123/android-chess", "Date": "2015-12-30T00:16:45Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sourceforge.fenixedu.presentationTier.Action.student.SeniorInformationAction.getFromRequest(javax.servlet.http.HttpServletRequest,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (registrationOIDObj != null) { registrationOID = registrationOIDObj.toString(); }else { registrationOID = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4726/buggy-version/src.main.java.net.sourceforge.fenixedu.presentationTier.Action.student.SeniorInformationAction.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "c568b2e4286781beb8a773163d3141740cc31c28", "Url": "https://api.github.com/repos/sergiofbsilva/fenix", "Date": "2013-10-08T13:44:26Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((db) != null) { registerFirebaseListener(getCurrentChannel()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1850/buggy-version/app.src.main.java.ca.coffeeboys.heartbeat.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "0df233d89bdfa4a608d219cbe330e88b845bcc7e", "Url": "https://api.github.com/repos/Coffeeboys/Heartbeat", "Date": "2016-02-13T16:48:30Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getClass()) != (o.getClass())) { java.lang.Class<?> thisClass = getClass(); java.lang.Class<?> otherClass = o.getClass(); if ((!((otherClass.equals(co.cask.cdap.proto.id.ProgramId.class)) && (otherClass.isAssignableFrom(thisClass)))) && (!((thisClass.equals(co.cask.cdap.proto.id.ProgramId.class)) && (thisClass.isAssignableFrom(otherClass))))) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8337/buggy-version/cdap-proto.src.main.java.co.cask.cdap.proto.id.EntityId.java", "BodyUseAPI": ["java.lang.Object.getClass()"], "Fixed commit": "838b6ac5392025ee82bee5755a30323f596077cd", "Url": "https://api.github.com/repos/caskdata/cdap", "Date": "2016-09-14T06:43:48Z"},
{"Line": "=>725", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (settings.includeNodes) { dag.getFingerPrint().startTimer(\"CreatePLUSObject\"); org.mitre.provenance.plusobject.PLUSObject o = org.mitre.provenance.db.neo4j.Neo4JPLUSObjectFactory.newObject(n).getVersionSuitableFor(user); dag.getFingerPrint().stopTimer(\"CreatePLUSObject\"); if (o != null) { dag.addNode(o); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5584/buggy-version/src.main.java.org.mitre.provenance.db.neo4j.Neo4JPLUSObjectFactory.java", "BodyUseAPI": [], "Fixed commit": "01c79ab7d929127ab2126e172dfcb56eb22180c2", "Url": "https://api.github.com/repos/plus-provenance/plus", "Date": "2014-03-24T17:25:04Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.fubaisum.imageselector.lib.ImageSelector.instance) != null) { com.fubaisum.imageselector.lib.ImageSelector.instance.hook = null; com.fubaisum.imageselector.lib.ImageSelector.instance = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4287/buggy-version/image-selector.src.main.java.com.fubaisum.imageselector.lib.ImageSelector.java", "BodyUseAPI": [], "Fixed commit": "39222ef1c0fc2525a5a4b166ea9b550280f7dba1", "Url": "https://api.github.com/repos/jiajieshen/ImageSelector", "Date": "2017-03-08T03:36:59Z"},
{"Line": "=>1398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(ProjectPersistenceUtilities.LIB_DIR.exists())) { ProjectPersistenceUtilities.LIB_DIR.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2230/buggy-version/CircuitDesignEditor.src.uk.ac.gla.student._2074245k.cde.gui.MainFrame.java", "BodyUseAPI": [], "Fixed commit": "f48b0863fbb0e345529b4a0f3bcf3cb5b8090d86", "Url": "https://api.github.com/repos/AlexKoukoulas2074245K/Circuit-Design-Editor", "Date": "2017-01-23T17:40:05Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (symLinkParent == null) { throw new java.io.IOException(\"Could not resolve real path of symbolic link\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8662/buggy-version/ds3-utils.src.main.java.com.spectralogic.ds3client.utils.FileUtils.java", "BodyUseAPI": [], "Fixed commit": "35671b41be1509682be09c44f77ee282b82e6e0e", "Url": "https://api.github.com/repos/SpectraLogic/ds3_java_sdk", "Date": "2017-01-21T04:10:05Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isHighlighted) app.playerAttack(grid.getMoveDirection(oldSpace, this));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6887/buggy-version/src.edu.cpp.cs.cs141.final_project.User_Interface.GUI.Models.UIGridSpace.java", "BodyUseAPI": [], "Fixed commit": "ae020b4b405ebb5db7ef9dbb8873e3007f2691e1", "Url": "https://api.github.com/repos/fanfare00/CS141_FinalProject", "Date": "2016-12-01T09:11:23Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.andork.swing.jump.JumpBar.getScrollBarTrackBounds()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (track == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4083/buggy-version/andork-ui.src.org.andork.swing.jump.JumpBar.java", "BodyUseAPI": [], "Fixed commit": "b26c6bde1cea4b6ea4455b75dd4f1635d131371c", "Url": "https://api.github.com/repos/jedwards1211/breakout", "Date": "2015-12-31T19:30:51Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cards.get(i).getCardNumber().equals(\"a\")) { if ((((mapCounting.get(1).contains(2)) && (mapCounting.get(1).contains(3))) && (mapCounting.get(1).contains(4))) && (mapCounting.get(1).contains(5))) { result.setTypeHand(com.example.poker_randomizer.HandResulter.STRAIGHT); result.setValue(Card.valuesCards.get(cards.get(i).getCardNumber())); result.setCardValuesFromCards(getPlayerHand(player_num)); return result; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6349/buggy-version/src.com.example.poker_randomizer.HandResulter.java", "BodyUseAPI": ["com.example.poker_randomizer.ResultHand.setValue(Card.valuesCards.get(cards.get(i).getCardNumber()))", "Card.valuesCards.get(cards.get(i).getCardNumber())", "java.util.List<com.example.poker_randomizer.Card>.get(int)", "cards.get(i).getCardNumber()"], "Fixed commit": "b045757803e90d3a713008611540e9cf031d398c", "Url": "https://api.github.com/repos/martika810/poker_randomizer", "Date": "2014-10-02T07:49:58Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((params) == null) { paramNum = 0; }else { paramNum = params.length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/259/buggy-version/src.main.java.com.jModule.def.Command.java", "BodyUseAPI": [], "Fixed commit": "dac2adf4f7cbd03eccd5a5a0a8178feb3ccc09ec", "Url": "https://api.github.com/repos/pkelaita/JModule", "Date": "2017-09-01T06:08:28Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (paramNum == (args.length)) { logic.runCommand(args); }else { java.lang.System.out.println(((getUsage()) + \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/259/buggy-version/src.main.java.com.jModule.def.Command.java", "BodyUseAPI": ["com.jModule.def.CommandLogic.runCommand(java.lang.String[])"], "Fixed commit": "dac2adf4f7cbd03eccd5a5a0a8178feb3ccc09ec", "Url": "https://api.github.com/repos/pkelaita/JModule", "Date": "2017-09-01T06:08:28Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mData) != null) && ((mData.size()) > 0)) { ((android.support.v7.widget.AppCompatImageView) (mLinearLayout.getChildAt(i))).setImageDrawable((i == ((mCurrentIndex) % (mData.size())) ? mIndicatorGainDrawable : mIndicatorMissDrawable)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7757/buggy-version/Library.src.main.java.com.sunzn.banner.library.Banner.java", "BodyUseAPI": ["((android.support.v7.widget.AppCompatImageView) (mLinearLayout.getChildAt(i))).setImageDrawable((i == ((mCurrentIndex) % (mData.size())) ? mIndicatorGainDrawable : mIndicatorMissDrawable))", "java.util.List<java.lang.Object>.size()"], "Fixed commit": "dcaa1e7357cb9ba6a4c4055fb1530607b497f604", "Url": "https://api.github.com/repos/ShortStickBoy/Banner", "Date": "2017-07-26T06:20:43Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((head) < 0) { head = (length()) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5676/buggy-version/11BFS.MyDeque.java", "BodyUseAPI": [], "Fixed commit": "3f8f94bfecdf5b412d4877cf5204e98f3f2d5280", "Url": "https://api.github.com/repos/NinoDickersin/APCSHWTerm2", "Date": "2015-04-15T17:06:54Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((head) >= (length())) { head = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5676/buggy-version/11BFS.MyDeque.java", "BodyUseAPI": [], "Fixed commit": "3f8f94bfecdf5b412d4877cf5204e98f3f2d5280", "Url": "https://api.github.com/repos/NinoDickersin/APCSHWTerm2", "Date": "2015-04-15T17:06:54Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.System.getProperty(\"os.name\").startsWith(\"Windows\")) { this.setFont(new java.awt.Font(\"Segoe UI Semibold\", java.awt.Font.PLAIN, 12)); }else { this.setFont(new java.awt.Font(\"Segoe UI Semibold\", java.awt.Font.PLAIN, 10)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4381/buggy-version/src.main.ui.CustomCellRenderer.java", "BodyUseAPI": [], "Fixed commit": "ee6f345854f01503414337d673fa81a884658d33", "Url": "https://api.github.com/repos/cs2103aug2015-t09-1j/main", "Date": "2015-11-03T06:00:58Z"},
{"Line": "=>656", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (c3 == 'm') { if (c4 == 'p') { if ((string.length()) > (i + 4)) { char c5 = string.charAt((i + 4)); if (c5 == ';') { skip = true; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3317/buggy-version/grobid-core.src.main.java.org.grobid.core.utilities.TextUtilities.java", "BodyUseAPI": [], "Fixed commit": "da8843f2757f1f52e1b0c8d8eba82c130558aa28", "Url": "https://api.github.com/repos/k8si/grobid", "Date": "2015-07-06T15:57:39Z"},
{"Line": "=>666", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (c2 == 'q') { if (c3 == 'u') { if (c4 == 'o') { if ((string.length()) > (i + 6)) { char c5 = string.charAt((i + 4)); char c6 = string.charAt((i + 5)); char c7 = string.charAt((i + 6)); if (c5 == 't') { if (c6 == 'e') { if (c7 == ';') { skip = true; } } } } } } }else if ((c2 == 'l') || (c2 == 'g')) { if (c3 == 't') { if (c4 == ';') { skip = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3317/buggy-version/grobid-core.src.main.java.org.grobid.core.utilities.TextUtilities.java", "BodyUseAPI": [], "Fixed commit": "da8843f2757f1f52e1b0c8d8eba82c130558aa28", "Url": "https://api.github.com/repos/k8si/grobid", "Date": "2015-07-06T15:57:39Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gcNow.before(gcExam)) news.add((((((((as.getAppeal().getCourse().getName().toUpperCase()) + \": l'esame e' il \") + (it.unical.uniexam.DateFormat.getDayMonthYear(as.getAppeal().getExamDate()))) + \" ore \") + (it.unical.uniexam.DateFormat.getHourString(as.getAppeal().getExamDate()))) + \":\") + (it.unical.uniexam.DateFormat.getMinuteString(as.getAppeal().getExamDate()))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/526/buggy-version/Uniexam.src.main.java.it.unical.uniexam.mvc.controll.student.StudentController.java", "BodyUseAPI": [], "Fixed commit": "5eee2042249c3da436b4da446641c3007c36b269", "Url": "https://api.github.com/repos/mok89/UEM", "Date": "2014-02-01T18:49:16Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Material.getMaterial(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (mat != null) return mat.toString().replace('_', ' ').toLowerCase();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/350/buggy-version/src.de.diddiz.util.BukkitUtils.java", "BodyUseAPI": ["org.bukkit.Material.toString()", "mat.toString().replace('_', ' ').toLowerCase()", "mat.toString().replace(char,char)"], "Fixed commit": "a5e532f7f622fba516202a70dcb6702a931ec82d", "Url": "https://api.github.com/repos/taufiqkh/LogBlock", "Date": "2011-06-18T21:50:05Z"},
{"Line": "=>1023", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (block.getRelative(BlockFace.NORTH).getType().equals(Material.CHEST)) { net.sacredlabyrinth.Phaed.PreciousStones.vectors.Field field3 = plugin.getForceFieldManager().getConflictSourceField(block.getRelative(BlockFace.NORTH).getLocation(), player.getName(), FieldFlag.ALL); if (field3 != null) { if ((field == null) || (field != field3)) { conflicted = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8211/buggy-version/src.main.java.net.sacredlabyrinth.Phaed.PreciousStones.listeners.PSBlockListener.java", "BodyUseAPI": ["plugin.getForceFieldManager().getConflictSourceField(block.getRelative(BlockFace.NORTH).getLocation(),player.getName(),FieldFlag.ALL)", "org.bukkit.block.Block.getRelative(BlockFace.NORTH)", "block.getRelative(BlockFace.NORTH).getLocation()"], "Fixed commit": "161d05c0a4797bcfbd54d38d6358654417d3c056", "Url": "https://api.github.com/repos/SacredCoding/PreciousStones", "Date": "2013-01-06T00:18:02Z"},
{"Line": "=>1010", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (block.getRelative(BlockFace.WEST).getType().equals(Material.CHEST)) { net.sacredlabyrinth.Phaed.PreciousStones.vectors.Field field2 = plugin.getForceFieldManager().getConflictSourceField(block.getRelative(BlockFace.WEST).getLocation(), player.getName(), FieldFlag.ALL); if (field2 != null) { if ((field == null) || (field != field2)) { conflicted = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8211/buggy-version/src.main.java.net.sacredlabyrinth.Phaed.PreciousStones.listeners.PSBlockListener.java", "BodyUseAPI": ["plugin.getForceFieldManager().getConflictSourceField(block.getRelative(BlockFace.WEST).getLocation(),player.getName(),FieldFlag.ALL)", "block.getRelative(BlockFace.WEST).getLocation()", "org.bukkit.block.Block.getRelative(BlockFace.WEST)"], "Fixed commit": "161d05c0a4797bcfbd54d38d6358654417d3c056", "Url": "https://api.github.com/repos/SacredCoding/PreciousStones", "Date": "2013-01-06T00:18:02Z"},
{"Line": "=>997", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (block.getRelative(BlockFace.EAST).getType().equals(Material.CHEST)) { net.sacredlabyrinth.Phaed.PreciousStones.vectors.Field field1 = plugin.getForceFieldManager().getConflictSourceField(block.getRelative(BlockFace.EAST).getLocation(), player.getName(), FieldFlag.ALL); if (field1 != null) { if ((field == null) || (field != field1)) { conflicted = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8211/buggy-version/src.main.java.net.sacredlabyrinth.Phaed.PreciousStones.listeners.PSBlockListener.java", "BodyUseAPI": ["plugin.getForceFieldManager().getConflictSourceField(block.getRelative(BlockFace.EAST).getLocation(),player.getName(),FieldFlag.ALL)", "org.bukkit.block.Block.getRelative(BlockFace.EAST)", "block.getRelative(BlockFace.EAST).getLocation()"], "Fixed commit": "161d05c0a4797bcfbd54d38d6358654417d3c056", "Url": "https://api.github.com/repos/SacredCoding/PreciousStones", "Date": "2013-01-06T00:18:02Z"},
{"Line": "=>1036", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (block.getRelative(BlockFace.SOUTH).getType().equals(Material.CHEST)) { net.sacredlabyrinth.Phaed.PreciousStones.vectors.Field field4 = plugin.getForceFieldManager().getConflictSourceField(block.getRelative(BlockFace.SOUTH).getLocation(), player.getName(), FieldFlag.ALL); if (field4 != null) { if ((field == null) || (field != field4)) { conflicted = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8211/buggy-version/src.main.java.net.sacredlabyrinth.Phaed.PreciousStones.listeners.PSBlockListener.java", "BodyUseAPI": ["block.getRelative(BlockFace.SOUTH).getLocation()", "plugin.getForceFieldManager().getConflictSourceField(block.getRelative(BlockFace.SOUTH).getLocation(),player.getName(),FieldFlag.ALL)", "org.bukkit.block.Block.getRelative(BlockFace.SOUTH)"], "Fixed commit": "161d05c0a4797bcfbd54d38d6358654417d3c056", "Url": "https://api.github.com/repos/SacredCoding/PreciousStones", "Date": "2013-01-06T00:18:02Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(getDAO().isUniqueNumber(gwtSale))) { throw new org.iabako.shared.exception.IabakoUniqueConstraintException(messages.getLabel(\"validation_sale_unique_constraint_error_title\"), messages.getLabel(\"validation_sale_unique_constraint_error_text\", gwtSale.getNumber()), true, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8250/buggy-version/src.main.java.org.iabako.server.serviceimpl.business.SaleServiceImpl.java", "BodyUseAPI": ["org.iabako.server.serviceimpl.business.SaleServiceImpl.getLabel(java.lang.String,gwtSale.getNumber())", "org.iabako.server.serviceimpl.business.Sale.getNumber()"], "Fixed commit": "ae2105a7604e06a3d950d061bbe63976faaf8bf5", "Url": "https://api.github.com/repos/iabakoproject/iabako", "Date": "2017-10-15T07:35:06Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((gwtSale.getInstallmentsDefinition()) != null) && ((gwtSale.getInstallmentsDefinition().getInstallmentsFrequency()) == (InstallmentsFrequency.custom))) { gwtSale.getInstallmentsDefinition().setInstallments(installments); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8250/buggy-version/src.main.java.org.iabako.server.serviceimpl.business.SaleServiceImpl.java", "BodyUseAPI": ["org.iabako.server.serviceimpl.business.Sale.getInstallmentsDefinition()", "gwtSale.getInstallmentsDefinition().setInstallments(java.util.List<org.iabako.server.serviceimpl.business.Installment>)"], "Fixed commit": "ae2105a7604e06a3d950d061bbe63976faaf8bf5", "Url": "https://api.github.com/repos/iabakoproject/iabako", "Date": "2017-10-15T07:35:06Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((hasPunctuation(text)) && (!(punctuationMark(text).equals(\".\")))) { java.lang.String[] words = text.split(punctuationMark(text)); for (int i = 0; i < (words.length); i++) { words[i] = scrambleWord(words[i]); } return words; }else if ((hasPunctuation(text)) && (punctuationMark(text).equals(\".\"))) { java.lang.String[] words = new java.lang.String[]{ text }; words[0] = scrambleWord(words[0]); return words; }else { java.lang.String[] words = new java.lang.String[]{ text }; words[0] = scrambleWord(words[0]); return words; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1502/buggy-version/src.GibGenerator.java", "BodyUseAPI": ["src.GibGenerator.punctuationMark(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.split(java.lang.String)", "src.GibGenerator.punctuationMark(java.lang.String)", "src.GibGenerator.hasPunctuation(java.lang.String)"], "Fixed commit": "fbd563dc06f50e39c787c5300ffc29a70556a2cf", "Url": "https://api.github.com/repos/nicholasdupuis/gibgen", "Date": "2014-04-04T00:42:43Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((crossP) != null) && ((crossP.getParent()) != null)) { crossP.getParent().remove(crossP); crossP = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1680/buggy-version/modules.core.src.main.java.com.panayotis.jubler.subs.JSubEditor.java", "BodyUseAPI": ["java.awt.Container.remove(javax.swing.JPanel)", "javax.swing.JPanel.getParent()"], "Fixed commit": "577b5845e495c29aa46bc5452cc12949e3ea8787", "Url": "https://api.github.com/repos/teras/Jubler", "Date": "2017-10-27T08:26:56Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (component instanceof org.reactome.cytoscape.service.ReactomeSourceView.InstanceDialog) instanceDialog = new org.reactome.cytoscape.service.ReactomeSourceView.InstanceDialog(((org.reactome.cytoscape.service.ReactomeSourceView.InstanceDialog) (component))); else { java.awt.Window window = ((java.awt.Window) (javax.swing.SwingUtilities.getAncestorOfClass(java.awt.Window.class, component))); instanceDialog = new org.reactome.cytoscape.service.ReactomeSourceView.InstanceDialog(window); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8767/buggy-version/src.main.java.org.reactome.cytoscape.service.ReactomeSourceView.java", "BodyUseAPI": ["javax.swing.SwingUtilities.getAncestorOfClass(java.lang.Class,java.awt.Component)"], "Fixed commit": "7e873cc3dea0d4e786451036b57bf25efeac9db2", "Url": "https://api.github.com/repos/reactome-fi/CytoscapePlugIn", "Date": "2017-07-12T00:36:25Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((target_count == 0) && ((decoy_count > 0) || (fuse_count > 0))) { fdr = 1; }else if (((target_count == 0) && (decoy_count == 0)) && (fuse_count == 0)) { fdr = 0; }else if (fuse_count < decoy_count) { fdr = ((float) (decoy_count)) / ((float) (target_count)); }else { fdr = ((float) (fuse_count - decoy_count)) / ((float) (target_count)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1809/buggy-version/src.main.java.proteomics.Validation.CalFDR.java", "BodyUseAPI": [], "Fixed commit": "6bf83c1283e5c13d3f2982f8d0e8936cf567d619", "Url": "https://api.github.com/repos/fcyu/ECL", "Date": "2016-11-16T02:15:29Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!repeatedFailure) { android.app.DialogFragment dialogFragment = org.ovirt.mobile.movirt.ui.dialogs.ErrorDialogFragment.newInstance(this, authenticator, providerFacade, reason); dialogFragment.show(getFragmentManager(), \"error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1414/buggy-version/moVirt.src.main.java.org.ovirt.mobile.movirt.ui.AuthenticatorActivity.java", "BodyUseAPI": [], "Fixed commit": "a589d8c67fd5179f9626e41918e52e44d18a0697", "Url": "https://api.github.com/repos/suomiy/moVirt", "Date": "2016-03-11T20:10:26Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["allocine.ParseurAllocine.chercherPersonne(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (url != null) { java.lang.String apresLeEgal = url.split(\"=\")[1]; java.lang.String code = apresLeEgal.split(\"\\\\.\")[0]; return code; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5133/buggy-version/src.allocine.ParseurAllocine.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "9aa0423bd1a2d69353b2e77da13a46e11ded20c0", "Url": "https://api.github.com/repos/ujm-projet-l3info-2017/Groupe6", "Date": "2017-05-16T13:04:19Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["allocine.ParseurAllocine.recupererCodePersonne(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (code == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5133/buggy-version/src.allocine.ParseurAllocine.java", "BodyUseAPI": [], "Fixed commit": "9aa0423bd1a2d69353b2e77da13a46e11ded20c0", "Url": "https://api.github.com/repos/ujm-projet-l3info-2017/Groupe6", "Date": "2017-05-16T13:04:19Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.aha.actioncenter.utility.Utility.getInstance().isNetworkAvailable(this)) { args.putString(item.id, item.user); fragment = new org.aha.actioncenter.views.TwitterFeedListFragment(); fragment.setArguments(args); }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/9202/buggy-version/app.src.main.java.org.aha.actioncenter.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "38beb45a7c79bf4831e92dfbcef95382419d67fe", "Url": "https://api.github.com/repos/AmericanHospitalAssociation/Action-Center-Android", "Date": "2015-05-04T11:37:46Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((map.getUser()) != null) && ((map.getUser().getId()) != null)) { dbMap = accessControlMapDao.retrieveTeamMapByUserTeamAndRole(map.getUser().getId(), org.getId(), role.getId()); if (((dbMap != null) && (dbMap.isActive())) && (!(dbMap.getId().equals(mapId)))) { return \"That team / role combination already exists for this user.\"; } log.debug((((\"Assigned role \" + (role.getDisplayName())) + \" to user \") + (map.getUser().getName()))); }else if (((map.getGroup()) != null) && ((map.getGroup().getId()) != null)) { dbMap = accessControlMapDao.retrieveTeamMapByGroupTeamAndRole(map.getGroup().getId(), org.getId(), role.getId()); if ((dbMap != null) && (!(dbMap.getId().equals(mapId)))) { return \"That team / role combination already exists for this group.\"; } log.debug((((\"Assigned role \" + (role.getDisplayName())) + \" to group \") + (map.getGroup().getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/748/buggy-version/threadfix-main.src.main.java.com.denimgroup.threadfix.service.AccessControlMapServiceImpl.java", "BodyUseAPI": ["com.denimgroup.threadfix.service.AccessControlTeamMap.getUser()", "com.denimgroup.threadfix.service.AccessControlTeamMap.getGroup()", "map.getUser().getId()", "com.denimgroup.threadfix.service.AccessControlTeamMap.getGroup()", "com.denimgroup.threadfix.service.AccessControlTeamMap.getUser()", "com.denimgroup.threadfix.data.dao.AccessControlMapDao.retrieveTeamMapByGroupTeamAndRole(map.getGroup().getId(),org.getId(),role.getId())", "map.getGroup().getId()", "map.getGroup().getName()", "com.denimgroup.threadfix.service.AccessControlTeamMap.getGroup()", "com.denimgroup.threadfix.service.AccessControlTeamMap.getGroup()", "com.denimgroup.threadfix.logging.SanitizedLogger.debug((((\"Assigned role \" + (role.getDisplayName())) + \" to user \") + (map.getUser().getName())))", "map.getUser().getName()", "com.denimgroup.threadfix.logging.SanitizedLogger.debug((((\"Assigned role \" + (role.getDisplayName())) + \" to group \") + (map.getGroup().getName())))", "com.denimgroup.threadfix.data.dao.AccessControlMapDao.retrieveTeamMapByUserTeamAndRole(map.getUser().getId(),org.getId(),role.getId())", "map.getGroup().getId()"], "Fixed commit": "eb541c94999936bb3af727e800c19423586e42d9", "Url": "https://api.github.com/repos/denimgroup/threadfix", "Date": "2015-09-21T21:53:24Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((task) != null) { task.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6451/buggy-version/Habitica.src.com.habitrpg.android.habitica.TaskFormActivity.java", "BodyUseAPI": [], "Fixed commit": "7104e13897146ad356dbf57652907a39a19ec967", "Url": "https://api.github.com/repos/Data5tream/habitrpg-android", "Date": "2016-01-11T14:38:36Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (domainToolsRequest.getFormat().equals(DTConstants.OBJECT)) { org.codehaus.jackson.JsonNode jsonNode = com.domaintoolsapi.DTNodesService.getDomainToolsNode(sbResponse.toString()); errorMessage = jsonNode.get(\"error\").get(\"message\").getTextValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2251/buggy-version/src.main.java.com.domaintoolsapi.DTService.java", "BodyUseAPI": [], "Fixed commit": "87be501aa4b23d9d611085977e0ea790a406a318", "Url": "https://api.github.com/repos/DomainTools/api-java", "Date": "2012-07-17T08:40:47Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pos == 1) toFirstPage();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8272/buggy-version/src.org.ankhzet.ergo.ui.pages.reader.reader.Reader.java", "BodyUseAPI": [], "Fixed commit": "b45bdda95b0a7cf9dc028c14956524ff90596179", "Url": "https://api.github.com/repos/ankhzet/Ergo-java", "Date": "2015-08-03T02:17:29Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hazelcast.core.Hazelcast.getHazelcastInstanceByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (instance != null) { instance.shutdown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/811/buggy-version/podium-uaa.src.main.java.org.bbmri.podium.config.CacheConfiguration.java", "BodyUseAPI": ["com.hazelcast.core.HazelcastInstance.shutdown()"], "Fixed commit": "c194cb9fd015089a64e90b234fb80cccbbd49d39", "Url": "https://api.github.com/repos/thehyve/podium", "Date": "2017-02-22T09:47:42Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.properties.getAny()) != null) { return new org.opentosca.planbuilder.importer.context.impl.PropertiesImpl(this.properties.getAny()); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1891/buggy-version/org.opentosca.planbuilder.importer.src.org.opentosca.planbuilder.importer.context.impl.ServiceTemplatePropertiesImpl.java", "BodyUseAPI": ["org.oasis_open.docs.tosca.ns._2011._12.TBoundaryDefinitions.Properties.getAny()"], "Fixed commit": "d81d3b5aaa1cccf16488dfac1f3e4095c9cb598b", "Url": "https://api.github.com/repos/OpenTOSCA/container", "Date": "2014-12-04T13:51:49Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((customColumns) <= 0) customColumns = 9;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3661/buggy-version/src.Minesweeper.Menus.java", "BodyUseAPI": [], "Fixed commit": "bf01fc589b1625fe9aa8ca0d988a997b8dd31524", "Url": "https://api.github.com/repos/jose-acevedoflores/Minesweeper", "Date": "2011-11-21T18:44:14Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((customRows) <= 0) customRows = 9;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3661/buggy-version/src.Minesweeper.Menus.java", "BodyUseAPI": [], "Fixed commit": "bf01fc589b1625fe9aa8ca0d988a997b8dd31524", "Url": "https://api.github.com/repos/jose-acevedoflores/Minesweeper", "Date": "2011-11-21T18:44:14Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkGpsProviderIsEnable()) { forecastCreator.createForecastByCoordinates(); }else { showingView.askToEnableGpsProvider(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3561/buggy-version/app.src.main.java.com.example.korolkir.everywheatherdemo.presenter.EveryWeatherForecastPresenter.java", "BodyUseAPI": [], "Fixed commit": "078e0ad8c477b1ebd8fcfcf80edb825ab6c42905", "Url": "https://api.github.com/repos/korolkir/Everywheather", "Date": "2016-09-03T21:04:50Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((account_id) == 0) { android.widget.Toast.makeText(this.getActivity(), \"Please Select an Account First\", Toast.LENGTH_LONG).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1645/buggy-version/src.com.databases.example.Transactions.java", "BodyUseAPI": [], "Fixed commit": "157104fa803a7a73cb3e5846212bfc02c0e39b65", "Url": "https://api.github.com/repos/welshk91/FinanceApp", "Date": "2013-02-05T19:39:27Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.iplantc.de.admin.desktop.client.ontologies.events.SaveOntologyHierarchyEvent.getIris()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((iris.indexOf(iri)) == ((iris.size()) - 1)) { isLast = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5610/buggy-version/ui.de-lib.src.main.java.org.iplantc.de.admin.desktop.client.ontologies.presenter.OntologiesPresenterImpl.java", "BodyUseAPI": [], "Fixed commit": "4485a58d2205ba0b5d7f58ed805e0b1ce73947fc", "Url": "https://api.github.com/repos/ash3rz/DE", "Date": "2016-06-10T23:58:14Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clearHierarchies) { view.clearStore(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5610/buggy-version/ui.de-lib.src.main.java.org.iplantc.de.admin.desktop.client.ontologies.presenter.OntologiesPresenterImpl.java", "BodyUseAPI": [], "Fixed commit": "4485a58d2205ba0b5d7f58ed805e0b1ce73947fc", "Url": "https://api.github.com/repos/ash3rz/DE", "Date": "2016-06-10T23:58:14Z"},
{"Line": "=>1013", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shapePad) == null) { shapePad = mitiv.base.Shape.make(xyPad, xyPad, sizeZPad); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2257/buggy-version/src.plugins.mitiv.deconv.MitivBlindDeconvolution.java", "BodyUseAPI": [], "Fixed commit": "f0a1df07c22e8c8451f9602dd1246e6c6fec28a3", "Url": "https://api.github.com/repos/FerreolS/tipi4icy", "Date": "2016-06-16T13:11:32Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edu.gatech.cs2340.trydent.Audio.playing) soundEffect.play();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6290/buggy-version/src.main.java.edu.gatech.cs2340.trydent.Audio.java", "BodyUseAPI": [], "Fixed commit": "3e99a8f618b7f906923280dbaba8819ae154f929", "Url": "https://api.github.com/repos/AaronFriesen/Trydent", "Date": "2015-04-08T19:07:00Z"},
{"Line": "=>1027", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type.isAssignableFrom(java.util.HashSet.class)) { list = new java.util.HashSet<java.lang.String>(); }else if (type.isAssignableFrom(java.util.ArrayList.class)) { list = new java.util.ArrayList<java.lang.String>(); }else { try { list = ((java.util.Collection<java.lang.String>) (type.newInstance())); } catch (java.lang.Exception e) { throw new com.alibaba.fastjson.JSONException(e.getMessage(), e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7705/buggy-version/src.main.java.com.alibaba.fastjson.parser.JSONScanner.java", "BodyUseAPI": ["java.lang.Class<?>.newInstance()", "java.lang.Class<?>.isAssignableFrom(java.lang.Class)"], "Fixed commit": "57267b57201a7db86db1f36f3fb9f203bfb862fe", "Url": "https://api.github.com/repos/AlibabaTech/fastjson", "Date": "2012-06-25T10:09:25Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (de.jClipCorn.util.datetime.CCDateTime.testparse(text, CCDateTime.STRINGREP_SIMPLESHORT)) { owner.getModel().setValue(de.jClipCorn.util.datetime.CCDateTime.parse(text, CCDateTime.STRINGREP_SIMPLESHORT)); }else if (de.jClipCorn.util.datetime.CCDateTime.testparse(text, CCDateTime.STRINGREP_SIMPLEDATE)) { owner.getModel().setValue(de.jClipCorn.util.datetime.CCDateTime.parse(text, CCDateTime.STRINGREP_SIMPLEDATE)); }else { uptime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4581/buggy-version/src.main.de.jClipCorn.gui.guiComponents.jCCDateTimeSpinner.CCDateTimeEditor.java", "BodyUseAPI": ["de.jClipCorn.util.datetime.CCDateTime.parse(java.lang.String,CCDateTime.STRINGREP_SIMPLESHORT)", "owner.getModel().setValue(de.jClipCorn.util.datetime.CCDateTime.parse(text, CCDateTime.STRINGREP_SIMPLEDATE))", "owner.getModel().setValue(de.jClipCorn.util.datetime.CCDateTime.parse(text, CCDateTime.STRINGREP_SIMPLESHORT))", "de.jClipCorn.util.datetime.CCDateTime.parse(java.lang.String,CCDateTime.STRINGREP_SIMPLEDATE)", "de.jClipCorn.util.datetime.CCDateTime.testparse(java.lang.String,CCDateTime.STRINGREP_SIMPLEDATE)"], "Fixed commit": "663fc128ca98ac1cb028ef3951fa1bb78980965c", "Url": "https://api.github.com/repos/Mikescher/jClipCorn", "Date": "2016-08-20T19:38:33Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.jClipCorn.gui.guiComponents.jCCDateTimeSpinner.CCDateTimeEditor.getTextField()", "javax.swing.JTextField.getCaretPosition()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (caret > (tf.getText().length())) caret = tf.getText().length();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4581/buggy-version/src.main.de.jClipCorn.gui.guiComponents.jCCDateTimeSpinner.CCDateTimeEditor.java", "BodyUseAPI": ["java.lang.String.length()", "javax.swing.JTextField.getText()"], "Fixed commit": "663fc128ca98ac1cb028ef3951fa1bb78980965c", "Url": "https://api.github.com/repos/Mikescher/jClipCorn", "Date": "2016-08-20T19:38:33Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (loc == 47) layout.putConstraint(javax.swing.SpringLayout.SOUTH, commPanel, 0, javax.swing.SpringLayout.SOUTH, this); else layout.putConstraint(javax.swing.SpringLayout.SOUTH, commPanel, 0, javax.swing.SpringLayout.NORTH, halfhourmarks[(loc + 1)]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2244/buggy-version/Calendar.src.edu.wpi.cs.wpisuitetng.modules.calendar.view.DetailedDay.java", "BodyUseAPI": ["javax.swing.SpringLayout.putConstraint(java.lang.String,javax.swing.JPanel,int,java.lang.String,javax.swing.JSeparator)"], "Fixed commit": "593c36534a53fd1f42bca4136b63d537d081c2e1", "Url": "https://api.github.com/repos/magwitch324/wpi-suite", "Date": "2013-11-19T01:24:27Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (delay < 1.0) { linkInfo.getFlowQueue().clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/873/buggy-version/playgrounds.vsp.src.main.java.playground.vsp.congestion.handlers.CongestionHandlerBaseImpl.java", "BodyUseAPI": [], "Fixed commit": "383d1b85cf8dd789c8aa0449cb464013457f6049", "Url": "https://api.github.com/repos/matsim-org/matsim", "Date": "2015-09-25T15:15:57Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((data.size()) == 1) data.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2030/buggy-version/src.main.java.at.ac.univie.mminf.qskos4j.issues.clusters.ClustersResult.java", "BodyUseAPI": [], "Fixed commit": "5093a294e25b1ce32f41057d1de0cc7d424f846e", "Url": "https://api.github.com/repos/cmader/qSKOS", "Date": "2016-08-06T10:54:40Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (onProject) { mDescrHost.clearAllTabs(); createProjectList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7406/buggy-version/SberStarter.src.com.soloway.banking.sberstarter.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2fa19ac47b4f54206cda07019bed786dc051e694", "Url": "https://api.github.com/repos/spacesoldier/SberStarter", "Date": "2014-07-27T07:36:48Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(gameID.equalsIgnoreCase(\"ALL\"))) sql_gameID = \" AND gameID = \" + gameID;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8078/buggy-version/GameResult_Web.WebContent.com.dao.GameResultRecords.java", "BodyUseAPI": [], "Fixed commit": "d2e80a8eae3ad624a1dabddd68e9ea5f9fbf98b1", "Url": "https://api.github.com/repos/fanntone/GameResult_Web", "Date": "2017-01-25T07:34:11Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(gameID.equalsIgnoreCase(\"ALL\"))) sql_gameID = \" AND gameID = \" + gameID;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8078/buggy-version/GameResult_Web.WebContent.com.dao.GameResultRecords.java", "BodyUseAPI": [], "Fixed commit": "d2e80a8eae3ad624a1dabddd68e9ea5f9fbf98b1", "Url": "https://api.github.com/repos/fanntone/GameResult_Web", "Date": "2017-01-25T07:34:11Z"},
{"Line": "=>617", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (io.github.yannici.bedwars.Main.getInstance().isBungee()) { this.cycle.onPlayerLeave(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7373/buggy-version/src.io.github.yannici.bedwars.Game.Game.java", "BodyUseAPI": [], "Fixed commit": "264f46ada2e0bb0cf0db0c4453c6ebabc830648c", "Url": "https://api.github.com/repos/BedwarsRel/BedwarsRel", "Date": "2015-08-20T21:10:34Z"},
{"Line": "=>678", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(io.github.yannici.bedwars.Main.getInstance().isBungee())) { this.cycle.onPlayerLeave(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7373/buggy-version/src.io.github.yannici.bedwars.Game.Game.java", "BodyUseAPI": [], "Fixed commit": "264f46ada2e0bb0cf0db0c4453c6ebabc830648c", "Url": "https://api.github.com/repos/BedwarsRel/BedwarsRel", "Date": "2015-08-20T21:10:34Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (b && (this.syncToolConfig.syncDeletes())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8225/buggy-version/synctoolui.src.main.java.org.duracloud.syncui.service.SyncConfigurationManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "5a88ecd1bd80ea94bf076d4ccbd17ecbca5199e2", "Url": "https://api.github.com/repos/TexasDigitalLibrary/duracloud", "Date": "2014-06-04T20:27:27Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flag && (this.syncToolConfig.isRenameUpdates())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8225/buggy-version/synctoolui.src.main.java.org.duracloud.syncui.service.SyncConfigurationManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "5a88ecd1bd80ea94bf076d4ccbd17ecbca5199e2", "Url": "https://api.github.com/repos/TexasDigitalLibrary/duracloud", "Date": "2014-06-04T20:27:27Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((value == null) && (edge == null)) { throw new java.lang.IllegalArgumentException(\"terminal node without value\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7005/buggy-version/rut.src.main.java.io.norberg.rut.RadixTrie.java", "BodyUseAPI": [], "Fixed commit": "fa15697a5fbf8af65101c093ea031ee539d25bd8", "Url": "https://api.github.com/repos/danielnorberg/rut", "Date": "2015-03-09T13:16:28Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.sapon.jici.lexer.Lexer.lex(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tokens.size()) <= 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6723/buggy-version/src.main.java.ca.sapon.jici.Main.java", "BodyUseAPI": [], "Fixed commit": "1a96430735a7b180c649e3a1a13fd6120015fe75", "Url": "https://api.github.com/repos/DDoS/JICI", "Date": "2015-06-27T22:07:27Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 19) { content.setLayerType(View.LAYER_TYPE_SOFTWARE, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/806/buggy-version/app.src.main.java.org.secfirst.umbrella.fragments.TabbedFragment.java", "BodyUseAPI": [], "Fixed commit": "15695c2abede73f1a783a5e1982dfc0155ed2eff", "Url": "https://api.github.com/repos/securityfirst/Umbrella_android", "Date": "2015-09-20T14:20:27Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 19) { content.setLayerType(View.LAYER_TYPE_SOFTWARE, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/806/buggy-version/app.src.main.java.org.secfirst.umbrella.AboutActivity.java", "BodyUseAPI": [], "Fixed commit": "15695c2abede73f1a783a5e1982dfc0155ed2eff", "Url": "https://api.github.com/repos/securityfirst/Umbrella_android", "Date": "2015-09-20T14:20:27Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (missingCharacters > 4) { return instantString; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5573/buggy-version/common-parent.logger.src.main.java.com.speedment.common.logger.internal.formatter.PlainFormatter.java", "BodyUseAPI": [], "Fixed commit": "21bfc02c590021e36fa884cc91eae738d61e1b25", "Url": "https://api.github.com/repos/ractoc/speedment", "Date": "2017-03-30T01:52:53Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (waterbending.Bloodbending.isBloodbended(player)) { player.setAllowFlight(true); player.setFlying(false); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1059/buggy-version/Bending2.src.main.BendingManager.java", "BodyUseAPI": ["org.bukkit.entity.Player.setFlying(boolean)", "org.bukkit.entity.Player.setAllowFlight(boolean)"], "Fixed commit": "90de39e7a018b739b16c0545609782ec524daf85", "Url": "https://api.github.com/repos/orion304/MinecraftTLA", "Date": "2012-07-25T06:54:49Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof org.squirrelframework.foundation.exception.TransitionException) { expcetion = ((org.squirrelframework.foundation.exception.TransitionException) (e)).getTargetException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/388/buggy-version/squirrel-foundation.src.main.java.org.squirrelframework.foundation.fsm.StateMachineLogger.java", "BodyUseAPI": [], "Fixed commit": "d178e93366cb967d0fe7d70195ac84590e16a6e3", "Url": "https://api.github.com/repos/hekailiang/squirrel", "Date": "2013-12-27T08:59:54Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeUpdate()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (affectedRows == 0) { throw new java.sql.SQLException(\"Cannot add database version header. Affected rows is zero.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3149/buggy-version/syncany-lib.src.main.java.org.syncany.database.dao.DatabaseVersionSqlDao.java", "BodyUseAPI": [], "Fixed commit": "570144086a1fed282df0646f027385bb0fe825d2", "Url": "https://api.github.com/repos/binwiederhier/syncany", "Date": "2014-03-19T20:48:48Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeUpdate()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (affectedRows == 0) { throw new java.sql.SQLException(\"Cannot add database version header. Affected rows is zero.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3149/buggy-version/syncany-lib.src.main.java.org.syncany.database.dao.FileHistorySqlDao.java", "BodyUseAPI": [], "Fixed commit": "570144086a1fed282df0646f027385bb0fe825d2", "Url": "https://api.github.com/repos/binwiederhier/syncany", "Date": "2014-03-19T20:48:48Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jetbrains.php.lang.psi.elements.AssignmentExpression.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (assignmentValue instanceof com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.npe.strategy.PhpTypedElement) { final java.util.Set<java.lang.String> types = ((com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.npe.strategy.PhpTypedElement) (assignmentValue)).getType().global(project).filterUnknown().getTypes().stream().map(Types::getType).collect(java.util.stream.Collectors.toSet()); if ((types.contains(Types.strNull)) || (types.contains(Types.strVoid))) { types.remove(Types.strNull); types.remove(Types.strVoid); if ((types.stream().filter(( t) -> (!(t.startsWith(\"\\\\\"))) && (!(com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.npe.strategy.NullableVariablesStrategy.objectTypes.contains(t)))).count()) == 0) { com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.npe.strategy.NullableVariablesStrategy.apply(variableName, assignment, controlFlowStart, holder); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7563/buggy-version/src.main.java.com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.npe.strategy.NullableVariablesStrategy.java", "BodyUseAPI": [], "Fixed commit": "9c9e5c86a0d06b8677ee1e2d8b50c9d38998e597", "Url": "https://api.github.com/repos/kalessil/phpinspectionsea", "Date": "2017-08-27T11:42:53Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((theMovie.trailers.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3645/buggy-version/app.src.main.java.com.nano.android.popularmovies.DetailFragment.java", "BodyUseAPI": [], "Fixed commit": "4412b7535c0b217bcfb29e1772ef505eae0f2878", "Url": "https://api.github.com/repos/fionays/Popular-Movies", "Date": "2015-11-10T03:40:44Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (choice.contains(\"Floor\")) choice = choice.replace(\"Floor \", \"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5218/buggy-version/OfficeLocator.app.src.main.java.com.groupc.officelocator.favoritesList.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "fc25f9a1c51b757d9b2bfc9c7ddbac2b36a63ff8", "Url": "https://api.github.com/repos/cnorton18/capstone2017", "Date": "2017-08-13T17:06:10Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["messages_obj.get(i).toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (in_msg_text.contains(\"''\")) msg_text = in_msg_text.replace(\"''\", \"'\"); else msg_text = in_msg_text;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7861/buggy-version/Stuur.app.src.main.java.com.stuur.stuur.NetworkTask.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "e02d4d0acc2d7f99c43fca08ddae0fb65f606aa7", "Url": "https://api.github.com/repos/beefy/Stuur", "Date": "2016-03-08T15:58:11Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (in_msg_text.contains(\"'\")) msg_text = in_msg_text.replace(\"'\", \"''\"); else msg_text = in_msg_text;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7861/buggy-version/Stuur.app.src.main.java.com.stuur.stuur.NetworkTask.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "e02d4d0acc2d7f99c43fca08ddae0fb65f606aa7", "Url": "https://api.github.com/repos/beefy/Stuur", "Date": "2016-03-08T15:58:11Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pattern) != null) return pattern.matcher(aString).find();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1638/buggy-version/xmppbot-commands.src.main.java.de.raion.xmppbot.plugin.JiraIssuePlugin.java", "BodyUseAPI": [], "Fixed commit": "78857c000c01620e7d66b5d872400596f3068bbf", "Url": "https://api.github.com/repos/brndkfr/xmppbot", "Date": "2013-02-11T12:44:50Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((build.getUpgradeLevel()) > 9) { throw new frontend.GamePlayException(\"No more Upgrade possible\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8914/buggy-version/src.frontend.GamePlay.java", "BodyUseAPI": [], "Fixed commit": "cff7361dbdcd7f956e6c52f34d1742112cf11451", "Url": "https://api.github.com/repos/tobiasg28/Uni-Zeugs-TSD", "Date": "2011-06-11T11:52:15Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(frontend.Acceptance.existsTroopUpgradeLevel(troop.getUpgradeLevel()))) { throw new frontend.GamePlayException(\"No more Upgrade possible\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8914/buggy-version/src.frontend.GamePlay.java", "BodyUseAPI": [], "Fixed commit": "cff7361dbdcd7f956e6c52f34d1742112cf11451", "Url": "https://api.github.com/repos/tobiasg28/Uni-Zeugs-TSD", "Date": "2011-06-11T11:52:15Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((u.length) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2592/buggy-version/android-app.OpenChallenge.app.src.main.java.com.gnufsociety.openchallenge.customui.Podium.java", "BodyUseAPI": [], "Fixed commit": "72bff37b0e9009995fec034e362eaf1641e60554", "Url": "https://api.github.com/repos/gnufsociety/openchallenge", "Date": "2017-03-04T12:41:08Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ore.blockNiceName.equalsIgnoreCase(\"iridium\")) { world.setBlockState(pos, ore.state); }else { try { worldGenMinable.generate(world, random, pos); } catch (java.lang.ArrayIndexOutOfBoundsException e) { Core.logHelper.error(((\"Something bad is happening during world gen the ore \" + (ore.blockNiceName)) + \" caused a crash when generating. Report this to the TechReborn devs with a log\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6842/buggy-version/src.main.java.techreborn.world.TechRebornWorldGen.java", "BodyUseAPI": ["net.minecraft.world.World.setBlockState(net.minecraft.util.math.BlockPos,ore.state)", "Core.logHelper.error(((\"Something bad is happening during world gen the ore \" + (ore.blockNiceName)) + \" caused a crash when generating. Report this to the TechReborn devs with a log\"))"], "Fixed commit": "2b546b199146688706706ed8d6c3d1bc897657b6", "Url": "https://api.github.com/repos/TechReborn/TechReborn", "Date": "2017-02-01T17:10:29Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isIndexed(d)) ndIndices[d].remove(index(d), index);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1306/buggy-version/librec.src.main.java.librec.data.SparseTensor.java", "BodyUseAPI": ["librec.data.SparseTensor.SparseTensorEntry.index(int)", "ndIndices[d].remove(int,int)"], "Fixed commit": "66836542b12bc133a99b6901a01b336aec5ba865", "Url": "https://api.github.com/repos/guoguibing/librec", "Date": "2015-07-16T08:01:01Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newFile.exists()) { if (file.exists()) { file.delete(); } newFile.renameTo(file); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1479/buggy-version/app.src.main.java.com.echo.timewidget.TimeWidgetProvider.java", "BodyUseAPI": ["java.io.File.renameTo(java.io.File)"], "Fixed commit": "362dc2d680c03b921d7515cbb11170182f5def8b", "Url": "https://api.github.com/repos/sunshinehu/TimeWidget", "Date": "2016-07-22T06:52:20Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.ide.project.core.upgrade.UpgradeAssistantSettingsUtil.getObjectFromStore(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (mpContainer != null) { com.liferay.blade.api.Problem[] problems = mpContainer.getProblemMap().values().toArray(new com.liferay.blade.api.Problem[0]); _ignoredProblemTable.setInput(problems); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8849/buggy-version/tools.plugins.com.liferay.ide.project.ui.src.com.liferay.ide.project.ui.pref.MigrationProblemPreferencePage.java", "BodyUseAPI": ["com.liferay.ide.project.core.upgrade.IgnoredProblemsContainer.getProblemMap()", "mpContainer.getProblemMap().values()", "mpContainer.getProblemMap().values().toArray(com.liferay.blade.api.Problem[])"], "Fixed commit": "e556f368b8850bcb0e0682d67e4364a4d47392b8", "Url": "https://api.github.com/repos/gamerson/liferay-ide", "Date": "2016-10-10T08:08:28Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.datastax.hectorjpa.serialize.EmbeddedSerializer.getObject(composite.getComponent(i).getBytes())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (value == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8540/buggy-version/src.main.java.com.datastax.hectorjpa.meta.embed.SerializedCollectionColumnField.java", "BodyUseAPI": [], "Fixed commit": "c27b32a67e84e12e890942725dc1b15223c49c88", "Url": "https://api.github.com/repos/riptano/hector-jpa", "Date": "2011-08-19T00:07:19Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (name.equalsIgnoreCase(\"Clear\")) { for (int i = 0; i < (DATA.length); i++) { DATA[i][1] = java.lang.Boolean.FALSE; } ((javax.swing.table.AbstractTableModel) (table.getModel())).fireTableDataChanged(); }else if (name.equalsIgnoreCase(\"Back\")) { javax.swing.JPanel parent = ((javax.swing.JPanel) (getParent())); java.awt.CardLayout cardLayout = ((java.awt.CardLayout) (parent.getLayout())); cardLayout.previous(parent); }else { for (int i = 0; i < (dataModel.getRowCount()); i++) { if (selectionModel.isSelectedIndex(i)) { java.lang.System.out.println(((((\"selected index \" + \" \") + i) + \" \") + (name))); } java.lang.System.out.println((((((((\"actionPerformed value : \" + (value)) + \" \") + i) + \" \") + (com.expeditors.eiscanning.ConfigureCustomer.CHECK_COL)) + \" \") + (name))); dataModel.setValueAt(value, i, com.expeditors.eiscanning.ConfigureCustomer.CHECK_COL); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2921/buggy-version/src.com.expeditors.eiscanning.ConfigureCustomer.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "126dc35f51768b7725098d68c33b1ba7ef9645f5", "Url": "https://api.github.com/repos/rajdiran/EIScanning-Desktop", "Date": "2017-10-31T09:03:09Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getErrorStream()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (is != null) { data = com.zanjou.http.util.ByteStream.toByteArray(connection.getErrorStream()); }else { logging((\"No response. Invalid HTTP CODE Response? \" + responseCode), com.zanjou.http.request.ERROR); data = \"{\\\"error\\\":\\\"No response\\\"}\".getBytes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5411/buggy-version/httpclient.src.main.java.com.zanjou.http.request.Request.java", "BodyUseAPI": [], "Fixed commit": "7251094372794f42db1a6189c77a2685e0541d93", "Url": "https://api.github.com/repos/ander7agar/android-http-client", "Date": "2017-06-12T18:48:44Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ahmadadam96.comicbookmovies.MainActivity.getSystemService(Context.CONNECTIVITY_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (connMGR != null) { android.net.NetworkInfo activeNetwork = connMGR.getActiveNetworkInfo(); if ((activeNetwork == null) || (!(activeNetwork.isConnectedOrConnecting()))) { mEmptyStateTextView.setText(R.string.no_internet_connection); mEmptyStateTextView.setVisibility(android.view.View.VISIBLE); android.widget.ProgressBar progress = ((android.widget.ProgressBar) (findViewById(R.id.progressBar))); progress.setVisibility(android.view.View.GONE); }else { new ahmadadam96.comicbookmovies.MainActivity.getCodesTask().execute(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7529/buggy-version/app.src.main.java.ahmadadam96.comicbookmovies.MainActivity.java", "BodyUseAPI": ["android.net.ConnectivityManager.getActiveNetworkInfo()"], "Fixed commit": "6febe353f54ba77d69ba96c7781f97d50eb9c42f", "Url": "https://api.github.com/repos/ahmadadam96/ComicbookMovies", "Date": "2017-11-05T05:27:08Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (array) return new org.eclipse.jdt.internal.compiler.ast.NullLiteral(s, e);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1916/buggy-version/src.core.lombok.eclipse.handlers.HandleConstructor.java", "BodyUseAPI": [], "Fixed commit": "d317eda711f2b07bdbac15bc9652ae9816e4517b", "Url": "https://api.github.com/repos/PKRoma/lombok", "Date": "2016-11-11T16:54:39Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((httpRequest.getCookies()) != null) { for (final javax.servlet.http.Cookie cookie : httpRequest.getCookies()) { cookies += (((((((((((((((cookie.getName()) + \": \") + (cookie.getValue())) + \"; maxAge=\") + (cookie.getMaxAge())) + \"; domain=\") + (cookie.getDomain())) + \"; path=\") + (cookie.getPath())) + \"; version=\") + (cookie.getVersion())) + \"; secure=\") + (cookie.getSecure())) + \"; comment=\") + (cookie.getComment())) + \"\\n\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1179/buggy-version/bootstrap.src.main.java.org.soluvas.web.bootstrap.FriendlyErrorPage.java", "BodyUseAPI": [], "Fixed commit": "eaa99c0cd97f223228f7cf2fe6ba2717c3bc4d37", "Url": "https://api.github.com/repos/soluvas/soluvas-web", "Date": "2014-12-10T11:54:34Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (launcher != null) countChanges = determineChangeCount(project, launcher, listener, lastBuild, now, temporaryFile, workspace); else listener.getLogger().println(\"Launcher was null... skipping determining change count.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3527/buggy-version/src.main.java.hudson.scm.SurroundSCM.java", "BodyUseAPI": ["hudson.scm.SurroundSCM.determineChangeCount(hudson.scm.Job<?, ?>,hudson.scm.Launcher,hudson.scm.TaskListener,java.util.Date,java.util.Date,java.io.File,hudson.scm.FilePath)"], "Fixed commit": "7fc681d71941373862d6bc740d2dfb655e22f055", "Url": "https://api.github.com/repos/jenkinsci/Surround-SCM-plugin", "Date": "2016-12-06T16:00:23Z"},
{"Line": "=>629", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (jenkinsInstance != null) { hudson.scm.SurroundTool.DescriptorImpl sscmToolDesc = jenkins.model.Jenkins.getInstance().getDescriptorByType(SurroundTool.DescriptorImpl.class); if (sscmToolDesc != null) sscm = sscmToolDesc.getInstallation(sscm_tool_name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3527/buggy-version/src.main.java.hudson.scm.SurroundSCM.java", "BodyUseAPI": [], "Fixed commit": "7fc681d71941373862d6bc740d2dfb655e22f055", "Url": "https://api.github.com/repos/jenkinsci/Surround-SCM-plugin", "Date": "2016-12-06T16:00:23Z"},
{"Line": "=>449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(note.getLabel().equals(\"\"))) { decrementTagNoteCount(note.getLabel()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2104/buggy-version/app.src.main.java.productivity.notes.rivisto.OpenNoteActivity.java", "BodyUseAPI": ["productivity.notes.rivisto.Note.getLabel()", "productivity.notes.rivisto.OpenNoteActivity.6.decrementTagNoteCount(note.getLabel())"], "Fixed commit": "004480941a429c0bcc186849dfa2d7f84ebc576d", "Url": "https://api.github.com/repos/ParitoshBh/Rivisto-Android", "Date": "2016-11-10T03:19:30Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.lsj.gs.App.gitconf) == null) { logger.info(\"\u914d\u7f6e\u6587\u4ef6\u9519\u8bef\"); while ((com.lsj.gs.App.gitconf) == null) { java.lang.Thread.sleep(10); } logger.info(\"\u914d\u7f6e\u6587\u4ef6OK\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/332/buggy-version/src.main.java.com.lsj.gs.App.java", "BodyUseAPI": [], "Fixed commit": "5c05f737906ceb72e23145b89ee3fdca8ea46fdc", "Url": "https://api.github.com/repos/lsj9383/git-syncher", "Date": "2017-01-12T09:23:04Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.DatabaseMetaData.getColumns(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((column.getFetchSize()) == 0) { column = meta.getColumns(catalog, schema, tableName.toLowerCase(), columnName.toLowerCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2435/buggy-version/connectors.connectors.sql.sql-common.src.main.java.io.syndesis.connector.sql.DatabaseMetaDataHelper.java", "BodyUseAPI": [], "Fixed commit": "dcd4243ce60ee6eb0a0038562b6afaa9768ec81d", "Url": "https://api.github.com/repos/KurtStam/syndesis", "Date": "2017-11-30T19:25:58Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (board.isOccupied(newPosition)) { board.getPiece(newPosition).kill(board); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7760/buggy-version/chkm8.src.main.java.com.anttilip.chkm8.model.pieces.Pawn.java", "BodyUseAPI": ["board.getPiece(newPosition).kill(com.anttilip.chkm8.model.Board)", "com.anttilip.chkm8.model.Board.getPiece(com.anttilip.chkm8.model.Position)"], "Fixed commit": "cb8d39e1dd7347f9292dbb3af000b21b8df7eceb", "Url": "https://api.github.com/repos/anttilip/chkm8", "Date": "2016-11-26T22:56:32Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((a.getActionVariable()) != null) { act.setServiceActionVariables(a.getActionVariable()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3774/buggy-version/adaptation-manager.src.main.java.eu.fbk.das.adaptation.AdaptationThread.java", "BodyUseAPI": ["eu.fbk.das.process.engine.api.domain.ProcessActivity.setServiceActionVariables(a.getActionVariable())", "eu.fbk.das.process.engine.api.jaxb.Fragment.Action.getActionVariable()"], "Fixed commit": "a1d38e9751fa4c368881fc7b50279e3f2834d7c2", "Url": "https://api.github.com/repos/das-fbk/adaptation-manager", "Date": "2017-03-27T09:04:51Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (task != null) { com.github.barteksc.pdfviewer.model.PagePart part = proceed(task); if (renderingTasks.remove(task)) { publishProgress(part); }else { part.getRenderedBitmap().recycle(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3738/buggy-version/android-pdf-viewer.src.main.java.com.github.barteksc.pdfviewer.RenderingAsyncTask.java", "BodyUseAPI": ["java.util.List<com.github.barteksc.pdfviewer.RenderingAsyncTask.RenderingTask>.remove(com.github.barteksc.pdfviewer.RenderingAsyncTask.RenderingTask)", "com.github.barteksc.pdfviewer.RenderingAsyncTask.proceed(com.github.barteksc.pdfviewer.RenderingAsyncTask.RenderingTask)"], "Fixed commit": "9699a7513f81d0a84ef6a4e60e409454d4633ee1", "Url": "https://api.github.com/repos/barteksc/AndroidPdfViewer", "Date": "2016-07-25T20:36:17Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (page.contains(\"product.\")) return \"products?faces-redirect=true\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8835/buggy-version/src.it.uniroma3.controller.CustomerController.java", "BodyUseAPI": [], "Fixed commit": "22ab69a7fbfa93f0eef19a5c47313449adaf165a", "Url": "https://api.github.com/repos/Kidel/Agave", "Date": "2015-05-17T17:50:26Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((page) == null) return \"index?faces-redirect=true\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8835/buggy-version/src.it.uniroma3.controller.CustomerController.java", "BodyUseAPI": [], "Fixed commit": "22ab69a7fbfa93f0eef19a5c47313449adaf165a", "Url": "https://api.github.com/repos/Kidel/Agave", "Date": "2015-05-17T17:50:26Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (page.contains(\"product.\")) return \"products?faces-redirect=true\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8835/buggy-version/src.it.uniroma3.controller.CustomerController.java", "BodyUseAPI": [], "Fixed commit": "22ab69a7fbfa93f0eef19a5c47313449adaf165a", "Url": "https://api.github.com/repos/Kidel/Agave", "Date": "2015-05-17T17:50:26Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((page) == null) return \"index?faces-redirect=true\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8835/buggy-version/src.it.uniroma3.controller.CustomerController.java", "BodyUseAPI": [], "Fixed commit": "22ab69a7fbfa93f0eef19a5c47313449adaf165a", "Url": "https://api.github.com/repos/Kidel/Agave", "Date": "2015-05-17T17:50:26Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isFightable())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1315/buggy-version/BlockGame.BaseActor.java", "BodyUseAPI": [], "Fixed commit": "68e69379ed4f10e2eea882181f7693d458244a90", "Url": "https://api.github.com/repos/projectormato/Block", "Date": "2016-07-01T19:13:11Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (qStr != null) { modQ = filter(qStr); modifiableSolrParams.set(\"q\", modQ); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1361/buggy-version/src.com.lucidworks.analysis.AutoPhrasingQParserPlugin.java", "BodyUseAPI": ["com.lucidworks.analysis.AutoPhrasingQParserPlugin.filter(java.lang.String)"], "Fixed commit": "472f5b03cc4d62ced3fb83aee36f6b0facb5a09b", "Url": "https://api.github.com/repos/jstrassburg/auto-phrase-tokenfilter", "Date": "2014-10-28T14:52:44Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bench) fileName += \"_bench\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1101/buggy-version/palsweb.src.pals.actions.user.AnalysisRunPDF.java", "BodyUseAPI": [], "Fixed commit": "c9a3b737e265dd10788453f2962b5616c086122f", "Url": "https://api.github.com/repos/edenduthie/pals", "Date": "2012-09-27T03:13:58Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.afzaln.gae.java.dao.StaffUtils.getStaffByName(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((staffInfoList.size()) > 0) { formattedData = com.afzaln.gae.java.servlets.StaffDataFormat.formatStaffData(format, formattedData, staffInfoList); }else { formattedData = \"No data found\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/9214/buggy-version/src.com.afzaln.gae.java.servlets.FindStaffByName.java", "BodyUseAPI": ["com.afzaln.gae.java.servlets.StaffDataFormat.formatStaffData(java.lang.String,java.lang.String,java.util.List<com.afzaln.gae.java.model.StaffInfo>)"], "Fixed commit": "bc475de87895e4b5061a8d5810855dfc6f31907e", "Url": "https://api.github.com/repos/nemo242444/StaffWebServiceProject", "Date": "2016-01-11T11:13:19Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.afzaln.gae.java.dao.StaffUtils.findAllStaff()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((staffInfoList.size()) > 0) { formattedData = com.afzaln.gae.java.servlets.StaffDataFormat.formatStaffData(format, formattedData, staffInfoList); }else { formattedData = \"No data found\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/9214/buggy-version/src.com.afzaln.gae.java.servlets.FindAllStaff.java", "BodyUseAPI": ["com.afzaln.gae.java.servlets.StaffDataFormat.formatStaffData(java.lang.String,java.lang.String,java.util.List<com.afzaln.gae.java.model.StaffInfo>)"], "Fixed commit": "bc475de87895e4b5061a8d5810855dfc6f31907e", "Url": "https://api.github.com/repos/nemo242444/StaffWebServiceProject", "Date": "2016-01-11T11:13:19Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (waiting.contains(event.getPlayer())) { waiting.remove(event.getPlayer()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6262/buggy-version/src.net.arcanerealm.snowattack.SnowAttackArena.java", "BodyUseAPI": ["org.bukkit.event.player.PlayerQuitEvent.getPlayer()", "java.util.ArrayList<org.bukkit.entity.Player>.remove(event.getPlayer())"], "Fixed commit": "aed038fdab5fbcd835674e1eb4bc5583891a582d", "Url": "https://api.github.com/repos/exload/SnowAttack", "Date": "2013-11-28T02:48:16Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.entity.Snowball.getShooter()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (waiting.contains(p)) { event.setCancelled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6262/buggy-version/src.net.arcanerealm.snowattack.SnowAttackArena.java", "BodyUseAPI": [], "Fixed commit": "aed038fdab5fbcd835674e1eb4bc5583891a582d", "Url": "https://api.github.com/repos/exload/SnowAttack", "Date": "2013-11-28T02:48:16Z"},
{"Line": "=>698", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pager) != null) vp.updateSize(pager.dsource.getMaxY());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7016/buggy-version/src.com.wanikani.androidnotifier.graph.TYPlot.java", "BodyUseAPI": [], "Fixed commit": "f25ec324cd5fef53c045de0967978e13f139540b", "Url": "https://api.github.com/repos/WaniKani/Android-Notification", "Date": "2013-07-20T17:44:34Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["water.parser.ValueString.get_buf()", "water.parser.ValueString.get_off()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((i + 36) >= (buf.length)) return water.fvec.ParseTime.badUUID(str);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4101/buggy-version/src.main.java.water.fvec.ParseTime.java", "BodyUseAPI": [], "Fixed commit": "ace7c0a110da643d0184d59d0100e0b128d1ee47", "Url": "https://api.github.com/repos/0xdata/h2o", "Date": "2014-06-09T17:11:44Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (org == null) { cell0.setCellValue(\"\u0e23\u0e32\u0e22\u0e07\u0e32\u0e19\u0e2a\u0e23\u0e38\u0e1b\u0e1c\u0e25\u0e01\u0e32\u0e23\u0e43\u0e0a\u0e49\u0e08\u0e48\u0e32\u0e22\u0e07\u0e1a\u0e25\u0e07\u0e17\u0e38\u0e19\"); }else { cell0.setCellValue((\"\u0e23\u0e32\u0e22\u0e07\u0e32\u0e19\u0e2a\u0e23\u0e38\u0e1b\u0e1c\u0e25\u0e01\u0e32\u0e23\u0e43\u0e0a\u0e49\u0e08\u0e48\u0e32\u0e22\u0e07\u0e1a\u0e25\u0e07\u0e17\u0e38\u0e19 \u0e2b\u0e19\u0e48\u0e27\u0e22\u0e07\u0e32\u0e19: \" + (org.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8297/buggy-version/eBudgeting.src.main.java.biz.thaicom.eBudgeting.view.M81R08XLSView.java", "BodyUseAPI": ["biz.thaicom.eBudgeting.models.hrx.Organization.getName()", "org.apache.poi.ss.usermodel.Cell.setCellValue((\"\u0e23\u0e32\u0e22\u0e07\u0e32\u0e19\u0e2a\u0e23\u0e38\u0e1b\u0e1c\u0e25\u0e01\u0e32\u0e23\u0e43\u0e0a\u0e49\u0e08\u0e48\u0e32\u0e22\u0e07\u0e1a\u0e25\u0e07\u0e17\u0e38\u0e19 \u0e2b\u0e19\u0e48\u0e27\u0e22\u0e07\u0e32\u0e19: \" + (org.getName())))"], "Fixed commit": "7d6e97b761cb16ecc6e10050b7a4632df52f7b15", "Url": "https://api.github.com/repos/orraf/eBudgeting", "Date": "2015-03-18T11:48:12Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (org == null) { cell.setCellValue(\"\u0e23\u0e32\u0e22\u0e07\u0e32\u0e19\u0e2a\u0e23\u0e38\u0e1b\u0e1c\u0e25\u0e01\u0e32\u0e23\u0e43\u0e0a\u0e49\u0e08\u0e48\u0e32\u0e22\u0e07\u0e1a\u0e25\u0e07\u0e17\u0e38\u0e19\"); }else { cell.setCellValue((\"\u0e23\u0e32\u0e22\u0e07\u0e32\u0e19\u0e2a\u0e23\u0e38\u0e1b\u0e1c\u0e25\u0e01\u0e32\u0e23\u0e43\u0e0a\u0e49\u0e08\u0e48\u0e32\u0e22\u0e07\u0e1a\u0e25\u0e07\u0e17\u0e38\u0e19 \u0e2b\u0e19\u0e48\u0e27\u0e22\u0e07\u0e32\u0e19: \" + (org.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8297/buggy-version/eBudgeting.src.main.java.biz.thaicom.eBudgeting.view.M81R08XLSView.java", "BodyUseAPI": ["org.apache.poi.ss.usermodel.Cell.setCellValue((\"\u0e23\u0e32\u0e22\u0e07\u0e32\u0e19\u0e2a\u0e23\u0e38\u0e1b\u0e1c\u0e25\u0e01\u0e32\u0e23\u0e43\u0e0a\u0e49\u0e08\u0e48\u0e32\u0e22\u0e07\u0e1a\u0e25\u0e07\u0e17\u0e38\u0e19 \u0e2b\u0e19\u0e48\u0e27\u0e22\u0e07\u0e32\u0e19: \" + (org.getName())))", "biz.thaicom.eBudgeting.models.hrx.Organization.getName()"], "Fixed commit": "7d6e97b761cb16ecc6e10050b7a4632df52f7b15", "Url": "https://api.github.com/repos/orraf/eBudgeting", "Date": "2015-03-18T11:48:12Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ning.http.client.Response.getResponseBody()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (com.google.common.base.Strings.isNullOrEmpty(body)) { return null; }else { return mapper.readValue(body, getJacksonType(resType)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3020/buggy-version/ob1k-core.src.main.java.com.outbrain.ob1k.common.marshalling.JsonRequestMarshaller.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.ObjectMapper.readValue(java.lang.String,com.fasterxml.jackson.databind.JavaType)"], "Fixed commit": "354f45622726bbfe298b870949d508766b9ff535", "Url": "https://api.github.com/repos/lifey/ob1k", "Date": "2015-06-25T08:46:45Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (arguments == null) { throw new java.lang.IllegalArgumentException(\"One argument is expected\"); }else if ((arguments.size()) != 1) { throw new java.lang.IllegalArgumentException(((\"One argument was expected, \" + (arguments.size())) + \" were supplied\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7566/buggy-version/core-rules.src.main.java.org.hisp.dhis.rules.functions.RuleFunctionOizp.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.size()"], "Fixed commit": "4e88e87372ff1cd31072fd55d5377111d609303f", "Url": "https://api.github.com/repos/EyeSeeTea/dhis2-android-sdk", "Date": "2017-12-21T09:24:15Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dexels.navajo.client.context.NavajoContext.getNavajo(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (n == null) { throw new java.lang.IllegalArgumentException(((\"Missing navajo: \" + navajo) + \" in state. Was the session deleted?\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/309/buggy-version/core.com.dexels.navajo.client.src.com.dexels.navajo.client.context.NavajoContext.java", "BodyUseAPI": [], "Fixed commit": "db048d9adf8f3ebcebf3955f091d08ef4212fb83", "Url": "https://api.github.com/repos/Dexels/navajo", "Date": "2012-10-29T09:55:14Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mHeaders) == null) { return super.getHeaders(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6491/buggy-version/rally-lib.src.main.java.io.zeplin.rally.network.CoreGsonRequest.java", "BodyUseAPI": [], "Fixed commit": "d76add66ae110991571106b7b3001a0f55155538", "Url": "https://api.github.com/repos/zeplin/rally", "Date": "2014-07-08T07:53:01Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(viewParent instanceof android.support.v4.view.ViewPager)) { xy[0] += view.getX(); xy[1] += view.getY(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5199/buggy-version/library.src.main.java.tw.guodong.activitytransitionmanager.ActivityTransitionManager.java", "BodyUseAPI": [], "Fixed commit": "93738bcacd8f60aa2534199b22f6602de1798722", "Url": "https://api.github.com/repos/guodong1111/ActivityTransitionManager", "Date": "2015-01-31T05:15:42Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((worldName != null) && (!(worldName.isEmpty()))) { this.world = me.sirfaizdat.prison.core.Prison.i().getServer().getWorld(worldName); if ((world) == null) { worldMissing = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1664/buggy-version/src.me.sirfaizdat.prison.mines.entities.Mine.java", "BodyUseAPI": [], "Fixed commit": "aea769ac6ae63bb3a13e7e3d269db4a20bff2e1a", "Url": "https://api.github.com/repos/faizaand/Prison", "Date": "2017-02-15T19:31:18Z"},
{"Line": "=>619", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activeLoop) != null) { if (info.nightscout.androidaps.Config.logConfigBuilder) info.nightscout.androidaps.plugins.ConfigBuilder.ConfigBuilderFragment.log.debug((\"Selected loop interface: \" + (activeLoop.getName()))); for (info.nightscout.androidaps.interfaces.PluginBase p : pluginsInCategory) { if (!(p.getName().equals(activeLoop.getName()))) { p.setFragmentVisible(false); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5529/buggy-version/app.src.main.java.info.nightscout.androidaps.plugins.ConfigBuilder.ConfigBuilderFragment.java", "BodyUseAPI": [], "Fixed commit": "9766b4eccb79fece6a22a9719d37114c796d6c1b", "Url": "https://api.github.com/repos/LadyViktoria/AndroidAPS", "Date": "2016-07-03T16:44:02Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Units.MoveableUnit.getNation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (nation != null) { btn.setStyle(((\"-fx-background-color: \" + (unit.getNation().color())) + \" ;\")); }else { btn.setStyle(\"-fx-background-color: #FFFFFF;\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5643/buggy-version/src.model.Units.Stack.java", "BodyUseAPI": [], "Fixed commit": "49006b805ebbd6308427af02e7a760c6b76f4455", "Url": "https://api.github.com/repos/cjeffery/sworsorc", "Date": "2014-05-02T15:27:57Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.grails.datastore.mapping.engine.EntityAccess.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (currentVersion == null) { currentVersion = 0L; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4430/buggy-version/grails-datastore-core.src.main.groovy.org.grails.datastore.mapping.engine.EntityPersister.java", "BodyUseAPI": [], "Fixed commit": "adb2166b3c22b3537aa23a6d90ecc3734465efa9", "Url": "https://api.github.com/repos/SpringSource/grails-data-mapping", "Date": "2011-11-17T18:34:43Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (association instanceof org.grails.datastore.mapping.model.config.OneToOne) { association.setOwningSide(true); }else if (!(association instanceof org.grails.datastore.mapping.model.config.Basic)) { if (association.getAssociatedEntity().isOwningEntity(association.getOwner())) { association.setOwningSide(true); }else { association.setOwningSide(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4430/buggy-version/grails-datastore-core.src.main.groovy.org.grails.datastore.mapping.model.config.GormMappingConfigurationStrategy.java", "BodyUseAPI": ["org.grails.datastore.mapping.model.config.Association.setOwningSide(boolean)", "org.grails.datastore.mapping.model.config.Association.setOwningSide(boolean)", "org.grails.datastore.mapping.model.config.Association.setOwningSide(boolean)", "org.grails.datastore.mapping.model.config.Association.getAssociatedEntity()", "association.getAssociatedEntity().isOwningEntity(association.getOwner())", "org.grails.datastore.mapping.model.config.Association.getOwner()"], "Fixed commit": "adb2166b3c22b3537aa23a6d90ecc3734465efa9", "Url": "https://api.github.com/repos/SpringSource/grails-data-mapping", "Date": "2011-11-17T18:34:43Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIsInFavArticle) { pullFavArticles(); }else { pullTimeline(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6387/buggy-version/monoandroid.MonoReader.app.src.main.java.cn.ragnarok.monoreader.app.ui.fragment.TimelineFragment.java", "BodyUseAPI": [], "Fixed commit": "3f44fd0e585995eb6ecc99428bbc7d1a9ce51c63", "Url": "https://api.github.com/repos/ragnraok/MonoReader", "Date": "2014-05-27T10:56:01Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((line.length()) == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/9271/buggy-version/src.org.avuna.httpd.dns.zone.ZoneFile.java", "BodyUseAPI": [], "Fixed commit": "afc1b1924884db82b8e589dec30d2439b11934bd", "Url": "https://api.github.com/repos/paullaz/Avuna-HTTPD", "Date": "2015-05-23T10:44:02Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<jenkins.plugins.ssh2easy.acl.CloudCIAuthorizationStrategy.AclType, jenkins.plugins.ssh2easy.acl.CloudProject>.get(jenkins.plugins.ssh2easy.acl.CloudCIAuthorizationStrategy.AclType)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((item == null) || (null == cloudProject)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5185/buggy-version/src.main.java.jenkins.plugins.ssh2easy.acl.CloudCIAuthorizationStrategy.java", "BodyUseAPI": [], "Fixed commit": "f4cd1d886d81e338770afdf6969a0eccec66b434", "Url": "https://api.github.com/repos/jenkinsci/ssh2easy-plugin", "Date": "2015-05-10T07:30:47Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPos) >= (length)) { currentPos = (length) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5666/buggy-version/src.java.src.main.java.com.maimemo.SentenceIterator.java", "BodyUseAPI": [], "Fixed commit": "553d66cb3f71dc897c9a8e6be9500d3e7955ee8b", "Url": "https://api.github.com/repos/maimemo/word-extractor", "Date": "2016-08-25T06:27:28Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!optimizeForLocalOnly) return serverMap;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/249/buggy-version/server.src.main.java.com.orientechnologies.orient.server.distributed.ODistributedConfiguration.java", "BodyUseAPI": [], "Fixed commit": "dfa2adf2cbc005fc609d19907f13e21fc3615523", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-09-29T17:17:59Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (targetRootForLoopIndex == mostChildForLoopBean) { return mostChildForLoopBean; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3993/buggy-version/plugins.org.wso2.developerstudio.visualdatamapper.diagram.src.org.wso2.developerstudio.datamapper.diagram.custom.generator.DifferentLevelArrayMappingConfigGenerator.java", "BodyUseAPI": [], "Fixed commit": "92921311440108f60efc30c10beba9a4a0a34732", "Url": "https://api.github.com/repos/Buddhima/devstudio-tooling-esb", "Date": "2016-07-11T04:24:27Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (indexOfMostInnerForLoopBean < 0) { indexOfMostInnerForLoopBean = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3993/buggy-version/plugins.org.wso2.developerstudio.visualdatamapper.diagram.src.org.wso2.developerstudio.datamapper.diagram.custom.generator.DifferentLevelArrayMappingConfigGenerator.java", "BodyUseAPI": [], "Fixed commit": "92921311440108f60efc30c10beba9a4a0a34732", "Url": "https://api.github.com/repos/Buddhima/devstudio-tooling-esb", "Date": "2016-07-11T04:24:27Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (src == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5307/buggy-version/entitlement.src.main.java.com.ning.billing.entitlement.engine.dao.model.EntitlementEventModelDao.java", "BodyUseAPI": [], "Fixed commit": "8ae5f2cafe38e9c4b8b61cdfad6ec499c01179c1", "Url": "https://api.github.com/repos/killbill/killbill", "Date": "2012-11-17T00:15:26Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (navIndex == (-1)) { navIndex = 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/9001/buggy-version/src.net.alexjf.tmm.adapters.TabAdapter.java", "BodyUseAPI": [], "Fixed commit": "8aaeb0a0c283c5f0f885c9d4b22140644f35de5c", "Url": "https://api.github.com/repos/AlexJF/TrackMyMoney", "Date": "2013-07-27T12:14:23Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastVersion) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7100/buggy-version/jetty-version-maven-plugin.src.main.java.org.eclipse.jetty.toolchain.version.VersionPattern.java", "BodyUseAPI": [], "Fixed commit": "3022acb40fe8f5493de5d0695e76b9c034113c8f", "Url": "https://api.github.com/repos/eclipse/jetty.toolchain", "Date": "2011-09-01T21:52:58Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastVersion) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7100/buggy-version/jetty-version-maven-plugin.src.main.java.org.eclipse.jetty.toolchain.version.VersionPattern.java", "BodyUseAPI": [], "Fixed commit": "3022acb40fe8f5493de5d0695e76b9c034113c8f", "Url": "https://api.github.com/repos/eclipse/jetty.toolchain", "Date": "2011-09-01T21:52:58Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id) != null) { obj.accumulate(\"id\", id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2617/buggy-version/src.main.java.com.lehealth.api.entity.BloodpressureRecord.java", "BodyUseAPI": [], "Fixed commit": "b51d792089366a9744c6d9bf80ce7d3ecb78dc90", "Url": "https://api.github.com/repos/shahu/lehealth", "Date": "2015-07-12T03:20:43Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!hackyAsFuck) { gameObjects.add(duckies.pop()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4575/buggy-version/app.src.main.java.com.example.danie.ppd_final_project.GameEngine.java", "BodyUseAPI": [], "Fixed commit": "dfd6aefaeb0fbc186c9111af5e561073fe2596ab", "Url": "https://api.github.com/repos/danielenricocahall/Android-Duck-Hunt", "Date": "2017-12-09T22:55:53Z"},
{"Line": "=>424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((java.lang.Double.isInfinite(minValue)) || (java.lang.Double.isNaN(minValue))) || (java.lang.Double.isInfinite(maxValue))) || (java.lang.Double.isNaN(maxValue))) { throw new java.lang.RuntimeException(\"Bad values in trace file, can't calibrate\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2857/buggy-version/src.dr.gui.chart.Axis.java", "BodyUseAPI": [], "Fixed commit": "d7b128e940aba0c86e4d489fc7cbac7ba0b002fe", "Url": "https://api.github.com/repos/beast-dev/beast-mcmc", "Date": "2009-04-18T04:12:37Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((node.getNodeId()) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2405/buggy-version/src.org.exist.storage.dom.NodeIterator.java", "BodyUseAPI": [], "Fixed commit": "351b0c3009406af8ef2fe815080a4f236ce86814", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-08T23:56:08Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (line.matches(\"--.*\\\\w+.*--.*\\\\w+.*\")) { java.lang.String[] names = line.split(\"\\\\s*--\\\\s*\"); if (isGerman) { triggerTemplate.setTitle(names[2]); }else { triggerTemplate.setTitle(names[1]); } continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5423/buggy-version/illaeasyquest.src.main.java.illarion.easyquest.quest.TriggerTemplates.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "5cacdd10d04780ef3fee97720b8a063c55725ad1", "Url": "https://api.github.com/repos/mkaring/Illarion-Java", "Date": "2015-04-04T16:22:20Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line.isEmpty()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5423/buggy-version/illaeasyquest.src.main.java.illarion.easyquest.quest.TriggerTemplates.java", "BodyUseAPI": [], "Fixed commit": "5cacdd10d04780ef3fee97720b8a063c55725ad1", "Url": "https://api.github.com/repos/mkaring/Illarion-Java", "Date": "2015-04-04T16:22:20Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line.matches(\"local\\\\s+PRECONDITION_QUESTSTATE\\\\s*=\\\\s*0\\\\s*\")) { triggerTemplate.foundPrior(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5423/buggy-version/illaeasyquest.src.main.java.illarion.easyquest.quest.TriggerTemplates.java", "BodyUseAPI": [], "Fixed commit": "5cacdd10d04780ef3fee97720b8a063c55725ad1", "Url": "https://api.github.com/repos/mkaring/Illarion-Java", "Date": "2015-04-04T16:22:20Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line.matches(\"module.*\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5423/buggy-version/illaeasyquest.src.main.java.illarion.easyquest.quest.TriggerTemplates.java", "BodyUseAPI": [], "Fixed commit": "5cacdd10d04780ef3fee97720b8a063c55725ad1", "Url": "https://api.github.com/repos/mkaring/Illarion-Java", "Date": "2015-04-04T16:22:20Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line.matches(\"local\\\\s+POSTCONDITION_QUESTSTATE\\\\s*=\\\\s*0\\\\s*\")) { triggerTemplate.foundPosterior(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5423/buggy-version/illaeasyquest.src.main.java.illarion.easyquest.quest.TriggerTemplates.java", "BodyUseAPI": [], "Fixed commit": "5cacdd10d04780ef3fee97720b8a063c55725ad1", "Url": "https://api.github.com/repos/mkaring/Illarion-Java", "Date": "2015-04-04T16:22:20Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.omertron.subbabaapi.wrapper.SubBabaWrapper.getResults()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((listResults == null) || (listResults.isEmpty())) { return new com.omertron.subbabaapi.model.SubBabaMovie(); }else { com.omertron.subbabaapi.model.SubBabaResult sbResult = listResults.get(0); com.omertron.subbabaapi.model.SubBabaMovie sbMovie = sbResult.getMovie(); return sbMovie; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7891/buggy-version/src.main.java.com.omertron.subbabaapi.tools.ApiBuilder.java", "BodyUseAPI": ["java.util.List<com.omertron.subbabaapi.model.SubBabaResult>.get(int)"], "Fixed commit": "2a520ef66ef4ee19a5bb6b534b79cf0b0df9d527", "Url": "https://api.github.com/repos/Omertron/api-subbaba", "Date": "2012-11-27T10:43:08Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.configuration.Configuration.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"file\".equals(modeConf)) { dir = org.apache.lucene.store.FSDirectory.open(idxDir); }else if (\"mmap\".equals(modeConf)) { dir = org.apache.lucene.store.MMapDirectory.open(idxDir); }else if (\"nio\".equals(modeConf)) { dir = org.apache.lucene.store.NIOFSDirectory.open(idxDir); }else { dir = org.apache.lucene.store.FSDirectory.open(idxDir); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6190/buggy-version/zoie-perf.src.main.java.proj.zoie.perf.client.ZoiePerf.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "e243dcc510ebc5148a2c597a23a15d8f62ec3cc4", "Url": "https://api.github.com/repos/javasoze/zoie", "Date": "2011-11-09T06:36:58Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((menuItem.getItemId()) == (R.id.settings_credit_id)) { android.content.Intent intent = new android.content.Intent(this, pplb05.balgebun.costumer.MelihatKreditPembeli.class); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5949/buggy-version/app.src.main.java.pplb05.balgebun.costumer.BuyerActivity.java", "BodyUseAPI": [], "Fixed commit": "29b912b07b9866817608bbe7eeb53b46c35ec511", "Url": "https://api.github.com/repos/pplb05team/balgebun_app", "Date": "2016-05-01T08:30:34Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((msgCtx.getProperty(JMSConstants.JMS_XA_TRANSACTION_MANAGER)) != null) { transaction = ((javax.transaction.TransactionManager) (msgCtx.getProperty(JMSConstants.JMS_XA_TRANSACTION_MANAGER))).getTransaction(); rollbackXATransaction(transaction); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3944/buggy-version/modules.jms.src.main.java.org.apache.axis2.transport.jms.JMSSender.java", "BodyUseAPI": ["org.apache.axis2.context.MessageContext.getProperty(JMSConstants.JMS_XA_TRANSACTION_MANAGER)", "((javax.transaction.TransactionManager) (msgCtx.getProperty(JMSConstants.JMS_XA_TRANSACTION_MANAGER))).getTransaction()"], "Fixed commit": "3e40ddf5cc01ee2132205071347fb92b45b67db4", "Url": "https://api.github.com/repos/virajsenevirathne/wso2-axis2-transports", "Date": "2016-05-13T05:33:39Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.context.SecurityContext.getAuthentication()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (null != authentication) { java.lang.Object principal = authentication.getPrincipal(); if (principal instanceof org.debugroom.wedding.app.web.security.CustomUserDetails) { modelAndView.addObject(\"user\", ((org.debugroom.wedding.app.web.security.CustomUserDetails) (authentication.getPrincipal())).getUser()); }else { modelAndView.addObject(\"user\", org.debugroom.wedding.domain.entity.User.builder().userId(\"00000000\").authorityLevel(0).build()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7666/buggy-version/wedding-microservice.wedding-frontend.wedding-web-frontend.src.main.java.org.debugroom.wedding.app.web.interceptor.AddUserInfoInterceptor.java", "BodyUseAPI": ["((org.debugroom.wedding.app.web.security.CustomUserDetails) (authentication.getPrincipal())).getUser()", "org.springframework.web.servlet.ModelAndView.addObject(java.lang.String,((org.debugroom.wedding.app.web.security.CustomUserDetails) (authentication.getPrincipal())).getUser())", "org.springframework.security.core.Authentication.getPrincipal()", "org.springframework.security.core.Authentication.getPrincipal()"], "Fixed commit": "3e1ca466245fec18b5d271fbc897c56e7b650755", "Url": "https://api.github.com/repos/debugroom/wedding", "Date": "2017-11-11T08:33:55Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.ServletRequest.getResource()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(resource.getName().equals(JcrConstants.JCR_CONTENT))) { writer.write(((\"<button class=\\\"cms--edit-button\\\" data-cms-action=\\\"delete\\\" data-cms-path=\\\"\" + (resource.getPath())) + \"\\\">Delete</button>\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4453/buggy-version/core.src.main.java.org.apache.sling.cms.core.filters.EditIncludeFilter.java", "BodyUseAPI": ["org.apache.sling.api.resource.Resource.getPath()", "java.io.PrintWriter.write(((\"<button class=\\\"cms--edit-button\\\" data-cms-action=\\\"delete\\\" data-cms-path=\\\"\" + (resource.getPath())) + \"\\\">Delete</button>\"))"], "Fixed commit": "43a09c9bfb9a97fa020f5218a6d85b5c3a4547f9", "Url": "https://api.github.com/repos/klcodanr/sling-cms", "Date": "2017-04-18T02:47:12Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (topk > (community.users.size())) topk = community.users.size();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8581/buggy-version/src.main.java.paper.community.KOLLookup.java", "BodyUseAPI": ["community.users.size()"], "Fixed commit": "1390e32e7db2220b33ba641857832963f61aaa57", "Url": "https://api.github.com/repos/Lhfcws/master-paper", "Date": "2016-04-17T08:24:16Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (CloudImageIdentifier.DEFAULT_CLOUD_SERVICE.equals(node.getCloudService())) node.setCloudService(defaultCloudService);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5389/buggy-version/jar.src.main.java.com.sixsq.slipstream.run.RunListResource.java", "BodyUseAPI": ["com.sixsq.slipstream.persistence.Node.setCloudService(java.lang.String)"], "Fixed commit": "0886caf67dc655ac92de45a427d547072899110f", "Url": "https://api.github.com/repos/slipstream/SlipStreamServer", "Date": "2013-03-28T09:53:54Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (user == null) { return; }else { sysLog.setUserName(user.getName()); sysLog.setOperateTime(new java.util.Date()); sysLogService.save(sysLog); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3339/buggy-version/csc-task.csc-task-api.src.main.java.pres.haimi.csc.task.api.log.aop.SysLogAspect.java", "BodyUseAPI": ["pres.haimi.csc.task.model.common.SystemLog.setUserName(user.getName())", "pres.haimi.csc.task.model.user.PlainUser.getName()"], "Fixed commit": "1e689686c066584957b29813d699aee51441f779", "Url": "https://api.github.com/repos/HaimiZhou/csc-final", "Date": "2017-06-20T04:56:26Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getCause()) == (org.bukkit.event.entity.EntityDamageEvent.DamageCause.PROJECTILE)) { if ((event.getDamager()) instanceof org.bukkit.entity.Arrow) { org.bukkit.entity.Arrow arrow = ((org.bukkit.entity.Arrow) (event.getDamager())); if ((arrow.getShooter()) instanceof org.bukkit.entity.Player) { org.bukkit.entity.Player pvperPlayer = ((org.bukkit.entity.Player) (arrow.getShooter())); java.lang.String pvper = pvperPlayer.getName(); me.patrickfreed.EconomyPunga.EconomyPungaEventListener.data.put(victim.getName(), pvper); } } }else { me.patrickfreed.EconomyPunga.EconomyPungaEventListener.data.put(victim.getName(), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3436/buggy-version/src.me.patrickfreed.EconomyPunga.EconomyPungaEventListener.java", "BodyUseAPI": ["org.bukkit.event.entity.EntityDamageByEntityEvent.getDamager()", "org.bukkit.event.entity.EntityDamageByEntityEvent.getDamager()"], "Fixed commit": "101dcd388c9a4a041323d0164054e45f4089d8f7", "Url": "https://api.github.com/repos/patrickfreed/EconomyPunga", "Date": "2012-04-07T21:57:21Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((c >= 55296) && (c <= 57343)) && (i < ((s.length()) - 1))) { i++; int h = c; int l = s.charAt(i); int n = (((h - 55296) << 10) + (l - 56320)) + 65536; writer.write(((\"&#\" + n) + \";\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5883/buggy-version/src.org.kxml2.io.KXmlSerializer.java", "BodyUseAPI": ["java.lang.String.charAt(int)"], "Fixed commit": "49758b466ca9a20069bdab3518f6e4c8cb12d6b0", "Url": "https://api.github.com/repos/stefanhaustein/kxml2", "Date": "2017-08-18T20:48:44Z"},
{"Line": "=>598", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c > 65535) { int offset = c - 65536; txtBuf[((txtPos)++)] = ((char) ((offset >>> 10) + 55296)); txtBuf[((txtPos)++)] = ((char) ((offset & 1023) + 56320)); }else { txtBuf[((txtPos)++)] = ((char) (c)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5883/buggy-version/src.org.kxml2.io.KXmlParser.java", "BodyUseAPI": [], "Fixed commit": "49758b466ca9a20069bdab3518f6e4c8cb12d6b0", "Url": "https://api.github.com/repos/stefanhaustein/kxml2", "Date": "2017-08-18T20:48:44Z"},
{"Line": "=>717", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ast.getType()) != null) { lastPrimaryExpressionType = ast.getType().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6280/buggy-version/src.cager.jexpr.visitor.BoogieVisitor.java", "BodyUseAPI": ["cager.jexpr.ast.PrimaryExpression.getType()", "ast.getType().toString()"], "Fixed commit": "4b5df4c239c7ca3f32fd8b36805f0555d82e8bf5", "Url": "https://api.github.com/repos/ligianistor/Oprop", "Date": "2014-12-14T23:22:19Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["faultDetail.getAny().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(detailObj instanceof javax.xml.bind.JAXBElement)) { try { return new javax.xml.ws.soap.SOAPFaultException(javax.xml.soap.SOAPFactory.newInstance().createFault(message, fault.getFaultcode())); } catch (javax.xml.soap.SOAPException e) { throw new org.apache.camel.RuntimeCamelException(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3702/buggy-version/components.camel-soap.src.main.java.org.apache.camel.dataformat.soap.Soap11DataFormatAdapter.java", "BodyUseAPI": [], "Fixed commit": "d82e585d932b8454ba0ff03f80ba97cc7a7e2736", "Url": "https://api.github.com/repos/acartapanis/camel", "Date": "2017-04-02T23:32:13Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["faultDetail.getAny().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(detailObj instanceof javax.xml.bind.JAXBElement)) { try { return new javax.xml.ws.soap.SOAPFaultException(javax.xml.soap.SOAPFactory.newInstance().createFault(message, fault.getCode().getValue())); } catch (javax.xml.soap.SOAPException e) { throw new org.apache.camel.RuntimeCamelException(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3702/buggy-version/components.camel-soap.src.main.java.org.apache.camel.dataformat.soap.Soap12DataFormatAdapter.java", "BodyUseAPI": [], "Fixed commit": "d82e585d932b8454ba0ff03f80ba97cc7a7e2736", "Url": "https://api.github.com/repos/acartapanis/camel", "Date": "2017-04-02T23:32:13Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (json.containsKey(\"c\")) { json.remove(\"c\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6876/buggy-version/Server.src.main.java.net.simon987.server.webserver.SocketServer.java", "BodyUseAPI": ["org.json.simple.JSONObject.remove(java.lang.String)"], "Fixed commit": "08f1aa868667fce55c0678ab685dcad1e591526d", "Url": "https://api.github.com/repos/simon987/Much-Assembly-Required", "Date": "2017-12-30T21:29:39Z"},
{"Line": "=>1737", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.knowledgebase.util.KnowledgeBaseUtil.getUrlTitle(long,java.lang.String)", "com.liferay.portal.model.ModelHintsUtil.getMaxLength(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((urlTitle + suffix).length()) <= urlTitleMaxLength) { uniqueUrlTitle = urlTitle + suffix; }else { java.lang.String prefix = uniqueUrlTitle; if ((uniqueUrlTitle.length()) > (suffix.length())) { prefix = uniqueUrlTitle.substring(0, ((uniqueUrlTitle.length()) - (suffix.length()))); } uniqueUrlTitle = prefix + suffix; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1215/buggy-version/portlets.knowledge-base-portlet.docroot.WEB-INF.src.com.liferay.knowledgebase.service.impl.KBArticleLocalServiceImpl.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()", "java.lang.String.length()"], "Fixed commit": "dccb1a70c1278da60babac2cefd5986be398311c", "Url": "https://api.github.com/repos/mdelapenya/liferay-plugins", "Date": "2015-11-06T07:07:40Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (state.equals(GossipState.UP)) _ch.add(new lr.Node(member)); else _ch.remove(new lr.Node(member));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3464/buggy-version/src.main.java.lr.NodeService.java", "BodyUseAPI": [], "Fixed commit": "f72a78764cc8e5d5df6ecd5a4dd5787aa9bf871c", "Url": "https://api.github.com/repos/lucarin91/PAD-project", "Date": "2016-03-01T10:29:28Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mOriginalLenght) == 0) mCurrentLenght = 0; else mCurrentLenght = ((mOriginalStart) + (mOriginalLenght)) - (mCurrentStart);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7226/buggy-version/src.maximsblog.blogspot.com.timestatistic.SplitRecordDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "2fdb5e494400a4f24f6eeceb53fa8980ed9c5296", "Url": "https://api.github.com/repos/mksmbrtsh/timestatistic", "Date": "2013-12-20T06:44:42Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mOriginalLenght) == 0) mCurrentLenght = 0; else mCurrentLenght = ((mOriginalStart) + (mOriginalLenght)) - (mCurrentStart);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7226/buggy-version/src.maximsblog.blogspot.com.timestatistic.SplitRecordDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "2fdb5e494400a4f24f6eeceb53fa8980ed9c5296", "Url": "https://api.github.com/repos/mksmbrtsh/timestatistic", "Date": "2013-12-20T06:44:42Z"},
{"Line": "=>808", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.composerExtension.createFolderForFeatures()) { severity = org.eclipse.core.resources.IMarker.SEVERITY_ERROR; message = (\"The feature module \\\"\" + (folder.getName())) + \"\\\" has no corresponding feature at the feature model.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3295/buggy-version/plugins.de.ovgu.featureide.core.src.de.ovgu.featureide.core.internal.FeatureProject.java", "BodyUseAPI": [], "Fixed commit": "0f61cf1a36cc7c2bc5a9e96047cd51902a115003", "Url": "https://api.github.com/repos/tthuem/FeatureIDE", "Date": "2014-09-22T13:44:37Z"},
{"Line": "=>849", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (formIterator.getForm().isForceLocation()) { switchToProgressLocationMode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3376/buggy-version/app.src.main.java.org.cm.podd.report.activity.ReportActivity.java", "BodyUseAPI": [], "Fixed commit": "409bd11adf73bd3504c108b0aa9b22c2f7668860", "Url": "https://api.github.com/repos/openpodd/podd-android", "Date": "2017-07-14T03:01:02Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (i != null) tags.addAll(i.tags);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4215/buggy-version/src.com.elmokki.Generic.java", "BodyUseAPI": ["java.util.List<java.lang.String>.addAll(i.tags)"], "Fixed commit": "94f494e0703019df1b2db1ea909bcc848e522ffb", "Url": "https://api.github.com/repos/elmokki/nationgen", "Date": "2016-06-05T17:57:36Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasStudents) { groupsList.add(group); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1134/buggy-version/src.dao.StudentDAO.java", "BodyUseAPI": [], "Fixed commit": "9f11ed5fe22bc89226a501aedef6ee5ef71d7a4e", "Url": "https://api.github.com/repos/mustafa1453/StudentsTestProject", "Date": "2015-11-18T20:07:52Z"},
{"Line": "=>2029", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opencps.dossiermgt.service.impl.DossierLocalServiceImpl.findByPrimaryKey(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (dossier.getDossierStatus().equals(PortletConstants.DOSSIER_STATUS_NEW)) { dossier.setSubmitDatetime(now); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2329/buggy-version/portlets.opencps-portlet.docroot.WEB-INF.src.org.opencps.dossiermgt.service.impl.DossierLocalServiceImpl.java", "BodyUseAPI": ["org.opencps.dossiermgt.model.Dossier.setSubmitDatetime(java.util.Date)"], "Fixed commit": "d73e0e91f18c7ecdcebf0ad14ff97d7c1f23c9a8", "Url": "https://api.github.com/repos/VietOpenCPS/opencps", "Date": "2016-09-21T02:41:34Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dir.exists()) { java.io.File[] fileList = dir.listFiles(); for (int i = 0; i < (fileList.length); i++) { if (fileList[i].isDirectory()) { result += com.monmonja.library.utils.DirectoryUtils.getDirectorSize(fileList[i]); }else { result += fileList[i].length(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/305/buggy-version/src.main.java.com.monmonja.library.utils.DirectoryUtils.java", "BodyUseAPI": ["java.io.File.listFiles()"], "Fixed commit": "648e5380a52a11f4bacf989a8ddb17914d5cf577", "Url": "https://api.github.com/repos/monmonja/android-library", "Date": "2015-03-30T18:15:31Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.ethz.inf.dbproject.model.DatastoreInterface.getCaseById(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (aCase == null) { session.setAttribute(\"message\", \"This case doesn't exist any more\"); this.getServletContext().getRequestDispatcher(\"/Cases\").forward(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1074/buggy-version/IntroDBProject.src.ch.ethz.inf.dbproject.CaseServlet.java", "BodyUseAPI": [], "Fixed commit": "ec9cbdd723af26ba2df529d466955f981bb85015", "Url": "https://api.github.com/repos/dmdbgroup/law-enforcement-database", "Date": "2014-04-13T18:45:01Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fooddeliverysystem.ListInterface<fooddeliverysystem.Attendance>.getEntry(attdList.getNumberOfEntries())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(atd.getDate().equals(dateOnly.format(new java.util.Date())))) { att = new fooddeliverysystem.Attendance(((attdList.getEntry(attdList.getNumberOfEntries()).getAttendance_id()) + 1), emp.getEmp_id(), dateOnly.format(new java.util.Date()), timeOnly.format(new java.util.Date()), \"00:00:00\", \"00:00:00\", \"00:00:00\"); attdList.add(att); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5594/buggy-version/src.fooddeliverysystem.MainForm.java", "BodyUseAPI": ["java.text.SimpleDateFormat.format(java.util.Date)"], "Fixed commit": "eb924d0f134c8baf4a344a5bae5dbbc476f08fff", "Url": "https://api.github.com/repos/jiaweiloo/FoodDeliverySystem", "Date": "2017-12-17T14:43:11Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this._contact) == null) { finish(); }else { this.fillContactShow(); this.managePhoneNumbers(); this.manageEmailsAddress(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4313/buggy-version/SaltyContacts.SaltyContacts.src.main.java.com.mti.saltycontacts.activities.ContactShow.java", "BodyUseAPI": [], "Fixed commit": "fd650fd77e947b86da612da1a2ab01896765deac", "Url": "https://api.github.com/repos/SaltySoft/ContactsAndroid", "Date": "2013-11-24T20:08:59Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item == (org.json.JSONObject.NULL)) { item = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6813/buggy-version/src.jjs.stst.STStandaloneTool.java", "BodyUseAPI": [], "Fixed commit": "93dc9ab6fd60ff5bb14dc2338329dd4fe72d85b0", "Url": "https://api.github.com/repos/jsnyders/STSTv4", "Date": "2015-04-27T03:45:49Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (string == null) { string = \"Ch\"; }else if ((string.length()) > 0) string = string.substring(0, 1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/143/buggy-version/app.src.main.java.ir.rasen.charsoo.controller.image_loader.SimpleLoader.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "80fea024f1891f5b46610888d839d61d1cac6554", "Url": "https://api.github.com/repos/rasenir/charsoo", "Date": "2015-07-14T09:01:12Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (conversation.getOwner())) { setUserAvatar(conversation.getOwner(), viewHolder); }else { android.util.Log.e(\"SupportConversations\", (\"Owner is null for channel \" + (conversation.getChannel()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2445/buggy-version/Messenger.app.src.main.java.com.magnet.magnetchat.ui.adapters.SupportConversationsAdapter.java", "BodyUseAPI": ["android.util.Log.e(java.lang.String,(\"Owner is null for channel \" + (conversation.getChannel())))", "com.magnet.magnetchat.ui.adapters.SupportConversationsAdapter.setUserAvatar(conversation.getOwner(),com.magnet.magnetchat.ui.adapters.ConversationViewHolder)", "com.magnet.magnetchat.model.Conversation.getChannel()", "com.magnet.magnetchat.model.Conversation.getOwner()"], "Fixed commit": "9a475193dd9b041d3441cd577b5df9dee1bf50ac", "Url": "https://api.github.com/repos/magnetsystems/message-samples-android", "Date": "2016-02-18T21:52:46Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.strela.model.Athlete.getPerson()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(person.getLogin())) { ru.strela.model.auth.Person lastPerson = personService.findLastPerson(); if (lastPerson != null) { person.setLogin((\"user\" + ((lastPerson.getId()) + 1))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4103/buggy-version/src.main.java.ru.strela.service.impl.AthleteServiceImpl.java", "BodyUseAPI": ["ru.strela.model.auth.Person.setLogin((\"user\" + ((lastPerson.getId()) + 1)))"], "Fixed commit": "662182ac7f35d4e716e8e56bb2e339784e91e4b6", "Url": "https://api.github.com/repos/aisenpopov/strela", "Date": "2016-09-05T21:11:07Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.strela.model.Athlete.getPerson()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(person.getPassword())) { person.setPassword(ValidateUtils.DEFAULT_PASSWORD); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4103/buggy-version/src.main.java.ru.strela.service.impl.AthleteServiceImpl.java", "BodyUseAPI": ["ru.strela.model.auth.Person.setPassword(ValidateUtils.DEFAULT_PASSWORD)"], "Fixed commit": "662182ac7f35d4e716e8e56bb2e339784e91e4b6", "Url": "https://api.github.com/repos/aisenpopov/strela", "Date": "2016-09-05T21:11:07Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jcodec.containers.mp4.MP4Demuxer.DemuxerTrack.getEdits()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (edits == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8493/buggy-version/src.main.java.org.jcodec.movtool.Remux.java", "BodyUseAPI": [], "Fixed commit": "1f4ce375a9fcc774d1360160453aac250b770da1", "Url": "https://api.github.com/repos/jcodec/jcodec", "Date": "2013-05-26T20:26:17Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (search.getName().contains(\".dat\")) { try { com.timthebrick.tinystorage.common.core.TinyStorageLog.info(\"Adding player UUID to list\"); playerUUIDList.add(search.getName().replaceFirst(\"[.][^.]+$\", \"\")); playerUUIDMap.put(java.util.UUID.fromString(search.getName().replaceFirst(\"[.][^.]+$\", \"\")), net.minecraftforge.common.UsernameCache.getLastKnownUsername(java.util.UUID.fromString(search.getName().replaceFirst(\"[.][^.]+$\", \"\")))); } catch (java.lang.Exception e) { com.timthebrick.tinystorage.common.core.TinyStorageLog.error(e.getStackTrace()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3664/buggy-version/src.main.java.com.timthebrick.tinystorage.common.init.TinyStorageInitaliser.java", "BodyUseAPI": ["java.io.File.getName()", "java.io.File.getName()", "java.io.File.getName()", "java.lang.String.replaceFirst(java.lang.String,java.lang.String)", "java.lang.String.replaceFirst(java.lang.String,java.lang.String)", "java.util.List<java.lang.String>.add(java.lang.String)", "java.lang.String.replaceFirst(java.lang.String,java.lang.String)", "java.util.UUID.fromString(java.lang.String)", "java.util.HashMap<java.util.UUID, java.lang.String>.put(java.util.UUID,net.minecraftforge.common.UsernameCache.getLastKnownUsername(java.util.UUID.fromString(search.getName().replaceFirst(\"[.][^.]+$\", \"\"))))", "java.util.UUID.fromString(java.lang.String)", "net.minecraftforge.common.UsernameCache.getLastKnownUsername(java.util.UUID)"], "Fixed commit": "dba94f68bae68ef20bedcdffe20f44419eee6b0f", "Url": "https://api.github.com/repos/SmithsGaming/Tiny-Storage", "Date": "2015-09-22T20:53:26Z"},
{"Line": "=>1230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.BlockingQueue<java.lang.Runnable>.offer(com.hazelcast.partition.impl.InternalPartitionServiceImpl.MigrateTask)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!offered) { logger.severe((\"Failed to offer: \" + migrateTask)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7153/buggy-version/hazelcast.src.main.java.com.hazelcast.partition.impl.InternalPartitionServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "a8370f9322d001e9650b3d4132a4f5707a370674", "Url": "https://api.github.com/repos/pveentjer/hazelcast", "Date": "2014-03-20T19:12:13Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((tableContenu.getSelectedRow()) == (-1))) { ihm.Stock.materielTableModel.removeElement(tableContenu.getSelectedRow()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/56/buggy-version/src.ihm.Stock.java", "BodyUseAPI": ["escrim.model.table.MaterielTableModel.removeElement(int)", "javax.swing.JTable.getSelectedRow()"], "Fixed commit": "0fca9263d52b89e77df7d30087ab4f298a307d8f", "Url": "https://api.github.com/repos/EmaJavaProject/projet_escrim", "Date": "2015-06-25T23:25:23Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((movieDetails) != null) { android.util.Log.d(\"MyDebug\", (\"called getStoryLine while storyline was \" + (movieDetails.getStoryLine()))); return movieDetails.getStoryLine(); }else { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1889/buggy-version/MovieMaster.app.src.main.java.com.master.movie.moviemaster.moviedetails.MovieDetailsViewModel.java", "BodyUseAPI": [], "Fixed commit": "f14951bd2956db969897f20e75e26416c41aea9d", "Url": "https://api.github.com/repos/stefan11091991/masterRadAndroid", "Date": "2017-07-23T20:46:50Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (event != null) { writeEventParameters(event, writer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5804/buggy-version/org.eclipse.kEEPER.plugin.txtconverter.src.txtconverter.Transformer.java", "BodyUseAPI": ["txtconverter.Transformer.writeEventParameters(model.ComplexEvent,java.io.PrintWriter)"], "Fixed commit": "cdb4f6baf1ae01b2788c193ba41825057b2ee134", "Url": "https://api.github.com/repos/lpasquale/kEEPER", "Date": "2017-06-14T16:18:59Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["factory.ObjectFactory.createWeaponFromString(wp.getString(\"type\"),java.lang.Object[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (weapon == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2112/buggy-version/src.factory.ObjectFactory.java", "BodyUseAPI": [], "Fixed commit": "87d1de72768b61d03a82797e3652df5007f77413", "Url": "https://api.github.com/repos/johanbrook/medioqre", "Date": "2012-05-07T09:26:38Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (out)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6311/buggy-version/src.com.strategy.util.operation.Bdd.java", "BodyUseAPI": [], "Fixed commit": "6afd75756952c04073139c11ce9f329bd81e5028", "Url": "https://api.github.com/repos/rduerig/StrategyBDD", "Date": "2013-07-16T18:12:22Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (proxy.ProxyServer.getCache().containsKey(httpReq.getHost())) { ostream.write(proxy.ProxyServer.getCache().get(httpReq.getHost()).getData()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4740/buggy-version/src.proxy.ProxyThread.java", "BodyUseAPI": ["proxy.HTTPRequest.getHost()", "java.io.OutputStream.write(proxy.ProxyServer.getCache().get(httpReq.getHost()).getData())", "proxy.ProxyServer.getCache().get(httpReq.getHost()).getData()", "proxy.ProxyServer.getCache().get(httpReq.getHost())"], "Fixed commit": "5a74209d7cc92f80c8addfe621f78daeffca95da", "Url": "https://api.github.com/repos/kewle003/proxy", "Date": "2014-04-22T04:35:01Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (loc_end == (-1)) { loc = json.indexOf(\"\\\"title\\\": \"); tmp = json.substring((loc + 10)); loc_end = tmp.indexOf(\"\\\"\"); tmp = tmp.substring(0, loc_end); }else { tmp = tmp.substring(0, (loc_end - 1)); tmp = tmp.replace(\"\\\", \\\"\", \"/\"); tmp = tmp.replace(\"\\\\\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3177/buggy-version/movieInfoGen.movieInfoGen.movieInfoGen.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "2248ba84af1623c3e7cb0716d2aecf08063a05e4", "Url": "https://api.github.com/repos/FunctionXJB/movieInfoGen", "Date": "2017-12-01T09:12:17Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (waitTime == 0) { latch.await(); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8564/buggy-version/cougar-framework.cougar-core-api.src.main.java.com.betfair.cougar.core.api.ev.WaitingObserver.java", "BodyUseAPI": [], "Fixed commit": "b0699b3660ce429b1990839bbb7fb0ca30802247", "Url": "https://api.github.com/repos/betfair/cougar", "Date": "2013-12-07T11:06:58Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lenRemaining != 0) throw new java.lang.RuntimeException(\"Error with the remote request\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4136/buggy-version/jsonrpc-java.src.main.java.org.json.rpc.server.TcpServerTransport.java", "BodyUseAPI": [], "Fixed commit": "ed0c91267d278d2886daeecc1b7bc69c78b23c14", "Url": "https://api.github.com/repos/algobardo/jsonrpc", "Date": "2015-02-23T08:47:07Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(view.isEditable())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1080/buggy-version/RequirementsManager.src.edu.wpi.cs.wpisuitetng.modules.requirementsmanager.view.RequirementsTable.java", "BodyUseAPI": [], "Fixed commit": "9861e4a6698bcda3ea3d12729538299477765708", "Url": "https://api.github.com/repos/333fred/wpi-suite-tng", "Date": "2013-04-18T22:09:24Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((marqueeInfo) == null) || ((textParts.size()) == 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6634/buggy-version/library.src.main.java.com.potterhsu.marqueetextview.MarqueeTextFragment.java", "BodyUseAPI": [], "Fixed commit": "b8c56bd629f141aadfe847d0dd629a936e2b8657", "Url": "https://api.github.com/repos/potterhsu/MarqueeTextView", "Date": "2017-04-17T08:52:47Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getPlayer().getLocation().getPitch()) <= (-45)) backLocation.add(0, (-2.5), 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2843/buggy-version/src.main.java.net.gravitydevelopment.anticheat.util.CheckerNPCS.java", "BodyUseAPI": [], "Fixed commit": "4cc8ec938011e57d2ecd7dd9f0fa04683f29dcb4", "Url": "https://api.github.com/repos/Rammelkast/AntiCheatReloaded", "Date": "2016-05-30T17:04:46Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((repository) == null) || ((sourceTree) == null)) || ((targetTree) == null)) { return new com.microsoft.gittf.core.tasks.pendDiff.TfsFolderRenameDetector(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1930/buggy-version/com.microsoft.gittf.core.src.main.java.com.microsoft.gittf.core.tasks.pendDiff.CheckinAnalysisChangeCollection.java", "BodyUseAPI": [], "Fixed commit": "867019e845d32fa2abca8d699dcf3e8fcb87c891", "Url": "https://api.github.com/repos/PKRoma/gittf", "Date": "2012-10-05T13:57:16Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ice.getCurrentItem()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8591/buggy-version/src.io.github.yannici.bedwars.Listener.PlayerListener.java", "BodyUseAPI": [], "Fixed commit": "1f414278c6c55026512909429948385adea7d435", "Url": "https://api.github.com/repos/BedwarsRel/BedwarsRel", "Date": "2015-04-25T11:07:35Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCallback) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2318/buggy-version/onehookinclibrary.src.main.java.com.onehook.app.OHAlertDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "6e541e0fddb79ea8a0870bc4e09235f6bef7431c", "Url": "https://api.github.com/repos/oneHook/oneHookLibraryAndroid", "Date": "2016-04-29T22:53:39Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCallback) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2318/buggy-version/onehookinclibrary.src.main.java.com.onehook.app.OHAlertDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "6e541e0fddb79ea8a0870bc4e09235f6bef7431c", "Url": "https://api.github.com/repos/oneHook/oneHookLibraryAndroid", "Date": "2016-04-29T22:53:39Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCallback) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2318/buggy-version/onehookinclibrary.src.main.java.com.onehook.app.OHAlertDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "6e541e0fddb79ea8a0870bc4e09235f6bef7431c", "Url": "https://api.github.com/repos/oneHook/oneHookLibraryAndroid", "Date": "2016-04-29T22:53:39Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (references != null) for (org.apache.felix.scr.Reference r : references) results.add(org.eclipse.ecf.mgmt.scr.ComponentReferenceMTO.createMTO(r));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/83/buggy-version/bundles.org.eclipse.ecf.mgmt.scr.src.org.eclipse.ecf.mgmt.scr.ComponentReferenceMTO.java", "BodyUseAPI": [], "Fixed commit": "26fc5a7e6ed75190eed2f7de5ffbb266f07b26b8", "Url": "https://api.github.com/repos/ECF/OSGIRemoteManagement", "Date": "2015-02-22T00:42:47Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((displayedMovie) != null) { updateUI(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8954/buggy-version/src.fr.neamar.cinetime.fragments.DetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "75839723b1a7cafcac99fb6cf72b761fc20ee465", "Url": "https://api.github.com/repos/Neamar/CineTime", "Date": "2013-02-23T16:36:28Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sun.tools.javac.util.JCDiagnostic.getDiagnosticSource()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (source != null) { javax.tools.JavaFileObject file = source.getFile(); if ((file instanceof com.redhat.ceylon.compiler.codegen.CeylonFileObject) && ((diagnostic.getType()) == (com.sun.tools.javac.util.JCDiagnostic.DiagnosticType.ERROR))) { (((com.redhat.ceylon.compiler.codegen.CeylonFileObject) (file)).errors)++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2912/buggy-version/src.com.redhat.ceylon.compiler.tools.CeylonLog.java", "BodyUseAPI": ["com.sun.tools.javac.util.JCDiagnostic.DiagnosticSource.getFile()"], "Fixed commit": "125d501df5fba808a3d24797a11cabee3fa9328a", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2011-12-15T17:35:49Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.apache.commons.lang.StringUtils.isBlank(connectionUrl))) { return connectionUrl; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8832/buggy-version/src.main.java.com.e_gineering.maven.gitflowhelper.ScmUtils.java", "BodyUseAPI": [], "Fixed commit": "d2eb0e69da0574350e8784ac1d6e4a36668ea3d8", "Url": "https://api.github.com/repos/egineering-llc/gitflow-helper-maven-plugin", "Date": "2017-05-24T15:51:02Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.uci.ics.crawler4j.url.URLCanonicalizer.getCanonicalURL(url.getURL())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (canonicalUrl == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8236/buggy-version/src.main.java.cloudwalk.slave.crawler.Dupefilter.java", "BodyUseAPI": [], "Fixed commit": "2ea9be15eb5fa34c39a89ad4765ce0718a81c59b", "Url": "https://api.github.com/repos/jxdalang/cloud-crawler", "Date": "2016-02-22T16:33:32Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((url.getURL()) == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8236/buggy-version/src.main.java.cloudwalk.slave.crawler.Dupefilter.java", "BodyUseAPI": [], "Fixed commit": "2ea9be15eb5fa34c39a89ad4765ce0718a81c59b", "Url": "https://api.github.com/repos/jxdalang/cloud-crawler", "Date": "2016-02-22T16:33:32Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((ingredients.size()) == 0) || ((instructions.size()) == 0)) { if (((ingredients.size()) == 0) && ((instructions.size()) == 0)) { android.widget.Toast.makeText(v.getContext(), \"Please enter some ingredients and instructions!\", Toast.LENGTH_LONG).show(); }else if (((ingredients.size()) == 0) && ((instructions.size()) != 0)) { android.widget.Toast.makeText(v.getContext(), \"Please enter some ingredients!\", Toast.LENGTH_LONG).show(); }else if (((ingredients.size()) != 0) && ((instructions.size()) == 0)) { android.widget.Toast.makeText(v.getContext(), \"Please enter some instructions!\", Toast.LENGTH_LONG).show(); } }else if ((recipeName.getText().toString().length()) == 0) { android.widget.Toast.makeText(v.getContext(), \"Please enter a name for your recipe!\", Toast.LENGTH_LONG).show(); }else { davidchan.pocketchef.Recipe newRecipe = new davidchan.pocketchef.Recipe(recipeName.getText().toString(), ingredients, instructions, 0); recipes.add(newRecipe); android.content.Intent data = new android.content.Intent(); android.os.Bundle recipeData = new android.os.Bundle(); recipeData.putSerializable(\"recipes\", ((java.io.Serializable) (recipes))); data.putExtra(\"recipeData\", recipeData); setResult(Activity.RESULT_OK, data); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5872/buggy-version/app.src.main.java.davidchan.pocketchef.AddRecipeActivity.java", "BodyUseAPI": ["java.util.List<davidchan.pocketchef.Ingredient>.size()", "java.util.List<davidchan.pocketchef.Instruction>.size()", "java.util.List<davidchan.pocketchef.Instruction>.size()", "java.util.List<davidchan.pocketchef.Instruction>.size()", "java.util.List<davidchan.pocketchef.Ingredient>.size()", "java.util.List<davidchan.pocketchef.Ingredient>.size()"], "Fixed commit": "76ad5a33527841cc8d33cc2ee3e67694a7a65195", "Url": "https://api.github.com/repos/DavidKhmerChan/Pocket-Chef", "Date": "2016-10-02T14:51:35Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (json.containsKey(ru.spbau.shavkunov.primitives.VIEWS.toString())) { views = ((int) (((java.util.Map) (json.get(ru.spbau.shavkunov.primitives.VIEWS.toString()))).get(\"count\"))); }else { views = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1780/buggy-version/internal-core.src.main.java.ru.spbau.shavkunov.primitives.Post.java", "BodyUseAPI": [], "Fixed commit": "3728e239268884e793280b3f2bd6d1810e6ff95c", "Url": "https://api.github.com/repos/shavkunov/vk-analyzer", "Date": "2017-08-18T17:21:00Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (map.containsKey(quantity.toString())) { return ((java.util.Map) (map.get(quantity.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1780/buggy-version/internal-core.src.main.java.ru.spbau.shavkunov.primitives.Statistics.java", "BodyUseAPI": ["java.util.Map.get(quantity.toString())", "ru.spbau.shavkunov.primitives.PostQuantity.PostQuantity.toString()"], "Fixed commit": "3728e239268884e793280b3f2bd6d1810e6ff95c", "Url": "https://api.github.com/repos/shavkunov/vk-analyzer", "Date": "2017-08-18T17:21:00Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (json.containsKey(quantity.toString())) { return ((java.lang.Integer) (((java.util.Map) (json.get(quantity.toString()))).get(\"count\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1780/buggy-version/internal-core.src.main.java.ru.spbau.shavkunov.primitives.Statistics.java", "BodyUseAPI": ["ru.spbau.shavkunov.primitives.PostQuantity.PostQuantity.toString()", "java.lang.Object.get(java.lang.String)", "java.util.Map.get(quantity.toString())"], "Fixed commit": "3728e239268884e793280b3f2bd6d1810e6ff95c", "Url": "https://api.github.com/repos/shavkunov/vk-analyzer", "Date": "2017-08-18T17:21:00Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (key.hasNextLine()) { java.lang.String input = ((myName) + \": \") + (key.nextLine()); web.MessageHolder.AddMessageToSend(web.Message.MessageFactoryStringToB64(Message.typeEnum.Chat, input)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3056/buggy-version/src.web.Chat.java", "BodyUseAPI": ["java.util.Scanner.nextLine()"], "Fixed commit": "c628e7fb408a49424771b67fe6566a9fcf039402", "Url": "https://api.github.com/repos/wiresboy/Java-Game-APCS", "Date": "2015-05-12T22:36:24Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (main.GamePanel.debug) { java.lang.System.out.println(\"Loaded map : \"); for (tile.Tile[] tiles : map) { java.lang.System.out.println(java.util.Arrays.toString(tiles)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3056/buggy-version/src.map.Map.java", "BodyUseAPI": [], "Fixed commit": "c628e7fb408a49424771b67fe6566a9fcf039402", "Url": "https://api.github.com/repos/wiresboy/Java-Game-APCS", "Date": "2015-05-12T22:36:24Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (main.GamePanel.debug) java.lang.System.out.println((((\"list.get(0).length()/2 = \" + ((list.get(0).length()) / 2)) + \";; s.length()-2 = \") + ((list.get(0).length()) - 2)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3056/buggy-version/src.map.Map.java", "BodyUseAPI": [], "Fixed commit": "c628e7fb408a49424771b67fe6566a9fcf039402", "Url": "https://api.github.com/repos/wiresboy/Java-Game-APCS", "Date": "2015-05-12T22:36:24Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (main.GamePanel.debug) java.lang.System.out.println((((\"row = \" + row) + \" column = \") + column));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3056/buggy-version/src.map.Map.java", "BodyUseAPI": [], "Fixed commit": "c628e7fb408a49424771b67fe6566a9fcf039402", "Url": "https://api.github.com/repos/wiresboy/Java-Game-APCS", "Date": "2015-05-12T22:36:24Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((it.polimi.dima.bookshare.amazon.CognitoSyncClientManager.getCredentialsProvider()) == null) { it.polimi.dima.bookshare.amazon.CognitoSyncClientManager.init(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8800/buggy-version/app.src.main.java.it.polimi.dima.bookshare.activities.RequestsActivity.java", "BodyUseAPI": [], "Fixed commit": "28f95510744bf78f9feea32d9639a557a97ae0cb", "Url": "https://api.github.com/repos/alessioros/BookShare", "Date": "2016-06-26T17:00:59Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((iCountOccurence) != 0) { txtResultFilter.setText((((txtResultFilter.getText()) + \"\\nNumber of files matching filter(s) : \") + (iCountOccurence))); }else { txtResultFilter.setText((((txtResultFilter.getText()) + \"\\nNumber of files matching filter(s) : \") + (iCountOccurence))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4872/buggy-version/app.src.main.java.com.lejeune.david.ardovlamdocumentlibrary.FilterActivity.java", "BodyUseAPI": ["android.widget.TextView.setText((((txtResultFilter.getText()) + \"\\nNumber of files matching filter(s) : \") + (iCountOccurence)))", "android.widget.TextView.setText((((txtResultFilter.getText()) + \"\\nNumber of files matching filter(s) : \") + (iCountOccurence)))"], "Fixed commit": "32d9e3245b488dad945ab06e54a8bbccc8ccc882", "Url": "https://api.github.com/repos/DavidLejeune/ArdovlamDocumentLibrary", "Date": "2017-03-14T19:59:30Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((iCountOccurence) != 0) { txtResultFilter.setText((((txtResultFilter.getText()) + \"\\nNumber of files matching filter(s) : \") + (iCountOccurence))); }else { resetTxtResult(); txtResultFilter.setText((((txtResultFilter.getText()) + \"\\nNumber of files matching filter(s) : \") + (iCountOccurence))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4872/buggy-version/app.src.main.java.com.lejeune.david.ardovlamdocumentlibrary.FilterActivity.java", "BodyUseAPI": ["android.widget.TextView.setText((((txtResultFilter.getText()) + \"\\nNumber of files matching filter(s) : \") + (iCountOccurence)))", "android.widget.TextView.setText((((txtResultFilter.getText()) + \"\\nNumber of files matching filter(s) : \") + (iCountOccurence)))"], "Fixed commit": "32d9e3245b488dad945ab06e54a8bbccc8ccc882", "Url": "https://api.github.com/repos/DavidLejeune/ArdovlamDocumentLibrary", "Date": "2017-03-14T19:59:30Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((iCountOccurence) != 0) { txtResultFilter.setText((((txtResultFilter.getText()) + \"\\nNumber of files matching filter(s) : \") + (iCountOccurence))); }else { txtResultFilter.setText((((txtResultFilter.getText()) + \"\\nNumber of files matching filter(s) : \") + (iCountOccurence))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4872/buggy-version/app.src.main.java.com.lejeune.david.ardovlamdocumentlibrary.FilterActivity.java", "BodyUseAPI": ["android.widget.TextView.setText((((txtResultFilter.getText()) + \"\\nNumber of files matching filter(s) : \") + (iCountOccurence)))", "android.widget.TextView.setText((((txtResultFilter.getText()) + \"\\nNumber of files matching filter(s) : \") + (iCountOccurence)))"], "Fixed commit": "32d9e3245b488dad945ab06e54a8bbccc8ccc882", "Url": "https://api.github.com/repos/DavidLejeune/ArdovlamDocumentLibrary", "Date": "2017-03-14T19:59:30Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIsFirstTrainSet) { mCurrentTrainStartTime = 0; mIsFirstTrainSet = false; }else { mCurrentTrainStartTime = mStopWatcher.getCurrentTime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8504/buggy-version/app.src.main.java.com.example.mentalmath.trainings.SimpleStopWatchField.java", "BodyUseAPI": [], "Fixed commit": "137f584f5d12e920097a486eb6b1aeb3d1e0300d", "Url": "https://api.github.com/repos/Roman-Markov/probe", "Date": "2017-10-03T06:06:52Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (satsversion == null) { satsversion = \"(UNKNOWN VERSION)\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8147/buggy-version/src.main.java.org.spectrumauctions.sats.core.bidfile.CatsExporter.java", "BodyUseAPI": [], "Fixed commit": "b04a1c7616e193bbc39934d65b9f2551a464cf38", "Url": "https://api.github.com/repos/spectrumauctions/sats", "Date": "2017-05-05T20:10:23Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["systemic.sif3.demo.rest.provider.StudentPersonalProvider.fetchStudents(java.util.HashMap<java.lang.String, sif.dd.au30.model.StudentPersonalType>,sif3.common.model.PagingInfo)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (studentList != null) { studentCollection.getStudentPersonal().addAll(studentList); return studentCollection; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/9107/buggy-version/SIF3InfraREST.demo.src.systemic.sif3.demo.rest.provider.StudentPersonalProvider.java", "BodyUseAPI": ["studentCollection.getStudentPersonal().addAll(java.util.ArrayList<sif.dd.au30.model.StudentPersonalType>)"], "Fixed commit": "62282a1c68e374f3ffb7e604287a2be00e5256c7", "Url": "https://api.github.com/repos/nsip/sif3-framework-java", "Date": "2015-02-05T02:27:47Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["systemic.sif3.demo.rest.provider.StudentPersonalProvider.fetchStudents(java.util.HashMap<java.lang.String, sif.dd.au30.model.StudentPersonalType>,sif3.common.model.PagingInfo)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (studentList != null) { studentCollection.getStudentPersonal().addAll(studentList); return studentCollection; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/9107/buggy-version/SIF3InfraREST.demo.src.systemic.sif3.demo.rest.provider.StudentPersonalProvider.java", "BodyUseAPI": ["studentCollection.getStudentPersonal().addAll(java.util.ArrayList<sif.dd.au30.model.StudentPersonalType>)"], "Fixed commit": "62282a1c68e374f3ffb7e604287a2be00e5256c7", "Url": "https://api.github.com/repos/nsip/sif3-framework-java", "Date": "2015-02-05T02:27:47Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (codeFragment.replaceAll(\"\\\\s+\", \"\").equalsIgnoreCase(\"{}\".replaceAll(\"\\\\s+\", \"\"))) return il.org.spartan.spartanizer.cmdline.GuessedContext.EMPTY_BLOCK_LOOK_ALIKE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6418/buggy-version/src.main.java.il.org.spartan.spartanizer.cmdline.GuessedContext.java", "BodyUseAPI": [], "Fixed commit": "9d403eff25ad3145c141794828ceeec42cc58f0a", "Url": "https://api.github.com/repos/SpartanRefactoring/Main", "Date": "2016-11-14T07:17:23Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tokenType == (name.martingeisse.javapot.input.PotSpecificationElementTypes.START)) { return PotTextAttributeKeys.KEYWORD; }else if (tokenType == (name.martingeisse.javapot.input.PotSpecificationElementTypes.DOT)) { return PotTextAttributeKeys.DOT; }else if (tokenType == (name.martingeisse.javapot.input.PotSpecificationElementTypes.COMMA)) { return PotTextAttributeKeys.COMMA; }else if (tokenType == (name.martingeisse.javapot.input.PotSpecificationElementTypes.QUESTION_MARK)) { return PotTextAttributeKeys.QUESTION_MARK; }else if (tokenType == (name.martingeisse.javapot.input.PotSpecificationElementTypes.ASTERISK)) { return PotTextAttributeKeys.ASTERISK; }else if (tokenType == (name.martingeisse.javapot.input.PotSpecificationElementTypes.PLUS)) { return PotTextAttributeKeys.PLUS; }else if (tokenType == (name.martingeisse.javapot.input.PotSpecificationElementTypes.BAR)) { return PotTextAttributeKeys.BAR; }else if (tokenType == (name.martingeisse.javapot.input.PotSpecificationElementTypes.COLON)) { return PotTextAttributeKeys.COLON; }else if (tokenType == (name.martingeisse.javapot.input.PotSpecificationElementTypes.COLON_COLON_EQUALS)) { return PotTextAttributeKeys.COLON_COLON_EQUALS; }else if (tokenType == (name.martingeisse.javapot.input.PotSpecificationElementTypes.SEMICOLON)) { return PotTextAttributeKeys.SEMICOLON; }else if (tokenType == (com.intellij.psi.TokenType.BAD_CHARACTER)) { return PotTextAttributeKeys.BAD_CHARACTER; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8904/buggy-version/src.name.martingeisse.javapot.ide.PotSyntaxHighlighterFactory.java", "BodyUseAPI": [], "Fixed commit": "27519a1e1160288b4314a13e02a8ceefff5ddfeb", "Url": "https://api.github.com/repos/MartinGeisse/java-pot", "Date": "2017-10-08T15:05:14Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ConfigManager.main.BroadcastProxyConnectionMessages) { net.cubespace.geSuit.managers.PlayerManager.sendBroadcast(ConfigManager.messages.PLAYER_CONNECT_PROXY.replace(\"{player}\", p.getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8888/buggy-version/src.main.java.net.cubespace.geSuit.listeners.PlayerListener.java", "BodyUseAPI": [], "Fixed commit": "85068afa5c0674a79025830f2d0306089cd0e766", "Url": "https://api.github.com/repos/AddstarMC/geSuit", "Date": "2015-03-26T06:07:39Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getCurrentView().getId()) == (R.id.back_view)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8519/buggy-version/app.src.main.java.xyz.whereuat.whereuat.ContactCard.java", "BodyUseAPI": [], "Fixed commit": "12a0c2c0691b8f5b8fbf06f7ff793118f89d4d16", "Url": "https://api.github.com/repos/whereuat/whereuat-android", "Date": "2016-04-17T20:10:15Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sourceforge.pmd.lang.symboltable.NameOccurrence.getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((location.getFirstParentOfType(net.sourceforge.pmd.lang.java.ast.ASTLambdaExpression.class)) != null) { violation = false; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/927/buggy-version/pmd-java.src.main.java.net.sourceforge.pmd.lang.java.rule.design.SingularFieldRule.java", "BodyUseAPI": [], "Fixed commit": "767c9aae7981b49e8aa499001cda7aa40b3d80bb", "Url": "https://api.github.com/repos/Monits/pmd", "Date": "2017-01-05T17:28:44Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(measurementValue)) { measurementValue = java.lang.Double.NEGATIVE_INFINITY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4568/buggy-version/Modern.utilities.src.main.java.org.bonej.utilities.ResultsInserter.java", "BodyUseAPI": [], "Fixed commit": "3ced9f6f1034e645c768fa6bdc0524e2d0340cd4", "Url": "https://api.github.com/repos/bonej-org/BoneJ2", "Date": "2016-06-02T14:59:12Z"},
{"Line": "=>561", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (obj instanceof com.orientechnologies.orient.core.index.OCompositeKey) { final com.orientechnologies.orient.core.index.OCompositeKey compositeKey = ((com.orientechnologies.orient.core.index.OCompositeKey) (obj)); keys = compositeKey.getKeys(); }else if (obj instanceof java.util.List) { keys = ((java.util.List<java.lang.Object>) (obj)); }else { throw new com.orientechnologies.orient.core.index.OIndexException((\"Impossible add as key of a CompositeIndex a value of type \" + (obj.getClass()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3708/buggy-version/core.src.main.java.com.orientechnologies.orient.core.index.OCompositeIndexDefinition.java", "BodyUseAPI": ["java.lang.Object.getClass()"], "Fixed commit": "a96f4e177c0c02c955ed8e8e31fdfee5bf643500", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-09-10T14:11:10Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.read()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.lang.Character.isDigit(c)) { type = Token.TokenType.ERROR; }else { inFile.reset(); save = false; type = Token.TokenType.ID; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/395/buggy-version/src.livelyrussell.Scanner.CMinusScanner.java", "BodyUseAPI": [], "Fixed commit": "722e9cf261c96c53f2e8edd3ddd9a6022c6312d0", "Url": "https://api.github.com/repos/richlively/C-Minus-Compiler", "Date": "2017-02-08T17:45:07Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"Folder\".equalsIgnoreCase(getView().getViewType())) { org.ednovo.gooru.application.client.gin.AppClientFactory.getInjector().getfolderService().getFolderMetaData(folderId, new org.ednovo.gooru.client.SimpleAsyncCallback<org.ednovo.gooru.application.shared.model.folder.FolderDo>() { @java.lang.Override public void onSuccess(org.ednovo.gooru.application.shared.model.folder.FolderDo result) { folderMetaData = result; getChildFolderItems(folderId, \"folder\", false, null); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2877/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.gshelf.ShelfMainPresenter.java", "BodyUseAPI": [], "Fixed commit": "c5eb6f136f0c66ad9d3a6a2d2479b406d7fce135", "Url": "https://api.github.com/repos/hari45/Gooru-Web", "Date": "2015-08-21T10:22:27Z"},
{"Line": "=>587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.structr.core.entity.SchemaNode.getProperty(org.structr.core.entity.SchemaNode)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.structr.core.entity.SchemaNode.EntityNameBlacklist.contains(typeName)) { throw new org.structr.common.error.FrameworkException(422, ((\"Type '\" + typeName) + \"' already exists. To prevent unwanted/unexpected behavior this is forbidden.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7194/buggy-version/structr-core.src.main.java.org.structr.core.entity.SchemaNode.java", "BodyUseAPI": [], "Fixed commit": "bff525ab91673f36f9d5e43acc55ccda48fa3b0a", "Url": "https://api.github.com/repos/structr/structr", "Date": "2017-07-03T08:09:19Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (count >= 10) { startHouse = ((int) (java.lang.Math.floor(((java.lang.Math.random()) * ((plazaStarts.size()) - 1))))); count = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7229/buggy-version/src.map.Map.java", "BodyUseAPI": [], "Fixed commit": "08f5a8ff58fb33b13f6e5f39a03fe93eab68f74b", "Url": "https://api.github.com/repos/pcjl/Project-Z", "Date": "2016-01-18T02:35:04Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (closeable == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7163/buggy-version/sos.sos-util.src.main.java.sorcer.util.IOUtils.java", "BodyUseAPI": [], "Fixed commit": "ba31e13127ff2e006ca778d15717eaeae92213a0", "Url": "https://api.github.com/repos/sorcersoft/sorcer", "Date": "2014-02-10T16:29:10Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minidev.json.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (x == null) { throw new btrplace.json.JSONConverterException(((\"No value at key '\" + id) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4325/buggy-version/json.src.main.java.btrplace.json.JSONUtils.java", "BodyUseAPI": [], "Fixed commit": "8c502c0d3f36bb9cffa255554290fb6711d7ae63", "Url": "https://api.github.com/repos/fhermeni/btrplace-solver", "Date": "2013-05-03T10:05:31Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minidev.json.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (x == null) { throw new btrplace.json.JSONConverterException(((\"No value at key '\" + id) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4325/buggy-version/json.src.main.java.btrplace.json.JSONUtils.java", "BodyUseAPI": [], "Fixed commit": "8c502c0d3f36bb9cffa255554290fb6711d7ae63", "Url": "https://api.github.com/repos/fhermeni/btrplace-solver", "Date": "2013-05-03T10:05:31Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minidev.json.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (x == null) { throw new btrplace.json.JSONConverterException(((\"No value at key '\" + id) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4325/buggy-version/json.src.main.java.btrplace.json.JSONUtils.java", "BodyUseAPI": [], "Fixed commit": "8c502c0d3f36bb9cffa255554290fb6711d7ae63", "Url": "https://api.github.com/repos/fhermeni/btrplace-solver", "Date": "2013-05-03T10:05:31Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ja.size()) < (start_index + 1)) { start_index = 9999; end_index = 9999; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4230/buggy-version/src.main.java.api.ListRoomAPI.java", "BodyUseAPI": [], "Fixed commit": "b249d71199c331a4ab9f8f680cf7058b1a264b79", "Url": "https://api.github.com/repos/kyeongwan/OneCardServer", "Date": "2016-06-06T08:08:11Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item.isMonthly) { addNewMonthlyItem = new net.dikky.kakeiboApp.domain.interactor.AddNewMonthlyItem(item); addNewMonthlyItem.executeIO(new net.dikky.kakeiboApp.presentation.presenter.AddNewMonthlyItemSubscriber()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2491/buggy-version/kakeiboApp.src.main.java.net.dikky.kakeiboApp.presentation.presenter.ItemNewPresenter.java", "BodyUseAPI": [], "Fixed commit": "76d48c1e5d7bdb143efddfc229b92d2f7d4edb85", "Url": "https://api.github.com/repos/dikky1218/kakeiboApp", "Date": "2016-08-02T16:15:03Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item.isMonthly) { addNewMonthlyItem = new net.dikky.kakeiboApp.domain.interactor.AddNewMonthlyItem(item); addNewMonthlyItem.executeIO(new net.dikky.kakeiboApp.presentation.presenter.AddNewMonthlyItemSubscriber()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2491/buggy-version/kakeiboApp.src.main.java.net.dikky.kakeiboApp.presentation.presenter.ItemUpdatePresenter.java", "BodyUseAPI": [], "Fixed commit": "76d48c1e5d7bdb143efddfc229b92d2f7d4edb85", "Url": "https://api.github.com/repos/dikky1218/kakeiboApp", "Date": "2016-08-02T16:15:03Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (js_multi_value != null) { com.google.gwt.core.client.JsArrayString js_string_array = js_multi_value.cast(); for (int i = 0; i < (js_string_array.length()); i++) { retValue.add(js_string_array.get(i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1198/buggy-version/src.main.java.org.gwtbootstrap3.extras.tagsinput.client.ui.base.TagsInputBase.java", "BodyUseAPI": ["com.google.gwt.core.client.JavaScriptObject.cast()"], "Fixed commit": "6d712b65a025847701d4297283ec2ea6832bb147", "Url": "https://api.github.com/repos/crevete/gwtbootstrap3-extras", "Date": "2016-08-08T12:05:16Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (containerSessionId != null) { url += \"&ContainerSessionID=\" + containerSessionId; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5617/buggy-version/java.orng-connector.src.main.java.edu.ucsf.orng.shindig.spi.RdfJsonLDService.java", "BodyUseAPI": [], "Fixed commit": "76121de939b33a5b1e8316bdb2a8069e6d7e4789", "Url": "https://api.github.com/repos/CTSIatUCSF/shindigorng", "Date": "2013-10-04T17:14:17Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cancelMenuItem) != null) cancelMenuItem.setVisible(show);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6698/buggy-version/evercamPlay.src.main.java.io.evercam.androidapp.ScanActivity.java", "BodyUseAPI": [], "Fixed commit": "416812cf4738dda4668235d916c54f389c77f98b", "Url": "https://api.github.com/repos/evercam/evercam-android", "Date": "2015-09-16T09:14:49Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((evercamCamera) != null) { if (evercamCamera.canDelete()) { new io.evercam.androidapp.tasks.DeleteCameraTask(evercamCamera.getCameraId(), this, EnumConstants.DeleteType.DELETE_OWNED).executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR); }else { new io.evercam.androidapp.tasks.DeleteCameraTask(evercamCamera.getCameraId(), this, EnumConstants.DeleteType.DELETE_SHARE).executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6698/buggy-version/evercamPlay.src.main.java.io.evercam.androidapp.ViewCameraActivity.java", "BodyUseAPI": [], "Fixed commit": "416812cf4738dda4668235d916c54f389c77f98b", "Url": "https://api.github.com/repos/evercam/evercam-android", "Date": "2015-09-16T09:14:49Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (locale.getCountry().equals(targetLocale.getCountry())) { return 3; }else if (targetLocale.getCountry().isEmpty()) { return 2; }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4139/buggy-version/src.main.java.net.dongliu.apk.parser.bean.Locales.java", "BodyUseAPI": ["java.util.Locale.getCountry()", "java.lang.String.isEmpty()"], "Fixed commit": "959550cb642eb09442a7cb5414e09efcc2159b95", "Url": "https://api.github.com/repos/hsiafan/apk-parser", "Date": "2015-06-30T04:34:32Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dp.hasDatePassed(startTime, startTime)) { startTime = dp.getNextDay(startTime); endTime = dp.getNextDay(endTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4189/buggy-version/src.tucklife.parser.Parser.java", "BodyUseAPI": ["tucklife.parser.DateParser.getNextDay(java.util.Calendar)", "tucklife.parser.DateParser.getNextDay(java.util.Calendar)"], "Fixed commit": "86b6cc2c7a3632737e4d7e3f74f7ca1da67fe019", "Url": "https://api.github.com/repos/cs2103jan2016-w09-2j/main", "Date": "2016-04-08T10:29:17Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p < sp) { zeroTest = idx << ((32 - sp) + p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/325/buggy-version/src.main.java.com.clearspring.analytics.stream.cardinality.HyperLogLogPlus.java", "BodyUseAPI": [], "Fixed commit": "a885356380996e9109c4d6875878d54568262cb9", "Url": "https://api.github.com/repos/clearspring/stream-lib", "Date": "2013-03-29T20:49:50Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((retainerFragment) == null) || ((retainerFragment.engine) == null)) || ((retainerFragment.engine.getRunState()) == (de.onyxbits.textfiction.zengine.ZMachine.STATE_RUNNING))) || ((retainerFragment.engine.getRunState()) == (de.onyxbits.textfiction.zengine.ZMachine.STATE_INIT))) { return super.onOptionsItemSelected(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2748/buggy-version/src.de.onyxbits.textfiction.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "0156e5c1e24ec91ae55bc27007ac380184a576f2", "Url": "https://api.github.com/repos/onyxbits/TextFiction", "Date": "2014-01-01T03:27:56Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.dmr.Property.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(entry.asString().equals(\"undefined\"))) PolicyDefinition.FILE.marshallAsAttribute(entry, true, writer);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1921/buggy-version/src.main.java.org.picketbox.jsmpolicy.subsystem.extension.JsmPolicyExtension.java", "BodyUseAPI": ["PolicyDefinition.FILE.marshallAsAttribute(org.jboss.dmr.ModelNode,boolean,org.jboss.staxmapper.XMLExtendedStreamWriter)"], "Fixed commit": "06d2fc27959ad584d0e08170a89c3aa29f44d0d9", "Url": "https://api.github.com/repos/honza889/jsm-policy-subsystem", "Date": "2014-03-08T17:54:55Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.dmr.Property.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(entry.asString().equals(\"undefined\"))) ServerDefinition.POLICY.marshallAsAttribute(entry, true, writer);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1921/buggy-version/src.main.java.org.picketbox.jsmpolicy.subsystem.extension.JsmPolicyExtension.java", "BodyUseAPI": ["ServerDefinition.POLICY.marshallAsAttribute(org.jboss.dmr.ModelNode,boolean,org.jboss.staxmapper.XMLExtendedStreamWriter)"], "Fixed commit": "06d2fc27959ad584d0e08170a89c3aa29f44d0d9", "Url": "https://api.github.com/repos/honza889/jsm-policy-subsystem", "Date": "2014-03-08T17:54:55Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (graph != null) init(graph);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8492/buggy-version/src.org.graphstream.algorithm.ConnectedComponents.java", "BodyUseAPI": [], "Fixed commit": "4485ac871341b5645897a0bb0d54ac1465ccb5bb", "Url": "https://api.github.com/repos/gjherbiet/gs-algo", "Date": "2011-02-11T23:14:30Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tomove == null) { tomove = graph.BasicGraphAlgorithms.BFS(getDecomposition().getGraph(), boolwidth.greedysearch.base.Util.getFirst(rights), rights); tomove = graph.BasicGraphAlgorithms.BFS(getDecomposition().getGraph(), tomove, rights); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2143/buggy-version/java.src.boolwidth.greedysearch.symdiff.SplitSymDiff.java", "BodyUseAPI": [], "Fixed commit": "17c33ba448474bc13845f4ab62ae17d3cfddb73e", "Url": "https://api.github.com/repos/emnh/boolwidth", "Date": "2014-11-17T08:16:11Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["verbPhrase.getType(betsy.grammar.OBJECT).getType(betsy.grammar.NOUN_PHRASE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (noun != null) subject.addChild(noun);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7819/buggy-version/src.betsy.grammar.RecursiveStructureParser.java", "BodyUseAPI": ["betsy.grammar.WordTree<betsy.grammar.StructureTag.StructureTag>.addChild(betsy.grammar.WordTree<betsy.grammar.StructureTag.StructureTag>)"], "Fixed commit": "fffca8ef151b9fccb714bbd05ffde530a6e31556", "Url": "https://api.github.com/repos/vanjac/Betsy", "Date": "2016-06-13T01:08:53Z"},
{"Line": "=>561", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.roughike.bottombar.BottomBar.getCurrentTab()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (oldTab != null) { oldTab.deselect(animate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/704/buggy-version/bottom-bar.src.main.java.com.roughike.bottombar.BottomBar.java", "BodyUseAPI": ["com.roughike.bottombar.BottomBarTab.deselect(boolean)"], "Fixed commit": "67c2717644e52b894c90fb2a51065d0b506df1da", "Url": "https://api.github.com/repos/Woodzyowl/BottomBar", "Date": "2017-08-16T16:17:18Z"},
{"Line": "=>964", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (oldTab != null) { oldTab.updateWidth(inActiveShiftingItemWidth, animate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/704/buggy-version/bottom-bar.src.main.java.com.roughike.bottombar.BottomBar.java", "BodyUseAPI": ["com.roughike.bottombar.BottomBarTab.updateWidth(int,boolean)"], "Fixed commit": "67c2717644e52b894c90fb2a51065d0b506df1da", "Url": "https://api.github.com/repos/Woodzyowl/BottomBar", "Date": "2017-08-16T16:17:18Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.names()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (arr == null) return json;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6852/buggy-version/src.com.jpush.examples.SampleReceNotification.java", "BodyUseAPI": [], "Fixed commit": "164413bb97d7b8c7675c5af205119b964cea9dcf", "Url": "https://api.github.com/repos/jpush/jpush-android-samples", "Date": "2014-03-11T13:20:08Z"},
{"Line": "=>1179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.util.FieldInfo.getFieldClass()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (propertyClass.isEnum()) { mw.visitVarInsn(com.alibaba.fastjson.serializer.ALOAD, context.var(\"enum\")); mw.visitMethodInsn(com.alibaba.fastjson.serializer.INVOKESTATIC, getType(com.alibaba.fastjson.serializer.FilterUtils.class), \"processKey\", \"(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;\"); }else if ((propertyClass == (java.util.List.class)) || (propertyClass == (java.util.ArrayList.class))) { mw.visitVarInsn(com.alibaba.fastjson.serializer.ALOAD, context.var(\"list\")); mw.visitMethodInsn(com.alibaba.fastjson.serializer.INVOKESTATIC, getType(com.alibaba.fastjson.serializer.FilterUtils.class), \"processKey\", \"(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;\"); }else { mw.visitVarInsn(com.alibaba.fastjson.serializer.ALOAD, context.var(\"object\")); mw.visitMethodInsn(com.alibaba.fastjson.serializer.INVOKESTATIC, getType(com.alibaba.fastjson.serializer.FilterUtils.class), \"processKey\", \"(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6324/buggy-version/src.main.java.com.alibaba.fastjson.serializer.ASMSerializerFactory.java", "BodyUseAPI": [], "Fixed commit": "ad6d97a36421ffbd94551af9b446b6ac6227681a", "Url": "https://api.github.com/repos/AlibabaTech/fastjson", "Date": "2012-04-25T09:26:29Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<?>.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((annotation != null) && ((annotation.asm()) == false)) { asm = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6324/buggy-version/src.main.java.com.alibaba.fastjson.serializer.SerializeConfig.java", "BodyUseAPI": [], "Fixed commit": "ad6d97a36421ffbd94551af9b446b6ac6227681a", "Url": "https://api.github.com/repos/AlibabaTech/fastjson", "Date": "2012-04-25T09:26:29Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, piilSource.Nodes>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (value.getNodeBgColor().equals(\"none\")) { theLabel.setBackground(java.awt.Color.WHITE); }else { theLabel.setBackground(java.awt.Color.decode(value.getNodeBgColor())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/137/buggy-version/src.piilSource.ParseKGML.java", "BodyUseAPI": ["java.awt.Color.decode(value.getNodeBgColor())", "javax.swing.JLabel.setBackground(java.awt.Color)", "piilSource.Nodes.getNodeBgColor()"], "Fixed commit": "cb29497159b95e3124e022b33f7fc6010130c918", "Url": "https://api.github.com/repos/behroozt/PiiL", "Date": "2016-06-09T15:23:40Z"},
{"Line": "=>1216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_skipMissing) && (java.lang.Double.isNaN(d))) row.predictors_bad = true; else row.addNum(((numStart()) + interactionOffset), d);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8088/buggy-version/h2o-algos.src.main.java.hex.DataInfo.java", "BodyUseAPI": ["hex.DataInfo.Row.addNum(int,double)"], "Fixed commit": "74fc2f7113c127698f90c5e9eddb157cd0dbe872", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2017-05-07T20:34:34Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((cardName.length()) > 3) { throw new java.lang.IllegalArgumentException(\"Malformed Card identifier\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1714/buggy-version/src.jcrib.cards.Card.java", "BodyUseAPI": [], "Fixed commit": "0d80e54a29818640cfea2a008e59eeefbf563c57", "Url": "https://api.github.com/repos/malensek/jcrib", "Date": "2014-02-10T21:49:18Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["client.smrtms.com.smrtms_client.activity.StartActivity.findViewById(R.id.timePicker)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (t != null) { Hour = t.getCurrentHour(); Min = t.getCurrentMinute(); android.text.format.Time now = new android.text.format.Time(); now.setToNow(); remainingTime = ((Hour - (now.hour)) * 60) + (Min - (now.minute)); if (remainingTime < 0) { remainingTime += 12 * 60; } }else { remainingTime = 120; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4528/buggy-version/app.src.main.java.client.smrtms.com.smrtms_client.activity.StartActivity.java", "BodyUseAPI": ["android.widget.TimePicker.getCurrentMinute()", "android.widget.TimePicker.getCurrentHour()"], "Fixed commit": "fab0d6e4bf576f3b8b1ffd03be28ff4c06f4632f", "Url": "https://api.github.com/repos/ethragur/SMRTMS", "Date": "2015-06-12T17:43:58Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.boostcamp.hyeon.wallpaper.base.util.SharedPreferenceHelper.getInstance().getBoolean(SharedPreferenceHelper.Key.BOOLEAN_FIRST_EXECUTION, true)) moveToIntroActivity();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/646/buggy-version/app.src.main.java.com.boostcamp.hyeon.wallpaper.main.view.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "dc2051f787c04a88f6cf3360e55e5cfa3f3845e8", "Url": "https://api.github.com/repos/Junhyeon2/Android-Cyclically-Changed-Wallpaper", "Date": "2017-03-08T13:43:48Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((city1 == 3) && (city2 == 5)) GA_Calculator.dist_matrix[city2][city1] = x - 10; else GA_Calculator.dist_matrix[city2][city1] = x;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2119/buggy-version/src.GA_Calculator.java", "BodyUseAPI": [], "Fixed commit": "22017a68e7f4c89494e1ded3e732d1a2c782845c", "Url": "https://api.github.com/repos/polltery/Genetic-algorithm-example-in-Java", "Date": "2015-11-03T09:33:03Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.ehcache.spi.ServiceLocator.findSingletonAmongst(org.ehcache.config.serializer.DefaultSerializationProviderConfiguration.class, config.getServiceConfigurations().toArray())) == null) { serviceLocator.addService(new org.ehcache.jsr107.DefaultJsr107SerializationProvider()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1958/buggy-version/107.src.main.java.org.ehcache.jsr107.EhcacheCachingProvider.java", "BodyUseAPI": [], "Fixed commit": "0554542148847c307eda21e5046002de9cb4ec3a", "Url": "https://api.github.com/repos/cljohnso/ehcache3", "Date": "2015-07-28T07:02:52Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((sportscourse.getStartDate()) != null) && ((sportscourse.getEndDate()) != null)) { android.widget.TextView timeperiod = ((android.widget.TextView) (findViewById(R.id.timeperiod))); java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(\" d MMM \", java.util.Locale.GERMAN); timeperiod.setText((((\"Zeitraum: \" + (sdf.format(sportscourse.getStartDate()))) + \"- \") + (sdf.format(sportscourse.getEndDate())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4901/buggy-version/FacultyInfo_App.src.de.uni_passau.facultyinfo.client.activity.DisplaySportsCourseActivity.java", "BodyUseAPI": ["de.uni_passau.facultyinfo.client.model.dto.SportsCourse.getEndDate()", "java.text.SimpleDateFormat.format(sportscourse.getStartDate())", "de.uni_passau.facultyinfo.client.model.dto.SportsCourse.getStartDate()", "java.text.SimpleDateFormat.format(sportscourse.getEndDate())", "android.widget.TextView.setText((((\"Zeitraum: \" + (sdf.format(sportscourse.getStartDate()))) + \"- \") + (sdf.format(sportscourse.getEndDate()))))"], "Fixed commit": "361725dba573e805b6767b57fffb8fc686a69544", "Url": "https://api.github.com/repos/TimoSta/FacultyInfo_Client", "Date": "2014-01-21T11:41:02Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN)) { preBuildNotification.setPriority(Notification.PRIORITY_MIN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5519/buggy-version/app.src.main.java.com.catchingnow.tinyclipboardmanager.CBWatcherService.java", "BodyUseAPI": [], "Fixed commit": "d52abed8d534fdc25ce6692c475d1c3aea7df85b", "Url": "https://api.github.com/repos/heruoxin/Clip-Stack", "Date": "2015-02-19T03:30:47Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN)) { htmlTextClipString = cb.getPrimaryClip().getItemAt(0).getHtmlText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5519/buggy-version/app.src.main.java.com.catchingnow.tinyclipboardmanager.CBWatcherService.java", "BodyUseAPI": [], "Fixed commit": "d52abed8d534fdc25ce6692c475d1c3aea7df85b", "Url": "https://api.github.com/repos/heruoxin/Clip-Stack", "Date": "2015-02-19T03:30:47Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cb.getPrimaryClip().getItemAt(0).getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (textClipString != null) { clipString = textClipString; }else { clipString = htmlTextClipString; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5519/buggy-version/app.src.main.java.com.catchingnow.tinyclipboardmanager.CBWatcherService.java", "BodyUseAPI": [], "Fixed commit": "d52abed8d534fdc25ce6692c475d1c3aea7df85b", "Url": "https://api.github.com/repos/heruoxin/Clip-Stack", "Date": "2015-02-19T03:30:47Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (time > 5) { text = R.string.time_ago_at_seconds; }else { text = R.string.time_ago_just_now; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5393/buggy-version/app.src.main.java.com.alorma.github.utils.TimeUtils.java", "BodyUseAPI": [], "Fixed commit": "0f7763e22ca0af2f990f20fcac48671a0499c785", "Url": "https://api.github.com/repos/gitskarios/Gitskarios", "Date": "2015-05-08T19:22:54Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) < 2) { env.out.println(this.manual()); return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3019/buggy-version/src.pi.interpreter.commands.Man.java", "BodyUseAPI": [], "Fixed commit": "132ae1d16ff2a28c243cd99415630bf35bc45165", "Url": "https://api.github.com/repos/sipi/Interpreter", "Date": "2012-06-15T13:44:00Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Constants.TABLE_INDEX_MAP.containsKey(indexColumnFamily)) { key = Constants.INDEX_KEY_MAP.get(Constants.TABLE_INDEX_MAP.get(indexColumnFamily)); }else { key = Constants.INDEX_KEY_MAP.get(indexColumnFamily); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/730/buggy-version/src.org.apache.cassandra.triggers.utils.java", "BodyUseAPI": ["Constants.INDEX_KEY_MAP.get(Constants.TABLE_INDEX_MAP.get(indexColumnFamily))", "Constants.TABLE_INDEX_MAP.get(java.lang.String)", "Constants.INDEX_KEY_MAP.get(java.lang.String)"], "Fixed commit": "af49ba9124ecd18cc82759c1df8af5e88565a65e", "Url": "https://api.github.com/repos/gradeup/cassandra-trigger", "Date": "2017-09-13T10:55:32Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Constants.TABLE_INDEX_MAP.containsKey(index)) { searchkey = Constants.INDEX_KEY_MAP.get(Constants.TABLE_INDEX_MAP.get(index)); }else { searchkey = Constants.INDEX_KEY_MAP.get(index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/730/buggy-version/src.org.apache.cassandra.triggers.ElasticSearchForRouting.java", "BodyUseAPI": ["Constants.TABLE_INDEX_MAP.get(java.lang.String)", "Constants.INDEX_KEY_MAP.get(java.lang.String)", "Constants.INDEX_KEY_MAP.get(Constants.TABLE_INDEX_MAP.get(index))"], "Fixed commit": "af49ba9124ecd18cc82759c1df8af5e88565a65e", "Url": "https://api.github.com/repos/gradeup/cassandra-trigger", "Date": "2017-09-13T10:55:32Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Constants.TABLE_INDEX_MAP.containsKey(index)) { searchindex = Constants.INDEX_ROUTING_MAP.get(Constants.TABLE_INDEX_MAP.get(index)); }else { searchindex = Constants.INDEX_ROUTING_MAP.get(index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/730/buggy-version/src.org.apache.cassandra.triggers.ElasticSearchForRouting.java", "BodyUseAPI": ["Constants.TABLE_INDEX_MAP.get(java.lang.String)", "Constants.INDEX_ROUTING_MAP.get(Constants.TABLE_INDEX_MAP.get(index))", "Constants.INDEX_ROUTING_MAP.get(java.lang.String)"], "Fixed commit": "af49ba9124ecd18cc82759c1df8af5e88565a65e", "Url": "https://api.github.com/repos/gradeup/cassandra-trigger", "Date": "2017-09-13T10:55:32Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(submission.isSelfPost())) || full) { if (!full) { thumbImage2.setVisibility(View.VISIBLE); }else { wrapArea.setVisibility(View.VISIBLE); } if (!full) { ((me.ccrama.redditslide.Reddit) (getContext().getApplicationContext())).getImageLoader().displayImage(url, thumbImage2); }else { ((me.ccrama.redditslide.Reddit) (getContext().getApplicationContext())).getImageLoader().displayImage(url, thumbImage2, bigOptions); } }else { thumbImage2.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1119/buggy-version/app.src.main.java.me.ccrama.redditslide.SubmissionViews.HeaderImageLinkView.java", "BodyUseAPI": [], "Fixed commit": "936b7f501bbae83000b7d97bb4a07af620c86f72", "Url": "https://api.github.com/repos/Nxt3/Slide", "Date": "2016-04-11T20:50:14Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.collections.map.MultiKeyMap.get(g.getPDBName(),pl.poznan.put.cs.bioserver.torsion.AminoAcidDihedral.AngleName)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (names == null) { names = new pl.poznan.put.cs.bioserver.helper.UniTypeQuadruplet(null, null, null, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1476/buggy-version/src.pl.poznan.put.cs.bioserver.torsion.AminoAcidDihedral.java", "BodyUseAPI": [], "Fixed commit": "33702aeada878a2f9ecaff93d4bc09b50b32fe79", "Url": "https://api.github.com/repos/tzok/mcq4structures", "Date": "2013-06-05T12:06:28Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (time.equals(\"16-00\")) { sql = ((((((((\"INSERT INTO Ship_Booked\" + (\" (Date, DockID_16, ShipName, ShipID)\" + \"VALUES ('\")) + date) + \"', '\") + dockId) + \"', '\") + sName) + \"', \") + SID) + \");\"; }else return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3854/buggy-version/src.Main.DBMethods.java", "BodyUseAPI": [], "Fixed commit": "97d246867838b0615bb5609b2843c3f3e78b0ac3", "Url": "https://api.github.com/repos/Myran1972/NonGUI", "Date": "2016-05-03T10:25:44Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof org.jetbrains.ether.dependencyView.Type) { final java.lang.String className = ((org.jetbrains.ether.dependencyView.Type) (value)).getClassName(); if (className != null) { usages.addUsage(residence, org.jetbrains.ether.dependencyView.UsageRepr.createClassUsage(context, context.get(className))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3487/buggy-version/jps.model.src.org.jetbrains.ether.dependencyView.ClassfileAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "4eb792e7a3423cb0d5ea5776f87484bac066a174", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2012-05-04T15:50:09Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.lucene.document.Document.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (val == null) doc.add(new org.apache.lucene.document.StringField(e.getKey(), e.getValue(), Field.Store.YES));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1745/buggy-version/yassg-static.src.main.java.com.tingleff.yassg.index.lucene.LuceneIndexService.java", "BodyUseAPI": [], "Fixed commit": "94542620939ca5c16e3acf1ab3139fa838a5a2ce", "Url": "https://api.github.com/repos/samtingleff/yassg", "Date": "2015-01-06T06:32:28Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sessions) == null) { return 0; }else { return sessions.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/552/buggy-version/app.src.main.java.org.stephenfox.dittimetables.timetable.TimetableDay.java", "BodyUseAPI": [], "Fixed commit": "894fd0f8c8bbf1b48678e8ca038e6e4cb6a03bc7", "Url": "https://api.github.com/repos/StephenFox1995/DIT-Timetables-Android", "Date": "2015-10-22T12:49:02Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isPlayingFlag) && (isFirstPlayingFlag)) { mediaPlayer.pause(); android.widget.Button btn = ((android.widget.Button) (findViewById(R.id.btnPlay))); android.widget.TextView textStatusPlaying = ((android.widget.TextView) (findViewById(R.id.statusOfMusic))); textStatusPlaying.setText(R.string.paused); btn.setText(R.string.play); isPlayingFlag = false; }else if ((!(isPlayingFlag)) && (isFirstPlayingFlag)) { mediaPlayer.start(); android.widget.TextView textStatusPlaying = ((android.widget.TextView) (findViewById(R.id.statusOfMusic))); textStatusPlaying.setText(R.string.playing); android.widget.Button btn = ((android.widget.Button) (findViewById(R.id.btnPlay))); btn.setText(R.string.pause); isPlayingFlag = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2283/buggy-version/AudioPlayer.src.com.assignment2.audioplayer.AudioPlayerActivity.java", "BodyUseAPI": [], "Fixed commit": "bd4f49649bd4c2f80b4bac3f565c648ce1cddaf0", "Url": "https://api.github.com/repos/annnik/Assignment-2", "Date": "2014-05-20T12:06:38Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((minimumShouldMatch) != null) { booleanQuery = org.elasticsearch.common.lucene.search.Queries.applyMinimumShouldMatch(booleanQuery, minimumShouldMatch); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5322/buggy-version/core.src.main.java.org.elasticsearch.index.query.SimpleQueryStringBuilder.java", "BodyUseAPI": [], "Fixed commit": "fdcfc7e817e3edd16d0b4bb26cf21ecadc0a40b7", "Url": "https://api.github.com/repos/chaudum/elasticsearch", "Date": "2015-10-28T12:58:36Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/189/buggy-version/OsmAnd.src.net.osmand.plus.dashboard.DashUpdatesFragment.java", "BodyUseAPI": [], "Fixed commit": "9c60280b607898d7be5e16932cf4c3fd3b6ac336", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2014-11-28T12:57:05Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cacheItem) { if (movie != null) { moviesRepository.addMovie(movie.setShortDescription(movieDescription).setStars(movieRating)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8828/buggy-version/app.src.main.java.com.x1unix.avi.MovieDetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "85d5c8747ac481469fa9d2d2fa1553b5b68f06ec", "Url": "https://api.github.com/repos/x1unix/Avi", "Date": "2017-01-15T01:47:03Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((MasterGUI.derzeitigeRunde) < 9) { MasterGUI.del[((9 - (MasterGUI.derzeitigeRunde)) - 1)].setIcon(new javax.swing.ImageIcon(\"./res/img/backButton.png\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6151/buggy-version/src.MIB13.ButtonActionListener.java", "BodyUseAPI": ["MasterGUI.del[((9 - (MasterGUI.derzeitigeRunde)) - 1)].setIcon(javax.swing.ImageIcon)"], "Fixed commit": "8d4b6664c5f2651eb7d35ae14174eefd2ee70428", "Url": "https://api.github.com/repos/Demirion/projekt-mastermind", "Date": "2014-11-01T11:47:57Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"\".equals(parent)) { addPackage(directory.getName(), f); }else { addPackage(((parent + \"/\") + (directory.getName())), f); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5944/buggy-version/src.main.java.com.staticvoidgames.svgexe.SvgExe.java", "BodyUseAPI": ["com.staticvoidgames.svgexe.SvgExe.addPackage(java.lang.String,java.io.File)"], "Fixed commit": "dd05c5a85c090db76636036ba4403144211cac84", "Url": "https://api.github.com/repos/KevinWorkman/SvgExe", "Date": "2014-03-18T15:12:27Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((maze[curry][currx]) != 'S') maze[curry][currx] = 'x';", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5665/buggy-version/11BFS.Maze.java", "BodyUseAPI": [], "Fixed commit": "85e037f6828e1a8063b3d6f72e9ed9640e1b0b62", "Url": "https://api.github.com/repos/tyleri/APCSHW-Spring", "Date": "2015-04-07T08:37:39Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((stripsAttached) > 8) stripFlagSize = stripsAttached;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8791/buggy-version/src.com.heroicrobot.dropbit.devices.pixelpusher.PixelPusher.java", "BodyUseAPI": [], "Fixed commit": "3870295bb9beedc5938011729b47a2ba0afb8f75", "Url": "https://api.github.com/repos/robot-head/PixelPusher-java", "Date": "2014-04-23T23:05:54Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (n <= 0) { throw new java.lang.IllegalArgumentException(\"invalid n, n must be positive\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/363/buggy-version/15uf.exercises.Percolation.java", "BodyUseAPI": [], "Fixed commit": "2bc423617c67756c712cb81eb9eb19714cc8f272", "Url": "https://api.github.com/repos/duanpanda/princeton_algorithms", "Date": "2017-11-06T19:26:17Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Lists.newArrayList()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(errorMessages.isEmpty())) { final java.lang.StringBuilder sb = new java.lang.StringBuilder(); sb.append(translationService.translate(\"states.messages.change.failure.validationErrors\", getLocale(), join(errorMessages, ' '))); component.addTranslatedMessage(sb.toString(), convertViewMessageType(com.qcadoo.mes.states.service.client.VALIDATION_ERROR)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/9114/buggy-version/mes-plugins.mes-plugins-states.src.main.java.com.qcadoo.mes.states.service.client.StateChangeViewClientValidationUtil.java", "BodyUseAPI": ["com.qcadoo.localization.api.TranslationService.translate(java.lang.String,getLocale(),join(errorMessages, ' '))", "com.qcadoo.mes.states.service.client.StateChangeViewClientValidationUtil.join(java.util.List<java.lang.String>,char)", "java.lang.StringBuilder.append(translationService.translate(\"states.messages.change.failure.validationErrors\", getLocale(), join(errorMessages, ' ')))"], "Fixed commit": "bc7c289b1b52e7240661ab534f2727bb113a2c71", "Url": "https://api.github.com/repos/qcadoo/mes", "Date": "2012-06-13T21:40:38Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(polygonSuperFit.isValid())) { if (polygonSuperFit.isSimple()) { com.vividsolutions.jts.simplify.DouglasPeuckerSimplifier simp = new com.vividsolutions.jts.simplify.DouglasPeuckerSimplifier(polygonSuperFit); simp.setDistanceTolerance(distanceSegmentation); polygonFinal = simp.getResultGeometry(); }else { com.vividsolutions.jts.simplify.TopologyPreservingSimplifier simp = new com.vividsolutions.jts.simplify.TopologyPreservingSimplifier(polygonSuperFit); simp.setDistanceTolerance(distanceSegmentation); polygonFinal = simp.getResultGeometry(); java.lang.Double distAprox = 0.0; while (!(polygonFinal.isSimple())) { if (isDrive) { distAprox += distDrive; }else { distAprox += distWalk; } polygonFinal = com.vividsolutions.jts.simplify.TopologyPreservingSimplifier.simplify(polygonSuperFit, distAprox); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/9084/buggy-version/src.com.casueros.utils.FitPolygon.java", "BodyUseAPI": ["com.vividsolutions.jts.geom.Geometry.isSimple()", "com.vividsolutions.jts.simplify.TopologyPreservingSimplifier.simplify(com.vividsolutions.jts.geom.Geometry,java.lang.Double)"], "Fixed commit": "376f7ca95b02cfd3101339eccb8ae26db550a6ad", "Url": "https://api.github.com/repos/casueros/CasuerosUtils", "Date": "2016-09-05T14:16:55Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.getClass().toString().equals(view.containers.FigureImage.class.toString())) { if (!(((view.containers.FigureImage) (this)).isSon())) { if (((this) instanceof view.containers.FigureImage) && ((!(((view.containers.FigureImage) (this)).type.equals(\"cafe\"))) || (!(((view.containers.FigureImage) (this)).type.equals(\"menu\"))))) { return; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5715/buggy-version/src.view.containers.Figure.java", "BodyUseAPI": [], "Fixed commit": "0f8af05ffd36d291432f2b34c64c883b78db537a", "Url": "https://api.github.com/repos/SauvageThomas/IHM-project", "Date": "2017-05-23T16:33:47Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.resources.ResourcesPlugin.getPlugin().getWorkspace().getRoot().getProject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(project.exists())) { project = org.eclipse.core.resources.ResourcesPlugin.getPlugin().getWorkspace().getRoot().getProject(projectNameWithExt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2989/buggy-version/com.mobilesorcery.sdk.ui.targetphone.iphoneos.src.com.mobilesorcery.sdk.ui.targetphone.iphoneos.IPhoneOSOTAServer.java", "BodyUseAPI": [], "Fixed commit": "a0753f4db7aa8613ade99ec48f33279ddda66457", "Url": "https://api.github.com/repos/mattiasbybro/Eclipse", "Date": "2012-12-12T15:43:29Z"},
{"Line": "=>695", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((protocolsupport.utils.Utils.getPlayer(channel).getOpenInventory().getType()) == (org.bukkit.event.inventory.InventoryType.FURNACE)) { serializer.writeByte(packetdata.readByte()); int type = packetdata.readShort(); switch (type) { case 0 : { serializer.writeShort(1); break; } case 1 : { serializer.writeShort(2); break; } case 2 : { serializer.writeShort(0); break; } default : { serializer.writeShort(type); break; } } serializer.writeShort(packetdata.readShort()); }else { protocolsupport.utils.Utils.writeAll(packetdata, serializer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2581/buggy-version/src.protocolsupport.protocol.v_1_6.clientboundtransformer.PlayPacketTransformer.java", "BodyUseAPI": [], "Fixed commit": "648e26435d7c165661a3a260824428dcc2798e44", "Url": "https://api.github.com/repos/ProtocolSupport/ProtocolSupport", "Date": "2015-04-23T20:36:46Z"},
{"Line": "=>694", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((protocolsupport.utils.Utils.getPlayer(channel).getOpenInventory().getType()) == (org.bukkit.event.inventory.InventoryType.FURNACE)) { serializer.writeByte(packetdata.readByte()); int type = packetdata.readShort(); switch (type) { case 0 : { serializer.writeShort(1); break; } case 1 : { serializer.writeShort(2); break; } case 2 : { serializer.writeShort(0); break; } default : { serializer.writeShort(type); break; } } serializer.writeShort(packetdata.readShort()); }else { protocolsupport.utils.Utils.writeAll(packetdata, serializer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2581/buggy-version/src.protocolsupport.protocol.v_1_5.clientboundtransformer.PlayPacketTransformer.java", "BodyUseAPI": [], "Fixed commit": "648e26435d7c165661a3a260824428dcc2798e44", "Url": "https://api.github.com/repos/ProtocolSupport/ProtocolSupport", "Date": "2015-04-23T20:36:46Z"},
{"Line": "=>682", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.netty.channel.ChannelHandlerContext.channel()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((serializer.getVersion()) == (protocolsupport.api.ProtocolVersion.MINECRAFT_1_7_5)) && ((protocolsupport.utils.Utils.getPlayer(channel).getOpenInventory().getType()) == (org.bukkit.event.inventory.InventoryType.FURNACE))) { serializer.writeByte(packetdata.readByte()); int type = packetdata.readShort(); switch (type) { case 0 : { serializer.writeShort(1); break; } case 1 : { serializer.writeShort(2); break; } case 2 : { serializer.writeShort(0); break; } default : { serializer.writeShort(type); break; } } serializer.writeShort(packetdata.readShort()); return; }else { packet.b(serializer); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2581/buggy-version/src.protocolsupport.protocol.v_1_7.clientboundtransformer.PlayPacketTransformer.java", "BodyUseAPI": ["protocolsupport.protocol.PacketDataSerializer.writeShort(packetdata.readShort())", "protocolsupport.protocol.PacketDataSerializer.writeByte(packetdata.readByte())", "protocolsupport.protocol.PacketDataSerializer.writeShort(int)", "protocolsupport.protocol.PacketDataSerializer.writeShort(int)", "protocolsupport.protocol.PacketDataSerializer.writeShort(int)", "net.minecraft.server.v1_8_R2.Packet<net.minecraft.server.v1_8_R2.PacketListener>.b(protocolsupport.protocol.PacketDataSerializer)", "protocolsupport.protocol.PacketDataSerializer.writeShort(int)"], "Fixed commit": "648e26435d7c165661a3a260824428dcc2798e44", "Url": "https://api.github.com/repos/ProtocolSupport/ProtocolSupport", "Date": "2015-04-23T20:36:46Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["TTTCore.mg.getChallenger(pl.getUniqueId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ch.get().getRound().getLifecycleStage()) != (Constants.Stage.PLAYING)) { TTTCore.locale.getLocalizable(\"error.round.not-started\").withPrefix(Constants.Color.ERROR).sendTo(sender); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6231/buggy-version/src.main.java.net.caseif.ttt.command.handler.player.SlayCommand.java", "BodyUseAPI": [], "Fixed commit": "0f3a35f902da75ff9a88f27d4825d85eb6978bf1", "Url": "https://api.github.com/repos/caseif/TTT", "Date": "2015-10-28T00:18:08Z"},
{"Line": "=>657", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (name.equalsIgnoreCase(\"state\")) { if ((value != null) && (!(value.equalsIgnoreCase(\"allocated\")))) { return null; } }else if (name.equalsIgnoreCase(\"associatednetworkid\")) { if (value != null) { address.setForVlan(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/418/buggy-version/src.main.java.org.dasein.cloud.cloudstack.network.IpAddress.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "56752cf1abaf041202843132a117b58430d48d52", "Url": "https://api.github.com/repos/greese/dasein-cloud-cloudstack", "Date": "2012-12-08T18:04:23Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((respData.getString(com.owncloud.android.lib.resources.users.GetRemoteUserInfoOperation.NODE_EMAIL)) != null) { userInfo.setEmail(respData.getString(com.owncloud.android.lib.resources.users.GetRemoteUserInfoOperation.NODE_EMAIL)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2047/buggy-version/src.com.owncloud.android.lib.resources.users.GetRemoteUserInfoOperation.java", "BodyUseAPI": ["com.owncloud.android.lib.common.UserInfo.setEmail(respData.getString(com.owncloud.android.lib.resources.users.GetRemoteUserInfoOperation.NODE_EMAIL))", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "a230580ed2a65b90e9b7b0844501ebd56008ef12", "Url": "https://api.github.com/repos/nextcloud/android-library", "Date": "2017-01-25T16:26:51Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(opened)) { jmri.jmrix.dccpp.serial.DCCppAdapter.log.error(\"getInputStream called before load(), stream not available\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1701/buggy-version/java.src.jmri.jmrix.dccpp.serial.DCCppAdapter.java", "BodyUseAPI": [], "Fixed commit": "4d47eee6fe97e2c5b60e3ae0fe9c347c31109e49", "Url": "https://api.github.com/repos/rhwood/JMRI", "Date": "2015-11-24T17:31:56Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((desc.getType()) == (org.encog.ml.data.temporal.TemporalDataDescription.Type.DELTA_CHANGE)) || ((desc.getType()) == (org.encog.ml.data.temporal.TemporalDataDescription.Type.PERCENT_CHANGE))) { if ((index + (this.inputWindowSize)) > (this.points.size())) { throw new org.encog.ml.data.temporal.TemporalError((\"Can't generate input temporal data \" + \"beyond the end of provided data.\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4210/buggy-version/src.main.java.org.encog.ml.data.temporal.TemporalMLDataSet.java", "BodyUseAPI": [], "Fixed commit": "11bb5ac591b6c0c0b50cfd8c2f4a43bbe6ad4f87", "Url": "https://api.github.com/repos/encog/encog-java-core", "Date": "2014-01-11T14:31:18Z"},
{"Line": "=>555", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.inmobi.grill.driver.jdbc.ColumnarSQLRewriter.getUnderlyingDBName(org.apache.hadoop.hive.ql.cube.metadata.CubeMetastoreClient,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"default\".equalsIgnoreCase(db)) { tree.deleteChild(0); }else if (org.apache.commons.lang.StringUtils.isNotBlank(db)) { dbIdentifier.getToken().setText(db); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5207/buggy-version/grill-driver-jdbc.src.main.java.com.inmobi.grill.driver.jdbc.ColumnarSQLRewriter.java", "BodyUseAPI": ["org.apache.commons.lang.StringUtils.isNotBlank(java.lang.String)", "dbIdentifier.getToken().setText(java.lang.String)"], "Fixed commit": "5d10803f2241c09379ff53ec8af9395ec85f29f5", "Url": "https://api.github.com/repos/sushilmohanty/grill", "Date": "2014-08-12T06:33:04Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ability.getTargets().stillLegal(ability, game)) { updateOptionalCosts(0); if (card.putOntoBattlefield(game, fromZone, ability.getId(), controllerId)) { if ((this.getSpellAbility()) instanceof mage.abilities.keyword.BestowAbility) { mage.game.permanent.Permanent permanent = game.getPermanent(card.getId()); if (permanent != null) { permanent.getCardType().remove(CardType.CREATURE); } } game.getState().handleSimultaneousEvent(game); return ability.resolve(game); } return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/4351/buggy-version/Mage.src.mage.game.stack.Spell.java", "BodyUseAPI": ["game.getState().handleSimultaneousEvent(mage.game.Game)", "mage.game.Game.getPermanent(card.getId())", "mage.abilities.SpellAbility.resolve(mage.game.Game)", "mage.cards.Card.putOntoBattlefield(mage.game.Game,mage.constants.Zone,ability.getId(),java.util.UUID)", "mage.game.Game.getState()", "mage.abilities.SpellAbility.getId()"], "Fixed commit": "38f922a200ca68eb1b66cd03786100c7402bcba1", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2014-04-07T11:44:15Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((replacedState) == null) || ((replacedState.getBlock()) == null)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/100/buggy-version/src.main.java.zmaster587.libVulpes.tile.multiblock.TilePlaceholder.java", "BodyUseAPI": [], "Fixed commit": "e6700c5811cc101f300645287abb8a41ad6317ec", "Url": "https://api.github.com/repos/zmaster587/libVulpes", "Date": "2017-04-21T20:56:53Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((editQueryAction.getEditedDataFactory()) != null) { availableDataSourcesModel.edit(idx, editQueryAction.getEditedDataFactory()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1348/buggy-version/designer.report-designer.src.org.pentaho.reporting.designer.core.editor.parameters.ProvisionDataSourcePanel.java", "BodyUseAPI": ["org.pentaho.reporting.designer.core.actions.report.EditQueryAction.getEditedDataFactory()", "org.pentaho.reporting.designer.core.editor.parameters.DataFactoryTreeModel.edit(int,editQueryAction.getEditedDataFactory())"], "Fixed commit": "ff527d750f753d19e3786f48c7fb602bd0411b70", "Url": "https://api.github.com/repos/tmorgner/pentaho-reporting", "Date": "2013-05-14T16:48:51Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type == (java.lang.Integer.TYPE)) { value = java.lang.Integer.parseInt(pValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8314/buggy-version/src.main.java.com.xiuhao.pagelet.servlet.HttpViewProcessor.java", "BodyUseAPI": [], "Fixed commit": "27b3dea2dc9d165174d49d1375af48294dbc1df0", "Url": "https://api.github.com/repos/seanlinwang/commons", "Date": "2014-06-03T05:22:07Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!(item.hasItemMeta())) || (!(item.getItemMeta().hasLore()))) || ((item.getItemMeta().getLore().size()) == 0)) { return new think.rpgitems.data.RPGMetadata(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/955/buggy-version/src.main.java.think.rpgitems.item.RPGItem.java", "BodyUseAPI": [], "Fixed commit": "bb71b04ee3f99f3ce355e862011748acaea85952", "Url": "https://api.github.com/repos/thinkofdeath/RPG-Items", "Date": "2013-06-09T10:00:10Z"},
{"Line": "=>1154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<mGetPlotDetail.mRespBody>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (ServiceInstance.FISHERY_NUM_TYPE_KK.equals(plotDetail.getFisheryType())) { userPlotModel.setFisheryWeight(plotDetail.getFisheryWeight()); }else { userPlotModel.setFisheryNumber(plotDetail.getFisheryNumber()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3133/buggy-version/app.src.main.java.th.go.oae.rcmo.PBProdDetailCalculateFmentJ.java", "BodyUseAPI": ["th.go.oae.rcmo.Model.UserPlotModel.setFisheryNumber(plotDetail.getFisheryNumber())", "mGetPlotDetail.mRespBody.getFisheryWeight()", "mGetPlotDetail.mRespBody.getFisheryNumber()", "th.go.oae.rcmo.Model.UserPlotModel.setFisheryWeight(plotDetail.getFisheryWeight())"], "Fixed commit": "06e35444020453a15a00b2ee89440807fc93399f", "Url": "https://api.github.com/repos/OathHoyDev/RCMOProject", "Date": "2016-07-08T02:57:57Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ServiceInstance.FISHERY_NUM_TYPE_KK.equals(userPlotModel.getFisheryNumType())) { h.rookPla.setText(th.go.oae.rcmo.Util.Util.dobbleToStringNumberWithClearDigit(th.go.oae.rcmo.Util.Util.strToDoubleDefaultZero(userPlotModel.getFisheryWeight()))); }else { h.rookPla.setText(th.go.oae.rcmo.Util.Util.dobbleToStringNumberWithClearDigit(th.go.oae.rcmo.Util.Util.strToDoubleDefaultZero(userPlotModel.getFisheryNumber()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3133/buggy-version/app.src.main.java.th.go.oae.rcmo.PBProdDetailCalculateFmentJ.java", "BodyUseAPI": ["th.go.oae.rcmo.Util.Util.dobbleToStringNumberWithClearDigit(th.go.oae.rcmo.Util.Util.strToDoubleDefaultZero(userPlotModel.getFisheryNumber()))", "com.neopixl.pixlui.components.textview.TextView.setText(th.go.oae.rcmo.Util.Util.dobbleToStringNumberWithClearDigit(th.go.oae.rcmo.Util.Util.strToDoubleDefaultZero(userPlotModel.getFisheryWeight())))", "th.go.oae.rcmo.Util.Util.strToDoubleDefaultZero(userPlotModel.getFisheryNumber())", "th.go.oae.rcmo.Model.UserPlotModel.getFisheryNumber()", "th.go.oae.rcmo.Util.Util.strToDoubleDefaultZero(userPlotModel.getFisheryWeight())", "com.neopixl.pixlui.components.textview.TextView.setText(th.go.oae.rcmo.Util.Util.dobbleToStringNumberWithClearDigit(th.go.oae.rcmo.Util.Util.strToDoubleDefaultZero(userPlotModel.getFisheryNumber())))", "th.go.oae.rcmo.Util.Util.dobbleToStringNumberWithClearDigit(th.go.oae.rcmo.Util.Util.strToDoubleDefaultZero(userPlotModel.getFisheryWeight()))", "th.go.oae.rcmo.Model.UserPlotModel.getFisheryWeight()"], "Fixed commit": "06e35444020453a15a00b2ee89440807fc93399f", "Url": "https://api.github.com/repos/OathHoyDev/RCMOProject", "Date": "2016-07-08T02:57:57Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ServiceInstance.FISHERY_NUM_TYPE_KK.equals(userPlotModel.getFisheryNumType())) { formulaModel.LookPla = th.go.oae.rcmo.Util.Util.strToDoubleDefaultZero(userPlotModel.getFisheryWeight()); }else { formulaModel.LookPla = th.go.oae.rcmo.Util.Util.strToDoubleDefaultZero(userPlotModel.getFisheryNumber()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3133/buggy-version/app.src.main.java.th.go.oae.rcmo.PBProdDetailCalculateFmentJ.java", "BodyUseAPI": ["th.go.oae.rcmo.Util.Util.strToDoubleDefaultZero(userPlotModel.getFisheryNumber())", "th.go.oae.rcmo.Model.UserPlotModel.getFisheryWeight()", "th.go.oae.rcmo.Util.Util.strToDoubleDefaultZero(userPlotModel.getFisheryWeight())", "th.go.oae.rcmo.Model.UserPlotModel.getFisheryNumber()"], "Fixed commit": "06e35444020453a15a00b2ee89440807fc93399f", "Url": "https://api.github.com/repos/OathHoyDev/RCMOProject", "Date": "2016-07-08T02:57:57Z"},
{"Line": "=>1134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(plotDetail.getVarValue(),java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ServiceInstance.FISHERY_NUM_TYPE_KK.equals(varJ.getTuaOrKilo())) { userPlotModel.setFisheryWeight(plotDetail.getFisheryNumber()); }else { userPlotModel.setFisheryNumber(plotDetail.getFisheryNumber()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3133/buggy-version/app.src.main.java.th.go.oae.rcmo.PBProdDetailCalculateFmentJ.java", "BodyUseAPI": [], "Fixed commit": "06e35444020453a15a00b2ee89440807fc93399f", "Url": "https://api.github.com/repos/OathHoyDev/RCMOProject", "Date": "2016-07-08T02:57:57Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUris()) != null) { removeAllWatchContentUris(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/874/buggy-version/src.main.java.com.mridang.profilic.ImprovedExtension.java", "BodyUseAPI": [], "Fixed commit": "d9708a0a2da0d35f8163d951677b666fd9033f9c", "Url": "https://api.github.com/repos/mridang/dashclock-profiles", "Date": "2015-03-29T09:11:58Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(form.isFillingValues())) { unidadHandler = new es.icarto.gvsig.extgia.forms.utils.VegetationCalculateMedicion.UnidadListener(); ((javax.swing.JComboBox) (form.getWidgets().get(es.icarto.gvsig.extgia.forms.utils.UNIDAD))).addActionListener(unidadHandler); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7162/buggy-version/extGIA.src.es.icarto.gvsig.extgia.forms.utils.VegetationCalculateMedicion.java", "BodyUseAPI": [], "Fixed commit": "1922a838746ce88015855222cabc3fc1e206aebf", "Url": "https://api.github.com/repos/iCarto/siga", "Date": "2015-07-13T09:13:38Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(form.isFillingValues())) { unidadHandler = new es.icarto.gvsig.extgia.forms.utils.VegetationCalculateMedicion.UnidadListener(); ((javax.swing.JComboBox) (form.getWidgets().get(es.icarto.gvsig.extgia.forms.utils.UNIDAD))).addActionListener(unidadHandler); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7162/buggy-version/extGIA.src.es.icarto.gvsig.extgia.forms.utils.VegetationCalculateMedicion.java", "BodyUseAPI": [], "Fixed commit": "1922a838746ce88015855222cabc3fc1e206aebf", "Url": "https://api.github.com/repos/iCarto/siga", "Date": "2015-07-13T09:13:38Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((mIsSorted) && (sortCheck == 1)) { mAlphabet = new java.lang.StringBuilder(mAlphabet).reverse().toString(); java.util.List<java.lang.String> sectionReverser = java.util.Arrays.asList(sections); java.util.Collections.reverse(sectionReverser); sectionReverser.toArray(sections); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6988/buggy-version/app.src.main.java.org.fasola.fasolaminutes.StringIndexer.java", "BodyUseAPI": [], "Fixed commit": "b220fc10f2aebede8d536a24ac24a79bf326ea16", "Url": "https://api.github.com/repos/mrichards42/fasola_android", "Date": "2016-02-09T20:23:01Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (position > 0) { java.util.Map<java.lang.String, java.lang.Object> alert = alerts.get((position - 1)); android.net.Uri uri = android.net.Uri.parse(((java.lang.String) (alert.get(\"link\")))); android.content.Intent intent = new android.content.Intent(android.content.Intent.ACTION_VIEW, uri); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2107/buggy-version/src.uk.co.eleusis.android.fcoalerts.MainActivity.java", "BodyUseAPI": ["java.util.List<java.util.Map<java.lang.String, java.lang.Object>>.get(int)"], "Fixed commit": "9ec93d18a3e2ba30f2122b414d2b0b994b0d0e6d", "Url": "https://api.github.com/repos/keefmarshall/fco-alerts-app", "Date": "2014-02-26T07:59:43Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dice.get(currentDie).numberOfDice) > 50) dice.get(currentDie).numberOfDice = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5152/buggy-version/src.com.plovergames.diceindark.DiceScreen.java", "BodyUseAPI": ["java.util.List<com.plovergames.diceindark.Die>.get(int)"], "Fixed commit": "9e26258858e915729cface8b1fc4609180a469a7", "Url": "https://api.github.com/repos/loairpa/DiceInDark", "Date": "2013-07-10T16:45:28Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((code.getOpMode()) == (OpCode.OpMode.iABx)) { setBx(bx); }else { setsBx(bx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6885/buggy-version/src.main.java.lamo.luaj.vm.Instruction.java", "BodyUseAPI": [], "Fixed commit": "25acbb69022cd402585127287604a4926b21b70d", "Url": "https://api.github.com/repos/Lamod/luaj", "Date": "2016-10-19T02:42:20Z"},
{"Line": "=>725", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.archide.hsb.dao.OrdersDao.getPlacedOrders(placeOrdersJson.getPlaceOrderUuid())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((placedOrdersEntity.getOrderType().toString().equals(OrderType.TakeAway.toString())) && (placeOrdersJson.isClosed())) { placedOrdersEntity.setClosed(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6778/buggy-version/hsb.src.main.java.com.archide.hsb.service.OrdersService.java", "BodyUseAPI": ["com.archide.hsb.model.PlacedOrdersEntity.setClosed(boolean)"], "Fixed commit": "117de2e1b16c782df0cb5b51b4c679918932c96f", "Url": "https://api.github.com/repos/snithishkumar/hsb-web", "Date": "2017-04-22T20:10:21Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.get(java.lang.Object)", "java.lang.reflect.Field.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((org.apache.camel.util.ObjectHelper.isNotEmpty(datafield.defaultValue())) && (org.apache.camel.util.ObjectHelper.isEmpty(value))) { value = datafield.defaultValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2517/buggy-version/components.camel-bindy.src.main.java.org.apache.camel.dataformat.bindy.BindyFixedLengthFactory.java", "BodyUseAPI": ["org.apache.camel.dataformat.bindy.annotation.DataField.defaultValue()"], "Fixed commit": "c3fbf76a3f916082753850d8d2411313a2595a83", "Url": "https://api.github.com/repos/zregvart/camel", "Date": "2017-05-24T10:02:29Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jayway.jsonpath.JsonPath.read(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (actualValue == null) { actualValue = \"null\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1876/buggy-version/src.main.java.com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion.java", "BodyUseAPI": [], "Fixed commit": "3864983b41623ca91d0000d0f3be05bfc19ff4dc", "Url": "https://api.github.com/repos/ATLANTBH/jmeter-components", "Date": "2013-10-31T13:55:27Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (recipeIngredients != null) { for (int i = 0; i < (recipeIngredients.length); i++) { ingredientsMap.add(recipeIngredients[i]); } }else { ingredientsMap.add(\"No ingredients given\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8894/buggy-version/src.main.java.uk.ac.dundee.computing.aec.recipehub.models.RecipeModel.java", "BodyUseAPI": ["java.util.Set.add(java.lang.String)"], "Fixed commit": "233b1a7878e16735bd0ed8b428fb6499dc970168", "Url": "https://api.github.com/repos/harrya/recipehub2", "Date": "2015-11-27T20:41:11Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.swt.widgets.FileDialog.open()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (fileName != null) text_4.setText(fileName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1588/buggy-version/fNIRs.src.fNIRs.Hello.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Text.setText(java.lang.String)"], "Fixed commit": "7fcc1a2941e5c070ac8b7b54b31b4a1d3a8aab20", "Url": "https://api.github.com/repos/CS-Seminar/fNIRS", "Date": "2013-10-25T15:54:34Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (invitedUsers == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8219/buggy-version/src.main.java.com.spontaneous.server.model.entity.Event.java", "BodyUseAPI": [], "Fixed commit": "f703b6948d3f7428d61c7da2b941b0f13219de21", "Url": "https://api.github.com/repos/itaispiegel/spontaneous-server", "Date": "2016-02-17T13:19:58Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getTarget().getBlockPos()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (pos != null) { net.minecraft.block.state.IBlockState state = world.getBlockState(pos); if (((state.getBlock()) instanceof daxum.temporalconvergence.block.BlockBase) && (((daxum.temporalconvergence.block.BlockBase) (state.getBlock())).hasMultipleBoundingBoxes())) { daxum.temporalconvergence.util.RenderHelper.drawSelectionBoxes(world, event.getPlayer(), state, pos, event.getPartialTicks()); event.setCanceled(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/21/buggy-version/src.main.java.daxum.temporalconvergence.EventHandler.java", "BodyUseAPI": ["net.minecraft.world.World.getBlockState(net.minecraft.util.math.BlockPos)", "daxum.temporalconvergence.util.RenderHelper.drawSelectionBoxes(net.minecraft.world.World,event.getPlayer(),net.minecraft.block.state.IBlockState,net.minecraft.util.math.BlockPos,event.getPartialTicks())"], "Fixed commit": "39a656c01bdcd908644efb1cdc15686fa46dafb3", "Url": "https://api.github.com/repos/daxum/TemporalConvergence", "Date": "2017-07-10T03:39:34Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mustbe.consulo.csharp.lang.parser.CSharpBuilderWrapper.getTokenType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (tokenType == null) { if (modifierListPair.getSecond().isEmpty()) { marker.drop(); }else { marker.error(\"Expected identifier\"); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/5128/buggy-version/csharp-psi-impl.src.org.mustbe.consulo.csharp.lang.parser.decl.DeclarationParsing.java", "BodyUseAPI": [], "Fixed commit": "ed6e4fcec5aa93a14a48ce5c9982e49094a99c9c", "Url": "https://api.github.com/repos/consulo/consulo-csharp", "Date": "2016-03-03T22:50:50Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (files == null) return ret;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6972/buggy-version/app.src.main.java.com.droidlogic.media.FileBrowser.java", "BodyUseAPI": [], "Fixed commit": "eaf1b9d88b8dfcc15e05a6c65bdbf2cd735f48e4", "Url": "https://api.github.com/repos/shannonls/MultiPlayer", "Date": "2017-07-07T05:59:40Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.findViewById(R.id.browserFileName)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (textView == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6972/buggy-version/app.src.main.java.com.droidlogic.media.FileBrowser.java", "BodyUseAPI": [], "Fixed commit": "eaf1b9d88b8dfcc15e05a6c65bdbf2cd735f48e4", "Url": "https://api.github.com/repos/shannonls/MultiPlayer", "Date": "2017-07-07T05:59:40Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position < 0) throw new java.lang.IndexOutOfBoundsException(\"Position to small\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3870/buggy-version/lang.src.main.java.net.openhft.lang.io.ByteBufferBytes.java", "BodyUseAPI": [], "Fixed commit": "ce6913517b4bb3f293ea4ef638b2d37a22b7dc61", "Url": "https://api.github.com/repos/lburgazzoli/Java-Lang", "Date": "2014-12-05T16:33:12Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((type != null) && (type.equals(\"org.apache.lucene.analysis.util.CharArraySet\"))) { final org.apache.lucene.analysis.util.CharArraySet s = org.exist.indexing.lucene.AnalyzerConfig.getConstructorParameterCharArraySetValues(param); parameter = new org.exist.indexing.lucene.AnalyzerConfig.KeyTypedValue(name, s, org.apache.lucene.analysis.util.CharArraySet.class); }else if ((type != null) && ((type.equals(\"java.lang.Integer\")) || (type.equals(\"int\")))) { final java.lang.Integer n = java.lang.Integer.parseInt(value); parameter = new org.exist.indexing.lucene.AnalyzerConfig.KeyTypedValue(name, n); }else if ((type != null) && ((type.equals(\"java.lang.Boolean\")) || (type.equals(\"boolean\")))) { final boolean b = java.lang.Boolean.parseBoolean(value); parameter = new org.exist.indexing.lucene.AnalyzerConfig.KeyTypedValue(name, b); }else { try { final java.lang.Class clazz = java.lang.Class.forName(type); if (clazz.isEnum()) { parameter = new org.exist.indexing.lucene.AnalyzerConfig.KeyTypedValue(name, java.lang.Enum.valueOf(clazz, value), clazz); }else { parameter = new org.exist.indexing.lucene.AnalyzerConfig.KeyTypedValue(name, value); } } catch (java.lang.ClassNotFoundException cnfe) { throw new org.exist.indexing.lucene.AnalyzerConfig.ParameterException((((\"Class for type: \" + type) + \" not found. \") + (cnfe.getMessage())), cnfe); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7595/buggy-version/extensions.indexes.lucene.src.org.exist.indexing.lucene.AnalyzerConfig.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.Class.forName(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "0729a14f89d275362804466846098091fcfd6a47", "Url": "https://api.github.com/repos/shabanovd/exist", "Date": "2013-11-03T12:37:44Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player.hasPermission(\"GriefNotice.admin\")) { if (((args.length) == 2) && (args[0].equals(\"monitor\"))) { org.bukkit.entity.Player plays = org.bukkit.Bukkit.getServer().getPlayer(args[1]); java.lang.String namy = args[1]; this.newPlayerCheck.blocklog.put(plays, java.lang.Boolean.valueOf(true)); this.newPlayerCheck.countblock.put(plays, java.lang.Integer.valueOf(0)); for (org.bukkit.entity.Player play : org.bukkit.Bukkit.getServer().getOnlinePlayers()) { if (play.hasPermission(\"GriefNotice.announce\")) { play.sendMessage((((((me.SuperPyroManiac.spigot.GriefNotice.preFix) + (org.bukkit.ChatColor.GOLD)) + namy) + (org.bukkit.ChatColor.DARK_GRAY)) + \" will be monitored again.\")); } } }else if (((args.length) == 1) && (args[0].equals(\"status\"))) { java.sql.Connection c = null; java.sql.Statement stmt = null; java.sql.Statement ctmt = null; try { java.lang.Class.forName(\"org.sqlite.JDBC\"); c = java.sql.DriverManager.getConnection(((\"jdbc:sqlite:\" + (getDataFolder())) + \"//data.db\")); c.setAutoCommit(false); stmt = c.createStatement(); ctmt = c.createStatement(); java.sql.ResultSet rs = stmt.executeQuery(\"SELECT data.* FROM `data` INNER JOIN ( SELECT max( ID ) AS id FROM `data` GROUP BY playername ) AS id_join ON data.id = id_join.id ORDER BY ID DESC LIMIT 10\"); player.sendMessage(((((((((((org.bukkit.ChatColor.DARK_GRAY) + \" ----- \") + (org.bukkit.ChatColor.DARK_RED)) + \"Grief Notice Check \") + (org.bukkit.ChatColor.DARK_GRAY)) + \"- \") + (org.bukkit.ChatColor.GOLD)) + \"Last 10 Results \") + (org.bukkit.ChatColor.DARK_GRAY)) + \"-----\")); while (rs.next()) { java.lang.String name = rs.getString(\"playername\"); int breakid = rs.getInt(\"ID\"); int timeStamp = rs.getInt(\"time\"); java.util.Date time = new java.util.Date((timeStamp * 1000L)); java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(\"dd/MM-yyyy HH:mm:ss\"); java.lang.String fDate = sdf.format(time); java.sql.ResultSet bs = ctmt.executeQuery(((\"SELECT COUNT(playername) AS total FROM DATA WHERE playername = '\" + name) + \"'\")); int count = bs.getInt(\"total\"); player.sendMessage(((((((((((((((((org.bukkit.ChatColor.GOLD) + \"ID: \") + (org.bukkit.ChatColor.GRAY)) + breakid) + (org.bukkit.ChatColor.GOLD)) + \" Name: \") + (org.bukkit.ChatColor.RED)) + name) + (org.bukkit.ChatColor.GOLD)) + \" Broke: \") + (org.bukkit.ChatColor.GRAY)) + count) + (org.bukkit.ChatColor.GOLD)) + \" last break: \") + (org.bukkit.ChatColor.GRAY)) + fDate)); } player.sendMessage(((((((org.bukkit.ChatColor.DARK_GRAY) + \"- \") + (org.bukkit.ChatColor.GOLD)) + \"Use /gn checkplayer <playername> to view the log \") + (org.bukkit.ChatColor.GOLD)) + \" -\")); rs.close(); stmt.close(); c.close(); } catch (java.lang.Exception e) { java.lang.System.err.println((((e.getClass().getName()) + \": \") + (e.getMessage()))); java.lang.System.exit(0); } }else if (((args.length) == 2) && (args[0].equals(\"tp\"))) { java.sql.Connection c = null; java.sql.Statement stmt = null; try { java.lang.Class.forName(\"org.sqlite.JDBC\"); c = java.sql.DriverManager.getConnection(((\"jdbc:sqlite:\" + (getDataFolder())) + \"//data.db\")); c.setAutoCommit(false); stmt = c.createStatement(); java.lang.String location = args[1]; java.sql.ResultSet rs = stmt.executeQuery(((\"SELECT * FROM DATA where ID='\" + location) + \"'\")); while (rs.next()) { double x = java.lang.Double.parseDouble(rs.getString(\"xvalue\")); double y = java.lang.Double.parseDouble(rs.getString(\"yvalue\")); double z = java.lang.Double.parseDouble(rs.getString(\"zvalue\")); org.bukkit.World world = getServer().getWorld(rs.getString(\"world\")); if (world != null) { org.bukkit.Location locationToTeleport = new org.bukkit.Location(world, x, y, z); player.teleport(locationToTeleport); player.sendMessage((((((((((((((((((me.SuperPyroManiac.spigot.GriefNotice.preFix) + (org.bukkit.ChatColor.DARK_GRAY)) + \"Teleporting you to: \") + (org.bukkit.ChatColor.GRAY)) + x) + (org.bukkit.ChatColor.GOLD)) + \",\") + (org.bukkit.ChatColor.GRAY)) + y) + (org.bukkit.ChatColor.GOLD)) + \",\") + (org.bukkit.ChatColor.GRAY)) + z) + (org.bukkit.ChatColor.GOLD)) + \" in the world: \") + (org.bukkit.ChatColor.GRAY)) + (rs.getString(\"world\")))); } } rs.close(); stmt.close(); c.close(); } catch (java.lang.Exception e) { java.lang.System.err.println((((e.getClass().getName()) + \": \") + (e.getMessage()))); java.lang.System.exit(0); } }else if ((((args.length) == 2) && (args[0].equals(\"checkplayer\"))) || (((args.length) == 3) && (args[0].equals(\"checkplayer\")))) { java.sql.Connection c = null; java.sql.Statement stmt = null; try { java.lang.Class.forName(\"org.sqlite.JDBC\"); c = java.sql.DriverManager.getConnection(((\"jdbc:sqlite:\" + (getDataFolder())) + \"//data.db\")); c.setAutoCommit(false); stmt = c.createStatement(); player.sendMessage(((((((((((((org.bukkit.ChatColor.DARK_GRAY) + \" ----- \") + (org.bukkit.ChatColor.DARK_RED)) + \"Grief Notice \") + (org.bukkit.ChatColor.DARK_GRAY)) + \"- \") + (org.bukkit.ChatColor.GOLD)) + \"Last 10 Results: \") + (org.bukkit.ChatColor.RED)) + (args[1])) + (org.bukkit.ChatColor.DARK_GRAY)) + \" -----\")); if (((args.length) == 2) && (args[0].equals(\"checkplayer\"))) { int offset = 0; java.sql.ResultSet rs = stmt.executeQuery((((\"SELECT * FROM DATA WHERE playername = '\" + (args[1])) + \"' ORDER BY ID DESC LIMIT 10 OFFSET \") + offset)); while (rs.next()) { int id = rs.getInt(\"id\"); int timeStamp = rs.getInt(\"time\"); java.lang.String blockname = rs.getString(\"blockname\"); java.lang.String Zcord = rs.getString(\"zvalue\"); java.lang.String Ycord = rs.getString(\"yvalue\"); java.lang.String Xcord = rs.getString(\"xvalue\"); java.lang.String world = rs.getString(\"world\"); java.util.Date time = new java.util.Date((timeStamp * 1000L)); java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(\"dd/MM-yyyy HH:mm:ss\"); java.lang.String fDate = sdf.format(time); player.sendMessage(((((((((((((((((((((((((((((org.bukkit.ChatColor.GOLD) + \"ID: \") + (org.bukkit.ChatColor.GRAY)) + id) + (org.bukkit.ChatColor.GOLD)) + \" Time: \") + (org.bukkit.ChatColor.GRAY)) + fDate) + (org.bukkit.ChatColor.GOLD)) + \" Block: \") + (org.bukkit.ChatColor.GRAY)) + blockname) + (org.bukkit.ChatColor.GOLD)) + \" World: \") + (org.bukkit.ChatColor.GRAY)) + world) + (org.bukkit.ChatColor.GOLD)) + \" Cords(ZYX): \") + (org.bukkit.ChatColor.GRAY)) + Zcord) + (org.bukkit.ChatColor.GOLD)) + \",\") + (org.bukkit.ChatColor.GRAY)) + Ycord) + (org.bukkit.ChatColor.GOLD)) + \",\") + (org.bukkit.ChatColor.GRAY)) + Xcord)); } int count = 0; java.sql.ResultSet res = stmt.executeQuery(((\"SELECT COUNT(*) FROM DATA WHERE playername = '\" + (args[1])) + \"'\")); while (res.next()) { count = res.getInt(1); } player.sendMessage(((((((((((((((((org.bukkit.ChatColor.DARK_GRAY) + \" ----- \") + (org.bukkit.ChatColor.DARK_RED)) + \"Grief Notice \") + (org.bukkit.ChatColor.DARK_GRAY)) + \" - \") + (org.bukkit.ChatColor.GOLD)) + \"Displaying page \") + (org.bukkit.ChatColor.GRAY)) + \"1\") + (org.bukkit.ChatColor.GOLD)) + \"/\") + (org.bukkit.ChatColor.GRAY)) + ((int) (java.lang.Math.ceil((count / 10.0))))) + (org.bukkit.ChatColor.DARK_GRAY)) + \" ----- \")); rs.close(); stmt.close(); c.close(); } if (((args.length) == 3) && (args[0].equals(\"checkplayer\"))) { java.lang.String offsets = args[2]; int offset = (java.lang.Integer.parseInt(offsets)) * 10; java.sql.ResultSet rs = stmt.executeQuery((((\"SELECT * FROM DATA WHERE playername = '\" + (args[1])) + \"' ORDER BY ID DESC LIMIT 10 OFFSET \") + offset)); while (rs.next()) { int id = rs.getInt(\"id\"); int timeStamp = rs.getInt(\"time\"); java.lang.String blockname = rs.getString(\"blockname\"); java.lang.String Zcord = rs.getString(\"zvalue\"); java.lang.String Ycord = rs.getString(\"yvalue\"); java.lang.String Xcord = rs.getString(\"xvalue\"); java.lang.String world = rs.getString(\"world\"); java.util.Date time = new java.util.Date((timeStamp * 1000L)); java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(\"dd/MM-yyyy HH:mm:ss\"); java.lang.String fDate = sdf.format(time); player.sendMessage(((((((((((((((((((((((((((((org.bukkit.ChatColor.GOLD) + \"ID: \") + (org.bukkit.ChatColor.GRAY)) + id) + (org.bukkit.ChatColor.GOLD)) + \" Time: \") + (org.bukkit.ChatColor.GRAY)) + fDate) + (org.bukkit.ChatColor.GOLD)) + \" Block: \") + (org.bukkit.ChatColor.GRAY)) + blockname) + (org.bukkit.ChatColor.GOLD)) + \" World: \") + (org.bukkit.ChatColor.GRAY)) + world) + (org.bukkit.ChatColor.GOLD)) + \" Cords(ZYX): \") + (org.bukkit.ChatColor.GRAY)) + Zcord) + (org.bukkit.ChatColor.GOLD)) + \",\") + (org.bukkit.ChatColor.GRAY)) + Ycord) + (org.bukkit.ChatColor.GOLD)) + \",\") + (org.bukkit.ChatColor.GRAY)) + Xcord)); } int count = 0; java.sql.ResultSet res = stmt.executeQuery(((\"SELECT COUNT(*) FROM DATA WHERE playername = '\" + (args[1])) + \"'\")); while (res.next()) { count = res.getInt(1); } player.sendMessage(((((((((((((((((org.bukkit.ChatColor.DARK_GRAY) + \" ----- \") + (org.bukkit.ChatColor.DARK_RED)) + \"Grief Notice \") + (org.bukkit.ChatColor.DARK_GRAY)) + \" - \") + (org.bukkit.ChatColor.GOLD)) + \"Displaying page \") + (org.bukkit.ChatColor.GRAY)) + (offset / 10)) + (org.bukkit.ChatColor.GOLD)) + \"/\") + (org.bukkit.ChatColor.GRAY)) + ((int) (java.lang.Math.ceil((count / 10.0))))) + (org.bukkit.ChatColor.DARK_GRAY)) + \" ----- \")); rs.close(); stmt.close(); c.close(); } } catch (java.lang.Exception e) { java.lang.System.err.println((((e.getClass().getName()) + \": \") + (e.getMessage()))); java.lang.System.exit(0); } }else if (args[0].equals(\"help\")) { player.sendMessage(((((((org.bukkit.ChatColor.DARK_GRAY) + \" ----- \") + (org.bukkit.ChatColor.DARK_RED)) + \"Grief Notice \") + (org.bukkit.ChatColor.DARK_GRAY)) + \" ----- \")); player.sendMessage(((((org.bukkit.ChatColor.GOLD) + \"/gn status\") + (org.bukkit.ChatColor.DARK_GRAY)) + \" Checks recent logs for possible griefs.\")); player.sendMessage(((((org.bukkit.ChatColor.GOLD) + \"/gn checkplayer <player> <page>\") + (org.bukkit.ChatColor.DARK_GRAY)) + \" Checks player for their possible griefing logs.\")); player.sendMessage(((((org.bukkit.ChatColor.GOLD) + \"/gn tp <id>\") + (org.bukkit.ChatColor.DARK_GRAY)) + \" Teleports to the ID.\")); player.sendMessage(((((org.bukkit.ChatColor.GOLD) + \"/gn monitor <player>\") + (org.bukkit.ChatColor.DARK_GRAY)) + \" Monitors that player again.\")); }else { player.sendMessage(((((me.SuperPyroManiac.spigot.GriefNotice.preFix) + \"Unknown Command. Use: \") + (org.bukkit.ChatColor.GOLD)) + \"/gn help\")); } }else { player.sendMessage(((((((me.SuperPyroManiac.spigot.GriefNotice.preFix) + \"You do have permission for this! (\") + (org.bukkit.ChatColor.GOLD)) + \"griefnotice.admin\") + (org.bukkit.ChatColor.DARK_GRAY)) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/990/buggy-version/src.me.SuperPyroManiac.spigot.GriefNotice.java", "BodyUseAPI": ["org.bukkit.entity.Player.sendMessage((((((((((((((((((me.SuperPyroManiac.spigot.GriefNotice.preFix) + (org.bukkit.ChatColor.DARK_GRAY)) + \"Teleporting you to: \") + (org.bukkit.ChatColor.GRAY)) + x) + (org.bukkit.ChatColor.GOLD)) + \",\") + (org.bukkit.ChatColor.GRAY)) + y) + (org.bukkit.ChatColor.GOLD)) + \",\") + (org.bukkit.ChatColor.GRAY)) + z) + (org.bukkit.ChatColor.GOLD)) + \" in the world: \") + (org.bukkit.ChatColor.GRAY)) + (rs.getString(\"world\"))))", "org.bukkit.entity.Player.sendMessage(((((((((((((((((((((((((((((org.bukkit.ChatColor.GOLD) + \"ID: \") + (org.bukkit.ChatColor.GRAY)) + id) + (org.bukkit.ChatColor.GOLD)) + \" Time: \") + (org.bukkit.ChatColor.GRAY)) + fDate) + (org.bukkit.ChatColor.GOLD)) + \" Block: \") + (org.bukkit.ChatColor.GRAY)) + blockname) + (org.bukkit.ChatColor.GOLD)) + \" World: \") + (org.bukkit.ChatColor.GRAY)) + world) + (org.bukkit.ChatColor.GOLD)) + \" Cords(ZYX): \") + (org.bukkit.ChatColor.GRAY)) + Zcord) + (org.bukkit.ChatColor.GOLD)) + \",\") + (org.bukkit.ChatColor.GRAY)) + Ycord) + (org.bukkit.ChatColor.GOLD)) + \",\") + (org.bukkit.ChatColor.GRAY)) + Xcord))", "org.bukkit.entity.Player.sendMessage(((((((((((((((((org.bukkit.ChatColor.DARK_GRAY) + \" ----- \") + (org.bukkit.ChatColor.DARK_RED)) + \"Grief Notice \") + (org.bukkit.ChatColor.DARK_GRAY)) + \" - \") + (org.bukkit.ChatColor.GOLD)) + \"Displaying page \") + (org.bukkit.ChatColor.GRAY)) + \"1\") + (org.bukkit.ChatColor.GOLD)) + \"/\") + (org.bukkit.ChatColor.GRAY)) + ((int) (java.lang.Math.ceil((count / 10.0))))) + (org.bukkit.ChatColor.DARK_GRAY)) + \" ----- \"))", "org.bukkit.entity.Player.sendMessage(((((((org.bukkit.ChatColor.DARK_GRAY) + \" ----- \") + (org.bukkit.ChatColor.DARK_RED)) + \"Grief Notice \") + (org.bukkit.ChatColor.DARK_GRAY)) + \" ----- \"))", "org.bukkit.entity.Player.sendMessage(((((org.bukkit.ChatColor.GOLD) + \"/gn monitor <player>\") + (org.bukkit.ChatColor.DARK_GRAY)) + \" Monitors that player again.\"))", "org.bukkit.entity.Player.sendMessage(((((((me.SuperPyroManiac.spigot.GriefNotice.preFix) + \"You do have permission for this! (\") + (org.bukkit.ChatColor.GOLD)) + \"griefnotice.admin\") + (org.bukkit.ChatColor.DARK_GRAY)) + \")\"))", "org.bukkit.entity.Player.sendMessage(((((((((((((((((((((((((((((org.bukkit.ChatColor.GOLD) + \"ID: \") + (org.bukkit.ChatColor.GRAY)) + id) + (org.bukkit.ChatColor.GOLD)) + \" Time: \") + (org.bukkit.ChatColor.GRAY)) + fDate) + (org.bukkit.ChatColor.GOLD)) + \" Block: \") + (org.bukkit.ChatColor.GRAY)) + blockname) + (org.bukkit.ChatColor.GOLD)) + \" World: \") + (org.bukkit.ChatColor.GRAY)) + world) + (org.bukkit.ChatColor.GOLD)) + \" Cords(ZYX): \") + (org.bukkit.ChatColor.GRAY)) + Zcord) + (org.bukkit.ChatColor.GOLD)) + \",\") + (org.bukkit.ChatColor.GRAY)) + Ycord) + (org.bukkit.ChatColor.GOLD)) + \",\") + (org.bukkit.ChatColor.GRAY)) + Xcord))", "org.bukkit.entity.Player.sendMessage(((((org.bukkit.ChatColor.GOLD) + \"/gn checkplayer <player> <page>\") + (org.bukkit.ChatColor.DARK_GRAY)) + \" Checks player for their possible griefing logs.\"))", "org.bukkit.entity.Player.sendMessage(((((me.SuperPyroManiac.spigot.GriefNotice.preFix) + \"Unknown Command. Use: \") + (org.bukkit.ChatColor.GOLD)) + \"/gn help\"))", "org.bukkit.entity.Player.sendMessage(((((((((((((((((org.bukkit.ChatColor.DARK_GRAY) + \" ----- \") + (org.bukkit.ChatColor.DARK_RED)) + \"Grief Notice \") + (org.bukkit.ChatColor.DARK_GRAY)) + \" - \") + (org.bukkit.ChatColor.GOLD)) + \"Displaying page \") + (org.bukkit.ChatColor.GRAY)) + (offset / 10)) + (org.bukkit.ChatColor.GOLD)) + \"/\") + (org.bukkit.ChatColor.GRAY)) + ((int) (java.lang.Math.ceil((count / 10.0))))) + (org.bukkit.ChatColor.DARK_GRAY)) + \" ----- \"))", "org.bukkit.entity.Player.sendMessage(((((((((((((org.bukkit.ChatColor.DARK_GRAY) + \" ----- \") + (org.bukkit.ChatColor.DARK_RED)) + \"Grief Notice \") + (org.bukkit.ChatColor.DARK_GRAY)) + \"- \") + (org.bukkit.ChatColor.GOLD)) + \"Last 10 Results: \") + (org.bukkit.ChatColor.RED)) + (args[1])) + (org.bukkit.ChatColor.DARK_GRAY)) + \" -----\"))", "org.bukkit.entity.Player.sendMessage(((((((((((((((((org.bukkit.ChatColor.GOLD) + \"ID: \") + (org.bukkit.ChatColor.GRAY)) + breakid) + (org.bukkit.ChatColor.GOLD)) + \" Name: \") + (org.bukkit.ChatColor.RED)) + name) + (org.bukkit.ChatColor.GOLD)) + \" Broke: \") + (org.bukkit.ChatColor.GRAY)) + count) + (org.bukkit.ChatColor.GOLD)) + \" last break: \") + (org.bukkit.ChatColor.GRAY)) + fDate))", "org.bukkit.entity.Player.teleport(org.bukkit.Location)", "org.bukkit.entity.Player.sendMessage(((((((((((org.bukkit.ChatColor.DARK_GRAY) + \" ----- \") + (org.bukkit.ChatColor.DARK_RED)) + \"Grief Notice Check \") + (org.bukkit.ChatColor.DARK_GRAY)) + \"- \") + (org.bukkit.ChatColor.GOLD)) + \"Last 10 Results \") + (org.bukkit.ChatColor.DARK_GRAY)) + \"-----\"))", "org.bukkit.entity.Player.sendMessage(((((((org.bukkit.ChatColor.DARK_GRAY) + \"- \") + (org.bukkit.ChatColor.GOLD)) + \"Use /gn checkplayer <playername> to view the log \") + (org.bukkit.ChatColor.GOLD)) + \" -\"))", "org.bukkit.entity.Player.sendMessage(((((org.bukkit.ChatColor.GOLD) + \"/gn tp <id>\") + (org.bukkit.ChatColor.DARK_GRAY)) + \" Teleports to the ID.\"))", "org.bukkit.entity.Player.sendMessage(((((org.bukkit.ChatColor.GOLD) + \"/gn status\") + (org.bukkit.ChatColor.DARK_GRAY)) + \" Checks recent logs for possible griefs.\"))"], "Fixed commit": "c2f1adc8b8a0a69e0bd6615146e6294eb2fedbdb", "Url": "https://api.github.com/repos/SuperPyroManiac/GriefNotice", "Date": "2016-09-07T07:41:38Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) == 0) { player.sendMessage(((((me.SuperPyroManiac.spigot.GriefNotice.preFix) + \"Unknown Command. Use: \") + (org.bukkit.ChatColor.GOLD)) + \"/gn help\")); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/990/buggy-version/src.me.SuperPyroManiac.spigot.GriefNotice.java", "BodyUseAPI": [], "Fixed commit": "c2f1adc8b8a0a69e0bd6615146e6294eb2fedbdb", "Url": "https://api.github.com/repos/SuperPyroManiac/GriefNotice", "Date": "2016-09-07T07:41:38Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (defaultListModel.isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8080/buggy-version/src.paul.sqlitedict.ui.FrameMain.java", "BodyUseAPI": [], "Fixed commit": "fa39984b19d072a7a5d136dc8366092ed0015af2", "Url": "https://api.github.com/repos/ghPaulwen/sqlitedict", "Date": "2016-05-29T04:49:09Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((topbar.getVisibility()) == (android.view.View.VISIBLE)) { p = new com.prolificinteractive.materialcalendarview.LayoutParams((size * (MonthView.DEFAULT_DAYS_IN_WEEK)), (size * ((MonthView.DEFAULT_MONTH_TILE_HEIGHT) + 1))); }else { p = new com.prolificinteractive.materialcalendarview.LayoutParams((size * (MonthView.DEFAULT_DAYS_IN_WEEK)), (size * (MonthView.DEFAULT_MONTH_TILE_HEIGHT))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/791/buggy-version/library.src.main.java.com.prolificinteractive.materialcalendarview.MaterialCalendarView.java", "BodyUseAPI": [], "Fixed commit": "d4551a0fce2a9db5a5544fc7dd14e259bf0a5249", "Url": "https://api.github.com/repos/MichiganLabs/material-calendarview", "Date": "2015-06-25T05:40:49Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.netflix.imflibrary.utils.ResourceByteRangeProvider.getByteRange(java.lang.Long,long,java.io.File)", "java.io.File.getAbsolutePath()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(headerPartition.renameTo(new java.io.File((inputPath + \".hdr\"))))) { com.netflix.imflibrary.utils.IMFTrackFilePartitionsExtractor.logger.info(java.lang.String.format(\"Couldn't rename the file containing the header partition\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/7362/buggy-version/src.main.java.com.netflix.imflibrary.utils.IMFTrackFilePartitionsExtractor.java", "BodyUseAPI": [], "Fixed commit": "6ee1bb1b3ab7fe35cddbf3b9feb0499d3fc41668", "Url": "https://api.github.com/repos/Netflix/photon", "Date": "2016-05-20T22:44:37Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((pass.equals(\"\")) || (uid.equals(\"\"))) { javax.swing.JOptionPane.showMessageDialog(null, \"Username/Password field empty !\", \"Login failed\", javax.swing.JOptionPane.ERROR_MESSAGE); }else if (con.validate(uid, pass)) { javax.swing.JOptionPane.showMessageDialog(null, \"Credentials are Correct\"); }else { javax.swing.JOptionPane.showMessageDialog(null, \"Username/Password Incorrect\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/8924/buggy-version/Project.RMS.loginUI.java", "BodyUseAPI": ["mysqlConn.validate(java.lang.String,java.lang.String)"], "Fixed commit": "d7ade4d541146f7a0d7b30353fa9a55d72cfc528", "Url": "https://api.github.com/repos/itsniaz/javaLab", "Date": "2017-04-13T08:21:23Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((drink_volume_max) > 1000) { drink_volume_max = 1000; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6283/buggy-version/app.src.main.java.net.validcat.st.wb.support.CalculationNormsWater.java", "BodyUseAPI": [], "Fixed commit": "716f06714ae989736686b40f346257afa9b9b91f", "Url": "https://api.github.com/repos/zonell/Aqua-Balans", "Date": "2016-02-25T08:53:54Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((drink_volume_min) > 1000) { drink_volume_min = 1000; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6283/buggy-version/app.src.main.java.net.validcat.st.wb.support.CalculationNormsWater.java", "BodyUseAPI": [], "Fixed commit": "716f06714ae989736686b40f346257afa9b9b91f", "Url": "https://api.github.com/repos/zonell/Aqua-Balans", "Date": "2016-02-25T08:53:54Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((weightPreference) == 0) { weightPreference = 70; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6283/buggy-version/app.src.main.java.net.validcat.st.wb.support.CalculationNormsWater.java", "BodyUseAPI": [], "Fixed commit": "716f06714ae989736686b40f346257afa9b9b91f", "Url": "https://api.github.com/repos/zonell/Aqua-Balans", "Date": "2016-02-25T08:53:54Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.ItemDTO.createItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((i.getExitTime()) != null) && ((i.getContainer()) == null)) { removedItems.add(i); updateItemsByDateIndex(i, it.getExitTime()); }else if (((i.getExitTime()) == null) && ((i.getContainer()) != null)) { updateItemsByContainerIndex(i); updateItemByTagIndex(i); }else { java.lang.System.out.println((\"Skipping read itemDTO: \" + it)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6398/buggy-version/src.model.ItemManager.java", "BodyUseAPI": ["model.ItemManager.updateItemsByDateIndex(model.Item,it.getExitTime())", "model.ItemManager.updateItemsByContainerIndex(model.Item)", "java.util.Set<model.Item>.add(model.Item)", "model.Item.getContainer()", "model.ItemManager.updateItemByTagIndex(model.Item)", "model.Item.getExitTime()"], "Fixed commit": "f410f1bc8e3f28e9b1085e738f85797eaafe30e5", "Url": "https://api.github.com/repos/jacoblwright/hit", "Date": "2013-08-06T21:48:04Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(retail.manager.persist.PersistShop.cm.cacheExists(RetailConstants.CACHE_NAME))) { retail.manager.persist.PersistShop.cm.addCache(RetailConstants.CACHE_NAME); retail.manager.persist.PersistShop.logger.info(\"Cache - retailCache has been initialized\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3831/buggy-version/src.main.java.retail.manager.persist.PersistShop.java", "BodyUseAPI": [], "Fixed commit": "25671c45676aaad2258a9635a2dfddbc6e724cea", "Url": "https://api.github.com/repos/snehalckute/retail-manager", "Date": "2017-08-03T18:15:09Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mClassList.size()) > 0) { mContext.startActivity(tesis.com.estudiemos.utils.IntentUtils.getClassDetailIntent(mOrigin, mClassList.get(position).getId())); }else { tesis.com.estudiemos.utils.SnackBarHelper.showSnackBarWithNoAction(mCoordinator, mContext.getString(R.string.fail_connection_info)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1157/buggy-version/app.src.main.java.tesis.com.estudiemos.adapters.ClassAdapter.java", "BodyUseAPI": ["java.util.List<tesis.com.estudiemos.model.ClassModel>.get(int)", "android.content.Context.startActivity(tesis.com.estudiemos.utils.IntentUtils.getClassDetailIntent(mOrigin, mClassList.get(position).getId()))", "mClassList.get(position).getId()", "tesis.com.estudiemos.utils.IntentUtils.getClassDetailIntent(tesis.com.estudiemos.base.BaseActivity,mClassList.get(position).getId())"], "Fixed commit": "1f6f67712f4cd7af3bce1eede05a0c70eb29856d", "Url": "https://api.github.com/repos/apuli/Estudiemos", "Date": "2016-12-06T16:53:36Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mGroupList.size()) > 0) { mContext.startActivity(tesis.com.estudiemos.utils.IntentUtils.getGroupDetailIntent(mOrigin, mGroupList.get(position).getId())); }else { tesis.com.estudiemos.utils.SnackBarHelper.showSnackBarWithNoAction(mCoordinator, mContext.getString(R.string.fail_connection_info)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1157/buggy-version/app.src.main.java.tesis.com.estudiemos.adapters.GroupAdapter.java", "BodyUseAPI": ["android.content.Context.startActivity(tesis.com.estudiemos.utils.IntentUtils.getGroupDetailIntent(mOrigin, mGroupList.get(position).getId()))", "tesis.com.estudiemos.utils.IntentUtils.getGroupDetailIntent(tesis.com.estudiemos.base.BaseActivity,mGroupList.get(position).getId())", "java.util.List<tesis.com.estudiemos.model.GroupModel>.get(int)", "mGroupList.get(position).getId()"], "Fixed commit": "1f6f67712f4cd7af3bce1eede05a0c70eb29856d", "Url": "https://api.github.com/repos/apuli/Estudiemos", "Date": "2016-12-06T16:53:36Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mClassList.size()) > 0) { mContext.startActivity(tesis.com.estudiemos.utils.IntentUtils.getClassDetailIntent(mOrigin, mClassList.get(position).getId())); }else { tesis.com.estudiemos.utils.SnackBarHelper.showSnackBarWithNoAction(mCoordinator, mContext.getString(R.string.fail_connection_info)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1157/buggy-version/app.src.main.java.tesis.com.estudiemos.adapters.OwnClassAdapter.java", "BodyUseAPI": ["android.content.Context.startActivity(tesis.com.estudiemos.utils.IntentUtils.getClassDetailIntent(mOrigin, mClassList.get(position).getId()))", "tesis.com.estudiemos.utils.IntentUtils.getClassDetailIntent(tesis.com.estudiemos.base.BaseActivity,mClassList.get(position).getId())", "mClassList.get(position).getId()", "java.util.List<tesis.com.estudiemos.model.ClassModel>.get(int)"], "Fixed commit": "1f6f67712f4cd7af3bce1eede05a0c70eb29856d", "Url": "https://api.github.com/repos/apuli/Estudiemos", "Date": "2016-12-06T16:53:36Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.faces.context.FacesContext.getCurrentInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (facesContext == null) { log.warn(java.lang.String.format(\"facesContext is null - Couldn't deliver message '%s' to component '%s'\", ((summary + \" : \") + detail), component)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2250/buggy-version/platform-infrastructure.web-app.src.main.java.org.societies.webapp.controller.BasePageController.java", "BodyUseAPI": [], "Fixed commit": "08a7771f047b3921ddfeb472416d06e27f452e79", "Url": "https://api.github.com/repos/societies/SOCIETIES-Platform", "Date": "2013-08-30T19:19:32Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (config.hasChanged()) { config.save(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/898/buggy-version/common.com.dmillerw.remoteIO.RemoteIO.java", "BodyUseAPI": ["net.minecraftforge.common.Configuration.save()"], "Fixed commit": "0160b394fd479e9a5a26c8e651f1fd24f9d5af9c", "Url": "https://api.github.com/repos/dmillerw/RemoteIO", "Date": "2013-12-11T22:30:55Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lineItems[1].indexOf('[')) == (-1)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/3967/buggy-version/src.main.java.uk.ac.ebi.pride.data.mztab.parser.MetadataLineItemParserStrategy.java", "BodyUseAPI": [], "Fixed commit": "ca7ffce5b93de957a38e437cd1e373c8b6dbbeb1", "Url": "https://api.github.com/repos/proteomexchange/px-submission-core", "Date": "2016-07-29T10:09:39Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((wolves[i]) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6317/buggy-version/war.src.main.java.com.tommytony.war.job.CheckWolfsJob.java", "BodyUseAPI": [], "Fixed commit": "798cef6ff0758fc55a94d88c13d1326062e049d5", "Url": "https://api.github.com/repos/grinning/war", "Date": "2013-04-22T01:51:39Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((events.size()) <= 0) { availability = \"Available\"; availabilityTimeInfo = \"All day\"; }else { this.todaysEvents = com.willowtreeapps.skrej.EventTimeUtility.filterEventsForToday(events); com.google.api.services.calendar.model.Event event = events.get(0); availability = getRoomAvailability(event); availabilityTimeInfo = getRoomAvailabilityTimeInfo(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6647/buggy-version/app.src.main.java.com.willowtreeapps.skrej.conference.ConferencePresenterImpl.java", "BodyUseAPI": ["java.util.List<com.google.api.services.calendar.model.Event>.get(int)", "com.willowtreeapps.skrej.EventTimeUtility.filterEventsForToday(java.util.List<com.google.api.services.calendar.model.Event>)"], "Fixed commit": "c9d69e6c91326d9b110188c65154265741346e8d", "Url": "https://api.github.com/repos/BarryBryant/Skrej", "Date": "2016-11-11T15:37:24Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getWidget().getNumberOfSeries()) == 0) { seriesAndDataLabelsRendered = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6397/buggy-version/addon.src.main.java.com.vaadin.addon.charts.shared.ChartConnector.java", "BodyUseAPI": [], "Fixed commit": "b3e82a02f0e4e216fada8a1a8671d1668ade6388", "Url": "https://api.github.com/repos/vaadin/charts", "Date": "2017-06-09T10:57:16Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jsOverlay.getSeries()) != null) { return jsOverlay.getSeries().length(); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/6397/buggy-version/addon.src.main.java.com.vaadin.addon.charts.client.ui.HighchartWidget.java", "BodyUseAPI": ["jsOverlay.getSeries().length()", "com.vaadin.addon.charts.client.ui.HighchartJsOverlay.getSeries()"], "Fixed commit": "b3e82a02f0e4e216fada8a1a8671d1668ade6388", "Url": "https://api.github.com/repos/vaadin/charts", "Date": "2017-06-09T10:57:16Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(scrollable.exists())) { io.appium.android.bootstrap.Logger.debug((\"Not scrolling because scrollable does not exist: \" + (scrollable.getSelector()))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/1320/buggy-version/bootstrap.src.io.appium.android.bootstrap.utils.UiScrollableParser.java", "BodyUseAPI": ["io.appium.android.bootstrap.Logger.debug((\"Not scrolling because scrollable does not exist: \" + (scrollable.getSelector())))", "com.android.uiautomator.core.UiScrollable.getSelector()"], "Fixed commit": "74d06a50599614a272edd03b277530ec134d6c92", "Url": "https://api.github.com/repos/appium/appium-android-bootstrap", "Date": "2015-10-21T16:31:40Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(string.matches(parser.DateAndTimeChecker.DEFAULT_TIME_REGEX))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V101/2659/buggy-version/src.parser.DateAndTimeChecker.java", "BodyUseAPI": [], "Fixed commit": "0b28524e513beeed69d7800ae071c86c29442069", "Url": "https://api.github.com/repos/cs2103aug2014-t11-1j/main", "Date": "2014-10-17T05:01:56Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id == ((Client.totalChunkNumber) - 1)) { byte[] bytes = new byte[(RAFile.length()) - (id * (Client.chunkSize))]; }else { byte[] bytes = new byte[Client.chunkSize]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2700/buggy-version/Client.java", "BodyUseAPI": [], "Fixed commit": "dad969d88355db1a68a935aed7dd73c3807cd667", "Url": "https://api.github.com/repos/CS3103-Project-Group-5/HALPZ", "Date": "2017-11-04T08:15:14Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((blue.gui.InfoDialog.infoText) == null) { try { javax.swing.SwingUtilities.invokeAndWait(() -> blue.gui.InfoDialog.infoText = new blue.ui.nbutilities.MimeTypeEditorComponent(\"text/plain\")); } catch (java.lang.InterruptedException ex) { org.openide.util.Exceptions.printStackTrace(ex); } catch (java.lang.reflect.InvocationTargetException ex) { org.openide.util.Exceptions.printStackTrace(ex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3320/buggy-version/blue-ui-core.src.blue.gui.InfoDialog.java", "BodyUseAPI": [], "Fixed commit": "a76a73834fdb7a7e5e4d9f9d2d17db5a0296b474", "Url": "https://api.github.com/repos/kunstmusik/blue", "Date": "2015-07-07T21:31:52Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["QLearner.getBestAction(java.lang.Double[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nextBestAction >= 0) { Q[s][a] = (rewards[s][a]) + (gamma * (Q[nextState][nextBestAction])); }else { Q[s][a] = (rewards[s][a]) + (gamma * 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/268/buggy-version/AIQlearning.src.QLearner.java", "BodyUseAPI": [], "Fixed commit": "f7400e2f984a6ead7e56d158e9f939e0495d2379", "Url": "https://api.github.com/repos/mthaak/2id90-ia2", "Date": "2016-03-28T16:18:06Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tregression.StepChangeTypeChecker.getType(microbat.model.trace.TraceNode,boolean,tregression.model.PairList,tregression.separatesnapshots.DiffMatcher)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((matchingStepType.getWrongVariableList()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6612/buggy-version/tregression.src.main.tregression.empiricalstudy.RootCauseFinder.java", "BodyUseAPI": [], "Fixed commit": "f7fca8586139cc0768dd94ff78e628be3134bfe0", "Url": "https://api.github.com/repos/llmhyy/tregression", "Date": "2017-12-25T16:20:58Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name.length()) == 0) { return messages.format(\"noname\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1281/buggy-version/src.main.java.de.onyxbits.tradetrax.pages.tools.Importer.java", "BodyUseAPI": [], "Fixed commit": "cf930d9a97412405c53ba68d34675b5625bb802c", "Url": "https://api.github.com/repos/onyxbits/TradeTrax", "Date": "2014-11-26T19:09:12Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selectEvent.getKalendarEvent()) != null) { doOpenEventCallout(ureq, selectEvent.getKalendarEvent(), selectEvent.getKalendarRenderWrapper(), selectEvent.getTargetDomId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4705/buggy-version/src.main.java.org.olat.commons.calendar.ui.WeeklyCalendarController.java", "BodyUseAPI": ["org.olat.commons.calendar.ui.events.KalendarGUISelectEvent.getKalendarEvent()", "org.olat.commons.calendar.ui.events.KalendarGUISelectEvent.getTargetDomId()", "org.olat.commons.calendar.ui.WeeklyCalendarController.doOpenEventCallout(org.olat.core.gui.UserRequest,selectEvent.getKalendarEvent(),selectEvent.getKalendarRenderWrapper(),selectEvent.getTargetDomId())", "org.olat.commons.calendar.ui.events.KalendarGUISelectEvent.getKalendarRenderWrapper()"], "Fixed commit": "960ec8f8bbc8d78c55b01e7fceea097628228237", "Url": "https://api.github.com/repos/klemens/openolat", "Date": "2014-09-17T15:11:41Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (simpleDb.getDomainManagementPolicy().equals(DomainManagementPolicy.DROP_CREATE)) { if (false == (manager.exists(domainName, simpleDbClient))) { manager.createDomain(domainName, simpleDbClient); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4965/buggy-version/spring-data-simpledb-impl.src.main.java.org.springframework.data.simpledb.core.AbstractSimpleDbTemplate.java", "BodyUseAPI": [], "Fixed commit": "db06802fca189466c3a5eb998c3b8bad0497475f", "Url": "https://api.github.com/repos/3pillarlabs/spring-data-simpledb", "Date": "2013-08-19T17:48:22Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isMaster()) return drain(maxDrain, doDrain, tank);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3189/buggy-version/src.main.java.buildcraftAdditions.tileEntities.TileCoolingTower.java", "BodyUseAPI": [], "Fixed commit": "05119f0bacbe87572a208994235932f60440010a", "Url": "https://api.github.com/repos/BCA-Team/Buildcraft-Additions", "Date": "2015-02-05T16:16:55Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((RentItem.rental[i][4]) != null) { java.lang.String daysBorrowed = RentItem.rental[i][4]; daysBorrowedINT = java.lang.Integer.parseInt(daysBorrowed); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4794/buggy-version/src.OverdueItems.java", "BodyUseAPI": [], "Fixed commit": "20f77b93a5469e208cc20bf409fc12ec5b368e64", "Url": "https://api.github.com/repos/thivyanWhy/cdUni", "Date": "2015-03-21T19:49:59Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(relativePath.equals(\"\"))) { relativePath += \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1728/buggy-version/src.main.java.com.debugtoday.htmldecoder.decoder.ArticleDecoder.java", "BodyUseAPI": [], "Fixed commit": "d68e8d727ac9e0086bcee299bb4050dd1a49112b", "Url": "https://api.github.com/repos/zydecx/htmldecoder", "Date": "2015-10-05T16:07:58Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (todoPos >= todoLen) { int[] swap = todo; todo = alternate; alternate = swap; todoPos = 0; todoLen = alternatePos; alternatePos = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2892/buggy-version/src.ImgColor.java", "BodyUseAPI": [], "Fixed commit": "5bb376337554275b195fc08201dc258bb908ea34", "Url": "https://api.github.com/repos/mumbleskates/allcolor", "Date": "2017-07-05T00:08:48Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (run instanceof hudson.matrix.MatrixRun) { hudson.matrix.MatrixRun mrun = ((hudson.matrix.MatrixRun) (run)); hudson.matrix.Combination c = mrun.getProject().getCombination(); create.summary += c.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1045/buggy-version/src.main.java.NitrateIntegration.TcmsGatherer.java", "BodyUseAPI": [], "Fixed commit": "aff06aa5bf675930c7d868680273326dda65da73", "Url": "https://api.github.com/repos/AdamSaleh/NitrateRPC", "Date": "2012-04-27T10:50:57Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!offered) { offered = requests.offer(req); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7150/buggy-version/src.com.weblogs.log4j.WeblogsAppender.java", "BodyUseAPI": [], "Fixed commit": "6dc348011b43887c128cf08d21cc9a44ccbaa1d3", "Url": "https://api.github.com/repos/javanotes/weblog4jappender", "Date": "2015-12-07T13:31:21Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connDef instanceof org.jboss.jca.common.api.metadata.common.v12.CommonConnDef) { setAttribute(model, org.jboss.as.connector.subsystems.resourceadapters.Constants.CONNECTABLE, ((org.jboss.jca.common.api.metadata.common.v12.CommonConnDef) (connDef)).isConnectable()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5146/buggy-version/connector.src.main.java.org.jboss.as.connector.subsystems.resourceadapters.IronJacamarResourceCreator.java", "BodyUseAPI": [], "Fixed commit": "7972d75a0af4e98d252a16a657c042c88c773ba9", "Url": "https://api.github.com/repos/kabir/wildfly", "Date": "2014-03-20T13:52:55Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loginRememberMeCheckBox().isSelected()) { loginRememberMeCheckBox().click(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3508/buggy-version/src.main.java.GmailPages.GmailLoginPage.java", "BodyUseAPI": [], "Fixed commit": "cdcfcd32cd518ed7f8f6a85f96675b0d6d07c650", "Url": "https://api.github.com/repos/JuanRodriguezAbarca/BDDFrameWorkCreation", "Date": "2015-07-07T12:45:04Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((main.AnimeIndex.preferenceDialog) == null) main.AnimeIndex.preferenceDialog = new util.window.PreferenceDialog();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8687/buggy-version/src.util.UtilEvent.java", "BodyUseAPI": [], "Fixed commit": "650b9f899ad221cbd9352cb7f7ab3294fa96412a", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2016-06-25T14:35:45Z"},
{"Line": "=>573", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mPvP)) mAudioPlayer.play(getActivity(), R.raw.lose); else mAudioPlayer.play(getActivity(), R.raw.cheer);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3342/buggy-version/GameActivity.src.edu.harding.AndroidPentago.GameFragment.java", "BodyUseAPI": [], "Fixed commit": "c3b8ba839eff77ce4547dd52b90a6c3a8440f702", "Url": "https://api.github.com/repos/spenderg42/Android-Pentago", "Date": "2014-04-26T02:43:26Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.shayanetan.borrowise.Fragments.AddMoneyFragment.2.checkUserIfExists(com.example.shayanetan.borrowise.Fragments.AddMoneyFragment.2,com.example.shayanetan.borrowise.Fragments.AddMoneyFragment.2)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (-1)) { id = ((int) (databaseOpenHelper.insertUser(new com.example.shayanetan.borrowise.Models.User(selected_name, selected_contact_number, 0)))); }else { java.lang.System.out.println(\"USER doesnt EXISTS!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8342/buggy-version/BorroWise.app.src.main.java.com.example.shayanetan.borrowise.Fragments.AddMoneyFragment.java", "BodyUseAPI": [], "Fixed commit": "1f38a9939a0097b603ede5273359e2e541ac7460", "Url": "https://api.github.com/repos/XGBXGB/BorroWise", "Date": "2016-03-12T12:10:31Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.shayanetan.borrowise.Adapters.CursorRecyclerViewAdapter<RecyclerView.ViewHolder>.getCursor()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (itemCursor.getString(itemCursor.getColumnIndex(Transaction.COLUMN_CLASSIFICATION)).equalsIgnoreCase(\"item\")) return com.example.shayanetan.borrowise.Adapters.TransactionsCursorAdapter.TYPE_ITEM; else return com.example.shayanetan.borrowise.Adapters.TransactionsCursorAdapter.TYPE_MONEY;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8342/buggy-version/BorroWise.app.src.main.java.com.example.shayanetan.borrowise.Adapters.TransactionsCursorAdapter.java", "BodyUseAPI": [], "Fixed commit": "1f38a9939a0097b603ede5273359e2e541ac7460", "Url": "https://api.github.com/repos/XGBXGB/BorroWise", "Date": "2016-03-12T12:10:31Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (mat != null) return \"material.\" + (mat.getUnlocalizedName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/378/buggy-version/src.main.java.zmaster587.libVulpes.block.BlockOre.java", "BodyUseAPI": ["net.minecraft.block.material.Material.getUnlocalizedName()"], "Fixed commit": "efa4ba2d25cb737c100e32bdc0dc7803668ac84c", "Url": "https://api.github.com/repos/zmaster587/libVulpes", "Date": "2017-05-04T17:49:39Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (mat != null) return mat.getColor();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/378/buggy-version/src.main.java.zmaster587.libVulpes.util.OreProductColorizer.java", "BodyUseAPI": ["zmaster587.libVulpes.api.material.Material.getColor()"], "Fixed commit": "efa4ba2d25cb737c100e32bdc0dc7803668ac84c", "Url": "https://api.github.com/repos/zmaster587/libVulpes", "Date": "2017-05-04T17:49:39Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.hardrockrealms.digiwiz.hardrockinv.player.PlayerData.logoutWorld()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((logoutWorld != null) && ((logoutWorld.length()) > 0)) { if ((currentWorld.equals(logoutWorld)) == false) { org.bukkit.World logout = m_Plugin.getServer().getWorld(logoutWorld); playerWorldChange(player, logout, player.getWorld()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7694/buggy-version/src.ca.hardrockrealms.digiwiz.hardrockinv.player.PlayerManager.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "m_Plugin.getServer().getWorld(java.lang.String)"], "Fixed commit": "bf4e687d9403488f793306097b2af66dad9a07be", "Url": "https://api.github.com/repos/digiwiz11/HardRockInv", "Date": "2013-11-24T02:20:12Z"},
{"Line": "=>862", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (agency == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5552/buggy-version/src.org.mtransit.android.ui.view.MapViewController.java", "BodyUseAPI": [], "Fixed commit": "087c6b7279a75335b618215204cee793e5759acf", "Url": "https://api.github.com/repos/fraga/mtransit-for-android", "Date": "2015-02-23T01:02:26Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!(_allowMultipleMatches)) && ((_currToken) != null)) && ((_exposedContext) == null)) { if ((_currToken.isStructEnd()) && (_headContext.isStartHandled())) { return _currToken = null; }else if ((((_currToken.isScalarValue()) && (!(_headContext.isStartHandled()))) && (!(_includePath))) && ((_itemFilter) == (TokenFilter.INCLUDE_ALL))) { return _currToken = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5053/buggy-version/src.main.java.com.fasterxml.jackson.core.filter.FilteringParserDelegate.java", "BodyUseAPI": [], "Fixed commit": "e39f9a850818edd44bdc09e1bcc1f771d49e6be0", "Url": "https://api.github.com/repos/LokeshN/jackson-core", "Date": "2016-03-20T11:58:25Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (requestQueue != null) { voldemort.utils.pool.AsyncResourceRequest<V> resourceRequest = requestQueue.poll(); while (resourceRequest != null) { destroyRequest(resourceRequest); resourceRequest = requestQueue.poll(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8636/buggy-version/src.java.voldemort.utils.pool.QueuedKeyedResourcePool.java", "BodyUseAPI": ["java.util.Queue<voldemort.utils.pool.AsyncResourceRequest<V>>.poll()", "java.util.Queue<voldemort.utils.pool.AsyncResourceRequest<V>>.poll()"], "Fixed commit": "fd70696c064377457a840a4ce1622b97562727cb", "Url": "https://api.github.com/repos/jayjwylie/voldemort", "Date": "2012-11-08T22:48:38Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentMap<K, java.util.Queue<voldemort.utils.pool.AsyncResourceRequest<V>>>.get(K)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (requestQueueMap.replace(key, requestQueueToDestroy, newRequestQueue)) { destroyRequestQueue(requestQueueToDestroy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8636/buggy-version/src.java.voldemort.utils.pool.QueuedKeyedResourcePool.java", "BodyUseAPI": ["voldemort.utils.pool.QueuedKeyedResourcePool<K, V>.destroyRequestQueue(java.util.Queue<voldemort.utils.pool.AsyncResourceRequest<V>>)"], "Fixed commit": "fd70696c064377457a840a4ce1622b97562727cb", "Url": "https://api.github.com/repos/jayjwylie/voldemort", "Date": "2012-11-08T22:48:38Z"},
{"Line": "=>1201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ifdirection) FileReaders.XmlWriter.append_text_element(doc, element, edu.hit.mlg.individual.XML_TAG_DIRECTION, (direction ? \"+\" : \"-\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4602/buggy-version/edu.hit.mlg.individual.EctypalElement.java", "BodyUseAPI": [], "Fixed commit": "804966ee2a6eceb51f3cae3c05f695760000bac0", "Url": "https://api.github.com/repos/ljuan/gbhit", "Date": "2013-06-26T10:54:30Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.easyminning.etl.mahout.docparse2word.map.SplitAndFilterMapper.parse2Doc(java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (documentWritable == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/670/buggy-version/dataminning.src.main.java.com.easyminning.etl.mahout.docparse2word.map.SplitAndFilterMapper.java", "BodyUseAPI": [], "Fixed commit": "c4e0133eaff5174fa5fd20e6e15a0a60e9b3a253", "Url": "https://api.github.com/repos/comaple/KDD", "Date": "2014-09-19T04:42:47Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reborncore.common.util.OreUtil.doesOreExistAndValid(\"stoneMarble\")) { net.minecraft.item.ItemStack marbleStack = techreborn.init.ModRecipes.getOre(\"stoneMarble\"); marbleStack.setCount(1); reborncore.api.recipe.RecipeHandler.addRecipe(new techreborn.init.GrinderRecipe(marbleStack, techreborn.init.ItemDusts.getDustByName(\"marble\"), 120, 10)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5429/buggy-version/src.main.java.techreborn.init.ModRecipes.java", "BodyUseAPI": [], "Fixed commit": "aa2d15c1099df086b8740af6a91cabaaafd87c55", "Url": "https://api.github.com/repos/drcrazy/TechReborn", "Date": "2017-08-01T23:29:12Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reborncore.common.util.OreUtil.doesOreExistAndValid(\"stoneBasalt\")) { net.minecraft.item.ItemStack marbleStack = techreborn.init.ModRecipes.getOre(\"stoneBasalt\"); marbleStack.setCount(1); reborncore.api.recipe.RecipeHandler.addRecipe(new techreborn.init.GrinderRecipe(marbleStack, techreborn.init.ItemDusts.getDustByName(\"basalt\"), 120, 10)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5429/buggy-version/src.main.java.techreborn.init.ModRecipes.java", "BodyUseAPI": [], "Fixed commit": "aa2d15c1099df086b8740af6a91cabaaafd87c55", "Url": "https://api.github.com/repos/drcrazy/TechReborn", "Date": "2017-08-01T23:29:12Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lastEditIndex >= 0) { android.widget.EditText editText = this.rootView.getChildAt(lastEditIndex).findViewWithTag(lastEditIndex); blockValueListener.onValueChange(editText.getText().toString(), editText.getTag().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3477/buggy-version/verificationview.src.main.java.com.shalan.mohamed.verificationview.VerifyView.java", "BodyUseAPI": ["this.rootView.getChildAt(lastEditIndex).findViewWithTag(int)", "android.widget.LinearLayout.getChildAt(int)"], "Fixed commit": "d37e1d2d8f6a5b8c92ae6658459173c5db70e3f5", "Url": "https://api.github.com/repos/sh3lan93/VerifyBlocksView", "Date": "2017-11-23T12:51:29Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"ok\".equals(command)) { com.hobiron.bean.CommandTask.logger.info(\"Command execute successfully\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3980/buggy-version/src.main.java.com.hobiron.bean.CommandTask.java", "BodyUseAPI": [], "Fixed commit": "41c3b2293761dd32b2e9edc2edcf685565d954e1", "Url": "https://api.github.com/repos/hpq86zllw/ss-port-server", "Date": "2017-10-28T06:29:08Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null != fileList) { for (java.io.File f : fileList) { list.add(f.getAbsolutePath()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/606/buggy-version/app.src.main.java.com.github.baby.owspace.util.FileUtil.java", "BodyUseAPI": [], "Fixed commit": "3cae561e2f22718368062b4c876acc1118d03a42", "Url": "https://api.github.com/repos/babylikebird/owspace", "Date": "2016-08-04T03:45:06Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentPlayer.getHand().getCards().get(draggedCardIndex).getType()) == \"path\") { model.cards.PathCard draggedCard = ((model.cards.PathCard) (currentPlayer.getHand().getCards().get(draggedCardIndex))); java.lang.String imageName = (((\"/resources/images/cards/\" + (draggedCard.getName())) + \"-rotate\") + (draggedCard.getRotation())) + \".png\"; javafx.scene.image.Image image = new javafx.scene.image.Image(getClass().getResourceAsStream(imageName)); target.setImage(image); return true; }else { model.cards.Card draggedCard = currentPlayer.getHand().getCards().get(draggedCardIndex); java.lang.String imageName = (\"/resources/images/cards/\" + (draggedCard.getName())) + \".png\"; javafx.scene.image.Image image = new javafx.scene.image.Image(getClass().getResourceAsStream(imageName)); target.setImage(image); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5967/buggy-version/src.controller.DropListener.java", "BodyUseAPI": ["currentPlayer.getHand().getCards().get(int)", "currentPlayer.getHand().getCards().get(int)", "currentPlayer.getHand().getCards()", "model.Player.getHand()", "currentPlayer.getHand().getCards()", "model.Player.getHand()"], "Fixed commit": "93dc22245f4c37876be502ed9c096a3c1f5c33ec", "Url": "https://api.github.com/repos/dilingold/sabateur-game", "Date": "2017-04-09T00:07:23Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(f.isSuccess())) { throw new java.lang.Exception((\"Error whilst binding port for: \" + (getSocketAddress())), f.cause()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5633/buggy-version/src.main.java.com.iKeirNez.CommunicationsFramework.implementation.standard.connection.IServerConnection.java", "BodyUseAPI": ["io.netty.channel.ChannelFuture.cause()"], "Fixed commit": "61b07e419246908b945083ae11f6b54884cab54c", "Url": "https://api.github.com/repos/iKeirNez/CommunicationsFramework", "Date": "2014-05-04T07:57:48Z"},
{"Line": "=>552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (DateField.TYPE.equalsIgnoreCase(rs.getString(\"TYPE_NAME\"))) dataType = java.sql.Types.DATE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1071/buggy-version/mydb.mydb-war.src.main.java.com.silverpeas.mydb.control.MyDBSessionController.java", "BodyUseAPI": [], "Fixed commit": "8f37dfb8c00478f525c742094fc9e1d2d2ca5538", "Url": "https://api.github.com/repos/SilverDav/Silverpeas-Components", "Date": "2015-04-22T09:28:52Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mutexPage.getColumnGroupsPattern()) != null) { props.add(new org.gitools.resource.Property(\"Column grouping\", new org.gitools.utils.textpattern.TextPattern(mutexPage.getColumnGroupsPattern()).getVariableTokens().get(0).getVariableName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3543/buggy-version/org.gitools.plugins.mutex.src.main.java.org.gitools.plugins.mutex.ui.MutualExclusiveAnalysisWizard.java", "BodyUseAPI": ["new org.gitools.utils.textpattern.TextPattern(mutexPage.getColumnGroupsPattern()).getVariableTokens().get(int)", "org.gitools.plugins.mutex.ui.MutualExclusiveAnalysisPage.getColumnGroupsPattern()", "org.gitools.utils.textpattern.TextPattern.getVariableTokens()", "java.util.List<org.gitools.resource.Property>.add(org.gitools.resource.Property)", "new org.gitools.utils.textpattern.TextPattern(mutexPage.getColumnGroupsPattern()).getVariableTokens().get(0).getVariableName()"], "Fixed commit": "f66b48f4fdf0acfab86055e45c5297ca38741242", "Url": "https://api.github.com/repos/gitools/gitools", "Date": "2014-10-13T12:34:46Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hours < 10) { result = \"0\" + result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2185/buggy-version/Algorithms.TimeConversion.TimeConversion.java", "BodyUseAPI": [], "Fixed commit": "cc91da108f89ce26b6d9970a6454675e141c8e94", "Url": "https://api.github.com/repos/Xoadra/HackerRank", "Date": "2017-09-20T02:04:46Z"},
{"Line": "=>1034", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectionListe) != (-1)) { executeEnter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5730/buggy-version/src.Plateau.java", "BodyUseAPI": [], "Fixed commit": "ad89cddd6875d711d58e729e41dbd8a9d42e808c", "Url": "https://api.github.com/repos/frederic-prochnow/Projet-dut-n2", "Date": "2016-05-03T11:26:53Z"},
{"Line": "=>1029", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectionListe) != (-1)) { executeEnter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5730/buggy-version/src.Plateau.java", "BodyUseAPI": [], "Fixed commit": "ad89cddd6875d711d58e729e41dbd8a9d42e808c", "Url": "https://api.github.com/repos/frederic-prochnow/Projet-dut-n2", "Date": "2016-05-03T11:26:53Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mGuardia.size()) > 0) { for (com.example.legible.seguridadargusapp.Model.ObjectModel.guardias guardia : mGuardia) { if (guardia.getUsuarioNombre().equals(currentGuardia.getUsuarioNombre())) bandera = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8759/buggy-version/app.src.main.java.com.example.legible.seguridadargusapp.Controller.GuardiaRecyclerAdapter.java", "BodyUseAPI": [], "Fixed commit": "47cfbf5025f989704f1f55291c9dac7e09493fa5", "Url": "https://api.github.com/repos/SergioSilvaL/ArgusSeguridadApp", "Date": "2017-04-01T06:44:34Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bandera == false) { mGuardia.add(0, currentGuardia); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8759/buggy-version/app.src.main.java.com.example.legible.seguridadargusapp.Controller.GuardiaRecyclerAdapter.java", "BodyUseAPI": [], "Fixed commit": "47cfbf5025f989704f1f55291c9dac7e09493fa5", "Url": "https://api.github.com/repos/SergioSilvaL/ArgusSeguridadApp", "Date": "2017-04-01T06:44:34Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.osgl.util.S.afterLast(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.osgl.util.S.notBlank(ext)) { org.osgl.http.H.Format format = H.Format.of(ext); if (null != format) { resp.initContentType(format.contentType()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7970/buggy-version/src.main.java.org.osgl.mvc.result.RenderBinary.java", "BodyUseAPI": ["H.Format.of(java.lang.String)"], "Fixed commit": "f07218e6d2a0ebebb38f8d62fb935585391b7b60", "Url": "https://api.github.com/repos/osglworks/java-mvc", "Date": "2017-01-30T21:07:58Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dto.getInternaturFlag().equals(DecisionEnum.NO))) { if (com.nagarro.gde.validator.SUBMIT_APPLICATION.equals(dto.getAction())) { validateRequiredData(dto, err); }else { validateData(dto, err); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7477/buggy-version/gde-webapp.src.main.java.com.nagarro.gde.validator.UserInternaturValidator.java", "BodyUseAPI": ["com.nagarro.gde.validator.SUBMIT_APPLICATION.equals(dto.getAction())", "com.nagarro.gde.dto.UserInternaturDetailDto.getAction()", "com.nagarro.gde.validator.UserInternaturValidator.validateRequiredData(com.nagarro.gde.dto.UserInternaturDetailDto,org.springframework.validation.Errors)", "com.nagarro.gde.validator.UserInternaturValidator.validateData(com.nagarro.gde.dto.UserInternaturDetailDto,org.springframework.validation.Errors)"], "Fixed commit": "c8d263414ee4f8317486758c89310970234571a9", "Url": "https://api.github.com/repos/nagarro-gde/GDE", "Date": "2015-02-09T11:53:25Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nagarro.gde.dto.CandidateDataDto.getUserOrdinaturDetailDto()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((dto.getAcademicDegreeFlag().equals(DecisionEnum.YES)) || (dto.getOrdinaturFlag().equals(DecisionEnum.YES))) { if (com.nagarro.gde.validator.SUBMIT_APPLICATION.equals(dto.getAction())) { validateRequiredData(candidateDataDto, dto, err); }else { validateData(candidateDataDto, dto, err); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7477/buggy-version/gde-webapp.src.main.java.com.nagarro.gde.validator.UserOrdinaturValidator.java", "BodyUseAPI": ["com.nagarro.gde.validator.UserOrdinaturValidator.validateData(com.nagarro.gde.dto.CandidateDataDto,com.nagarro.gde.dto.UserOrdinaturDetailDto,org.springframework.validation.Errors)", "com.nagarro.gde.validator.UserOrdinaturValidator.validateRequiredData(com.nagarro.gde.dto.CandidateDataDto,com.nagarro.gde.dto.UserOrdinaturDetailDto,org.springframework.validation.Errors)", "com.nagarro.gde.dto.UserOrdinaturDetailDto.getAction()", "com.nagarro.gde.validator.SUBMIT_APPLICATION.equals(dto.getAction())"], "Fixed commit": "c8d263414ee4f8317486758c89310970234571a9", "Url": "https://api.github.com/repos/nagarro-gde/GDE", "Date": "2015-02-09T11:53:25Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parentTile.getWorldObj().isRemote) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2267/buggy-version/src.main.java.techreborn.api.recipe.RecipeCrafter.java", "BodyUseAPI": [], "Fixed commit": "f7124cb7e6f6007429948f956837d7eb985c0733", "Url": "https://api.github.com/repos/TechReborn/TechReborn", "Date": "2015-05-16T15:59:36Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!onlyRender) { entity.doLogic0(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/564/buggy-version/src.omnikryptec.animation.renderer.AnimatedModelRenderer.java", "BodyUseAPI": [], "Fixed commit": "aa5893ee8b0858d6940159e88f0490edac4ee820", "Url": "https://api.github.com/repos/OmniKryptec/OmniKryptec-Engine", "Date": "2017-06-23T14:46:38Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.inventory.InventoryCloseEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((player.getHealth()) > 0) { info.faceland.strife.attributes.AttributeHandler.updateHealth(player, attributeDoubleMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6401/buggy-version/src.main.java.info.faceland.strife.listeners.HealthListener.java", "BodyUseAPI": ["info.faceland.strife.attributes.AttributeHandler.updateHealth(org.bukkit.entity.Player,java.util.Map<info.faceland.strife.attributes.StrifeAttribute, java.lang.Double>)"], "Fixed commit": "ffdb719b3c1086bb136d72eb0c3b9676c7a83c17", "Url": "https://api.github.com/repos/TealCube/strife", "Date": "2015-01-28T01:09:21Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bedeutung.contains(\"'\")) { bedeutung = bedeutung.replaceAll(\"'\", \"''\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6233/buggy-version/src.DSVReader.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "1236a268306b25dec31a462ee8166f5f4bff80f1", "Url": "https://api.github.com/repos/maisi/CSV_Project", "Date": "2014-08-28T06:24:02Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.lang.Object>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((obj.language) != null) && (obj.language.equals(Const.UND))) { obj.language = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3146/buggy-version/app.uk.bl.api.JsonUtils.java", "BodyUseAPI": [], "Fixed commit": "d3a3204b49a5e5d9c51d7f52ad03d4466f466c8a", "Url": "https://api.github.com/repos/ukwa/w3act", "Date": "2014-05-07T12:07:39Z"},
{"Line": "=>1127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((info.mServiceClass) == ((com.android.internal.telephony.CommandsInterface.SERVICE_CLASS_DATA_SYNC) + (com.android.internal.telephony.CommandsInterface.SERVICE_CLASS_PACKET))) { cfInfo.serviceClass = info.mServiceClass; }else { cfInfo.serviceClass = com.android.internal.telephony.CommandsInterface.SERVICE_CLASS_VOICE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6516/buggy-version/src.java.com.android.internal.telephony.imsphone.ImsPhone.java", "BodyUseAPI": [], "Fixed commit": "d673d8a0ce9ab2d2c0f827b84383632b052c44bc", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-frameworks-opt-telephony", "Date": "2015-11-03T00:43:11Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i > 1) && (start == (nums[(i - 2)]))) { }else { if ((start + 1) == pre) { result.add(java.lang.Integer.toString(start)); }else { result.add(((start + \"->\") + (pre - 1))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7646/buggy-version/src.MissingRanges.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.lang.Integer.toString(int)", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "56046cea9a5185030befdbcd42af7b6d02bb8144", "Url": "https://api.github.com/repos/yao23/Java_Playground", "Date": "2017-07-20T07:22:06Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.tx.OTransactionRealAbstract.getRecordEntry(com.orientechnologies.orient.core.id.ORID)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(rec.getRecord().getIdentity().equals(newRid))) { rec.getRecord().onBeforeIdentityChanged(oldRid); final com.orientechnologies.orient.core.id.ORecordId recordId = ((com.orientechnologies.orient.core.id.ORecordId) (rec.getRecord().getIdentity())); if (recordId == null) { rec.getRecord().setIdentity(new com.orientechnologies.orient.core.id.ORecordId(newRid)); }else { recordId.clusterPosition = newRid.getClusterPosition(); recordId.clusterId = newRid.getClusterId(); } rec.getRecord().onAfterIdentityChanged(rec.getRecord()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2448/buggy-version/core.src.main.java.com.orientechnologies.orient.core.tx.OTransactionRealAbstract.java", "BodyUseAPI": ["com.orientechnologies.orient.core.db.record.ORecordOperation.getRecord()", "com.orientechnologies.orient.core.db.record.ORecordOperation.getRecord()", "com.orientechnologies.orient.core.id.ORID.getClusterId()", "com.orientechnologies.orient.core.db.record.ORecordOperation.getRecord()", "rec.getRecord().setIdentity(com.orientechnologies.orient.core.id.ORecordId)", "rec.getRecord().onAfterIdentityChanged(rec.getRecord())", "com.orientechnologies.orient.core.db.record.ORecordOperation.getRecord()", "com.orientechnologies.orient.core.db.record.ORecordOperation.getRecord()", "rec.getRecord().getIdentity()", "rec.getRecord().onBeforeIdentityChanged(com.orientechnologies.orient.core.id.ORID)", "com.orientechnologies.orient.core.id.ORID.getClusterPosition()"], "Fixed commit": "6e097ae2c2e2d36d4c61459938a983bff5b0b3eb", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-02-04T11:15:55Z"},
{"Line": "=>591", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(parameter.getTableAliases().containsKey(tablename))) { java.lang.System.out.println(((\"Table '\" + tablename) + \"' not exists.\")); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4817/buggy-version/src.com.github.taffy128s.tlcdbms.DBManager.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "88b45783e8d5a233294a1324821463c926de40a0", "Url": "https://api.github.com/repos/taffy128s/TLC_DBMS", "Date": "2017-04-02T12:19:53Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reverse) { incElevation = (flagEncoder.getDouble(edgeState.getFlags(), com.graphhopper.routing.util.DynamicWeighting.DEC_SLOPE_KEY)) / 100; incDist2DSum = (1 - incDistPercentage) * (edgeState.getDistance()); }else { incElevation = (flagEncoder.getDouble(edgeState.getFlags(), com.graphhopper.routing.util.DynamicWeighting.INC_SLOPE_KEY)) / 100; incDist2DSum = (edgeState.getDistance()) * incDistPercentage; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/731/buggy-version/core.src.main.java.com.graphhopper.routing.util.DynamicWeighting.java", "BodyUseAPI": [], "Fixed commit": "1ff3a0f7376d036c6b34720aeebe79579ae26e44", "Url": "https://api.github.com/repos/mmalfertheiner/graphhopper", "Date": "2015-11-05T18:25:41Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.activemq.command.Message.getOriginalDestination()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (origDest != null) { org.apache.activemq.util.ByteSequence origDestBytes = marshaller.marshal(origDest); origDestBytes.compact(); coreMessage.putBytesProperty(org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.AMQ_MSG_ORIG_DESTINATION, origDestBytes.data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4023/buggy-version/artemis-protocols.artemis-openwire-protocol.src.main.java.org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.java", "BodyUseAPI": ["org.apache.activemq.wireformat.WireFormat.marshal(org.apache.activemq.command.ActiveMQDestination)"], "Fixed commit": "769696caf8a6a53d36ce696ff9c50c5cc69f0f82", "Url": "https://api.github.com/repos/apache/activemq-artemis", "Date": "2016-02-18T12:52:32Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (inst != null) inst.registerListener(new com.orientechnologies.orient.core.OOrientListenerAbstract() { @java.lang.Override public void onStartup() { if ((com.orientechnologies.orient.core.db.ODatabaseRecordThreadLocal.INSTANCE) == null) com.orientechnologies.orient.core.db.ODatabaseRecordThreadLocal.INSTANCE = new com.orientechnologies.orient.core.db.ODatabaseRecordThreadLocal(); } @java.lang.Override public void onShutdown() { com.orientechnologies.orient.core.db.ODatabaseRecordThreadLocal.INSTANCE = null; } });", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5599/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.ODatabaseRecordThreadLocal.java", "BodyUseAPI": [], "Fixed commit": "5d3c0a3c7c66ac555f8dc2c2bc4efbca8af90902", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-03-30T10:11:16Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((you) != null) { updateYouServer((-1), NO_HANGOUT, you.getLatitude(), you.getLongitude(), NOTHING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2398/buggy-version/app.src.main.java.io.evolution.downtohang.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7309c7657b8b316e8c2b4571bfda7ebbf349803a", "Url": "https://api.github.com/repos/DownToHang/Implemenetation", "Date": "2016-04-18T00:10:24Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Constant.RETRY_MODE.equals(\"ON\")) { org.testng.IRetryAnalyzer retry = testannotation.getRetryAnalyzer(); if (retry == null) { testannotation.setRetryAnalyzer(com.org.qa.webcore.uicore.listeners.Retry.class); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/638/buggy-version/src.main.java.com.org.qa.webcore.uicore.listeners.RetryListener.java", "BodyUseAPI": [], "Fixed commit": "c136dd0731d113ef24f7a0f6f7fc623af5f08695", "Url": "https://api.github.com/repos/kasunalwis/taf-webcore", "Date": "2016-06-07T09:36:25Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requestText.equals(\"undefined\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3744/buggy-version/kernel.src.main.java.org.simplity.tp.Service.java", "BodyUseAPI": [], "Fixed commit": "99aebe309d6d3f06a224ca68edd8547fb63e1b35", "Url": "https://api.github.com/repos/simplity/simplity", "Date": "2016-10-27T07:48:05Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jclouds.compute.domain.Template.getOptions()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (options instanceof org.jclouds.openstack.nova.v2_0.compute.options.NovaTemplateOptions) { options.as(org.jclouds.openstack.nova.v2_0.compute.options.NovaTemplateOptions.class).securityGroupNames(securityGroupsArray); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/684/buggy-version/jclouds-plugin.src.main.java.jenkins.plugins.jclouds.compute.JCloudsSlaveTemplate.java", "BodyUseAPI": ["org.jclouds.compute.options.TemplateOptions.as(java.lang.Class)", "options.as(org.jclouds.openstack.nova.v2_0.compute.options.NovaTemplateOptions.class).securityGroupNames(java.lang.String[])"], "Fixed commit": "ef2eb70b0870af36f7c05296b6d0d7058486e308", "Url": "https://api.github.com/repos/OpenDataSpace/jclouds-plugin", "Date": "2015-09-12T15:32:31Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (p < 0) { int q = where.lastIndexOf(\"Test\"); return (q < 0) || ((q + 4) < (where.length())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3305/buggy-version/main.src.mockit.internal.util.StackTrace.java", "BodyUseAPI": [], "Fixed commit": "28869aeb3992e348c83a284a7844361ea0322718", "Url": "https://api.github.com/repos/jmockit/jmockit1", "Date": "2014-08-04T01:31:51Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.currentState.getStateType()) != (cz.tzima.partialsshot.controller.messages.StateType.DEFAULT)) { this.currentState = new cz.tzima.partialsshot.controller.messages.StateMessageDefault(); this.points.clear(); reportStateChange(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2701/buggy-version/PartialSShot.src.cz.tzima.partialsshot.controller.Controller.java", "BodyUseAPI": [], "Fixed commit": "df6ea7e4a5218522978df79148adc91b424bb082", "Url": "https://api.github.com/repos/tzima/PartialSShot", "Date": "2014-11-19T22:46:03Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getStatus()) == (com.dumptruckman.minecraft.zombiefight.api.GameStatus.IN_PROGRESS)) { humanFinderTask = org.bukkit.Bukkit.getScheduler().scheduleSyncDelayedTask(plugin, this, 20L); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7765/buggy-version/src.main.java.com.dumptruckman.minecraft.zombiefight.DefaultGame.java", "BodyUseAPI": [], "Fixed commit": "5903d98d3cdf1a1cbfb3e8f61e55b7c356682b37", "Url": "https://api.github.com/repos/dumptruckman/ZombieFight", "Date": "2012-06-19T12:44:14Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mExit)) { aiPlay(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6323/buggy-version/app.src.main.java.fr.wcs.battlegeek.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "8cc512e3f9688705c771f97bcc2b2e872be143ab", "Url": "https://api.github.com/repos/Adphi/BattleGeek", "Date": "2017-10-12T07:49:17Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (size < 2) { indent = new java.lang.StringBuilder(); }else { indent.deleteCharAt((size - 1)); indent.deleteCharAt((size - 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6843/buggy-version/crono.src.crono.Interpreter.java", "BodyUseAPI": ["java.lang.StringBuilder.deleteCharAt(int)", "java.lang.StringBuilder.deleteCharAt(int)"], "Fixed commit": "7c64820db602ab3e9c4c3a1372baeddf6e8bb90a", "Url": "https://api.github.com/repos/mwatts15/Crono", "Date": "2012-11-29T03:42:32Z"},
{"Line": "=>841", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sun.jersey.api.client.ClientResponse.getEntity(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(info.startsWith(com.photon.phresco.framework.rest.api.HTML_ELEMENT))) { org.sonatype.nexus.rest.model.ArtifactInfoResourceResponse artifactInfo = new com.google.gson.Gson().fromJson(info, org.sonatype.nexus.rest.model.ArtifactInfoResourceResponse.class); infos = artifactInfo.getData(); infoMap.put(com.photon.phresco.framework.rest.api.ARTIFACT_INFO, infos); infoMap.put(com.photon.phresco.framework.rest.api.MAVEN_INFO, artifact); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7253/buggy-version/phresco-framework-web.src.main.java.com.photon.phresco.framework.rest.api.RepositoryService.java", "BodyUseAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Fixed commit": "05eb7958b895aee06925d38d791db64f22f3c2f6", "Url": "https://api.github.com/repos/photon-infotech/framework", "Date": "2014-01-09T21:37:00Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((pieces.length) == 2) { return java.lang.Integer.parseInt(pieces[1]); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6623/buggy-version/src.com.blork.anpod.view.TimePreference.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "bb934f66bf687e746c7a9831ccf5eb07eff073d1", "Url": "https://api.github.com/repos/blork/anpod", "Date": "2011-08-18T17:58:37Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((pieces.length) == 2) { return java.lang.Integer.parseInt(pieces[0]); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6623/buggy-version/src.com.blork.anpod.view.TimePreference.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "bb934f66bf687e746c7a9831ccf5eb07eff073d1", "Url": "https://api.github.com/repos/blork/anpod", "Date": "2011-08-18T17:58:37Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.nio.file.WatchKey, java.nio.file.Path>.get(java.nio.file.WatchKey)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (directory.isAbsolute()) { dirPath = dir.relativize(directory); }else { dirPath = directory; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4338/buggy-version/src.folderwatcher.FolderWatcher.java", "BodyUseAPI": ["java.nio.file.Path.relativize(java.nio.file.Path)"], "Fixed commit": "c4deab1ca976c615692975305eba5d786847cd86", "Url": "https://api.github.com/repos/CICS525-project/MainRep", "Date": "2014-07-08T22:42:02Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ClassLoader.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (url != null) { reader.loadBeanDefinitions(new org.springframework.core.io.ClassPathResource(((\"META-INF/walkmod2/\" + descriptorName) + \".xml\"), configuration.getClassLoader())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1818/buggy-version/src.main.java.org.walkmod.conf.providers.SpringConfigurationProvider.java", "BodyUseAPI": [], "Fixed commit": "4236bb91ad081598e3496bfae0a5d4505fa61614", "Url": "https://api.github.com/repos/walkmod/walkmod-core", "Date": "2015-11-02T10:36:12Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((i + 3) < (ingredients.length)) ingredient += (ingredients[(i + 3)]) + \"\\n\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8635/buggy-version/app.src.main.java.com.greatsky.kitcheninpocket.RecipeActivity.java", "BodyUseAPI": [], "Fixed commit": "442e0576faf505d81a51badfcff557bed578eb4c", "Url": "https://api.github.com/repos/hongjic/KitchenInPocket", "Date": "2016-12-06T05:05:06Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adminSettings.getRegistrationMethod().toString()) == \"MANUAL\") { return \"redirect:/administrator/users/get-all-inactive-users\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4748/buggy-version/src.main.java.org.registrator.community.controller.RegisterController.java", "BodyUseAPI": [], "Fixed commit": "a4173a80f63570f66ec07299fc0aedbed5c7557c", "Url": "https://api.github.com/repos/softservedata/resources", "Date": "2016-01-29T00:58:53Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (outcomes == null) { outcomes = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6579/buggy-version/carmakit.src.main.java.aau.carmakit.ContextEngine.ContextRecognizer.java", "BodyUseAPI": [], "Fixed commit": "9e11dbf4d49a2a14323b079e57d5f4a254e9b719", "Url": "https://api.github.com/repos/simonbs/context-aware-home-automation", "Date": "2016-04-13T11:18:05Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((className) != null) && (autoDropClass)) { com.orientechnologies.orient.core.metadata.schema.OSchema schema = documentDatabase.getMetadata().getSchema(); if (schema.existsClass(className)) { ro.nextreports.server.etl.OrientDbLoader.log.debug(\"Dropping class '{}'\", className); java.lang.String sql = \"DELETE FROM \" + (className); documentDatabase.command(new com.orientechnologies.orient.core.sql.OCommandSQL(sql)).execute(); schema.dropClass(className); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1090/buggy-version/src.ro.nextreports.server.etl.OrientDbLoader.java", "BodyUseAPI": [], "Fixed commit": "0843384580287c82c136c9064e25121ff6b39b0b", "Url": "https://api.github.com/repos/nextreports/nextreports-server", "Date": "2015-01-16T09:20:51Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m3.length()) <= maxLen) { return m3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6248/buggy-version/src.was.Move.java", "BodyUseAPI": [], "Fixed commit": "9958c7000f21d04d9d2290225e891ef27a5d78b0", "Url": "https://api.github.com/repos/davidswelt/wolvesandsheep", "Date": "2014-03-18T16:00:04Z"},
{"Line": "=>514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDaySelectionEventListener) != null) { mDaySelectionEventListener.onDateRangeSelectionEnded(this.selectedDate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3606/buggy-version/sublimepickerlibrary.src.main.java.com.appeaser.sublimepickerlibrary.datepicker.DayPickerPagerAdapter.java", "BodyUseAPI": [], "Fixed commit": "453459fbc9d6913795a82ac91962ac8870a7e5c2", "Url": "https://api.github.com/repos/hisetu/SublimePicker", "Date": "2017-06-15T02:54:40Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((verseOrChunk.compareTo(\"chunk\")) == 0) { int chunk = java.lang.Integer.parseInt(pref.getString(Settings.KEY_PREF_CHUNK, \"1\")); mChunk = getChunkIndex(mChunks, chunk); }else { int verse = java.lang.Integer.parseInt(pref.getString(Settings.KEY_PREF_VERSE, \"1\")); mChunk = getChunkIndex(mChunks, verse); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7298/buggy-version/RecordingApp.app.src.main.java.wycliffeassociates.recordingapp.Recording.RecordingScreen.java", "BodyUseAPI": [], "Fixed commit": "719d73b379b414af43b45fd8fe44f5972c6a788d", "Url": "https://api.github.com/repos/WycliffeAssociates/translationRecorder", "Date": "2016-03-14T17:25:18Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) { alarmMgr.setExactAndAllowWhileIdle(AlarmManager.RTC_WAKEUP, sms.getTimestampScheduled(), getAlarmPendingIntent(sms)); }else if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT)) { alarmMgr.setExact(AlarmManager.RTC_WAKEUP, sms.getTimestampScheduled(), getAlarmPendingIntent(sms)); }else { alarmMgr.set(AlarmManager.RTC_WAKEUP, sms.getTimestampScheduled(), getAlarmPendingIntent(sms)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6686/buggy-version/app.src.main.java.com.github.yeriomin.smsscheduler.Scheduler.java", "BodyUseAPI": [], "Fixed commit": "366ea5d8ac2b557af3da0711b7202d147560982b", "Url": "https://api.github.com/repos/yeriomin/SmsScheduler", "Date": "2017-07-03T18:51:06Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controllers.AuthBackend.getCurrentUser()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (u == null) req.vote.userid = ((long) (0)); else req.vote.userid = u.id;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/705/buggy-version/Service.app.controllers.VoteController.java", "BodyUseAPI": [], "Fixed commit": "7eb23b19085252d222268d7c6acd3dc18344f78e", "Url": "https://api.github.com/repos/atiti/OpenARMS", "Date": "2012-03-22T14:03:23Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controllers.AuthBackend.getCurrentUser()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (u != null) { models.Vote vote2 = models.Vote.find(\"byPollInstanceAndUser\", vote.pollInstance, u).first(); if (vote2 == null) { vote.save(); }else { throw new controllers.ForbiddenException(\"You can't vote twice in the same Poll.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/705/buggy-version/Service.app.controllers.VoteController.java", "BodyUseAPI": ["models.Vote.find(\"byPollInstanceAndUser\", vote.pollInstance, u).first()", "models.Vote.find(java.lang.String,vote.pollInstance,models.User)"], "Fixed commit": "7eb23b19085252d222268d7c6acd3dc18344f78e", "Url": "https://api.github.com/repos/atiti/OpenARMS", "Date": "2012-03-22T14:03:23Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.alex.weatheraarhusgroup03.DatabaseHelper.getWeatherInfoFromCursor(android.database.Cursor)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (infos != null) { weatherInfo = infos.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4354/buggy-version/WeatherAarhusgroup03.app.src.main.java.com.example.alex.weatheraarhusgroup03.DatabaseHelper.java", "BodyUseAPI": ["java.util.ArrayList<com.example.alex.weatheraarhusgroup03.WeatherInfo>.get(int)"], "Fixed commit": "f9f70281c48b6da53cd64b86eca5f5d0bdaec36d", "Url": "https://api.github.com/repos/AlexKarlsen/ITSMAP", "Date": "2017-06-01T10:57:13Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getCaretPosition()) < (lastWordCoord)) lastWordCoord = this.getCaretPosition();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4095/buggy-version/src.com.cssquids.trimtext.UI.Editor.java", "BodyUseAPI": [], "Fixed commit": "61c6dda7a5d19153e7a1b5bc357b89e42bb2349c", "Url": "https://api.github.com/repos/bluegoo192/trimtext", "Date": "2017-03-17T04:16:37Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.eclipse.viatra2.emf.incquery.queryexplorer.QueryExplorer.getInstance()) != null) { org.eclipse.viatra2.emf.incquery.queryexplorer.QueryExplorer.getInstance().getMatcherTreeViewer().refresh(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8571/buggy-version/plugins.org.eclipse.viatra2.emf.incquery.tooling.gui.src.org.eclipse.viatra2.emf.incquery.queryexplorer.content.matcher.ObservablePatternMatcher.java", "BodyUseAPI": [], "Fixed commit": "2f8fdba04dc89fd2834fb6418722ab8f1fddec59", "Url": "https://api.github.com/repos/ujhelyiz/EMF-IncQuery", "Date": "2012-06-12T09:17:49Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.eclipse.viatra2.emf.incquery.runtime.api.IPatternMatch, org.eclipse.viatra2.emf.incquery.queryexplorer.content.matcher.ObservablePatternMatch>.remove(org.eclipse.viatra2.emf.incquery.runtime.api.IPatternMatch)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (observableMatch != null) { this.matches.remove(observableMatch); observableMatch.dispose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8571/buggy-version/plugins.org.eclipse.viatra2.emf.incquery.tooling.gui.src.org.eclipse.viatra2.emf.incquery.queryexplorer.content.matcher.ObservablePatternMatcher.java", "BodyUseAPI": ["org.eclipse.viatra2.emf.incquery.queryexplorer.content.matcher.ObservablePatternMatch.dispose()", "java.util.List<org.eclipse.viatra2.emf.incquery.queryexplorer.content.matcher.ObservablePatternMatch>.remove(org.eclipse.viatra2.emf.incquery.queryexplorer.content.matcher.ObservablePatternMatch)"], "Fixed commit": "2f8fdba04dc89fd2834fb6418722ab8f1fddec59", "Url": "https://api.github.com/repos/ujhelyiz/EMF-IncQuery", "Date": "2012-06-12T09:17:49Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((nameString == null) || (nameString.isEmpty())) { return new taskle.logic.commands.IncorrectCommand(java.lang.String.format(taskle.logic.parser.MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2115/buggy-version/src.main.java.taskle.logic.parser.AddCommandParser.java", "BodyUseAPI": [], "Fixed commit": "91822e147cbff7f0b98ddf3359c030e3112bb179", "Url": "https://api.github.com/repos/CS2103AUG2016-W14-C3/main", "Date": "2016-11-03T15:57:38Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.lightstreamer.demo.stocklistdemo_advanced.StockListDemo.lsClient) == null) { com.lightstreamer.demo.stocklistdemo_advanced.StockListDemo.lsClient = new com.lightstreamer.demo.stocklistdemo_advanced.LightstreamerClient(getResources().getString(R.string.host)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2777/buggy-version/src.com.lightstreamer.demo.stocklistdemo_advanced.StockListDemo.java", "BodyUseAPI": [], "Fixed commit": "7c67d9be9a7ad76aa2978aa7631398a299e2d46e", "Url": "https://api.github.com/repos/Weswit/Lightstreamer-example-MPNStockList-client-android", "Date": "2014-08-12T15:22:45Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(velocity.equals(this.velocity))) { this.velocity = velocity; angle = new net.funkitech.util.Location(0, 0).angleBetween(velocity); setRotation(angle); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1532/buggy-version/src.world.object.Arrow.java", "BodyUseAPI": ["net.funkitech.util.Location.angleBetween(net.funkitech.util.Location)"], "Fixed commit": "54f0c1506a86aebdfab5680d2dded553b24d011f", "Url": "https://api.github.com/repos/funkiben/GameClient", "Date": "2014-11-06T02:03:04Z"},
{"Line": "=>526", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (keepSource) { java.nio.file.Files.copy(java.nio.file.Paths.get(path), java.nio.file.Paths.get(finalPath), java.nio.file.StandardCopyOption.REPLACE_EXISTING); }else { java.nio.file.Files.move(java.nio.file.Paths.get(path), java.nio.file.Paths.get(finalPath), java.nio.file.StandardCopyOption.REPLACE_EXISTING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1837/buggy-version/src.main.java.jacz.peerengineclient.PeerEngineClient.java", "BodyUseAPI": [], "Fixed commit": "f98ea0e082349a5a3f67f000fded3dcdafbbc491", "Url": "https://api.github.com/repos/albertoanguita/jaczpeerengineclient", "Date": "2016-06-21T22:07:02Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!keepSource) { java.nio.file.Files.delete(java.nio.file.Paths.get(path)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1837/buggy-version/src.main.java.jacz.peerengineclient.PeerEngineClient.java", "BodyUseAPI": [], "Fixed commit": "f98ea0e082349a5a3f67f000fded3dcdafbbc491", "Url": "https://api.github.com/repos/albertoanguita/jaczpeerengineclient", "Date": "2016-06-21T22:07:02Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.bitbucket.ucchy.sl.Utility.isCB19orLater()) { writer = new java.io.BufferedWriter(new java.io.OutputStreamWriter(fos, \"UTF-8\")); }else { writer = new java.io.BufferedWriter(new java.io.OutputStreamWriter(fos)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5245/buggy-version/src.main.java.org.bitbucket.ucchy.sl.Utility.java", "BodyUseAPI": [], "Fixed commit": "ecbbf8b3656c0b66a7181664ea5e95eed28bc1d0", "Url": "https://api.github.com/repos/ucchyocean/StandLock", "Date": "2016-03-08T16:25:38Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getSpawner()) != null) { spawnerID = event.getSpawner().getSpawnedType().getTypeId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5628/buggy-version/src.main.java.de.dustplanet.silkspawnersecoaddon.SilkSpawnersEcoAddonListener.java", "BodyUseAPI": ["de.dustplanet.silkspawners.events.SilkSpawnersSpawnerChangeEvent.getSpawner()", "event.getSpawner().getSpawnedType()", "event.getSpawner().getSpawnedType().getTypeId()"], "Fixed commit": "f3ba72bccbc20952cfe1c0e3d96c4dfd25fd2b13", "Url": "https://api.github.com/repos/xGhOsTkiLLeRx/SilkSpawnersEcoAddon", "Date": "2013-08-06T23:12:49Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(headerName.equalsIgnoreCase(\"common.h\"))) { common.functionDeclarations.add(((\"#include \\\"\" + headerName) + \"\\\"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1029/buggy-version/ac.soton.fmusim.codegen.src.ac.soton.fmusim.codegen.translator.FMUTranslator.java", "BodyUseAPI": ["common.functionDeclarations.add(java.lang.String)"], "Fixed commit": "9cc60b270ffd6aaebf91bf539cbe9229cdc8d18c", "Url": "https://api.github.com/repos/andyed2003/aegit", "Date": "2013-09-13T11:04:02Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i.contains(\"Common.h\")) { java.lang.System.out.println(\"Debug\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1029/buggy-version/ac.soton.fmusim.codegen.src.ac.soton.fmusim.codegen.translator.FMUTranslator.java", "BodyUseAPI": [], "Fixed commit": "9cc60b270ffd6aaebf91bf539cbe9229cdc8d18c", "Url": "https://api.github.com/repos/andyed2003/aegit", "Date": "2013-09-13T11:04:02Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type.length) > (query.length)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8436/buggy-version/NameServer.java", "BodyUseAPI": [], "Fixed commit": "791946afc1ff68143f39a094d12b93ad1233d436", "Url": "https://api.github.com/repos/JuanbiB/DNS-Cache-Poisoning", "Date": "2016-11-16T02:59:12Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.yotsuba.mahouka.magic.cad.CadManager.getCad(net.minecraft.item.ItemStack)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cad == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8248/buggy-version/src.main.java.de.yotsuba.mahouka.gui.CadProgrammerContainer.java", "BodyUseAPI": [], "Fixed commit": "b5683fb16664a00eda93f84fc5e5246fab6ede38", "Url": "https://api.github.com/repos/Yotsuba4th/MahoukaMod", "Date": "2015-07-01T13:23:26Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sqlproc.dsl.resolver.PojoResolver.getPropertyDescriptors(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (descriptors == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4/buggy-version/sql-processor-eclipse.org.sqlproc.dsl.ui.src.org.sqlproc.dsl.ui.contentassist.ProcessorDslProposalProvider.java", "BodyUseAPI": [], "Fixed commit": "be3e3ee4cac6373ea1ad046992f640351788feda", "Url": "https://api.github.com/repos/hudec/sql-processor", "Date": "2011-06-21T12:52:03Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((leftStepsNum) == 0) { currentReport.setProgress(endProgress); }else { int currentProgress = currentReport.getProgress(); int toProgress = currentProgress + (((endProgress) - currentProgress) / (leftStepsNum)); currentReport.setProgress((toProgress > (endProgress) ? endProgress : toProgress)); leftStepsNum -= 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3014/buggy-version/server.software-mgmt-plugin-clouderamgr.src.main.java.com.vmware.bdd.plugin.clouderamgr.poller.host.HostInstallPoller.java", "BodyUseAPI": [], "Fixed commit": "7fd61075f02a81089117fdaf214ea1a6deba60d7", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-07-09T02:34:28Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((value) == null) { this.value = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3214/buggy-version/src.main.java.de.interactive_instruments.xtraserver.config.util.MappingValueImpl.java", "BodyUseAPI": [], "Fixed commit": "1d2dfa51fd03f32215ca113f5f128dbc6dfcd82c", "Url": "https://api.github.com/repos/interactive-instruments/xtraserver-config-util", "Date": "2017-12-21T16:00:02Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mediaController) != null) { mediaController.show(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8378/buggy-version/aves.src.main.java.se.eliga.aves.songs.BirdSpeciesXenoCantoPlayerFragment.java", "BodyUseAPI": [], "Fixed commit": "20ff383717c833b6d8c19ff29c351ea7158a1890", "Url": "https://api.github.com/repos/claes/aves", "Date": "2015-05-15T21:40:06Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mediaPlayer) != null) { mediaPlayer.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8378/buggy-version/aves.src.main.java.se.eliga.aves.songs.BirdSpeciesXenoCantoPlayerFragment.java", "BodyUseAPI": [], "Fixed commit": "20ff383717c833b6d8c19ff29c351ea7158a1890", "Url": "https://api.github.com/repos/claes/aves", "Date": "2015-05-15T21:40:06Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.getRecipeOutput().copy()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(out.hasTagCompound())) out.setTagCompound(new net.minecraft.nbt.NBTTagCompound());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5449/buggy-version/src.java.cd4017be.lib.NBTRecipe.java", "BodyUseAPI": ["net.minecraft.item.ItemStack.setTagCompound(net.minecraft.nbt.NBTTagCompound)"], "Fixed commit": "582b90fa8850477690826e960acc48f7efeb02e5", "Url": "https://api.github.com/repos/CD4017BE/CD4017BE_lib", "Date": "2016-06-03T09:30:49Z"},
{"Line": "=>604", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.support.v4.app.ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6748/buggy-version/geopaparazzilibrary.src.main.java.eu.geopaparazzi.library.gps.GpsService.java", "BodyUseAPI": [], "Fixed commit": "cec8fc8650def3f52d20dcb1d6c5365145af37c2", "Url": "https://api.github.com/repos/tghoward/geopaparazzi", "Date": "2016-12-31T13:19:33Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (apkFile.getName().endsWith(\".dex\")) { return apkFile; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7357/buggy-version/ClassySharkWS.src.com.google.classyshark.silverghost.translator.dex.DexInfoTranslator.java", "BodyUseAPI": [], "Fixed commit": "872f0977cd40823cb45416c1f96c50736066d4d1", "Url": "https://api.github.com/repos/google/android-classyshark", "Date": "2016-04-20T22:19:53Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((me.supermaxman.donationsigns.DonationSigns.signs.get(sign)) != null) { me.supermaxman.donationsigns.DonationSigns.refreshSign(sign, me.supermaxman.donationsigns.DonationSigns.signs.get(sign)); }else { me.supermaxman.donationsigns.DonationSigns.signs.remove(sign); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/9262/buggy-version/DonationSigns.src.me.supermaxman.donationsigns.DonationSigns.java", "BodyUseAPI": ["me.supermaxman.donationsigns.DonationSigns.refreshSign(java.lang.String,java.lang.Integer)", "java.util.LinkedHashMap<java.lang.String, java.lang.Integer>.get(java.lang.String)", "java.util.LinkedHashMap<java.lang.String, java.lang.Integer>.remove(java.lang.String)"], "Fixed commit": "32ebf480199acf13c93227f1f230a0e2e0f05d89", "Url": "https://api.github.com/repos/Supermaxman/DonationSigns", "Date": "2014-06-08T19:15:48Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (other == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8420/buggy-version/src.main.java.seedu.task.model.task.DueDate.java", "BodyUseAPI": [], "Fixed commit": "850f02b71d607e1d19949e530f0b1f5ead765561", "Url": "https://api.github.com/repos/CS2103AUG2016-T15-C1/main", "Date": "2016-10-25T09:27:16Z"},
{"Line": "=>574", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.structure.isConnectionLimited())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1943/buggy-version/src.main.java.org.encog.neural.networks.BasicNetwork.java", "BodyUseAPI": [], "Fixed commit": "71024d08113ea8577af8dd50186a782fd2e7d839", "Url": "https://api.github.com/repos/encog/encog-java-core", "Date": "2013-01-30T13:07:19Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDebug) { tabbedPane.addTab(\"Debug\", null, panel, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7124/buggy-version/src.main.java.de.uni_potsdam.hpi.asg.resyntool.gui.RunResynFrame.java", "BodyUseAPI": [], "Fixed commit": "37876e928cc02ff706042e36fb3b61980dd8e542", "Url": "https://api.github.com/repos/hpiasg/asgresyn", "Date": "2017-01-13T14:25:53Z"},
{"Line": "=>1055", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSearchView) != null) { outState.putBoolean(com.owncloud.android.ui.activity.FileDisplayActivity.KEY_IS_SEARCH_OPEN, (!(mSearchView.isIconified()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/198/buggy-version/src.main.java.com.owncloud.android.ui.activity.FileDisplayActivity.java", "BodyUseAPI": [], "Fixed commit": "ec2cc5516eea5429b020dfa8492b5b3772f0b740", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-23T10:00:13Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["messageServer.Message.getPayload()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (dataProducer.remove(pdp.getName())) { java.net.DatagramPacket dp = messageServer.Message.getMessageAsDatagrammPacket(new messageServer.Message(MessageType.DeregisterProducer, new messageServer.PayloadProducer(pdp.getName())), multicastadr, serverPort); sendMulticastMessage(dp); answerPayload.setSuccess(); return new messageServer.Message(MessageType.DeregisterProducer, answerPayload); }else { return new messageServer.Message(MessageType.DeregisterProducer, answerPayload); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/334/buggy-version/src.messageServer.MessageServer.java", "BodyUseAPI": ["messageServer.Message.getMessageAsDatagrammPacket(messageServer.Message,java.net.InetAddress,int)", "messageServer.PayloadProducer.getName()"], "Fixed commit": "6bb7e23f9953ff18a7896ae50dcbc167f1c0d6f8", "Url": "https://api.github.com/repos/TINF15ITNS/MB", "Date": "2016-07-14T18:57:28Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.peprally.jeremy.peprally.network.DynamoDBHelper.DeleteDBUserProfileAsyncTask.loadDBUserProfile(userProfileParcel.getCurrentUsername())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((userProfile.getConversationIds()) != null) { for (java.lang.String convoId : userProfile.getConversationIds()) { com.peprally.jeremy.peprally.db_models.DBUserConversation userConversation = loadDBUserConversation(convoId); if (userConversation != null) { mapper.delete(userConversation); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3801/buggy-version/app.src.main.java.com.peprally.jeremy.peprally.network.DynamoDBHelper.java", "BodyUseAPI": ["com.peprally.jeremy.peprally.db_models.DBUserProfile.getConversationIds()"], "Fixed commit": "fff7a47d3b3714b2f1cc4805c62f0dbf496650db", "Url": "https://api.github.com/repos/jerbotron/peprally_android", "Date": "2016-11-14T01:10:43Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((seatsAvailTextField.getText().length()) == 0) { javax.swing.JOptionPane.showMessageDialog(rootPane, \"Input available seats\", \"Inane error\", javax.swing.JOptionPane.INFORMATION_MESSAGE); }else if ((jComboBox1.getSelectedItem()) != null) { waitinglist.Students[] perioritizeList = perioritize(waitingList); jList2.setModel(eligableListModel); eligableListModel.removeAllElements(); eligableListCount = 0; for (int i = 0; i < (perioritizeList.length); i++) { waitinglist.Students abc = perioritizeList[i]; jList2.setModel(eligableListModel); java.lang.String[] eligiable = new java.lang.String[30]; eligiable[eligableListCount] = ((((abc.getFName()) + \" , \") + (abc.getLName())) + \" - \") + (abc.getCwid()); eligableListModel.insertElementAt(eligiable[eligableListCount], eligableListCount); (eligableListCount)++; } }else { javax.swing.JOptionPane.showMessageDialog(rootPane, \"Choose one course\", \"Inane error\", javax.swing.JOptionPane.INFORMATION_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/570/buggy-version/src.waitinglist.Find.java", "BodyUseAPI": [], "Fixed commit": "e1987cada73b1ad3be1aad0be43d169d0358401f", "Url": "https://api.github.com/repos/tacoring/WLS", "Date": "2014-03-19T23:40:39Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.pvsagar.smartlockscreen.backend_helpers.SharedPreferencesHelper.KEY_HIDE_LOW_PRIORITY_NOTIFICATIONS) == null) || (com.pvsagar.smartlockscreen.backend_helpers.SharedPreferencesHelper.KEY_HIDE_LOW_PRIORITY_NOTIFICATIONS.isEmpty())) { com.pvsagar.smartlockscreen.backend_helpers.SharedPreferencesHelper.KEY_HIDE_LOW_PRIORITY_NOTIFICATIONS = context.getResources().getString(R.string.pref_key_hide_low_priority_notifications); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/60/buggy-version/app.src.main.java.com.pvsagar.smartlockscreen.backend_helpers.SharedPreferencesHelper.java", "BodyUseAPI": [], "Fixed commit": "f157eb6eadbe18b84f2f6fa9af1434fc1fcca203", "Url": "https://api.github.com/repos/aravindsagar/SmartLockScreen", "Date": "2015-01-07T08:45:28Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.pvsagar.smartlockscreen.backend_helpers.SharedPreferencesHelper.KEY_HIDE_PERSISTENT_NOTIFICATIONS) == null) || (com.pvsagar.smartlockscreen.backend_helpers.SharedPreferencesHelper.KEY_HIDE_PERSISTENT_NOTIFICATIONS.isEmpty())) { com.pvsagar.smartlockscreen.backend_helpers.SharedPreferencesHelper.KEY_HIDE_PERSISTENT_NOTIFICATIONS = context.getResources().getString(R.string.pref_key_hide_persistent_notifications); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/60/buggy-version/app.src.main.java.com.pvsagar.smartlockscreen.backend_helpers.SharedPreferencesHelper.java", "BodyUseAPI": [], "Fixed commit": "f157eb6eadbe18b84f2f6fa9af1434fc1fcca203", "Url": "https://api.github.com/repos/aravindsagar/SmartLockScreen", "Date": "2015-01-07T08:45:28Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.talend.daikon.avro.util.AvroUtils.isIncludeAllFields(querySchema)) { java.lang.String moduleName = null; if ((properties) instanceof org.talend.components.salesforce.SalesforceConnectionModuleProperties) { moduleName = properties.module.moduleName.getStringValue(); } querySchema = ((org.talend.components.salesforce.runtime.SalesforceSourceOrSink) (org.talend.components.salesforce.runtime.SalesforceReader.getCurrentSource())).getSchema(container, moduleName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3889/buggy-version/components-salesforce.src.main.java.org.talend.components.salesforce.runtime.SalesforceReader.java", "BodyUseAPI": [], "Fixed commit": "feff81bf5393e2cf03858934c876b5a87f0e6289", "Url": "https://api.github.com/repos/Talend/components", "Date": "2016-04-20T16:50:45Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.untamedears.PrisonPearl.PrisonPearlPlugin.globalInstance.getMysqlStorage()) == null) { obj.save(null); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7696/buggy-version/src.com.untamedears.PrisonPearl.PrisonPearlPlugin.java", "BodyUseAPI": [], "Fixed commit": "0d923781a53460917dd0d51712b96d557d32646e", "Url": "https://api.github.com/repos/Maxopoly/PrisonPearl", "Date": "2015-10-15T01:17:49Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getMysqlStorage()) != null) { updateToUUID(); updateToRemoveDur(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7696/buggy-version/src.com.untamedears.PrisonPearl.PrisonPearlPlugin.java", "BodyUseAPI": [], "Fixed commit": "0d923781a53460917dd0d51712b96d557d32646e", "Url": "https://api.github.com/repos/Maxopoly/PrisonPearl", "Date": "2015-10-15T01:17:49Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.egit.github.core.event.CommitCommentPayload.getComment()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (comment != null) { com.gh4a.utils.IntentUtils.openCommitInfoActivity(getActivity(), repoOwner, repoName, comment.getCommitId(), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6820/buggy-version/src.com.gh4a.fragment.EventListFragment.java", "BodyUseAPI": ["com.gh4a.utils.IntentUtils.openCommitInfoActivity(getActivity(),java.lang.String,java.lang.String,comment.getCommitId(),int)", "org.eclipse.egit.github.core.CommitComment.getCommitId()"], "Fixed commit": "65e3571a30f7973dd818f6b71ae935a92e6b610b", "Url": "https://api.github.com/repos/maniac103/gh4a", "Date": "2014-09-08T11:04:45Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.egit.github.core.event.PullRequestReviewCommentPayload.getComment()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (comment != null) { return res.getString(R.string.event_commit_comment_desc, comment.getCommitId().substring(0, 7), comment.getBody()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6820/buggy-version/src.com.gh4a.adapter.FeedAdapter.java", "BodyUseAPI": ["org.eclipse.egit.github.core.CommitComment.getBody()", "android.content.res.Resources.getString(R.string.event_commit_comment_desc,comment.getCommitId().substring(0, 7),comment.getBody())", "org.eclipse.egit.github.core.CommitComment.getCommitId()", "comment.getCommitId().substring(int,int)"], "Fixed commit": "65e3571a30f7973dd818f6b71ae935a92e6b610b", "Url": "https://api.github.com/repos/maniac103/gh4a", "Date": "2014-09-08T11:04:45Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["defUnit.defname.getSourceRangeOrNull()", "dtool.ast.definitions.INamedElement.resolveDefUnit()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((defUnit.getArcheType()) == (dtool.ast.definitions.EArcheType.Module)) && (sourceRange == null)) { sourceRange = new dtool.ast.SourceRange(0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4856/buggy-version/org.dsource.ddt.dtool.src.dtool.engine.DToolServer.java", "BodyUseAPI": [], "Fixed commit": "d344000aa8c1da7ec77ec61e869f5be46ebd0acf", "Url": "https://api.github.com/repos/bruno-medeiros/DDT", "Date": "2014-06-25T14:58:09Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (elementName.equalsIgnoreCase(\"Overview\")) sb = new java.lang.StringBuilder();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8229/buggy-version/TvPal.src.main.java.is.parsers.TvDbEpisodeParser.java", "BodyUseAPI": [], "Fixed commit": "491497cd9637c616440149bdec478a7e382ac618", "Url": "https://api.github.com/repos/thdg/TVpal", "Date": "2013-10-17T20:45:30Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sb) != null) { for (int k = i; k < (i + j); k++) { sb.append(ac[k]); } }else tmpValue = new java.lang.String(ac, i, j);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8229/buggy-version/TvPal.src.main.java.is.parsers.TvDbEpisodeParser.java", "BodyUseAPI": [], "Fixed commit": "491497cd9637c616440149bdec478a7e382ac618", "Url": "https://api.github.com/repos/thdg/TVpal", "Date": "2013-10-17T20:45:30Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tid instanceof simpledb.TransactionId)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1112/buggy-version/src.java.simpledb.TransactionId.java", "BodyUseAPI": [], "Fixed commit": "dde5da31b9c758c939ddbac71279ec4a49808ae1", "Url": "https://api.github.com/repos/xuchongfeng/simpledb", "Date": "2016-04-20T13:45:54Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(field instanceof simpledb.StringField)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1112/buggy-version/src.java.simpledb.StringField.java", "BodyUseAPI": [], "Fixed commit": "dde5da31b9c758c939ddbac71279ec4a49808ae1", "Url": "https://api.github.com/repos/xuchongfeng/simpledb", "Date": "2016-04-20T13:45:54Z"},
{"Line": "=>562", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.dart.compiler.backend.js.JsIf.getThenStatement()", "com.google.dart.compiler.backend.js.JsIf.getElseStatement()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((elseStatement != null) && (thenStmt instanceof com.google.dart.compiler.backend.js.JsIf)) && ((((com.google.dart.compiler.backend.js.JsIf) (thenStmt)).getElseStatement()) == null)) { thenStmt = new com.google.dart.compiler.backend.js.JsBlock(thenStmt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6416/buggy-version/js.js.dart-ast.src.com.google.dart.compiler.backend.js.JsToStringGenerationVisitor.java", "BodyUseAPI": [], "Fixed commit": "d533bce642f14ea5f2ea9d85588045f9b6bea36c", "Url": "https://api.github.com/repos/JetBrains/kotlin", "Date": "2014-08-19T15:14:50Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTextDetails) != null) mTextDetails.setText(constructWelcomeMessage(profile));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5904/buggy-version/app.src.main.java.com.android.memeinn.user.FacebookLoginActivity.java", "BodyUseAPI": [], "Fixed commit": "b0f0f6a7e92d89537ca8843423bfe0c1b5dfdaf9", "Url": "https://api.github.com/repos/wangmifen/Me-Me-Inn", "Date": "2015-04-21T08:45:51Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((s.trim().length()) == 0) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7500/buggy-version/lorian.graph.function.Term.java", "BodyUseAPI": [], "Fixed commit": "55d73319ebef5cddec6ed832b2d20f9a3c9fc153", "Url": "https://api.github.com/repos/lorian1333/graph", "Date": "2013-04-03T14:56:29Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((rating * 10) % 10) != 0) { mRatingBar.setRating((rating + 0.5F)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2728/buggy-version/app.src.main.java.com.slavafleer.moviemanager.ui.EditorActivity.java", "BodyUseAPI": ["android.widget.RatingBar.setRating(float)"], "Fixed commit": "d1be4cf922c29b5c61b506f10e2bad1152f9aec4", "Url": "https://api.github.com/repos/slavafleer/MovieManager", "Date": "2015-12-10T08:56:43Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentThread) != null) currentThread.interrupt();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7434/buggy-version/src.main.java.core.GameManager.java", "BodyUseAPI": [], "Fixed commit": "919c41aaaf73fde902c794e07981cba8aa0741c3", "Url": "https://api.github.com/repos/haslam22/gomoku", "Date": "2017-06-28T18:25:43Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index > 0) { language = value.substring(0, index); locale = value.substring((index + 1)); }else { language = value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8179/buggy-version/rt.frontend.jaxrs.src.main.java.org.apache.cxf.jaxrs.utils.HttpUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int)"], "Fixed commit": "07fbca8d5e8a8578c273ec1d42f8fea0f54dea98", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2015-10-15T16:36:17Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Statement.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rss.next()) { java.lang.String sd_query = \"SELECT sql FROM sqlite_master WHERE tbl_name = 'storage' AND sql LIKE '%console%'\"; java.sql.ResultSet rssd = statement.executeQuery(sd_query); if (rssd.next()) { java.lang.String s_drop = \"DROP TABLE storage\"; statement.executeUpdate(s_drop); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/599/buggy-version/src.main.java.me.eccentric_nz.TARDIS.database.TARDISSQLiteDatabase.java", "BodyUseAPI": [], "Fixed commit": "8215fe4dc41797d1fdce58ff1f8282790704bd19", "Url": "https://api.github.com/repos/eccentricdevotion/TARDIS", "Date": "2014-01-05T07:02:28Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (chosenChar.isEmpty()) chosenChar = \"A\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3624/buggy-version/src.ch.uzh.ifi.attempto.acewiki.gui.IndexPage.java", "BodyUseAPI": [], "Fixed commit": "9d01e654068828bf84f27711e0b5de62f58f452a", "Url": "https://api.github.com/repos/AceWiki/AceWiki", "Date": "2013-06-03T13:54:08Z"},
{"Line": "=>1178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((members != null) && (!(members.isEmpty()))) { org.walkmod.javalang.ast.Node last = ((org.walkmod.javalang.ast.Node) (members.get(((members.size()) - 1)))); if (!(last.isNewNode())) { int start = (last.getEndLine()) + 1; int end = c.getBeginLine(); for (int i = start; i < end; i++) { printer.printLn(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3188/buggy-version/src.main.java.org.walkmod.javalang.visitors.DumpVisitor.java", "BodyUseAPI": ["java.util.List<?>.get(int)", "java.util.List<?>.size()"], "Fixed commit": "d803ee84857e260493da26ae513f52a9bcf5451b", "Url": "https://api.github.com/repos/rpau/javalang", "Date": "2015-02-12T11:31:13Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (superType != null) { kalang.core.FieldDescriptor[] superFields = superType.getFieldDescriptors(caller); ret.addAll(java.util.Arrays.asList(superFields)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/409/buggy-version/src.main.java.kalang.core.ObjectType.java", "BodyUseAPI": ["kalang.core.ObjectType.getFieldDescriptors(kalang.ast.ClassNode)"], "Fixed commit": "4429834788bf1382869e1baf6c02504c77d29e5f", "Url": "https://api.github.com/repos/kasonyang/kalang", "Date": "2017-02-01T13:38:22Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(nextPage instanceof com.rectang.xsm.site.DocumentPage)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7540/buggy-version/xsm-web.src.main.java.com.rectang.xsm.site.upgrades.Upgrade9.java", "BodyUseAPI": [], "Fixed commit": "b512dbb362e8364dbadbfc4fb5f7b5ca77e8a215", "Url": "https://api.github.com/repos/ajwillia-ms/xsm", "Date": "2012-09-18T22:46:53Z"},
{"Line": "=>1017", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (t.matches(\".*PLUS.*\")) t = t.replaceAll(\"PLUS\", \"_\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6047/buggy-version/src.configuration.Util.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "8ff2a073408397fff2027a20f4d351b288378455", "Url": "https://api.github.com/repos/JeGoi/armadillo2", "Date": "2017-08-19T18:40:21Z"},
{"Line": "=>1020", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (t.matches(\".*DOT.*\")) t = t.replaceAll(\"DOT\", \"_\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6047/buggy-version/src.configuration.Util.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "8ff2a073408397fff2027a20f4d351b288378455", "Url": "https://api.github.com/repos/JeGoi/armadillo2", "Date": "2017-08-19T18:40:21Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tile == (checkSurroundingTiles(tile, i, j, 1, 1).getTile())) { consecutiveCount = getPathLength(new com.ttt.model.TilePosition(tile, i, j), 1, 1); if (consecutiveCount >= (com.ttt.model.Board.WIN_COUNT)) return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5306/buggy-version/src.com.ttt.model.Board.java", "BodyUseAPI": ["com.ttt.model.Board.getPathLength(com.ttt.model.TilePosition,int,int)"], "Fixed commit": "ec224a14a2d7431f42112e647a8ab467bb48954d", "Url": "https://api.github.com/repos/jointheleague/tic-tac-toe-ml", "Date": "2016-10-12T03:12:17Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tile == (checkSurroundingTiles(tile, i, j, 0, 1).getTile())) { consecutiveCount = getPathLength(new com.ttt.model.TilePosition(tile, i, j), 0, 1); if (consecutiveCount >= (com.ttt.model.Board.WIN_COUNT)) return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5306/buggy-version/src.com.ttt.model.Board.java", "BodyUseAPI": ["com.ttt.model.Board.getPathLength(com.ttt.model.TilePosition,int,int)"], "Fixed commit": "ec224a14a2d7431f42112e647a8ab467bb48954d", "Url": "https://api.github.com/repos/jointheleague/tic-tac-toe-ml", "Date": "2016-10-12T03:12:17Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (consecutiveCount >= (com.ttt.model.Board.WIN_COUNT)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5306/buggy-version/src.com.ttt.model.Board.java", "BodyUseAPI": [], "Fixed commit": "ec224a14a2d7431f42112e647a8ab467bb48954d", "Url": "https://api.github.com/repos/jointheleague/tic-tac-toe-ml", "Date": "2016-10-12T03:12:17Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (si < 0) { si = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5443/buggy-version/src.main.java.net.stormdev.uPlanes.main.PlaneGenerator.java", "BodyUseAPI": [], "Fixed commit": "6e69ecc181084f26ced3cf19eeeea6b45630e453", "Url": "https://api.github.com/repos/storm345dev/uPlanes", "Date": "2014-06-18T19:39:47Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i <= 0) { i = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5443/buggy-version/src.main.java.net.stormdev.uPlanes.main.PlaneGenerator.java", "BodyUseAPI": [], "Fixed commit": "6e69ecc181084f26ced3cf19eeeea6b45630e453", "Url": "https://api.github.com/repos/storm345dev/uPlanes", "Date": "2014-06-18T19:39:47Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item == null) || ((frames.size()) == 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6775/buggy-version/src.Zhonghua.GameController.java", "BodyUseAPI": [], "Fixed commit": "96d3ff3c11d5b3033365a1e6ae76e9ff75b6d0f3", "Url": "https://api.github.com/repos/JackQinCh/Sokoban", "Date": "2015-12-03T23:54:55Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((backupRecord) != null) { return new com.hazelcast.cache.impl.operation.CachePutBackupOperation(name, key, backupRecord); }else { return new com.hazelcast.cache.impl.operation.CacheRemoveBackupOperation(name, key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/473/buggy-version/hazelcast.src.main.java.com.hazelcast.cache.impl.operation.CacheEntryProcessorOperation.java", "BodyUseAPI": [], "Fixed commit": "99f31ad15ab271a744bd4323cd2d1979c85e5e6e", "Url": "https://api.github.com/repos/hazelcast/hazelcast", "Date": "2015-05-05T08:59:57Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((df.get_datePmReleased()) != null) { p.addImmutable(dateCFBytes, org.apache.hadoop.hbase.util.Bytes.toBytes(NoSQLConstants.PaperColumns.PM_RELEASED), org.apache.hadoop.hbase.util.Bytes.toBytes(df.get_datePmReleased())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/9046/buggy-version/UnnormalizeCoreDBv2.src.main.java.com.sciencescape.ds.db.hbase.HbaseHandler.java", "BodyUseAPI": ["org.apache.hadoop.hbase.client.Put.addImmutable(byte[],org.apache.hadoop.hbase.util.Bytes.toBytes(NoSQLConstants.PaperColumns.PM_RELEASED),org.apache.hadoop.hbase.util.Bytes.toBytes(df.get_datePmReleased()))", "com.sciencescape.ds.db.mysql.coredb.DenormalizedFields.get_datePmReleased()", "org.apache.hadoop.hbase.util.Bytes.toBytes(df.get_datePmReleased())"], "Fixed commit": "fa8232d3c3985832130d678e50d63672594a0263", "Url": "https://api.github.com/repos/akshays14/sci-personal", "Date": "2015-08-06T21:15:20Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<com.voxelwind.api.game.level.block.BlockType, com.voxelwind.api.game.util.data.TreeSpecies[]>.get(block.getBlockType())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (availableSpecies == null) { throw new java.lang.IllegalArgumentException((\"Did not find mapping for \" + (block.getBlockType()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/633/buggy-version/server.src.main.java.com.voxelwind.server.game.serializer.wood.LogSerializer.java", "BodyUseAPI": [], "Fixed commit": "e44b9de82fe95d207ff603db1789028b39eac352", "Url": "https://api.github.com/repos/voxelwind/voxelwind", "Date": "2016-10-06T03:05:13Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sourcePortEdit.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((sourcePort.length()) == 0) { sourcePort = sourcePortEdit.getHint().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/9033/buggy-version/app.src.main.java.org.connectbot.PortForwardListActivity.java", "BodyUseAPI": [], "Fixed commit": "6053099051c5b48dbd0e5f5ad237838179b629f0", "Url": "https://api.github.com/repos/rhansby/connectbot", "Date": "2015-09-23T17:47:05Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["destEdit.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((destination.length()) == 0) { destination = destEdit.getHint().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/9033/buggy-version/app.src.main.java.org.connectbot.PortForwardListActivity.java", "BodyUseAPI": [], "Fixed commit": "6053099051c5b48dbd0e5f5ad237838179b629f0", "Url": "https://api.github.com/repos/rhansby/connectbot", "Date": "2015-09-23T17:47:05Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.helger.commons.string.StringHelper.hasText(sAgreementRefPMode)) || (com.helger.commons.string.StringHelper.hasText(sAgreementRefValue))) { final com.helger.as4lib.ebms3header.Ebms3AgreementRef aEbms3AgreementRef = new com.helger.as4lib.ebms3header.Ebms3AgreementRef(); aEbms3AgreementRef.setPmode(sAgreementRefPMode); aEbms3AgreementRef.setValue(sAgreementRefValue); aEbms3CollaborationInfo.setAgreementRef(aEbms3AgreementRef); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4864/buggy-version/ph-as4-lib.src.main.java.com.helger.as4lib.message.CreateUserMessage.java", "BodyUseAPI": ["com.helger.as4lib.ebms3header.Ebms3AgreementRef.setPmode(java.lang.String)", "com.helger.as4lib.ebms3header.Ebms3AgreementRef.setValue(java.lang.String)"], "Fixed commit": "7a3a583bcd3cfa5cb105b1b03f2ddefd1f7cc3bf", "Url": "https://api.github.com/repos/phax/ph-as4", "Date": "2016-12-05T17:13:08Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((worker) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/882/buggy-version/src.main.java.com.minecolonies.colony.buildings.AbstractBuildingWorker.java", "BodyUseAPI": [], "Fixed commit": "faf16481ef06c011b4a1720cf844d1764107ef4d", "Url": "https://api.github.com/repos/ldtteam/minecolonies", "Date": "2016-08-21T12:38:05Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["IEntryFilter.Entry.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (key instanceof com.netcrest.pado.temporal.ITemporalKey) { if (data instanceof com.netcrest.pado.temporal.ITemporalData) { ((com.netcrest.pado.temporal.ITemporalBulkLoader) (bulkLoader)).put(((com.netcrest.pado.temporal.ITemporalKey) (key)), ((com.netcrest.pado.temporal.ITemporalData) (data))); }else { ((com.netcrest.pado.temporal.ITemporalBulkLoader) (bulkLoader)).put(((com.netcrest.pado.temporal.ITemporalKey) (key)), data, null); } }else { bulkLoader.put(key, data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6354/buggy-version/pado-biz.src.main.java.com.netcrest.pado.biz.file.CsvFileLoader.java", "BodyUseAPI": ["com.netcrest.pado.util.IBulkLoader.put(java.lang.Object,java.lang.Object)"], "Fixed commit": "7d96c2f323606b6d685a7bfc76472353ec6747a7", "Url": "https://api.github.com/repos/netcrest/pado", "Date": "2016-02-12T23:06:25Z"},
{"Line": "=>552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entity.getTitle()) != null) { if (((filter.getOperator()) == (org.occiware.mart.server.utils.CollectionFilter.OPERATOR_EQUAL)) && (entity.getTitle().equalsIgnoreCase(attributeValue))) { control = true; } if (((filter.getOperator()) == (org.occiware.mart.server.utils.CollectionFilter.OPERATOR_LIKE)) && (entity.getTitle().contains(attributeValue))) { control = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6893/buggy-version/org.occiware.mart.server.src.main.java.org.occiware.mart.server.model.EntityManager.java", "BodyUseAPI": ["org.occiware.mart.server.model.Entity.getTitle()", "entity.getTitle().contains(java.lang.String)", "entity.getTitle().equalsIgnoreCase(java.lang.String)", "org.occiware.mart.server.model.Entity.getTitle()"], "Fixed commit": "3b7741255a39fd30dcc5d4c7c6eea81c2d797679", "Url": "https://api.github.com/repos/occiware/MartServer", "Date": "2017-12-16T08:41:03Z"},
{"Line": "=>565", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((resource.getSummary()) != null) { if (((filter.getOperator()) == (org.occiware.mart.server.utils.CollectionFilter.OPERATOR_EQUAL)) && (resource.getSummary().equalsIgnoreCase(attributeValue))) { control = true; } if (((filter.getOperator()) == (org.occiware.mart.server.utils.CollectionFilter.OPERATOR_LIKE)) && (resource.getSummary().contains(attributeValue))) { control = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6893/buggy-version/org.occiware.mart.server.src.main.java.org.occiware.mart.server.model.EntityManager.java", "BodyUseAPI": ["resource.getSummary().equalsIgnoreCase(java.lang.String)", "resource.getSummary().contains(java.lang.String)", "org.occiware.mart.server.model.Resource.getSummary()", "org.occiware.mart.server.model.Resource.getSummary()"], "Fixed commit": "3b7741255a39fd30dcc5d4c7c6eea81c2d797679", "Url": "https://api.github.com/repos/occiware/MartServer", "Date": "2017-12-16T08:41:03Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(baseVersion)) { baseVersion = java.lang.System.getProperty(\"MUPP_VERSION_NAME\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2803/buggy-version/atlas-gradle-plugin.atlas-plugin.src.main.java.com.taobao.android.builder.tasks.dexpatch.DexPatchContext.java", "BodyUseAPI": [], "Fixed commit": "54f0feabac5c46e88ccc7542184f3ed9b97ac336", "Url": "https://api.github.com/repos/alibaba/atlas", "Date": "2017-08-25T02:49:24Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(baseVersion)) { baseVersion = java.lang.System.getProperty(\"MUPP_DEXPATCH_BASE_VERSION\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2803/buggy-version/atlas-gradle-plugin.atlas-plugin.src.main.java.com.taobao.android.builder.tasks.dexpatch.DexPatchContext.java", "BodyUseAPI": [], "Fixed commit": "54f0feabac5c46e88ccc7542184f3ed9b97ac336", "Url": "https://api.github.com/repos/alibaba/atlas", "Date": "2017-08-25T02:49:24Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newBrewNote.getMashNoteCollection()) != null) { for (final com.openbrew.openbrewrf.MashNotes mashNote : newBrewNote.getMashNoteCollection()) { en.merge(mashNote); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4129/buggy-version/src.main.java.tools.BrewsTools.java", "BodyUseAPI": ["com.openbrew.openbrewrf.BrewNotes.getMashNoteCollection()"], "Fixed commit": "236a221e9493af642fc66b63d24a3b79aad2d701", "Url": "https://api.github.com/repos/donaldchapman/openbrewrf", "Date": "2017-10-30T18:21:32Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.idega.presentation.ui.handlers.IWDatePickerHandler.getParsedDate(java.lang.String,iwc.getCurrentLocale())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (bornDate != null) user.setDateOfBirth(new java.sql.Date(bornDate.getTime()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/879/buggy-version/src.java.is.idega.idegaweb.egov.citizen.business.CitizenServices.java", "BodyUseAPI": ["java.util.Date.getTime()", "com.idega.user.data.User.setDateOfBirth(java.sql.Date)"], "Fixed commit": "1a18f294914d7fff7df9c322716a55fb913d3bad", "Url": "https://api.github.com/repos/idega/is.idega.idegaweb.egov.citizen", "Date": "2011-10-18T09:45:38Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ua.com.juja.fedorenko_valerii.controller.command.DropDatabase.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (databaseName.equals(manager.getCurrentDatabase())) { throw new java.lang.IllegalArgumentException(\"You can not delete the database to which you are connected\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3757/buggy-version/src.main.java.ua.com.juja.fedorenko_valerii.controller.command.DropDatabase.java", "BodyUseAPI": [], "Fixed commit": "02a2582a2fde71596b92b435ea59e91faadfee3a", "Url": "https://api.github.com/repos/val-fed/SQLcmd", "Date": "2017-08-19T14:33:15Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lecho.lib.hellocharts.BuildConfig.DEBUG) { java.lang.System.out.println((\"HIGH: \" + highest)); java.lang.System.out.println((\"Low: \" + lowest)); java.lang.System.out.println((\"VALUE: \" + (pointValue.getY()))); java.lang.System.out.println((\"TODRAW: \" + ((highest == (pointValue.getY())) || (lowest == (pointValue.getY())) ? true : false))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1283/buggy-version/hellocharts-library.src.lecho.lib.hellocharts.renderer.LineChartRenderer.java", "BodyUseAPI": [], "Fixed commit": "3c3929fc5c64321b03e2c3fda1625daeb3c86318", "Url": "https://api.github.com/repos/WellframeInc/hellocharts-android", "Date": "2015-08-20T17:29:37Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(((type.size()) == 1) && (type.get(0).equals(\"freetext\")))) { type.add(0, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/437/buggy-version/src.command.annotation.PostAnnotationFieldCommand.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(int,java.lang.String)"], "Fixed commit": "14da6c21142258008d005de8e1a382989b55ac6d", "Url": "https://api.github.com/repos/genomizer/genomizer-server", "Date": "2015-05-18T14:26:09Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((key != null) && (!(key.equals(\"\")))) toxSingleton.mNotificationManager.cancel(toxSingleton.getAntoxFriend(key).getFriendnumber());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1803/buggy-version/app.src.main.java.im.tox.antox.activities.MainActivity.java", "BodyUseAPI": ["toxSingleton.getAntoxFriend(key).getFriendnumber()", "im.tox.antox.tox.ToxSingleton.getAntoxFriend(java.lang.String)", "toxSingleton.mNotificationManager.cancel(toxSingleton.getAntoxFriend(key).getFriendnumber())"], "Fixed commit": "3a179cd9a43d2e748e407a63810afb1f326037a4", "Url": "https://api.github.com/repos/Astonex/Antox", "Date": "2014-06-10T07:58:15Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wasFlipCoordinates) { com.telefonica.iot.cygnus.sinks.NGSICartoDBSink.LOGGER.error((((((\"[\" + (this.getName())) + \"] Invalid configuration (flip_coordinates=\") + swapCoordinatesStr) + \") -- Must be 'true' or 'false' -- Deprecated, please use \") + \"'swap_coordinates' instead\")); }else { com.telefonica.iot.cygnus.sinks.NGSICartoDBSink.LOGGER.error(((((\"[\" + (this.getName())) + \"] Invalid configuration (swap_coordinates=\") + swapCoordinatesStr) + \") -- Must be 'true' or 'false'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6382/buggy-version/cygnus-ngsi.src.main.java.com.telefonica.iot.cygnus.sinks.NGSICartoDBSink.java", "BodyUseAPI": [], "Fixed commit": "423f020dace40fa1f12f7ec25758fe3fcc3aee13", "Url": "https://api.github.com/repos/telefonicaid/fiware-cygnus", "Date": "2016-11-29T08:53:49Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wasFlipCoordinates) { com.telefonica.iot.cygnus.sinks.NGSICartoDBSink.LOGGER.debug(((((\"[\" + (this.getName())) + \"] Reading configuration (flip_coordinates=\") + swapCoordinatesStr) + \") -- Deprecated, please use 'swap_coordinates' instead\")); }else { com.telefonica.iot.cygnus.sinks.NGSICartoDBSink.LOGGER.debug(((((\"[\" + (this.getName())) + \"] Reading configuration (swap_coordinates=\") + swapCoordinatesStr) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6382/buggy-version/cygnus-ngsi.src.main.java.com.telefonica.iot.cygnus.sinks.NGSICartoDBSink.java", "BodyUseAPI": [], "Fixed commit": "423f020dace40fa1f12f7ec25758fe3fcc3aee13", "Url": "https://api.github.com/repos/telefonicaid/fiware-cygnus", "Date": "2016-11-29T08:53:49Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.flume.Context.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((swapCoordinatesStr == null) || (swapCoordinatesStr.isEmpty())) { swapCoordinatesStr = context.getString(\"flip_coordinates\"); if ((swapCoordinatesStr == null) || (swapCoordinatesStr.isEmpty())) { swapCoordinatesStr = \"false\"; }else { wasFlipCoordinates = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6382/buggy-version/cygnus-ngsi.src.main.java.com.telefonica.iot.cygnus.sinks.NGSICartoDBSink.java", "BodyUseAPI": [], "Fixed commit": "423f020dace40fa1f12f7ec25758fe3fcc3aee13", "Url": "https://api.github.com/repos/telefonicaid/fiware-cygnus", "Date": "2016-11-29T08:53:49Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((ignite.getIgnitingBlock()) == null) && ((ignite.getIgnitingEntity()) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6046/buggy-version/src.io.github.yannici.bedwars.Listener.BlockListener.java", "BodyUseAPI": [], "Fixed commit": "44fa4d147e97a8fdc0160a300f8957c5c014394b", "Url": "https://api.github.com/repos/BedwarsRel/BedwarsRel", "Date": "2015-05-24T09:37:13Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (url == null) { throw new com.github.knightliao.canalx.db.exception.CanalxSelectDbJsonInitException((\"cannot load config: \" + configFilePath)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7363/buggy-version/src.main.java.com.github.knightliao.canalx.db.controller.DbFetchControllerImpl.java", "BodyUseAPI": [], "Fixed commit": "80527ca7baa5eec24a649acc2fdaa923bc909da6", "Url": "https://api.github.com/repos/knightliao/canalx-select-db-json", "Date": "2016-12-12T14:42:22Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((property.indexOf(\".\")) > 0) { property = property.substring(((entityAlias) + \".\").length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8720/buggy-version/kundera-core.src.main.java.com.impetus.kundera.query.KunderaQuery.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "12878b9f4b806fe18220b1dadda2f26ae16a9466", "Url": "https://api.github.com/repos/sonatype/Kundera", "Date": "2013-08-01T09:25:20Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.druid.data.input.Firehose.nextRow()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (inputRow == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/712/buggy-version/indexing-service.src.main.java.io.druid.indexing.common.task.IndexTask.java", "BodyUseAPI": [], "Fixed commit": "d3ece3f504754d8930a4a769184c5abd72e3dd6d", "Url": "https://api.github.com/repos/jihoonson/druid", "Date": "2017-05-16T07:31:55Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mColumnWidth) != 0) && ((mColumnCount) != (java.lang.Float.NaN))) { com.taobao.weex.utils.WXLogUtils.w((((((\"preCalculateCellWidth mColumnGap :\" + (mColumnGap)) + \" mColumnWidth:\") + (mColumnWidth)) + \" mColumnCount:\") + (mColumnCount))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7116/buggy-version/android.sdk.src.main.java.com.taobao.weex.dom.WXRecyclerDomObject.java", "BodyUseAPI": ["com.taobao.weex.utils.WXLogUtils.w(java.lang.String)"], "Fixed commit": "96f64899f9978707c4c1bfe78ebeb7c738e2342a", "Url": "https://api.github.com/repos/acton393/incubator-weex", "Date": "2017-04-25T09:55:49Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Optional<tds.exam.ExamItem>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (existingExamItem.getResponse().isPresent()) { updatedResponseBuilder = ExamItemResponse.Builder.fromExamItemResponse(existingExamItem.getResponse().get()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5174/buggy-version/service.src.main.java.tds.exam.services.scoring.ResponseServiceImpl.java", "BodyUseAPI": ["ExamItemResponse.Builder.fromExamItemResponse(existingExamItem.getResponse().get())", "existingExamItem.getResponse().get()", "tds.exam.ExamItem.getResponse()"], "Fixed commit": "09c7dd105494e39b39022229924041bad41c1696", "Url": "https://api.github.com/repos/SmarterApp/TDS_ExamService", "Date": "2017-04-26T16:18:37Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mConversationView) != null) { removeView(mConversationView); mConversationView = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4989/buggy-version/android.libraries.TweetLanesCore.src.com.tweetlanes.android.core.view.TweetFeedItemView.java", "BodyUseAPI": [], "Fixed commit": "6e1577abfdbbcb63e4ec5fbcae2092e06a9668bf", "Url": "https://api.github.com/repos/R4md4c/TweetLanes", "Date": "2013-12-04T09:51:07Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item) { if (((slot >= 0) && ((getSlot(slot)) != null)) && ((getSlot(slot).getStack()) == (player.getHeldItem()))) { return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3099/buggy-version/src.main.java.com.workshop.compactchests.server.ContainerChest.java", "BodyUseAPI": [], "Fixed commit": "7af8970340a7b38121a17bed857ea0095e45ea0c", "Url": "https://api.github.com/repos/tobystrong/CompactStorage", "Date": "2015-01-01T13:55:04Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectedConfiguration.equalsIgnoreCase(\"layout\")) { android.support.design.widget.TabLayout.Tab tab = tabLayout.getTabAt(0); tab.setText(R.string.tabLogin); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/9264/buggy-version/app.src.main.java.com.jeffcunningham.lv4t_android.login.LoginFragment.java", "BodyUseAPI": [], "Fixed commit": "1018b25a61d6110e5e7f7c09cf140329b5041e3f", "Url": "https://api.github.com/repos/jcunningham77/twitterListViewer-Android", "Date": "2017-05-07T23:00:26Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((android.view.WindowManager) (getActivity().getApplicationContext().getSystemService(Context.WINDOW_SERVICE))).getDefaultDisplay().getRotation()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rotation == 0) { android.hardware.SensorManager.remapCoordinateSystem(mR, SensorManager.AXIS_MINUS_Z, SensorManager.AXIS_X, mR2); }else { android.hardware.SensorManager.remapCoordinateSystem(mR, SensorManager.AXIS_X, SensorManager.AXIS_Z, mR2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4607/buggy-version/MarsImages.MarsImages.src.main.java.gov.nasa.jpl.hi.marsimages.ui.MarsRajawaliFragment.java", "BodyUseAPI": [], "Fixed commit": "2053e581c5f9c318ce41f0c7263937b319f67d39", "Url": "https://api.github.com/repos/OpsLabJPL/MarsImagesAndroid", "Date": "2015-08-19T23:25:47Z"},
{"Line": "=>1923", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(response.errors().containsKey(entry.getKey().topic()))) { org.apache.kafka.common.Node node = response.cluster().leaderFor(entry.getKey()); if (node != null) { if (!(leaders.containsKey(node))) leaders.put(node, new java.util.HashMap<org.apache.kafka.common.TopicPartition, java.lang.Long>()); leaders.get(node).put(entry.getKey(), entry.getValue().beforeOffset()); }else { org.apache.kafka.common.internals.KafkaFutureImpl<org.apache.kafka.clients.admin.DeletedRecords> future = futures.get(entry.getKey()); future.completeExceptionally(Errors.LEADER_NOT_AVAILABLE.exception()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2522/buggy-version/clients.src.main.java.org.apache.kafka.clients.admin.KafkaAdminClient.java", "BodyUseAPI": ["org.apache.kafka.common.requests.MetadataResponse.cluster()", "leaders.get(node).put(entry.getKey(),entry.getValue().beforeOffset())", "entry.getValue().beforeOffset()", "java.util.Map<org.apache.kafka.common.TopicPartition, org.apache.kafka.common.internals.KafkaFutureImpl<org.apache.kafka.clients.admin.DeletedRecords>>.get(entry.getKey())", "java.util.Map.Entry<org.apache.kafka.common.TopicPartition, org.apache.kafka.clients.admin.RecordsToDelete>.getKey()", "java.util.Map.Entry<org.apache.kafka.common.TopicPartition, org.apache.kafka.clients.admin.RecordsToDelete>.getKey()", "java.util.Map.Entry<org.apache.kafka.common.TopicPartition, org.apache.kafka.clients.admin.RecordsToDelete>.getKey()", "java.util.Map.Entry<org.apache.kafka.common.TopicPartition, org.apache.kafka.clients.admin.RecordsToDelete>.getValue()", "response.cluster().leaderFor(entry.getKey())"], "Fixed commit": "cd6939312b1e3e597f3899a66ee8d87bf8104e28", "Url": "https://api.github.com/repos/ppatierno/kafka", "Date": "2017-11-15T13:09:40Z"},
{"Line": "=>521", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.microsoft.azure.vmagent.AzureVMManagementServiceDelegate.getVMSizes(com.microsoft.azure.util.AzureCredentials.ServicePrincipal,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (vmSizes != null) { for (java.lang.String vmSize : vmSizes) { model.add(vmSize); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1904/buggy-version/src.main.java.com.microsoft.azure.vmagent.AzureVMAgentTemplate.java", "BodyUseAPI": [], "Fixed commit": "6dd8a285a699a097ffa264698a3a606ce94ad250", "Url": "https://api.github.com/repos/jenkinsci/azure-vm-agents-plugin", "Date": "2017-03-17T18:29:03Z"},
{"Line": "=>617", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((location == null) || (location.isEmpty())) { return com.microsoft.azure.vmagent.AzureVMManagementServiceDelegate.DEFAULT_VM_SIZES; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1904/buggy-version/src.main.java.com.microsoft.azure.vmagent.AzureVMManagementServiceDelegate.java", "BodyUseAPI": [], "Fixed commit": "6dd8a285a699a097ffa264698a3a606ce94ad250", "Url": "https://api.github.com/repos/jenkinsci/azure-vm-agents-plugin", "Date": "2017-03-17T18:29:03Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!enabled) { setCurrency(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1054/buggy-version/src.main.java.me.xhawk87.Coinage.vault.CoinageEconomy.java", "BodyUseAPI": [], "Fixed commit": "c61f5d019e058198b94ff242c0cb043dd4b6e834", "Url": "https://api.github.com/repos/XHawk87/Coinage", "Date": "2014-03-31T04:05:28Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (itemID.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3202/buggy-version/src.Commands.Command.java", "BodyUseAPI": [], "Fixed commit": "25c73ce79432b042b2bd0d1f9fb63d4b4b9b00cb", "Url": "https://api.github.com/repos/cs2103aug2015-f10-4j/main", "Date": "2015-11-07T18:47:03Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (master != null) { rsp_list = msg_disp.castMessage(null, new org.jgroups.Message(null, null, new ru.mail.fedka2005.objects.RequestCPULoadMessage()), new org.jgroups.blocks.RequestOptions(org.jgroups.blocks.ResponseMode.GET_ALL, 0).setExclusionList(master)); }else { rsp_list = msg_disp.castMessage(null, new org.jgroups.Message(null, null, new ru.mail.fedka2005.objects.RequestCPULoadMessage()), new org.jgroups.blocks.RequestOptions(org.jgroups.blocks.ResponseMode.GET_ALL, 0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2952/buggy-version/src.ru.mail.fedka2005.objects.ControllerWrapper.java", "BodyUseAPI": ["org.jgroups.blocks.MessageDispatcher.castMessage(<nulltype>,org.jgroups.Message,new org.jgroups.blocks.RequestOptions(org.jgroups.blocks.ResponseMode.GET_ALL, 0).setExclusionList(master))", "org.jgroups.blocks.RequestOptions.setExclusionList(org.jgroups.Address)"], "Fixed commit": "01ee45b7e52eed05cd61dd574e84763f07b15b0b", "Url": "https://api.github.com/repos/fedor-goncharov/PoxWrapper", "Date": "2014-05-07T10:41:47Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["micdoodle8.mods.galacticraft.core.dimension.SpaceRaceManager.getSpaceRaceFromPlayer(thePlayer.getGameProfile().getName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (raceForPlayer != null) micdoodle8.mods.galacticraft.core.dimension.SpaceRaceManager.sendSpaceRaceData(thePlayer, raceForPlayer);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5419/buggy-version/src.main.java.micdoodle8.mods.galacticraft.core.network.ConnectionEvents.java", "BodyUseAPI": ["micdoodle8.mods.galacticraft.core.dimension.SpaceRaceManager.sendSpaceRaceData(net.minecraft.entity.player.EntityPlayerMP,micdoodle8.mods.galacticraft.core.dimension.SpaceRace)"], "Fixed commit": "94d0089494eaa936383f65eeb5741890b3aa945e", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2015-02-28T18:45:21Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getOperator().getAttribute()) == (ch.fhnw.cbip.compiler.scanner.enums.OperatorAttribute.COR)) addLine(\"IntInv\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5773/buggy-version/src.ch.fhnw.cbip.compiler.generator.CodeGenerator.java", "BodyUseAPI": [], "Fixed commit": "7beccae069e1a1ee2c652456af4ded637c741ef4", "Url": "https://api.github.com/repos/pfirpfel/iml-compiler", "Date": "2013-01-02T14:14:44Z"},
{"Line": "=>1517", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.netflix.astyanax.model.Row.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((lastKey == null) || (!(lastKey.equals(currentKey)))) { rows = new com.emc.storageos.db.client.javadriver.CassandraRows(); result.add(rows); lastKey = currentKey; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1269/buggy-version/dbclient.src.main.java.com.emc.storageos.db.client.impl.DbClientImpl.java", "BodyUseAPI": [], "Fixed commit": "3d405f447162da5341f172e3906523b7d482abcd", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-05-31T03:47:09Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mHistory.getEntries().isEmpty()) { mDisplayView.collapse(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2852/buggy-version/mobile.src.main.java.com.android2.calculator3.BasicCalculator.java", "BodyUseAPI": [], "Fixed commit": "8bd03044c0f54b433299aaf3d2ca57df167d48ca", "Url": "https://api.github.com/repos/Xlythe/Calculator", "Date": "2016-04-16T22:03:12Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.quinsoft.zeidon.objectdefinition.DataRecord.getRelRecord()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (relRecord.getRelationshipType().isManyToOne()) { assert (relRecord.getRelFields().size()) == 1; com.quinsoft.zeidon.objectdefinition.RelField relField = relRecord.getRelFields().get(0); com.quinsoft.zeidon.standardoe.RelFieldParser parser = new com.quinsoft.zeidon.standardoe.RelFieldParser(relField, ei); assert ((entityDef.getMinCardinality()) == 0) || (parser.relInstance.isDeleted()); if (!(parser.relInstance.isDeleted())) parser.relInstance.getAttribute(parser.relAttributeDef).setInternalValue(null, true); }else setForeignKeys(ei);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/9167/buggy-version/zeidon-joe.src.main.java.com.quinsoft.zeidon.standardoe.CommitToSqlWithDbGeneratedKeys.java", "BodyUseAPI": ["relRecord.getRelFields().get(int)", "relRecord.getRelFields().size()", "com.quinsoft.zeidon.objectdefinition.RelRecord.getRelFields()", "com.quinsoft.zeidon.objectdefinition.RelRecord.getRelFields()"], "Fixed commit": "e37ec0b411c0167fd7e190c83c291d31e2862328", "Url": "https://api.github.com/repos/DeegC/zeidon-joe", "Date": "2014-09-17T18:02:39Z"},
{"Line": "=>644", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((contributes != null) && ((contributes.getType()) != (getType()))) { edu.wpi.disco.lang.Task should = getNested(); if (should != null) contributes.match(should); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1262/buggy-version/disco.java.edu.wpi.disco.lang.Propose.java", "BodyUseAPI": ["edu.wpi.disco.lang.Plan.match(edu.wpi.disco.lang.Task)"], "Fixed commit": "72d4ca06f9d1ca9640f9ad19ecaa2cacbaa3b679", "Url": "https://api.github.com/repos/charlesrich/Disco", "Date": "2015-05-19T00:16:35Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.magnitude) == 0) this.angle = org.firstinspires.ftc.teamcode.structs.Vector2D.clampAngle(java.lang.Math.toDegrees(java.lang.Math.atan2(y, x))); else this.angle = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3587/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.structs.Vector2D.java", "BodyUseAPI": [], "Fixed commit": "d7c58af86d8e209fe264c3fe4d224af7589cd64b", "Url": "https://api.github.com/repos/RoboNatick3737/2017-18", "Date": "2017-10-30T17:06:51Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (task.getIsRecurring()) { removedTask = deleteTaskById(task.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6610/buggy-version/ToDooo.src.application.ToDoList.java", "BodyUseAPI": ["application.ToDoList.deleteTaskById(task.getId())", "application.Task.getId()"], "Fixed commit": "be4c7be87c0734618150b431fc383ec3129e14b5", "Url": "https://api.github.com/repos/cs2103jan2015-f09-3j/main", "Date": "2015-03-31T10:03:11Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (item instanceof lisong_mechlab.model.item.Internal) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3578/buggy-version/src.lisong_mechlab.view.mechlab.equipment.EquipmentPanel.java", "BodyUseAPI": [], "Fixed commit": "d626eea4972e9c0a7dcd0b723fdc7f0d32b965f4", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2014-07-02T18:03:35Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getJetty().getHandler().getClass().equals(org.eclipse.jetty.server.handler.RequestLogHandler.class)) { handlerList = ((org.eclipse.jetty.server.handler.HandlerList) (((org.eclipse.jetty.server.handler.RequestLogHandler) (getJetty().getHandler())).getHandler())); }else { handlerList = ((org.eclipse.jetty.server.handler.HandlerList) (getJetty().getHandler())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8255/buggy-version/server.server-common.src.main.java.com.graphaware.server.web.GraphAwareJetty9WebServer.java", "BodyUseAPI": [], "Fixed commit": "579161569ba21a6f418fa1f3e73f83adaa7dea05", "Url": "https://api.github.com/repos/graphaware/neo4j-framework", "Date": "2014-09-12T05:31:59Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((homeAddress) != null) { addressesData.add(homeAddress); }else { addressesData.add(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3760/buggy-version/Map.app.src.main.java.com.example.npquy.activity.GetAddressActivity.java", "BodyUseAPI": [], "Fixed commit": "51586cce930c072c5777a40f93b7fb55ddf6d531", "Url": "https://api.github.com/repos/PhuQuy/Atravesar", "Date": "2016-04-08T10:26:40Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (other != pipe) { if (((((other.state) & 2) > 0) && includeReceive) || ((((other.state) & 1) > 0) && includeSend)) { if (pipe.isPublic ? other.isPublic : ((other.ownerUUID) != null) && (other.ownerUUID.equals(pipe.ownerUUID))) { connected.add(other); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8254/buggy-version/src.main.java.buildcraft.additionalpipes.pipes.TeleportManager.java", "BodyUseAPI": ["other.ownerUUID.equals(pipe.ownerUUID)", "java.util.ArrayList<buildcraft.additionalpipes.api.PipeTeleport<?>>.add(buildcraft.additionalpipes.api.PipeTeleport<?>)"], "Fixed commit": "da472fe9809df81239517772aa68dd808a0bebc8", "Url": "https://api.github.com/repos/tcooc/AdditionalPipesBC", "Date": "2015-07-31T03:53:59Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nextrtc.examples.videochat_with_rest.repo.ConversationRepository.getByConversationName(rtcConversation.getId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (conversation == null) { org.nextrtc.examples.videochat_with_rest.domain.handler.ConversationCreatedHandler.log.info((\"Created conversation: \" + (repo.save(new org.nextrtc.examples.videochat_with_rest.domain.Conversation(rtcConversation.getId()))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5446/buggy-version/src.main.java.org.nextrtc.examples.videochat_with_rest.domain.handler.ConversationCreatedHandler.java", "BodyUseAPI": [], "Fixed commit": "d8d1eaa8a4279717fa4a92db18c58e2fa68273a5", "Url": "https://api.github.com/repos/mslosarz/nextrtc-videochat-with-rest", "Date": "2017-02-25T13:06:29Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isBroadcastButtonInitialized)) { setBroadcastButtonState(manager.isWifiApEnabled()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6497/buggy-version/app.src.main.java.com.lwm.app.ui.activity.LocalPlaybackActivity.java", "BodyUseAPI": [], "Fixed commit": "6d9aa84fe0925e97e215a85036242d5bb618c1fd", "Url": "https://api.github.com/repos/s0nerik/LWM", "Date": "2014-10-26T19:12:50Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((java.util.concurrent.TimeUnit.DAYS) == (ctx.scheduler().frequencyUnit())) { runsPerDay = ctx.scheduler().frequency(); }else { java.util.concurrent.TimeUnit freqUnit = ctx.scheduler().frequencyUnit(); long units = freqUnit.convert(((close.getTimeInMillis()) - (open.getTimeInMillis())), java.util.concurrent.TimeUnit.MILLISECONDS); runsPerDay = units / (ctx.scheduler().frequency()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2871/buggy-version/src.main.java.com.netflix.simianarmy.basic.chaos.BasicChaosMonkey.java", "BodyUseAPI": [], "Fixed commit": "8d16fd7e3ceb190ae9d7c04776b60a0b799ad98e", "Url": "https://api.github.com/repos/Netflix/SimianArmy", "Date": "2014-03-17T22:39:34Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_size) == (o._size)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2286/buggy-version/blur-core.src.main.java.org.apache.blur.manager.writer.SharedMergeScheduler.java", "BodyUseAPI": [], "Fixed commit": "8f402ed4ce6d0689325e536f3ba7d9a92c6a2195", "Url": "https://api.github.com/repos/apache/incubator-blur", "Date": "2014-11-05T12:37:16Z"},
{"Line": "=>509", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (buttonPressed) { clickPerson(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2773/buggy-version/src.familytree.Window.java", "BodyUseAPI": [], "Fixed commit": "3a62ed4f3b4479a926b872404f56dc2b3bad7a38", "Url": "https://api.github.com/repos/rameshv2795/Family_Tree", "Date": "2016-10-26T09:24:06Z"},
{"Line": "=>1079", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((listeOffres != null) && (!(listeOffres.isEmpty()))) { int nombreOffres = listeOffres.size(); for (int r = 0; r < nombreOffres; r++) { com.beans.RechercheListee a = new com.beans.RechercheListee(); a.setOffre(listeOffres.get(r)); listeAnnonces.add(a); } java.math.BigDecimal[] ArrayIDE = new java.math.BigDecimal[nombreOffres]; java.math.BigDecimal[] ArrayIDS = new java.math.BigDecimal[nombreOffres]; java.math.BigDecimal[] ArrayIDC = new java.math.BigDecimal[nombreOffres]; java.math.BigDecimal[] ArrayINM = new java.math.BigDecimal[nombreOffres]; for (int i = 0; i < nombreOffres; i++) { ArrayIDE[i] = listeOffres.get(i).getIdentreprise(); ArrayIDS[i] = listeOffres.get(i).getIdtypesecteur(); ArrayIDC[i] = listeOffres.get(i).getIdtypecontrat(); ArrayINM[i] = listeOffres.get(i).getIdniveauminimum(); } org.hibernate.Query queryIDE = sessions.createQuery(\"FROM TableEntreprises where IDENTREPRISE IN :ide \").setParameterList(\"ide\", ArrayIDE); if (!(queryIDE.list().isEmpty())) { for (int j = 0; j < (queryIDE.list().size()); j++) { com.beans.RechercheListee b = new com.beans.RechercheListee(); if (j < (listeAnnonces.size())) { b = listeAnnonces.get(j); hibernate.model.TableEntreprises te = ((hibernate.model.TableEntreprises) (queryIDE.list().get(j))); b.setEnterprise(te); listeAnnonces.set(j, b); } } } org.hibernate.Query queryIDS = sessions.createQuery(\"FROM TableSecteur where IDTYPESECTEUR IN :ids \").setParameterList(\"ids\", ArrayIDS); if (!(queryIDS.list().isEmpty())) { for (int l = 0; l < (queryIDS.list().size()); l++) { com.beans.RechercheListee b2 = new com.beans.RechercheListee(); if (l < (listeAnnonces.size())) { b2 = listeAnnonces.get(l); hibernate.model.TableSecteur ts = ((hibernate.model.TableSecteur) (queryIDS.list().get(l))); java.lang.String NomSecteur = ts.getNomsecteur(); b2.setNomSecteur(NomSecteur); listeAnnonces.set(l, b2); } } } org.hibernate.Query queryIDC = sessions.createQuery(\"FROM TableTypesContrat where Idtypecontrat IN :idc \").setParameterList(\"idc\", ArrayIDC); if (!(queryIDC.list().isEmpty())) { for (int m = 0; m < (queryIDC.list().size()); m++) { com.beans.RechercheListee b3 = new com.beans.RechercheListee(); if (m < (listeAnnonces.size())) { b3 = listeAnnonces.get(m); hibernate.model.TableTypesContrat ttc = ((hibernate.model.TableTypesContrat) (queryIDC.list().get(m))); java.lang.String NomTypeContrat = ttc.getNomtypecontrat(); b3.setNomTypeContrat(NomTypeContrat); listeAnnonces.set(m, b3); } } } org.hibernate.Query queryINM = sessions.createQuery(\"FROM TableClasse where IDCLASSE IN :inm \").setParameterList(\"inm\", ArrayINM); if (!(queryINM.list().isEmpty())) { for (int n = 0; n < (queryINM.list().size()); n++) { com.beans.RechercheListee b4 = new com.beans.RechercheListee(); if (n < (listeAnnonces.size())) { b4 = listeAnnonces.get(n); hibernate.model.TableClasse tcl = ((hibernate.model.TableClasse) (queryINM.list().get(n))); java.lang.String NomClasse = tcl.getNomclasse(); b4.setNomClasse(NomClasse); listeAnnonces.set(n, b4); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2080/buggy-version/JOBBACKUP.src.com.controllers.AnnoncesController.java", "BodyUseAPI": ["java.util.ArrayList<hibernate.model.TableOffres>.get(int)", "listeOffres.get(i).getIdtypecontrat()", "com.beans.RechercheListee.setOffre(listeOffres.get(r))", "listeOffres.get(i).getIdentreprise()", "java.util.ArrayList<hibernate.model.TableOffres>.get(int)", "java.util.ArrayList<hibernate.model.TableOffres>.get(int)", "listeOffres.get(i).getIdtypesecteur()", "listeOffres.get(i).getIdniveauminimum()", "java.util.ArrayList<hibernate.model.TableOffres>.size()", "java.util.ArrayList<hibernate.model.TableOffres>.get(int)", "java.util.ArrayList<hibernate.model.TableOffres>.get(int)"], "Fixed commit": "920ef9d21c34b4fc77877104dadfd8587d826b8a", "Url": "https://api.github.com/repos/cKevVlL6MM/MiniProject5", "Date": "2016-01-02T13:52:42Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (login == false) { java.lang.System.out.println(\"Benutername oder Passwort falsch\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1700/buggy-version/src.ch.monkeybanana.controller.MBController.java", "BodyUseAPI": [], "Fixed commit": "4437af4f8326973333a6a3fe43c2448732c3245d", "Url": "https://api.github.com/repos/zperee/MonkeyBanana", "Date": "2015-04-17T06:03:42Z"},
{"Line": "=>3170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((resourceCioList.size()) > 0) { resourceCassandraService.save(resourceCioList, resourceIds); if (!skipReindex) { if ((resourceIds.size()) > 0) { indexProcessor.indexStas(org.apache.commons.lang.StringUtils.join(resourceIds, ','), IndexProcessor.INDEX, org.ednovo.gooru.domain.service.resource.RESOURCE, true); } if ((collectionIds.size()) > 0) { indexProcessor.indexStas(org.apache.commons.lang.StringUtils.join(collectionIds, ','), IndexProcessor.INDEX, org.ednovo.gooru.domain.service.resource.SCOLLECTION, true); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5102/buggy-version/api.src.main.java.org.ednovo.gooru.domain.service.resource.ResourceServiceImpl.java", "BodyUseAPI": ["org.ednovo.gooru.domain.cassandra.service.ResourceCassandraService.save(java.util.Collection<org.ednovo.gooru.core.cassandra.model.ResourceCio>,java.util.Collection<java.lang.String>)"], "Fixed commit": "36f6e6b25b24ac1adcd30b14720a31ff675301e6", "Url": "https://api.github.com/repos/PurnimaGS/Gooru-Core-API", "Date": "2014-09-03T11:04:40Z"},
{"Line": "=>3150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((statisticsDTO.getResourceType()) != null) && (statisticsDTO.getResourceType().equalsIgnoreCase(\"scollection\"))) { collectionIds.add(resourceCio.getId()); }else { resourceIds.add(resourceCio.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5102/buggy-version/api.src.main.java.org.ednovo.gooru.domain.service.resource.ResourceServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "36f6e6b25b24ac1adcd30b14720a31ff675301e6", "Url": "https://api.github.com/repos/PurnimaGS/Gooru-Core-API", "Date": "2014-09-03T11:04:40Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (shouldBeEvaluated(rule)) { result.put(rule, rule.evaluate()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5196/buggy-version/easyrules-core.src.main.java.org.easyrules.core.DefaultRulesEngine.java", "BodyUseAPI": ["java.util.Map<org.easyrules.api.Rule, java.lang.Boolean>.put(org.easyrules.api.Rule,rule.evaluate())", "org.easyrules.api.Rule.evaluate()"], "Fixed commit": "06e974b6467745d6a5627d012147d0d0cf532c30", "Url": "https://api.github.com/repos/j-easy/easy-rules", "Date": "2016-08-18T10:04:59Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8710/buggy-version/NineMensMorris.src.myClasses.GameBoard.java", "BodyUseAPI": [], "Fixed commit": "57b636e5d47261ff9ffe3b0dfcd9571c3e1a6b36", "Url": "https://api.github.com/repos/theMaster23/CSE361ProjectSMC", "Date": "2013-03-12T23:52:16Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["todolist2.deepak.todo.MainActivity.getIntent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (intent.hasExtra(\"name\")) { name = intent.getExtras().getString(\"name\"); nameTv.setText(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/9100/buggy-version/app.src.main.java.todolist2.deepak.todo.MainActivity.java", "BodyUseAPI": ["android.content.Intent.getExtras()", "intent.getExtras().getString(java.lang.String)"], "Fixed commit": "b5ec907fade45d8ab9a906cd662e04b6dfdd2075", "Url": "https://api.github.com/repos/deepakvarshney35/ToDo", "Date": "2016-02-22T17:54:46Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rspspin.syntax.ElementLogicalPastWindow.getStepNode()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (stepNode.isVariable()) step = getVariable(stepNode.getName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8086/buggy-version/src.main.java.org.topbraid.spin.arq.ARQ2SPIN.java", "BodyUseAPI": ["org.topbraid.spin.arq.ARQ2SPIN.getVariable(stepNode.getName())", "org.apache.jena.graph.Node.getName()"], "Fixed commit": "fc7321f82cd91c570bd6338bb40a52558a2c5771", "Url": "https://api.github.com/repos/keski/rsp-spin", "Date": "2016-11-03T10:15:47Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdapter) != null) mAdapter.clearData();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1174/buggy-version/app.src.main.java.com.nunez.popularmovies.ShowMovies.MoviesFragment.java", "BodyUseAPI": [], "Fixed commit": "6da06521417e6f0cb4d2d2abc0b6bd9d9514c260", "Url": "https://api.github.com/repos/paulnunezm/MVP-Movies", "Date": "2016-03-11T06:07:37Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.registryKit.expenditureReporting.expenditureReportManager.getExpenditureReport(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (reportDetails != null) { if (reportDetails.isComplete()) { programs = programprofilemanager.getProgramsByEntity(programId, entityId); }else { programs = programprofilemanager.getActiveProgramsByEntity(programId, entityId); } }else { programs = programprofilemanager.getActiveProgramsByEntity(programId, entityId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7767/buggy-version/webapp.src.main.java.com.rr.wabshs.ui.expenditureReporting.expenditureReportingController.java", "BodyUseAPI": ["com.registryKit.expenditureReporting.expenditureReport.isComplete()"], "Fixed commit": "3e97f669099cd081747534be5eb1ffb5be009107", "Url": "https://api.github.com/repos/bowlinktech/wabshsRR", "Date": "2017-02-09T16:50:02Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((deviceContexts) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7252/buggy-version/framework.sics.org.gumtree.gumnix.sics.widgets.src.org.gumtree.gumnix.sics.widgets.swt.DeviceStatusWidget.java", "BodyUseAPI": [], "Fixed commit": "6629a7e9b9fe71bc4b7b208153d3b6eeb96f8a40", "Url": "https://api.github.com/repos/Gumtree/gumtree", "Date": "2014-05-25T22:59:49Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mDiningHall.getVenue()) != null) { java.util.List<com.pennapps.labs.pennmobile.classes.VenueInterval> days = mDiningHall.getVenue().allHours(); java.util.LinkedList<android.widget.TextView> vertical = new java.util.LinkedList<>(); for (com.pennapps.labs.pennmobile.classes.VenueInterval day : days) { vertical = addDiningHour(day, vertical); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3776/buggy-version/PennMobile.src.main.java.com.pennapps.labs.pennmobile.DiningInfoFragment.java", "BodyUseAPI": ["mDiningHall.getVenue().allHours()", "com.pennapps.labs.pennmobile.classes.DiningHall.getVenue()"], "Fixed commit": "97058b9317d3eed41f3e4e98a211544c6aaf6025", "Url": "https://api.github.com/repos/pennlabs/penn-mobile-android", "Date": "2016-11-19T19:47:57Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((choices.size()) == 1) { return choices.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4265/buggy-version/src.main.java.org.talend.geat.InputsUtils.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)"], "Fixed commit": "908bdb43472868a8daeca6b0c62a4b67849164dd", "Url": "https://api.github.com/repos/smallet/GEAT", "Date": "2014-05-28T10:50:38Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((actionMode) != null) { actionMode.finish(); actionMode = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4239/buggy-version/myapplication.src.main.java.com.example.myapplication.ui.fragment.manager.PackageManagerFragment.java", "BodyUseAPI": [], "Fixed commit": "3f83b4420a4f0f4ea46ed6304e77eb46f0b886f2", "Url": "https://api.github.com/repos/philadelphia/Android", "Date": "2017-08-16T08:21:22Z"},
{"Line": "=>509", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fixTilesIndex >= 0) type.setFixedTiles(fixedTiles);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2896/buggy-version/src.main.java.spim.fiji.plugin.Interest_Point_Registration.java", "BodyUseAPI": [], "Fixed commit": "fc89ef68601d7d56e38421a26dc943ed6bf6477b", "Url": "https://api.github.com/repos/fiji/SPIM_Registration", "Date": "2015-02-03T15:56:01Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["configPersistenceManager.getConfiguredServer().getProxyInfo()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((proxy == null) && (org.apache.commons.lang3.StringUtils.isNotBlank(proxyInfo.getHost()))) && ((proxyInfo.getPort()) != null)) { java.net.InetSocketAddress address = null; try { address = java.net.InetSocketAddress.createUnresolved(proxyInfo.getHost(), proxyInfo.getPort()); } catch (final java.lang.IllegalArgumentException e) { errors.addError(\"errorHubProxyPort\", (\"Not a valid Proxy Port. \" + (e.getMessage()))); } if (address != null) { proxy = new java.net.Proxy(java.net.Proxy.Type.HTTP, address); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2011/buggy-version/server.src.main.java.com.blackducksoftware.integration.hub.teamcity.server.global.HubGlobalServerConfigController.java", "BodyUseAPI": ["com.blackducksoftware.integration.hub.teamcity.common.beans.HubProxyInfo.getHost()", "com.blackducksoftware.integration.hub.teamcity.common.beans.HubProxyInfo.getPort()", "java.net.InetSocketAddress.createUnresolved(proxyInfo.getHost(),proxyInfo.getPort())"], "Fixed commit": "dacf866b9c4e24529e510c0a873249b19aff0538", "Url": "https://api.github.com/repos/blackducksoftware/hub-teamcity", "Date": "2016-05-20T19:07:01Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.entity.player.EntityPlayer.getCurrentEquippedItem()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (itemStack == null) { return true; }else { return ((itemStack.getItem()) != null) && ((itemStack.getItem()) instanceof net.minecraft.item.ItemBlock); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/133/buggy-version/carpentersblocks.block.BlockCoverable.java", "BodyUseAPI": ["net.minecraft.item.ItemStack.getItem()", "net.minecraft.item.ItemStack.getItem()"], "Fixed commit": "00dc7a6551fa1cf434e61acd164a4f6fbfe69c8f", "Url": "https://api.github.com/repos/Mineshopper/carpentersblocks", "Date": "2014-03-20T05:57:28Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sugarj.common.cleardep.PersistableEntity.read(java.lang.Class<E>,org.sugarj.common.cleardep.Stamper,org.sugarj.common.path.Path)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (e != null) return e;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/977/buggy-version/src.org.sugarj.common.cleardep.PersistableEntity.java", "BodyUseAPI": [], "Fixed commit": "4e3e2f34ac3259cdc2b8d862ed681e5aac0ee53e", "Url": "https://api.github.com/repos/sugar-lang/common", "Date": "2015-01-12T10:29:58Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((java.lang.String.class) == expectedClass) && (value instanceof java.lang.Integer)) { value = java.lang.String.valueOf(value); }else if (((java.lang.Integer.class) == expectedClass) && (value instanceof java.lang.String)) { value = java.lang.Integer.valueOf(((java.lang.String) (value))); }else if ((expectedClass.isArray()) && (valueClass.isArray())) { int size = java.lang.reflect.Array.getLength(value); java.lang.Object newValue = java.lang.reflect.Array.newInstance(expectedClass.getComponentType(), size); for (int i = 0; i < size; ++i) { java.lang.reflect.Array.set(newValue, i, java.lang.reflect.Array.get(value, i)); } value = newValue; }else if ((!(expectedClass.isArray())) && (valueClass.isArray())) { if ((java.lang.reflect.Array.getLength(value)) == 1) { value = org.openl.extension.xmlrules.utils.ReadInFunction.convertArgument(expectedClass, java.lang.reflect.Array.get(value, 0)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2978/buggy-version/STUDIO.org.openl.extension.xmlrules.src.org.openl.extension.xmlrules.utils.ReadInFunction.java", "BodyUseAPI": ["java.lang.Class<?>.getComponentType()", "java.lang.Class<?>.isArray()", "java.lang.Class<?>.isArray()", "org.openl.extension.xmlrules.utils.ReadInFunction.convertArgument(java.lang.Class<?>,java.lang.Object)", "java.lang.reflect.Array.newInstance(java.lang.Class<?>,int)", "java.lang.String.valueOf(java.lang.Object)"], "Fixed commit": "dcc09cfaac7166840c0987f729a721a8722d8e66", "Url": "https://api.github.com/repos/openl-tablets/openl-tablets", "Date": "2016-02-25T07:15:53Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["et_dice.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (faces.equals(\"\")) { faces = \"6\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7356/buggy-version/app.src.main.java.com.nicue.onetwo.fragments.DiceFragment.java", "BodyUseAPI": [], "Fixed commit": "50ff6118a0540c50a8b962f1b904829f7257e95f", "Url": "https://api.github.com/repos/ndleyton/OneTwo", "Date": "2017-05-16T18:15:12Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (su != null) { boolean spam = checkInternal(su); if (!spam) { return shortURLRepository.save(su); }else { return null; } }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2252/buggy-version/candy-pink.src.main.java.urlshortener2015.candypink.web.UrlShortenerController.java", "BodyUseAPI": ["urlshortener2015.candypink.repository.ShortURLRepository.save(urlshortener2015.candypink.domain.ShortURL)", "urlshortener2015.candypink.web.UrlShortenerController.checkInternal(urlshortener2015.candypink.domain.ShortURL)"], "Fixed commit": "5820962f143fe2afd229cf28d18fbe9c0d913f72", "Url": "https://api.github.com/repos/Gascon95/UrlShortener2015", "Date": "2015-12-07T10:49:56Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dateRange != \"\") { addFilterQuery(solrSearchBuilder, \"catalogAddedDate\", \"study_catalogAddedDate\", dateRange); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6285/buggy-version/goci-interfaces.goci-ui.src.main.java.uk.ac.ebi.spot.goci.ui.controller.SolrSearchController.java", "BodyUseAPI": ["uk.ac.ebi.spot.goci.ui.controller.SolrSearchController.addFilterQuery(java.lang.StringBuilder,java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "3e2b1067271463c106deb1d8a34e642bc24d3e3e", "Url": "https://api.github.com/repos/EBISPOT/goci", "Date": "2015-03-19T12:54:44Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (nodeDrive != null) { nodeDrive = nodeDrive.clone(); nodeDrive.getParameters().put(ManageDriveServiceImpl.DRIVE_PARAMATER_USER_ID, (((((((splitedPath[2]) + \"/\") + (splitedPath[3])) + \"/\") + (splitedPath[4])) + \"/\") + (splitedPath[5]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5373/buggy-version/core.services.src.main.java.org.exoplatform.services.cms.documents.impl.DocumentServiceImpl.java", "BodyUseAPI": ["org.exoplatform.services.cms.drives.DriveData.clone()"], "Fixed commit": "2d4aab51cafd5d58a2cc3e1e704622b45507e9a1", "Url": "https://api.github.com/repos/exodev/ecms", "Date": "2017-05-30T15:57:23Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["drexel.edu.blackjack.server.ResponseCode.getCodeFromString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (code == null) { drexel.edu.blackjack.client.in.ClientInputFromServerThread.LOGGER.severe(\"Expected to receive a new response code but instead received something else, so ignoring.\"); drexel.edu.blackjack.client.in.ClientInputFromServerThread.LOGGER.severe((\"Received: \" + inputLine)); }else if (code.isMultilineCode()) { multilineMessage = new java.lang.StringBuilder(inputLine); processingMultilineMessage = true; }else { deliverMessage(code); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8936/buggy-version/blackjack.src.drexel.edu.blackjack.client.in.ClientInputFromServerThread.java", "BodyUseAPI": ["drexel.edu.blackjack.server.ResponseCode.isMultilineCode()", "drexel.edu.blackjack.client.in.ClientInputFromServerThread.deliverMessage(drexel.edu.blackjack.server.ResponseCode)"], "Fixed commit": "57febf662ef404f9e363052e33f67d20ddecc122", "Url": "https://api.github.com/repos/rabidstoat/blackjack", "Date": "2013-05-19T18:14:46Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (number == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8936/buggy-version/blackjack.src.drexel.edu.blackjack.server.ResponseCode.java", "BodyUseAPI": [], "Fixed commit": "57febf662ef404f9e363052e33f67d20ddecc122", "Url": "https://api.github.com/repos/rabidstoat/blackjack", "Date": "2013-05-19T18:14:46Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getRaceCodePreference().equals(MeetingConstants.RACE_CODE_ID_NONE)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5255/buggy-version/app.src.main.java.com.mcssoft.racemeeting.fragment.EditFragment.java", "BodyUseAPI": [], "Fixed commit": "9dee99fffa06c288d4cb0658cec885a4442a6826", "Url": "https://api.github.com/repos/mattcs2401/RaceMeeting", "Date": "2017-01-02T21:46:45Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((s.sel) == (org.jackhuang.hellominecraft.util.ui.Selector.FAILED_TO_SELECT)) throw new org.jackhuang.hellominecraft.launcher.core.auth.AuthenticationException(\"No selection\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6706/buggy-version/HMCL.src.main.java.org.jackhuang.hellominecraft.launcher.core.auth.YggdrasilAuthenticator.java", "BodyUseAPI": [], "Fixed commit": "ed876fa607350638a38085ee63b2849bcf72d374", "Url": "https://api.github.com/repos/huanghongxun/HMCL", "Date": "2016-02-04T02:04:43Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pointsGained == 0) || (((int) (progressData.get(0))) > pointsGained)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3111/buggy-version/src.main.java.ch.bfh.bti7081.s2015.red.PatientApp.View.LifeUpProgressView.java", "BodyUseAPI": [], "Fixed commit": "049c9aacdb695faa33d6a9a1748f72fd436a9c38", "Url": "https://api.github.com/repos/shylux/ch.bfh.bti7081.s2015.rot", "Date": "2015-06-07T17:14:56Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event.isShiftClick()) p.setItemOnCursor(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5042/buggy-version/NoItem.src.net.worldoftomorrow.nala.ni.listeners.InventoryListener.java", "BodyUseAPI": [], "Fixed commit": "840fdc93ef9012a817963322400f165a2784d6c5", "Url": "https://api.github.com/repos/nala3/NoItem", "Date": "2012-09-08T18:29:13Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (version)) { version = project.getVersion(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/554/buggy-version/src.main.java.com.brewinapps.ios.IOSBuildMojo.java", "BodyUseAPI": [], "Fixed commit": "31face5781808797a393cfcd37265b378a1cf5a8", "Url": "https://api.github.com/repos/lixar/ios-maven-plugin", "Date": "2013-02-03T03:35:03Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (givenFood >= (this.foodStock)) { givenFood = this.foodStock; }else { if (givenFood <= 0) { givenFood = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3885/buggy-version/Kingdom.java", "BodyUseAPI": [], "Fixed commit": "d7669a254cd373f6098297c0c836855a23bbf92c", "Url": "https://api.github.com/repos/arte-fact/empire-java", "Date": "2017-11-21T13:54:40Z"},
{"Line": "=>944", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedDeviceId) >= 0) { if (de.dmarcini.submatix.android4.full.ApplicationDEBUG.DEBUG) android.util.Log.w(de.dmarcini.submatix.android4.full.gui.SPX42ExportLogFragment.TAG, ((\"DELETE ALL Data for device: <\" + (selectedDeviceAlias)) + \"...\")); logManager.deleteAllDataForDevice(selectedDeviceId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/688/buggy-version/src.de.dmarcini.submatix.android4.full.gui.SPX42ExportLogFragment.java", "BodyUseAPI": [], "Fixed commit": "05ee2d5b53caab0cbad1cd49f6563ab00cf6b25c", "Url": "https://api.github.com/repos/dmarc0001/submatixBTAndroid4", "Date": "2014-12-09T10:46:38Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gameKiller.isPlaying()) { objective.getScore(playerString).setScore(((objective.getScore(playerString).getScore()) + scorePerKill)); }else { objective.getScore(deadPlayerString).setScore(((objective.getScore(deadPlayerString).getScore()) + scorePerKill)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8986/buggy-version/src.main.java.vc.pvp.skywars.game.Game.java", "BodyUseAPI": [], "Fixed commit": "7a01e9a4003464f4cf17c0a1c282d07e99b71e5b", "Url": "https://api.github.com/repos/roastnewt/SkyWars", "Date": "2014-08-11T02:05:38Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((deadPlayerString.length()) > 16) deadPlayerString = deadPlayerString.substring(0, 15);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8986/buggy-version/src.main.java.vc.pvp.skywars.game.Game.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "7a01e9a4003464f4cf17c0a1c282d07e99b71e5b", "Url": "https://api.github.com/repos/roastnewt/SkyWars", "Date": "2014-08-11T02:05:38Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.antlr.v4.runtime.tree.ParseTree.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (net.xprova.propertylanguage.PropertyBuilder.isInteger(id)) { return net.xprova.propertylanguage.Property.build(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6178/buggy-version/src.main.java.net.xprova.propertylanguage.PropertyBuilder.java", "BodyUseAPI": ["net.xprova.propertylanguage.Property.build(java.lang.String)"], "Fixed commit": "a6a0ceea2e47af07d965d2ffa627fe5f553e2ac7", "Url": "https://api.github.com/repos/xprova/xprova", "Date": "2016-12-27T02:51:15Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.block.Block.getRelative(org.bukkit.block.BlockFace)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((org.bukkit.Material.LAVA) == (otherBlock.getType())) || ((org.bukkit.Material.WATER) == (otherBlock.getType()))) { otherBlock.setType(Material.COBBLESTONE); otherBlock.getWorld().playEffect(otherBlock.getLocation(), Effect.EXTINGUISH, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8957/buggy-version/src.com.untamedears.citadel.listener.BlockListener.java", "BodyUseAPI": ["otherBlock.getWorld().playEffect(otherBlock.getLocation(),Effect.EXTINGUISH,int)", "org.bukkit.block.Block.setType(Material.COBBLESTONE)", "org.bukkit.block.Block.getWorld()", "org.bukkit.block.Block.getLocation()"], "Fixed commit": "5ef1c513079485e59c632b5ff1733533c370667c", "Url": "https://api.github.com/repos/intangir/Citadel", "Date": "2013-01-03T03:14:18Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (vertex1.equals(vertex2)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6371/buggy-version/app.src.main.java.com.neddevteam.nedcore.math.Graph.java", "BodyUseAPI": [], "Fixed commit": "d3f31968198a7fa608bd926317cf09f6ad539c1d", "Url": "https://api.github.com/repos/NedTeam/NedCore", "Date": "2015-02-21T14:34:30Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(e.getType().equals(\"avatar\"))) save += (getStoreFormat(e)) + \"\\n\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/174/buggy-version/FBG2.0.src.model.util.ObjectSaver.java", "BodyUseAPI": ["model.util.ObjectSaver.getStoreFormat(model.entity.Entity)"], "Fixed commit": "dce8b7fec58966e0a789c9ff3435ed0202279c50", "Url": "https://api.github.com/repos/TeamFinalBoss/GameIteration2", "Date": "2015-03-23T01:05:56Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) instanceof com.diamondsoftware.android.sunriver_av_3_0.AbstractActivityForListViewsScrollingImage) { childOnItemClick(parent, view, (position - 1), id); }else { childOnItemClick(parent, view, position, id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1053/buggy-version/src.com.diamondsoftware.android.sunriver_av_3_0.AbstractActivityForListViews.java", "BodyUseAPI": [], "Fixed commit": "41119ea83dcff0da0836cc9cb2c26a1f38e81cf2", "Url": "https://api.github.com/repos/samuelsmichael/Sunriver", "Date": "2014-07-18T10:29:06Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((server) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2767/buggy-version/web.src.main.java.com.graphhopper.http.GHServer.java", "BodyUseAPI": [], "Fixed commit": "b8ad582502a6483f53aa548c34592d3d516f0b9e", "Url": "https://api.github.com/repos/b3nn0/graphhopper", "Date": "2014-07-18T11:51:48Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (app.DatabaseSettings.getInstance().isFilePathSet()) core.security.SecurityTool.encryptAndWriteFile(original, backUp);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2226/buggy-version/src.core.database.DatabaseTool.java", "BodyUseAPI": [], "Fixed commit": "47635042872cb8ab2ccae95e22036dbfe276e7fb", "Url": "https://api.github.com/repos/jdbaltazar/Pilmico", "Date": "2013-08-14T13:09:05Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lhs.relevantDate) == (rhs.relevantDate)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2396/buggy-version/src.main.java.org.ligi.passandroid.model.PassStore.java", "BodyUseAPI": [], "Fixed commit": "2c5c05376994bc4bb77d97b731504561a757257f", "Url": "https://api.github.com/repos/ligi/PassAndroid", "Date": "2013-12-18T23:07:58Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lhs.type) == (rhs.type)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2396/buggy-version/src.main.java.org.ligi.passandroid.model.PassStore.java", "BodyUseAPI": [], "Fixed commit": "2c5c05376994bc4bb77d97b731504561a757257f", "Url": "https://api.github.com/repos/ligi/PassAndroid", "Date": "2013-12-18T23:07:58Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < 26) context.startService(serviceIntent); else context.startForegroundService(serviceIntent);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8878/buggy-version/app.src.main.java.com.prismaqf.callblocker.TelephonyStateReceiver.java", "BodyUseAPI": [], "Fixed commit": "235fd00ca34ac2e620265ba899f7b92c7953e73a", "Url": "https://api.github.com/repos/ConteDiMonteCristo/PrismaCallBlocker", "Date": "2017-10-14T21:27:05Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < 26) context.startService(serviceIntent); else context.startForegroundService(serviceIntent);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8878/buggy-version/app.src.main.java.com.prismaqf.callblocker.RebootReceiver.java", "BodyUseAPI": [], "Fixed commit": "235fd00ca34ac2e620265ba899f7b92c7953e73a", "Url": "https://api.github.com/repos/ConteDiMonteCristo/PrismaCallBlocker", "Date": "2017-10-14T21:27:05Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jtrfp.trcl.obj.WorldObject.getPosition()", "org.jtrfp.trcl.obj.TunnelEntranceObject.TunnelEntranceBehavior.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((pPos[1]) > ((p.getPosition()[1]) + (CollisionManager.SHIP_COLLISION_DISTANCE))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3143/buggy-version/src.main.java.org.jtrfp.trcl.obj.TunnelEntranceObject.java", "BodyUseAPI": [], "Fixed commit": "d7945c57404bb09d23028ae2ac39585f466be237", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2014-02-09T04:36:48Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.e) - (this.f)) > 20) { this.a(this.o, this.p, this.q, this.b.y, this.b.z, this.b.am, this.b.o.getCanaryWorld().getName(), TeleportHook.TeleportCause.MOVEMENT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/9119/buggy-version/src.main.java.net.minecraft.network.NetHandlerPlayServer.java", "BodyUseAPI": [], "Fixed commit": "81c97e3f56ffbd8c71d17224b60169cd14179466", "Url": "https://api.github.com/repos/CanaryModTeam/CanaryMod", "Date": "2014-10-06T17:43:14Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mailEvents.size()) == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1385/buggy-version/model.FigureGenerator.java", "BodyUseAPI": [], "Fixed commit": "98929af877951dc27d579ab00ab687bcd004ae36", "Url": "https://api.github.com/repos/xuanshenbo/KPSmart-System", "Date": "2016-06-13T13:35:56Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs(angle)) < 10) { angle = 0; }else if (angle > 100) { angle = 100; }else if (angle < (-100)) { angle = -100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1076/buggy-version/src.com.trik.gamepad.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d14ed6721ac2162376a83ee7f9ce3aafa085615b", "Url": "https://api.github.com/repos/iakov/trik-gamepad", "Date": "2013-09-28T20:18:02Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.tuberlin.de.common.model.interfaces.JobGraph.getComponent(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(child instanceof org.tuberlin.de.common.model.interfaces.datasink.DataSink)) { result += child.getComponentKey(); result += \" = \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/797/buggy-version/src.main.java.org.tuberlin.de.common.codegenerator.CodeGenerator.java", "BodyUseAPI": ["org.tuberlin.de.common.model.interfaces.JobComponent.getComponentKey()"], "Fixed commit": "1f587ad742330e8628182b74cb1b972565cc6439", "Url": "https://api.github.com/repos/citmp2015/flink-visual-programming", "Date": "2016-01-20T13:06:47Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((column) == 0) || ((row) == 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1569/buggy-version/library.src.main.java.co.ceryle.fitgridview.FitGridView.java", "BodyUseAPI": [], "Fixed commit": "c9bf38034bafd8f73dcfad6e6b1a02e1f9b6ccc5", "Url": "https://api.github.com/repos/ceryle/FitGridView", "Date": "2017-04-04T15:04:37Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((g.getEdgeCount()) > 0) && ((g.getVertexCount()) > 0)) { annis.gui.visualizers.iframe.tree.ConstituentLayouter<annis.gui.visualizers.iframe.tree.backends.staticimg.AbstractImageGraphicsItem> cl = new annis.gui.visualizers.iframe.tree.ConstituentLayouter<annis.gui.visualizers.iframe.tree.backends.staticimg.AbstractImageGraphicsItem>(g, backend, labeler, styler, input); annis.gui.visualizers.iframe.tree.backends.staticimg.AbstractImageGraphicsItem item = cl.createLayout(new annis.gui.visualizers.iframe.tree.LayoutOptions(VerticalOrientation.TOP_ROOT, annis.gui.visualizers.iframe.tree.AnnisGraphTools.detectLayoutDirection(result.getGraph()))); java.awt.geom.Rectangle2D treeSize = item.getBounds(); maxheight = java.lang.Math.max(maxheight, treeSize.getHeight()); width += treeSize.getWidth(); layouts.add(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7165/buggy-version/annis-gui.src.main.java.annis.gui.visualizers.iframe.tree.TigerTreeVisualizer.java", "BodyUseAPI": [], "Fixed commit": "076b9214aa1335fbde0ffc22a0b9cc9ed2fe751e", "Url": "https://api.github.com/repos/korpling/ANNIS", "Date": "2012-11-02T11:34:58Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dir == (net.minecraftforge.common.ForgeDirection.UP)) { position.moveForwards(0.75); }else if ((dir == (net.minecraftforge.common.ForgeDirection.NORTH)) || (dir == (net.minecraftforge.common.ForgeDirection.WEST))) { position.moveForwards(0.501); }else { position.moveForwards(0.5); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4531/buggy-version/common.logisticspipes.routing.RoutedEntityItem.java", "BodyUseAPI": [], "Fixed commit": "4077120c7b14dfb159ca7da875e2c9e7492584b1", "Url": "https://api.github.com/repos/AartBluestoke/LogisticsPipes", "Date": "2013-03-03T11:40:02Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((view) != null) { view.clearSatellites(); view.invalidateSatilletes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2722/buggy-version/app.src.main.java.com.kivsw.forjoggers.ui.gps_status.GpsStatusPresenter.java", "BodyUseAPI": [], "Fixed commit": "1a0e84e3a69c35a7eee072e259c84198697d83a9", "Url": "https://api.github.com/repos/IvanKovalchuk/forJoggers", "Date": "2016-06-13T12:04:02Z"},
{"Line": "=>1724", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getQueryString()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (queryString == null) { java.util.Enumeration<?> params = request.getParameterNames(); if (params != null) { while (params.hasMoreElements()) { java.lang.String paramName = ((java.lang.String) (params.nextElement())); if (paramName.equalsIgnoreCase(\"Signature\")) continue; if (queryString == null) queryString = (paramName + \"=\") + (request.getParameter(paramName)); else queryString = (((queryString + \"&\") + paramName) + \"=\") + (java.net.URLEncoder.encode(request.getParameter(paramName), \"UTF-8\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/9142/buggy-version/awsapi.src.com.cloud.bridge.service.EC2RestServlet.java", "BodyUseAPI": [], "Fixed commit": "cb403b1c97bcf224cc8684257777eb9e4485c84a", "Url": "https://api.github.com/repos/wido/CloudStack", "Date": "2012-06-20T19:50:15Z"},
{"Line": "=>530", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stringNetwork.haveResolvedNames()) { importButton.setEnabled(true); }else importButton.setEnabled(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6539/buggy-version/src.main.java.edu.ucsf.rbvi.stringApp.internal.ui.GetTermsPanel.java", "BodyUseAPI": [], "Fixed commit": "6175fa3ae24ab65a7ea23456e2b22644c2781ff7", "Url": "https://api.github.com/repos/RBVI/stringApp", "Date": "2016-06-01T07:50:28Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getSpecies().equals(\"Homo sapiens\")) return \"http://www.genecards.org/cgi-bin/carddisp.pl?gene=\" + uniprot;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6539/buggy-version/src.main.java.edu.ucsf.rbvi.stringApp.internal.model.StringNode.java", "BodyUseAPI": [], "Fixed commit": "6175fa3ae24ab65a7ea23456e2b22644c2781ff7", "Url": "https://api.github.com/repos/RBVI/stringApp", "Date": "2016-06-01T07:50:28Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((sNode.getGeneCardURL()) != null) { message += \"<tr><td>GeneCard: </td>\"; message += (((\"<td><a href=\\\"\" + (sNode.getGeneCardURL())) + \"\\\">\") + (sNode.getUniprot())) + \"</a></td></tr>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6539/buggy-version/src.main.java.edu.ucsf.rbvi.stringApp.internal.ui.StringPanel.java", "BodyUseAPI": [], "Fixed commit": "6175fa3ae24ab65a7ea23456e2b22644c2781ff7", "Url": "https://api.github.com/repos/RBVI/stringApp", "Date": "2016-06-01T07:50:28Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.joda.time.Days.daysBetween(invoiceDTO1.getDueDate(),org.joda.time.DateTime)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((days.getDays()) == 0) { invoiceDTO1.setStatus(\"Due Today\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5606/buggy-version/account.src.com.wtmit.account.daoImpl.InvoiceDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "c6f6e330bfefb10cab86022f09dca284d8627eec", "Url": "https://api.github.com/repos/wtmit/accountTest", "Date": "2017-07-24T08:34:51Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((name) != null) { java.lang.System.out.println(((name) + \" disconnected.\")); ChatServer.userNames.remove(name); ChatServer.names.remove(serverSideName); ChatServer.writers.remove(out); ChatServer.messageAll((\"DISCONNECT\" + (name))); (ChatServer.usersConnected)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4570/buggy-version/ChatServer.java", "BodyUseAPI": ["ChatServer.messageAll(java.lang.String)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "c081c3f11bba57ed853b2dd15297c41897e28467", "Url": "https://api.github.com/repos/Javaliant/ChatApp", "Date": "2015-08-30T00:53:17Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((holder.map_view) != null) { holder.map_view.onDestroy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7461/buggy-version/app.src.main.java.me.calebjones.spacelaunchnow.content.adapter.LaunchBigAdapter.java", "BodyUseAPI": ["com.google.android.gms.maps.MapView.onDestroy()"], "Fixed commit": "429a6a7b76b0bf3d743ae6fcb5bd2bf1f35f1e92", "Url": "https://api.github.com/repos/ItsCalebJones/SpaceLaunchNow-Android", "Date": "2016-03-11T01:12:36Z"},
{"Line": "=>553", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scheduleList) == null) { scheduleList = new java.util.ArrayList<com.smict.schedule.model.ScheduleModel>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1589/buggy-version/src.main.java.com.smict.appointment.action.AppointmentAction.java", "BodyUseAPI": [], "Fixed commit": "72d1dec462ac1d2002fd5385bd9f0a563f44f755", "Url": "https://api.github.com/repos/smartictcoop/SmartDental", "Date": "2017-09-06T12:18:28Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (overwrite) { try { saveTo(f); mLastSave = f; } catch (java.io.IOException e) { e.printStackTrace(); com.erhannis.unstableart.FullscreenActivity.showToast(this, (\"Error saving\\n\" + (e.getMessage()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7491/buggy-version/app.src.main.java.com.erhannis.unstableart.FullscreenActivity.java", "BodyUseAPI": [], "Fixed commit": "518f60d3f5616fcdca2cfd4d54e042c31487048c", "Url": "https://api.github.com/repos/Erhannis/UnstableArt", "Date": "2017-04-25T06:24:48Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTiff()) { try { org.geotools.gce.geotiff.GeoTiffReader store = new org.geotools.gce.geotiff.GeoTiffReader(getFile(), new org.geotools.factory.Hints(org.geotools.factory.Hints.USE_JAI_IMAGEREAD, true)); return store.getCoordinateReferenceSystem(); } catch (org.geotools.data.DataSourceException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/969/buggy-version/msi.gama.core.src.msi.gama.util.file.GamaGridFile.java", "BodyUseAPI": [], "Fixed commit": "47e6d7ba161ec1397ac14242e3cd332cc6e9840b", "Url": "https://api.github.com/repos/gama-platform/gama", "Date": "2016-06-20T13:13:04Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (copyName == null) { copyName = name + ((sortedSourceObjectList.size()) > 1 ? \"-\" + (++sourceCounter) : \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7867/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.fullcopy.VPlexBlockFullCopyApiImpl.java", "BodyUseAPI": [], "Fixed commit": "fe0f0d1493a8e66f934610eadff6b5748e5b30f6", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-03-30T14:58:59Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(spec instanceof com.rockwellcollins.atc.agree.agree.LiftStatement)) { doSwitch(spec); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5004/buggy-version/fm-workbench.agree.com.rockwellcollins.atc.agree.analysis.src.com.rockwellcollins.atc.agree.analysis.AgreeEmitterState.java", "BodyUseAPI": ["com.rockwellcollins.atc.agree.analysis.AgreeEmitterState.doSwitch(com.rockwellcollins.atc.agree.agree.SpecStatement)"], "Fixed commit": "690d0492e23f4bfae7b3ccf7d928d4ee86d96cc2", "Url": "https://api.github.com/repos/smaccm/smaccm", "Date": "2014-12-04T19:29:38Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((party.getAlly()) != null) { party.getAlly().setAlly(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8173/buggy-version/src.main.java.com.gmail.nossr50.party.PartyManager.java", "BodyUseAPI": ["party.getAlly().setAlly(<nulltype>)", "com.gmail.nossr50.datatypes.party.Party.getAlly()"], "Fixed commit": "833bc1b25101e20c3a5a49bd6ff7a62929e242df", "Url": "https://api.github.com/repos/t00thpick1/mcMMO", "Date": "2014-02-28T21:41:47Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.google.appinventor.common.version.AppInventorFeatures.allowMultiScreenApplications()) { if (((getCurrentProject()) == null) || ((getCurrentProject().currentScreen) == \"Screen1\")) { setButtonEnabled(com.google.appinventor.client.DesignToolbar.WIDGET_NAME_REMOVEFORM, false); }else { setButtonEnabled(com.google.appinventor.client.DesignToolbar.WIDGET_NAME_REMOVEFORM, true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1061/buggy-version/appinventor.appengine.src.com.google.appinventor.client.DesignToolbar.java", "BodyUseAPI": [], "Fixed commit": "4b47c6ff0d81265ce9bfaf9c478f1cc2e98e203c", "Url": "https://api.github.com/repos/lizlooney/appinventor-sources", "Date": "2015-09-24T23:51:56Z"},
{"Line": "=>582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id.lastIndexOf(\".\")) == (-1)) { id = id + \".czi\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8891/buggy-version/components.formats-gpl.src.loci.formats.in.ZeissCZIReader.java", "BodyUseAPI": [], "Fixed commit": "f82f5794a4b09088f5ab9abfb406a27f2cf3bf9e", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2017-08-06T00:01:07Z"},
{"Line": "=>703", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((comparison.getDiagnostic()) == null) { comparison.setDiagnostic(new org.eclipse.emf.common.util.BasicDiagnostic()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4376/buggy-version/plugins.org.eclipse.emf.compare.ide.ui.src.org.eclipse.emf.compare.ide.ui.internal.structuremergeviewer.EMFCompareStructureMergeViewer.java", "BodyUseAPI": ["org.eclipse.emf.compare.Comparison.setDiagnostic(org.eclipse.emf.common.util.BasicDiagnostic)"], "Fixed commit": "bc69d744be0e8e99c0e707fc6fc80c25399cfafa", "Url": "https://api.github.com/repos/Arccore/synligare", "Date": "2015-03-30T12:36:47Z"},
{"Line": "=>873", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.emf.ecore.util.EcoreUtil.getAdapter(comparison.eAdapters(),java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (compareInput == null) { compareInput = new org.eclipse.emf.compare.ide.ui.internal.structuremergeviewer.provider.TreeNodeCompareInput(new org.eclipse.emf.compare.ide.ui.internal.structuremergeviewer.provider.TreeCompareInputAdapterFactory()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4376/buggy-version/plugins.org.eclipse.emf.compare.ide.ui.src.org.eclipse.emf.compare.ide.ui.internal.structuremergeviewer.EMFCompareStructureMergeViewer.java", "BodyUseAPI": [], "Fixed commit": "bc69d744be0e8e99c0e707fc6fc80c25399cfafa", "Url": "https://api.github.com/repos/Arccore/synligare", "Date": "2015-03-30T12:36:47Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(matchingPlayers.contains(player))) matchingPlayers.add(player);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8472/buggy-version/CodeGenerator.src.codeGenerator.RosterSQLGenerator.java", "BodyUseAPI": ["java.util.ArrayList<nba.Player>.add(nba.Player)"], "Fixed commit": "dd264a2a324b680e1adb68d9ada1c3a5243ca339", "Url": "https://api.github.com/repos/Respectable/PBPCompilerV2", "Date": "2013-08-26T02:32:03Z"},
{"Line": "=>866", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (description.equals(\"\")) { throw new parser.InvalidParametersException(input); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5899/buggy-version/GetStuffDone.src.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "f890d6bbeef6457203141403c1ebb182cf19c7d4", "Url": "https://api.github.com/repos/cs2103aug2015-w11-1j/main", "Date": "2015-10-31T15:29:34Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["smartrics.rest.client.RestClientImpl.getMethodClassnameFromMethodName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (className.endsWith(\"TraceMethod\")) { return clazz.getConstructor(java.lang.String.class).newInstance(\"http://dummy.com\"); }else { return clazz.newInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7115/buggy-version/src.main.java.smartrics.rest.client.RestClientImpl.java", "BodyUseAPI": [], "Fixed commit": "abdd415e4783a72663cb5c87e5a9df1a19edee69", "Url": "https://api.github.com/repos/smartrics/RestClient", "Date": "2012-12-06T11:24:46Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (selectors == null) { this.selectors = null; }else { this.selectors = java.util.Arrays.copyOf(selectors, selectors.length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8714/buggy-version/bundle.src.main.java.com.adobe.acs.commons.synth.impl.SynthesizedSlingHttpServletRequest.java", "BodyUseAPI": ["java.util.Arrays.copyOf(java.lang.String[],int)"], "Fixed commit": "10cf7d29229266a1351d367b624352accfef0632", "Url": "https://api.github.com/repos/joerghoh/acs-aem-commons", "Date": "2016-01-27T14:59:24Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shutdownableIndex.size()) == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3833/buggy-version/artemis-threads.src.main.java.com.spinn3r.artemis.threads.Shutdownables.java", "BodyUseAPI": [], "Fixed commit": "7b51d315ac165fb3a97631e35b0f5ef07a5f6d99", "Url": "https://api.github.com/repos/spinn3r/artemis-framework", "Date": "2016-06-08T02:13:44Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (conditionScope == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1108/buggy-version/microbat.src.main.microbat.model.trace.Trace.java", "BodyUseAPI": [], "Fixed commit": "d44d3d64c749870fc61735a48fcd7168c58b0b59", "Url": "https://api.github.com/repos/llmhyy/microbat", "Date": "2017-08-18T12:34:32Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (valToken == \"NA\") value = durbin.weka.Instance.missingValue(); else value = java.lang.Double.parseDouble(tokens[(colIdx + 1)]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/166/buggy-version/src.durbin.weka.TableFileLoader.java", "BodyUseAPI": [], "Fixed commit": "dbcabc144c829dd227bddd15501b08f17afe5420", "Url": "https://api.github.com/repos/jdurbin/grapnel", "Date": "2011-07-08T21:25:04Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(obj instanceof net.masterthought.dlanguage.parser.Token.IdType)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5183/buggy-version/src.main.java.net.masterthought.dlanguage.parser.Token.java", "BodyUseAPI": [], "Fixed commit": "78028e635a5104b1e0455d996cde31c73500e5ea", "Url": "https://api.github.com/repos/pirocks/DLanguage", "Date": "2017-07-09T21:32:05Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) == 0) { java.lang.System.out.println(\"No arguments, assuming default values.\"); }else { java.lang.System.out.println(\"Malformed arguments, assuming default values.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5098/buggy-version/src.updater.Updater.java", "BodyUseAPI": [], "Fixed commit": "3d0b02ac482ee5f1953e6832c0f249cc1f3ce0e4", "Url": "https://api.github.com/repos/wave100/Updater", "Date": "2015-02-03T04:20:18Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pattern.substring(startIndex, (startIndex + 1)).matches(\"\\\\\\\\\")) { return new Model.Regex.Single(parent, Type.INCOMPLETE, new Model.Segment(pattern, startIndex, (startIndex + 1))); }else { regexMatch(Type.SIMPLE, pattern.substring(startIndex)); return new Model.Regex.Single(parent, Type.SIMPLE, new Model.Segment(pattern, startIndex, (startIndex + (lib.getMatcher(Type.SIMPLE).end())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7145/buggy-version/src.Model.Regex.ConstructsAbstractFactory.java", "BodyUseAPI": ["Model.Regex.ConstructsAbstractFactory.regexMatch(Type.SIMPLE,java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "37d638a1dd29571726cf385c138cf3c26f137586", "Url": "https://api.github.com/repos/mcekiera/JRegEx", "Date": "2016-05-26T22:51:18Z"},
{"Line": "=>1350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.lang.String>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (fieldName.equals(\"{value}\")) { if (java.lang.Number.class.isAssignableFrom(valueType)) value = v.asDouble(); else value = v.asText(); }else { java.lang.reflect.Field fV = value.getClass().getField(fieldName); if (java.lang.Number.class.isAssignableFrom(fV.getType())) fV.set(value, v.asDouble()); else fV.set(value, v.asText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1460/buggy-version/model-based-configurable-nat.src.main.java.org.onosproject.model.based.configurable.nat.StateListenerNew.java", "BodyUseAPI": ["java.lang.Class<? extends java.lang.Object>.getField(java.lang.String)"], "Fixed commit": "a41883bdbf968cbb232342dc4fe3b22a1ca5165e", "Url": "https://api.github.com/repos/netgroup-polito/onos-applications", "Date": "2017-05-11T08:20:11Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ns.isEmpty())) { npCreator.addNamespace(sc.getRdfPrefix(), ns); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4209/buggy-version/src.main.java.ch.tkuhn.bel2nanopub.IdSchemes.java", "BodyUseAPI": ["org.nanopub.NanopubCreator.addNamespace(sc.getRdfPrefix(),java.lang.String)"], "Fixed commit": "2f56b25be5b5f93f7a24b905efe3953ff7707b7c", "Url": "https://api.github.com/repos/tkuhn/bel2nanopub", "Date": "2014-07-01T08:09:22Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["meew0.mewtwo.commands.CommandChain.executeBareChain(meew0.mewtwo.context.MewtwoContext)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((i + 1) == (result.length())) { newResult += c; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/563/buggy-version/src.main.java.meew0.mewtwo.commands.CommandChain.java", "BodyUseAPI": [], "Fixed commit": "faf8a5a3bf446c4af1c4d21224de2a5f9c631a9c", "Url": "https://api.github.com/repos/meew0/Mewtwo", "Date": "2015-01-14T20:44:13Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((f != null) && (stub != null)) futures.putIfAbsent(stub, f);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8837/buggy-version/src.org.jgroups.stack.RouterStubManager.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentMap<org.jgroups.stack.RouterStub, java.util.concurrent.Future<?>>.putIfAbsent(org.jgroups.stack.RouterStub,java.util.concurrent.Future<?>)"], "Fixed commit": "e4248516ada5871683db458f1403aeb5195ebad4", "Url": "https://api.github.com/repos/rhusar/JGroups", "Date": "2014-10-15T10:33:46Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((contexts.length) > 0) { contexts[((contexts.length) - 1)] = \"*\"; search = join(contexts, \"-\"); }else { search = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7834/buggy-version/Theme.java", "BodyUseAPI": ["Theme.join(java.lang.String[],java.lang.String)"], "Fixed commit": "19504da48c6c6c6a341c76443c57e0d427f75585", "Url": "https://api.github.com/repos/luojeff/APCS1-Final-Project", "Date": "2017-01-10T00:09:47Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getNumeratorValue()) == null) || ((getDenominatorValue()) == null)) { return java.lang.Boolean.FALSE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1621/buggy-version/survtower-business.survtower-business-common.src.main.java.com.survtower.business.common.domain.SurveillanceData.java", "BodyUseAPI": [], "Fixed commit": "5c4ec31d8b89b944611bf97c7a9901aa653989fa", "Url": "https://api.github.com/repos/cchigoriwa/survtower", "Date": "2015-06-04T10:16:59Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.kafka.clients.consumer.KafkaConsumer<java.lang.String, java.lang.String>.poll(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((records.count()) > 0) { for (org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String> record : records) { java.lang.System.out.println(patternize(this.configuration.getPattern(), record)); recordCount++; if ((recordCount >= (this.configuration.getMaxCount())) || (((this.configuration.getToTimestamp()) != null) && ((record.timestamp()) > (this.configuration.getToTimestamp())))) { running = false; break; } } }else { if (((this.configuration.getToTimestamp()) != null) && ((java.lang.System.currentTimeMillis()) > (this.configuration.getToTimestamp()))) { running = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7367/buggy-version/src.main.java.com.kappaware.ktail.Engine.java", "BodyUseAPI": [], "Fixed commit": "fd3514df0c5f001317d720ecf4c9039b9bb5c1f6", "Url": "https://api.github.com/repos/Kappaware/ktail", "Date": "2016-12-20T13:40:36Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDelSuccess) srcFldr.delete();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1784/buggy-version/pdf-splitter.src.main.java.id.co.ojk.pdfsplitter.controller.SplitterController.java", "BodyUseAPI": [], "Fixed commit": "74f9e9a55aa2a7cd256e21e740d81e1a4b6b29cc", "Url": "https://api.github.com/repos/amura2406/myth-pdf-splitter", "Date": "2015-12-03T12:51:59Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (exception == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8509/buggy-version/app.src.main.java.com.tylerrockwood.software.cam2pdf.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "96b1dcb3239add2abd0a07b16049c0c6e61ab91c", "Url": "https://api.github.com/repos/rockwotj/Cam2PDF", "Date": "2015-02-18T20:26:51Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((startTp != null) && (endTp != null)) { com.edong.entity.TrackSummary trackSummary = new com.edong.entity.TrackSummary(sumUp, sumDown, sumUpDist, sumDownDist, sumHorizonDist, startTp.getTime(), endTp.getTime()); return trackSummary; }else { return new com.edong.entity.TrackSummary(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3108/buggy-version/src.com.edong.entity.TrackHelper.java", "BodyUseAPI": ["com.edong.entity.Location.getTime()", "com.edong.entity.Location.getTime()"], "Fixed commit": "6dff96a275fc30c5ee37169f05eb240f882f70f4", "Url": "https://api.github.com/repos/lastarsenal/yd", "Date": "2015-04-11T15:11:25Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()", "java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((username.length()) < 1) || ((password.length()) < 1)) { java.lang.System.out.println(\"Error: username or password cannot be blank\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2688/buggy-version/src.Menu.Login.java", "BodyUseAPI": [], "Fixed commit": "90141aef86cce24a8f2ceba3a9515ff67f1a5235", "Url": "https://api.github.com/repos/Arizecr/COSC-2299-Part-A", "Date": "2017-03-17T07:45:10Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.magestore.app.lib.model.checkout.Checkout.getGrandTotal()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (totalValue == grand_total) { mCheckoutListController.isEnableCreateInvoice(true); }else { mCheckoutListController.isEnableCreateInvoice(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1969/buggy-version/AppPOS.src.main.java.com.magestore.app.pos.panel.CheckoutPaymentListPanel.java", "BodyUseAPI": [], "Fixed commit": "83909fa8bbed8b235e843da4620b02e083991038", "Url": "https://api.github.com/repos/miketrueplus/MagestorePOSAndroid", "Date": "2017-03-23T07:33:19Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mcjty.rftools.blocks.dimlets.DimletConfiguration.dimensionDifficulty) != (-1)) { mcjty.rftools.dimension.RfToolsDimensionManager dimensionManager = mcjty.rftools.dimension.RfToolsDimensionManager.getDimensionManager(world); mcjty.rftools.dimension.DimensionInformation information = dimensionManager.getDimensionInformation(world.provider.dimensionId); cost = information.getActualRfCost(); if (cost == 0) { mcjty.rftools.dimension.description.DimensionDescriptor descriptor = dimensionManager.getDimensionDescriptor(world.provider.dimensionId); cost = descriptor.getRfMaintainCost(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2138/buggy-version/src.main.java.mcjty.rftools.dimension.RfToolsDimensionManager.java", "BodyUseAPI": [], "Fixed commit": "2dc71c734dbf1db3002ea56b49e3bbbfdd9ea4a1", "Url": "https://api.github.com/repos/McJtyMods/RFTools", "Date": "2015-12-26T05:55:29Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.util.ArrayList<java.lang.Object>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((((keys2.size()) > 2) && ((keys2.get(0)) == null)) && ((keys2.get(1)) == null)) { keys2.remove(0); dirRecids.get(i).remove(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1734/buggy-version/src.main.java.org.mapdb.Pump.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Object>.remove(int)"], "Fixed commit": "f50b07b6f365144cb9805651540f71da2b716ce9", "Url": "https://api.github.com/repos/jankotek/MapDB", "Date": "2013-10-11T10:29:51Z"},
{"Line": "=>496", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.NodeList.item(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (node.getNodeName().equals(\"value\")) { if ((node.getFirstChild()) != null) { value = node.getFirstChild().getNodeValue().trim(); }else { value = node.getNodeValue(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5620/buggy-version/src.main.java.org.dasein.cloud.aws.platform.SNS.java", "BodyUseAPI": ["org.w3c.dom.Node.getFirstChild()", "org.w3c.dom.Node.getNodeValue()", "org.w3c.dom.Node.getNodeValue()", "java.lang.String.trim()", "org.w3c.dom.Node.getFirstChild()"], "Fixed commit": "032756f84789cb1e352d052bdc530b474bf106c5", "Url": "https://api.github.com/repos/maksimov/dasein-cloud-aws", "Date": "2014-03-14T15:48:43Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (useAutoCompletion) { org.jdesktop.swingx.autocomplete.AutoCompleteDecorator.decorate(tfAdd, prolog.getAutoCompletionList(), false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/790/buggy-version/PrologGui.src.pdt.gui.datapanels.RelationPanel.java", "BodyUseAPI": [], "Fixed commit": "ea7cd9ac767c4a30cbc1e542058c8053f283acf9", "Url": "https://api.github.com/repos/FabianNoth/pdt2swing", "Date": "2014-06-07T12:09:36Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (el != null) { el.getPosition().sum(el.getSpeed()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8520/buggy-version/src.main.java.nl.tudelft.scrumbledore.Kinetics.java", "BodyUseAPI": ["nl.tudelft.scrumbledore.LevelElement.getSpeed()", "nl.tudelft.scrumbledore.LevelElement.getPosition()", "el.getPosition().sum(el.getSpeed())"], "Fixed commit": "ddbe3b436dffb8d33fd8e6591ec9cd536498088e", "Url": "https://api.github.com/repos/dalderliesten/Scrumbledore", "Date": "2015-09-06T12:47:32Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (element == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8520/buggy-version/src.main.java.nl.tudelft.scrumbledore.Gravity.java", "BodyUseAPI": [], "Fixed commit": "ddbe3b436dffb8d33fd8e6591ec9cd536498088e", "Url": "https://api.github.com/repos/dalderliesten/Scrumbledore", "Date": "2015-09-06T12:47:32Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((((org.bukkit.entity.Tameable) (attacker)).getOwner()) instanceof org.bukkit.entity.Player)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6394/buggy-version/src.main.java.com.sk89q.worldguard.bukkit.WorldGuardEntityListener.java", "BodyUseAPI": [], "Fixed commit": "dfb611458441b20435b0ad7282de56fdd9083dca", "Url": "https://api.github.com/repos/Escapecraft/worldguard", "Date": "2013-01-31T13:23:38Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityDamageByEntityEvent.getDamager()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (attacker instanceof org.bukkit.entity.Creeper) { if (!(set.allows(DefaultFlag.CREEPER_EXPLOSION, localPlayer))) { event.setCancelled(true); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6394/buggy-version/src.main.java.com.sk89q.worldguard.bukkit.WorldGuardEntityListener.java", "BodyUseAPI": [], "Fixed commit": "dfb611458441b20435b0ad7282de56fdd9083dca", "Url": "https://api.github.com/repos/Escapecraft/worldguard", "Date": "2013-01-31T13:23:38Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((hub.sam.dbl.TextualSyntaxDef) (_eContainer)) != null) { _eContainer_1 = ((hub.sam.dbl.TextualSyntaxDef) (_eContainer)).eContainer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8304/buggy-version/dev-plugins.hub.sam.dmx.xtend-gen.hub.sam.dmx.ExtensionSyntaxDefinitionProcessor.java", "BodyUseAPI": ["org.eclipse.emf.ecore.EObject.eContainer()"], "Fixed commit": "8b50402ac689dafd2c566933f94645f6ffe2a267", "Url": "https://api.github.com/repos/ablunk/dmx", "Date": "2014-09-04T12:33:12Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_notEquals) { java.lang.String _name = extDef.getName(); _xifexpression = _name; }else { java.lang.String _name_1 = this.extensionDefinition.getName(); _xifexpression = _name_1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8304/buggy-version/dev-plugins.hub.sam.dmx.xtend-gen.hub.sam.dmx.ExtensionSyntaxDefinitionProcessor.java", "BodyUseAPI": [], "Fixed commit": "8b50402ac689dafd2c566933f94645f6ffe2a267", "Url": "https://api.github.com/repos/ablunk/dmx", "Date": "2014-09-04T12:33:12Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.granite.tide.data.DataContext.dataContext.get()) == null) org.granite.tide.data.DataContext.dataContext.set(org.granite.tide.data.DataContext.NULL_DATA_CONTEXT);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/899/buggy-version/tide.org.granite.tide.data.DataContext.java", "BodyUseAPI": ["java.lang.ThreadLocal<org.granite.tide.data.DataContext>.set(org.granite.tide.data.DataContext)"], "Fixed commit": "81c4b87fa24f9e150e25f1a931092412a1d6c317", "Url": "https://api.github.com/repos/graniteds/graniteds", "Date": "2011-09-13T01:51:49Z"},
{"Line": "=>924", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t2 == t) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7897/buggy-version/src.org.nschmidt.ldparteditor.data.GDataCSG.java", "BodyUseAPI": [], "Fixed commit": "e7925842a0cc4c277d0fdb9ac95e1af8820c8623", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2015-07-12T16:20:41Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wordcoach.java.model.UtilityCalc.getLastStreak(com.wordcoach.java.model.Question)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((streak.size()) < 2) return com.wordcoach.java.model.UtilityCalc.penalty;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6020/buggy-version/src.com.wordcoach.java.model.UtilityCalc.java", "BodyUseAPI": [], "Fixed commit": "753feea2431608cefdd01220530cf1b06032d2b6", "Url": "https://api.github.com/repos/gynt/WordCoach", "Date": "2017-02-01T10:53:47Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i != 0) ++size;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/586/buggy-version/src.main.java.au.com.addstar.signmaker.TextWriter.java", "BodyUseAPI": [], "Fixed commit": "316c663db8e7ba71475f0ff937cae91ef711041b", "Url": "https://api.github.com/repos/Schmoller/SuperSigns", "Date": "2014-04-08T12:18:12Z"},
{"Line": "=>4911", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sorttimestamp) url.append(\"&cmsort=timestamp\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/242/buggy-version/src.org.wikipedia.Wiki.java", "BodyUseAPI": [], "Fixed commit": "a99b0fb5d51ef9f578353cbd96dab3873c5d0ea6", "Url": "https://api.github.com/repos/andreistroe/wiki-java", "Date": "2016-04-01T12:13:27Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((persistence) == null) { this.persistence = build(conn, databases); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7350/buggy-version/src.java.com.rapleaf.jack.LazyLoadPersistence.java", "BodyUseAPI": [], "Fixed commit": "06aefe32fbed3c1735cef882e63b2aaa05ea3dc8", "Url": "https://api.github.com/repos/tuliren/jack", "Date": "2015-09-10T01:29:58Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((dgrxf.watercraft.tileentity.WCTileEntityChest) (te)).getCode()) >= 0) { ((dgrxf.watercraft.tileentity.WCTileEntityChest) (te)).setLocked(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8384/buggy-version/WaterCraft.src.dgrxf.watercraft.block.WCChest.java", "BodyUseAPI": ["net.minecraft.tileentity.TileEntity.setLocked(boolean)"], "Fixed commit": "5da146d13973634ed7831eac7e7380202d3b3550", "Url": "https://api.github.com/repos/Robotic-Brain/WaterCraft", "Date": "2013-11-15T21:50:16Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (dummyI > 0) { st = new java.util.StringTokenizer(data.readLine(), \" \"); if (st.hasMoreElements()) fontName = st.nextToken(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7411/buggy-version/src.main.java.com.github.lalyos.jfiglet.FigletFont.java", "BodyUseAPI": [], "Fixed commit": "65026428914d9c2d80baa06fcb104f2edbc8ad77", "Url": "https://api.github.com/repos/lalyos/jfiglet", "Date": "2017-06-14T07:21:05Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (java.lang.Character.isISOControl(chr)) { sb.append(\"#x\"); sb.append(java.lang.Integer.toHexString(chr)); sb.append(';'); }else { sb.append(chr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5222/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.XMLLogger.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.Integer.toHexString(char)", "java.lang.StringBuilder.append(char)"], "Fixed commit": "2a5690c28a5ce3af7341428f6b71b6897733cf74", "Url": "https://api.github.com/repos/djydewang/checkstyle", "Date": "2017-09-29T14:32:46Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (val == null) throw new java.util.NoSuchElementException(((\"cannot find property of key [\" + k) + \"]\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6042/buggy-version/gplume.src.main.java.com.caibowen.gplume.context.bean.XMLBeanAssemblerBase.java", "BodyUseAPI": [], "Fixed commit": "f4ef23d5d032359a8fd8017f9f3d27bd8ca4bd6c", "Url": "https://api.github.com/repos/xkommando/Gplume", "Date": "2014-08-13T01:47:00Z"},
{"Line": "=>512", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == value) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5877/buggy-version/core.src.main.java.org.apache.carbondata.core.util.DataTypeUtil.java", "BodyUseAPI": [], "Fixed commit": "71fe32a474caff36b33db19a8aaca711522d2e2d", "Url": "https://api.github.com/repos/manishgupta88/carbondata", "Date": "2017-03-21T17:05:07Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.gs) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6108/buggy-version/core.src.com.cs110.app.Net.NetworkingBase.java", "BodyUseAPI": [], "Fixed commit": "27d2d48b1a79f118780e43032bb8de69526d70ff", "Url": "https://api.github.com/repos/ucsdCSE110wi16/CSE110M260T1", "Date": "2016-03-07T06:20:52Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(secondaryTorpedoStore.isEmpty())) { secondaryTorpedoStore.fire(1); firingSuccess = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6262/buggy-version/src.main.java.hu.bme.mit.spaceship.GT4500.java", "BodyUseAPI": ["hu.bme.mit.spaceship.TorpedoStore.fire(int)"], "Fixed commit": "db6e35b05a106150b4ad0cc885a4c07875533984", "Url": "https://api.github.com/repos/roBot92/ivt-lab", "Date": "2017-03-31T11:29:02Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(primaryTorpedoStore.isEmpty())) { primaryTorpedoStore.fire(1); firingSuccess = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6262/buggy-version/src.main.java.hu.bme.mit.spaceship.GT4500.java", "BodyUseAPI": ["hu.bme.mit.spaceship.TorpedoStore.fire(int)"], "Fixed commit": "db6e35b05a106150b4ad0cc885a4c07875533984", "Url": "https://api.github.com/repos/roBot92/ivt-lab", "Date": "2017-03-31T11:29:02Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nav) != null) { parsedDoc.nav = new com.xwarner.html.nav.Nav(nav); parsedDoc.nav.parse(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3518/buggy-version/src.com.xwarner.html.HTMLParser.java", "BodyUseAPI": [], "Fixed commit": "75dd9cd47ce3c87d1653622f8ca20281e0a9ec5a", "Url": "https://api.github.com/repos/MaxSW/HTMLtoSwing", "Date": "2017-07-13T09:55:36Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node.hasChildNodes()) { for (int i = 0; i < (node.getChildNodes().getLength()); i++) if ((node.getChildNodes().item(i).getNodeType()) == (org.w3c.dom.Node.ELEMENT_NODE)) return node.getChildNodes().item(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3518/buggy-version/src.com.xwarner.html.nav.Nav.java", "BodyUseAPI": ["org.w3c.dom.Node.getNodeType()", "org.w3c.dom.NodeList.item(int)", "org.w3c.dom.Node.getChildNodes()", "org.w3c.dom.Node.getChildNodes()", "org.w3c.dom.NodeList.item(int)", "org.w3c.dom.Node.getChildNodes()", "org.w3c.dom.NodeList.getLength()"], "Fixed commit": "75dd9cd47ce3c87d1653622f8ca20281e0a9ec5a", "Url": "https://api.github.com/repos/MaxSW/HTMLtoSwing", "Date": "2017-07-13T09:55:36Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numberofIterations > 0) { graphReader = new java.io.BufferedReader(fileReader); graphReader.readLine(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1539/buggy-version/WebSearchEngineHW3.src.edu.nyu.cs.cs2580.CorpusAnalyzerPagerank.java", "BodyUseAPI": [], "Fixed commit": "aeeb6ac19461d3ef3a5b81fccf8e109ab9678712", "Url": "https://api.github.com/repos/samskd/Turbo360", "Date": "2013-04-10T17:45:40Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entryList.get(i)) instanceof sorcer.eo.InoutEntry) { if (((sorcer.eo.InoutEntry) (entryList.get(i))).isPersistent) { sorcer.eo.operator.setPar(pcxt, ((sorcer.eo.InoutEntry) (entryList.get(i))), i); }else { pcxt.putInoutValueAt(((sorcer.eo.InoutEntry) (entryList.get(i))).path(), ((sorcer.eo.InoutEntry) (entryList.get(i))).value(), (i + 1)); } }else if ((entryList.get(i)) instanceof sorcer.eo.Entry) { if (((sorcer.eo.Entry) (entryList.get(i))).isPersistent) { sorcer.eo.operator.setPar(pcxt, ((sorcer.eo.Entry) (entryList.get(i))), i); }else { if ((entryList.get(i)) instanceof sorcer.core.context.model.par.Par) { try { pcxt.putValueAt(((sorcer.eo.Entry) (entryList.get(i))).getName(), entryList.get(i).asis(), (i + 1)); } catch (sorcer.eo.EvaluationException ce) { sorcer.eo.operator.logger.warn((((\"Problem putting Par: \" + (entryList.get(i))) + \" into context: \") + ce)); } catch (java.rmi.RemoteException re) { sorcer.eo.operator.logger.warn((((\"Problem putting Par: \" + (entryList.get(i))) + \" into context: \") + re)); } }else pcxt.putValueAt(((sorcer.eo.Entry) (entryList.get(i))).path(), ((sorcer.eo.Entry) (entryList.get(i))).value(), (i + 1)); } }else if ((entryList.get(i)) instanceof sorcer.eo.operator.DataEntry) { pcxt.putValueAt(Context.DSD_PATH, ((sorcer.eo.operator.DataEntry) (entryList.get(i))).value(), (i + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7180/buggy-version/sos.sos-api.src.main.java.sorcer.eo.operator.java", "BodyUseAPI": ["entryList.get(i).asis()", "java.util.List<sorcer.eo.Tuple2<java.lang.String, ?>>.get(int)", "((sorcer.eo.InoutEntry) (entryList.get(i))).value()", "java.util.List<sorcer.eo.Tuple2<java.lang.String, ?>>.get(int)", "((sorcer.eo.Entry) (entryList.get(i))).value()", "java.util.List<sorcer.eo.Tuple2<java.lang.String, ?>>.get(int)", "sorcer.eo.PositionalContext.putValueAt(((sorcer.eo.Entry) (entryList.get(i))).path(),((sorcer.eo.Entry) (entryList.get(i))).value(),int)", "java.util.List<sorcer.eo.Tuple2<java.lang.String, ?>>.get(int)", "java.util.List<sorcer.eo.Tuple2<java.lang.String, ?>>.get(int)", "java.util.List<sorcer.eo.Tuple2<java.lang.String, ?>>.get(int)", "java.util.List<sorcer.eo.Tuple2<java.lang.String, ?>>.get(int)", "((sorcer.eo.operator.DataEntry) (entryList.get(i))).value()", "sorcer.eo.PositionalContext.putInoutValueAt(((sorcer.eo.InoutEntry) (entryList.get(i))).path(),((sorcer.eo.InoutEntry) (entryList.get(i))).value(),int)", "java.util.List<sorcer.eo.Tuple2<java.lang.String, ?>>.get(int)", "java.util.List<sorcer.eo.Tuple2<java.lang.String, ?>>.get(int)", "java.util.List<sorcer.eo.Tuple2<java.lang.String, ?>>.get(int)", "((sorcer.eo.InoutEntry) (entryList.get(i))).path()", "sorcer.eo.PositionalContext.putValueAt(((sorcer.eo.Entry) (entryList.get(i))).getName(),entryList.get(i).asis(),int)", "org.slf4j.Logger.warn((((\"Problem putting Par: \" + (entryList.get(i))) + \" into context: \") + ce))", "sorcer.eo.operator.setPar(sorcer.eo.PositionalContext,((sorcer.eo.InoutEntry) (entryList.get(i))),int)", "java.util.List<sorcer.eo.Tuple2<java.lang.String, ?>>.get(int)", "java.util.List<sorcer.eo.Tuple2<java.lang.String, ?>>.get(int)", "java.util.List<sorcer.eo.Tuple2<java.lang.String, ?>>.get(int)", "((sorcer.eo.Entry) (entryList.get(i))).getName()", "((sorcer.eo.Entry) (entryList.get(i))).path()", "java.util.List<sorcer.eo.Tuple2<java.lang.String, ?>>.get(int)", "sorcer.eo.operator.setPar(sorcer.eo.PositionalContext,((sorcer.eo.Entry) (entryList.get(i))),int)", "java.util.List<sorcer.eo.Tuple2<java.lang.String, ?>>.get(int)", "org.slf4j.Logger.warn((((\"Problem putting Par: \" + (entryList.get(i))) + \" into context: \") + re))", "java.util.List<sorcer.eo.Tuple2<java.lang.String, ?>>.get(int)", "sorcer.eo.PositionalContext.putValueAt(Context.DSD_PATH,((sorcer.eo.operator.DataEntry) (entryList.get(i))).value(),int)"], "Fixed commit": "0ba7ef774e4f27baa7201c793709c47e4d6784b2", "Url": "https://api.github.com/repos/sorcersoft/sorcer", "Date": "2014-12-20T02:21:52Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cmdOpts.get(\"downloaddir\")) != null) { downloadDir = cmdOpts.get(\"downloaddir\").toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6618/buggy-version/src.VooDooDriver.java", "BodyUseAPI": ["voodoodriver.SodaHash.get(java.lang.String)", "cmdOpts.get(\"downloaddir\").toString()"], "Fixed commit": "2352b72c33e6dbcb353633df39eeb0a39dbce9d8", "Url": "https://api.github.com/repos/trampus/VooDooDriver", "Date": "2011-07-12T00:59:20Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (damageValue > 0) javax.swing.JOptionPane.showConfirmDialog(null, ((\"You took \" + damageValue) + \" damage!\"), \"You took damage!\", javax.swing.JOptionPane.OK_OPTION); else javax.swing.JOptionPane.showConfirmDialog(null, \"You dodged all the damage!\", \"You took damage!\", javax.swing.JOptionPane.OK_OPTION);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6370/buggy-version/GUI.java", "BodyUseAPI": ["javax.swing.JOptionPane.showConfirmDialog(<nulltype>,java.lang.String,java.lang.String,int)"], "Fixed commit": "5bbdff8b929718d04aa6503aae9b5311343518ad", "Url": "https://api.github.com/repos/xMausoleuMx/Dungeon-Crawler", "Date": "2017-07-13T06:14:56Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (damageValue > 0) enemy.editHP(((-1) * damageValue));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6370/buggy-version/GUI.java", "BodyUseAPI": ["Monster.editHP(int)"], "Fixed commit": "5bbdff8b929718d04aa6503aae9b5311343518ad", "Url": "https://api.github.com/repos/xMausoleuMx/Dungeon-Crawler", "Date": "2017-07-13T06:14:56Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (damageValue > 0) playerCharacter.editHP(((-1) * damageValue));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6370/buggy-version/GUI.java", "BodyUseAPI": ["Player.editHP(int)"], "Fixed commit": "5bbdff8b929718d04aa6503aae9b5311343518ad", "Url": "https://api.github.com/repos/xMausoleuMx/Dungeon-Crawler", "Date": "2017-07-13T06:14:56Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (damageValue > 0) javax.swing.JOptionPane.showConfirmDialog(null, ((\"You gave \" + damageValue) + \" damage!\"), \"You attacked!\", javax.swing.JOptionPane.OK_OPTION); else javax.swing.JOptionPane.showConfirmDialog(null, \"You did no damage!\", \"You attacked!\", javax.swing.JOptionPane.OK_OPTION);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6370/buggy-version/GUI.java", "BodyUseAPI": ["javax.swing.JOptionPane.showConfirmDialog(<nulltype>,java.lang.String,java.lang.String,int)"], "Fixed commit": "5bbdff8b929718d04aa6503aae9b5311343518ad", "Url": "https://api.github.com/repos/xMausoleuMx/Dungeon-Crawler", "Date": "2017-07-13T06:14:56Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (webWindows.get(pos).getUrl().equals(MainActivity.assetHomePage)) ((android.widget.EditText) (bar.findViewById(R.id.browser_searchbar))).setText(MainActivity.ctxt.getResources().getString(R.string.urlbardefault)); else ((android.widget.EditText) (bar.findViewById(R.id.browser_searchbar))).setText(webWindows.get(pos).getUrl().replace(\"http://\", \"\").replace(\"https://\", \"\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4074/buggy-version/src.com.powerpoint45.lucidbrowser.SetupLayouts.java", "BodyUseAPI": ["((android.widget.EditText) (bar.findViewById(R.id.browser_searchbar))).setText(webWindows.get(pos).getUrl().replace(\"http://\", \"\").replace(\"https://\", \"\"))", "webWindows.get(pos).getUrl()", "webWindows.get(pos).getUrl().replace(\"http://\", \"\").replace(java.lang.String,java.lang.String)", "webWindows.get(pos).getUrl().replace(java.lang.String,java.lang.String)", "com.powerpoint45.lucidbrowser.SetupLayouts.1.get(int)"], "Fixed commit": "cd7b9e12b5739153626e569e8f306755f4d7a288", "Url": "https://api.github.com/repos/powerpoint45/Lucid-Browser", "Date": "2014-08-16T06:03:00Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (data != null) { mayChangeDefaultLanguage(data.getBooleanExtra(EditUserProfileActivity.FLAG_LANGUAGE_CHANGED, false)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6533/buggy-version/app.src.main.java.com.github.codetanzania.ui.activity.SettingsActivity.java", "BodyUseAPI": ["com.github.codetanzania.ui.activity.SettingsActivity.mayChangeDefaultLanguage(data.getBooleanExtra(EditUserProfileActivity.FLAG_LANGUAGE_CHANGED, false))", "android.content.Intent.getBooleanExtra(EditUserProfileActivity.FLAG_LANGUAGE_CHANGED,boolean)"], "Fixed commit": "3f645268a28ee8a09ab99bece5c8ff0451797d39", "Url": "https://api.github.com/repos/CodeTanzania/open311-android", "Date": "2017-09-05T21:26:33Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (responseHandler == null) { if (responseHandlerClass == null) { responseHandler = createResponseHandler(); }else { try { responseHandler = responseHandlerClass.newInstance(); } catch (java.lang.Throwable e) { throw new java.lang.RuntimeException(e); } } mResponseHandlerMap.put(responseHandlerClass, responseHandler); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2508/buggy-version/Broker.src.main.java.com.raizlabs.android.broker.rest.BaseRestInterface.java", "BodyUseAPI": [], "Fixed commit": "39d6d9a76629d0e77a99bb9d8f44df3afa12996a", "Url": "https://api.github.com/repos/Raizlabs/Broker", "Date": "2014-12-01T18:37:10Z"},
{"Line": "=>458", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (p != null) props.add(p);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6512/buggy-version/core.src.main.java.hudson.model.User.java", "BodyUseAPI": ["java.util.List<hudson.model.UserProperty>.add(hudson.model.UserProperty)"], "Fixed commit": "29dc1d5fa8e684e27034f717eb820ff53cdb14ea", "Url": "https://api.github.com/repos/jenkinsci/jenkins", "Date": "2011-03-19T04:28:21Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentState) == (net.robharding.brickbreaker.states.GameStateManager.MENUSTATE)) { net.robharding.brickbreaker.states.GameStateManager.currentLevel = 1; gameStates.remove(net.robharding.brickbreaker.states.GameStateManager.PLAYSTATE); gameStates.add(new net.robharding.brickbreaker.states.Level(this, net.robharding.brickbreaker.util.FileUtils.loadAsString(((\"levels/level\" + (net.robharding.brickbreaker.states.GameStateManager.currentLevel)) + \".lvl\")), net.robharding.brickbreaker.states.GameStateManager.currentLevel)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/988/buggy-version/src.net.robharding.brickbreaker.states.GameStateManager.java", "BodyUseAPI": [], "Fixed commit": "0496cea0684443583af97a9533020e9dc0af9c78", "Url": "https://api.github.com/repos/robharding/Breakout-Clone", "Date": "2017-05-25T15:07:59Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(wordsList.isEmpty())) { word = wordsList.poll().toLowerCase(); }else { throw new java.lang.IllegalArgumentException(main.logic.CommandParser.MESSAGE_INVALID_TIME_FORMAT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4867/buggy-version/src.main.logic.CommandParser.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "java.util.LinkedList<java.lang.String>.poll()"], "Fixed commit": "e139d0f9207caf3837129dbb58b567080cd5f8e6", "Url": "https://api.github.com/repos/cs2103aug2014-T13-2J/main", "Date": "2014-11-09T16:38:26Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (conn == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8202/buggy-version/AWTBookmakerServer.src.java.bean.MatchBean.java", "BodyUseAPI": [], "Fixed commit": "086b77d0d9f6bfb999abca56523a4097d753f1e9", "Url": "https://api.github.com/repos/Zerounodue/BookmakerServer", "Date": "2015-11-16T16:41:59Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((leftSensorValue) == (-1)) leftSensorValue = 255;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4430/buggy-version/RobotProjectApp.src.org.uibk.iis.robotprojectapp.DistanceMeasurementProvider.java", "BodyUseAPI": [], "Fixed commit": "1149a24b17f7b57081b4e99496310c3f01f9dad9", "Url": "https://api.github.com/repos/Philipp-M/RobotProject", "Date": "2015-04-18T13:19:32Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rightSensorValue) == (-1)) rightSensorValue = 255;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4430/buggy-version/RobotProjectApp.src.org.uibk.iis.robotprojectapp.DistanceMeasurementProvider.java", "BodyUseAPI": [], "Fixed commit": "1149a24b17f7b57081b4e99496310c3f01f9dad9", "Url": "https://api.github.com/repos/Philipp-M/RobotProject", "Date": "2015-04-18T13:19:32Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((centerSensorValue) == (-1)) centerSensorValue = 255;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4430/buggy-version/RobotProjectApp.src.org.uibk.iis.robotprojectapp.DistanceMeasurementProvider.java", "BodyUseAPI": [], "Fixed commit": "1149a24b17f7b57081b4e99496310c3f01f9dad9", "Url": "https://api.github.com/repos/Philipp-M/RobotProject", "Date": "2015-04-18T13:19:32Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["weka.core.Instances.attribute(targetUri.toString())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (target != null) { trainingSet.deleteAttributeAt(targetIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3360/buggy-version/jaqpot3-standalone.src.main.java.org.opentox.jaqpot3.qsar.trainer.LeveragesTrainer.java", "BodyUseAPI": [], "Fixed commit": "7474cdb9291b4130fd756210be1d1523aee12022", "Url": "https://api.github.com/repos/alphaville/jaqpot3", "Date": "2011-06-02T20:22:45Z"},
{"Line": "=>1323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((output.getBytesWritten()) > 0) { channelIDs.add(new org.apache.flink.runtime.operators.sort.UnilateralSortMerger.ChannelWithBlockCount(channel, output.getBlockCount())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7770/buggy-version/flink-runtime.src.main.java.org.apache.flink.runtime.operators.sort.UnilateralSortMerger.java", "BodyUseAPI": ["org.apache.flink.runtime.io.disk.iomanager.ChannelWriterOutputView.getBlockCount()", "java.util.List<org.apache.flink.runtime.operators.sort.UnilateralSortMerger.ChannelWithBlockCount>.add(org.apache.flink.runtime.operators.sort.UnilateralSortMerger.ChannelWithBlockCount)"], "Fixed commit": "b7a53376ce2a7e88a8d7ac53708c358dfcec5976", "Url": "https://api.github.com/repos/StephanEwen/incubator-flink", "Date": "2014-12-18T19:08:09Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((intent.resolveActivity(getActivity().getPackageManager())) != null) { startActivity(intent); }else { android.widget.Toast.makeText(getActivity().getApplicationContext(), \"oops...\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7211/buggy-version/runner.src.main.java.site.hanschen.runwithyou.ui.home.setting.SettingPreferenceFragment.java", "BodyUseAPI": ["site.hanschen.runwithyou.ui.home.setting.SettingPreferenceFragment.startActivity(android.content.Intent)"], "Fixed commit": "d17595f01024b90ef5a94419296c083d7265c477", "Url": "https://api.github.com/repos/shensky711/Run-With-You", "Date": "2017-04-27T12:58:57Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line.equals(lastEvent)) { logService.log(LogService.LOG_DEBUG, \"Squelching duplicate event.\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6130/buggy-version/com.buglabs.bug.bmi.com.buglabs.bug.bmi.PipeReader.java", "BodyUseAPI": [], "Fixed commit": "b40bc119ccb4d32dc54a4edf903ed9d5d5b77653", "Url": "https://api.github.com/repos/buglabs/bug-osgi", "Date": "2011-07-18T04:23:50Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((operation.getPerformanceStates().size()) > 0) { serverConnector.submit(SimulatorAddress.COORDINATOR, operation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2007/buggy-version/simulator.src.main.java.com.hazelcast.simulator.worker.performance.WorkerPerformanceMonitor.java", "BodyUseAPI": ["com.hazelcast.simulator.protocol.connector.ServerConnector.submit(SimulatorAddress.COORDINATOR,com.hazelcast.simulator.protocol.operation.PerformanceStateOperation)"], "Fixed commit": "ba3889e1637cd0bfa50a32d99db618c4dc5d518c", "Url": "https://api.github.com/repos/hazelcast/hazelcast-simulator", "Date": "2016-01-12T14:42:43Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getLatestRead()) == book) { user.setLatestRead(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3983/buggy-version/src.main.java.baobab.pet.data.DAO.java", "BodyUseAPI": ["baobab.pet.data.User.setLatestRead(<nulltype>)"], "Fixed commit": "9ac91ba2a54495b53df12aca17bec3afa2e9554a", "Url": "https://api.github.com/repos/baobabKoodaa/personal-expense-tracker", "Date": "2017-01-04T01:10:04Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getLatestRead()) == book) { user.setLatestRead(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3983/buggy-version/src.main.java.baobab.pet.data.DAO.java", "BodyUseAPI": ["baobab.pet.data.User.setLatestRead(<nulltype>)"], "Fixed commit": "9ac91ba2a54495b53df12aca17bec3afa2e9554a", "Url": "https://api.github.com/repos/baobabKoodaa/personal-expense-tracker", "Date": "2017-01-04T01:10:04Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activeAppIndex) < 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7100/buggy-version/src.main.java.org.luwrain.core.AppManager.java", "BodyUseAPI": [], "Fixed commit": "cadfd9b581aab3d21122d3c0107b7e3e5025e3a2", "Url": "https://api.github.com/repos/luwrain/luwrain", "Date": "2016-12-22T21:19:22Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.umn.fingagunz.gametime.domain.Game.getGameDate()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (gameDate != null) { ((android.widget.TextView) (findViewById(R.id.game_date_label))).setText(new java.text.SimpleDateFormat(\"E MMM d, yyyy\").format(game.getGameDate())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2838/buggy-version/app.src.main.java.edu.umn.fingagunz.gametime.AddEditGameActivity.java", "BodyUseAPI": [], "Fixed commit": "78ec21e3b01aa39125fa0837f175bcfbb9a38b3b", "Url": "https://api.github.com/repos/weis0292/GameTime", "Date": "2015-05-08T00:47:10Z"},
{"Line": "=>523", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((net.sf.memoranda.ui.TaskPanel.numberOfNewTaskPopUps) % 2) == 0) { dlg = new net.sf.memoranda.ui.NewTaskWindow(net.sf.memoranda.ui.App.getFrame(), \"Create a New Task\"); }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2339/buggy-version/src.net.sf.memoranda.ui.TaskPanel.java", "BodyUseAPI": [], "Fixed commit": "36c9081df0bacd40a19dd1c750b82c5dc146e8ec", "Url": "https://api.github.com/repos/trevorforrey/SER316-Frankfurt", "Date": "2017-04-19T02:55:38Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((net.sf.memoranda.ui.TaskPanel.numberOfEditTaskPopUps) % 2) == 0) { ntw = new net.sf.memoranda.ui.NewTaskWindow(net.sf.memoranda.ui.App.getFrame(), \"Edit Task\", t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2339/buggy-version/src.net.sf.memoranda.ui.TaskPanel.java", "BodyUseAPI": [], "Fixed commit": "36c9081df0bacd40a19dd1c750b82c5dc146e8ec", "Url": "https://api.github.com/repos/trevorforrey/SER316-Frankfurt", "Date": "2017-04-19T02:55:38Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ntw.CANCELLED) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2339/buggy-version/src.net.sf.memoranda.ui.AppFrame.java", "BodyUseAPI": [], "Fixed commit": "36c9081df0bacd40a19dd1c750b82c5dc146e8ec", "Url": "https://api.github.com/repos/trevorforrey/SER316-Frankfurt", "Date": "2017-04-19T02:55:38Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["em.createQuery(\"select r.contentId from Rating r where r.contributorId = ?1\", java.lang.String.class).setParameter(1, contributorIdTo).setLockMode(LockModeType.PESSIMISTIC_WRITE).getResultList()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((contentIds == null) || ((contentIds.size()) == 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2754/buggy-version/api.src.main.java.org.searchisko.persistence.service.JpaRatingPersistenceService.java", "BodyUseAPI": [], "Fixed commit": "abc4493f002b35e5b165c31069c131eb13d26ced", "Url": "https://api.github.com/repos/searchisko/searchisko", "Date": "2015-09-26T00:14:13Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.yawlfoundation.yawl.util.StringUtil.isNullOrEmpty(title)) { title = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1824/buggy-version/source.org.yawlfoundation.yawl.editor.ui.properties.NetProperties.java", "BodyUseAPI": [], "Fixed commit": "5d0a72fc8032a3827d5156c542a7d0aaa64bb91b", "Url": "https://api.github.com/repos/yawlfoundation/editor", "Date": "2017-04-05T23:49:08Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["SAMRecord.getAlignmentStart()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((startPosition - originalReferenceLength) != 0) { copyBegin.setAlignmentStart((startPosition - originalReferenceLength)); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5348/buggy-version/src.RealignSAMFile.java", "BodyUseAPI": ["SAMRecord.setAlignmentStart(int)"], "Fixed commit": "7de58319fc61037b9a430db403b9a920e172471f", "Url": "https://api.github.com/repos/apeltzer/CircularMapper", "Date": "2016-06-09T11:15:43Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPiece) != null) { for (int[] location : currentPiece.getMoves()) { if (((location[0]) == (hoverCol)) && ((location[1]) == (hoverRow))) g2d.setColor(new java.awt.Color(152, 251, 152, 150)); else g2d.setColor(new java.awt.Color(255, 102, 102, 150)); g2d.fillRect(((location[0]) * (TILE_LENGTH)), ((location[1]) * (TILE_LENGTH)), TILE_LENGTH, TILE_LENGTH); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/160/buggy-version/src.components.Board.java", "BodyUseAPI": [], "Fixed commit": "e05cfba523cebd9caf57fdab67d9dd1cf826f188", "Url": "https://api.github.com/repos/Ryan10145/Chess", "Date": "2017-07-26T21:00:29Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.me74.booklist.BookAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((currentBook.getThumbnailUrl()) != null) { android.widget.ImageView picView = ((android.widget.ImageView) (listItemView.findViewById(R.id.thumbnail))); com.squareup.picasso.Picasso.with(getContext()).load(currentBook.getThumbnailUrl()).into(picView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4686/buggy-version/app.src.main.java.com.example.me74.booklist.BookAdapter.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(getContext()).load(currentBook.getThumbnailUrl())", "com.squareup.picasso.Picasso.with(getContext()).load(currentBook.getThumbnailUrl()).into(android.widget.ImageView)", "com.example.me74.booklist.Book.getThumbnailUrl()"], "Fixed commit": "9f91e575fea936989acf8fcc7eeee007e92ca88a", "Url": "https://api.github.com/repos/sun-strider/BookList", "Date": "2017-07-14T18:29:05Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(baseJsonResponse.has(\"items\"))) { return books; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4686/buggy-version/app.src.main.java.com.example.me74.booklist.QueryUtils.java", "BodyUseAPI": [], "Fixed commit": "9f91e575fea936989acf8fcc7eeee007e92ca88a", "Url": "https://api.github.com/repos/sun-strider/BookList", "Date": "2017-07-14T18:29:05Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (extras != null) { locations = extras.getParcelableArrayList(\"locations\"); distance = extras.getFloat(\"distance\", 0); elapsedTime = extras.getLong(\"elapsedTime\", 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2064/buggy-version/app.src.main.java.io.breadcrumbs.breadcrumbs.Walking.java", "BodyUseAPI": ["android.os.Bundle.getLong(java.lang.String,int)", "android.os.Bundle.getParcelableArrayList(java.lang.String)", "android.os.Bundle.getFloat(java.lang.String,int)"], "Fixed commit": "c69d08a7256b303044f435aa7bfc68c56d2e6bbc", "Url": "https://api.github.com/repos/JESSforCrumbs/Breadcrumbs", "Date": "2016-02-28T20:52:17Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (position == (com.tinfoil.sms.settings.AddContact.NEW_NUMBER_CODE)) { if ((contactEdit.getNumbers().size()) <= 1) { this.contactName.setText(number); contactEdit.setName(number); contactEdit.setNumber(number); MessageService.dba.updateContactInfo(contactEdit, number); update(null); }else { update(number); } }else { contactEdit.setNumber(position, number); update(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7864/buggy-version/branches.tinfoil-sms.src.com.tinfoil.sms.settings.AddContact.java", "BodyUseAPI": ["com.tinfoil.sms.dataStructures.TrustedContact.setNumber(int,java.lang.String)"], "Fixed commit": "14bb9579fe54596c401fa607a58c7eb66778f3f8", "Url": "https://api.github.com/repos/tinfoilhat/tinfoil-sms", "Date": "2013-08-06T01:26:15Z"},
{"Line": "=>826", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (originalNode instanceof netViewer.TwoSitesNodeHalving) { netViewer.TwoSitesNodeHalving original = ((netViewer.TwoSitesNodeHalving) (originalNode)); newNode = new netViewer.TwoSitesNodeHalving(originalNode.nodeId, original.getK(), original.getData()); }else { newNode = newNode(new java.lang.Integer(originalNode.nodeId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7853/buggy-version/NetViewer.src.netViewer.NetworkManager.java", "BodyUseAPI": ["netViewer.NetworkManager.newNode(java.lang.Integer)"], "Fixed commit": "0b53da7ea22ed9210c3c963a5be4e10d1fbc9ca9", "Url": "https://api.github.com/repos/alessiosarullo/SDRC", "Date": "2015-01-29T12:49:39Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f.isDirectory()) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3038/buggy-version/src.MoF.SaveLoader.java", "BodyUseAPI": [], "Fixed commit": "5305244a65ff5893380b9f32fc2f56a7239c26b1", "Url": "https://api.github.com/repos/skiphs/AMIDST", "Date": "2013-08-09T15:13:22Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAsyncSaveEnabled) { throw new java.lang.IllegalStateException(\"Asynchronous saving operation not supported.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3719/buggy-version/robospice-cache.src.com.octo.android.robospice.persistence.binary.InFileBigInputStreamObjectPersister.java", "BodyUseAPI": [], "Fixed commit": "ccb423d698d7d8b676a79ad4acd8e10d57ba78b2", "Url": "https://api.github.com/repos/ffgiraldez/robospice", "Date": "2012-12-13T12:38:31Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activeJob) != null) { otherAlg.addJob(activeJob); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3187/buggy-version/CPUSchedulingSimulator.src.com.jimweller.cpuscheduler.FCFSSchedulingAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "9ff8df7ff080e029f7d05f5e34606a5aecd984d5", "Url": "https://api.github.com/repos/jmasukaw/cs143a", "Date": "2013-03-10T22:30:45Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activeJob) != null) { otherAlg.addJob(activeJob); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3187/buggy-version/CPUSchedulingSimulator.src.com.jimweller.cpuscheduler.BasePriorityAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "9ff8df7ff080e029f7d05f5e34606a5aecd984d5", "Url": "https://api.github.com/repos/jmasukaw/cs143a", "Date": "2013-03-10T22:30:45Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entity instanceof org.bukkit.entity.Player) { ((org.bukkit.entity.Player) (entity)).sendMessage(\"Portal is not linked. Portaling aborted.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6536/buggy-version/src.com.minecarts.portalforge.PortalForge.java", "BodyUseAPI": [], "Fixed commit": "833a98c423995c249ea29a9cf260c230407bf13f", "Url": "https://api.github.com/repos/Minecarts/PortalForge", "Date": "2011-06-07T03:05:16Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.intellij.openapi.project.DumbService.getInstance(e.getProject()).isDumb()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8354/buggy-version/src.fr.adrienbrault.idea.symfony2plugin.SymfonyContainerTypeProvider.java", "BodyUseAPI": [], "Fixed commit": "d63eefc89e8f84e46f8b78e064d345f1f4f5e4a5", "Url": "https://api.github.com/repos/adrienbrault/idea-php-symfony2-plugin", "Date": "2013-04-07T22:53:10Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Utility.twoArgumentConnectors.get(word)) == null) { return new standard.engine.Command(Command.Type.badcomm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/224/buggy-version/src.main.java.input.parser.NLPparser.java", "BodyUseAPI": [], "Fixed commit": "944b532d637dda174dca4ebeded9b3bb2aac49ca", "Url": "https://api.github.com/repos/Rincewind95/Interactive-Fiction", "Date": "2017-02-28T22:51:59Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result[0]) > (MAX_DISTANCE_TO_START)) { com.ffeichta.runnergy.gui.message.ToastFactory.makeToast(this, getResources().getString(R.string.toast_not_at_start)); }else { start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6117/buggy-version/app.src.main.java.com.ffeichta.runnergy.gui.activities.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "ecebd87e528f5b3ffb3fb50af3a992b04e59da47", "Url": "https://api.github.com/repos/fafeichter/Runnergy", "Date": "2016-04-26T17:37:40Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.jahia.dm.DocumentManagement.instance) == null) { synchronized(org.jahia.dm.DocumentManagement.class) { if ((org.jahia.dm.DocumentManagement.instance) == null) { org.jahia.dm.DocumentManagement.instance = new org.jahia.dm.DocumentManagement(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/639/buggy-version/api.src.main.java.org.jahia.dm.DocumentManagement.java", "BodyUseAPI": [], "Fixed commit": "09a217acd4f17ca81ab2dfc6584401dbc13dcbb3", "Url": "https://api.github.com/repos/Jahia/document-management", "Date": "2015-08-14T09:25:46Z"},
{"Line": "=>461", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (buildJob) { return analysisJobBuilder.toAnalysisJob(); }else { return analysisJobBuilder.toAnalysisJob(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8709/buggy-version/src.main.java.org.pentaho.di.profiling.datacleaner.ModelerHelper.java", "BodyUseAPI": [], "Fixed commit": "2170f9064d94397402c2e85b52fdda65c771fa58", "Url": "https://api.github.com/repos/datacleaner/pdi-datacleaner", "Date": "2014-11-26T08:32:33Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkRecoveryForm()) { mAuth.sendPasswordResetEmail(email).addOnCompleteListener(new com.google.android.gms.tasks.OnCompleteListener<java.lang.Void>() { @java.lang.Override public void onComplete(@android.support.annotation.NonNull com.google.android.gms.tasks.Task<java.lang.Void> task) { if (task.isSuccessful()) { android.util.Log.d(com.example.jaineek.meeplemain.ForgotPasswordActivity.TAG, \"Password recovery email sent\"); android.widget.Toast.makeText(mContext, getString(R.string.toast_recovery_email), Toast.LENGTH_SHORT).show(); }else { mEmailAddress.setError(getString(R.string.error_invalid_email)); } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3702/buggy-version/MyApplication.app.src.main.java.com.example.jaineek.meeplemain.ForgotPasswordActivity.java", "BodyUseAPI": [], "Fixed commit": "344bbbc4c4dcd75dbd2b2a48d026926156e4673e", "Url": "https://api.github.com/repos/parikh20/Meeple", "Date": "2016-07-13T05:10:18Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tie) { return yyli.eecs481.hw2.MainActivity.GameStatus.TIE; }else { return yyli.eecs481.hw2.MainActivity.GameStatus.IN_PROGRESS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5842/buggy-version/TicTacToe.src.yyli.eecs481.hw2.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7a16cde8cefe5d24f995ae36546eb091735fd0be", "Url": "https://api.github.com/repos/yyli/EECS481.HW2", "Date": "2013-09-23T08:54:11Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["yyli.eecs481.hw2.MainActivity.TTTTileOnClickListener.getGameStatus()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (gStatus == (yyli.eecs481.hw2.MainActivity.GameStatus.TIE)) { statusText.setText(\"Tie :( Click reset to play again!\"); }else if (gStatus == (yyli.eecs481.hw2.MainActivity.GameStatus.X_WIN)) { statusText.setText(\"X Wins!!! Click reset to play again!\"); }else if (gStatus == (yyli.eecs481.hw2.MainActivity.GameStatus.O_WIN)) { statusText.setText(\"O Wins!!! Click reset to play again!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5842/buggy-version/TicTacToe.src.yyli.eecs481.hw2.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7a16cde8cefe5d24f995ae36546eb091735fd0be", "Url": "https://api.github.com/repos/yyli/EECS481.HW2", "Date": "2013-09-23T08:54:11Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.PsiElement.getComponentClassName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (componentClassName != null) { com.intellij.psi.PsiClass psiClass = ((cz.mikrobestie.idea.vaadin.declarative.psi.VDComponent) (element)).getComponentClass(); if (psiClass == null) { com.intellij.openapi.util.TextRange range = ((cz.mikrobestie.idea.vaadin.declarative.psi.VDComponent) (element)).getNameIdentifier().getTextRange(); holder.createErrorAnnotation(range, ((\"Compponent class \" + componentClassName) + \" not found\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1957/buggy-version/src.cz.mikrobestie.idea.vaadin.declarative.VDAnnotator.java", "BodyUseAPI": ["com.intellij.lang.annotation.AnnotationHolder.createErrorAnnotation(com.intellij.openapi.util.TextRange,java.lang.String)"], "Fixed commit": "b6998b68b8ca60a95f39e4b65627f8ea3a148f7c", "Url": "https://api.github.com/repos/mikrobestie/vaadin-declarative-plugin", "Date": "2016-02-26T22:19:54Z"},
{"Line": "=>516", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isChainNullable(alternate.getFirstSlot())) { changed |= head.getFirstSet().add(org.jgll.grammar.symbol.Epsilon.getInstance()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6910/buggy-version/src.org.jgll.grammar.GrammarBuilder.java", "BodyUseAPI": [], "Fixed commit": "eb5ddda750c13d788f6b3493b4a2efc029c70d0b", "Url": "https://api.github.com/repos/cwi-swat/iguana", "Date": "2013-11-05T23:45:37Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fillSchemaCombobox(customElementSelected)) == null) { customElementSelected.setVisible(false); customElementSelected.setEnabled(false); java.util.Iterator<com.constellio.app.ui.entities.MetadataSchemaVO> setIterator = occurence.getAllCustomMetadataSchemaOccurence().keySet().iterator(); selectedSchemaType = setIterator.next().getCode(); }else { customElementSelected.setVisible(true); customElementSelected.setEnabled(true); selectedSchemaType = null; reportComboBox.setValue(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5651/buggy-version/app.src.com.constellio.app.ui.framework.components.ReportTabButton.java", "BodyUseAPI": ["com.constellio.app.ui.framework.components.ComboBox.setEnabled(boolean)", "com.constellio.app.ui.framework.components.ComboBox.setVisible(boolean)", "com.constellio.app.ui.framework.components.ComboBox.setVisible(boolean)", "com.constellio.app.ui.framework.components.ComboBox.setEnabled(boolean)"], "Fixed commit": "23b878a82b4603a5b1d66164970cd7f228d93702", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2017-07-19T20:24:10Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (compteur == 1) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5651/buggy-version/app.src.com.constellio.app.ui.framework.components.ReportTabButton.java", "BodyUseAPI": [], "Fixed commit": "23b878a82b4603a5b1d66164970cd7f228d93702", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2017-07-19T20:24:10Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index < 0) { response.setStatus(HttpServletResponse.SC_NOT_FOUND); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1411/buggy-version/src.main.java.com.bluesky.visualprogramming.remote.http.MessageServlet.java", "BodyUseAPI": [], "Fixed commit": "c284afa50a65ae5e58a433e81f6344d605c9a9d0", "Url": "https://api.github.com/repos/jackhatedance/visual-programming", "Date": "2013-09-23T04:32:30Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(str)) { return str; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8853/buggy-version/src.main.java.org.wilson.world.dao.AbstractDAO.java", "BodyUseAPI": [], "Fixed commit": "f5493ffcbae32e3dfca98da3fb3523886aa076d7", "Url": "https://api.github.com/repos/liumiaowilson/world", "Date": "2016-08-22T01:31:55Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(warningString.isEmpty())) { root.put(\"warningMessage\", warningString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2319/buggy-version/Product.Controller.src.org.openremote.controller.servlet.AdministratorServlet.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.String)"], "Fixed commit": "d18134698b279defdc37c47699f9e4b165c32a8a", "Url": "https://api.github.com/repos/DomoTop/DomoTop", "Date": "2012-04-20T14:07:14Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ejercicio5.Carrito.removeProduct(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result) request.setAttribute(\"productDeleted\", java.lang.Integer.parseInt(ref));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7226/buggy-version/src.java.ejercicio5.ListarCarritoServlet.java", "BodyUseAPI": [], "Fixed commit": "3b8af11d761d32f52e904a728dd0c635a8df14de", "Url": "https://api.github.com/repos/sergio11/ejercicios_servlets", "Date": "2016-07-11T21:11:31Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isMarked(i, j)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2657/buggy-version/app.src.main.java.com.android.demineur.DemineurModel.java", "BodyUseAPI": [], "Fixed commit": "062c9710258846273c925d1913000fcc735283d3", "Url": "https://api.github.com/repos/anazeer/Demineur", "Date": "2015-12-22T14:47:21Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (chunkMessageQueue.isEmpty()) { for (gash.router.server.edges.EdgeInfo ei : Manager.getEdgeMonitor().getOutBoundEdges().map.values()) { if ((ei.isActive()) && ((ei.getChannel()) != null)) { Manager.getEdgeMonitor().sendMessage(createHB()); java.lang.System.out.println((\"sent hb to\" + (ei.getRef()))); (clusterSize)++; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4134/buggy-version/src.raft.LeaderState.java", "BodyUseAPI": [], "Fixed commit": "be4691caf85168978ea3ebab3b244b530dafcf01", "Url": "https://api.github.com/repos/sreekarmedarametla/Distributedfile", "Date": "2017-04-16T00:53:44Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { com.clt.conventionlogistictracker.NewsFragment newsFragment = new com.clt.conventionlogistictracker.NewsFragment(); android.support.v4.app.FragmentManager managerHome = getSupportFragmentManager(); managerHome.beginTransaction().replace(R.id.frame_content, newsFragment, newsFragment.getTag()).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6140/buggy-version/app.src.main.java.com.clt.conventionlogistictracker.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "4f9bc9bcf6fbb14c613c079b5e129e2740f3b300", "Url": "https://api.github.com/repos/CLTracker/CLT-mobileapp", "Date": "2017-05-01T19:06:41Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tdef instanceof org.overture.ast.definitions.ATypeDefinition) { if (!((tdef.getAccess().getAccess()) instanceof org.overture.ast.definitions.APublicAccess)) { issueHandler.addTypeWarning(tdef, \"Access specifier ignored. Global types are default public.\"); } tdef.getAccess().setAccess(new org.overture.ast.definitions.APublicAccess()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1897/buggy-version/core.typechecker.src.main.java.eu.compassresearch.core.typechecker.CollectGlobalStateClass.java", "BodyUseAPI": ["org.overture.ast.definitions.PDefinition.getAccess()", "tdef.getAccess().getAccess()", "org.overture.ast.definitions.PDefinition.getAccess()", "eu.compassresearch.core.typechecker.api.TypeIssueHandler.addTypeWarning(org.overture.ast.definitions.PDefinition,java.lang.String)", "tdef.getAccess().setAccess(org.overture.ast.definitions.APublicAccess)"], "Fixed commit": "4b6d5ce193a5804fb1ed5f48418fcf8efcc522bd", "Url": "https://api.github.com/repos/symphonytool/symphony", "Date": "2013-10-16T12:33:24Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRecords.size()) == 0) { return convertView; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6601/buggy-version/Contact.src.com.jiec.contact.MyRecordActivity.java", "BodyUseAPI": [], "Fixed commit": "56b9a6ed92f0f4168a337a0d9652fa87183bd288", "Url": "https://api.github.com/repos/WangMJ/JieC_Contact", "Date": "2014-09-25T01:01:56Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((dynamicField) != null) && (obj instanceof de.mhus.lib.adb.DbDynamic)) objValue = ((de.mhus.lib.adb.DbDynamic) (obj)).getValue(dynamicField); else objValue = attribute.get(obj);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/9072/buggy-version/mhu-lib-persistence.src.main.java.de.mhus.lib.adb.model.Field.java", "BodyUseAPI": ["de.mhus.lib.core.pojo.PojoAttribute<java.lang.Object>.get(java.lang.Object)"], "Fixed commit": "b2f6636c65ef3e550286674c5755d94701448faf", "Url": "https://api.github.com/repos/mhus/mhus-lib", "Date": "2016-11-22T16:29:58Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((response != null) && ((response.body()) != null)) tripView.setNextToArriveData(new org.septa.android.app.nextarrive.NextArrivalModelResponseParser(response.body()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2354/buggy-version/app.src.main.java.org.septa.android.app.favorites.FavoritesFragment.java", "BodyUseAPI": ["retrofit2.Response<org.septa.android.app.services.apiinterfaces.model.NextArrivalModelResponse>.body()", "org.septa.android.app.nextarrive.NextToArriveTripView.setNextToArriveData(org.septa.android.app.nextarrive.NextArrivalModelResponseParser)"], "Fixed commit": "3355a0b22bc5d9a2736f3686be2f5e2830b3da4d", "Url": "https://api.github.com/repos/septadev/SEPTA-Android", "Date": "2017-10-19T18:26:59Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentIndex) >= 0) { mehdi.sakout.fancybuttons.FancyButton prevSelect = ((mehdi.sakout.fancybuttons.FancyButton) (((com.google.android.flexbox.FlexboxLayout) (v.getParent())).getChildAt(currentIndex))); setBtnSelectStatus(prevSelect, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6157/buggy-version/app.src.main.java.ywcai.ls.control.flex.FlexButtonLayout.java", "BodyUseAPI": [], "Fixed commit": "0d27c985b5952f2e5baeeb86b48561a77b412324", "Url": "https://api.github.com/repos/ywcai/FlexButton", "Date": "2017-11-20T13:07:22Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentIndex) >= 0) { mehdi.sakout.fancybuttons.FancyButton prevSelect = ((mehdi.sakout.fancybuttons.FancyButton) (this.getChildAt(currentIndex))); setBtnSelectStatus(prevSelect, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6157/buggy-version/app.src.main.java.ywcai.ls.control.flex.FlexButtonLayout.java", "BodyUseAPI": [], "Fixed commit": "0d27c985b5952f2e5baeeb86b48561a77b412324", "Url": "https://api.github.com/repos/ywcai/FlexButton", "Date": "2017-11-20T13:07:22Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pushMessages) != null) { pushMessages.clear(); adapterTasksListView.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/994/buggy-version/app.src.main.java.com.sofac.fxmharmony.view.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "fc4fa29d7fb498e3c71049c8327a8d9c190b1964", "Url": "https://api.github.com/repos/UASoftwareFactory/FxmHarmony", "Date": "2017-05-31T11:37:52Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ktselvi.inspireme.FavQuotesActivity.getSupportFragmentManager()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((fm.findFragmentByTag(com.ktselvi.inspireme.FavQuotesActivity.FRAGMENT_TAG)) == null) { com.ktselvi.inspireme.fragments.FavouritesFragment quotesListFragment = new com.ktselvi.inspireme.fragments.FavouritesFragment(); ft.replace(R.id.fav_quotes_list_fragment_holder, quotesListFragment, com.ktselvi.inspireme.FavQuotesActivity.FRAGMENT_TAG).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7535/buggy-version/app.src.main.java.com.ktselvi.inspireme.FavQuotesActivity.java", "BodyUseAPI": ["ft.replace(R.id.fav_quotes_list_fragment_holder, quotesListFragment, com.ktselvi.inspireme.FavQuotesActivity.FRAGMENT_TAG).commit()", "android.support.v4.app.FragmentTransaction.replace(R.id.fav_quotes_list_fragment_holder,com.ktselvi.inspireme.fragments.FavouritesFragment,java.lang.String)"], "Fixed commit": "1f0d89fb04d7de10326c547ff81af26f409a0f51", "Url": "https://api.github.com/repos/ktselvi/InspireMe", "Date": "2017-03-09T14:40:41Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (command.getTarget().equals(\"Master\")) { for (edu.uci.eecs.wukong.framework.entity.Entity entity : entities) { configurationManager.sendMasterReport(command.getType(), new edu.uci.eecs.wukong.framework.entity.ConfigurationReport(edu.uci.eecs.wukong.framework.pipeline.ProgressionExtensionPoint.configuration.getDemoApplicationId(), entity)); java.lang.Thread.sleep(((command.getSeconds()) * 1000)); } }else { for (edu.uci.eecs.wukong.framework.entity.Entity entity : entities) { configurationManager.sendHueConfiguration(command.getType(), ((edu.uci.eecs.wukong.framework.entity.HueEntity) (entity))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8905/buggy-version/framework.src.main.java.edu.uci.eecs.wukong.framework.pipeline.ProgressionExtensionPoint.java", "BodyUseAPI": ["edu.uci.eecs.wukong.framework.entity.ConfigurationCommand.getType()", "java.lang.Thread.sleep(((command.getSeconds()) * 1000))", "edu.uci.eecs.wukong.framework.entity.ConfigurationCommand.getType()", "edu.uci.eecs.wukong.framework.entity.ConfigurationCommand.getSeconds()", "edu.uci.eecs.wukong.framework.manager.ConfigurationManager.sendMasterReport(command.getType(),edu.uci.eecs.wukong.framework.entity.ConfigurationReport)", "edu.uci.eecs.wukong.framework.manager.ConfigurationManager.sendHueConfiguration(command.getType(),edu.uci.eecs.wukong.framework.entity.Entity)"], "Fixed commit": "649ee6b4d2028587f9a701d0f4dcc8f35ed1b25c", "Url": "https://api.github.com/repos/HuangZhenQiu/Progression-Framework", "Date": "2015-01-12T02:44:15Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(be.ugent.oomo.groep12.studgent.utilities.LocationUtil.isGPSEnabled(this))) { android.widget.Toast.makeText(this, \"GPS is uitgeschakeld! Sommige functies zijn onbruikbaar.\", 10); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2697/buggy-version/src.be.ugent.oomo.groep12.studgent.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "77d0411e12ac88a599077106901a17b16ce8dad9", "Url": "https://api.github.com/repos/studgent/android", "Date": "2014-05-13T12:37:23Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (be.ugent.oomo.groep12.studgent.utilities.LocationUtil.isGPSEnabled(this)) { android.content.Intent intent = new android.content.Intent(this, be.ugent.oomo.groep12.studgent.activity.POIListActivity.class); intent.putExtra(\"filter\", true); startActivity(intent); }else { android.widget.Toast.makeText(this, \"GPS is niet beschikbaar!\", 20); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2697/buggy-version/src.be.ugent.oomo.groep12.studgent.activity.ChallengeActivity.java", "BodyUseAPI": [], "Fixed commit": "77d0411e12ac88a599077106901a17b16ce8dad9", "Url": "https://api.github.com/repos/studgent/android", "Date": "2014-05-13T12:37:23Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useLatch) { try { latch.await(); } catch (java.lang.InterruptedException e1) { e1.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/522/buggy-version/EntrainerFX.src.main.java.net.sourceforge.entrainer.guitools.GuiUtil.java", "BodyUseAPI": [], "Fixed commit": "e3c69b926dc81beff7b3bbf7bc1d0a2302bb665c", "Url": "https://api.github.com/repos/mrstampy/EntrainerFX", "Date": "2015-03-13T02:53:34Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useLatch) latch.countDown();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/522/buggy-version/EntrainerFX.src.main.java.net.sourceforge.entrainer.guitools.GuiUtil.java", "BodyUseAPI": [], "Fixed commit": "e3c69b926dc81beff7b3bbf7bc1d0a2302bb665c", "Url": "https://api.github.com/repos/mrstampy/EntrainerFX", "Date": "2015-03-13T02:53:34Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((futures[i]) != null) futures[i].get();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/9053/buggy-version/src.bacter.model.ACGLikelihood.java", "BodyUseAPI": ["java.util.concurrent.Future<?>.get()"], "Fixed commit": "53c0658cde178c06540d3875057b3f7be9b854dc", "Url": "https://api.github.com/repos/tgvaughan/bacter", "Date": "2015-03-27T04:32:32Z"},
{"Line": "=>558", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.csstudio.opibuilder.widgets.editparts.XYGraphEditPart.getPV(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (pv != null) { for (org.epics.vtype.VType o : pv.getAllBufferedValues()) { setYValue(trace, dataProvider, o); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4011/buggy-version/applications.opibuilder.opibuilder-plugins.org.csstudio.opibuilder.widgets.src.org.csstudio.opibuilder.widgets.editparts.XYGraphEditPart.java", "BodyUseAPI": ["org.csstudio.simplepv.IPV.getAllBufferedValues()"], "Fixed commit": "0c7fd1385ffd7afdeb44741fa0be4d439ce1a948", "Url": "https://api.github.com/repos/css-iter/cs-studio", "Date": "2015-05-22T13:43:42Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fs.isAccepted()) { com.dant.business.User friend = userDAO.getOne(com.dant.business.User.class, \"email\", fs.getFriendDest().getEmail()); if (friend != null) friendsDTO.add(friend.toDTO()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/622/buggy-version/src.main.java.com.dant.business.FriendshipBusiness.java", "BodyUseAPI": ["fs.getFriendDest().getEmail()", "com.dant.business.Friendship.getFriendDest()", "com.dant.dao.DAO<com.dant.business.User>.getOne(java.lang.Class,java.lang.String,fs.getFriendDest().getEmail())"], "Fixed commit": "f2e5557764095b9f2156c1ca95bba7ef2cf4ac86", "Url": "https://api.github.com/repos/L3-DANT/Stalker", "Date": "2017-05-11T12:09:09Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.crowsofwar.avatar.common.data.Bender.get(net.minecraft.entity.EntityLivingBase)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (bender != null) { bender.getPerformance().modifyScore(com.crowsofwar.avatar.common.bending.BattlePerformanceScore.SCORE_MOD_LARGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/208/buggy-version/src.main.java.com.crowsofwar.avatar.common.bending.BattlePerformanceScore.java", "BodyUseAPI": ["bender.getPerformance().modifyScore(double)", "com.crowsofwar.avatar.common.data.Bender.getPerformance()"], "Fixed commit": "dc281dfde5042e3469dae42a7d570b4cb5c1fb00", "Url": "https://api.github.com/repos/ProjectKorra/AvatarMod", "Date": "2017-12-11T02:32:55Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.moduleName) == null) { return this.name; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4555/buggy-version/simplity.kernel.src.main.java.org.simplity.kernel.db.Sql.java", "BodyUseAPI": [], "Fixed commit": "0dce9b58e31f157cbda55917a6c9e4f35473b19b", "Url": "https://api.github.com/repos/simplity/simplity", "Date": "2017-02-23T08:51:58Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (activity == null) { mActivity = null; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8076/buggy-version/library.src.main.java.ru.terrakok.cicerone.android.navigator.FragmentActivityNavigatorImpl.java", "BodyUseAPI": [], "Fixed commit": "7620c9bba9a60ff6d1dff019a18908a5ab213ea8", "Url": "https://api.github.com/repos/IlyaPavlovskii/Cicerone", "Date": "2017-11-15T08:35:46Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["term_comp_lvalue_only.getChildren().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((term_comp_tail.getChildren().size()) != 1) { java.lang.String term_comp_tail_type = returnTypeExpr(term_comp_tail.getChildren().get(1)); java.lang.System.out.println(varTable.lookUp(id.getTokenLiteral()).getTypeName()); java.lang.String rhsType = convertArrays(typeTable.getSuperType(term_comp_tail_type)); java.lang.System.out.println(rhsType); isCorrect = isCorrect && (varTable.lookUp(id.getTokenLiteral()).getTypeName().equals(rhsType)); if (!isCorrect) java.lang.System.out.println(\"fuck2\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/9231/buggy-version/proj_phase_1.src.SemanticChecker.java", "BodyUseAPI": ["ParseTree.getChildren()", "SemanticChecker.returnTypeExpr(term_comp_tail.getChildren().get(1))", "term_comp_tail.getChildren().get(int)"], "Fixed commit": "0ac140e38299a2e8a6e20a6da7bad189a3a9d82e", "Url": "https://api.github.com/repos/raghavkaul/TigerCompiler", "Date": "2015-11-11T22:30:13Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.compareTo(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (compResult == 0) return o1.getKey().compareTo(o2.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7002/buggy-version/MP1.java", "BodyUseAPI": [], "Fixed commit": "41b18a0cd1b5a500a946a43bb0a63c499c1109a0", "Url": "https://api.github.com/repos/rjonczy/cloudapp-mp1", "Date": "2015-09-04T22:41:30Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.getBytes(jp.co.canon_its.capl.canoaid.Converter.getConverter().outputCharsetName)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((bytes.length) > 65) { java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream(); baos.write(bytes, 0, 65); source = baos.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/123/buggy-version/src.jp.co.canon_its.capl.canoaid.blockLine.BlockLine00402Source.java", "BodyUseAPI": ["java.io.ByteArrayOutputStream.write(byte[],int,int)"], "Fixed commit": "21985644bfe9e49da0d0b2543461c31ac5057300", "Url": "https://api.github.com/repos/kamedatatsuya/CanoAidConverter", "Date": "2015-06-09T22:49:26Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.ObjectInputStream.readObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (msg.startsWith(\"X\")) { }else { ConsoleOutput.setText(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/97/buggy-version/buildonv3.buildonv3.onlineGame5.java", "BodyUseAPI": ["javax.swing.JTextArea.setText(java.lang.String)"], "Fixed commit": "33723697772461ba6ad0099c484d3c85b923bc7a", "Url": "https://api.github.com/repos/MichaelMarron/BlackJack", "Date": "2013-05-01T14:41:20Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["models.TableKeyValue.find(\"byKLike\", ((\"%\" + uri) + \"%\")).first()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (descripcionTabla != null) descripcion = descripcionTabla.value; else play.Logger.error((\"No encontrado el tipo de documento en BBDD con uri: \" + uri));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2884/buggy-version/fap.app.services.VerificarDocumentacionService.java", "BodyUseAPI": [], "Fixed commit": "d3099cf1af384255f6374e524b5cee58130e1acb", "Url": "https://api.github.com/repos/FAP-Team/Fap-Module", "Date": "2012-07-13T17:17:42Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["models.TableKeyValue.find(\"byKLike\", ((\"%\" + uri) + \"%\")).first()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (descripcionTabla != null) descripcion = descripcionTabla.value; else play.Logger.error((\"No encontrado el tipo de documento en BBDD con uri: \" + uri));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2884/buggy-version/fap.app.services.VerificarDocumentacionService.java", "BodyUseAPI": [], "Fixed commit": "d3099cf1af384255f6374e524b5cee58130e1acb", "Url": "https://api.github.com/repos/FAP-Team/Fap-Module", "Date": "2012-07-13T17:17:42Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["models.TableKeyValue.find(\"byKLike\", ((\"%\" + uri) + \"%\")).first()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (descripcionTabla != null) descripcion = descripcionTabla.value; else play.Logger.error((\"No encontrado el tipo de documento en BBDD con uri: \" + uri));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2884/buggy-version/fap.app.services.VerificarDocumentacionService.java", "BodyUseAPI": [], "Fixed commit": "d3099cf1af384255f6374e524b5cee58130e1acb", "Url": "https://api.github.com/repos/FAP-Team/Fap-Module", "Date": "2012-07-13T17:17:42Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.aha.actioncenter.utility.Utility.getInstance(mContext).isNetworkAvailable(activity))) { cancel(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5637/buggy-version/app.src.main.java.org.aha.actioncenter.service.PdfDownloadAsyncTask.java", "BodyUseAPI": [], "Fixed commit": "51ff0a7a51c997eeda15231d0973527d5a666f86", "Url": "https://api.github.com/repos/AmericanHospitalAssociation/Action-Center-Android", "Date": "2015-05-04T11:17:53Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (maxElements <= 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6528/buggy-version/src.main.java.org.threadly.concurrent.collections.DynamicDelayQueue.java", "BodyUseAPI": [], "Fixed commit": "10fcc6107f368ff3cfb23c27ce641f2584c746df", "Url": "https://api.github.com/repos/jentfoo/threadly", "Date": "2013-05-24T00:14:25Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Document.getElementById(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (summaryElement != null) { summary = summaryElement.child(1).text(); com.zis.common.capture.DangDangBookMetadataCapture.logger.debug(\"[\u6570\u636e\u6293\u53d6-\u5f53\u5f53\u7f51] \u6458\u8981={}\", summary); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4205/buggy-version/src.main.java.com.zis.common.capture.DangDangBookMetadataCapture.java", "BodyUseAPI": ["org.jsoup.nodes.Element.child(int)", "summaryElement.child(1).text()"], "Fixed commit": "11e482503eded4055f7cb519437ec096cbcded23", "Url": "https://api.github.com/repos/xabaohui/zis", "Date": "2016-07-15T08:14:21Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Document.getElementById(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (catalogElement != null) { catalog = catalogElement.child(1).child(2).text(); com.zis.common.capture.DangDangBookMetadataCapture.logger.debug(\"[\u6570\u636e\u6293\u53d6-\u5f53\u5f53\u7f51] \u76ee\u5f55={}\", catalog); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4205/buggy-version/src.main.java.com.zis.common.capture.DangDangBookMetadataCapture.java", "BodyUseAPI": ["org.jsoup.nodes.Element.child(int)", "catalogElement.child(1).child(2).text()", "catalogElement.child(1).child(int)"], "Fixed commit": "11e482503eded4055f7cb519437ec096cbcded23", "Url": "https://api.github.com/repos/xabaohui/zis", "Date": "2016-07-15T08:14:21Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cards.size()) == 0) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3918/buggy-version/src.main.java.edu.neumont.teamgift.clue.cards.Dealer.java", "BodyUseAPI": [], "Fixed commit": "60ad0b5fb1e0a4b39731ef3a2f822e8aa2b0a167", "Url": "https://api.github.com/repos/Jaden-Giordano/CSC110-Clue", "Date": "2016-11-20T01:10:23Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item.getType()) == (org.bukkit.Material.SKULL_ITEM)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2207/buggy-version/src.main.java.net.kaikk.mc.fr.EventListener.java", "BodyUseAPI": [], "Fixed commit": "fd93731d7cfe2236f4f40c0896ff285595e15026", "Url": "https://api.github.com/repos/KaiKikuchi/ForgeRestrictor", "Date": "2016-09-06T02:57:51Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.booleanValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!val) { return; }else { workspace.add(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3961/buggy-version/src.main.java.de.onyxbits.scenepainter.gui.DialogFrame.java", "BodyUseAPI": [], "Fixed commit": "c60afa99c6f40d0b553365430727b93f1fd68006", "Url": "https://api.github.com/repos/onyxbits/ScenePainter", "Date": "2011-03-10T23:32:16Z"},
{"Line": "=>456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((value.length()) > 1) { int start = 0; while ((((start + 1) < (value.length())) && ((value.charAt(start)) == '\\\\')) && ((value.charAt((start + 1))) == ' ')) { start += 2; } int end = (value.length()) - 1; while ((((end - 1) > 0) && ((value.charAt((end - 1))) == '\\\\')) && ((value.charAt(end)) == ' ')) { end -= 2; } if ((start > 0) || (end < ((value.length()) - 1))) { value = value.substring(start, (end + 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3069/buggy-version/core.src.main.java.org.bouncycastle.asn1.x500.style.IETFUtils.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.charAt(int)", "java.lang.String.length()", "java.lang.String.charAt(int)", "java.lang.String.substring(int,int)", "java.lang.String.charAt(int)", "java.lang.String.charAt(int)", "java.lang.String.length()"], "Fixed commit": "8a9b1b185777f48acd8fca370057e9ff15fb2bf1", "Url": "https://api.github.com/repos/bcgit/bc-java", "Date": "2015-02-17T03:49:45Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((card.getFace()) == (Card.Face.Ace)) && (sawAnAce == false)) { value += blackjack.Game.calculateCardValue(card, true); sawAnAce = true; }else if (((card.getFace()) == (Card.Face.Ace)) && (sawAnAce == true)) { value += blackjack.Game.calculateCardValue(card, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4136/buggy-version/Game.java", "BodyUseAPI": ["blackjack.Game.calculateCardValue(blackjack.Card,boolean)", "blackjack.Game.calculateCardValue(blackjack.Card,boolean)", "blackjack.Card.getFace()"], "Fixed commit": "42ff1a3b14a2051bf429576b15f9a3344177d878", "Url": "https://api.github.com/repos/parkrbrown/blackjack", "Date": "2013-12-17T03:45:07Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (msg != null) { for (base.client.Client client : base.SchoolarServer.clientList) { base.SchoolarServer.buffer.addToBuffer(\"popup\", msg, client.getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5699/buggy-version/infoKupProcessServer.src.base.SchoolarServer.java", "BodyUseAPI": ["base.util.Buffer.addToBuffer(java.lang.String,java.lang.String,client.getName())"], "Fixed commit": "624238a7b499c26520ba6d39794d4a4ef7975616", "Url": "https://api.github.com/repos/Nicba1010/InfoKup", "Date": "2014-03-15T20:50:41Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8591/buggy-version/IGoOut.src.hr.android.petkovic.igoout.activity.LocationActivity.java", "BodyUseAPI": [], "Fixed commit": "03c9d9644acbc2b4a62bfb02854783265a8db4e7", "Url": "https://api.github.com/repos/tnovoselec/iGoOutAndroid", "Date": "2013-09-07T21:59:48Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.alliknow.podcatcher.model.EpisodeManager.getResumeAt(net.alliknow.podcatcher.model.types.Episode)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (resumeAt > (getCurrentPosition())) player.seekTo(resumeAt); else playNext();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6358/buggy-version/src.net.alliknow.podcatcher.services.PlayEpisodeService.java", "BodyUseAPI": ["android.media.MediaPlayer.seekTo(int)"], "Fixed commit": "10911178ea8ea245d5091eb8837b31584fee0cbe", "Url": "https://api.github.com/repos/salema/PodCatcher-Deluxe-Android", "Date": "2014-01-06T10:31:58Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) instanceof io.FlowDetailedClient) return super.generateFileString(url);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3125/buggy-version/src.main.java.io.FlowClient.java", "BodyUseAPI": [], "Fixed commit": "a169847e2b44fff7cca3a38272977c6294c6e175", "Url": "https://api.github.com/repos/weeha/rt-traffic-viewer", "Date": "2017-07-07T10:31:36Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((searchView) != null) savedInstanceState.putString(Constants.SavedInstanceState.Characters.LAST_ITEM_SEARCHED, java.lang.String.valueOf(searchView.getQuery()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2372/buggy-version/app.src.main.java.marvel.erickmaeda.com.marvelcharacters.ui.activities.CharactersActivity.java", "BodyUseAPI": [], "Fixed commit": "f09a80e61a6a709a7f32f5805dad1207570e9f63", "Url": "https://api.github.com/repos/ErickMaeda/Marvel-Characters", "Date": "2016-08-29T01:21:13Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((lastItemSearched) != null) && (!(lastItemSearched.equals(\"\")))) searchView.setQuery(lastItemSearched, false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2372/buggy-version/app.src.main.java.marvel.erickmaeda.com.marvelcharacters.ui.activities.CharactersActivity.java", "BodyUseAPI": ["android.support.v7.widget.SearchView.setQuery(java.lang.String,boolean)"], "Fixed commit": "f09a80e61a6a709a7f32f5805dad1207570e9f63", "Url": "https://api.github.com/repos/ErickMaeda/Marvel-Characters", "Date": "2016-08-29T01:21:13Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(started)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8620/buggy-version/game_server.src.com.csharp.game.server.ServerGame.java", "BodyUseAPI": [], "Fixed commit": "ff59d671d0722daf4b5a6ee6d2ce0ce16e7cf281", "Url": "https://api.github.com/repos/S3GroepC2017/RythemDiscord", "Date": "2017-12-18T09:51:46Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mTaskList.size()) > 0) { mTaskList.remove(position); notifyItemRemoved(position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4788/buggy-version/app.src.main.java.com.kopsa.countdowns.TasksAdapter.java", "BodyUseAPI": ["java.util.ArrayList<com.kopsa.countdowns.Task>.remove(int)"], "Fixed commit": "6fec2f47bbaa37c9afb647eafe66f5d4c67e8937", "Url": "https://api.github.com/repos/kkopsa/countdowns", "Date": "2016-06-28T17:40:12Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (hourOfDay > 12) { time = java.lang.String.valueOf((hourOfDay - 12)); }else { time = java.lang.String.valueOf(hourOfDay); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4788/buggy-version/app.src.main.java.com.kopsa.countdowns.CreateTaskActivity.java", "BodyUseAPI": ["java.lang.String.valueOf(int)", "java.lang.String.valueOf(int)"], "Fixed commit": "6fec2f47bbaa37c9afb647eafe66f5d4c67e8937", "Url": "https://api.github.com/repos/kkopsa/countdowns", "Date": "2016-06-28T17:40:12Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == ((titleAdapter.getCount()) - 1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8800/buggy-version/MultiTreeListViewLibrary.src.com.shawn.multilistview.library.MultiListViewController.java", "BodyUseAPI": [], "Fixed commit": "5237b429cd484bf63984beac7b5f0a8b02f4da8d", "Url": "https://api.github.com/repos/ShawnDongAi/MultiTreeListView", "Date": "2015-06-17T07:46:29Z"},
{"Line": "=>1679", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gpsMap.markSet) != null) { gpsMap.markSet.save(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7942/buggy-version/src.GPSTileMap.java", "BodyUseAPI": ["GPSTileMap.GPSMap.MarkSet.save()"], "Fixed commit": "26ad5b7ab4cfaeb098004a9bcde3977bc9edaa90", "Url": "https://api.github.com/repos/wholder/GPSTileMap", "Date": "2015-12-14T03:04:15Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timeout > (-1)) { url += \"&timeout=\" + timeout; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8888/buggy-version/src.main.java.io.iron.ironmq.Queue.java", "BodyUseAPI": [], "Fixed commit": "937179f1a210f009488f0f25eb710bd2596acc65", "Url": "https://api.github.com/repos/featalion/iron_mq_java", "Date": "2013-04-09T14:55:34Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.menuVisible) { doAnimation(this.fromTempX, 0); }else { doAnimation(0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1938/buggy-version/app.src.main.java.de.huk_coburg.tdp.listeners.ItemOnTouchListener.java", "BodyUseAPI": [], "Fixed commit": "373bedba684996e4bdf77837b1e5104ac4eec2e7", "Url": "https://api.github.com/repos/MKariton/aTDP", "Date": "2017-02-08T11:34:38Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cells.containsKey(key))) { com.acme.tictactoe.model.Player playerThatMoved = model.mark(row, col); cells.put(key, (playerThatMoved == null ? null : playerThatMoved.toString())); winner.set(((model.getWinner()) == null ? null : model.getWinner().toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5787/buggy-version/app.src.main.java.com.acme.tictactoe.viewmodel.TicTacToeViewModel.java", "BodyUseAPI": ["android.databinding.ObservableArrayMap<java.lang.String, java.lang.String>.put(java.lang.String,(playerThatMoved == null ? null : playerThatMoved.toString()))"], "Fixed commit": "8134bb8204fd2ce5e2f68f50802f8e2b1d4aa521", "Url": "https://api.github.com/repos/swami701/ticTacToe", "Date": "2017-03-12T15:28:50Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getNormal().isLooping) { setPadColorToDefault(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3647/buggy-version/app.src.main.java.com.bedrock.padder.model.GesturePad.java", "BodyUseAPI": [], "Fixed commit": "ce8aa58cc71153d3bbd0e49e11c410f2e1f464cc", "Url": "https://api.github.com/repos/berict/Tapad", "Date": "2017-07-19T01:31:43Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.isLooping) == false) { this.isLooping = true; play(); }else { this.isLooping = false; stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3647/buggy-version/app.src.main.java.com.bedrock.padder.model.Sound.java", "BodyUseAPI": [], "Fixed commit": "ce8aa58cc71153d3bbd0e49e11c410f2e1f464cc", "Url": "https://api.github.com/repos/berict/Tapad", "Date": "2017-07-19T01:31:43Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getNormal().isLooping) { setPadColorToDefault(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3647/buggy-version/app.src.main.java.com.bedrock.padder.model.Pad.java", "BodyUseAPI": [], "Fixed commit": "ce8aa58cc71153d3bbd0e49e11c410f2e1f464cc", "Url": "https://api.github.com/repos/berict/Tapad", "Date": "2017-07-19T01:31:43Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((p.Rij) < (clusterSequence.sq(p.RiC1))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7366/buggy-version/clusterSequence.java", "BodyUseAPI": [], "Fixed commit": "3ed202941226185621673933b6428a13f7a0468e", "Url": "https://api.github.com/repos/ivankp/n2jet_java", "Date": "2015-04-24T20:56:30Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lol.LOLParser.getTask(userInput)) == null) { return lol.LOLControl.executeInvalid(userInput); }else { lol.Task newTask = lol.LOLParser.getTask(userInput); if (lol.LOLControl.storageList.add(newTask)) { lol.History.undoAdd(newTask); lol.ControlDisplay.refreshDisplay(lol.LOLControl.storageList); lol.LOLStorage.save(); return lol.LOLControl.showFeedback(newTask, Constants.COMMAND_ADD); }else return lol.LOLControl.executeInvalid(userInput); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/221/buggy-version/LifeOnLine.src.lol.LOLControl.java", "BodyUseAPI": ["lol.LOLParser.getTask(java.lang.String)", "lol.LOLControl.executeInvalid(java.lang.String)", "lol.LOLControl.executeInvalid(java.lang.String)"], "Fixed commit": "92e7c16bc23dd9469be42843d15609e4fb081d33", "Url": "https://api.github.com/repos/cs2103-t10-1j/main", "Date": "2014-10-19T10:04:00Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(queue.isEmpty())) { queue.remove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2430/buggy-version/Client.src.edu.lamar.client.CarClient.java", "BodyUseAPI": ["java.util.Queue<java.lang.Integer>.remove()"], "Fixed commit": "e5f561e0260d573000454f8de124ffade8db642c", "Url": "https://api.github.com/repos/amod0017/lamport-mutual-exclusion-algorithm-implementaion", "Date": "2016-04-13T00:13:19Z"},
{"Line": "=>1225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["haven.Maid.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((realCoord.get(0).x) == (player.getc().x)) && ((realCoord.get(0).y) == (player.getc().y))) realCoord.remove(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4568/buggy-version/src.haven.Maid.java", "BodyUseAPI": ["java.util.List<haven.Coord>.remove(int)"], "Fixed commit": "5dbb688389fee1dd1adb5a885c0af63a799e90f5", "Url": "https://api.github.com/repos/romovs/Haven-and-Hearth-Client", "Date": "2014-01-26T13:13:12Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((weather.wind.speed) != null) builder.append(weather.wind.speed.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6159/buggy-version/src.org.starlo.climate.DetailWeatherFragment.java", "BodyUseAPI": ["java.lang.StringBuilder.append(weather.wind.speed.toString())", "weather.wind.speed.toString()"], "Fixed commit": "1da8580952f1fc02efcc6af4e23cf7984b287542", "Url": "https://api.github.com/repos/blakewford/climate", "Date": "2016-03-15T16:32:16Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((weather.wind.gust) != null) builder.append(\" gusting to \").append(weather.wind.gust.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6159/buggy-version/src.org.starlo.climate.DetailWeatherFragment.java", "BodyUseAPI": ["weather.wind.gust.toString()", "java.lang.StringBuilder.append(weather.wind.gust.toString())"], "Fixed commit": "1da8580952f1fc02efcc6af4e23cf7984b287542", "Url": "https://api.github.com/repos/blakewford/climate", "Date": "2016-03-15T16:32:16Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.sf.memoranda.ui.SummaryManager.computeTotalTimeEstimation()) == 0) { net.sf.memoranda.ui.SummaryPanel.projectTable.setValueAt(0, 1, 1); }else net.sf.memoranda.ui.SummaryPanel.projectTable.setValueAt(df.format(((((float) (net.sf.memoranda.ui.SummaryManager.getLOCEstimate())) / (net.sf.memoranda.ui.SummaryManager.computeTotalTimeEstimation())) * 60)), 1, 1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8818/buggy-version/src.net.sf.memoranda.ui.SummaryPanel.java", "BodyUseAPI": [], "Fixed commit": "10d5baaf276b2a83e32578bc62b710ca04d41b27", "Url": "https://api.github.com/repos/ser316asu/Pankow_SER316", "Date": "2017-04-16T07:06:16Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (originend == (-1)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1911/buggy-version/src.main.java.treelang.parser.RuleParser.java", "BodyUseAPI": [], "Fixed commit": "cd1518b713b22f691bd0b3e86a771a3e79884a8c", "Url": "https://api.github.com/repos/erictapen/treelang", "Date": "2016-08-02T22:05:36Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((line.length()) > 10) { WiFi_data.WiFi_Scan wi = WiFi_data.WiFi_Scan.init_from_46_csv_file(line); if (wi.is_is_wifi_scan()) { this.add(wi); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8729/buggy-version/src.WiFi_data.WiFi_Scans.java", "BodyUseAPI": [], "Fixed commit": "c1d3a403c332da34dbaa81f5e2eb694c1c869d08", "Url": "https://api.github.com/repos/benmoshe/OOP_Exe", "Date": "2017-12-07T18:35:56Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.anba.es6draft.runtime.AbstractOperations.ToPropertyKey(com.github.anba.es6draft.runtime.ExecutionContext,java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (key instanceof java.lang.String) { desc = obj.getOwnProperty(cx, ((java.lang.String) (key))); }else { assert key instanceof com.github.anba.es6draft.runtime.types.Symbol; desc = obj.getOwnProperty(cx, ((com.github.anba.es6draft.runtime.types.Symbol) (key))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1961/buggy-version/src.main.java.com.github.anba.es6draft.runtime.modules.Reflect.java", "BodyUseAPI": [], "Fixed commit": "30e5ca6a1b4d3b259679de69e24c57f36592336b", "Url": "https://api.github.com/repos/anba/es6draft", "Date": "2013-05-16T12:19:53Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ListIterator<visitors.Play>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((p.getPlayType()) instanceof visitors.Rebound) { currentPossession.addPlay(p); madeShot = false; missedFirstFT = false; period.addPossession(currentPossession); currentPossession = new visitors.Possession(); }else if (p.getPlayType().terminatesPossession()) { period.addPossession(currentPossession); currentPossession = new visitors.Possession(); madeShot = false; missedFirstFT = false; currentPossession.addPlay(p); assignTeamRoles(); if ((p.getPlayType()) instanceof visitors.Turnover) { if (!(checkForPlay(new playChecker.StealChecker(), p.getPlayID(), currentPossession))) { if (playIterator.hasNext()) { visitors.Play tempPlayer = playIterator.next(); if (checkSteal(tempPlayer, p.getPlayID(), new playChecker.StealChecker())) { currentPossession.addPlay(tempPlayer); }else { playIterator.previous(); } } } } period.addPossession(currentPossession); currentPossession = new visitors.Possession(); }else { period.addPossession(currentPossession); currentPossession = new visitors.Possession(); madeShot = false; missedFirstFT = false; currentPossession.addPlay(p); if ((p.getPlayType()) instanceof visitors.Shot) { madeShot = !(p instanceof visitors.MissedPlay); } if (p.identifiesOffense()) { assignTeamRoles(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7964/buggy-version/CodeGenerator.src.visitors.PossessionVisitor.java", "BodyUseAPI": ["visitors.Play.getPlayID()", "visitors.Play.getPlayType()", "visitors.Possession.addPlay(visitors.Play)", "visitors.Possession.addPlay(visitors.Play)", "visitors.Play.getPlayType()", "visitors.PossessionVisitor.checkSteal(visitors.Play,p.getPlayID(),playChecker.StealChecker)", "visitors.PossessionVisitor.checkForPlay(playChecker.StealChecker,p.getPlayID(),visitors.Possession)", "visitors.Play.getPlayID()", "visitors.Possession.addPlay(visitors.Play)", "visitors.Play.identifiesOffense()", "p.getPlayType().terminatesPossession()", "visitors.Play.getPlayType()"], "Fixed commit": "49b53042cdeca36c7d73ee6163696a7d8625e437", "Url": "https://api.github.com/repos/Respectable/PBPCompilerV2", "Date": "2013-08-07T03:12:50Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((transactionType != (org.killbill.billing.payment.api.TransactionType.AUTHORIZE)) && (((transactionToComplete.getTransactionStatus()) == (org.killbill.billing.payment.api.TransactionStatus.SUCCESS)) || ((transactionToComplete.getTransactionStatus()) == (org.killbill.billing.payment.api.TransactionStatus.PAYMENT_FAILURE)))) { return getPayment(paymentId, true, properties, callContext, internalCallContext); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/9087/buggy-version/payment.src.main.java.org.killbill.billing.payment.core.PaymentProcessor.java", "BodyUseAPI": [], "Fixed commit": "45faa83d9cf93de6e02d1c8d87e7715929b6cfb5", "Url": "https://api.github.com/repos/unieagle/killbill", "Date": "2016-11-01T18:22:01Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((challengeModel.getChallenge()) instanceof logic.ChallengeHard) labelTimeQuestion.setText(\"15\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6228/buggy-version/src.gui.GameModeWindow.java", "BodyUseAPI": [], "Fixed commit": "0269e3401aafe304f77f5283b18fdc1b51fa57bc", "Url": "https://api.github.com/repos/PortuguesDoSeculoXXI/PortuguesDoSeculoXXI", "Date": "2014-12-06T21:41:34Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((challengeModel.getChallenge()) instanceof logic.ChallengeHard) labelTimeQuestion = new javax.swing.JLabel(\"15\"); else labelTimeQuestion = new javax.swing.JLabel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6228/buggy-version/src.gui.GameModeWindow.java", "BodyUseAPI": [], "Fixed commit": "0269e3401aafe304f77f5283b18fdc1b51fa57bc", "Url": "https://api.github.com/repos/PortuguesDoSeculoXXI/PortuguesDoSeculoXXI", "Date": "2014-12-06T21:41:34Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.crafting.getItem()) instanceof com.bafomdad.realfilingcabinet.api.IFolder) { for (int i = 0; i < (event.craftMatrix.getSizeInventory()); i++) { net.minecraft.item.ItemStack container = event.craftMatrix.getStackInSlot(i); if ((container != null) && (!((container.getItem()) instanceof com.bafomdad.realfilingcabinet.api.IFolder))) { event.craftMatrix.setInventorySlotContents(i, null); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1204/buggy-version/com.bafomdad.realfilingcabinet.crafting.FolderExtractRecipe.java", "BodyUseAPI": ["event.craftMatrix.getStackInSlot(int)", "event.craftMatrix.getSizeInventory()", "event.craftMatrix.setInventorySlotContents(int,<nulltype>)"], "Fixed commit": "4e9d734b5a95d73b806411ddf13620322f9d246a", "Url": "https://api.github.com/repos/bafomdad/realfilingcabinet", "Date": "2016-12-23T12:50:47Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((uncraftIn.getStackInSlot(0).getCount()) == 0) uncraftIn.setInventorySlotContents(0, ItemStack.EMPTY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8685/buggy-version/src.main.java.org.jglrxavpok.mods.decraft.inventory.ContainerUncraftingTable.java", "BodyUseAPI": ["net.minecraft.inventory.InventoryCrafting.setInventorySlotContents(int,ItemStack.EMPTY)"], "Fixed commit": "b27b99602dd771bdc5c29340ae0001ffab879b5c", "Url": "https://api.github.com/repos/crazysnailboy/UncraftingTable", "Date": "2017-03-08T12:46:27Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((remito.getProductoArticuloList()) != null) { remito.getProductoArticuloList().size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/452/buggy-version/CoreGestionTextilLevel.src.ar.com.textillevel.dao.impl.RemitoEntradaDAO.java", "BodyUseAPI": ["ar.com.textillevel.entidades.documentos.remito.RemitoEntrada.getProductoArticuloList()", "remito.getProductoArticuloList().size()"], "Fixed commit": "4a1e6ec26fa2fdfb35ae5eff41d68d0812cb89c3", "Url": "https://api.github.com/repos/nacho270/GTL", "Date": "2017-01-23T20:43:09Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((callofcactus.GameInitializer.instance) == null) callofcactus.GameInitializer.instance = new callofcactus.GameInitializer();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5847/buggy-version/src.main.java.callofcactus.GameInitializer.java", "BodyUseAPI": [], "Fixed commit": "e4860b88ec315317a05d8adb548cdd052b65d092", "Url": "https://api.github.com/repos/GuusHamm/Call-of-Cactus", "Date": "2016-01-04T12:50:40Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((m_y) == 1) java.lang.System.out.println((((((((\"La cellule m_x = \" + (m_x)) + \" et m_y = \") + (m_y)) + \" a un k de \") + k) + \" donne \") + (m_stateEvolution)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1182/buggy-version/src.main.java.com.ter.CellularAutomaton.controller.Cell1D.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "d528376bcf92c823a424ee77fbf1c8cd8f46a43f", "Url": "https://api.github.com/repos/CellularAutomatonTER/CellularAutomatonTER", "Date": "2017-05-05T02:21:14Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((m_y) == 0) java.lang.System.out.println((((((((\"La cellule m_x = \" + (m_x)) + \" et m_y = \") + (m_y)) + \" a un k de \") + k) + \" donne \") + (m_stateEvolution)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1182/buggy-version/src.main.java.com.ter.CellularAutomaton.controller.Cell1D.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "d528376bcf92c823a424ee77fbf1c8cd8f46a43f", "Url": "https://api.github.com/repos/CellularAutomatonTER/CellularAutomatonTER", "Date": "2017-05-05T02:21:14Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mil.nga.giat.geowave.datastore.hbase.query.HBaseFilteredIndexQuery.getDistributableFilter()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((distributableFilters != null) && ((distributableFilters.size()) > 0)) { org.apache.hadoop.hbase.filter.FilterList filterList = new org.apache.hadoop.hbase.filter.FilterList(); for (org.apache.hadoop.hbase.filter.Filter filter : distributableFilters) { filterList.addFilter(filter); } scanner.setFilter(filterList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1443/buggy-version/extensions.datastores.hbase.src.main.java.mil.nga.giat.geowave.datastore.hbase.query.HBaseFilteredIndexQuery.java", "BodyUseAPI": [], "Fixed commit": "754ce9b20154739121077b96b4e5a778eadde7b4", "Url": "https://api.github.com/repos/viggyprabhu/geowave", "Date": "2015-08-16T17:41:04Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(authors.equals(\"\"))) { authorsArr = authors.split(\",\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/217/buggy-version/app.src.main.java.it.jaschke.alexandria.AddBook.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "7a738a98b9f032f5e1fbe25adab81ee60b667429", "Url": "https://api.github.com/repos/OverratedGman/Super_Duo-Alexandria", "Date": "2015-12-22T18:26:19Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLastLocation) == null) { com.google.android.gms.location.LocationRequest mLocationRequest = new com.google.android.gms.location.LocationRequest(); mLocationRequest.setInterval(10000); mLocationRequest.setFastestInterval(5000); mLocationRequest.setPriority(LocationRequest.PRIORITY_HIGH_ACCURACY); LocationServices.FusedLocationApi.requestLocationUpdates(mGoogleApiClient, mLocationRequest, this); }else { setupViewPager(viewPager); tabLayout.setupWithViewPager(viewPager); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3564/buggy-version/app.src.main.java.kosbrother.com.doctorguide.HospitalDoctorActivity.java", "BodyUseAPI": [], "Fixed commit": "88444c3c8c2d8af068defef902283d32529c5f9f", "Url": "https://api.github.com/repos/kosbrother/doctor_android", "Date": "2016-01-12T05:47:58Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((startPos == ((pyLength) - 1)) && ((lastCharMap.get(pinyinList[startPos])) != null)) { strBuilder.append(lastCharMap.get(pinyinList[startPos])); }else { strBuilder.append(hanzi.getFirst(firstMatrix[startPos][(wordEndIndex - startPos)])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5611/buggy-version/source.ime.android.branches.1.0.src.com.aeviou.pinyin.PinyinLongestPath.java", "BodyUseAPI": ["com.aeviou.pinyin.PinyinHanzi.getFirst(int)", "java.util.HashMap<java.lang.Character, java.lang.String>.get(char)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(hanzi.getFirst(firstMatrix[startPos][(wordEndIndex - startPos)]))"], "Fixed commit": "b81cabf46b117b1241267706d7e6d0e89fdf31d9", "Url": "https://api.github.com/repos/carlbunny/weare4gaylalala", "Date": "2013-06-28T12:38:06Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(io.fabric.sdk.android.Fabric.isInitialized())) { io.fabric.sdk.android.Fabric.with(this, new com.crashlytics.android.Crashlytics()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4869/buggy-version/app.src.main.java.tw.firemaples.onscreenocr.ScreenTranslatorService.java", "BodyUseAPI": [], "Fixed commit": "e4c6c93919894c893991031f8e694194e88a50d1", "Url": "https://api.github.com/repos/firemaples/EverTranslator", "Date": "2017-01-02T12:50:44Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(io.fabric.sdk.android.Fabric.isInitialized())) { io.fabric.sdk.android.Fabric.with(this, new com.crashlytics.android.Crashlytics()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4869/buggy-version/app.src.main.java.tw.firemaples.onscreenocr.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e4c6c93919894c893991031f8e694194e88a50d1", "Url": "https://api.github.com/repos/firemaples/EverTranslator", "Date": "2017-01-02T12:50:44Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ca.ualberta.cmput301w14t08.geochan.fragments.EditCommentFragment.oldThumbnail) != null) { oldThumbView = ((android.widget.ImageView) (getActivity().findViewById(R.id.old_thumb))); oldThumbView.setImageBitmap(ca.ualberta.cmput301w14t08.geochan.fragments.EditCommentFragment.oldThumbnail); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/9178/buggy-version/GeoChan.src.ca.ualberta.cmput301w14t08.geochan.fragments.EditCommentFragment.java", "BodyUseAPI": [], "Fixed commit": "d3e22caedaf5dfe670b118bc18dfca7e339d6de9", "Url": "https://api.github.com/repos/CMPUT301W14T08/GeoChan", "Date": "2014-04-02T21:45:28Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["contentArg.getType().isClass()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (contentClass == null) { contentClass = contentArg.getType().isClassOrInterface(); if (!(locator.isCollectionType(contentClass))) { error(\"Content argument must be a class.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4652/buggy-version/restygwt.src.main.java.org.fusesource.restygwt.rebind.RestServiceClassCreator.java", "BodyUseAPI": [], "Fixed commit": "2b0c6579ec1ef17a73376994961b38555fe100bd", "Url": "https://api.github.com/repos/resty-gwt/resty-gwt", "Date": "2011-06-28T13:34:47Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (executable instanceof fr.bretzel.mysql.api.executable.IExecutableQuery) executeQuery(((fr.bretzel.mysql.api.executable.IExecutableQuery) (executable))); else if (executable instanceof fr.bretzel.mysql.api.executable.IExecutableUpdate) executeUpdate(((fr.bretzel.mysql.api.executable.IExecutableUpdate) (executable)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/199/buggy-version/src.main.java.fr.bretzel.mysql.SQL.java", "BodyUseAPI": [], "Fixed commit": "3cd8cfd0854a6398c3251ddecf61fa15998d6ced", "Url": "https://api.github.com/repos/MrBretze/SQL-Lib", "Date": "2015-11-29T01:09:03Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((libTempFile != null) && (libTempFile.exists())) { try { java.lang.System.load(libTempFile.getAbsolutePath()); } catch (java.lang.Exception e) { jd.ide.intellij.JavaDecompiler.LOGGER.error(\"Exception occured during loading native library\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/804/buggy-version/jd-lib.src.main.java.jd.ide.intellij.JavaDecompiler.java", "BodyUseAPI": [], "Fixed commit": "22da785998d801a2b711284e9638d2d2a17809db", "Url": "https://api.github.com/repos/kwart/jd-cmd", "Date": "2013-10-10T11:06:43Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size) == 0) return newArray;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3150/buggy-version/src.seminar1.collections.CyclicArrayDeque.java", "BodyUseAPI": [], "Fixed commit": "a093237aad220eb85d473e04494d1f1a7295b74a", "Url": "https://api.github.com/repos/VepIndustry/AlgorithmsTechnopolis", "Date": "2017-10-11T09:57:37Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size) == 0) return newArray;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3150/buggy-version/src.seminar1.collections.CyclicArrayQueue.java", "BodyUseAPI": [], "Fixed commit": "a093237aad220eb85d473e04494d1f1a7295b74a", "Url": "https://api.github.com/repos/VepIndustry/AlgorithmsTechnopolis", "Date": "2017-10-11T09:57:37Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (button == (toButton)) { toTime = new com.jensen.draculadaybyday.Primitives.Tuple(hourOfDay, minute); }else if (button == (fromButton)) { fromTime = new com.jensen.draculadaybyday.Primitives.Tuple(hourOfDay, minute); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4391/buggy-version/app.src.main.java.com.jensen.draculadaybyday.Settings.NotificationTime.java", "BodyUseAPI": [], "Fixed commit": "4631349d96309c29ccb9323dfea60230a8acf9df", "Url": "https://api.github.com/repos/kjmikkel/DraculaDayByDay", "Date": "2016-12-11T12:34:53Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((eventsFrag) != null) { touched = true; refresh(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1535/buggy-version/app.src.main.java.com.example.codenamebiscuit.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3a8f216069596177fc9199256a259a8635f576af", "Url": "https://api.github.com/repos/tkardach/CodenameBiscuit", "Date": "2017-05-09T17:24:19Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.raffledoocious.blasterbattle.MainActivity.1.findViewById(R.id.the_board)", "android.view.MotionEvent.getX()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (x > ((board.getWidth()) - (board.getBulletWidth()))) { x = (board.getWidth()) - (board.getBulletWidth()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4780/buggy-version/src.com.raffledoocious.blasterbattle.MainActivity.java", "BodyUseAPI": ["com.raffledoocious.drawing.GameBoard.getBulletWidth()", "com.raffledoocious.drawing.GameBoard.getWidth()"], "Fixed commit": "9245faf4f20df8b78f5d977a8c16a6e5db47393c", "Url": "https://api.github.com/repos/Raffledoocious/BlasterBattle", "Date": "2013-07-09T03:22:00Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.perPage) == 0) this.perPage = 50;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4710/buggy-version/app.src.main.java.info.johannblake.shutterstockdemo.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b20b63521ff844302b52aa8b3eedcdc461eee0d2", "Url": "https://api.github.com/repos/JohannBlake/ShutterstockDemo", "Date": "2015-05-13T15:18:19Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sistcoop.persona.models.PersonaNaturalProvider.findByTipoNumeroDocumento(org.sistcoop.persona.models.TipoDocumentoModel,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (personaNaturalModel != null) { items.add(personaNaturalModel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2875/buggy-version/persona-services.src.main.java.org.sistcoop.persona.services.resources.admin.PersonasNaturalesResourceImpl.java", "BodyUseAPI": ["java.util.List<org.sistcoop.persona.models.PersonaNaturalModel>.add(org.sistcoop.persona.models.PersonaNaturalModel)"], "Fixed commit": "b507cde780a143999f6bec3a41b2c71fd6173dfb", "Url": "https://api.github.com/repos/sistcoop/persona", "Date": "2015-09-04T16:54:53Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (arguments == null) { throw new java.lang.IllegalArgumentException(\"One argument is expected\"); }else if ((arguments.size()) != 1) { throw new java.lang.IllegalArgumentException(((\"One argument was expected, \" + (arguments.size())) + \" were supplied\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7586/buggy-version/core-rules.src.main.java.org.hisp.dhis.rules.functions.RuleFunctionFloor.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.size()"], "Fixed commit": "04c9fd19ad7ca4927deba0e93314cbc920bdd9c5", "Url": "https://api.github.com/repos/EyeSeeTea/dhis2-android-sdk", "Date": "2017-12-21T16:09:13Z"},
{"Line": "=>529", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.blackducksoftware.integration.jira.task.issue.JiraIssueHandler.findIssue(com.blackducksoftware.integration.hub.notification.processor.event.NotificationEvent,com.blackducksoftware.integration.jira.task.conversion.output.JiraEventInfo)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (oldIssue.getStatus().getName().equals(HubJiraConstants.HUB_WORKFLOW_STATUS_RESOLVED)) { logger.debug(\"This issue is already Resolved; plugin will not change issue's state\"); return new com.blackducksoftware.integration.jira.task.issue.JiraIssueHandler.ExistenceAwareIssue(oldIssue, true, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6324/buggy-version/src.main.java.com.blackducksoftware.integration.jira.task.issue.JiraIssueHandler.java", "BodyUseAPI": [], "Fixed commit": "20c1328cd05cf177e7b9ae22312aa8b8344d61c5", "Url": "https://api.github.com/repos/blackducksoftware/hub-jira", "Date": "2017-02-24T21:05:50Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.mediaPlayer) != null) { this.mediaPlayer.release(); this.mediaPlayer = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8159/buggy-version/src.com.crankcode.threads.MediaThread.java", "BodyUseAPI": [], "Fixed commit": "6d2e4c0d598595a243d5d0da3292bfcf015d4164", "Url": "https://api.github.com/repos/agustinventura/JustPlay", "Date": "2012-07-30T20:42:34Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(conf.isFile())) { org.bukkit.configuration.Configuration defConf = org.bukkit.configuration.file.YamlConfiguration.loadConfiguration(this.getClass().getResourceAsStream(\"/defaults/config.yml\")); this.config.setDefaults(defConf); }else { this.config.setDefaults(org.bukkit.configuration.file.YamlConfiguration.loadConfiguration(conf)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2236/buggy-version/src.main.java.net.krinsoft.chat.ConfigManager.java", "BodyUseAPI": [], "Fixed commit": "7a475bb268c6a47edda802e3157efcb8ffc04f71", "Url": "https://api.github.com/repos/krinsdeath/ChatSuite", "Date": "2011-12-11T04:50:45Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.osee.framework.skynet.core.artifact.BranchManager.getBranch(org.eclipse.osee.framework.core.data.BranchId)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (branch.getBranchType().equals(BranchType.MERGE)) { branch = branch.getParentBranch(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3657/buggy-version/plugins.org.eclipse.osee.framework.ui.skynet.src.org.eclipse.osee.framework.ui.skynet.render.word.WordTemplateProcessor.java", "BodyUseAPI": ["org.eclipse.osee.framework.core.model.Branch.getParentBranch()"], "Fixed commit": "19d75637b5bddab91646011ea5dcd742c0448a4d", "Url": "https://api.github.com/repos/eclipse/osee", "Date": "2017-10-21T00:14:22Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.addthis.codec.plugins.PluginMap.aliasDefaults(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(aliasDefaults.isEmpty())) { com.addthis.codec.jackson.Jackson.merge(objectNode, com.addthis.codec.jackson.Jackson.configConverter(aliasDefaults)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/675/buggy-version/src.main.java.com.addthis.codec.jackson.CodecTypeDeserializer.java", "BodyUseAPI": ["com.addthis.codec.jackson.Jackson.configConverter(com.typesafe.config.ConfigObject)", "com.addthis.codec.jackson.Jackson.merge(com.fasterxml.jackson.databind.node.ObjectNode,com.addthis.codec.jackson.Jackson.configConverter(aliasDefaults))"], "Fixed commit": "c503893ab37b4d6ad54de80eec0c137c08bcf2c1", "Url": "https://api.github.com/repos/addthis/codec", "Date": "2014-08-07T05:24:19Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((puzzleFile) == null) || ((puzzleFileName) == null)) || ((c) == null)) || ((gui) == null)) { javax.swing.JOptionPane.showMessageDialog(null, \"Puzzle file not loaded.\", \"Error\", javax.swing.JOptionPane.ERROR_MESSAGE); throw new java.lang.IllegalStateException(\"Puzzle file not loaded.\"); }else { resetFrame(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3723/buggy-version/Calcudoku.src.view.Calcudoku.java", "BodyUseAPI": [], "Fixed commit": "9fc206145d1f56be314e744430563c63b53317b8", "Url": "https://api.github.com/repos/michaeladrian39/Skripsi", "Date": "2017-09-04T12:48:38Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(ready)) { readyListeners.push(callback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1958/buggy-version/artemis-core-client.src.main.java.org.apache.activemq.artemis.core.remoting.impl.netty.NettyConnection.java", "BodyUseAPI": [], "Fixed commit": "d1c1c50aa2b218c5c2a514d63b57f3b4bf89de57", "Url": "https://api.github.com/repos/lburgazzoli/apache-activemq-artemis", "Date": "2016-01-01T18:39:21Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (db < 0) { db = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7105/buggy-version/app.src.main.java.edu.uci.accuspeech.fragment.DecibelMeterFragment.java", "BodyUseAPI": [], "Fixed commit": "15fb8c63f41332d930879193af036fd63af9af5e", "Url": "https://api.github.com/repos/KPhamster/Accuspeech", "Date": "2015-03-01T03:15:40Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(computed instanceof edu.cmu.cs.sasylf.ast.ClauseUse)) { edu.cmu.cs.sasylf.util.ErrorHandler.report(edu.cmu.cs.sasylf.ast.JUDGMENT_EXPECTED, \"Rule premise must be a judgment form, not just syntax\", computed); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5393/buggy-version/src.edu.cmu.cs.sasylf.ast.Rule.java", "BodyUseAPI": ["edu.cmu.cs.sasylf.util.ErrorHandler.report(edu.cmu.cs.sasylf.ast.JUDGMENT_EXPECTED,java.lang.String,edu.cmu.cs.sasylf.ast.Element)"], "Fixed commit": "8bdfa564bdb9750db04455479af290ec98a2337f", "Url": "https://api.github.com/repos/boyland/sasylf", "Date": "2017-06-23T02:38:09Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.cmu.cs.sasylf.ast.Clause.computeClause(edu.cmu.cs.sasylf.ast.Context,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(computed instanceof edu.cmu.cs.sasylf.ast.ClauseUse)) { edu.cmu.cs.sasylf.util.ErrorHandler.report(edu.cmu.cs.sasylf.ast.JUDGMENT_EXPECTED, \"Rule conclusion must be a judgment form, not just syntax\", computed); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5393/buggy-version/src.edu.cmu.cs.sasylf.ast.Rule.java", "BodyUseAPI": ["edu.cmu.cs.sasylf.util.ErrorHandler.report(edu.cmu.cs.sasylf.ast.JUDGMENT_EXPECTED,java.lang.String,edu.cmu.cs.sasylf.ast.Element)"], "Fixed commit": "8bdfa564bdb9750db04455479af290ec98a2337f", "Url": "https://api.github.com/repos/boyland/sasylf", "Date": "2017-06-23T02:38:09Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isChecked) buttonView.setTextColor(getResources().getColor(R.color.delft)); else buttonView.setTextColor(getResources().getColor(R.color.lightGrey));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8988/buggy-version/src.com.prasanna.android.stacknetwork.fragment.SearchCriteriaFragment.java", "BodyUseAPI": [], "Fixed commit": "de8d39bb3454f1a8ab9baf347be045460fc031da", "Url": "https://api.github.com/repos/prasannata/StackX", "Date": "2013-02-04T21:45:37Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isChecked && (addUnknownTagToExcluded.isChecked())) { android.util.Log.d(com.prasanna.android.stacknetwork.fragment.SearchCriteriaFragment.TAG, \"toggleIncludeTag set checked false\"); addUnknownTagToExcluded.setChecked(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8988/buggy-version/src.com.prasanna.android.stacknetwork.fragment.SearchCriteriaFragment.java", "BodyUseAPI": ["android.widget.ToggleButton.setChecked(boolean)"], "Fixed commit": "de8d39bb3454f1a8ab9baf347be045460fc031da", "Url": "https://api.github.com/repos/prasannata/StackX", "Date": "2013-02-04T21:45:37Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isChecked) buttonView.setTextColor(getResources().getColor(R.color.delft)); else buttonView.setTextColor(getResources().getColor(R.color.lightGrey));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8988/buggy-version/src.com.prasanna.android.stacknetwork.fragment.SearchCriteriaFragment.java", "BodyUseAPI": [], "Fixed commit": "de8d39bb3454f1a8ab9baf347be045460fc031da", "Url": "https://api.github.com/repos/prasannata/StackX", "Date": "2013-02-04T21:45:37Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isChecked && (addUnknownTagToIncluded.isChecked())) { android.util.Log.d(com.prasanna.android.stacknetwork.fragment.SearchCriteriaFragment.TAG, \"toggleIncludeTag set checked false\"); addUnknownTagToIncluded.setChecked(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8988/buggy-version/src.com.prasanna.android.stacknetwork.fragment.SearchCriteriaFragment.java", "BodyUseAPI": ["android.widget.ToggleButton.setChecked(boolean)"], "Fixed commit": "de8d39bb3454f1a8ab9baf347be045460fc031da", "Url": "https://api.github.com/repos/prasannata/StackX", "Date": "2013-02-04T21:45:37Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rate != 0) { contentValues.put(\"rate\", rate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3166/buggy-version/app.src.main.java.cs.dal.krush.models.Tutor.java", "BodyUseAPI": ["android.content.ContentValues.put(java.lang.String,int)"], "Fixed commit": "aeffd2ec85d7c2aef289f00035078bcbdafd6a97", "Url": "https://api.github.com/repos/Mons1Oerjan/KRUSH", "Date": "2017-03-27T16:57:47Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (locationId != 0) { contentValues.put(\"location_id\", locationId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3166/buggy-version/app.src.main.java.cs.dal.krush.models.Tutor.java", "BodyUseAPI": ["android.content.ContentValues.put(java.lang.String,int)"], "Fixed commit": "aeffd2ec85d7c2aef289f00035078bcbdafd6a97", "Url": "https://api.github.com/repos/Mons1Oerjan/KRUSH", "Date": "2017-03-27T16:57:47Z"},
{"Line": "=>1666", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["LocationServices.FusedLocationApi.getLastLocation()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tempLocation == null) { android.util.Log.w(com.platypus.android.tablet.TeleOpPanel.logTag, \"TeleOpPanel.setHome(): tablet does not have a location. Cannot be used as home.\"); android.widget.Toast.makeText(getApplicationContext(), \"Tablet doesn't have a location\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/488/buggy-version/app.src.main.java.com.platypus.android.tablet.TeleOpPanel.java", "BodyUseAPI": [], "Fixed commit": "2ae4c1e0be0578602a84af126e94ae5f129d6fec", "Url": "https://api.github.com/repos/platypusllc/tablet", "Date": "2017-05-08T12:20:01Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (context != null) { org.hisp.dhis.android.sdk.controllers.Dhis2.getInstance().context = context; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4502/buggy-version/app.src.main.java.org.hisp.dhis.android.sdk.controllers.Dhis2.java", "BodyUseAPI": [], "Fixed commit": "bb0c3d8ea2a174e4c0fe8651bbd5f9e2e5245848", "Url": "https://api.github.com/repos/dhis2/dhis2-android-sdk", "Date": "2015-07-22T14:21:26Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((context == null) && ((org.hisp.dhis.android.sdk.controllers.Dhis2.getInstance().context) == null)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4502/buggy-version/app.src.main.java.org.hisp.dhis.android.sdk.controllers.Dhis2.java", "BodyUseAPI": [], "Fixed commit": "bb0c3d8ea2a174e4c0fe8651bbd5f9e2e5245848", "Url": "https://api.github.com/repos/dhis2/dhis2-android-sdk", "Date": "2015-07-22T14:21:26Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tucklife.storage.external.PrefsStorage.getOverloadLimit()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (limit == (-1)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5186/buggy-version/src.tucklife.storage.internal.Storage.java", "BodyUseAPI": [], "Fixed commit": "05a519dcabdf9d3f8e814df7973c1da5c97d11f4", "Url": "https://api.github.com/repos/cs2103jan2016-w09-2j/main", "Date": "2016-04-10T09:03:50Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(uri.endsWith(\"/\"))) { for (java.lang.String extension : net.codestory.http.io.Resources.TEMPLATE_EXTENSIONS) { java.nio.file.Path templatePath = java.nio.file.Paths.get((uri + extension)); if (exists(templatePath)) { return templatePath; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3300/buggy-version/src.main.java.net.codestory.http.io.Resources.java", "BodyUseAPI": ["java.nio.file.Paths.get(java.lang.String)"], "Fixed commit": "b52f12b0afe83201e39facc6875b46224a5b6c11", "Url": "https://api.github.com/repos/CodeStory/fluent-http", "Date": "2015-02-21T10:11:24Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(elements.contains(t))) { elements.add(t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8657/buggy-version/src.org.pmedv.blackboard.provider.AbstractElementProvider.java", "BodyUseAPI": ["java.util.ArrayList<T>.add(T)"], "Fixed commit": "94412cc6079e9b2b604dcc95e5da6fffb80729b5", "Url": "https://api.github.com/repos/mpue/blackboard", "Date": "2013-03-12T16:52:56Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((visualX) < lastVisualX) { facingLeft = true; }else if ((visualX) > lastVisualX) { facingLeft = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6274/buggy-version/core.src.projectmp.common.entity.Entity.java", "BodyUseAPI": [], "Fixed commit": "8a8de4354666f8c42803975c4587e80f702295e9", "Url": "https://api.github.com/repos/chrislo27/ProjectMP", "Date": "2015-07-30T22:42:08Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((j + num) == ((Connect_4.myframe[0].length) - 1)) || ((Connect_4.myframe[i][((j + num) + 1)]) != playernr)) { start += num; startFound = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2331/buggy-version/src.main.java.Connect_4.java", "BodyUseAPI": [], "Fixed commit": "7dba6a2ec1328e7ba2ce2efe88c49fcbd91ee93e", "Url": "https://api.github.com/repos/BettyES/Connect4", "Date": "2017-06-25T16:44:51Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((detailNote != null) && (errorNote != null)) detailNote = (detailNote + \" \") + errorNote; else if ((detailNote == null) && (errorNote != null)) detailNote = errorNote;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7351/buggy-version/persistence.src.main.java.edu.unc.lib.dl.services.FixityLogTask.java", "BodyUseAPI": [], "Fixed commit": "0ec698d6345d4386f603cef321c734cfec4618e4", "Url": "https://api.github.com/repos/UNC-Libraries/Carolina-Digital-Repository", "Date": "2013-09-12T18:47:23Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.unc.lib.dl.services.FixityVerificationResult.getError()", "edu.unc.lib.dl.services.FixityVerificationResult.getIrodsErrorCode()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((error != null) && (code != null)) errorNote = ((\"iRODS error: \" + error) + \" \") + code; else if (code != null) errorNote = \"iRODS error: \" + code; else if (exception != null) errorNote = (((\"Jargon exception: \" + (exception.getMessage())) + \" (\") + (exception.getClass().getName())) + \")\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7351/buggy-version/persistence.src.main.java.edu.unc.lib.dl.services.FixityLogTask.java", "BodyUseAPI": [], "Fixed commit": "0ec698d6345d4386f603cef321c734cfec4618e4", "Url": "https://api.github.com/repos/UNC-Libraries/Carolina-Digital-Repository", "Date": "2013-09-12T18:47:23Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fixityVerificationResult.getResult()) == (FixityVerificationResult.Result.MISSING)) edu.unc.lib.dl.util.PremisEventLogger.addType(event, PremisEventLogger.Type.REPLICATION); else edu.unc.lib.dl.util.PremisEventLogger.addType(event, PremisEventLogger.Type.FIXITY_CHECK);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7351/buggy-version/persistence.src.main.java.edu.unc.lib.dl.services.FixityLogTask.java", "BodyUseAPI": [], "Fixed commit": "0ec698d6345d4386f603cef321c734cfec4618e4", "Url": "https://api.github.com/repos/UNC-Libraries/Carolina-Digital-Repository", "Date": "2013-09-12T18:47:23Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((user.getIdParcours()) != 0) { session.setAttribute(\"parcours\", repo.findOne(user.getIdParcours())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1611/buggy-version/src.main.java.edu.isep.speakisep.RespoProfilController.java", "BodyUseAPI": ["net.ubilife.spring.customerjdbc.ParcoursRepository.findOne(user.getIdParcours())", "javax.servlet.http.HttpSession.setAttribute(java.lang.String,repo.findOne(user.getIdParcours()))", "net.ubilife.spring.customerjdbc.User.getIdParcours()"], "Fixed commit": "7dd601acf1d92fd63d246468c5157c76d03bd5b4", "Url": "https://api.github.com/repos/alliando/rose_persan_vif", "Date": "2016-06-01T15:02:49Z"},
{"Line": "=>734", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value.equals(\"monkey's audio\")) { format = net.pms.configuration.FormatConfiguration.MONKEYS_AUDIO; }else if (value.contains(\"musepack\")) { format = net.pms.configuration.FormatConfiguration.MPC; }else if (value.contains(\"wavpack\")) { format = net.pms.configuration.FormatConfiguration.WAVPACK; }else if (value.contains(\"mlp\")) { format = net.pms.configuration.FormatConfiguration.MLP; }else if (value.equals(\"openmg\")) { format = net.pms.configuration.FormatConfiguration.ATRAC; }else if (value.startsWith(\"atrac\")) { format = net.pms.configuration.FormatConfiguration.ATRAC; }else if (((media.getContainer()) != null) && (media.getContainer().equals(FormatConfiguration.WMV))) { if ((((media.getCodecV()) != null) && ((!(media.getCodecV().equals(FormatConfiguration.WMV))) || (!(media.getCodecV().equals(FormatConfiguration.VC1))))) || (((audio.getCodecA()) != null) && (((((!(audio.getCodecA().equals(FormatConfiguration.WMA))) || (!(audio.getCodecA().equals(FormatConfiguration.WMAPRO)))) || (!(audio.getCodecA().equals(FormatConfiguration.WMALOSSLESS)))) || (!(audio.getCodecA().equals(FormatConfiguration.WMAVOICE)))) || (!(audio.getCodecA().equals(FormatConfiguration.WMA10)))))) { media.setContainer(FormatConfiguration.ASF); } }else if (value.equals(\"nellymoser\")) { format = net.pms.configuration.FormatConfiguration.NELLYMOSER; }else if (value.equals(\"jpeg\")) { format = net.pms.configuration.FormatConfiguration.JPG; }else if (value.equals(\"png\")) { format = net.pms.configuration.FormatConfiguration.PNG; }else if (value.equals(\"gif\")) { format = net.pms.configuration.FormatConfiguration.GIF; }else if (value.equals(\"bitmap\")) { format = net.pms.configuration.FormatConfiguration.BMP; }else if (value.equals(\"tiff\")) { format = net.pms.configuration.FormatConfiguration.TIFF; }else if ((containsIgnoreCase(value, \"@l\")) && (streamType == (net.pms.dlna.MediaInfo.StreamType.Video))) { media.setAvcLevel(net.pms.dlna.LibMediaInfoParser.getAvcLevel(value)); media.setH264Profile(net.pms.dlna.LibMediaInfoParser.getAvcProfile(value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5907/buggy-version/src.main.java.net.pms.dlna.LibMediaInfoParser.java", "BodyUseAPI": ["net.pms.dlna.LibMediaInfoParser.getAvcLevel(java.lang.String)", "java.lang.String.contains(java.lang.String)", "net.pms.dlna.DLNAMediaInfo.setAvcLevel(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "net.pms.dlna.LibMediaInfoParser.getAvcProfile(java.lang.String)", "net.pms.dlna.LibMediaInfoParser.containsIgnoreCase(java.lang.String,java.lang.String)", "java.lang.String.equals(java.lang.String)", "net.pms.dlna.DLNAMediaInfo.setH264Profile(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "fa9bd0f251f336b41df37511fb9eccf87749ed81", "Url": "https://api.github.com/repos/Sami32/UniversalMediaServer", "Date": "2017-09-15T03:27:16Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"/register.action\".equals(uri)) { chain.doFilter(hreq, hresp); return; }else if ((hreq.getSession().getAttribute(\"user\")) != null) { chain.doFilter(hreq, hresp); return; }else if (subffix.contains(uri.endsWith(\".\"))) { chain.doFilter(hreq, hresp); return; }else { hresp.sendRedirect((contentpath + \"/login.jsp\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6359/buggy-version/src.main.java.common.loginFilter.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)", "java.util.List<java.lang.String>.contains(boolean)"], "Fixed commit": "daafceff47c9cd87e11e42d869765f6ebe4f9921", "Url": "https://api.github.com/repos/blambin/TshockWebBlao", "Date": "2016-06-20T15:18:10Z"},
{"Line": "=>1136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["store.User.purchase(store.Media,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (numPurchase > 0) { tabs.addTab(\"Rate\", rate); tabs.remove(purchase); getCustCredit(); }else if ((numPurchase == 0) || (numPurchase == (-1))) { javax.swing.JOptionPane.showMessageDialog(this, \"Not enough money, Returning to Search Pane\"); tabs.addTab(\"Search\", search); tabs.remove(purchase); }else if (numPurchase == (-2)) { javax.swing.JOptionPane.showMessageDialog(this, \"This item is out of stock, Returning to Search Pane\"); tabs.addTab(\"Search\", search); tabs.remove(purchase); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3045/buggy-version/Store.src.store.StoreGUI.java", "BodyUseAPI": [], "Fixed commit": "84a6c53c82b77586d0057d2b82ce6bb227470db1", "Url": "https://api.github.com/repos/wyollinger1/massive-tyrion", "Date": "2013-04-19T20:45:39Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.nikr.eve.jeveasset.data.api.my.MyAsset.getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(location.isEmpty())) { if (view.equals(net.nikr.eve.jeveasset.i18n.TabsOverview.get().regions())) { locationName = asset.getLocation().getRegion(); location = net.nikr.eve.jeveasset.io.shared.ApiIdConverter.getLocation(asset.getLocation().getRegionID()); } if (view.equals(net.nikr.eve.jeveasset.i18n.TabsOverview.get().systems())) { locationName = asset.getLocation().getSystem(); location = net.nikr.eve.jeveasset.io.shared.ApiIdConverter.getLocation(asset.getLocation().getSystemID()); } if (view.equals(net.nikr.eve.jeveasset.i18n.TabsOverview.get().stations())) { locationName = asset.getLocation().getLocation(); location = net.nikr.eve.jeveasset.io.shared.ApiIdConverter.getLocation(asset.getLocation().getStationID()); } }else { locationName = location.getLocation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/872/buggy-version/src.main.java.net.nikr.eve.jeveasset.gui.tabs.overview.OverviewTab.java", "BodyUseAPI": ["net.nikr.eve.jeveasset.data.sde.MyLocation.getLocation()"], "Fixed commit": "200779da3ffa1551b4c54cd4b401d6c692f88722", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2017-11-12T16:27:30Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((classList.length()) == 0) return ;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4622/buggy-version/src.main.java.org.robolectric.annotation.Config.java", "BodyUseAPI": [], "Fixed commit": "9f9dddd984913cc4146d5f7ebdb37bf6f9df80ac", "Url": "https://api.github.com/repos/robolectric/robolectric", "Date": "2013-05-10T23:07:16Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (cbrCompsList != null) { for (int i = index0; i <= index1; i++) { org.zkoss.zk.ui.Component[] oldComps = cbrCompsList.get(index0); if (oldComps != null) { for (org.zkoss.zk.ui.Component oc : oldComps) { oc.detach(); } } cbrCompsList.remove(index0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1598/buggy-version/zkbind.src.org.zkoss.bind.impl.ChildrenBindingListDataListener.java", "BodyUseAPI": ["java.util.List<org.zkoss.zk.ui.Component[]>.get(int)", "java.util.List<org.zkoss.zk.ui.Component[]>.remove(int)"], "Fixed commit": "8905258e8a01edd2361c38cead763b14cbd1e214", "Url": "https://api.github.com/repos/zkoss/zk", "Date": "2015-11-24T10:26:35Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((oracleTypeName.equals(org.obridge.util.TypeMapper.ORACLE_NUMBER)) && (scale != 0)) { return org.obridge.util.TypeMapper.JAVA_BIGDECIMAL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5823/buggy-version/obridge-main.src.main.java.org.obridge.util.TypeMapper.java", "BodyUseAPI": [], "Fixed commit": "007b7e9ed5bbabeddaf62e05f31f21fd368930d5", "Url": "https://api.github.com/repos/karsany/obridge", "Date": "2016-02-26T22:23:27Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(Robot.pickup.extended)) { Robot.pickup.togglePiston(true); Robot.pickup.extended = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6052/buggy-version/src.org.usfirst.frc.team2473.robot.commands.Intake.java", "BodyUseAPI": [], "Fixed commit": "0ed1b01f2408996ed8e2b07051bc9e48070aa542", "Url": "https://api.github.com/repos/Tino-FRC-2473/Calgames2016", "Date": "2016-09-24T19:22:13Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (column.contains(entity)) { for (int i = column.indexOf(entity); i < (column.size()); i++) { if (column.get(i).equalsExact(relation.getEntityB())) { matchedEntities.add(column.get(column.indexOf(entity))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1446/buggy-version/javaprolog.Relation.java", "BodyUseAPI": ["java.util.List<Entity>.size()", "column.get(i).equalsExact(Entity)", "java.util.List<Entity>.get(int)", "java.util.List<Entity>.get(column.indexOf(entity))", "java.util.List<Entity>.indexOf(Entity)", "java.util.List<Entity>.add(column.get(column.indexOf(entity)))", "java.util.List<Entity>.indexOf(Entity)"], "Fixed commit": "12b3c91da26c9e25c0ce6930f59c9f1145afce2f", "Url": "https://api.github.com/repos/Ramqvist/shrdlite-template", "Date": "2014-04-07T12:05:31Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (column.contains(entity)) { for (int i = column.indexOf(entity); i >= 0; i--) { if (column.get(i).equalsExact(relation.getEntityB())) { matchedEntities.add(column.get(column.indexOf(entity))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1446/buggy-version/javaprolog.Relation.java", "BodyUseAPI": ["java.util.List<Entity>.indexOf(Entity)", "java.util.List<Entity>.add(column.get(column.indexOf(entity)))", "java.util.List<Entity>.get(int)", "column.get(i).equalsExact(Entity)", "java.util.List<Entity>.indexOf(Entity)", "java.util.List<Entity>.get(column.indexOf(entity))"], "Fixed commit": "12b3c91da26c9e25c0ce6930f59c9f1145afce2f", "Url": "https://api.github.com/repos/Ramqvist/shrdlite-template", "Date": "2014-04-07T12:05:31Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edu.indiana.soic.spidal.damds.ParallelOps.isMmapLead) { edu.indiana.soic.spidal.damds.ParallelOps.fullXByteBufferWindow = new edu.indiana.soic.spidal.damds.Win(edu.indiana.soic.spidal.damds.ParallelOps.fullXByteBuffer, fullXByteExtent, java.lang.Byte.BYTES, MPI.INFO_NULL, edu.indiana.soic.spidal.damds.ParallelOps.cgProcComm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6955/buggy-version/src.main.java.edu.indiana.soic.spidal.damds.ParallelOps.java", "BodyUseAPI": [], "Fixed commit": "b1403330ed63a6b424ee8b3758667a98d8d8196d", "Url": "https://api.github.com/repos/DSC-SPIDAL/damds", "Date": "2015-09-13T18:45:33Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edu.indiana.soic.spidal.damds.ParallelOps.isMmapLead) edu.indiana.soic.spidal.damds.ParallelOps.fullXByteBufferWindow.free();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6955/buggy-version/src.main.java.edu.indiana.soic.spidal.damds.ParallelOps.java", "BodyUseAPI": [], "Fixed commit": "b1403330ed63a6b424ee8b3758667a98d8d8196d", "Url": "https://api.github.com/repos/DSC-SPIDAL/damds", "Date": "2015-09-13T18:45:33Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.java.Board.gridLookup(main.java.Position)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((pieceToMove.getType()) == (PieceType.NO_PIECE)) { java.lang.String msg = \"Cannot move a piece from an empty board position.\"; throw new java.lang.IllegalArgumentException(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2663/buggy-version/src.main.java.Model.java", "BodyUseAPI": [], "Fixed commit": "8596e9d9da8a3f24fe0de2aba2c1e8e903277918", "Url": "https://api.github.com/repos/spkaplan/chess", "Date": "2016-05-01T01:36:35Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((nodes) != null) && ((nodes.size()) > 0)) { return nodes.get(0).getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8652/buggy-version/src.com.company.Nodes.Node.java", "BodyUseAPI": ["com.company.Nodes.Node.getValue()", "java.util.ArrayList<com.company.Nodes.Node>.get(int)"], "Fixed commit": "688faf61c0c38671a153e553c69efde1a35231df", "Url": "https://api.github.com/repos/dovius/TM", "Date": "2017-12-18T08:39:42Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (latestDate != null) { latestStartDates.put(searches.get(parameters), javax.xml.bind.DatatypeConverter.printDateTime(latestDate)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2172/buggy-version/src.ch.ike.TradeMeScanner.java", "BodyUseAPI": ["javax.xml.bind.DatatypeConverter.printDateTime(java.util.Calendar)", "java.util.prefs.Preferences.put(java.lang.String,javax.xml.bind.DatatypeConverter.printDateTime(latestDate))"], "Fixed commit": "92209f3814d9b0901ec5632a858b057de6d537f2", "Url": "https://api.github.com/repos/mikeller/trade-me-watcher", "Date": "2012-10-09T11:42:28Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opencms.main.OpenCms.getResourceManager().getLoader(org.opencms.file.CmsFile)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (loader instanceof org.opencms.loader.CmsJspLoader) { encoding = res.getCharacterEncoding(); }else { encoding = cms.readPropertyObject(file, CmsPropertyDefinition.PROPERTY_CONTENT_ENCODING, true).getValue(org.opencms.main.OpenCms.getSystemInfo().getDefaultEncoding()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/9190/buggy-version/src.org.opencms.jsp.CmsJspTagInclude.java", "BodyUseAPI": [], "Fixed commit": "2c1f83bb48c3ee653e7c6a0eafbdb73beb1722a6", "Url": "https://api.github.com/repos/alkacon/opencms-core", "Date": "2016-05-12T09:50:36Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (worldObj.isRemote) { parts[0].setVelocity(this.motionX, this.motionY, this.motionZ); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4993/buggy-version/src.main.java.am2.bosses.AM2Boss.java", "BodyUseAPI": [], "Fixed commit": "f32e7c2f6000e370da1deae0499f4d03090fc37f", "Url": "https://api.github.com/repos/DoomFruit/ArsMagica2", "Date": "2015-09-19T15:33:07Z"},
{"Line": "=>700", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((project.audioFile) == null) { javax.swing.JOptionPane.showMessageDialog(jf, (\"Can\\'t align because no audio file is attached to this project.\\n\" + \"Please set an audio file (File -> Load audio).\"), \"No audio file\", javax.swing.JOptionPane.ERROR_MESSAGE); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6598/buggy-version/src.fr.loria.synalp.jtrans.gui.JTransGUI.java", "BodyUseAPI": [], "Fixed commit": "37a3ee9dac2b448ff2a31f46bf7c325149818b1a", "Url": "https://api.github.com/repos/synalp/jtrans", "Date": "2014-03-26T10:13:20Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((drawables[pos.ordinal()]) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7278/buggy-version/src.main.java.com.raineverywhere.drawableontouchlistener.DrawableOnTouchListener.java", "BodyUseAPI": [], "Fixed commit": "87d4ea60c312c818f7d535447d0b5064ed6c896c", "Url": "https://api.github.com/repos/hurst/drawableontouchlistener", "Date": "2014-12-15T15:53:09Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) { boolean isFirstStart = !(wumf.com.sharedapps.memory.MemoryCommunicator.getInstance().hasKey(Key.isFirstStart)); if (isFirstStart) { startActivity(new android.content.Intent(this, wumf.com.sharedapps.Android6HelpActivity.class)); wumf.com.sharedapps.memory.MemoryCommunicator.getInstance().saveBoolean(Key.isFirstStart, false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/955/buggy-version/app.src.main.java.wumf.com.sharedapps.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "482db25a72ec123f9dda0fdd90415f4bbddc7931", "Url": "https://api.github.com/repos/mlevytskiy/SharedApps", "Date": "2017-03-07T21:28:29Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.getInventory().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (invItem == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2076/buggy-version/src.com.asteria.game.item.container.Bank.java", "BodyUseAPI": [], "Fixed commit": "457635e7e4764847b6ee3cf37db21a697660bd60", "Url": "https://api.github.com/repos/lare96/asteria-3.0", "Date": "2015-07-06T22:21:03Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(store.isEmpty())) { return store.remove(((store.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7134/buggy-version/Stores.src.at.edu.hti.concurrency.stores.VectorStore.java", "BodyUseAPI": ["java.util.Vector<java.lang.String>.remove(int)", "java.util.Vector<java.lang.String>.size()"], "Fixed commit": "5073edf0526e5c4220bc80c2cc39b94d4bee7965", "Url": "https://api.github.com/repos/gfliess/2013-06-Modul2", "Date": "2013-06-11T08:37:03Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (hObservation.hasSamplingGeometry()) { sosObservation.addParameter(createSpatialFilteringProfileParameter(hObservation.getSamplingGeometry())); }else if (isSetSpatialFilteringProfileAdder()) { getSpatialFilteringProfileAdder().add(hObservation.getObservationId(), sosObservation); }else { if (org.n52.sos.service.ServiceConfiguration.getInstance().isStrictSpatialFilteringProfile()) { org.n52.sos.ogc.gml.AbstractFeature feature = getFeature(featureId); if (((feature != null) && (feature instanceof org.n52.sos.ogc.om.features.samplingFeatures.SamplingFeature)) && (((org.n52.sos.ogc.om.features.samplingFeatures.SamplingFeature) (feature)).isSetGeometry())) sosObservation.addParameter(createSpatialFilteringProfileParameter(((org.n52.sos.ogc.om.features.samplingFeatures.SamplingFeature) (feature)).getGeometry())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/5784/buggy-version/hibernate.common.src.main.java.org.n52.sos.ds.hibernate.util.observation.ObservationOmObservationCreator.java", "BodyUseAPI": ["org.n52.sos.ds.hibernate.util.observation.ObservationOmObservationCreator.createSpatialFilteringProfileParameter(hObservation.getSamplingGeometry())", "org.n52.sos.ds.hibernate.entities.AbstractObservation.getSamplingGeometry()", "org.n52.sos.ogc.om.OmObservation.addParameter(createSpatialFilteringProfileParameter(hObservation.getSamplingGeometry()))", "org.n52.sos.ds.hibernate.util.observation.SpatialFilteringProfileAdder.add(hObservation.getObservationId(),org.n52.sos.ogc.om.OmObservation)", "org.n52.sos.ds.hibernate.entities.AbstractObservation.getObservationId()"], "Fixed commit": "024db3f735a409fe3688ca0227745a3f2afee986", "Url": "https://api.github.com/repos/CarstenHollmann/SOS", "Date": "2014-08-14T14:09:00Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((((year != null) && (month != null)) && (year.matches(\"^\\\\d+$\"))) && (month.matches(\"^\\\\d+$\"))) { java.time.YearMonth expirationDate = java.time.YearMonth.of(java.lang.Integer.valueOf(year), java.lang.Integer.valueOf(month)); if (((expirationDate.getMonthValue()) < (java.time.YearMonth.now().getMonthValue())) && ((expirationDate.getYear()) == (java.time.Year.now().getValue()))) { errorFlag = true; errorMap.put(\"expirationeDateError\", true); } }else { errorFlag = true; errorMap.put(\"expirationeDateError\", true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7939/buggy-version/src.java.validate.Validator.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)", "java.time.YearMonth.of(java.lang.Integer,java.lang.Integer)", "java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "d88817d36da698188bc370d78b1297b870bf0bf4", "Url": "https://api.github.com/repos/Grimlek/ReadersParadise", "Date": "2016-12-13T15:29:51Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getModifiers()) != 16) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6721/buggy-version/src.GameBoardPanel.java", "BodyUseAPI": [], "Fixed commit": "1f81b227b7b57f5cbfd81df3bd6f6ca980ad3e8e", "Url": "https://api.github.com/repos/waiyeung/Connect-4-Game", "Date": "2015-05-25T00:42:30Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["relation.tags.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (name == null) name = relation.tags.get(\"name\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3215/buggy-version/Gedeon.src.gedeon.Gedeon.java", "BodyUseAPI": [], "Fixed commit": "a44df9d023ead532702f3e06a4e81565d66c1110", "Url": "https://api.github.com/repos/djjoe/Jozsef_Attila_vedes", "Date": "2014-12-04T21:50:15Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (drawersPanelNode.hasProperty(\"linkurl\")) { sb.append(Constants.DRAWER_PANEL_LINK_TITLE_NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4692/buggy-version/OVWMigration.src.main.com.cisco.dse.global.migration.productlisting.ProductListingVariation6.java", "BodyUseAPI": [], "Fixed commit": "fe0a8da7f7f50e7c3086a470d2974385bae3a64a", "Url": "https://api.github.com/repos/shreyabhatnagar/OVWMigration", "Date": "2016-01-28T08:51:31Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (trackedEntityInstance == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4816/buggy-version/app.src.main.java.org.hisp.dhis2.android.trackercapture.fragments.selectprogram.SelectProgramFragmentQuery.java", "BodyUseAPI": [], "Fixed commit": "7d7ecabc395315ecbd3292efe5947d28ed0af109", "Url": "https://api.github.com/repos/dhis2/dhis2-android-trackercapture", "Date": "2015-05-27T11:25:09Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getEditor().getTreeItem()) != null) { getEditor().getTreeItem().rebaseTextFont(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2536/buggy-version/vcn.src.ru.vermilion.vcn.app.VermilionCascadeNotebook.java", "BodyUseAPI": [], "Fixed commit": "c6aa277d6c39fc6901ea1a473fc6baa0ccdaf0b0", "Url": "https://api.github.com/repos/AlexanderDrobyshevsky/vcn-project", "Date": "2014-04-08T20:03:44Z"},
{"Line": "=>578", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 18) activity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LOCKED);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7514/buggy-version/src.main.java.at.jclehner.rxdroid.Settings.java", "BodyUseAPI": [], "Fixed commit": "919fa61d21878edbe5e43304a28262c959af53af", "Url": "https://api.github.com/repos/jclehner/rxdroid", "Date": "2013-11-11T18:10:15Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((priorityLevel) == null) { return null; }else { return priorityLevel.getLevel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7768/buggy-version/src.models.Task.java", "BodyUseAPI": [], "Fixed commit": "97f3b26f2227833e12bd87f475fb4d61def28ceb", "Url": "https://api.github.com/repos/cs2103aug2014-w13-4j/main", "Date": "2014-09-30T12:59:10Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(elm.isExpandable())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1523/buggy-version/de.xwic.cube.webui.core.src.de.xwic.cube.webui.viewer.CubeViewerModel.java", "BodyUseAPI": [], "Fixed commit": "854de052b847cabe81f06f514f8477f610ee603b", "Url": "https://api.github.com/repos/xwic/cube", "Date": "2014-04-03T13:28:26Z"},
{"Line": "=>962", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.osate.aadl2.BasicPropertyAssociation.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (res instanceof org.osate.aadl2.NamedValue) { return ((org.osate.aadl2.EnumerationLiteral) (((org.osate.aadl2.NamedValue) (res)).getNamedValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4745/buggy-version/org.osate.xtext.aadl2.properties.src.org.osate.xtext.aadl2.properties.util.GetProperties.java", "BodyUseAPI": [], "Fixed commit": "6266669de23e7a201239ba34b40806f30892f3ed", "Url": "https://api.github.com/repos/osate/osate2-core", "Date": "2013-04-23T02:13:59Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dir.exists()) { success = dir.isDirectory(); }else { success = dir.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3126/buggy-version/ramler-java.src.main.java.org.ops4j.ramler.generator.FileHelper.java", "BodyUseAPI": ["java.io.File.isDirectory()", "java.io.File.mkdirs()"], "Fixed commit": "3029f6a6d39fb82b752967e205973623186e5650", "Url": "https://api.github.com/repos/ops4j/org.ops4j.ramler", "Date": "2017-03-22T22:18:39Z"},
{"Line": "=>479", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mIsLoadingMore)) { org.wordpress.android.datasets.CommentTable.deleteCommentsForBlogWithFilter(localBlogId, mStatusFilter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8902/buggy-version/WordPress.src.main.java.org.wordpress.android.ui.comments.CommentsListFragment.java", "BodyUseAPI": [], "Fixed commit": "16ff233fd37c3dc88930ef9565bbca154077f128", "Url": "https://api.github.com/repos/mzorz/WordPress-Android", "Date": "2016-06-24T02:38:24Z"},
{"Line": "=>1464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(t instanceof com.orientechnologies.orient.core.exception.ODatabaseException)) { throw t; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4261/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.tool.ODatabaseImport.java", "BodyUseAPI": [], "Fixed commit": "be871b841ff951aff39c0f42e5365635a2b83c2b", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-07-14T11:29:00Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.orcid.pojo.ajaxForm.PojoUtil.isEmpty(rUri.getPredefinedClientScope()))) { for (java.lang.String scope : rUri.getPredefinedClientScope().split(\" \")) { redirectUri.getScopes().add(scope); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/991/buggy-version/orcid-core.src.main.java.org.orcid.pojo.ajaxForm.RedirectUri.java", "BodyUseAPI": ["org.orcid.persistence.jpa.entities.ClientRedirectUriEntity.getPredefinedClientScope()", "rUri.getPredefinedClientScope().split(java.lang.String)"], "Fixed commit": "42e244fb3145ccd3829c034da7c796504cd1ac0f", "Url": "https://api.github.com/repos/ORCID/ORCID-Source", "Date": "2014-10-10T15:55:51Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.meta.ItemMeta.getLore()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (loreStrings.isEmpty()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2523/buggy-version/src.main.java.me.xhawk87.CreateYourOwnMenus.utils.MenuScriptUtils.java", "BodyUseAPI": [], "Fixed commit": "9a27894902354b4d2ae2708e2a9d340f15a55325", "Url": "https://api.github.com/repos/XHawk87/CreateYourOwnMenus", "Date": "2013-09-10T17:03:38Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (fragmentId != null) { java.util.Properties props = org.opennms.features.topology.plugins.topo.BundleContextHistoryManager.loadProperties(m_bundleContext); java.lang.String xml = props.getProperty(fragmentId); if ((xml == null) || (\"\".equals(xml))) { return null; }else { return javax.xml.bind.JAXB.unmarshal(new java.io.StringReader(xml), org.opennms.features.topology.api.support.SavedHistory.class); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/3934/buggy-version/features.topology-map.plugins.org.opennms.features.topology.plugins.topo.history.src.main.java.org.opennms.features.topology.plugins.topo.BundleContextHistoryManager.java", "BodyUseAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Fixed commit": "158103f0cf044542d630c26263a28b1746bcb939", "Url": "https://api.github.com/repos/OpenNMS/opennms", "Date": "2013-07-19T16:31:55Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fighterBulletElapsed > 500) { fighterFireDelayTime = java.lang.System.nanoTime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/1369/buggy-version/app.src.main.java.com.darch.game.GamePanel.java", "BodyUseAPI": [], "Fixed commit": "4897f4f6e93bac00409fdff98e09d787c1774c2f", "Url": "https://api.github.com/repos/JonTyler/AndroidGame", "Date": "2015-12-11T00:38:04Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dir != null) dir = new java.io.File(dir, edu.buffalo.memlib.Swap.swapDirName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/4968/buggy-version/src.edu.buffalo.memlib.Swap.java", "BodyUseAPI": [], "Fixed commit": "1e98c0097ec149350eed480f03614f2bc6fd6a97", "Url": "https://api.github.com/repos/CSE622MemTeam/MemoryPressureProject", "Date": "2014-12-01T23:00:19Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cur == '\"') && (!inQuote)) { inQuote = true; sb.append(cur); }else if (((cur == '\\'') && (i > 0)) && ((chars[(i - 1)]) == '\\\\')) { sb.append(cur); }else if ((cur == '\\'') && (!inQuote)) { inQuote = true; sb.append(cur); }else if ((cur == '\"') && inQuote) { inQuote = false; sb.append(cur); }else if ((cur == '\\'') && inQuote) { inQuote = false; sb.append(cur); }else if (inQuote) { sb.append(cur); }else if ((cur == '&') || (cur == '|')) { if (((i + 1) < (chars.length)) && ((chars[(i + 1)]) == cur)) { i++; if ((sb.length()) > 0) { tokens.add(sb.toString()); sb.setLength(0); } }else { sb.append(cur); } }else if (cur == '!') { if (((i + 1) < (chars.length)) && ((chars[(i + 1)]) == '=')) { sb.append(cur); }else { if ((sb.length()) > 0) { tokens.add(sb.toString()); sb.setLength(0); } } }else { sb.append(cur); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/130/buggy-version/src.edu.ucla.cs.mine.PredicatePatternMiner.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char)", "java.lang.StringBuilder.append(char)", "java.lang.StringBuilder.append(char)", "java.lang.StringBuilder.append(char)", "java.lang.StringBuilder.append(char)", "java.lang.StringBuilder.append(char)", "java.lang.StringBuilder.append(char)", "java.lang.StringBuilder.append(char)", "java.lang.StringBuilder.append(char)"], "Fixed commit": "b8fd4c5cc00837ba3a49a43c9c8ac66e7fb3de9d", "Url": "https://api.github.com/repos/husttroy/Maple", "Date": "2017-03-19T19:18:54Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((signUpList.size()) == 0) { competitionService.changeCompetitionStatus(compeId, 3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2946/buggy-version/src.main.java.com.future.controller.DepManagerController.java", "BodyUseAPI": [], "Fixed commit": "85d957c181027bfa4eccf81f90c199ac69ec1f65", "Url": "https://api.github.com/repos/futureGroup511/CompeManager", "Date": "2016-09-03T07:43:06Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.otbproject.otbproject.config.BotConfigHelper.getCopy(com.github.otbproject.otbproject.config.BotConfig)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((validatedConfig.isBotChannelDebug()) == null) { validatedConfig.setBotChannelDebug(defaultConfig.isBotChannelDebug()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/2250/buggy-version/src.main.java.com.github.otbproject.otbproject.config.ConfigValidator.java", "BodyUseAPI": ["com.github.otbproject.otbproject.config.BotConfig.setBotChannelDebug(defaultConfig.isBotChannelDebug())"], "Fixed commit": "d01743691867a039b1a74667b68a5354e4c53c5f", "Url": "https://api.github.com/repos/NthPortal/OTBProject", "Date": "2015-04-30T18:01:29Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((monitorLaunchPadThread) != null) monitorLaunchPadThread.interrupt();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7443/buggy-version/src.Team4450.Lib.LaunchPad.java", "BodyUseAPI": [], "Fixed commit": "e8d76e5a3d93e4d98e0b295a11b609efbd345215", "Url": "https://api.github.com/repos/MoSadie/Robot9", "Date": "2016-02-12T18:20:03Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((monitorGamePadThread) != null) monitorGamePadThread.interrupt();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7443/buggy-version/src.Team4450.Lib.GamePad.java", "BodyUseAPI": [], "Fixed commit": "e8d76e5a3d93e4d98e0b295a11b609efbd345215", "Url": "https://api.github.com/repos/MoSadie/Robot9", "Date": "2016-02-12T18:20:03Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((monitorGamePadThread) != null) monitorGamePadThread.interrupt();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7443/buggy-version/src.Team4450.Lib.GamePad.java", "BodyUseAPI": [], "Fixed commit": "e8d76e5a3d93e4d98e0b295a11b609efbd345215", "Url": "https://api.github.com/repos/MoSadie/Robot9", "Date": "2016-02-12T18:20:03Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (new java.util.Date().after(date)) { this.getRequest().setAttribute(RequestAttribute.ERROR, \"Angivet datum \u00e4r redan passerat.\"); this.forward(Page.CREATE_LISTING); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/8012/buggy-version/src.main.java.com.wannabeblocket.ah.servlets.CreateListingServlet.java", "BodyUseAPI": [], "Fixed commit": "94e99110d64a73d79dd733f30fdbbcdd1a39351d", "Url": "https://api.github.com/repos/chip2n/dat076-wannabe-blocket", "Date": "2013-10-22T06:40:45Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input[1].equals(\"-\")) lobbyPlayers.remove(player);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6925/buggy-version/src.main.java.com.company.Main.java", "BodyUseAPI": [], "Fixed commit": "bd02ab2ba2ebbe836bd1645c3c0dcaef788fe484", "Url": "https://api.github.com/repos/21las21/TrollInvasion", "Date": "2017-12-22T16:22:05Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cellPhase) == 2) { energyCount(); cellPhase = 2; badBot.resetIndex(); com.company.Cell select = badBot.upgrade(cells, players, playerTurn); acceptInput((((\"Bot:\" + (select.cellI)) + \" \") + (select.cellJ))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6925/buggy-version/src.main.java.com.company.Game.java", "BodyUseAPI": [], "Fixed commit": "bd02ab2ba2ebbe836bd1645c3c0dcaef788fe484", "Url": "https://api.github.com/repos/21las21/TrollInvasion", "Date": "2017-12-22T16:22:05Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.company.Game.canTurn()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (canTurn == 1) cellPhase = 0; else { cellPhase = 2; energyCount(); com.company.Game.print(outline, \"upgradePhase\"); com.company.Game.print(outline, \"energyLeft\", energy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/6925/buggy-version/src.main.java.com.company.Game.java", "BodyUseAPI": [], "Fixed commit": "bd02ab2ba2ebbe836bd1645c3c0dcaef788fe484", "Url": "https://api.github.com/repos/21las21/TrollInvasion", "Date": "2017-12-22T16:22:05Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (CCConfig.INSTANCE.getBool(\"changeDisplayName\")) { getPlayerEntity().refreshDisplayName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7086/buggy-version/src.k4unl.minecraft.colorchat.lib.User.java", "BodyUseAPI": [], "Fixed commit": "46ec874edb6595c280d32bb57948cb3fb87856f3", "Url": "https://api.github.com/repos/K-4U/ColorChat", "Date": "2015-01-12T13:17:53Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (CCConfig.INSTANCE.getBool(\"changeDisplayName\")) { for (k4unl.minecraft.colorchat.lib.User u : k4unl.minecraft.colorchat.lib.Users.getUsersByGroup(this)) { if ((u.getPlayerEntity()) != null) { u.getPlayerEntity().refreshDisplayName(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V102/7086/buggy-version/src.k4unl.minecraft.colorchat.lib.Group.java", "BodyUseAPI": [], "Fixed commit": "46ec874edb6595c280d32bb57948cb3fb87856f3", "Url": "https://api.github.com/repos/K-4U/ColorChat", "Date": "2015-01-12T13:17:53Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (className.equals(com.liferay.document.library.kernel.model.DLFileEntryConstants.getClassName())) { com.liferay.document.library.kernel.model.DLFileEntry dlFileEntry = _dlFileEntryLocalService.fetchDLFileEntry(classTypePK); if ((dlFileEntry == null) || ((dlFileEntry.getRepositoryId()) != groupId)) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2700/buggy-version/modules.apps.web-experience.asset.asset-categories-service.src.main.java.com.liferay.asset.categories.validator.CardinalityAssetEntryValidator.java", "BodyUseAPI": [], "Fixed commit": "d4edb29a6037b607d1487889b92e75e50f276c52", "Url": "https://api.github.com/repos/juliocamarero/liferay-portal", "Date": "2016-03-22T13:26:25Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((statsPanel.getParent()) == null) { overviewPanel.add(statsPanel, java.awt.BorderLayout.SOUTH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6890/buggy-version/watson.src.gui.LessonOverview.java", "BodyUseAPI": ["javax.swing.JPanel.add(javax.swing.JPanel,java.lang.String)"], "Fixed commit": "c1bf63c8f5b9d669d7c3b9ff1a5cd79a02dcbfd4", "Url": "https://api.github.com/repos/sofiemartins/watson", "Date": "2016-01-18T13:11:09Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (format.equals(\"antlr\")) { java.io.File f = new java.io.File(msg.fileName); if (f.exists()) { displayFileName = f.getName(); } }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1804/buggy-version/tool.src.org.antlr.v4.tool.ErrorManager.java", "BodyUseAPI": [], "Fixed commit": "f06549e2966e1c85cd9aee29764f3abecf5947fd", "Url": "https://api.github.com/repos/ewanmellor/antlr4", "Date": "2017-10-29T18:59:51Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.laytonsmith.PureUtilities.Vector3D.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (length == 0.0) { return com.laytonsmith.PureUtilities.Vector3D.ZERO; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2967/buggy-version/src.main.java.com.laytonsmith.PureUtilities.Vector3D.java", "BodyUseAPI": [], "Fixed commit": "c78461f759ad803b1d316533db976ed22ba9e0a6", "Url": "https://api.github.com/repos/EngineHub/CommandHelper", "Date": "2017-11-12T15:14:55Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.eyeseetea.malariacare.utils.Permissions.hasPermissions(org.eyeseetea.malariacare.utils.Permissions.activity, new java.lang.String[]{ permission }))) { android.support.v4.app.ActivityCompat.requestPermissions(org.eyeseetea.malariacare.utils.Permissions.activity, new java.lang.String[]{ permission }, code); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1868/buggy-version/app.src.main.java.org.eyeseetea.malariacare.utils.Permissions.java", "BodyUseAPI": ["android.support.v4.app.ActivityCompat.requestPermissions(android.app.Activity,java.lang.String[],int)"], "Fixed commit": "c8d15b6f1bfc7f30b0a244a2af3107d3f403d771", "Url": "https://api.github.com/repos/EyeSeeTea/malariapp", "Date": "2017-04-28T08:40:45Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((socket) != null) { socket.close(); socket = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8120/buggy-version/app.src.main.java.edu.ucsd.neurores.MainFragment.java", "BodyUseAPI": [], "Fixed commit": "1e2cff3dec062d6a34bbb662ab36368b541dc178", "Url": "https://api.github.com/repos/c1mckay/NeuroResAndroid", "Date": "2017-08-11T18:27:33Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (date != null) { java.util.Calendar cal = java.util.Calendar.getInstance(); cal.setTime(date); cal.set(java.util.Calendar.HOUR_OF_DAY, 23); cal.set(java.util.Calendar.MINUTE, 59); cal.set(java.util.Calendar.SECOND, 59); date = cal.getTime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3659/buggy-version/RequirementsManagement.src.edu.wpi.cs.wpisuitetng.modules.requirementsmanagement.models.Iteration.java", "BodyUseAPI": ["java.util.Calendar.setTime(java.util.Date)"], "Fixed commit": "dd5caea9329dddde05a96b85272da477e3385258", "Url": "https://api.github.com/repos/alexhenning/wpi-suite-tng", "Date": "2013-04-07T18:54:06Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (state == 1) com.ts.util.SensorOperator.running = true; else com.ts.util.SensorOperator.running = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1794/buggy-version/Arduino.Photocell.TempSensor.src.com.ts.util.SensorOperator.java", "BodyUseAPI": [], "Fixed commit": "f41e2bfdc82186f8568668b4c17055801b01e20a", "Url": "https://api.github.com/repos/grantlj/Electronic", "Date": "2014-03-10T07:17:28Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.ts.util.SensorOperator.isMonitoring()) response.sendRedirect(\"show.jsp\"); else request.getRequestDispatcher(\"param.jsp\").forward(request, response);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1794/buggy-version/Arduino.Photocell.TempSensor.src.com.ts.view.CheckComm.java", "BodyUseAPI": [], "Fixed commit": "f41e2bfdc82186f8568668b4c17055801b01e20a", "Url": "https://api.github.com/repos/grantlj/Electronic", "Date": "2014-03-10T07:17:28Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(requestedResources.isEmpty())) { recreateContainerRequest(requestedResources, loopCounter, resourceRequestor, removedContainerRequests); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1567/buggy-version/engine.src.main.java.com.datatorrent.stram.BlacklistBasedResourceRequestHandler.java", "BodyUseAPI": ["com.datatorrent.stram.BlacklistBasedResourceRequestHandler.recreateContainerRequest(java.util.Map<com.datatorrent.stram.StreamingContainerAgent.ContainerStartRequest, org.apache.commons.lang3.tuple.MutablePair<java.lang.Integer, org.apache.hadoop.yarn.client.api.AMRMClient.ContainerRequest>>,int,com.datatorrent.stram.ResourceRequestHandler,java.util.List<org.apache.hadoop.yarn.client.api.AMRMClient.ContainerRequest>)"], "Fixed commit": "3d27a31135cfd6097f5a09bc8bd176a17959a1e7", "Url": "https://api.github.com/repos/sandeshh/apex-core", "Date": "2016-12-25T07:25:31Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (attended) { history.add(true); }else { history.add(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3476/buggy-version/src.cz.kamenitxan.raiders.attendance.AttendanceHistory.java", "BodyUseAPI": [], "Fixed commit": "287778703bf178c452ed4d93d4fba00decd493f3", "Url": "https://api.github.com/repos/kamenitxan/luzanky-rainders", "Date": "2015-03-04T15:45:01Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!done) { ch.setAttendanceHistory(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3476/buggy-version/src.cz.kamenitxan.raiders.attendance.Attendance.java", "BodyUseAPI": [], "Fixed commit": "287778703bf178c452ed4d93d4fba00decd493f3", "Url": "https://api.github.com/repos/kamenitxan/luzanky-rainders", "Date": "2015-03-04T15:45:01Z"},
{"Line": "=>2616", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arraylength == 1) { org.fhaes.fhfilereader.FHX2FileReader.log.info(((\"No data for series \" + (i + 1)) + \" so skipping\")); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5381/buggy-version/FHUtil.src.main.java.org.fhaes.fhfilereader.FHX2FileReader.java", "BodyUseAPI": [], "Fixed commit": "b3a4c608ce8dda771a27d979618412a29120a67d", "Url": "https://api.github.com/repos/valorcrow/fhaes", "Date": "2015-11-03T23:20:19Z"},
{"Line": "=>2638", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fhaes.fhfilereader.FHX2FileReader.getEventDataArrays(EventTypeToProcess.INJURY_EVENT)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((eda2 != null) && ((eda2.size()) > 0)) injuryYears[j] = (eda2.get(i).get(ind)) == 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5381/buggy-version/FHUtil.src.main.java.org.fhaes.fhfilereader.FHX2FileReader.java", "BodyUseAPI": ["java.util.ArrayList<java.util.ArrayList<java.lang.Integer>>.get(int)", "java.util.ArrayList<java.lang.Integer>.get(int)"], "Fixed commit": "b3a4c608ce8dda771a27d979618412a29120a67d", "Url": "https://api.github.com/repos/valorcrow/fhaes", "Date": "2015-11-03T23:20:19Z"},
{"Line": "=>2634", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fhaes.fhfilereader.FHX2FileReader.getRecorderYears2DArray()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((rya != null) && ((rya.size()) > 0)) recordingYears[j] = (rya.get(i).get(ind)) == 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5381/buggy-version/FHUtil.src.main.java.org.fhaes.fhfilereader.FHX2FileReader.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.get(int)", "java.util.ArrayList<java.util.ArrayList<java.lang.Integer>>.get(int)"], "Fixed commit": "b3a4c608ce8dda771a27d979618412a29120a67d", "Url": "https://api.github.com/repos/valorcrow/fhaes", "Date": "2015-11-03T23:20:19Z"},
{"Line": "=>2636", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fhaes.fhfilereader.FHX2FileReader.getEventDataArrays(EventTypeToProcess.FIRE_EVENT)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((eda1 != null) && ((eda1.size()) > 0)) eventYears[j] = (eda1.get(i).get(ind)) == 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5381/buggy-version/FHUtil.src.main.java.org.fhaes.fhfilereader.FHX2FileReader.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.get(int)", "java.util.ArrayList<java.util.ArrayList<java.lang.Integer>>.get(int)"], "Fixed commit": "b3a4c608ce8dda771a27d979618412a29120a67d", "Url": "https://api.github.com/repos/valorcrow/fhaes", "Date": "2015-11-03T23:20:19Z"},
{"Line": "=>896", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (prevToken.equals(\"]\")) { if (true) throw new mjc.lexer.ParseException(\"No support for multidimensional arrays\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4400/buggy-version/src.mjc.lexer.Lexer.java", "BodyUseAPI": [], "Fixed commit": "0836e56f2e44081042d812618430cc3a083d3f17", "Url": "https://api.github.com/repos/langest/komp14", "Date": "2014-04-01T14:27:06Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ab.demo.other.GameState.problemState) != null) { ab.demo.other.GameState.problemState.vision = ab.demo.other.GameState.vision; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6650/buggy-version/src.ab.demo.other.GameState.java", "BodyUseAPI": [], "Fixed commit": "5d91597d51a98dec0e122d399996295cb5d962d3", "Url": "https://api.github.com/repos/jgonsior/AngryProgrammers", "Date": "2017-01-26T11:07:31Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.show) != null) { reinitShow(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2893/buggy-version/src.main.java.com.rabbit.gui.base.Stage.java", "BodyUseAPI": [], "Fixed commit": "52556a34f0c442c10c0efaa1e137016a457b8fbb", "Url": "https://api.github.com/repos/FRedEnergy/rabbit-gui", "Date": "2016-01-10T13:23:10Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.Integer, java.util.concurrent.ConcurrentHashMap<org.wso2.carbon.event.input.adaptor.core.message.config.InputEventAdaptorMessageConfiguration, org.wso2.carbon.databridge.commons.StreamDefinition>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (tenantSpecificInputStreamDefinitionMap != null) { org.wso2.carbon.databridge.commons.StreamDefinition streamDefinition = tenantSpecificInputStreamDefinitionMap.get(inputEventAdaptorMessageConfiguration); if (streamDefinition != null) { inputEventAdaptorListener.addEventDefinitionCall(streamDefinition); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5646/buggy-version/components.adaptors.event-input-adaptor.org.wso2.carbon.event.input.adaptor.wso2event.src.main.java.org.wso2.carbon.event.input.adaptor.wso2event.WSO2EventEventAdaptorType.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentHashMap<org.wso2.carbon.event.input.adaptor.core.message.config.InputEventAdaptorMessageConfiguration, org.wso2.carbon.databridge.commons.StreamDefinition>.get(org.wso2.carbon.event.input.adaptor.core.message.config.InputEventAdaptorMessageConfiguration)"], "Fixed commit": "67fcbb810d403469b7662976f2ff80c071698e12", "Url": "https://api.github.com/repos/wso2/carbon-event-processing", "Date": "2014-08-20T11:24:41Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(repositoryUrl.contains(\"//\"))) { repositoryUrl = \"//\" + repositoryUrl; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7312/buggy-version/src.rb.PostReviewAction.java", "BodyUseAPI": [], "Fixed commit": "d679d1a0bace6b0c86b0f5a68131ccd45845276c", "Url": "https://api.github.com/repos/kaneg/reviewboard-plugin-for-idea", "Date": "2016-03-29T03:09:53Z"},
{"Line": "=>739", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null == properties) || (!(properties.containsKey(\"service.FileCopier.default.provider\")))) { newProps.setProperty(\"service.FileCopier.default.provider\", \"jsch-scp\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3082/buggy-version/core.src.main.java.com.dtolabs.rundeck.core.common.FrameworkProject.java", "BodyUseAPI": [], "Fixed commit": "ef1a2fcedb5d45c09349868e94b75a993d2377f7", "Url": "https://api.github.com/repos/dtolabs/rundeck", "Date": "2013-10-29T16:25:39Z"},
{"Line": "=>746", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null == properties) || (!(properties.containsKey(\"project.ssh-authentication\")))) { newProps.setProperty(\"project.ssh-authentication\", \"privateKey\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3082/buggy-version/core.src.main.java.com.dtolabs.rundeck.core.common.FrameworkProject.java", "BodyUseAPI": [], "Fixed commit": "ef1a2fcedb5d45c09349868e94b75a993d2377f7", "Url": "https://api.github.com/repos/dtolabs/rundeck", "Date": "2013-10-29T16:25:39Z"},
{"Line": "=>742", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null == properties) || (!(properties.containsKey(\"project.ssh-keypath\")))) { newProps.setProperty(\"project.ssh-keypath\", new java.io.File(java.lang.System.getProperty(\"user.home\"), \".ssh/id_rsa\").getAbsolutePath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3082/buggy-version/core.src.main.java.com.dtolabs.rundeck.core.common.FrameworkProject.java", "BodyUseAPI": [], "Fixed commit": "ef1a2fcedb5d45c09349868e94b75a993d2377f7", "Url": "https://api.github.com/repos/dtolabs/rundeck", "Date": "2013-10-29T16:25:39Z"},
{"Line": "=>736", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null == properties) || (!(properties.containsKey(\"service.NodeExecutor.default.provider\")))) { newProps.setProperty(\"service.NodeExecutor.default.provider\", \"jsch-ssh\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3082/buggy-version/core.src.main.java.com.dtolabs.rundeck.core.common.FrameworkProject.java", "BodyUseAPI": [], "Fixed commit": "ef1a2fcedb5d45c09349868e94b75a993d2377f7", "Url": "https://api.github.com/repos/dtolabs/rundeck", "Date": "2013-10-29T16:25:39Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (serverEtag == null) { serverEtag = headers.get(\"Etag\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6847/buggy-version/src.com.android.volley.toolbox.HttpHeaderParser.java", "BodyUseAPI": [], "Fixed commit": "08dcbff7c7bbbf8cfc748d589535a7c3ff24be09", "Url": "https://api.github.com/repos/chicheng/Volley", "Date": "2013-11-11T04:08:59Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.charlesbishop.webrest.util.UserCreationUtil.emailIsValid(email))) { model.addAttribute(\"error\", \"Please input a valid email address.\"); return signupPage; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/9020/buggy-version/src.main.java.com.charlesbishop.webrest.controller.UserSignupController.java", "BodyUseAPI": [], "Fixed commit": "3c44de2bee3bf5d4b23bc87518555eba507ba429", "Url": "https://api.github.com/repos/charleshb417/webrest", "Date": "2017-02-23T02:34:02Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(senderSurname1.equals(\"anyType{}\"))) sender += senderSurname1 + \" \";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4722/buggy-version/SWADroid.src.es.ugr.swad.swadroid.modules.notifications.NotificationsCursorAdapter.java", "BodyUseAPI": [], "Fixed commit": "644b1cc6ef26f05218f259477e5309957cb7d4d2", "Url": "https://api.github.com/repos/Amab/SWADroid", "Date": "2011-04-14T18:16:06Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(senderFirstname.equals(\"anyType{}\"))) sender += senderFirstname + \" \";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4722/buggy-version/SWADroid.src.es.ugr.swad.swadroid.modules.notifications.NotificationsCursorAdapter.java", "BodyUseAPI": [], "Fixed commit": "644b1cc6ef26f05218f259477e5309957cb7d4d2", "Url": "https://api.github.com/repos/Amab/SWADroid", "Date": "2011-04-14T18:16:06Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loadedElement == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5750/buggy-version/GraphEdit.src.graphedit.model.elements.GraphEditPackage.java", "BodyUseAPI": [], "Fixed commit": "38012f5d6913d008f45e489bf0f5e11b4136d30d", "Url": "https://api.github.com/repos/KROKIteam/KROKI-mockup-tool", "Date": "2014-05-28T09:20:20Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((pattern == null) || (pattern.isEmpty())) { this.pattern = null; }else { this.pattern = java.util.regex.Pattern.compile(pattern); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6306/buggy-version/src.main.java.hudson.plugins.jira.versionparameter.JiraVersionParameterDefinition.java", "BodyUseAPI": ["java.util.regex.Pattern.compile(java.lang.String)"], "Fixed commit": "02a477c5bf0180396754e5060ef21cd89e50a862", "Url": "https://api.github.com/repos/jhansche/jira-plugin", "Date": "2012-05-09T18:50:04Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((averageDistance) != 0) && ((java.lang.Math.abs((distance - (averageDistance)))) > (it.cecchi.smarthome.service.raspsonar.RaspsonarServiceImpl.WRONG_MEASUREMENT_THRESHOLD))) { it.cecchi.smarthome.service.raspsonar.RaspsonarServiceImpl.logger.warn((((\"Wrong measurement detected. Previous distance value: \" + (averageDistance)) + \". Actual: \") + distance)); getDistance(resetAverageDistance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1841/buggy-version/smarthome.smarthome-webapp.src.main.java.it.cecchi.smarthome.service.raspsonar.RaspsonarServiceImpl.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String)"], "Fixed commit": "3b1e0bfa57ee28bc094cec671d44644d38be6280", "Url": "https://api.github.com/repos/cecchisandrone/raspberrypi", "Date": "2014-05-31T08:18:13Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nextEntryOffset != 0) { currentPos += nextEntryOffset; buffer.rpos(currentPos); }else { buffer.rpos(((currentPos + 12) + ((int) (fileNameLen)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1331/buggy-version/src.main.java.com.hierynomus.mssmb2.messages.SMB2ChangeNotifyResponse.java", "BodyUseAPI": [], "Fixed commit": "63b552b48ef4a0cd6d97c504e12ff32205ab458e", "Url": "https://api.github.com/repos/ndimitry/smbj", "Date": "2017-09-28T17:50:08Z"},
{"Line": "=>1475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stepExecution) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6076/buggy-version/src.main.java.jp.co.misumi.batch.FVQ_ItemProcessor.java", "BodyUseAPI": [], "Fixed commit": "b0b2072987b6b3aba0589f0b41f9d44291e1dd03", "Url": "https://api.github.com/repos/whtqqq/Spring-batch-demo", "Date": "2017-03-22T06:51:35Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((adminInstance.getProductOptionValues().size()) > 0) { adminInstance.getProductOptionValues().clear(); dynamicEntityDao.merge(adminInstance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8049/buggy-version/admin.broadleaf-admin-module.src.main.java.org.broadleafcommerce.admin.server.service.handler.SkuCustomPersistenceHandler.java", "BodyUseAPI": ["adminInstance.getProductOptionValues().clear()", "org.broadleafcommerce.core.catalog.domain.Sku.getProductOptionValues()", "org.broadleafcommerce.openadmin.server.dao.DynamicEntityDao.merge(org.broadleafcommerce.core.catalog.domain.Sku)"], "Fixed commit": "a8174b055c6702461a2344755ac5ecade6f2225e", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2012-09-18T20:19:41Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((table.getSelectedRow()) > (-1)) infoFrame = openOrderInfo(ee.ut.math.tvt.salessystem.ui.tabs.HistoryTab.Hmodel.getOrder(table.getSelectedRow()).getProducts());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2117/buggy-version/src.ee.ut.math.tvt.salessystem.ui.tabs.HistoryTab.java", "BodyUseAPI": ["ee.ut.math.tvt.salessystem.ui.tabs.HistoryTab.Hmodel.getOrder(table.getSelectedRow()).getProducts()", "ee.ut.math.tvt.salessystem.ui.tabs.HistoryTab.1.openOrderInfo(ee.ut.math.tvt.salessystem.ui.tabs.HistoryTab.Hmodel.getOrder(table.getSelectedRow()).getProducts())", "ee.ut.math.tvt.salessystem.ui.model.HistoryTableModel.getOrder(int)", "javax.swing.JTable.getSelectedRow()"], "Fixed commit": "1b01a15b73eb88c1ff76da68d22efc6cd7a99706", "Url": "https://api.github.com/repos/OttMatiisen/Default", "Date": "2014-11-07T13:09:07Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLoggedIn) { canSeeAddCommentButton = isAllowedToAddCommentsToProposalEvaluationInContestPhase(); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7577/buggy-version/portlets.proposals-portlet.src.main.java.org.xcolab.portlets.proposals.discussion.ProposalDiscussionPermissions.java", "BodyUseAPI": [], "Fixed commit": "dc96f1ddeafcf27af337afc54c79cbfa4defd8bb", "Url": "https://api.github.com/repos/CCI-MIT/XCoLab", "Date": "2016-12-26T13:43:15Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (scale != null) setSurfaceScale(scale); else setSurfaceScale(new float[]{ 1.0F, 1.0F });", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7589/buggy-version/jzy3d-api.src.awt.org.jzy3d.plot3d.rendering.canvas.CanvasAWT.java", "BodyUseAPI": ["org.jzy3d.plot3d.rendering.canvas.CanvasAWT.setSurfaceScale(float[])"], "Fixed commit": "4278877e1ce83539ab20b12cf2bd96bc4cbc3412", "Url": "https://api.github.com/repos/gcauchis/jzy3d-api", "Date": "2016-04-13T07:35:06Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.seed) == null) || ((this.seed.length) != (seed.length))) { this.seed = new byte[seed.length]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4878/buggy-version/betterrandom.src.main.java.io.github.pr0methean.betterrandom.prng.RandomWrapper.java", "BodyUseAPI": [], "Fixed commit": "6b26292c705fb31a6567701c0a3a5653281e90b2", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2017-09-29T01:48:01Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["im.vector.services.EventStreamService.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (null != eventStreamService) { java.util.ArrayList<java.lang.String> matrixIds = new java.util.ArrayList<>(); matrixIds.add(session.getMyUserId()); eventStreamService.stopAccounts(matrixIds); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/584/buggy-version/vector.src.main.java.im.vector.activity.CommonActivityUtils.java", "BodyUseAPI": ["im.vector.services.EventStreamService.stopAccounts(java.util.ArrayList<java.lang.String>)"], "Fixed commit": "7a2c860ebf287e84b146b3c7b802c55bb6a29e78", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2017-09-11T07:25:04Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.ow2.proactive.scheduler.policy.license.LicenseSchedulingPolicy.eligibleTasksDescriptorsLicenses.containsKey(currentRequiredLicense))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6614/buggy-version/scheduler.scheduler-server.src.main.java.org.ow2.proactive.scheduler.policy.license.LicenseSchedulingPolicy.java", "BodyUseAPI": [], "Fixed commit": "ee63bb55186a98ce55000b92e04fd5a8abe706af", "Url": "https://api.github.com/repos/luispinedamx/scheduling", "Date": "2017-11-24T09:23:44Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"\".equals(overrideBaseURI.toASCIIString()))) { receiver.setSystemId(overrideBaseURI.toASCIIString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3915/buggy-version/src.com.xmlcalabash.util.TreeWriter.java", "BodyUseAPI": ["net.sf.saxon.event.Receiver.setSystemId(java.lang.String)", "java.net.URI.toASCIIString()"], "Fixed commit": "683726df828fd7d31855d19eb731de8333769a29", "Url": "https://api.github.com/repos/rdeltour/xmlcalabash1", "Date": "2014-05-08T01:42:51Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connDef instanceof org.jboss.jca.common.api.metadata.common.v12.CommonConnDef) { setAttribute(model, org.jboss.as.connector.subsystems.resourceadapters.Constants.CONNECTABLE, ((org.jboss.jca.common.api.metadata.common.v12.CommonConnDef) (connDef)).isConnectable()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7935/buggy-version/connector.src.main.java.org.jboss.as.connector.subsystems.resourceadapters.IronJacamarResourceCreator.java", "BodyUseAPI": [], "Fixed commit": "7af59a1fc10113dadc39cbcfffd6ebaf1d453885", "Url": "https://api.github.com/repos/kabir/wildfly", "Date": "2014-03-20T13:52:55Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (window != null) { window.setBackgroundDrawableResource(android.R.color.transparent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5353/buggy-version/widget.src.main.java.com.lance.common.widget.dialog.CustomizableConfirmDialog.java", "BodyUseAPI": [], "Fixed commit": "34abb2093b78f0b2d7b603550b81288eb70837d2", "Url": "https://api.github.com/repos/lindan83/CommonWidget", "Date": "2017-04-01T02:19:09Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (window != null) { window.setBackgroundDrawableResource(android.R.color.transparent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5353/buggy-version/widget.src.main.java.com.lance.common.widget.dialog.CustomizableAlertDialog.java", "BodyUseAPI": [], "Fixed commit": "34abb2093b78f0b2d7b603550b81288eb70837d2", "Url": "https://api.github.com/repos/lindan83/CommonWidget", "Date": "2017-04-01T02:19:09Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (d == 1) indice = 0; else indice = m.component().index;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4766/buggy-version/Electronique.src.resolution.Extracteur.java", "BodyUseAPI": [], "Fixed commit": "3d4a6464fb36c0ebb80b80b55c8b07f54545a0ef", "Url": "https://api.github.com/repos/HawkEyeshield/Projet-Info", "Date": "2016-04-22T16:07:56Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (promo != null) { if (!(pcDAO.isExist(promo))) { request.setAttribute(\"isExist\", false); return \"orderstart\"; }else { if (pcDAO.isUsed(promo)) { request.setAttribute(\"isUsed\", true); return \"orderstart\"; }else { if (pcDAO.isExpired(promo)) { request.setAttribute(\"isExpired\", true); return \"orderstart\"; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6144/buggy-version/src.main.java.com.nclodger.control.action.order.OrderFinishAction.java", "BodyUseAPI": ["com.nclodger.dao.PromoCodeDAO.isUsed(java.lang.String)", "com.nclodger.dao.PromoCodeDAO.isExist(java.lang.String)", "com.nclodger.dao.PromoCodeDAO.isExpired(java.lang.String)"], "Fixed commit": "601a9a058508de71be94a1d85ba3b6baced9c65e", "Url": "https://api.github.com/repos/reshet/NCLodger", "Date": "2013-11-26T19:45:55Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result) == (LazyFactory.LazyImpl.noResultYet)) { LazyFactory.LazyImplConcurrentLockFree.atomicResultUpdater.compareAndSet(this, LazyFactory.LazyImpl.noResultYet, supplier.get()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8477/buggy-version/hw1.src.main.java.LazyFactory.java", "BodyUseAPI": [], "Fixed commit": "031fb5a610c5bfefb3d00b51647aca59db0135d3", "Url": "https://api.github.com/repos/eshcherbin/spbau-java-2-homework", "Date": "2017-02-18T16:45:19Z"},
{"Line": "=>900", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(newFeatures.isEmpty())) { for (fi.aalto.trafficsense.trafficsense.ui.GeoJsonFeature feature : newFeatures) { pathLayer.addFeature(feature); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7903/buggy-version/app.src.main.java.fi.aalto.trafficsense.trafficsense.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "70b2640310a4c17662ead673c77218b2f429819e", "Url": "https://api.github.com/repos/aalto-trafficsense/trafficsense-android", "Date": "2016-05-24T20:15:28Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.wso2.carbon.identity.notification.mgt.NotificationMgtConfigBuilder.log.isDebugEnabled()) { org.wso2.carbon.identity.notification.mgt.NotificationMgtConfigBuilder.log.debug(\"Secret Resolver is not present. Will not resolve encryptions in config file\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8666/buggy-version/components.notification-mgt.org.wso2.carbon.identity.notification.mgt.src.main.java.org.wso2.carbon.identity.notification.mgt.NotificationMgtConfigBuilder.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug(java.lang.String)"], "Fixed commit": "b7e3a02ec3186fbc6d7ba03b8a14f1bbcd8aea5a", "Url": "https://api.github.com/repos/wso2-attic/carbon-identity", "Date": "2015-12-02T10:32:38Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.svij.taskwarriorapp.db.TaskDataSource.getTask(java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((task.getTags()) != null) { android.widget.TextView etTags = ((android.widget.TextView) (findViewById(R.id.etTags))); java.lang.String tagString = \"\"; for (java.lang.String s : task.getTags()) { tagString += s + \" \"; } etTags.setText(tagString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/9096/buggy-version/src.org.svij.taskwarriorapp.activities.TaskAddActivity.java", "BodyUseAPI": ["org.svij.taskwarriorapp.data.Task.getTags()"], "Fixed commit": "0cc87c74ef0e608a484413946f03b5175b6e2663", "Url": "https://api.github.com/repos/svijee/taskwarrior-androidapp", "Date": "2013-11-23T18:04:23Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(tagString.trim())) { holder.taskTags.setVisibility(View.GONE); }else { holder.taskTags.setVisibility(View.VISIBLE); holder.taskTags.setText(tagString.toUpperCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/9096/buggy-version/src.org.svij.taskwarriorapp.db.TaskBaseAdapter.java", "BodyUseAPI": ["java.lang.String.toUpperCase()", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "0cc87c74ef0e608a484413946f03b5175b6e2663", "Url": "https://api.github.com/repos/svijee/taskwarrior-androidapp", "Date": "2013-11-23T18:04:23Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(workload_str.isEmpty())) { workload = java.lang.Double.valueOf(workload_str); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3552/buggy-version/src.cn.edu.wust.shenyang.payment.AddEmployerUI.java", "BodyUseAPI": ["java.lang.Double.valueOf(java.lang.String)"], "Fixed commit": "60a57773beb040ad99bc758068d80435b7bc4421", "Url": "https://api.github.com/repos/shenyang111/Java-exam", "Date": "2016-11-13T16:56:14Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(swipeRefreshLayout.isRefreshing())) { swipeRefreshLayout.setRefreshing(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6646/buggy-version/app.src.main.java.com.frankd.wttv.ArtistListActivity.java", "BodyUseAPI": ["android.support.v4.widget.SwipeRefreshLayout.setRefreshing(boolean)"], "Fixed commit": "8ec822006430c62295a02c8544ad3a3686a4f5af", "Url": "https://api.github.com/repos/frankdoesburg/WTTV2015", "Date": "2015-07-10T07:00:33Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(swipeRefreshLayout.isRefreshing())) { swipeRefreshLayout.post(new java.lang.Runnable() { @java.lang.Override public void run() { swipeRefreshLayout.setRefreshing(true); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6646/buggy-version/app.src.main.java.com.frankd.wttv.MainActivity.java", "BodyUseAPI": ["android.support.v4.widget.SwipeRefreshLayout.post(java.lang.Runnable)", "android.support.v4.widget.SwipeRefreshLayout.setRefreshing(boolean)"], "Fixed commit": "8ec822006430c62295a02c8544ad3a3686a4f5af", "Url": "https://api.github.com/repos/frankdoesburg/WTTV2015", "Date": "2015-07-10T07:00:33Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(expArr.isEmpty())) { ret.put(\"experiments\", expArr); if (!(soilTmpMap.isEmpty())) { ret.put(\"soils\", new java.util.ArrayList(soilTmpMap.values())); } if (!(wthTmpMap.isEmpty())) { ret.put(\"weathers\", new java.util.ArrayList(wthTmpMap.values())); } }else { if (!(soilArr.isEmpty())) { ret.put(\"soils\", soilArr); } if (!(wthArr.isEmpty())) { ret.put(\"weathers\", wthArr); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4737/buggy-version/src.main.java.org.agmip.translators.dssat.DssatControllerInput.java", "BodyUseAPI": ["java.util.LinkedHashMap.put(java.lang.String,java.util.ArrayList<java.util.LinkedHashMap>)"], "Fixed commit": "2e1baa592dfe5fd57d0392709fc3395f057ae3bc", "Url": "https://api.github.com/repos/MengZhang/translator-dssat", "Date": "2012-09-30T04:37:58Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((soilFiles.get(id)) != null) { soilFiles.get(id).delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4737/buggy-version/src.main.java.org.agmip.translators.dssat.DssatControllerOutput.java", "BodyUseAPI": ["java.io.File.delete()", "java.util.HashMap<java.lang.String, java.io.File>.get(java.lang.String)"], "Fixed commit": "2e1baa592dfe5fd57d0392709fc3395f057ae3bc", "Url": "https://api.github.com/repos/MengZhang/translator-dssat", "Date": "2012-09-30T04:37:58Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((wthFiles.get(id)) != null) { wthFiles.get(id).delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4737/buggy-version/src.main.java.org.agmip.translators.dssat.DssatControllerOutput.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.io.File>.get(java.lang.String)", "java.io.File.delete()"], "Fixed commit": "2e1baa592dfe5fd57d0392709fc3395f057ae3bc", "Url": "https://api.github.com/repos/MengZhang/translator-dssat", "Date": "2012-09-30T04:37:58Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((referenceImage) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1815/buggy-version/ImageFilter.src.imagefilter.model.Model.java", "BodyUseAPI": [], "Fixed commit": "04f2647b1f7f3e8ae2ac50104961244ba73b9142", "Url": "https://api.github.com/repos/Restoro/ImageFilter", "Date": "2016-05-25T13:47:39Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request().cookie(controllers.Application.COOKIE_NAME)) == null) { for (play.mvc.Http.Cookie cookie : response().cookies()) { if (cookie.name().equals(controllers.Application.COOKIE_NAME)) { player = cookie.value(); } } player = \"Unknown\"; }else { java.lang.String checkersId = request().cookie(controllers.Application.COOKIE_NAME).value(); java.lang.String[] ids = checkersId.split(\"_\"); player = ids[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3788/buggy-version/app.controllers.Application.java", "BodyUseAPI": ["request().cookie(controllers.Application.COOKIE_NAME).value()", "cookie.name().equals(java.lang.String)", "request().cookie(java.lang.String)"], "Fixed commit": "9ce5b267833ea8434b555f2f14c934633045b866", "Url": "https://api.github.com/repos/julmayer/checkersWUI", "Date": "2014-11-27T09:16:19Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eol.globi.service.DatasetImpl.getOrDefault(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(org.apache.commons.lang3.StringUtils.contains(citation, \"doi.org\"))) && (!(org.apache.commons.lang3.StringUtils.contains(citation, \"doi:\")))) { java.util.List<java.lang.String> citationParts = java.util.Arrays.asList(org.apache.commons.lang3.StringUtils.trim(defaultString(citation)), defaultString(getDOI())); citation = join(citationParts, \". \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8358/buggy-version/eol-globi-data-sources.src.main.java.org.eol.globi.service.DatasetImpl.java", "BodyUseAPI": ["java.util.Arrays.asList(org.apache.commons.lang3.StringUtils.trim(defaultString(citation)),defaultString(getDOI()))", "org.eol.globi.service.DatasetImpl.defaultString(java.lang.String)", "org.apache.commons.lang3.StringUtils.trim(defaultString(citation))"], "Fixed commit": "ab1ef405c2411328ab40cb18baadcd698813e64f", "Url": "https://api.github.com/repos/jhpoelen/eol-globi-data", "Date": "2016-12-29T23:34:40Z"},
{"Line": "=>863", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id.isEmpty()) { _logger.warn((\"ConceptService.annotate() warning: cannot return \" + \"an annotated Concept without an Accession Id!?\")); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/564/buggy-version/core.src.main.java.bio.knowledge.service.ConceptService.java", "BodyUseAPI": [], "Fixed commit": "e29ad915b42ec9b219a1bba92e15dcef24957723", "Url": "https://api.github.com/repos/NCATS-Tangerine/tkbio", "Date": "2017-06-08T18:02:24Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (jenkins == null) { return hudson.util.FormValidation.error(\"Jenkins instance is not ready. Cannot validate the field\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6401/buggy-version/src.main.java.hudson.security.GlobalMatrixAuthorizationStrategy.java", "BodyUseAPI": [], "Fixed commit": "227960a8d230ec79741903948c02064c5e195a34", "Url": "https://api.github.com/repos/jenkinsci/matrix-auth-plugin", "Date": "2015-07-21T08:35:29Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (jenkins == null) { return hudson.util.FormValidation.error(\"Jenkins instance is not ready. Cannot validate the field\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6401/buggy-version/src.main.java.hudson.security.GlobalMatrixAuthorizationStrategy.java", "BodyUseAPI": [], "Fixed commit": "227960a8d230ec79741903948c02064c5e195a34", "Url": "https://api.github.com/repos/jenkinsci/matrix-auth-plugin", "Date": "2015-07-21T08:35:29Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tsinghua.nebulabox.ui.adapter.SeafItemAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (seafItem instanceof com.tsinghua.nebulabox.data.SeafRepo) { com.tsinghua.nebulabox.data.SeafRepo seafRepo = ((com.tsinghua.nebulabox.data.SeafRepo) (seafItem)); navContext.setRepoID(seafRepo.id); navContext.setRepoName(seafRepo.getName()); navContext.setDir(\"/\", seafRepo.root); refreshView(false); mActivity.subTitleTextView.setText(seafRepo.getName()); }else { android.util.Log.e(com.tsinghua.nebulabox.ui.fragment.main.ReposFragment.DEBUG_TAG, \"split line\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4117/buggy-version/app.src.main.java.com.tsinghua.nebulabox.ui.fragment.main.ReposFragment.java", "BodyUseAPI": [], "Fixed commit": "423a7ed325f7243da46b6a90058f9b16ae86e9e3", "Url": "https://api.github.com/repos/goaxe/NebulaBox", "Date": "2016-07-30T17:36:17Z"},
{"Line": "=>643", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(newTime.equals(\"[]\"))) { newTime = getRoughTime(newTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5566/buggy-version/src.main.java.logic.CommandParser.java", "BodyUseAPI": ["main.java.logic.CommandParser.getRoughTime(java.lang.String)"], "Fixed commit": "6e1ecd5511a39c4b259105ce277564804ddb4ee7", "Url": "https://api.github.com/repos/cs2103jan2016-w14-3j/main", "Date": "2016-03-16T02:57:16Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5177/buggy-version/src.com.mijara.types.Type.java", "BodyUseAPI": [], "Fixed commit": "9cc0c94e5aebf3515694037172378d5e345a075c", "Url": "https://api.github.com/repos/mijara/jinl", "Date": "2016-12-10T01:27:50Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["keyParamPairs.get(0).getParam().split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((combinedParam.length) > 1) { title = combinedParam[1]; if (!(title.equals(\"\"))) { containsNewName = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6516/buggy-version/src.com.equinox.EditCommand.java", "BodyUseAPI": [], "Fixed commit": "3dcd10d4a35b1070937757d018eb470b3a451412", "Url": "https://api.github.com/repos/cs2103jan2015-w15-3j/main", "Date": "2015-06-11T01:07:54Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mGroup) == null) { mGroup = mContext.getString(R.string.export_group_default); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6817/buggy-version/app.src.main.java.bravest.ptt.efastquery.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f4518387458c0db7e95900ccd7f4fe174ba995bb", "Url": "https://api.github.com/repos/Bravest-Ptt/EFastQuery-Android", "Date": "2017-02-21T01:38:09Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (code instanceof wyjc.io.DictLoad) { translate(((wyjc.io.DictLoad) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.End) { translate(((wyjc.io.End) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.ExternJvm) { }else if (code instanceof wyjc.io.Fail) { translate(((wyjc.io.Fail) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.FieldLoad) { translate(((wyjc.io.FieldLoad) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.ForAll) { freeSlot = translate(((wyjc.io.ForAll) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.Goto) { translate(((wyjc.io.Goto) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.IfGoto) { translate(((wyjc.io.IfGoto) (code)), stmt, freeSlot, bytecodes); }else if (code instanceof wyjc.io.IndirectInvoke) { translate(((wyjc.io.IndirectInvoke) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.IndirectSend) { translate(((wyjc.io.IndirectSend) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.Invoke) { translate(((wyjc.io.Invoke) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.Label) { translate(((wyjc.io.Label) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.ListLoad) { translate(((wyjc.io.ListLoad) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.Load) { translate(((wyjc.io.Load) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.Loop) { translate(((wyjc.io.Loop) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.MultiStore) { translate(((wyjc.io.MultiStore) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.NewDict) { translate(((wyjc.io.NewDict) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.NewList) { translate(((wyjc.io.NewList) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.NewRecord) { translate(((wyjc.io.NewRecord) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.NewSet) { translate(((wyjc.io.NewSet) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.Return) { translate(((wyjc.io.Return) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.Send) { translate(((wyjc.io.Send) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.Store) { translate(((wyjc.io.Store) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.UnOp) { translate(((wyjc.io.UnOp) (code)), freeSlot, bytecodes); }else { syntaxError(((\"unknown wyil code encountered (\" + code) + \")\"), filename, stmt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2615/buggy-version/src.wyjc.io.ClassFileBuilder.java", "BodyUseAPI": ["wyjc.io.ClassFileBuilder.syntaxError(((\"unknown wyil code encountered (\" + code) + \")\"),java.lang.String,wyjc.io.Entry)"], "Fixed commit": "2604951f236e4cade8ae71bd787f75d8f4023e1a", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-06-07T21:09:05Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((words.length) > nextThings) { if (words[nextThings].equals(\"hiding\")) { nextThings++; isHiding = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7802/buggy-version/net.sf.eclipsefp.haskell.ui.src.net.sf.eclipsefp.haskell.ui.internal.editors.haskell.imports.ImportsManager.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "204a3583c7bdcfb608cc5d05649b9f6b962f9571", "Url": "https://api.github.com/repos/serras/eclipsefp", "Date": "2011-08-22T14:50:44Z"},
{"Line": "=>582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBikeStationOverlay) != null) { mBikeStationOverlay.clearBikeStations(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/809/buggy-version/onebusaway-android.src.google.java.org.onebusaway.android.map.googlemapsv2.BaseMapFragment.java", "BodyUseAPI": [], "Fixed commit": "e2e07fba2862e3e3e4b254e13a1f9f5d2d22809f", "Url": "https://api.github.com/repos/carvalhorr/onebusaway-android", "Date": "2017-06-25T16:11:46Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((directlyConnectedNodes.doesDirectlyConnectedClientExist(bestCostNode)) == true) { nextHop = bestCostNode; }else { nextHop = nodeRepo.HMgetNode(bestCostNode).getOriginNextHop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8204/buggy-version/topology.FIB.java", "BodyUseAPI": ["topology.NodeRepository.HMgetNode(java.lang.String)", "nodeRepo.HMgetNode(bestCostNode).getOriginNextHop()"], "Fixed commit": "37839effa0734af3e8ce95bff48165ff19f10828", "Url": "https://api.github.com/repos/ichiranjain/Content-Addressable-CDN", "Date": "2015-05-06T03:34:45Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) < 2) { return new de.age.httpcmd.commands.ErrorCommand(\"missing path from command\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2750/buggy-version/src.main.java.de.age.httpcmd.commands.BaseCommand.java", "BodyUseAPI": [], "Fixed commit": "d7e233821416ec267d671baaa4900fa0d995c72d", "Url": "https://api.github.com/repos/agerhardt/httpcmd", "Date": "2013-09-26T18:57:22Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.age.httpcmd.util.EnhancedStringTokenizer.getAllTokens()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tokens.size()) == 0) { return ErrorCommand.UNKNOWNCOMMAND_FACTORY.createCommand(context, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2750/buggy-version/src.main.java.de.age.httpcmd.HttpCommandLineClient.java", "BodyUseAPI": [], "Fixed commit": "d7e233821416ec267d671baaa4900fa0d995c72d", "Url": "https://api.github.com/repos/agerhardt/httpcmd", "Date": "2013-09-26T18:57:22Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(com.github.msoliter.iroh.container.sources.TypeSource.isConcrete(type.getModifiers()))) { throw new com.github.msoliter.iroh.container.exceptions.NonConcreteComponentClassException(type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1158/buggy-version/src.main.java.com.github.msoliter.iroh.container.sources.TypeSource.java", "BodyUseAPI": [], "Fixed commit": "2fb33196f0a307efcd9dd589c2881efdaa83eb8b", "Url": "https://api.github.com/repos/msoliter/iroh", "Date": "2014-07-04T19:50:14Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getInventory().getName()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5447/buggy-version/src.main.java.me.Qball.Wild.GUI.InvClick.java", "BodyUseAPI": [], "Fixed commit": "59192e9c9dc2eb374ca7a13e88494a056c6a9a64", "Url": "https://api.github.com/repos/Qballl/WildernessTp", "Date": "2017-09-01T03:48:54Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["InvClick.toSet.get(p.getUniqueId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (val == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5447/buggy-version/src.main.java.me.Qball.Wild.GUI.SetVal.java", "BodyUseAPI": [], "Fixed commit": "59192e9c9dc2eb374ca7a13e88494a056c6a9a64", "Url": "https://api.github.com/repos/Qballl/WildernessTp", "Date": "2017-09-01T03:48:54Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (message.matches(\"^You are banned from talking in .*\")) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4307/buggy-version/src.jtchat.irc.JtvIRCBot.java", "BodyUseAPI": [], "Fixed commit": "a2ec633357625feb8ceebc5442e1ed407072e583", "Url": "https://api.github.com/repos/fuunkaosekai/JTChat", "Date": "2013-09-07T23:56:20Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFilterOn) { if (source.equals(cutoff_slider)) { if (!(source.getValueIsAdjusting())) { cutoff_frequency = ((double) (source.getValue())); cutoff_value_label.setText((\"\" + ((int) (cutoff_frequency)))); gui_c.updateFilter(cutoff_frequency, frequency); } } if (source.equals(freq_slider)) { if (!(source.getValueIsAdjusting())) { frequency = ((double) (source.getValue())); freq_value_label.setText((\"\" + ((int) (frequency)))); gui_c.updateFilter(cutoff_frequency, frequency); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4023/buggy-version/src.com.igor.guitarproject.gui.MainGUI.java", "BodyUseAPI": [], "Fixed commit": "dd1f49fa2e7f98f8df4d0a68b4b970c5203c6fcf", "Url": "https://api.github.com/repos/igorracki/GuitarAmp_4th_Year_Main_Project", "Date": "2017-04-13T16:25:32Z"},
{"Line": "=>1225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["easycheckserver.persistencia.GestorPersistencia.getServeisTreballador(stringToInt(idTreballador))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (serveisTreballador == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/446/buggy-version/src.easycheckserver.persistencia.GestorPersistencia.java", "BodyUseAPI": [], "Fixed commit": "51a72fbce7a0951eab2acf17e5cd34be3608f888", "Url": "https://api.github.com/repos/jacdemanec/easycheckserver", "Date": "2017-12-11T19:46:35Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(coapResourceObservers.contains(remoteAddress, path))) { eu.spitfire_project.smart_service_proxy.backends.coap.CoapBackend.log.info((((\"Send observe request for service \" + path) + \" at \") + remoteAddress)); eu.spitfire_project.smart_service_proxy.backends.coap.CoapResourceObserver resourceObserver = new eu.spitfire_project.smart_service_proxy.backends.coap.CoapResourceObserver(this, remoteAddress, path); resourceObserver.writeRequestToObserveResource(); coapResourceObservers.put(remoteAddress, path, resourceObserver); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4401/buggy-version/src.main.java.eu.spitfire_project.smart_service_proxy.backends.coap.CoapBackend.java", "BodyUseAPI": ["org.apache.log4j.Logger.info(java.lang.String)", "com.google.common.collect.HashBasedTable<java.net.Inet6Address, java.lang.String, eu.spitfire_project.smart_service_proxy.backends.coap.CoapResourceObserver>.put(java.net.Inet6Address,java.lang.String,eu.spitfire_project.smart_service_proxy.backends.coap.CoapResourceObserver)"], "Fixed commit": "688debf79cf911e875a57474561adef8933bab73", "Url": "https://api.github.com/repos/ict-spitfire/smart-service-proxy", "Date": "2013-04-25T12:43:27Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((bankPath.getNext()) != null) && (!(bankPath.getNext().getArea().isVisible()))) { com.runemate.game.api.hybrid.local.Camera.concurrentlyTurnTo(bankPath.getNext()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7699/buggy-version/src.scripts.mining.locations.Location.java", "BodyUseAPI": ["com.runemate.game.api.hybrid.location.navigation.Path.getNext()", "com.runemate.game.api.hybrid.local.Camera.concurrentlyTurnTo(bankPath.getNext())"], "Fixed commit": "2518415fed2c10182f80210f3dae587dc82b0a82", "Url": "https://api.github.com/repos/JohnRThomas/EPATH-Mining-All-In-One", "Date": "2016-01-05T21:33:59Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((minePath.getNext()) != null) && (!(minePath.getNext().getArea().isVisible()))) { com.runemate.game.api.hybrid.local.Camera.concurrentlyTurnTo(minePath.getNext()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7699/buggy-version/src.scripts.mining.locations.Location.java", "BodyUseAPI": ["com.runemate.game.api.hybrid.location.navigation.Path.getNext()", "com.runemate.game.api.hybrid.local.Camera.concurrentlyTurnTo(minePath.getNext())"], "Fixed commit": "2518415fed2c10182f80210f3dae587dc82b0a82", "Url": "https://api.github.com/repos/JohnRThomas/EPATH-Mining-All-In-One", "Date": "2016-01-05T21:33:59Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Looper.myLooper()) == (android.os.Looper.getMainLooper())) { com.microsoft.applicationinsights.logging.InternalLogging.info(com.microsoft.applicationinsights.library.Sender.TAG, \"Kick of new async task\", \"\"); kickOffAsyncSendingTask().execute(); }else { if ((runningRequestCount()) < 10) { if ((this.persistence) != null) { java.io.File fileToSend = this.persistence.nextAvailableFile(); if (fileToSend != null) { send(fileToSend); } } }else { com.microsoft.applicationinsights.logging.InternalLogging.info(com.microsoft.applicationinsights.library.Sender.TAG, \"We have already 10 pending reguests\", \"\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8950/buggy-version/applicationinsights-android.src.main.java.com.microsoft.applicationinsights.library.Sender.java", "BodyUseAPI": [], "Fixed commit": "67ac6b69648907b63575698ff57142ab9f960d6b", "Url": "https://api.github.com/repos/Microsoft/ApplicationInsights-Android", "Date": "2015-05-06T13:59:27Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((paramData.pos) == (-1)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4505/buggy-version/src.main.java.de.kumpelblase2.remoteentities.persistence.BehaviorData.java", "BodyUseAPI": [], "Fixed commit": "828af95fbac0f74ceace6ff8e51739e4462b9fcc", "Url": "https://api.github.com/repos/BitLimit/Remote-Entities", "Date": "2013-09-29T23:16:25Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.NodeList.item(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (childElem.getParentNode().isSameNode(elem)) { javax.swing.tree.DefaultMutableTreeNode childTreeNode = ((javax.swing.tree.DefaultMutableTreeNode) (getTreeNodeWithChildren(childElem, resetIds))); treeNode.add(childTreeNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5205/buggy-version/src.main.java.com.github.surg83.modest.project.ProjectLoader.java", "BodyUseAPI": ["com.github.surg83.modest.project.ProjectLoader.getTreeNodeWithChildren(org.w3c.dom.Element,boolean)"], "Fixed commit": "74dc78e5d9935c828084c8e00c5d972f6b99b4ed", "Url": "https://api.github.com/repos/surg83/modest", "Date": "2016-12-25T19:45:12Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (evt.getPropertyName().equals(\"state\")) { if (evt.getNewValue().toString().equalsIgnoreCase(\"done\")) { btnLoad.setEnabled(true); } if (evt.getNewValue().toString().equalsIgnoreCase(\"started\")) { btnLoad.setEnabled(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5058/buggy-version/src.util.window.MusicDialog.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.beans.PropertyChangeEvent.getNewValue()", "java.lang.Object.toString()", "java.lang.Object.toString()", "java.beans.PropertyChangeEvent.getNewValue()"], "Fixed commit": "13d4c437b842c250c24315d4a628e18a5526e213", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-11-27T12:53:33Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((intTime.getTimeInMillis()) - (new java.util.GregorianCalendar().getTimeInMillis())) < 0) { scheduleAlarm(this, ((new java.util.GregorianCalendar().getTimeInMillis()) + ((HOUR) / 6)), reminderIntent); }else scheduleAlarm(this, intTime.getTimeInMillis(), reminderIntent);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4131/buggy-version/app.src.main.java.com.jessica.masterproject.MainActivity.java", "BodyUseAPI": ["com.jessica.masterproject.MainActivity.scheduleAlarm(com.jessica.masterproject.MainActivity,long,android.content.Intent)", "java.util.GregorianCalendar.getTimeInMillis()"], "Fixed commit": "d471af81b8acd51b2d5df7f096db926de72fc3af", "Url": "https://api.github.com/repos/jcolnago-zz/UserStudy-Master", "Date": "2016-02-19T20:44:31Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((intTime.getTimeInMillis()) - (new java.util.GregorianCalendar().getTimeInMillis())) < 0) { scheduleAlarm(this, ((new java.util.GregorianCalendar().getTimeInMillis()) + ((HOUR) / 6)), reminderIntent); }else scheduleAlarm(this, intTime.getTimeInMillis(), reminderIntent);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4131/buggy-version/app.src.main.java.com.jessica.masterproject.MainActivity.java", "BodyUseAPI": ["java.util.GregorianCalendar.getTimeInMillis()", "com.jessica.masterproject.MainActivity.scheduleAlarm(com.jessica.masterproject.MainActivity,long,android.content.Intent)"], "Fixed commit": "d471af81b8acd51b2d5df7f096db926de72fc3af", "Url": "https://api.github.com/repos/jcolnago-zz/UserStudy-Master", "Date": "2016-02-19T20:44:31Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listeners) != null) { listeners.remove(listener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1293/buggy-version/FiltersImpl.src.org.gephi.filters.FilterModelImpl.java", "BodyUseAPI": [], "Fixed commit": "2ddfcf7cd7229a36242e45febfeda1e1182a35e3", "Url": "https://api.github.com/repos/nolanlab/cytospade", "Date": "2010-08-30T22:08:46Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (existCodeSpan(ssb, currentLineIndex, (currentLineIndex + (lines[i].length())))) { list.add(new com.yydcdut.rxmarkdown.grammar.android.OrderListGrammar.NestedOrderListBean(currentLineIndex, false, lines[i], (-1), (-1), (-1))); currentLineIndex += ((lines[i]) + \"\\n\").length(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1735/buggy-version/rxmarkdown.src.main.java.com.yydcdut.rxmarkdown.grammar.android.OrderListGrammar.java", "BodyUseAPI": ["java.lang.String.length()", "java.util.ArrayList<com.yydcdut.rxmarkdown.grammar.android.OrderListGrammar.NestedOrderListBean>.add(com.yydcdut.rxmarkdown.grammar.android.OrderListGrammar.NestedOrderListBean)"], "Fixed commit": "0867c739b594b1cda84b4299067c64b6ee083ae8", "Url": "https://api.github.com/repos/yydcdut/RxMarkdown", "Date": "2016-07-18T04:47:39Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ListGrid.Type.MAIN.toString().toLowerCase().equals(lg.getListGridType())) { fieldName += ListGrid.Type.MAIN.toString().toLowerCase(); }else { fieldName += lg.getSubCollectionFieldName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5458/buggy-version/admin.broadleaf-open-admin-platform.src.main.java.org.broadleafcommerce.openadmin.web.processor.AdminComponentIdProcessor.java", "BodyUseAPI": ["org.broadleafcommerce.openadmin.web.form.component.ListGrid.getSubCollectionFieldName()"], "Fixed commit": "b548717cf4d427e493a67429c30a8ea6fcc6ec4e", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2013-04-25T06:03:01Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((kml == null) || (kml.trim().isEmpty())) process.setKmz(null); else process.setKmz(org.openlca.app.editors.processes.kml.KmlUtil.toKmz(kml));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6442/buggy-version/olca-app.src.org.openlca.app.editors.processes.InfoPage.java", "BodyUseAPI": ["org.openlca.app.editors.processes.kml.KmlUtil.toKmz(java.lang.String)", "java.lang.Process.setKmz(org.openlca.app.editors.processes.kml.KmlUtil.toKmz(kml))"], "Fixed commit": "fb4c1a0d67392245c3d1923eb32bd55100c586ba", "Url": "https://api.github.com/repos/GreenDelta/olca-app", "Date": "2014-04-29T06:43:58Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty.LOGGER.isLoggable(java.util.logging.Level.FINE)) { org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty.LOGGER.log(java.util.logging.Level.FINE, \"Cannot start triggers. Owner of the JobProperty has not been assigned yet\", new java.lang.IllegalStateException(\"JobProperty owner is null\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3033/buggy-version/src.main.java.org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty.java", "BodyUseAPI": ["java.util.logging.Logger.log(java.util.logging.Level,java.lang.String,java.lang.IllegalStateException)"], "Fixed commit": "a150da073ac45551fad6d76bc71512c549987e3f", "Url": "https://api.github.com/repos/oleg-nenashev/workflow-job-plugin", "Date": "2017-06-22T14:49:59Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.weighter.weights.size()) == 0) params = new edu.cmu.ml.proppr.util.math.LongDense.UnitVector(); else params = pg.paramsAsVector(this.weighter.weights, this.weighter.squashingFunction.defaultValue());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/857/buggy-version/src.java.main.edu.cmu.ml.proppr.prove.IdPprProver.java", "BodyUseAPI": ["edu.cmu.ml.proppr.prove.wam.CachingIdProofGraph.paramsAsVector(this.weighter.weights,this.weighter.squashingFunction.defaultValue())", "this.weighter.squashingFunction.defaultValue()"], "Fixed commit": "3ce67a383f2835ce17c525e19865a9ab5fa6eec8", "Url": "https://api.github.com/repos/TeamCohen/ProPPR", "Date": "2015-07-15T19:10:07Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.gebit.integrity.parameter.resolving.ParameterResolver.resolveSingleParameterValue(de.gebit.integrity.dsl.ValueOrEnumValueOrOperation,de.gebit.integrity.parameter.conversion.UnresolvableVariableHandling)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tempResult instanceof de.gebit.integrity.dsl.ValueOrEnumValueOrOperation) { return convertEncapsulatedValueToTargetType(aTargetType, aParameterizedType, ((de.gebit.integrity.dsl.ValueOrEnumValueOrOperation) (tempResult)), anUnresolvableVariableHandlingPolicy, someVisitedValues); }else { return convertSingleValueToTargetType(aTargetType, aParameterizedType, tempResult, anUnresolvableVariableHandlingPolicy, someVisitedValues); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2115/buggy-version/de.gebit.integrity.dsl.src.de.gebit.integrity.parameter.conversion.AbstractModularValueConverter.java", "BodyUseAPI": ["de.gebit.integrity.parameter.conversion.AbstractModularValueConverter.convertSingleValueToTargetType(java.lang.Class<?>,java.lang.Class<?>,java.lang.Object,de.gebit.integrity.parameter.conversion.UnresolvableVariableHandling,java.util.Set<java.lang.Object>)"], "Fixed commit": "8c1a6634139bcc06dfdde7eff90d7002f28b854d", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2013-11-02T17:46:50Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((editTaskDescriptor.getDeadline()) == null) { return new teamthree.twodo.model.task.Task(updatedName, updatedDescription, updatedTags, taskToEdit.getCompleted()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5983/buggy-version/src.main.java.teamthree.twodo.logic.commands.EditCommand.java", "BodyUseAPI": [], "Fixed commit": "1337848cb6abe4486caa8ee54fe30849cf9588aa", "Url": "https://api.github.com/repos/radneran/main", "Date": "2017-07-23T17:11:04Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTextDeckName) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4902/buggy-version/src.com.ichi2.anki.StudyOptionsFragment.java", "BodyUseAPI": [], "Fixed commit": "a2672b95bdcf14b0d64b652b40aa11c7db1879d8", "Url": "https://api.github.com/repos/nobnago/Anki-Android", "Date": "2012-07-31T07:53:06Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (chars < 0) throw new java.lang.RuntimeException(\"Illegal fast forward operation, failed to forward to the proper position!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8322/buggy-version/src.main.java.com.github.pfmiles.dropincc.impl.runtime.impl.CodeLexer.java", "BodyUseAPI": [], "Fixed commit": "f7b68676395ab50079d844ffc0666caa0360f605", "Url": "https://api.github.com/repos/pfmiles/dropincc.java", "Date": "2013-05-23T03:03:03Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.savePoints.isEmpty()) && (!(this.backUp.isEmpty()))) { this.backUp.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8322/buggy-version/src.main.java.com.github.pfmiles.dropincc.impl.runtime.impl.CodeLexer.java", "BodyUseAPI": ["java.util.ArrayList<com.github.pfmiles.dropincc.impl.runtime.Token>.clear()"], "Fixed commit": "f7b68676395ab50079d844ffc0666caa0360f605", "Url": "https://api.github.com/repos/pfmiles/dropincc.java", "Date": "2013-05-23T03:03:03Z"},
{"Line": "=>579", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inBuffer.hasRemaining()) { if (availability <= 0) { return true; } return writeStdin(availability, fd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7424/buggy-version/src.main.java.com.zaxxer.nuprocess.internal.BasePosixProcess.java", "BodyUseAPI": [], "Fixed commit": "65923e3e20ae19676c71866ff85ad72df555f9bc", "Url": "https://api.github.com/repos/brettwooldridge/NuProcess", "Date": "2017-05-18T06:12:26Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (filter instanceof cn.cxy.designpattern.responsibilityChain.processor.FilterChain) { cn.cxy.designpattern.responsibilityChain.processor.FilterChain chain = ((cn.cxy.designpattern.responsibilityChain.processor.FilterChain) (filter)); for (cn.cxy.designpattern.responsibilityChain.filter.Filter f : chain.getFilters()) { this.filters.add(f); } }else { this.filters.add(filter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/321/buggy-version/src.cn.cxy.designpattern.responsibilityChain.processor.FilterChain.java", "BodyUseAPI": ["java.util.ArrayList<cn.cxy.designpattern.responsibilityChain.filter.Filter>.add(cn.cxy.designpattern.responsibilityChain.filter.Filter)"], "Fixed commit": "f9f5a1676da0115d36f30305017d27bb9e4431f1", "Url": "https://api.github.com/repos/Cy0941/DesignPattern", "Date": "2017-09-16T14:05:16Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.amidezcod.advancedrecyclerview.AppsListFragment.MyViewHolder.getAdapterPosition()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (adapterPos != (android.support.v7.widget.RecyclerView.NO_POSITION)) { java.lang.String packageName = packages.get(adapterPos).packageName; android.content.Intent intent = packageManager.getLaunchIntentForPackage(packageName); if (intent == null) { intent = new android.content.Intent(android.content.Intent.ACTION_VIEW); intent.setData(android.net.Uri.parse((\"market://details?id=\" + packageName))); } intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3417/buggy-version/app.src.main.java.com.example.amidezcod.advancedrecyclerview.AppsListFragment.java", "BodyUseAPI": ["java.util.List<android.content.pm.ApplicationInfo>.get(int)"], "Fixed commit": "394d8545a41804f4ab3eef11a6810f0df2cae400", "Url": "https://api.github.com/repos/aman5319/RecyclerView", "Date": "2017-06-24T20:56:18Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (me.johannesnz.smsim.Main.connected) new java.lang.Thread(new java.lang.Runnable() { @java.lang.Override public void run() { sendMessage(\"DC\"); } }).start();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3000/buggy-version/Android.app.src.main.java.me.johannesnz.smsim.Main.java", "BodyUseAPI": [], "Fixed commit": "042fbdc5af3235c0f700a1804dd36e9eb619ac21", "Url": "https://api.github.com/repos/JMdeKlerk/SMSIM", "Date": "2015-10-05T00:58:23Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, ubc.pavlab.gotrack.model.Gene>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (g == null) { g = new ubc.pavlab.gotrack.model.Gene(symbol); symbolMap.put(symbol.toUpperCase(), g); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2862/buggy-version/gotrack.src.main.java.ubc.pavlab.gotrack.dao.CacheDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "2ec23ab1471d37f3b87079b0e90cc9d630a9a19b", "Url": "https://api.github.com/repos/PavlidisLab/gotrack", "Date": "2015-05-16T23:33:15Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mRefreshInProgress) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8329/buggy-version/android.src.main.java.com.thebluealliance.androidclient.activities.RefreshableHostActivity.java", "BodyUseAPI": [], "Fixed commit": "d934f4d7cf55edcd16f8d665c1cde018f65ee42b", "Url": "https://api.github.com/repos/phil-lopreiato/the-blue-alliance-android", "Date": "2014-06-18T15:12:52Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((convertedFile) != null) { result.append(\", convertedFile: \"); result.append(convertedFile.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7270/buggy-version/src.main.java.net.pms.dlna.DLNAMediaSubtitle.java", "BodyUseAPI": [], "Fixed commit": "1c89f2b231a76a4f1fd6b16004c26935da94f42a", "Url": "https://api.github.com/repos/valib/UniversalMediaServer", "Date": "2016-05-14T11:13:30Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((overlayContainer) != null) getWindowManager().removeView(overlayContainer);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/729/buggy-version/library.src.main.java.com.oguzdev.circularfloatingactionmenu.library.FloatingActionMenu.java", "BodyUseAPI": [], "Fixed commit": "ba7afec6f0b369e965b1e5198c13156b3e78b38e", "Url": "https://api.github.com/repos/jarrodholliday/CircularFloatingActionMenu", "Date": "2017-05-02T04:50:05Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSystemOverlay()) detachOverlayContainer();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/729/buggy-version/library.src.main.java.com.oguzdev.circularfloatingactionmenu.library.FloatingActionMenu.java", "BodyUseAPI": [], "Fixed commit": "ba7afec6f0b369e965b1e5198c13156b3e78b38e", "Url": "https://api.github.com/repos/jarrodholliday/CircularFloatingActionMenu", "Date": "2017-05-02T04:50:05Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((stations[0].op) == (backend.FloatPointUnit.OP.ST)) && ((stations[0].qk) != null)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2191/buggy-version/src.backend.OperationUnit.java", "BodyUseAPI": [], "Fixed commit": "7dae427ca28578527f80e5da0906bce8d378bcd8", "Url": "https://api.github.com/repos/evan69/Tomasulo", "Date": "2017-06-07T05:04:01Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isEmpty(input)) { java.lang.String concatenatedText = \"*BLEEP BLOOP BLEEP BEEP BEEP BZZZT!!!* (Don't be lame, type a phrase!)\"; android.widget.Toast.makeText(view.getContext(), concatenatedText, Toast.LENGTH_SHORT).show(); }else { android.content.Intent intent = new android.content.Intent(getApplicationContext(), co.miniforge.corey.stringanalyzer.AnalyzerActivity.class); intent.putExtra(co.miniforge.corey.stringanalyzer.InputActivity.intentTag, input.getText().toString()); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5191/buggy-version/StringAnalyzer.app.src.main.java.co.miniforge.corey.stringanalyzer.InputActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "android.content.Intent.putExtra(java.lang.String,input.getText().toString())", "input.getText().toString()"], "Fixed commit": "c2e4e9987858c2a4f65c09144e57b5d03055ef35", "Url": "https://api.github.com/repos/Chronocast/Assignment03_StringAnalyzer", "Date": "2017-10-22T04:33:15Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.shiro.subject.Subject.getSession(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (session != null) { session.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4534/buggy-version/src.com.asiainfo.ocmanager.auth.Authenticator.java", "BodyUseAPI": ["org.apache.shiro.session.Session.stop()"], "Fixed commit": "5cb2b22a15007d131c07ffb4bfd5e871cadbc6e4", "Url": "https://api.github.com/repos/zhaoyim/RestServer", "Date": "2017-08-03T02:21:05Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["admin.data.GameData.getCurrentGame()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((g.getAllContestants().size()) > 0) { cbUltPick.setSelectedIndex(0); cbWeeklyPick.setSelectedIndex(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3786/buggy-version/src.admin.playertab.PlayerPanel.java", "BodyUseAPI": [], "Fixed commit": "e07700020f4063cf43cf11935eb22b9f190f8f86", "Url": "https://api.github.com/repos/CS2212-2012-G2/SurvivorPool", "Date": "2012-03-14T01:25:30Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (constants.Operators.isRightToLeft(transition)) transition = constants.Operators.oppositeJoiner(transition);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8604/buggy-version/src.workers.TreePermuter.java", "BodyUseAPI": ["constants.Operators.oppositeJoiner(java.lang.String)"], "Fixed commit": "d3e75d056cab2bc0ccb0f017a2677922e8200301", "Url": "https://api.github.com/repos/jj05y/Final-Year-Project-Theorem-Proving-Assitant", "Date": "2017-02-06T16:01:20Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (constants.Operators.isLeftToRight(transition)) transition = constants.Operators.oppositeJoiner(transition);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8604/buggy-version/src.workers.TreePermuter.java", "BodyUseAPI": ["constants.Operators.oppositeJoiner(java.lang.String)"], "Fixed commit": "d3e75d056cab2bc0ccb0f017a2677922e8200301", "Url": "https://api.github.com/repos/jj05y/Final-Year-Project-Theorem-Proving-Assitant", "Date": "2017-02-06T16:01:20Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getSource()) instanceof java.awt.Component) { java.awt.Component c = ((java.awt.Component) (event.getSource())); while (c != null) { if (hoverableComponents.contains(c)) { exitables.remove(c); enterables.add(c); } c = c.getParent(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4865/buggy-version/src.net.infonode.gui.hover.hoverable.HoverManager.java", "BodyUseAPI": ["java.awt.event.MouseEvent.getSource()"], "Fixed commit": "dae8651f7c40f85ad9167f911b3eff6ce26a5888", "Url": "https://api.github.com/repos/ebourg/infonode", "Date": "2014-01-24T14:15:44Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rapidoid.data.Ranges.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.rapidoid.bytes.BytesUtil.startsWith(bytes, maybeConnHdr, org.rapidoid.http.HttpParser.CONNECTION, true)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7960/buggy-version/rapidoid-http-fast.src.main.java.org.rapidoid.http.HttpParser.java", "BodyUseAPI": [], "Fixed commit": "70f04f08202dca4b5b2eb5522851a6c1fdf8a10a", "Url": "https://api.github.com/repos/rapidoid/rapidoid", "Date": "2016-02-28T18:39:13Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCPP) { output(\"\\tjobject lpObject1 = env->GetObjectField(lpObject, \"); }else { output(\"\\tjobject lpObject1 = (*env)->GetObjectField(env, lpObject, \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3815/buggy-version/hawtjni-generator.src.main.java.org.fusesource.hawtjni.generator.StructsGenerator.java", "BodyUseAPI": [], "Fixed commit": "4200ce05b6e3134769b03328f1130d0767d0327f", "Url": "https://api.github.com/repos/fusesource/hawtjni", "Date": "2011-08-02T15:10:12Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (files == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1935/buggy-version/src.main.java.fi.helsinki.cs.okkopa.mail.writeToDisk.FileSaver.java", "BodyUseAPI": [], "Fixed commit": "d4cb18e1d91a1ddc249100bbc91050a55790db32", "Url": "https://api.github.com/repos/ohtuprojekti/OKKoPa", "Date": "2013-08-08T12:03:02Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.channels.SelectionKey.attachment()", "com.ndtorrent.client.BTSocket.getRemoteIP()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ip.equals(peer.socket.getRemoteIP())) socket.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/660/buggy-version/src.com.ndtorrent.client.Peer.java", "BodyUseAPI": [], "Fixed commit": "ae32c5280696f0c6a5bf572788b94f930c27a512", "Url": "https://api.github.com/repos/ndandoulakis/ndTorrent", "Date": "2013-02-15T21:25:09Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["subJobExecution.getExecutionContext().get(JobConstants.CURRENT_ERROR_MESSAGE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (errorMessageO != null) { errorMessage = ((java.lang.String) (errorMessageO)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5395/buggy-version/server.cluster-mgmt.src.main.java.com.vmware.bdd.service.job.SubJobStep.java", "BodyUseAPI": [], "Fixed commit": "d6e3e77fee5e1d55106505600b28fc82099fbbcd", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-03-18T03:08:49Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (activity.record) { activity.measurementManager.deleteRecord(activity.record.getId()); activity.record = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4711/buggy-version/app.src.main.java.org.noise_planet.noisecapture.CommentActivity.java", "BodyUseAPI": ["Storage.Record.getId()", "org.noise_planet.noisecapture.MeasurementManager.deleteRecord(activity.record.getId())"], "Fixed commit": "517509006ee868aeea05d2223a7e8b0ceacb3c1b", "Url": "https://api.github.com/repos/Ifsttar/NoiseCapture", "Date": "2017-09-12T09:44:31Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (record) { validateCancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4711/buggy-version/app.src.main.java.org.noise_planet.noisecapture.CommentActivity.java", "BodyUseAPI": [], "Fixed commit": "517509006ee868aeea05d2223a7e8b0ceacb3c1b", "Url": "https://api.github.com/repos/Ifsttar/NoiseCapture", "Date": "2017-09-12T09:44:31Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (imageToSave != null) { imageView.setImageBitmap(imageToSave); java.io.FileOutputStream out = new java.io.FileOutputStream(file); imageToSave.compress(Bitmap.CompressFormat.JPEG, 100, out); out.flush(); out.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8037/buggy-version/app.src.main.java.de.berlin.special.concertmap.navigate.DownloadImageTask.java", "BodyUseAPI": ["android.widget.ImageView.setImageBitmap(android.graphics.Bitmap)", "android.graphics.Bitmap.compress(Bitmap.CompressFormat.JPEG,int,java.io.FileOutputStream)"], "Fixed commit": "67da8be7758e69277e8f1adb7bb70f59644adf16", "Url": "https://api.github.com/repos/sspecial/ConcertMap", "Date": "2016-02-08T14:22:50Z"},
{"Line": "=>1102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (storageType != null) connection.database = getDatabaseInstance(dbName, ODatabaseDocument.TYPE, storageType); else { for (java.lang.String engine : com.orientechnologies.orient.core.Orient.instance().getEngines()) { connection.database = getDatabaseInstance(dbName, ODatabaseDocument.TYPE, engine); if (connection.database.exists()) break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3897/buggy-version/server.src.main.java.com.orientechnologies.orient.server.network.protocol.binary.ONetworkProtocolBinary.java", "BodyUseAPI": ["com.orientechnologies.orient.server.network.protocol.binary.ONetworkProtocolBinary.getDatabaseInstance(java.lang.String,ODatabaseDocument.TYPE,java.lang.String)"], "Fixed commit": "6ad6dc1b5fcc7b32094cd1a9490a57f5e81aeca5", "Url": "https://api.github.com/repos/w3aponx/orientdb", "Date": "2014-02-19T10:09:22Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.defense) > 80) { this.defense = 90; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6252/buggy-version/src.dungeonhunt.item.Armor.java", "BodyUseAPI": [], "Fixed commit": "a3fbb43cff5a39d67f6320e75ba08843f0e887cf", "Url": "https://api.github.com/repos/fatseals/dungeonhunt", "Date": "2017-06-05T08:58:53Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (acceptedRegion == null) return pos;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8609/buggy-version/src.main.java.com.rrs.rd.address.interpret.RegionInterpreterVisitor.java", "BodyUseAPI": [], "Fixed commit": "84d362acf71f696fa92312590ef2915dd644d1d7", "Url": "https://api.github.com/repos/liuzhibin-cn/address-semantic-search", "Date": "2016-10-24T06:30:29Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (candidate == null) return needToSync;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6494/buggy-version/app.src.main.java.app.presentation.foundation.SyncScreens.java", "BodyUseAPI": [], "Fixed commit": "84de8be6d44312f73d5ee34a78e7e9f06c85cc32", "Url": "https://api.github.com/repos/FuckBoilerplate/base_app_android", "Date": "2016-04-22T18:53:34Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(pendingScreens.contains(screen))) pendingScreens.add(screen);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6494/buggy-version/app.src.main.java.app.presentation.foundation.SyncScreens.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "84de8be6d44312f73d5ee34a78e7e9f06c85cc32", "Url": "https://api.github.com/repos/FuckBoilerplate/base_app_android", "Date": "2016-04-22T18:53:34Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((keys[i]) != null) aux.add(keys[i]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8674/buggy-version/EDA.src.br.ufc.crateus.eda.st.hashing.LinearProbingHashST.java", "BodyUseAPI": ["java.util.List<K>.add(K)"], "Fixed commit": "afa0149b8b06f5830de2c743788a2edcd29c5089", "Url": "https://api.github.com/repos/brse01/EDA", "Date": "2016-07-01T03:20:37Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file.getName().equals(\"BasicStatistics.tex\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1812/buggy-version/src.main.java.org.astrojournal.generator.absgen.LatexExporterByDate.java", "BodyUseAPI": [], "Fixed commit": "caf4c45d47b94ab6357a219dc0d1cbd343c85565", "Url": "https://api.github.com/repos/pdp10/astrojournal", "Date": "2016-10-02T22:21:01Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["properties[i].getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((name.length()) == 0) && ((properties[i].getInjectableValueId()) != null)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2664/buggy-version/src.main.java.com.fasterxml.jackson.databind.deser.impl.CreatorCollector.java", "BodyUseAPI": [], "Fixed commit": "9cddb7a9435f92c2be682af0157ab51e2061e23f", "Url": "https://api.github.com/repos/FasterXML/jackson-databind", "Date": "2012-05-02T06:20:56Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getAnonymity()) == (org.deidentifier.arx.ARXLattice.Anonymity.ANONYMOUS)) { numSolutions++; }else if ((node.getAnonymity()) != (org.deidentifier.arx.ARXLattice.Anonymity.NOT_ANONYMOUS)) { throw new java.lang.RuntimeException(\"Solution space is still not classified completely\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8257/buggy-version/src.org.deidentifier.arx.BenchmarkDriver.java", "BodyUseAPI": ["org.deidentifier.arx.ARXLattice.ARXNode.getAnonymity()"], "Fixed commit": "2bfcd92ea26b9214ea9ff79f6fa253068c6e8147", "Url": "https://api.github.com/repos/ElMuto/anonbench", "Date": "2015-10-09T15:36:09Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mHighQuality) == false) options.inPreferredConfig = Bitmap.Config.RGB_565;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3662/buggy-version/src.idv.jason.lib.imagemanager.LocalImage.java", "BodyUseAPI": [], "Fixed commit": "f39e71dac382dab0835a918022b86d9ac128196e", "Url": "https://api.github.com/repos/jason1peng/ImageManager", "Date": "2013-02-05T06:47:24Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.intellij.openapi.project.DumbService.isDumb(myProject)) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1345/buggy-version/src.consulo.unity3d.unityscript.lang.impl.UnityScriptPsiSearcher.java", "BodyUseAPI": [], "Fixed commit": "c5297adf3ab97dbec73379d9eb798e0ea594dba1", "Url": "https://api.github.com/repos/consulo/consulo-unity3d", "Date": "2016-11-20T14:37:20Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(myExecution.LoginKey.equalsIgnoreCase(args[0]))) { myExecution.setLoginKey(args[0]); myExecution.GPIORoomList = new java.util.ArrayList<com.hpdev.GPIORoom>(); myExecution.storeBackupFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5702/buggy-version/src.com.hpdev.Main.java", "BodyUseAPI": ["com.hpdev.Main.storeBackupFile()", "com.hpdev.Main.setLoginKey(java.lang.String)"], "Fixed commit": "7c1d7e8381d0d7bdf5b88106ce87342e7a1066cf", "Url": "https://api.github.com/repos/Harrypulvirenti/PiControlRaspberry", "Date": "2016-10-24T13:51:02Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_pendingLF) > 1) { --ptr; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8218/buggy-version/src.main.java.com.fasterxml.jackson.dataformat.csv.impl.CsvReader.java", "BodyUseAPI": [], "Fixed commit": "902ebc5d8ff4c38db2881fdad0e56d3a16740705", "Url": "https://api.github.com/repos/FasterXML/jackson-dataformat-csv", "Date": "2011-11-28T21:34:58Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getParcelableExtra(FusedLocationProviderApi.KEY_LOCATION_CHANGED)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (location == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4339/buggy-version/Ports.Android.src.com.codename1.location.BackgroundLocationHandler.java", "BodyUseAPI": [], "Fixed commit": "f3dc7c9bb703d6f042a21deef6e34f5907dfea2e", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2016-05-25T09:42:04Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getTop()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (scroll && (top < (com.fourmob.datetimepicker.date.DayPickerView.LIST_TOP_OFFSET))) { if ((Build.VERSION.SDK_INT) > 7) { if (bottom > midpoint) { smoothScrollBy(top, com.fourmob.datetimepicker.date.DayPickerView.GOTO_SCROLL_DURATION); }else { smoothScrollBy(bottom, com.fourmob.datetimepicker.date.DayPickerView.GOTO_SCROLL_DURATION); } }else { if (bottom > midpoint) { scrollBy(top, com.fourmob.datetimepicker.date.DayPickerView.GOTO_SCROLL_DURATION); }else { scrollBy(bottom, com.fourmob.datetimepicker.date.DayPickerView.GOTO_SCROLL_DURATION); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2708/buggy-version/datetimepicker-library.src.com.fourmob.datetimepicker.date.DayPickerView.java", "BodyUseAPI": ["com.fourmob.datetimepicker.date.DayPickerView.ScrollStateRunnable.smoothScrollBy(int,int)", "com.fourmob.datetimepicker.date.DayPickerView.ScrollStateRunnable.scrollBy(int,int)"], "Fixed commit": "90d261cfd4f5ea0b0841ff70d44ccb944b19f6cb", "Url": "https://api.github.com/repos/cbruegg/datetimepicker", "Date": "2016-04-04T11:31:25Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.doit) == false) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7659/buggy-version/edu.berkeley.eduride.editorOverlay.src.edu.berkeley.eduride.editoroverlay.BoxConstrainedEditorOverlay.java", "BodyUseAPI": [], "Fixed commit": "f8ed04f33d1d671e005e42bb2ab4b95efa17c2c9", "Url": "https://api.github.com/repos/IDE4edu/EclipseEditorOverlay", "Date": "2014-03-25T03:47:21Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((org.springsource.ide.eclipse.commons.completions.externaltype.ExternalTypeIndexManager.factories) == null) || (org.springsource.ide.eclipse.commons.completions.externaltype.ExternalTypeIndexManager.factories.isEmpty())) { org.springsource.ide.eclipse.commons.completions.externaltype.ExternalTypeIndexManager.factories = java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/107/buggy-version/org.springsource.ide.eclipse.commons.completions.src.org.springsource.ide.eclipse.commons.completions.externaltype.ExternalTypeIndexManager.java", "BodyUseAPI": [], "Fixed commit": "4170c9a446ec090f5c5055c6cda6e21d58e34f4e", "Url": "https://api.github.com/repos/spring-projects/eclipse-integration-commons", "Date": "2014-04-03T21:08:02Z"},
{"Line": "=>539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dao.TransactionDao.getInstance().getPendTransByUserIdOp(int,Transaction.TRANS_TYPE_WITHDRAW)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((transactions2.size()) != 0) { for (com.pojo.Transaction t : transactions2) { avaiBalance -= t.getAmount(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7434/buggy-version/versat.src.com.action.FundAction.java", "BodyUseAPI": [], "Fixed commit": "5a98389bde54035167d3d0918a65d67dc8b25369", "Url": "https://api.github.com/repos/keweiw/versat", "Date": "2013-01-28T20:58:06Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (view != null) { view.removeEdge(edge); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8006/buggy-version/store.src.main.java.org.gephi.graph.impl.GraphViewStore.java", "BodyUseAPI": ["org.gephi.graph.impl.GraphViewImpl.removeEdge(org.gephi.graph.impl.EdgeImpl)"], "Fixed commit": "8b4d752cb0767c278e6188e14ffbb8ae413bf3ec", "Url": "https://api.github.com/repos/gephi/graphstore", "Date": "2015-12-19T14:04:00Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (view != null) { view.ensureNodeVectorSize(node); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8006/buggy-version/store.src.main.java.org.gephi.graph.impl.GraphViewStore.java", "BodyUseAPI": ["org.gephi.graph.impl.GraphViewImpl.ensureNodeVectorSize(org.gephi.graph.impl.NodeImpl)"], "Fixed commit": "8b4d752cb0767c278e6188e14ffbb8ae413bf3ec", "Url": "https://api.github.com/repos/gephi/graphstore", "Date": "2015-12-19T14:04:00Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (view != null) { view.ensureEdgeVectorSize(edge); if ((view.nodeView) && (!(view.edgeView))) { view.addEdgeInNodeView(edge); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8006/buggy-version/store.src.main.java.org.gephi.graph.impl.GraphViewStore.java", "BodyUseAPI": ["org.gephi.graph.impl.GraphViewImpl.addEdgeInNodeView(org.gephi.graph.impl.EdgeImpl)", "org.gephi.graph.impl.GraphViewImpl.ensureEdgeVectorSize(org.gephi.graph.impl.EdgeImpl)"], "Fixed commit": "8b4d752cb0767c278e6188e14ffbb8ae413bf3ec", "Url": "https://api.github.com/repos/gephi/graphstore", "Date": "2015-12-19T14:04:00Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (view != null) { view.removeNode(node); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8006/buggy-version/store.src.main.java.org.gephi.graph.impl.GraphViewStore.java", "BodyUseAPI": ["org.gephi.graph.impl.GraphViewImpl.removeNode(org.gephi.graph.impl.NodeImpl)"], "Fixed commit": "8b4d752cb0767c278e6188e14ffbb8ae413bf3ec", "Url": "https://api.github.com/repos/gephi/graphstore", "Date": "2015-12-19T14:04:00Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (annotation.getType().startsWith(\"org.eclipse.ui.workbench.texteditor.quickdiff\")) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/230/buggy-version/com.palantir.typescript.src.com.palantir.typescript.text.TextHover.java", "BodyUseAPI": [], "Fixed commit": "15472af8cf219e1d683dd0e170d663597558d0d6", "Url": "https://api.github.com/repos/palantir/eclipse-typescript", "Date": "2013-08-01T00:02:38Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((drm.getInputForEachDat()[nextjok]) != null) { drm.getInputForEachDat()[nextjok] = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7039/buggy-version/org.dawnsci.surfacescatter.ui.src.org.dawnsci.surfacescatter.ui.TrackingCore.java", "BodyUseAPI": [], "Fixed commit": "1f6f9e204136eb82a0b7271a6d2b0fdf72458555", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2017-12-15T21:09:09Z"},
{"Line": "=>1086", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getType()) == (org.bukkit.entity.EntityType.SILVERFISH)) { return hitDozen_ender; }else if ((e.getType()) == (org.bukkit.entity.EntityType.SNOWBALL)) { return 0; }else { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7774/buggy-version/src.main.java.io.github.kuohsuanlo.falloutcraft.FalloutcraftPlayerListener.java", "BodyUseAPI": ["org.bukkit.entity.Entity.getType()"], "Fixed commit": "6fe41d4b38d2e7651910502108a11a6017bf3062", "Url": "https://api.github.com/repos/kuohsuanlo/falloutcraft", "Date": "2016-11-19T16:21:05Z"},
{"Line": "=>8", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((driverType == null) || (driverType.equals(\"\"))) { throw new java.lang.IllegalArgumentException((\"driverType is either null or empty - driverType must contain a value and\" + \" must be initialised.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7684/buggy-version/FileProcessor.src.main.java.fileprocessor.driver.DriverFactory.java", "BodyUseAPI": [], "Fixed commit": "0dbfc51164f6a7be5d0b42d642cc206e57b3456e", "Url": "https://api.github.com/repos/RichardPickering/BigDataWordStatistics", "Date": "2017-08-20T16:33:18Z"},
{"Line": "=>741", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((source instanceof org.eclipse.uml2.uml.ActivityParameterNode) && (preTarget instanceof org.eclipse.uml2.uml.OutputPin)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2403/buggy-version/plugins.org.obeonetwork.dsl.uml2.design.src.org.obeonetwork.dsl.uml2.design.api.services.ActivityDiagramServices.java", "BodyUseAPI": [], "Fixed commit": "df5019f7068ee99235bc00505261723081567e01", "Url": "https://api.github.com/repos/ObeoNetwork/UML-Designer", "Date": "2015-01-07T15:15:28Z"},
{"Line": "=>735", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (source instanceof org.eclipse.uml2.uml.InputPin) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2403/buggy-version/plugins.org.obeonetwork.dsl.uml2.design.src.org.obeonetwork.dsl.uml2.design.api.services.ActivityDiagramServices.java", "BodyUseAPI": [], "Fixed commit": "df5019f7068ee99235bc00505261723081567e01", "Url": "https://api.github.com/repos/ObeoNetwork/UML-Designer", "Date": "2015-01-07T15:15:28Z"},
{"Line": "=>738", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((source instanceof org.eclipse.uml2.uml.OutputPin) && (preTarget instanceof org.eclipse.uml2.uml.OutputPin)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2403/buggy-version/plugins.org.obeonetwork.dsl.uml2.design.src.org.obeonetwork.dsl.uml2.design.api.services.ActivityDiagramServices.java", "BodyUseAPI": [], "Fixed commit": "df5019f7068ee99235bc00505261723081567e01", "Url": "https://api.github.com/repos/ObeoNetwork/UML-Designer", "Date": "2015-01-07T15:15:28Z"},
{"Line": "=>744", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((source instanceof org.eclipse.uml2.uml.DataStoreNode) && (preTarget instanceof org.eclipse.uml2.uml.OutputPin)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2403/buggy-version/plugins.org.obeonetwork.dsl.uml2.design.src.org.obeonetwork.dsl.uml2.design.api.services.ActivityDiagramServices.java", "BodyUseAPI": [], "Fixed commit": "df5019f7068ee99235bc00505261723081567e01", "Url": "https://api.github.com/repos/ObeoNetwork/UML-Designer", "Date": "2015-01-07T15:15:28Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(\"patient_id\".equals(attributeValue))) throw new org.openmrs.api.APIException((\"Cannot find person field with name = \" + attributeValue));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8716/buggy-version/api.src.main.java.org.openmrs.module.xforms.XformObsPatientEdit.java", "BodyUseAPI": [], "Fixed commit": "09a4ec9d5cc3b47b5d45ce03e8ee9a7010b400e0", "Url": "https://api.github.com/repos/openmrs/openmrs-module-xforms", "Date": "2014-10-29T19:46:56Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mRefreshView.isRefreshSuccess())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3418/buggy-version/app.src.main.java.com.zpauly.githubapp.view.issues.IssuesFragment.java", "BodyUseAPI": [], "Fixed commit": "ad217b5424db9888ef8d9c6a1899c5c95fa327eb", "Url": "https://api.github.com/repos/zpauly/GitHub_Android", "Date": "2016-09-05T12:09:06Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mRefreshView.isRefreshSuccess())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3418/buggy-version/app.src.main.java.com.zpauly.githubapp.view.stars.StarsFragment.java", "BodyUseAPI": [], "Fixed commit": "ad217b5424db9888ef8d9c6a1899c5c95fa327eb", "Url": "https://api.github.com/repos/zpauly/GitHub_Android", "Date": "2016-09-05T12:09:06Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(savedImageAdapter.isEmpty())) { android.content.Intent intent = new android.content.Intent(getFragmentActivity(), jp.goka.favos.ui.SlideShowActivity.class); intent.putExtra(SlideShowActivity.KEY_PATHS, savedImageAdapter.getPaths()); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7962/buggy-version/Favos.src.main.java.jp.goka.favos.ui.AlbumFragment.java", "BodyUseAPI": ["jp.goka.favos.adapter.SavedImageAdapter.getPaths()", "android.content.Intent.putExtra(SlideShowActivity.KEY_PATHS,savedImageAdapter.getPaths())"], "Fixed commit": "8c39bdfff285d5c0f543fcd7eada6932070ca74d", "Url": "https://api.github.com/repos/gotokatsuya/Favos", "Date": "2014-07-03T16:44:02Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(note.isSilent())) { composer.controller.PlayController.composerSheet.paintNote(nd, java.awt.Color.BLACK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7977/buggy-version/examprep.src.composer.controller.PlayController.java", "BodyUseAPI": [], "Fixed commit": "f2e27adf2a140da3c7bf2469d816b7a3dc8f2fc4", "Url": "https://api.github.com/repos/krzywyzenon/Examen", "Date": "2014-05-19T21:51:47Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((record.getParameters()) != null) && ((record.getParameters().length) > 0)) { message.setText(java.text.MessageFormat.format(record.getMessage(), record.getParameters())); }else { message.setText(record.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5887/buggy-version/src.main.java.me.ferrybig.javacoding.graphical.decompiler.LogRecordPanel.java", "BodyUseAPI": ["java.util.logging.LogRecord.getParameters()", "java.util.logging.LogRecord.getMessage()", "javax.swing.JLabel.setText(java.lang.String)", "java.util.logging.LogRecord.getMessage()", "java.text.MessageFormat.format(java.lang.String,java.lang.Object[])", "javax.swing.JLabel.setText(java.lang.String)"], "Fixed commit": "5469f55a0974ad99a7adbb14e3b8b0e008a9c10e", "Url": "https://api.github.com/repos/ferrybig/java-graphical-decompiler", "Date": "2017-08-02T17:51:05Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intersystems.persistence.Event.toByteArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((this.buffer.size()) + (serialized.length)) > (this.maximumBatchLength)) { this.flush(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3548/buggy-version/src.main.java.com.intersystems.persistence.EventWriter.java", "BodyUseAPI": [], "Fixed commit": "ba2f233c4a897eca32b2a9280677eec00b73a2ba", "Url": "https://api.github.com/repos/unix-junkie/persistence-benchmark", "Date": "2014-01-18T13:47:04Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.location.LocationManager.getLastKnownLocation(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (location != null) { if (!(ca.cumulonimbus.barometernetwork.CurrentConditionsActivity.isDaytime(location.getLatitude(), location.getLongitude(), java.lang.System.currentTimeMillis(), java.util.Calendar.getInstance().getTimeZone().getRawOffset()))) { switch (moonNumber) { case 1 : sunDrawable = R.drawable.ic_wea_on_moon1; break; case 2 : sunDrawable = R.drawable.ic_wea_on_moon2; break; case 3 : sunDrawable = R.drawable.ic_wea_on_moon3; break; case 4 : sunDrawable = R.drawable.ic_wea_on_moon4; break; case 5 : sunDrawable = R.drawable.ic_wea_on_moon5; break; case 6 : sunDrawable = R.drawable.ic_wea_on_moon6; break; case 7 : sunDrawable = R.drawable.ic_wea_on_moon7; break; case 8 : sunDrawable = R.drawable.ic_wea_on_moon8; break; default : sunDrawable = R.drawable.ic_wea_on_moon2; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7870/buggy-version/src.ca.cumulonimbus.barometernetwork.NotificationSender.java", "BodyUseAPI": ["ca.cumulonimbus.barometernetwork.CurrentConditionsActivity.isDaytime(location.getLatitude(),location.getLongitude(),long,int)", "android.location.Location.getLongitude()", "android.location.Location.getLatitude()"], "Fixed commit": "57870f586e6cb3f7e70c78d6a013a97aa8cb0873", "Url": "https://api.github.com/repos/Cbsoftware/pressureNET", "Date": "2014-01-07T01:24:12Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(text))) { edit_ET.setText(text); edit_ET.setSelection(text.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6626/buggy-version/src.com.anddev.dialogs.EditTextDialog.java", "BodyUseAPI": ["android.widget.EditText.setSelection(int)", "java.lang.String.length()", "android.widget.EditText.setText(java.lang.String)"], "Fixed commit": "c56693befbe6aa484dae0ba3f547ce0da931966f", "Url": "https://api.github.com/repos/mvarnagiris/AndDevUtils", "Date": "2013-05-08T10:43:25Z"},
{"Line": "=>681", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (latestSchemaVersion != null) { if (waitAllNodesSchemaConverge) { clientContext.waitForSchemaAgreement(latestSchemaVersion, _statusChecker.getClusterNodeCount()); }else { clientContext.waitForSchemaAgreement(latestSchemaVersion, (-1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3604/buggy-version/dbsvc.src.main.java.com.emc.storageos.db.server.impl.SchemaUtil.java", "BodyUseAPI": ["com.emc.storageos.db.client.impl.DbClientContext.waitForSchemaAgreement(java.lang.String,int)", "com.emc.storageos.db.client.impl.DbClientContext.waitForSchemaAgreement(java.lang.String,_statusChecker.getClusterNodeCount())"], "Fixed commit": "da48670deea63233ec209e42ad15dd010bb9a2b2", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-08-26T08:36:37Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((args.length) == 0) || ((args.length) > 3)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6047/buggy-version/src.com.eodomo.SpawnedItemsRenamer.SpawnedItemsRenamer.java", "BodyUseAPI": [], "Fixed commit": "8cb1f2e79f229048c7d7688b9e402ea016fb4644", "Url": "https://api.github.com/repos/mango52/SpawnedItemsRenamer", "Date": "2013-02-18T20:43:16Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((args.length) == 0) || ((args.length) > 2)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6047/buggy-version/src.com.eodomo.SpawnedItemsRenamer.SpawnedItemsRenamer.java", "BodyUseAPI": [], "Fixed commit": "8cb1f2e79f229048c7d7688b9e402ea016fb4644", "Url": "https://api.github.com/repos/mango52/SpawnedItemsRenamer", "Date": "2013-02-18T20:43:16Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (toParse.equals(com.jonasgerdes.schauburgr.network.guide_converter.MovieParser.DATE_NONE_PLACEHOLDER)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/941/buggy-version/app.src.main.java.com.jonasgerdes.schauburgr.network.guide_converter.MovieParser.java", "BodyUseAPI": [], "Fixed commit": "4f72bfef97413f136d00a69359eeed9dec6b05a4", "Url": "https://api.github.com/repos/JGerdes/Schauburgr", "Date": "2017-03-05T00:03:34Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.peircean.libgfapi_jni.internal.GLFS.glfs_write(long,byte[],int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (written < 0) { throw new java.io.IOException(com.peircean.libgfapi_jni.internal.UtilJNI.strerror()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5246/buggy-version/glusterfs-java-filesystem.glusterfs-java-filesystem.src.main.java.com.peircean.glusterfs.GlusterFileChannel.java", "BodyUseAPI": [], "Fixed commit": "94d8b391a5e0bd1b7074aa27cba2976ada91be0f", "Url": "https://api.github.com/repos/FIU-SCIS-Senior-Project-2014-Fall/Java-GlusterFS", "Date": "2014-11-30T00:31:49Z"},
{"Line": "=>2054", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasUnmatchedTable) { viewInfo.setViewEditable(false); }else { viewInfo.setViewEditable(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/244/buggy-version/server.komodo-rest.src.main.java.org.komodo.rest.service.KomodoDataserviceService.java", "BodyUseAPI": [], "Fixed commit": "fe3c19fa4bb700fdfd929e7745198eeda85b897a", "Url": "https://api.github.com/repos/mdrillin/komodo", "Date": "2017-04-13T19:00:09Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isConnected())) { drop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1366/buggy-version/src.core.server.Client.java", "BodyUseAPI": [], "Fixed commit": "5ef3aa889c7cc4435902b763ec718ecf9e1d5611", "Url": "https://api.github.com/repos/dahlukeh/phais", "Date": "2013-11-20T11:14:06Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (urlConn != null) urlConn.disconnect();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1856/buggy-version/FaceppSDK.src.com.facepp.http.HttpRequests.java", "BodyUseAPI": ["java.net.HttpURLConnection.disconnect()"], "Fixed commit": "3432eb603537ffd88d3fc5899dd0bc1c16ef2dcc", "Url": "https://api.github.com/repos/FacePlusPlus/facepp-java-sdk", "Date": "2013-11-13T06:08:15Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.silverpeas.util.web.servlet.FileUploadUtil.getFile(java.util.List<org.apache.commons.fileupload.FileItem>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((file != null) && (com.silverpeas.util.StringUtil.isDefined(file.getName()))) { java.lang.String extension = com.stratelia.webactiv.util.FileRepositoryManager.getFileExtension(file.getName()); if ((extension != null) && (extension.equalsIgnoreCase(\"jpeg\"))) { extension = \"jpg\"; } if (((!(\"gif\".equalsIgnoreCase(extension))) && (!(\"jpg\".equalsIgnoreCase(extension)))) && (!(\"png\".equalsIgnoreCase(extension)))) { throw new com.stratelia.webactiv.util.exception.UtilException(\"MyProfilRequestRouter.saveAvatar()\", com.stratelia.webactiv.util.exception.SilverpeasRuntimeException.ERROR, \"\", \"Bad extension, .gif or .jpg or .png expected.\"); } try { img.saveImage(file.getInputStream()); } catch (java.io.IOException e) { throw new com.stratelia.webactiv.util.exception.UtilException(\"MyProfilRequestRouter.saveAvatar()\", com.stratelia.webactiv.util.exception.SilverpeasRuntimeException.ERROR, \"\", \"Problem while saving image.\"); } }else if (\"yes\".equals(removeImageFile)) { img.removeImage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1056/buggy-version/war-core.src.main.java.com.silverpeas.socialnetwork.myProfil.servlets.MyProfilRequestRouter.java", "BodyUseAPI": ["com.stratelia.webactiv.util.FileRepositoryManager.getFileExtension(file.getName())", "org.apache.commons.fileupload.FileItem.getName()", "com.silverpeas.directory.servlets.ImageProfil.saveImage(file.getInputStream())", "org.apache.commons.fileupload.FileItem.getInputStream()"], "Fixed commit": "ffdd4d507725c03efbcb222f68e62432df4c4ee8", "Url": "https://api.github.com/repos/CecileBONIN/Silverpeas-Core", "Date": "2013-06-18T13:47:59Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Deque<Token>.pop()", "java.util.LinkedList<Token>.remove()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((gem.getType().equals(\"QUOTE\")) && (leftMatch.getType().equals(\"QUOTE\"))) { java.lang.System.err.println(\"Matching [\\\"] with [\\\"]\"); }else { java.lang.System.err.println((((\"$> Parse error\\n Expected: \" + expectedType) + \"\\n Got: \") + (gem.getType()))); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2305/buggy-version/Parser.java", "BodyUseAPI": ["java.io.PrintStream.println((((\"$> Parse error\\n   Expected: \" + expectedType) + \"\\n   Got: \") + (gem.getType())))", "Token.getType()"], "Fixed commit": "bea9c25da3f2230cbae0da4a133214a29f139b49", "Url": "https://api.github.com/repos/antonyliang/bestCompiler", "Date": "2015-02-26T03:01:55Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((org.aspectj.lang.reflect.MethodSignature) (joinPoint.getSignature())).getReturnType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (returnType == (void.class)) message.append(\"> It has no return type. (void)\"); else { message.append(\"> It returned \"); if (returnValue instanceof java.util.Collection) { java.util.Collection collection = ((java.util.Collection) (returnValue)); message.append(\"a collection of \").append(collection.size()).append(\" element(s).\"); }else message.append(\"a value: \").append(returnValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1335/buggy-version/src.org.mql.plateforme.stage.aspect.LoggingAspect.java", "BodyUseAPI": [], "Fixed commit": "aa7555111cd918ddb718d5298d74aa2960d6e248", "Url": "https://api.github.com/repos/DeveloperXY/MQLPlatformMod3_maven_enabled", "Date": "2017-11-12T11:49:40Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ManageEmployee.tx1.getLocalStatus().toString().equals(\"COMMITTED\"))) { ManageEmployee.tx1.commit(); ManageEmployee.session1.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4509/buggy-version/src.main.java.ManageEmployee.java", "BodyUseAPI": ["org.hibernate.Transaction.commit()"], "Fixed commit": "7e26f7ad46b9e280e18e92be57b1b8ea57e5ab7e", "Url": "https://api.github.com/repos/hazelcastInternsSummer14/hibernate4", "Date": "2014-07-09T10:15:36Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ManageEmployee.tx2.getLocalStatus().toString().equals(\"COMMITTED\"))) { ManageEmployee.tx2.commit(); ManageEmployee.session2.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4509/buggy-version/src.main.java.ManageEmployee.java", "BodyUseAPI": ["org.hibernate.Transaction.commit()"], "Fixed commit": "7e26f7ad46b9e280e18e92be57b1b8ea57e5ab7e", "Url": "https://api.github.com/repos/hazelcastInternsSummer14/hibernate4", "Date": "2014-07-09T10:15:36Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(text.isEmpty())) { return text.substring(((text.length()) - 1)).matches(\"[-+\u00f7*]\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6891/buggy-version/app.src.main.java.com.example.brian.supercalculator.MainActivity.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int)", "java.lang.String.matches(java.lang.String)"], "Fixed commit": "709fa03b55760cb310eee673a2e73178dd91e891", "Url": "https://api.github.com/repos/JeffCourses/brianrs482-SuperCalculator", "Date": "2017-12-05T03:04:45Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tvRes.getText().toString().isEmpty())) { txtOps.setText(tvRes.getText()); tvRes.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6891/buggy-version/app.src.main.java.com.example.brian.supercalculator.MainActivity.java", "BodyUseAPI": ["android.widget.EditText.setText(tvRes.getText())", "android.widget.TextView.getText()", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "709fa03b55760cb310eee673a2e73178dd91e891", "Url": "https://api.github.com/repos/JeffCourses/brianrs482-SuperCalculator", "Date": "2017-12-05T03:04:45Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((commonClasses.SummaryReport.getRowIndexHighlight()) != (commonClasses.Constants.NOTHING_SELECTED)) { detailPanel = new uiView.DetailPanel(commonClasses.SummaryReport.getDisplayList().get(commonClasses.SummaryReport.getRowIndexHighlight())); }else { if ((rowSelected) < (commonClasses.SummaryReport.getDisplayList().size())) { detailPanel = new uiView.DetailPanel(commonClasses.SummaryReport.getDisplayList().get(rowSelected)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3005/buggy-version/src.uiView.UiViewModifier.java", "BodyUseAPI": [], "Fixed commit": "b93a7abfc0913b6c03f72a806305e4c7b431c2d9", "Url": "https://api.github.com/repos/cs2103aug2014-t17-1j/main", "Date": "2014-11-02T14:26:40Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jp.fedom.android.musicalarm.activity.MainActivity.player) != null) { jp.fedom.android.musicalarm.activity.MainActivity.player.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1129/buggy-version/MusicAlarm.src.jp.fedom.android.musicalarm.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9ede3cbbaf9752864c7609843ccb9c5d3730ec30", "Url": "https://api.github.com/repos/mitsuo0114/MusicAlarm", "Date": "2013-01-20T05:09:26Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jp.fedom.android.musicalarm.activity.MainActivity.player) != null) { jp.fedom.android.musicalarm.activity.MainActivity.player.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1129/buggy-version/MusicAlarm.src.jp.fedom.android.musicalarm.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9ede3cbbaf9752864c7609843ccb9c5d3730ec30", "Url": "https://api.github.com/repos/mitsuo0114/MusicAlarm", "Date": "2013-01-20T05:09:26Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jp.fedom.android.musicalarm.activity.MainActivity.manager) != null) { jp.fedom.android.musicalarm.activity.MainActivity.manager.setMode(AudioManager.MODE_NORMAL); jp.fedom.android.musicalarm.activity.MainActivity.manager.setBluetoothScoOn(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1129/buggy-version/MusicAlarm.src.jp.fedom.android.musicalarm.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9ede3cbbaf9752864c7609843ccb9c5d3730ec30", "Url": "https://api.github.com/repos/mitsuo0114/MusicAlarm", "Date": "2013-01-20T05:09:26Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (values.containsKey(ReadLaterEntry.COLUMN_DESCRIPTION)) { ftsValues.put(ReadLaterEntry.COLUMN_DESCRIPTION, values.getAsString(ReadLaterEntry.COLUMN_DESCRIPTION)); updateFts = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6390/buggy-version/app.src.main.java.com.example.mborzenkov.readlaterlist.data.ReadLaterContentProvider.java", "BodyUseAPI": ["android.content.ContentValues.put(ReadLaterEntry.COLUMN_DESCRIPTION,values.getAsString(ReadLaterEntry.COLUMN_DESCRIPTION))", "android.content.ContentValues.getAsString(ReadLaterEntry.COLUMN_DESCRIPTION)"], "Fixed commit": "2736fc8bdada7bbb530bdcd59f5883be59b0cf0e", "Url": "https://api.github.com/repos/mborzenkov/Read-Later-List", "Date": "2017-05-02T12:30:30Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (updateFts) { db.update(ReadLaterEntry.TABLE_NAME_FTS, ftsValues, \"docid=?\", id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6390/buggy-version/app.src.main.java.com.example.mborzenkov.readlaterlist.data.ReadLaterContentProvider.java", "BodyUseAPI": [], "Fixed commit": "2736fc8bdada7bbb530bdcd59f5883be59b0cf0e", "Url": "https://api.github.com/repos/mborzenkov/Read-Later-List", "Date": "2017-05-02T12:30:30Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newIndex >= 0) { setIndex(newIndex, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6354/buggy-version/fisked-java.src.org.fisked.text.TextNavigator.java", "BodyUseAPI": ["org.fisked.text.TextNavigator.setIndex(int,boolean)"], "Fixed commit": "9f394e270c3a5f5fc1441190d05295a770076843", "Url": "https://api.github.com/repos/fisk/fisked", "Date": "2015-09-27T17:35:43Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newIndex <= (_buffer.getStringBuilder().length())) { setIndex(newIndex, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6354/buggy-version/fisked-java.src.org.fisked.text.TextNavigator.java", "BodyUseAPI": ["org.fisked.text.TextNavigator.setIndex(int,boolean)"], "Fixed commit": "9f394e270c3a5f5fc1441190d05295a770076843", "Url": "https://api.github.com/repos/fisk/fisked", "Date": "2015-09-27T17:35:43Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.isFirst) == true) this.ans = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4416/buggy-version/src.RapidSortingApplet.java", "BodyUseAPI": [], "Fixed commit": "0a8ee392aeaf853d1e74ecc16148d7ad54caef52", "Url": "https://api.github.com/repos/jasonchang117/SoftwareStudio2016_Final", "Date": "2016-06-03T00:46:51Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.isFirst) == true) this.ans = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4416/buggy-version/src.RapidSortingApplet.java", "BodyUseAPI": [], "Fixed commit": "0a8ee392aeaf853d1e74ecc16148d7ad54caef52", "Url": "https://api.github.com/repos/jasonchang117/SoftwareStudio2016_Final", "Date": "2016-06-03T00:46:51Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.si.sidora.tabularmetadata.TabularMetadataGenerator.peekingIterator(csvParser.iterator())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (parser.hasNext()) parser.next();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8399/buggy-version/tabular-metadata-generator.src.main.java.edu.si.sidora.tabularmetadata.TabularMetadataGenerator.java", "BodyUseAPI": ["com.google.common.collect.PeekingIterator<org.apache.commons.csv.CSVRecord>.next()"], "Fixed commit": "7012aee0ef9bf3bc8b2d8e44ebb21bb6554f1c6e", "Url": "https://api.github.com/repos/ocymum/tabular-metadata", "Date": "2015-09-16T19:52:46Z"},
{"Line": "=>5995", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.layoutDirection) == layoutDirection) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6500/buggy-version/core.java.android.view.ViewGroup.java", "BodyUseAPI": [], "Fixed commit": "07f85fecdd9f13a617953c7377ff62b4133b4e30", "Url": "https://api.github.com/repos/Crossbones/android_frameworks_base", "Date": "2012-10-18T22:23:40Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(STARTING_NOISE)) { canvas.isBeating = beating; android.graphics.drawable.BitmapDrawable tmp = canvas.drawECG(); drawingGraph.setBackground(tmp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2637/buggy-version/src.edu.ce.sharif.hearioun.Measure.java", "BodyUseAPI": [], "Fixed commit": "fd16f4bb5cf741db4ac12cbce1ef873bde9a7077", "Url": "https://api.github.com/repos/asmadotgh/HeaRioun", "Date": "2014-05-11T09:04:30Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["api.model.ContestDTO.getStatus()", "api.Queries.getPhotosToVote(user.getId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((newStatus == (Status.VOTES_OPENED.intValue())) && ((listPhotosToVote == null) || ((listPhotosToVote.size()) == 5))) return new api.model.StatusDTO(Status.NOT_ENOUGH_PARTICIPANTS, \"There are not enough participants\", contestStatus, false, false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8858/buggy-version/src.main.java.api.WebResource.java", "BodyUseAPI": [], "Fixed commit": "faeff3243d1010324bf11107789ce8a5cd86aecf", "Url": "https://api.github.com/repos/KosDV/pcontest", "Date": "2014-06-23T23:57:55Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(thumb.isComplete())) { thumb.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8371/buggy-version/library.src.main.java.com.bumptech.glide.request.ThumbnailRequestCoordinator.java", "BodyUseAPI": ["com.bumptech.glide.request.Request.clear()"], "Fixed commit": "a9f80ea1a5a5c3576feb3b58e38240b597cc586f", "Url": "https://api.github.com/repos/bumptech/glide", "Date": "2015-03-04T03:52:54Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((orientation) != 0) { java.lang.System.out.println(orientation); originalImage = originalImage.getFlippedCopy(true, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1533/buggy-version/src.main.java.nl.github.martijn9612.fishy.models.Entity.java", "BodyUseAPI": [], "Fixed commit": "43717664101f7c14e4ce84a75c7952609cdd8692", "Url": "https://api.github.com/repos/martijnjanssen/fishy", "Date": "2015-10-13T09:23:50Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.antonious.materialdaypicker.MaterialDayPicker.getSelectedDays()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((daysSelected.size()) == 0) { android.widget.Toast.makeText(this, \"Please select at least one day of notification frequency.\", Toast.LENGTH_SHORT).show(); }else { com.cmput301.cia.models.Habit habit = com.cmput301.cia.controller.CreateHabitController.onSaveClicked(habitName.getText().toString(), reason.getText().toString(), chooseStartDate, getPickedDates(daysSelected), spinner.getSelectedItem().toString()); android.content.Intent intent = new android.content.Intent(); intent.putExtra(\"Habit\", habit); setResult(com.cmput301.cia.activities.RESULT_OK, intent); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8705/buggy-version/app.src.main.java.com.cmput301.cia.activities.CreateHabitActivity.java", "BodyUseAPI": ["com.cmput301.cia.activities.CreateHabitActivity.getPickedDates(java.util.List<MaterialDayPicker.Weekday>)", "com.cmput301.cia.controller.CreateHabitController.onSaveClicked(habitName.getText().toString(),reason.getText().toString(),java.util.Date,java.util.List<java.lang.Integer>,spinner.getSelectedItem().toString())"], "Fixed commit": "378aa61ca073478b9cae459b67af75967aee53b2", "Url": "https://api.github.com/repos/CMPUT301F17T15/CIA", "Date": "2017-11-12T06:15:51Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (m_inferRange) { if ((m_dist[0]) == 0) m_sizeRange = (m_dist[((m_dist.length) - 1)]) - (m_minSize); else m_sizeRange = ((m_dist[((m_dist.length) - 1)]) / (m_dist[0])) - (m_minSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8960/buggy-version/src.prefuse.action.assignment.DataSizeAction.java", "BodyUseAPI": [], "Fixed commit": "e554a5f6450d32c702a1fda2d39fcabed17d5ca9", "Url": "https://api.github.com/repos/prefuse/Prefuse", "Date": "2011-12-16T19:35:14Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lj.moneytracker.database.TransactionDatabase.getAllAccount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((list.size()) > 1) { com.lj.moneytracker.adapter.BankListAdapter adapter = new com.lj.moneytracker.adapter.BankListAdapter(getActivity(), list); mRecyclerView.setAdapter(adapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/206/buggy-version/HishabKitab.app.MyApp.MoneyTracker.app.src.main.java.com.lj.moneytracker.fragment.BankAccountInfo.java", "BodyUseAPI": [], "Fixed commit": "91d125fda8008a22336d6b2a1ae5c0843c162c88", "Url": "https://api.github.com/repos/lokesh8/TestApp", "Date": "2016-06-17T11:19:48Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (html == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1627/buggy-version/k9mail.src.main.java.com.fsck.k9.helper.HtmlConverter.java", "BodyUseAPI": [], "Fixed commit": "37bd10b5da3b331aa93b5d92404678a3ece58c20", "Url": "https://api.github.com/repos/philipwhiuk/k2", "Date": "2016-03-05T14:39:08Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(use64Bit)) { for (int i = 0; i < (markers.length); i++) { markers[i] = (markers[i]) & 4294967295L; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6498/buggy-version/components.formats-gpl.src.loci.formats.in.NDPIReader.java", "BodyUseAPI": [], "Fixed commit": "b508afa2014293002d07b907bb566c2a5f60a1e1", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-05-15T19:45:37Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rightOfComma < 100) { java.lang.String largeNumber = (((java.lang.String.valueOf(leftOfComma)) + \",\") + \"0\") + (java.lang.String.valueOf(rightOfComma)); }else { java.lang.String largeNumber = ((java.lang.String.valueOf(leftOfComma)) + \",\") + (java.lang.String.valueOf(rightOfComma)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6586/buggy-version/SlugTracker.app.src.main.java.edu.soe.ucsc.slugtracker.Tracker.java", "BodyUseAPI": ["java.lang.String.valueOf(int)", "java.lang.String.valueOf(int)"], "Fixed commit": "45c82b8f0a978da13488a6310350dfca2f616a31", "Url": "https://api.github.com/repos/Talal-A/HackUCSC2016", "Date": "2016-01-31T06:17:54Z"},
{"Line": "=>2412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.osparking.vehicle.driver.DriverTable.getValueAt(int,com.osparking.vehicle.driver.UnitNo.getNumVal())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((unitObj.getClass()) == (com.osparking.global.names.InnoComboBoxItem.class)) { SEQ_NO = ((java.lang.Integer) (((com.osparking.global.names.InnoComboBoxItem) (unitObj)).getKeys()[0])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3453/buggy-version/Vehicle.src.main.java.com.osparking.vehicle.driver.ManageDrivers.java", "BodyUseAPI": [], "Fixed commit": "f6651080ab2500751eb0a79fd289717a54c417c9", "Url": "https://api.github.com/repos/osparking/OsParking_src", "Date": "2016-07-04T14:16:12Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (amount > 0) { transactionService.retrieveTransaction(accountBean, amount, \"Overdraft interest\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2518/buggy-version/src.main.java.com.bank.service.interest.InterestOverdraftTransferService.java", "BodyUseAPI": ["com.bank.service.transaction.TransactionService.retrieveTransaction(com.bank.bean.account.AccountBean,double,java.lang.String)"], "Fixed commit": "e9e0089fc1bba7d2856069c321fbaa7225a628e5", "Url": "https://api.github.com/repos/boschma2702/F4U-Bank", "Date": "2017-07-27T20:16:50Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (files != null) { for (java.io.File file : files) { java.nio.file.Path target = java.nio.file.Paths.get(currentDir.getPath(), file.getName()); java.nio.file.Files.move(java.nio.file.Paths.get(file.toURI()), target, java.nio.file.StandardCopyOption.REPLACE_EXISTING); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2438/buggy-version/src.main.java.gov.loc.processor.ConvertProcessor.java", "BodyUseAPI": [], "Fixed commit": "26afcbc9a682c9320b583f92a433943100f8d6b8", "Url": "https://api.github.com/repos/LibraryOfCongress/bagit-java", "Date": "2015-12-17T16:48:10Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentTransition) != null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4170/buggy-version/src.com.naronco.infinityjam.Game.java", "BodyUseAPI": [], "Fixed commit": "0e5e6dd226f34860697545bc184d744ade37b6bb", "Url": "https://api.github.com/repos/Naronco/InfinityJam", "Date": "2017-10-22T06:49:23Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentTransition) != null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4170/buggy-version/src.com.naronco.infinityjam.Game.java", "BodyUseAPI": [], "Fixed commit": "0e5e6dd226f34860697545bc184d744ade37b6bb", "Url": "https://api.github.com/repos/Naronco/InfinityJam", "Date": "2017-10-22T06:49:23Z"},
{"Line": "=>667", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (command.isShutdownInfo()) { shuttingDown = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1126/buggy-version/activemq-client.src.main.java.org.apache.activemq.transport.failover.FailoverTransport.java", "BodyUseAPI": [], "Fixed commit": "ce911bafbfc4bab88fbd0827273ab4e9ee2de0f7", "Url": "https://api.github.com/repos/zmhassan/activemq", "Date": "2014-06-23T11:12:39Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shuttingDown) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1126/buggy-version/activemq-client.src.main.java.org.apache.activemq.transport.failover.FailoverTransport.java", "BodyUseAPI": [], "Fixed commit": "ce911bafbfc4bab88fbd0827273ab4e9ee2de0f7", "Url": "https://api.github.com/repos/zmhassan/activemq", "Date": "2014-06-23T11:12:39Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((oldText) == null) { oldText = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6128/buggy-version/app.src.main.java.com.catchingnow.tinyclipboards.ActivityEditor.java", "BodyUseAPI": [], "Fixed commit": "47739980b04e26a4234735837ffe5fee54503daf", "Url": "https://api.github.com/repos/heruoxin/Clip-Stack", "Date": "2015-01-29T16:55:47Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(firstAdd)) { firstAdd = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7382/buggy-version/src.edu.berkeley.cs160.mSpray.SprayerIDScan.java", "BodyUseAPI": [], "Fixed commit": "781e9730da3ef84f924c4afeb805b405a2d56a99", "Url": "https://api.github.com/repos/ldanielw1/cs160-mSpray", "Date": "2013-04-07T04:41:29Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((envVar[i].startsWith(\"PERL5LIB\")) && (organism.equals(\"Mm\"))) { envVar[i] = envVar[i].replaceAll(\"ensembl_ucsc\", \"ensembl_ucsc_old\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2313/buggy-version/src.edu.ucdenver.ccp.PhenoGen.tools.analysis.ExonDataTools.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "e85f9f5ab59453f52b7fefbcf34c0855fb303ba4", "Url": "https://api.github.com/repos/TabakoffLab/PhenoGen", "Date": "2013-09-05T20:47:32Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.but4er007.Solution.compareBitMasks(long,long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (comparing == (-1)) { if ((newMergedState[1]) >= (states2.get(j)[1])) needToAddMergedState = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/827/buggy-version/src.ru.but4er007.Solution.java", "BodyUseAPI": [], "Fixed commit": "0081113d5b09460831cd3f7db81b2a41ba5f4d09", "Url": "https://api.github.com/repos/but4er007/SynchronousShopping", "Date": "2017-05-09T21:03:56Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (d > (java.lang.Long.MAX_VALUE)) { v = java.lang.Long.MAX_VALUE; }else { v = ((long) (d)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5383/buggy-version/io.src.main.java.com.itextpdf.io.source.ByteUtils.java", "BodyUseAPI": [], "Fixed commit": "1e1eb7c52eae508b1246c36a2c18cb9dac793080", "Url": "https://api.github.com/repos/itext/itext7", "Date": "2016-06-03T11:31:19Z"},
{"Line": "=>487", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.runtime.Platform.getBundle(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (bundle == null) { org.erlide.util.ErlLogger.error((\"* !!! error bundle not found \" + \"org.erlide.kernel.debugger\")); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5700/buggy-version/org.erlide.backend.src.org.erlide.backend.internal.Backend.java", "BodyUseAPI": [], "Fixed commit": "57c60774154554939266540d0e8b0e0f466b60d2", "Url": "https://api.github.com/repos/erlide/erlide", "Date": "2013-03-08T08:32:54Z"},
{"Line": "=>724", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIsFocused) mMenuView.hideIfRoomItems(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1878/buggy-version/library.src.main.java.com.arlib.floatingsearchview.FloatingSearchView.java", "BodyUseAPI": [], "Fixed commit": "31aaec28f6f41afd1a339746da856dec42f0c2d0", "Url": "https://api.github.com/repos/arimorty/floatingsearchview", "Date": "2015-12-07T21:03:24Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!newGraphNeeded) { java.lang.System.out.println(((((\"Thread [\" + (java.lang.Thread.currentThread().getId())) + \"] Returning same graph because graph [\") + (graph.hashCode())) + \"] is open\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8255/buggy-version/grakn-graph.src.main.java.ai.grakn.factory.AbstractInternalFactory.java", "BodyUseAPI": [], "Fixed commit": "67a6e0bdcb517d9b81fb6a2a1998701c15de832d", "Url": "https://api.github.com/repos/fppt/grakn", "Date": "2016-11-23T17:42:14Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newGraphNeeded) { graph = buildTinkerPopGraph(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8255/buggy-version/grakn-graph.src.main.java.ai.grakn.factory.AbstractInternalFactory.java", "BodyUseAPI": [], "Fixed commit": "67a6e0bdcb517d9b81fb6a2a1998701c15de832d", "Url": "https://api.github.com/repos/fppt/grakn", "Date": "2016-11-23T17:42:14Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tyndalehouse.step.core.models.LexiconSuggestion.getGloss()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (gloss1 == null) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7458/buggy-version/step-core.src.main.java.com.tyndalehouse.step.core.service.jsword.helpers.JSwordStrongNumberHelper.java", "BodyUseAPI": [], "Fixed commit": "ace7172eeec29d922dfeaecc464a78ca0d2e5002", "Url": "https://api.github.com/repos/tyndale/step", "Date": "2013-02-10T11:39:04Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tyndalehouse.step.core.models.LexiconSuggestion.getGloss()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (gloss2 == null) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7458/buggy-version/step-core.src.main.java.com.tyndalehouse.step.core.service.jsword.helpers.JSwordStrongNumberHelper.java", "BodyUseAPI": [], "Fixed commit": "ace7172eeec29d922dfeaecc464a78ca0d2e5002", "Url": "https://api.github.com/repos/tyndale/step", "Date": "2013-02-10T11:39:04Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((!(request.isRequestedSessionIdFromURL())) && (actionTask == null)) || (actionTask.equals(\"\"))) { actionTask = \"signIn\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5960/buggy-version/src.il.ac.hit.mvcdemo.controller.Router.java", "BodyUseAPI": [], "Fixed commit": "9a1a409f6c83b0b83c5f212fec4092dc35c59568", "Url": "https://api.github.com/repos/sanadsa/KenDoIt", "Date": "2017-07-24T18:46:26Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((employeeExperience == (this.EXPERIENCED)) || (employeeExperience == (this.PROBATIONARY))) { this.employeeExperience = employeeExperience; }else { throw new java.lang.IllegalArgumentException(\"Invalid experience level.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4225/buggy-version/src.edu.msoe.se2832.travelingsalesman.MSOECommissionCalculator.java", "BodyUseAPI": [], "Fixed commit": "76fccb5d3ebe2ebba480dc0775fe1576bd197214", "Url": "https://api.github.com/repos/mherman11/SE2832_Lab4", "Date": "2013-04-17T01:12:01Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["au.com.newint.newinternationalist.Issue.getArticles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (articles != null) { populateLayoutListFromArticles(articles); adapter.notifyItemChanged(1); android.util.Log.i(\"PreloadArticles\", \"Articles ready, so refreshing first article.\"); }else { android.util.Log.e(\"PreloadArticles\", \"Table of contents PreloadArticles returned null.\"); android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder(getActivity()); builder.setMessage(getResources().getString(R.string.preload_articles_failed_dialog_message)).setTitle(R.string.preload_articles_failed_dialog_title); builder.setPositiveButton(R.string.zip_download_dialog_ok_button, new android.content.DialogInterface.OnClickListener() { public void onClick(android.content.DialogInterface dialog, int id) { getActivity().finish(); } }); builder.setNeutralButton(R.string.zip_download_dialog_email_dev_button, new android.content.DialogInterface.OnClickListener() { @java.lang.Override public void onClick(android.content.DialogInterface dialog, int id) { android.content.Intent intent = new android.content.Intent(android.content.Intent.ACTION_SEND); java.lang.String[] email = new java.lang.String[]{ au.com.newint.newinternationalist.Helpers.getVariableFromConfig(\"EMAIL_ADDRESS\") }; intent.setType(\"text/plain\"); intent.putExtra(Intent.EXTRA_EMAIL, email); intent.putExtra(Intent.EXTRA_SUBJECT, getResources().getString(R.string.preload_articles_failed_dialog_email_subject)); intent.putExtra(Intent.EXTRA_TEXT, (((getResources().getString(R.string.preload_articles_dialog_email_body)) + \"' For IssueID: \") + (au.com.newint.newinternationalist.TableOfContentsActivity.issue.getID()))); startActivity(android.content.Intent.createChooser(intent, getResources().getString(R.string.zip_download_dialog_email_chooser))); } }); android.app.AlertDialog dialog = builder.create(); dialog.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4685/buggy-version/app.src.main.java.au.com.newint.newinternationalist.TableOfContentsActivity.java", "BodyUseAPI": ["au.com.newint.newinternationalist.TableOfContentsActivity.TableOfContentsFragment.1.populateLayoutListFromArticles(java.util.ArrayList<au.com.newint.newinternationalist.Article>)"], "Fixed commit": "362a110d906054bcf0f724f00031157bb5de3537", "Url": "https://api.github.com/repos/sighmon/NewInternationalist", "Date": "2015-08-05T07:28:38Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ca.jarcode.consoles.Consoles.computersEnabled) ca.jarcode.consoles.computer.MapDataStore.init(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8735/buggy-version/craftbukkit.src.main.java.ca.jarcode.consoles.Consoles.java", "BodyUseAPI": [], "Fixed commit": "dc1352c859c0f551e63ba751797054963a5c7b56", "Url": "https://api.github.com/repos/wacossusca34/Consoles", "Date": "2015-06-25T07:50:04Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((user.getLogin().isEmpty()) || (user.getPassword().isEmpty())) || (user.getEmail().isEmpty())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/541/buggy-version/Project.src.main.java.main.AccountService.java", "BodyUseAPI": [], "Fixed commit": "7b729302fa1edbe2f7145ab51b6e7c3276dcb4cc", "Url": "https://api.github.com/repos/java-park-mail-ru/2016-02-PoLiglot1.0", "Date": "2016-03-12T11:59:39Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getWriterSettings().getFieldLengths()) == null) { getWriterSettings().setFieldLengths(new com.univocity.parsers.fixed.FixedWidthFields(headers, lengths)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3465/buggy-version/src.main.java.com.univocity.parsers.fixed.FixedWidthRoutines.java", "BodyUseAPI": [], "Fixed commit": "40d5fe1b9cd606f97d66fe2933cb4534965f11e5", "Url": "https://api.github.com/repos/mosoft521/univocity-parsers", "Date": "2017-02-13T22:02:14Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.findViewById(R.id.vsPic)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (vsPic != null) { vsPicAfterInflated = vsPic.inflate(); }else { vsPicAfterInflated = included.findViewById(R.id.vsPicAfter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5582/buggy-version/Android.app.src.main.java.com.cp1.translator.adapters.PostsAdapter.java", "BodyUseAPI": ["android.view.ViewStub.inflate()"], "Fixed commit": "4df9ddc400bf1d22a5cd6dd3c46634f1673826f6", "Url": "https://api.github.com/repos/CPTeam1/translator", "Date": "2016-03-23T00:09:53Z"},
{"Line": "=>970", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"LEVEL\".equalsIgnoreCase(ident)) { com.alibaba.druid.sql.ast.SQLObject parent = x.getParent(); if (parent instanceof com.alibaba.druid.sql.visitor.SQLSelectItem) { com.alibaba.druid.sql.ast.SQLObject parent2 = parent.getParent(); if (parent2 instanceof com.alibaba.druid.sql.visitor.SQLSelectQueryBlock) { com.alibaba.druid.sql.visitor.SQLSelectQueryBlock queryBlock = ((com.alibaba.druid.sql.visitor.SQLSelectQueryBlock) (parent2)); if (((queryBlock.getStartWith()) != null) || ((queryBlock.getConnectBy()) != null)) { return false; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/603/buggy-version/src.main.java.com.alibaba.druid.sql.visitor.SchemaStatVisitor.java", "BodyUseAPI": [], "Fixed commit": "30a79c41ab2fa3fe2d1d64b4f0773353aac59d60", "Url": "https://api.github.com/repos/wenshao/druid", "Date": "2017-04-24T10:43:40Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((view.getHeight()) > 200) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5017/buggy-version/src.com.stanford.tutti.BrowseSongsFragment.java", "BodyUseAPI": [], "Fixed commit": "c2962e31e7623952586aedecadd063964695c80b", "Url": "https://api.github.com/repos/JayThomason/Tutti", "Date": "2014-05-14T01:12:40Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.fachbereich) != null) { this.fachbereich.mitarbeiterHinzufuegen(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7668/buggy-version/Lehrbeauftragter.java", "BodyUseAPI": [], "Fixed commit": "4d5fed5f3a1809fd06df1e21def61cc6264db85f", "Url": "https://api.github.com/repos/silasroeber/OOP_Labor3", "Date": "2016-11-21T13:44:43Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getChannel()) == null) { return new java.util.ArrayList<>(); }else { return getChannel().getBuffer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7875/buggy-version/HoloIRC.src.main.java.com.fusionx.lightirc.ui.ChannelFragment.java", "BodyUseAPI": [], "Fixed commit": "5d6217e7042addbe67ab4332c89faf8e3451d43a", "Url": "https://api.github.com/repos/tilal6991/HoloIRC", "Date": "2013-12-17T11:54:59Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["acg.getConversions().get(beast.util.Randomizer.nextInt(acg.getConvCount()))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (conv1.getNode2().isRoot()) return java.lang.Double.NEGATIVE_INFINITY;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3362/buggy-version/src.bacter.operators.unrestricted.MergeSplitConversion.java", "BodyUseAPI": [], "Fixed commit": "0f5da5329b365555887886f3fb887bd6ef60a568", "Url": "https://api.github.com/repos/tgvaughan/bacter", "Date": "2015-03-01T23:46:13Z"},
{"Line": "=>3058", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 13) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5833/buggy-version/phresco-framework-web.src.main.java.com.photon.phresco.framework.commons.FrameworkUtil.java", "BodyUseAPI": [], "Fixed commit": "c6bb97b38a82a08c6b38df3f0673258d2280a2d2", "Url": "https://api.github.com/repos/photon-infotech/framework", "Date": "2013-06-14T14:19:27Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.qihoo360.replugin.helper.HostConfigHelper.PERSISTENT_ENABLE) { uri = com.qihoo360.replugin.component.process.ProcessPitProviderPersist.URI; }else { uri = com.qihoo360.replugin.component.process.ProcessPitProviderUI.buildUri(IPluginManager.PROCESS_UI); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5940/buggy-version/replugin-host-library.replugin-host-lib.src.main.java.com.qihoo360.loader2.PluginProviderStub.java", "BodyUseAPI": [], "Fixed commit": "3fe8923069a8a028b0f729c137e4f5e995ebf4de", "Url": "https://api.github.com/repos/Pinned/RePlugin", "Date": "2017-11-13T16:01:52Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player.isOnline()) { com.bergerkiller.bukkit.common.utils.PacketUtil.sendPacket(player, packet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5130/buggy-version/src.main.java.com.lenis0012.bukkit.statues.Helper.java", "BodyUseAPI": ["com.bergerkiller.bukkit.common.utils.PacketUtil.sendPacket(org.bukkit.entity.Player,com.bergerkiller.bukkit.common.protocol.CommonPacket)"], "Fixed commit": "2ca3b3ea7ef51e1ec8f51ea46aef4a2a214cfe00", "Url": "https://api.github.com/repos/lenis0012/Statues", "Date": "2014-03-31T20:06:04Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.smanzana.JavaVis.Parser.JavaLangDictionary.langDictionary) == null) { com.smanzana.JavaVis.Parser.JavaLangDictionary.init(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8445/buggy-version/src.com.smanzana.JavaVis.Parser.JavaLangDictionary.java", "BodyUseAPI": [], "Fixed commit": "97303eb45dcf221dcbb73e0f54c2417f12b81e65", "Url": "https://api.github.com/repos/Dove-Bren/JavaVis", "Date": "2015-04-19T19:42:27Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.smanzana.JavaVis.Parser.JavaLangDictionary.isJavaLang(localName)) { return new com.smanzana.JavaVis.Parser.Wrappers.Import((\"java.lang.\" + localName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8445/buggy-version/src.com.smanzana.JavaVis.Parser.Wrappers.Cclass.java", "BodyUseAPI": [], "Fixed commit": "97303eb45dcf221dcbb73e0f54c2417f12b81e65", "Url": "https://api.github.com/repos/Dove-Bren/JavaVis", "Date": "2015-04-19T19:42:27Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == (sites.length)) uf.union(ufIdxOne, ((sitesCount) + 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8362/buggy-version/Week0.src.Percolation.java", "BodyUseAPI": [], "Fixed commit": "41dfb355a39961448fe0a3eecf1404f8bdf9f5ff", "Url": "https://api.github.com/repos/arun1595/algorithms-part1", "Date": "2016-09-10T20:32:00Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 1) uf.union(ufIdxOne, sitesCount);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8362/buggy-version/Week0.src.Percolation.java", "BodyUseAPI": [], "Fixed commit": "41dfb355a39961448fe0a3eecf1404f8bdf9f5ff", "Url": "https://api.github.com/repos/arun1595/algorithms-part1", "Date": "2016-09-10T20:32:00Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (currentFUser != null) uKey = currentFUser.getUid();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5723/buggy-version/app.src.main.java.it.polito.mad.mad_app.GroupsFragment.java", "BodyUseAPI": ["com.google.firebase.auth.FirebaseUser.getUid()"], "Fixed commit": "2928980a2e1280a22b46e1f1020ad394eef5a82f", "Url": "https://api.github.com/repos/sia4/MAD_Project_Group21_2017", "Date": "2017-04-24T10:32:19Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ContentProvider.ITEMS.isEmpty()) { pl.karol.k.seasoner.util.ContentProvider.populateItemContainers(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5720/buggy-version/src.pl.karol.k.seasoner.SeasoningListActivity.java", "BodyUseAPI": [], "Fixed commit": "23b896a6778718fd4890866f3d2f1723b4c86f57", "Url": "https://api.github.com/repos/karokir/seasoner", "Date": "2015-05-16T18:20:27Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (choiceList.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5752/buggy-version/widgets.ChoiceLabel.java", "BodyUseAPI": [], "Fixed commit": "f23b0c2d63b0bab7a46c4f21cfd6e6d8542e51c2", "Url": "https://api.github.com/repos/McJtyMods/McJtyLib", "Date": "2015-04-21T13:56:22Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIdByName(workbook.getSheet(\"Extras\"), paymentType).toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (paymentTypeId.equals(\"0\")) paymentTypeId = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4811/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.infrastructure.dataimport.domain.handler.savings.SavingsTransactionDataImportHandler.java", "BodyUseAPI": [], "Fixed commit": "72e4af648cebe194319dd4e8d4dbf505a1fbf718", "Url": "https://api.github.com/repos/diunuge/mifosx", "Date": "2014-08-01T14:26:03Z"},
{"Line": "=>806", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (millis > 0) { localTask.setCurrentTimeSpent(((localTask.getCurrentTimeSpent()) + millis)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4034/buggy-version/com.dbfs.JTT.src.com.dbfs.jtt.swt.TasksComposite.java", "BodyUseAPI": ["com.dbfs.jtt.model.Task.setCurrentTimeSpent(((localTask.getCurrentTimeSpent()) + millis))"], "Fixed commit": "33a42b2ece207c228029366f89ef6d031d5b0c26", "Url": "https://api.github.com/repos/dmitryberkut/jtt", "Date": "2015-10-07T08:41:56Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mediaworx.intellij.opencmsplugin.actions.menus.OpenCmsMainMenu.getId(com.mediaworx.intellij.opencmsplugin.actions.menus.AnAction)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (actionId != null) { keymap.removeAllActionShortcuts(actionId); actionManager.unregisterAction(actionId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1577/buggy-version/src.com.mediaworx.intellij.opencmsplugin.actions.menus.OpenCmsMainMenu.java", "BodyUseAPI": ["com.mediaworx.intellij.opencmsplugin.actions.menus.OpenCmsMainMenu.unregisterAction(java.lang.String)", "com.intellij.openapi.keymap.Keymap.removeAllActionShortcuts(java.lang.String)"], "Fixed commit": "ce4d827141fbd01b8142ad4facd7ce82af620876", "Url": "https://api.github.com/repos/mediaworx/opencms-intellijplugin", "Date": "2014-06-16T13:14:04Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((args.length) == 2) { trigger.nextMap = maps.get(java.lang.Integer.parseInt(args[0].trim())); trigger.nextCell = java.lang.Short.parseShort(args[1].trim()); }else { org.shivas.data.converter.App.log(\"Un trigger n'a aucune r\u00e9f\u00e9rence \u00e0 une autre carte, il est par cons\u00e9quent ignor\u00e9.\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1174/buggy-version/shivas-dataconverter.src.main.java.org.shivas.data.converter.AncestraConverter.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.trim()", "java.lang.String.trim()", "java.util.Map<java.lang.Integer, Structs.GameMap>.get(int)", "java.lang.Short.parseShort(java.lang.String)"], "Fixed commit": "f5d2d512229e705bd322463a81160ef470e8f30a", "Url": "https://api.github.com/repos/Blackrush/Shivas", "Date": "2012-05-20T12:13:54Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (prefixArray[i].equalsIgnoreCase(null)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1634/buggy-version/src.main.java.com.gmail.moonmasters200.CustomPrefix.Main.java", "BodyUseAPI": [], "Fixed commit": "a7f45c494c00021e3a2ecabb242bcb55bb903a9d", "Url": "https://api.github.com/repos/millenium200/CustomPrefix", "Date": "2014-09-27T05:45:45Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.windup.web.services.rest.RegisteredApplicationEndpointImpl.getApplication(application.getId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((previousApplication != null) && ((previousApplication.getRegistrationType()) == (RegisteredApplication.RegistrationType.UPLOADED))) this.deleteApplicationFile(previousApplication);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6790/buggy-version/services.src.main.java.org.jboss.windup.web.services.rest.RegisteredApplicationEndpointImpl.java", "BodyUseAPI": ["org.jboss.windup.web.services.rest.RegisteredApplicationEndpointImpl.deleteApplicationFile(org.jboss.windup.web.services.model.RegisteredApplication)"], "Fixed commit": "f89ec3337aa7ed69765df38e0c2950fb32eaa054", "Url": "https://api.github.com/repos/windup/windup-web", "Date": "2016-11-18T16:59:57Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.windup.web.services.rest.RegisteredApplicationEndpointImpl.getApplication(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((application.getRegistrationType()) == (RegisteredApplication.RegistrationType.UPLOADED)) this.deleteApplicationFile(application);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6790/buggy-version/services.src.main.java.org.jboss.windup.web.services.rest.RegisteredApplicationEndpointImpl.java", "BodyUseAPI": ["org.jboss.windup.web.services.rest.RegisteredApplicationEndpointImpl.deleteApplicationFile(org.jboss.windup.web.services.model.RegisteredApplication)"], "Fixed commit": "f89ec3337aa7ed69765df38e0c2950fb32eaa054", "Url": "https://api.github.com/repos/windup/windup-web", "Date": "2016-11-18T16:59:57Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nmdp.hfcus.dao.PopulationRepository.findOne(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (population != null) { responseEntity = org.springframework.http.ResponseEntity.ok(population.toSwaggerObject()); }else { responseEntity = new org.springframework.http.ResponseEntity(org.springframework.http.HttpStatus.NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3688/buggy-version/src.main.java.org.nmdp.hfcus.controller.PopulationApiController.java", "BodyUseAPI": ["org.springframework.http.ResponseEntity.ok(population.toSwaggerObject())", "org.nmdp.hfcus.model.Population.toSwaggerObject()"], "Fixed commit": "13496925919a1b0db21d801e089364a728c93c14", "Url": "https://api.github.com/repos/sauter/service-haplotype-frequency-curation", "Date": "2017-11-13T15:10:38Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((switcherContainer.getChildCount()) > 1) switcherContainer.removeAllViews(); else switcherContainer.addView(controller.getAlbumView(), LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.MATCH_PARENT);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5742/buggy-version/app.src.main.java.com.erish.wingbrowser.BrowserActivity.java", "BodyUseAPI": ["android.widget.LinearLayout.addView(controller.getAlbumView(),LinearLayout.LayoutParams.WRAP_CONTENT,LinearLayout.LayoutParams.MATCH_PARENT)", "android.widget.LinearLayout.removeAllViews()"], "Fixed commit": "efe456a3c758f9d2143cfaf8aa05169fd3b0dc32", "Url": "https://api.github.com/repos/erishforG/wing-browser", "Date": "2016-01-21T06:48:09Z"},
{"Line": "=>973", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((io.github.mthli.Ninja.View.NinjaWebView) (currentAlbumController)) == null) || (((io.github.mthli.Ninja.View.NinjaWebView) (currentAlbumController)).getUrl().isEmpty())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5742/buggy-version/app.src.main.java.com.erish.wingbrowser.BrowserActivity.java", "BodyUseAPI": [], "Fixed commit": "efe456a3c758f9d2143cfaf8aa05169fd3b0dc32", "Url": "https://api.github.com/repos/erishforG/wing-browser", "Date": "2016-01-21T06:48:09Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.geoserver.web.GeoServerApplication.get().getCatalog().getStyle(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (null == (style.getLegend())) { style.setLegend(org.geoserver.web.GeoServerApplication.get().getCatalog().getFactory().createLegend()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2325/buggy-version/src.web.core.src.main.java.org.geoserver.web.data.style.StyleDetachableModel.java", "BodyUseAPI": ["org.geoserver.catalog.StyleInfo.setLegend(org.geoserver.web.GeoServerApplication.get().getCatalog().getFactory().createLegend())"], "Fixed commit": "49a4dea2bec9cd636f1262fe2fe9ac583d205ab9", "Url": "https://api.github.com/repos/geocent-yancy/geoserver", "Date": "2012-10-05T18:51:09Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.birthdate) != null) { pstmnt.setDate(3, new java.sql.Date(user.birthdate.getTime())); }else { pstmnt.setNull(3, java.sql.Types.DATE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4507/buggy-version/P3.src.db.managers.UserManager.java", "BodyUseAPI": ["user.birthdate.getTime()", "java.sql.PreparedStatement.setDate(int,java.sql.Date)"], "Fixed commit": "9b8ccffb37adac250e23eaae4772ab3d85ab9dac", "Url": "https://api.github.com/repos/ozhilin/comp421-p3", "Date": "2016-03-18T23:57:41Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (destination instanceof com.nokia.dempsy.messagetransport.tcp.TcpDestination) prefix = ((com.nokia.dempsy.messagetransport.tcp.TcpDestination) (destination)).getInetAddress().getHostAddress().replaceAll(\"\\\\.\", \"-\"); else prefix = destination.toString().replaceAll(\"\\\\.\", \"-\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5772/buggy-version/lib-dempsyimpl.src.main.java.com.nokia.dempsy.monitoring.coda.StatsCollectorFactoryCoda.java", "BodyUseAPI": ["destination.toString().replaceAll(java.lang.String,java.lang.String)", "com.nokia.dempsy.messagetransport.Destination.toString()"], "Fixed commit": "4c83049d319805b55f7cb6db25fb01ecc8bdcc05", "Url": "https://api.github.com/repos/jimfcarroll/Dempsy", "Date": "2012-10-06T13:26:31Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(feedItemsGuidsToExclude.isEmpty())) { queryBuilder.append(\"AND i.guid NOT IN :guids \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2139/buggy-version/src.main.java.mdettlaff.cloudreader.dao.FeedItemDao.java", "BodyUseAPI": [], "Fixed commit": "6be536d89f53cc12ce41b3a27e7cf0042888d18c", "Url": "https://api.github.com/repos/mdettlaff-mb/CloudReader", "Date": "2013-04-01T21:57:17Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(feedItemsGuidsToExclude.isEmpty())) { query.setParameter(\"guids\", feedItemsGuidsToExclude); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2139/buggy-version/src.main.java.mdettlaff.cloudreader.dao.FeedItemDao.java", "BodyUseAPI": ["javax.persistence.Query.setParameter(java.lang.String,java.util.List<java.lang.String>)"], "Fixed commit": "6be536d89f53cc12ce41b3a27e7cf0042888d18c", "Url": "https://api.github.com/repos/mdettlaff-mb/CloudReader", "Date": "2013-04-01T21:57:17Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cinchapi.concourse.server.model.Value.getObject()", "org.cinchapi.concourse.server.model.Value.getObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((o1 instanceof java.lang.Number) && (o2 instanceof java.lang.Number)) { return org.cinchapi.concourse.util.Numbers.compare(((java.lang.Number) (o1)), ((java.lang.Number) (o2))); }else if (o1 instanceof java.lang.Number) { return -1; }else if (o2 instanceof java.lang.Number) { return 1; }else { return o1.toString().compareTo(o2.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2011/buggy-version/concourse-server.src.main.java.org.cinchapi.concourse.server.model.Value.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.lang.String.compareTo(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "36cd31e6fb912f098b42e057dc3b429f67cad87c", "Url": "https://api.github.com/repos/cinchapi/concourse", "Date": "2014-06-02T12:56:01Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((foodID) != (-1)) TFC.Food.ItemFoodTFC.FoodList[foodID] = this.itemID;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3632/buggy-version/TFC_Shared.src.TFC.Food.ItemFoodTFC.java", "BodyUseAPI": [], "Fixed commit": "25ce41c2470f22a82d32a4cbf154e3debb74feaa", "Url": "https://api.github.com/repos/oldmanmike/TFCraft", "Date": "2014-02-11T23:27:23Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.lucene.search.DictionaryRecIdCache.getUnInvertedDocidsStrField(org.apache.lucene.index.AtomicReader,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (invCache == null) { return new java.util.HashMap<java.lang.Integer, java.util.List<java.lang.Integer>>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4275/buggy-version/contrib.invenio.src.java.org.apache.lucene.search.DictionaryRecIdCache.java", "BodyUseAPI": [], "Fixed commit": "1552d43e8d52062980bdac583ca31ded3c523a99", "Url": "https://api.github.com/repos/romanchyla/montysolr", "Date": "2013-03-21T21:30:03Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.poi.xssf.usermodel.XSSFRow.getCell(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (ammount.getCellTypeEnum().equals(CellType.NUMERIC)) { e.ammount = ammount.getNumericCellValue(); }else { java.lang.String editAm = row.getCell(ExcelToSIE.colNum(\"F\")).getStringCellValue().replace(\".\", \"\").replace(\",\", \".\").replace(\"'\", \"\").replace(\"\\u00a0\", \"\").trim(); e.ammount = java.lang.Double.parseDouble(editAm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4547/buggy-version/src.main.java.ExcelToSIE.java", "BodyUseAPI": ["org.apache.poi.ss.usermodel.Cell.getNumericCellValue()"], "Fixed commit": "3026fca1f83a1c1a6f5cc42d743a6af92f791538", "Url": "https://api.github.com/repos/juanluisrto/ExcelToSIE", "Date": "2017-10-13T13:10:21Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Document.select(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((elements.size()) <= 6) { throw new java.io.IOException(\"Get user sex error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/9127/buggy-version/app.src.main.java.com.jewelzqiu.sjtubbs.support.DatabaseHelper.java", "BodyUseAPI": [], "Fixed commit": "b0db1a60aff47bf77db95b9dedd8ee82e01b549c", "Url": "https://api.github.com/repos/jewelzqiu/sjtubbs", "Date": "2014-07-26T05:49:32Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item) == null) item = new org.bukkit.inventory.ItemStack(1, 1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7202/buggy-version/src.main.java.com.sk89q.craftbook.circuits.gates.world.items.ItemDispenser.java", "BodyUseAPI": [], "Fixed commit": "b12e21be71f1a121de5d61ad76335abadcb96040", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-01-13T04:24:09Z"},
{"Line": "=>805", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pnnl.goss.powergrid.PowergridModel.getLoad(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (item == null) { pnnl.goss.powergrid.dao.PowergridDaoMySql.log.error((\"Load is null can't update it! for id \" + id)); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3822/buggy-version/goss-powergrid-feature.powergrid-server.src.main.java.pnnl.goss.powergrid.dao.PowergridDaoMySql.java", "BodyUseAPI": [], "Fixed commit": "902ef7f150814f901fa73f2f563bb5b27c04025d", "Url": "https://api.github.com/repos/GridOPTICS/GOSS", "Date": "2014-05-02T05:04:19Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isTaskRoot())) { finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1985/buggy-version/app.src.main.java.com.freshollie.monkeyboard.keystoneradio.ui.PlayerActivity.java", "BodyUseAPI": [], "Fixed commit": "86ae2a9d5c37f03b07cee2df7e1a5779101bbfb0", "Url": "https://api.github.com/repos/freshollie/monkeyboard-radio-android", "Date": "2017-06-22T13:56:10Z"},
{"Line": "=>1241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sharedPreferences) != null) { sharedPreferences.unregisterOnSharedPreferenceChangeListener(sharedPreferenceChangeListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1985/buggy-version/app.src.main.java.com.freshollie.monkeyboard.keystoneradio.ui.PlayerActivity.java", "BodyUseAPI": [], "Fixed commit": "86ae2a9d5c37f03b07cee2df7e1a5779101bbfb0", "Url": "https://api.github.com/repos/freshollie/monkeyboard-radio-android", "Date": "2017-06-22T13:56:10Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isSuitableForVm(vm)) { addMigratingVm(vm); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6152/buggy-version/ABC_Cloud.src.main.java.com.springapp.mvc.model.cloud.GreenHost.java", "BodyUseAPI": ["com.springapp.mvc.model.cloud.GreenHost.addMigratingVm(org.cloudbus.cloudsim.Vm)"], "Fixed commit": "527abf1667bf85b1106590fdda9aa3db2b64b75d", "Url": "https://api.github.com/repos/danicopaciu/Licenta", "Date": "2015-04-13T21:27:44Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((type.getIndex(field)) != null) { predicate = com.psddev.dari.db.CompoundPredicate.combine(PredicateParser.OR_OPERATOR, predicate, PredicateParser.Static.parse(((prefix + field) + \" ^=[c] ?\"), queryString)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4473/buggy-version/db.src.main.java.com.psddev.cms.tool.Search.java", "BodyUseAPI": ["com.psddev.dari.db.CompoundPredicate.combine(PredicateParser.OR_OPERATOR,com.psddev.dari.db.Predicate,PredicateParser.Static.parse(((prefix + field) + \" ^=[c] ?\"), queryString))", "PredicateParser.Static.parse(java.lang.String,java.lang.String)"], "Fixed commit": "5f8cbd84af1632ea4a0b8af1d8917aeda43f72d7", "Url": "https://api.github.com/repos/perfectsense/brightspot-cms", "Date": "2013-02-14T20:55:50Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.psddev.cms.tool.Search.getSelectedType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((selectedType.getIndex(field)) != null) { query.and(((((selectedType.getInternalName()) + \"/\") + field) + \" ^=[c] ?\"), queryString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4473/buggy-version/db.src.main.java.com.psddev.cms.tool.Search.java", "BodyUseAPI": ["com.psddev.dari.db.Query<?>.and(((((selectedType.getInternalName()) + \"/\") + field) + \" ^=[c] ?\"),java.lang.String)", "com.psddev.dari.db.ObjectType.getInternalName()"], "Fixed commit": "5f8cbd84af1632ea4a0b8af1d8917aeda43f72d7", "Url": "https://api.github.com/repos/perfectsense/brightspot-cms", "Date": "2013-02-14T20:55:50Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["wyc.stages.TypePropagation.Env.pop()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (wyc.stages.Type.isSubtype(Type.T_CHAR, rhs)) { result = Type.T_CHAR; }else if (wyc.stages.Type.isSubtype(Type.T_INT, rhs)) { result = Type.T_INT; }else { result = Type.T_REAL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/752/buggy-version/src.wyc.stages.TypePropagation.java", "BodyUseAPI": ["wyc.stages.Type.isSubtype(Type.T_INT,wyc.stages.Type)"], "Fixed commit": "1c1f55d0c06a94240df847775b0d09cbf477502e", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-12-12T07:22:40Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((v.bop) == (BOp.RANGE)) { checkIsSubtype(Type.T_INT, lhs, stmt); checkIsSubtype(Type.T_INT, rhs, stmt); result = wyc.stages.Type.List(Type.T_INT, false); }else if ((v.bop) == (BOp.REM)) { checkIsSubtype(Type.T_INT, lhs, stmt); checkIsSubtype(Type.T_INT, rhs, stmt); result = Type.T_INT; }else if (wyc.stages.Type.isImplicitCoerciveSubtype(lhs, rhs)) { checkIsSubtype(Type.T_REAL, lhs, stmt); if (wyc.stages.Type.isSubtype(Type.T_CHAR, lhs)) { result = Type.T_CHAR; }else if (wyc.stages.Type.isSubtype(Type.T_INT, lhs)) { result = Type.T_INT; }else { result = Type.T_REAL; } }else { checkIsSubtype(Type.T_REAL, lhs, stmt); checkIsSubtype(Type.T_REAL, rhs, stmt); if (wyc.stages.Type.isSubtype(Type.T_CHAR, rhs)) { result = Type.T_CHAR; }else if (wyc.stages.Type.isSubtype(Type.T_INT, rhs)) { result = Type.T_INT; }else { result = Type.T_REAL; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/752/buggy-version/src.wyc.stages.TypePropagation.java", "BodyUseAPI": [], "Fixed commit": "1c1f55d0c06a94240df847775b0d09cbf477502e", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-12-12T07:22:40Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCompletedPoints()) == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7588/buggy-version/src.main.java.com.metservice.pet.Project.java", "BodyUseAPI": [], "Fixed commit": "3f344381c32f027e7e7f3864f563574e578a07d7", "Url": "https://api.github.com/repos/kanban/kanban-app", "Date": "2011-10-19T23:19:00Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((page1.getParent()) == null) { attachViewToParent(page1, 0, page1.getLayoutParams()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/141/buggy-version/app.src.main.java.org.looa.ndkencode.StickyPagingView.java", "BodyUseAPI": ["org.looa.ndkencode.StickyPagingView.attachViewToParent(android.view.View,int,page1.getLayoutParams())", "android.view.View.getLayoutParams()"], "Fixed commit": "b1ff03f3cee0cfe4e59964ec242c375bd66d6e20", "Url": "https://api.github.com/repos/looa/StickPagingView", "Date": "2017-02-17T09:17:07Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(isChanged)) && ((page1.getParent()) != null)) { detachViewFromParent(page1); isChanged = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/141/buggy-version/app.src.main.java.org.looa.ndkencode.StickyPagingView.java", "BodyUseAPI": ["org.looa.ndkencode.StickyPagingView.detachViewFromParent(android.view.View)"], "Fixed commit": "b1ff03f3cee0cfe4e59964ec242c375bd66d6e20", "Url": "https://api.github.com/repos/looa/StickPagingView", "Date": "2017-02-17T09:17:07Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getAppConfig().getDatabaseNamesAndReplicaCounts()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (str != null) { setDatabaseNamesAndReplicaCountsAsString(str); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6191/buggy-version/src.main.java.com.marklogic.appdeployer.command.forests.ConfigureForestReplicasCommand.java", "BodyUseAPI": ["com.marklogic.appdeployer.command.forests.ConfigureForestReplicasCommand.setDatabaseNamesAndReplicaCountsAsString(java.lang.String)"], "Fixed commit": "1eb9592f6f73df25a80ef4d463dbc2c441f18b9a", "Url": "https://api.github.com/repos/grechaw/ml-app-deployer", "Date": "2016-02-08T14:43:19Z"},
{"Line": "=>1056", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((status.getReblog()) != null) url = status.getReblog().getUri(); else url = status.getUri();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4489/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.drawers.StatusListAdapter.java", "BodyUseAPI": ["status.getReblog().getUri()", "fr.gouv.etalab.mastodon.client.Entities.Status.getUri()", "fr.gouv.etalab.mastodon.client.Entities.Status.getReblog()"], "Fixed commit": "b8790c9143b0f8e309e36df5d5531c386feafe05", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2017-12-18T06:13:46Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["kawahara.controllers.SearchController.getPageIndex(javax.servlet.http.HttpSession,java.lang.String,java.util.List<kawahara.models.SearchModel>,javax.servlet.http.HttpServletRequest)", "kawahara.services.SearchService.getSearchResults(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (pageIndex > ((allSearchResults.size()) - 1)) { pageIndex = (allSearchResults.size()) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6236/buggy-version/mymvc.src.main.java.kawahara.controllers.SearchController.java", "BodyUseAPI": ["java.util.List<kawahara.models.SearchModel>.size()"], "Fixed commit": "6bd7747b36349ab048f8cb1d67b2053fd9753012", "Url": "https://api.github.com/repos/lkawahara/springmvc", "Date": "2015-09-09T07:02:41Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replace(char,char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((aux.compareTo(\".\")) == 0) { return java.math.BigDecimal.ZERO; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/43/buggy-version/src.main.java.com.linuxense.javadbf.DBFUtils.java", "BodyUseAPI": [], "Fixed commit": "ebac7a6ac468bf3b763094b9871cbc45f9228bf7", "Url": "https://api.github.com/repos/albfernandez/javadbf", "Date": "2017-10-03T22:07:34Z"},
{"Line": "=>1473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTextEditing(cmp)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2632/buggy-version/CodenameOne.src.com.codename1.ui.Display.java", "BodyUseAPI": [], "Fixed commit": "a6f44b1a6fce5b68209be09b24420c47688cde42", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2017-12-19T20:50:47Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sub.isEmpty()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4301/buggy-version/src.edu.ucla.cs.utils.SAT.java", "BodyUseAPI": [], "Fixed commit": "aab8c69ef2d26cb7d6c04b53d51eb7496dc28821", "Url": "https://api.github.com/repos/husttroy/Maple", "Date": "2017-03-28T08:38:00Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (switchWithinLimitHoldPeriod(date, info, rule)) { log.debug(\"Switch {} within limit hold period, cannot release limit now: {}\", controlId, info.getActionDate()); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6178/buggy-version/net.solarnetwork.node.control.loadshedder.src.net.solarnetwork.node.control.loadshedder.DefaultLoadShedderStrategy.java", "BodyUseAPI": ["net.solarnetwork.node.control.loadshedder.LoadShedControlInfo.getActionDate()", "org.slf4j.Logger.debug(java.lang.String,java.lang.String,info.getActionDate())"], "Fixed commit": "97c3b9685734ad1c061321e10aa164eae4822ca8", "Url": "https://api.github.com/repos/SolarNetwork/solarnetwork-node", "Date": "2015-06-29T04:48:57Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (key.equals(\"w_date\")) { java.lang.String date = org.agmip.common.Functions.formatAgmipDateString(getValueOr(dailyData, key, \"\"), \"yyyy-MM-dd\"); if (date == null) { date = \"\"; } nextLine.add(date); }else { nextLine.add(getValueOr(dailyData, key, \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1355/buggy-version/src.main.java.org.agmip.translators.csv.CSVOutput.java", "BodyUseAPI": ["org.agmip.translators.csv.CSVOutput.getValueOr(java.util.HashMap<java.lang.String, java.lang.String>,java.lang.String,java.lang.String)", "org.agmip.translators.csv.CSVOutput.getValueOr(java.util.HashMap<java.lang.String, java.lang.String>,java.lang.String,java.lang.String)", "org.agmip.common.Functions.formatAgmipDateString(getValueOr(dailyData, key, \"\"),java.lang.String)", "java.util.ArrayList<java.lang.String>.add(getValueOr(dailyData, key, \"\"))"], "Fixed commit": "1d8ab4c8a76a72e58d26846bd32e277e72e80e6f", "Url": "https://api.github.com/repos/MengZhang/translator-generic-csv", "Date": "2014-11-13T17:38:20Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((((nx1 < 0) && (nx2 < 0)) || ((ny1 < 0) && (ny2 < 0))) || ((nx1 > (w)) && (nx2 > (w)))) || (ny1 > (h))) || (ny2 > (h))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3876/buggy-version/src.taylor.Calculator.java", "BodyUseAPI": [], "Fixed commit": "f1b5d697ab2369d0549584b4e88a10cc8a365a96", "Url": "https://api.github.com/repos/anubiann00b/TaylorVisualization", "Date": "2014-06-15T21:37:59Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isGoning) { isGoning = false; selectedContactsView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/9031/buggy-version/app.src.main.java.ir.rasen.charsoo.view.fragment.invite.FragmentInviteSMS.java", "BodyUseAPI": [], "Fixed commit": "06b8a7a5a69f493c69ee5b44f1b9316b6f9d25e7", "Url": "https://api.github.com/repos/rasenir/charsoo", "Date": "2015-07-16T10:33:35Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getAction()) == (android.view.MotionEvent.ACTION_CANCEL)) { changeBackgroundColor(getResources().getColor(android.R.color.transparent)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/9031/buggy-version/app.src.main.java.ir.rasen.charsoo.view.widgets.material_library.views.CheckBox.java", "BodyUseAPI": [], "Fixed commit": "06b8a7a5a69f493c69ee5b44f1b9316b6f9d25e7", "Url": "https://api.github.com/repos/rasenir/charsoo", "Date": "2015-07-16T10:33:35Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hibernate.Criteria.uniqueResult()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (user == null) { user = this.findByOpenId(username); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4212/buggy-version/src.main.java.net.snnmo.dao.UserDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "df097544106590f7ca306d1ad73c5a07841ca4a3", "Url": "https://api.github.com/repos/chunhui2001/damiaa-api", "Date": "2016-08-01T16:28:08Z"},
{"Line": "=>1094", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (finishIfNeeded()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2285/buggy-version/library.src.main.java.com.heinrichreimersoftware.materialintro.app.IntroActivity.java", "BodyUseAPI": [], "Fixed commit": "2facd238e3d663da430427a967c50c9ac7918589", "Url": "https://api.github.com/repos/heinrichreimer/material-intro", "Date": "2016-06-23T23:26:39Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.map.getLocalMapStats()) != null) && ((this.map.getLocalMapStats().getNearCacheStats()) != null)) { return this.map.getLocalMapStats().getNearCacheStats().getMisses(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7773/buggy-version/support.cas-server-support-hazelcast-monitor.src.main.java.org.apereo.cas.monitor.HazelcastMonitor.java", "BodyUseAPI": ["this.map.getLocalMapStats().getNearCacheStats()", "com.hazelcast.core.IMap.getLocalMapStats()", "this.map.getLocalMapStats().getNearCacheStats().getMisses()"], "Fixed commit": "98908d75321eaa3a028fe2810c9650fa8a3df3b1", "Url": "https://api.github.com/repos/William-Hill-Online/cas", "Date": "2017-01-10T11:00:01Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_action.equals(\"managemanycontacts\")) && ((_id) != null)) url = (((base + '/') + (_action)) + '/') + (_id); else if ((_configuration) == 1) url = base; else if ((_configuration) == 2) url = (base + '/') + (_id); else if ((_configuration) == 3) url = (((base + '/') + (_id)) + '/') + (_action); else if ((_configuration) == 4) url = (((((base + '/') + (_id)) + '/') + (_action)) + '/') + (_actionId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3695/buggy-version/src.main.java.com.mailjet.client.MailjetRequest.java", "BodyUseAPI": [], "Fixed commit": "089c7bbe23556493ece4310fdf65521c2f7c7427", "Url": "https://api.github.com/repos/mailjet/mailjet-apiv3-java", "Date": "2016-03-15T14:42:15Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item.Entry.Sense) == null) { item.Entry.Sense = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7762/buggy-version/app.src.main.java.com.zhenghaiqiang.longman.fragment.SingleItemFragment.java", "BodyUseAPI": [], "Fixed commit": "5a459699c8a83d1fcda589f2ada82be2a3474b21", "Url": "https://api.github.com/repos/zhenghaiqiang/LongMan", "Date": "2017-01-03T15:40:04Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(prop.getName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((value != null) || (!ignoreNullValues)) { java.lang.Object propValue = prop.get(destBean); if ((propValue != null) && (propValue instanceof org.rapidoid.beany.SerializableBean)) { org.rapidoid.beany.SerializableBean<java.lang.Object> ser = ((org.rapidoid.beany.SerializableBean<java.lang.Object>) (propValue)); ser.deserializeBean(value); }else { prop.set(destBean, value); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4805/buggy-version/rapidoid-beany.src.main.java.org.rapidoid.beany.Beany.java", "BodyUseAPI": ["org.rapidoid.beany.SerializableBean<java.lang.Object>.deserializeBean(java.lang.Object)", "org.rapidoid.beany.Prop.set(java.lang.Object,java.lang.Object)"], "Fixed commit": "ed4dffcaca5b018500b3b0abf88d4dba0ed8846d", "Url": "https://api.github.com/repos/rapidoid/rapidoid", "Date": "2015-01-19T23:21:59Z"},
{"Line": "=>734", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (javax.xml.XMLConstants.XMLNS_ATTRIBUTE.equals(ns)) { element.setAttribute(ns, nsMap.get(ns)); }else { element.setAttribute((((javax.xml.XMLConstants.XMLNS_ATTRIBUTE) + \":\") + ns), nsMap.get(ns)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1708/buggy-version/components.camel-cxf.src.main.java.org.apache.camel.component.cxf.DefaultCxfBinding.java", "BodyUseAPI": ["org.w3c.dom.Element.setAttribute(java.lang.String,java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "org.w3c.dom.Element.setAttribute(java.lang.String,java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "1c6b76ade9770ee67d454ec7187770f7d4b69e33", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-08-29T09:19:20Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (javax.xml.XMLConstants.XMLNS_ATTRIBUTE.equals(ns)) { element.setAttribute(ns, nsMap.get(ns)); }else { element.setAttribute((((javax.xml.XMLConstants.XMLNS_ATTRIBUTE) + \":\") + ns), nsMap.get(ns)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1708/buggy-version/components.camel-cxf.src.main.java.org.apache.camel.component.cxf.CxfPayload.java", "BodyUseAPI": ["org.w3c.dom.Element.setAttribute(java.lang.String,java.lang.String)", "org.w3c.dom.Element.setAttribute(java.lang.String,java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "1c6b76ade9770ee67d454ec7187770f7d4b69e33", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-08-29T09:19:20Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (APIDocument.isJunitTestModel) { APIDocument.request = com.alibaba.fastjson.JSONObject.toJSON(o); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/959/buggy-version/src.main.java.org.thiki.kanban.foundation.apiDocument.APIDocumentRequestBodyAdvice.java", "BodyUseAPI": [], "Fixed commit": "0d4baad9167dbc2d30dcb9018d9f7a8f6f6d73e9", "Url": "https://api.github.com/repos/thiki-org/thiki-kanban-backend", "Date": "2016-09-24T03:46:09Z"},
{"Line": "=>648", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newState != (gameState)) { previousState = gameState; gameState = newState; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6415/buggy-version/src.main.java.org.openRealmOfStars.game.Game.java", "BodyUseAPI": [], "Fixed commit": "982a7c02868dbb73777a0f9df68a0adf2ab15b84", "Url": "https://api.github.com/repos/tuomount/Open-Realms-of-Stars", "Date": "2017-07-16T19:44:41Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.iPATHopeng.CodecUtil.decodeUrl(cn.iPATHopeng.StreamUtil.getString(req.getInputStream()))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (cn.iPATHopeng.StringUtil.isNotEmpty(urlStr)) { java.lang.String[] params = urlStr.split(\"&\"); if (cn.iPATHopeng.ArrayUtil.isNotEmpty(params)) { for (java.lang.String param : params) { java.lang.String[] arr = param.split(\"=\"); if ((cn.iPATHopeng.ArrayUtil.isNotEmpty(arr)) && ((arr.length) == 2)) { paramsMap.put(arr[0], arr[1]); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/922/buggy-version/src.main.java.cn.iPATHopeng.DispatcherServlet.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "0797fac89a67e518d2f9c690d51faaf56ff99936", "Url": "https://api.github.com/repos/Venus-WXP/VJSmart", "Date": "2017-09-29T14:00:56Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((codehz.c4droidcodemanual.AppApplication.Get().bmobUser) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6136/buggy-version/app.src.main.java.codehz.c4droidcodemanual.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d4fbc0dc7ce3cc57a51d24e19d80a06d7d15f20f", "Url": "https://api.github.com/repos/codehz/C4Droid-Code-Manual", "Date": "2015-07-10T13:27:27Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getSerializableExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (item != null) { if (requestCode == (REQUEST_CODE_NEW)) { todoItems.add(item); }else if (requestCode == (REQUEST_CODE_EDIT)) { int position = data.getIntExtra(\"itemPosition\", 0); todoItems.set(position, item); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7502/buggy-version/todos.src.main.java.net.rajeesh.mobile.android.app.ttd.todos.MainActivity.java", "BodyUseAPI": ["java.util.ArrayList<net.rajeesh.mobile.android.app.ttd.todos.data.TodoItem>.set(int,net.rajeesh.mobile.android.app.ttd.todos.data.TodoItem)", "java.util.ArrayList<net.rajeesh.mobile.android.app.ttd.todos.data.TodoItem>.add(net.rajeesh.mobile.android.app.ttd.todos.data.TodoItem)"], "Fixed commit": "61c4e8911a44bf1e46df9fec0cad9653ffe2922a", "Url": "https://api.github.com/repos/rajeesht/Ttd", "Date": "2015-11-18T19:49:54Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!prepare) && ((botonPlay.getVisibility()) == (android.view.View.INVISIBLE))) { botonPlay.setVisibility(View.VISIBLE); botonStop.setVisibility(View.INVISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3348/buggy-version/src.main.java.com.cardiag.activity.StateActivity.java", "BodyUseAPI": ["android.widget.Button.setVisibility(View.VISIBLE)"], "Fixed commit": "311560c5e3bdae440aa66170c9d99040bc3ac47b", "Url": "https://api.github.com/repos/UTN-FRBA-Mobile/CarDiagnostics", "Date": "2017-11-09T23:59:55Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bankAccount != null) io.bitsquare.gui.util.BSFormatter.setFiatCurrencyCode(currentBankAccount.getCurrency().getCurrencyCode());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2846/buggy-version/src.main.java.io.bitsquare.user.User.java", "BodyUseAPI": [], "Fixed commit": "e8761467caae17fe828c2cf2e39f066c69c25600", "Url": "https://api.github.com/repos/bitsquare/bitsquare", "Date": "2014-08-26T20:03:15Z"},
{"Line": "=>615", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.adansoft.great21.ulitity.CardUtility.excludeJokerfromCardList(com.adansoft.great21.models.Card[],java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((excludedCardList.length) == 0) { return com.adansoft.great21.ulitity.CardUtility.JOKERINTERPRET_VALIDSEQUENCE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6009/buggy-version/marriagerummy-models.src.main.java.com.adansoft.great21.ulitity.CardUtility.java", "BodyUseAPI": [], "Fixed commit": "9e92d52d8c9552f467a5dc1cd3891156e8085b6a", "Url": "https://api.github.com/repos/AHariharan/Great21", "Date": "2015-04-13T23:48:27Z"},
{"Line": "=>621", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.adansoft.great21.ulitity.CardUtility.excludeJokerfromCardList(com.adansoft.great21.models.Card[],java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((excludedCardList.length) <= 1) { return com.adansoft.great21.ulitity.CardUtility.JOKERINTERPRET_VALIDSEQUENCE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6009/buggy-version/marriagerummy-models.src.main.java.com.adansoft.great21.ulitity.CardUtility.java", "BodyUseAPI": [], "Fixed commit": "9e92d52d8c9552f467a5dc1cd3891156e8085b6a", "Url": "https://api.github.com/repos/AHariharan/Great21", "Date": "2015-04-13T23:48:27Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nc.isAttached()) { ((to.etc.domui.state.IPolledForUpdate) (nc)).checkForChanges(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8272/buggy-version/to.etc.domui.src.to.etc.domui.state.DelayedActivitiesManager.java", "BodyUseAPI": [], "Fixed commit": "6aee7840f0b03252f4f59ea039f5fa790d1fe2c9", "Url": "https://api.github.com/repos/fjalvingh/domui", "Date": "2017-04-26T15:07:40Z"},
{"Line": "=>683", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((forwarderRegistration) == null) { org.opendaylight.yangtools.concepts.CompositeObjectRegistration.CompositeObjectRegistrationBuilder<org.opendaylight.controller.sal.binding.impl.connect.dom.BindingIndependentConnector.DomToBindingRpcForwarder> builder = org.opendaylight.yangtools.concepts.CompositeObjectRegistration.builderFor(this); try { for (org.opendaylight.yangtools.yang.common.QName rpc : supportedRpcs) { builder.add(biRpcRegistry.addRpcImplementation(rpc, this)); } } catch (java.lang.Exception e) { LOG.error(\"Could not forward Rpcs of type {}\", rpcServiceType.get(), e); } this.forwarderRegistration = builder.toInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4601/buggy-version/opendaylight.md-sal.sal-binding-broker.src.main.java.org.opendaylight.controller.sal.binding.impl.connect.dom.BindingIndependentConnector.java", "BodyUseAPI": [], "Fixed commit": "f2c81487abafd0684909d6e1b7711863b352c581", "Url": "https://api.github.com/repos/mandeepdhami/controller", "Date": "2014-07-07T15:02:18Z"},
{"Line": "=>805", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((forwarderRegistration) == null) { try { this.forwarderRegistration = baRpcRegistry.addRpcImplementation(((java.lang.Class) (rpcServiceType.get())), proxy); } catch (java.lang.Exception e) { LOG.error(\"Unable to forward RPCs for {}\", rpcServiceType.get(), e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4601/buggy-version/opendaylight.md-sal.sal-binding-broker.src.main.java.org.opendaylight.controller.sal.binding.impl.connect.dom.BindingIndependentConnector.java", "BodyUseAPI": [], "Fixed commit": "f2c81487abafd0684909d6e1b7711863b352c581", "Url": "https://api.github.com/repos/mandeepdhami/controller", "Date": "2014-07-07T15:02:18Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pushResult.getImported().equals(\"0\")) { msg = getActivity().getResources().getString(R.string.dialog_info_push_bad_credentials); }else { msg = pushResult.getException().getMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2827/buggy-version/app.src.main.java.org.eyeseetea.malariacare.fragments.DashboardUnsentFragment.java", "BodyUseAPI": ["pushResult.getException().getMessage()", "org.eyeseetea.malariacare.network.PushResult.getException()"], "Fixed commit": "5b0aa27df9031e3cc2294dc6a8139e77f727fed3", "Url": "https://api.github.com/repos/EyeSeeTea/SurveillanceCambodiaApp", "Date": "2016-03-07T15:25:39Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (res.isDirectory()) { res = res.getRealResource((name + \".log\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6841/buggy-version/railo-java.railo-core.src.railo.commons.io.log.log4j.Log4jUtil.java", "BodyUseAPI": ["railo.commons.io.res.Resource.getRealResource(java.lang.String)"], "Fixed commit": "0869ecf6b03b7fa658db8a3ee20e548735ab24b8", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2013-12-09T12:58:19Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.molgenis.js.ScriptEvaluator.eval(java.lang.String,entry.getValue())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (result instanceof java.lang.Integer) results.put(entry.getKey(), java.lang.Integer.parseInt(org.mozilla.javascript.Context.toString(result))); else results.put(entry.getKey(), org.mozilla.javascript.Context.toString(result));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/389/buggy-version/molgenis-omx-biobankconnect.src.main.java.org.molgenis.omx.biobankconnect.algorithm.ApplyAlgorithms.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.lang.Object>.put(entry.getKey(),org.mozilla.javascript.Context.toString(result))", "java.util.Map<java.lang.Integer, java.lang.Object>.put(entry.getKey(),int)", "org.mozilla.javascript.Context.toString(java.lang.Object)", "java.lang.Integer.parseInt(org.mozilla.javascript.Context.toString(result))", "org.mozilla.javascript.Context.toString(java.lang.Object)"], "Fixed commit": "7c3837f828f850f0a6ecce890e35d8a043e87123", "Url": "https://api.github.com/repos/ChaoPang/molgenis", "Date": "2014-02-13T00:01:58Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((uk.ac.ox.ibme.cordova.plugins.ContextCompat.checkSelfPermission(actContext, Manifest.permission.ACCESS_FINE_LOCATION)) != (PackageManager.PERMISSION_GRANTED)) { uk.ac.ox.ibme.cordova.plugins.ActivityCompat.requestPermissions(actContext, new java.lang.String[]{ Manifest.permission.ACCESS_FINE_LOCATION }, uk.ac.ox.ibme.cordova.plugins.GoogleFit.MY_PERMISSIONS_REQUEST_ACCESS_FINE_LOCATION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3583/buggy-version/android.GoogleFit.java", "BodyUseAPI": ["uk.ac.ox.ibme.cordova.plugins.ActivityCompat.requestPermissions(android.app.Activity,java.lang.String[],int)"], "Fixed commit": "dc2df6889908d276ca56b777cbe348b3cbf5f695", "Url": "https://api.github.com/repos/2dvisio/cordova-plugin-googlefit", "Date": "2016-06-20T14:12:54Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.cern.atlas.apvs.client.domain.InterventionMap.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (i1 == null) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3405/buggy-version/apvs.src.main.java.ch.cern.atlas.apvs.client.ui.PtuSettingsView.java", "BodyUseAPI": [], "Fixed commit": "a7c104de35996b197f135c57f717dff7d842db94", "Url": "https://api.github.com/repos/CERN/apvs", "Date": "2013-02-10T10:24:52Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.cern.atlas.apvs.client.domain.InterventionMap.get(java.lang.String)", "ch.cern.atlas.apvs.client.domain.InterventionMap.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((i1 == null) && (i2 == null)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3405/buggy-version/apvs.src.main.java.ch.cern.atlas.apvs.client.ui.PtuSettingsView.java", "BodyUseAPI": [], "Fixed commit": "a7c104de35996b197f135c57f717dff7d842db94", "Url": "https://api.github.com/repos/CERN/apvs", "Date": "2013-02-10T10:24:52Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.cern.atlas.apvs.client.domain.InterventionMap.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (i2 == null) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3405/buggy-version/apvs.src.main.java.ch.cern.atlas.apvs.client.ui.PtuSettingsView.java", "BodyUseAPI": [], "Fixed commit": "a7c104de35996b197f135c57f717dff7d842db94", "Url": "https://api.github.com/repos/CERN/apvs", "Date": "2013-02-10T10:24:52Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((lname) == null) || (lname.equals(\"\"))) { return fname; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3405/buggy-version/apvs.src.main.java.ch.cern.atlas.apvs.client.domain.Intervention.java", "BodyUseAPI": [], "Fixed commit": "a7c104de35996b197f135c57f717dff7d842db94", "Url": "https://api.github.com/repos/CERN/apvs", "Date": "2013-02-10T10:24:52Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((fname) == null) || (fname.equals(\"\"))) && (((lname) == null) || (lname.equals(\"\")))) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3405/buggy-version/apvs.src.main.java.ch.cern.atlas.apvs.client.domain.Intervention.java", "BodyUseAPI": [], "Fixed commit": "a7c104de35996b197f135c57f717dff7d842db94", "Url": "https://api.github.com/repos/CERN/apvs", "Date": "2013-02-10T10:24:52Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((fname) == null) || (fname.equals(\"\"))) { return lname; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3405/buggy-version/apvs.src.main.java.ch.cern.atlas.apvs.client.domain.Intervention.java", "BodyUseAPI": [], "Fixed commit": "a7c104de35996b197f135c57f717dff7d842db94", "Url": "https://api.github.com/repos/CERN/apvs", "Date": "2013-02-10T10:24:52Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ex.getStatusCode()) >= 500) { log(ex.getMessage(), ex.getCause()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3354/buggy-version/src.main.java.cz.cvut.felk.rest.todo.TodoAppServlet.java", "BodyUseAPI": ["cz.cvut.felk.rest.todo.api.ErrorException.getMessage()", "cz.cvut.felk.rest.todo.api.ErrorException.getCause()", "cz.cvut.felk.rest.todo.TodoAppServlet.log(ex.getMessage(),ex.getCause())"], "Fixed commit": "0af07ce420ff1c57e2e39ab3582e554e2706175e", "Url": "https://api.github.com/repos/filip26/VIATodoListApiExample", "Date": "2013-01-06T17:56:10Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URI.getScheme()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"s3\".equals(scheme)) { ikey = I[water.Value.S3].uriToKey(uri); }else if (\"hdfs\".equals(scheme)) { ikey = I[water.Value.HDFS].uriToKey(uri); }else if (((\"s3\".equals(scheme)) || (\"s3n\".equals(scheme))) || (\"s3a\".equals(scheme))) { ikey = I[water.Value.HDFS].uriToKey(uri); }else if ((\"file\".equals(scheme)) || (scheme == null)) { ikey = I[water.Value.NFS].uriToKey(uri); }else { throw new water.exceptions.H2OIllegalArgumentException((((\"Unsupported schema '\" + scheme) + \"' for given uri \") + uri)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1191/buggy-version/h2o-core.src.main.java.water.persist.PersistManager.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "68d73bba6daf900b6178e24c66213c8a75beff0a", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2016-06-27T18:49:15Z"},
{"Line": "=>437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i - 1) >= 0) sun[(i - 1)] = -77;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6329/buggy-version/src.MyDailyTimeRecord.Methods.java", "BodyUseAPI": [], "Fixed commit": "a2d2599a3cad79554606b87ea263c3af158f8f5e", "Url": "https://api.github.com/repos/lloricode/Daily-Time-Record", "Date": "2014-12-01T04:20:27Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i - 1) >= 0) sun[(i - 1)] = -77;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6329/buggy-version/src.MyDailyTimeRecord.Methods.java", "BodyUseAPI": [], "Fixed commit": "a2d2599a3cad79554606b87ea263c3af158f8f5e", "Url": "https://api.github.com/repos/lloricode/Daily-Time-Record", "Date": "2014-12-01T04:20:27Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceGroup.getPreference(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (preference != null) { org.catrobat.catroid.utils.TextSizeUtil.enlargePreference(preference, R.layout.preference_enlarged); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/912/buggy-version/catroid.src.main.java.org.catrobat.catroid.utils.TextSizeUtil.java", "BodyUseAPI": ["org.catrobat.catroid.utils.TextSizeUtil.enlargePreference(android.preference.Preference,R.layout.preference_enlarged)"], "Fixed commit": "6234efa4392be4562c6561d68bf7d636273d3bd2", "Url": "https://api.github.com/repos/rschluesselbauer/Catroid", "Date": "2017-11-08T16:55:55Z"},
{"Line": "=>593", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mobicents.servlet.restcomm.interpreter.VoiceInterpreter.state()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (state != (finishDialing)) fsm.transition(message, finishDialing);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8741/buggy-version/restcomm.restcomm.interpreter.src.main.java.org.mobicents.servlet.restcomm.interpreter.VoiceInterpreter.java", "BodyUseAPI": [], "Fixed commit": "c3d242bc9ae3caf85e2cb61b570e9bb361b47709", "Url": "https://api.github.com/repos/RestComm/Restcomm-Connect", "Date": "2015-03-31T11:34:17Z"},
{"Line": "=>1763", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sender) != (call)) { call.tell(new org.mobicents.servlet.restcomm.telephony.Hangup(), self()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8741/buggy-version/restcomm.restcomm.interpreter.src.main.java.org.mobicents.servlet.restcomm.interpreter.VoiceInterpreter.java", "BodyUseAPI": [], "Fixed commit": "c3d242bc9ae3caf85e2cb61b570e9bb361b47709", "Url": "https://api.github.com/repos/RestComm/Restcomm-Connect", "Date": "2015-03-31T11:34:17Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f.equals(java.lang.Double.NaN)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3681/buggy-version/src.main.tw.edu.ncu.CJ102.CoreProcess.PerformanceMonitor.java", "BodyUseAPI": [], "Fixed commit": "8b10a6051369d8ab411833d9a6686fb502e3e646", "Url": "https://api.github.com/repos/zmes50416/ConceptDrift", "Date": "2015-05-24T17:54:07Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c != (-1)) sb.append(cc);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8996/buggy-version/src.main.java.net.akariakaori.scripting.module.MoonModule.java", "BodyUseAPI": [], "Fixed commit": "4ec36b7fb1bbe85c01c1fc21842a471edfa88f33", "Url": "https://api.github.com/repos/AkariAkaori/MoonCrystal", "Date": "2017-03-06T04:42:38Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((soldier.nearestAlly) != null) { nearestAlly = soldier.nearestAlly.location; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3479/buggy-version/team009.toyBT.micro.HQEngageEnemies.java", "BodyUseAPI": [], "Fixed commit": "a552375f53f10f2e031ec9e243ae51bfc179de63", "Url": "https://api.github.com/repos/bovard/BC2014", "Date": "2014-02-01T03:03:03Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["robot.currentLoc.add(robot.currentLoc.directionTo(currentLocation))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (adjacent.isAdjacentTo(currentLocation)) { if ((robot.rc.senseObjectAtLocation(adjacent)) == null) { super.run(); } return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3479/buggy-version/team009.toyBT.behaviors.CaptureDefend.java", "BodyUseAPI": ["robot.rc.senseObjectAtLocation(battlecode.common.MapLocation)"], "Fixed commit": "a552375f53f10f2e031ec9e243ae51bfc179de63", "Url": "https://api.github.com/repos/bovard/BC2014", "Date": "2014-02-01T03:03:03Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(existingBindings.isEmpty())) { throw new org.yamcs.ConfigurationException((((\"Overlapping definitions found while loading libraries for language \" + language) + \": \") + existingBindings)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6796/buggy-version/yamcs-core.src.main.java.org.yamcs.algorithms.AlgorithmManager.java", "BodyUseAPI": [], "Fixed commit": "b42e52c2b755ff57eb79440c37f75ab9cfe9a69d", "Url": "https://api.github.com/repos/yamcs/yamcs", "Date": "2015-07-27T12:11:13Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lineId.equalsIgnoreCase(\"mfl\")) { modifiedLineId = \"bsl\"; }else if (lineId.equalsIgnoreCase(\"bsl\")) { modifiedLineId = \"mfl\"; }else modifiedLineId = lineId;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5573/buggy-version/app.src.main.java.org.septa.android.app.support.MapUtils.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "f0b065a1edeb2e5fad162f30c7664dcf791d531f", "Url": "https://api.github.com/repos/septadev/SEPTA-Android", "Date": "2017-09-28T12:58:53Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null == (proto.getPackage())) { java.lang.String packageName = uk.co.jemos.protomak.engine.utils.ProtomakEngineHelper.convertTargetNsToProtoPackageName(type.getTargetNamespace()); uk.co.jemos.protomak.engine.impl.XsomXsdToProtoDomainConversionServiceImpl.LOG.info((\"Proto package will be: \" + packageName)); proto.setPackage(packageName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5562/buggy-version/protomak-engine.src.main.java.uk.co.jemos.protomak.engine.impl.XsomXsdToProtoDomainConversionServiceImpl.java", "BodyUseAPI": ["uk.co.jemos.xsds.protomak.proto.ProtoType.setPackage(java.lang.String)"], "Fixed commit": "c286f98e5297c614d8ce5713d61918fb91270832", "Url": "https://api.github.com/repos/skoya/protomak", "Date": "2011-06-01T20:58:28Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jarUrls.length) > 0) { return new java.net.URLClassLoader(jarUrls, parent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/567/buggy-version/keyboard-light-composer-controller.src.main.java.org.enoy.klc.control.PluginClassLoader.java", "BodyUseAPI": [], "Fixed commit": "3e6b4fc148f489a3aa920304aecaaa3ec053e7f3", "Url": "https://api.github.com/repos/enoy19/keyboard-light-composer", "Date": "2017-05-06T19:00:55Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.dre2n.dungeonsxl.player.DPlayer.get(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((dPlayer.getWolf()) != null) { dPlayer.getWolf().teleport(dPlayer.getCheckpoint()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4524/buggy-version/src.io.github.dre2n.dungeonsxl.player.DPlayer.java", "BodyUseAPI": ["io.github.dre2n.dungeonsxl.player.DPlayer.getWolf()", "org.bukkit.entity.Wolf.teleport(org.bukkit.Location)", "io.github.dre2n.dungeonsxl.player.DPlayer.getCheckpoint()"], "Fixed commit": "4c7b97356a553ffc68044e0d7305cfa786b6c901", "Url": "https://api.github.com/repos/DRE2N/DungeonsXL", "Date": "2015-12-28T00:37:46Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getCollate()) != null) writer.writeAttribute(0, false, \"collate\", p.getCollate().getName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/901/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.tool.ODatabaseExport.java", "BodyUseAPI": ["com.orientechnologies.orient.core.serialization.serializer.OJSONWriter.writeAttribute(int,boolean,java.lang.String,p.getCollate().getName())", "p.getCollate().getName()", "com.orientechnologies.orient.core.metadata.schema.OProperty.getCollate()"], "Fixed commit": "5f1de44526da0cef6d906464cf91640f3cc5dffc", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-04-25T15:55:59Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.hypers.www.bluetoothdemo.HomeActivity.sIsFirstEnter) { com.hypers.www.bluetoothdemo.HomeActivity.sExplosionView.setMode(ExplosionView.MODE.ANNULUS); com.hypers.www.bluetoothdemo.HomeActivity.sExplosionView.explode(mIvAvatar); com.hypers.www.bluetoothdemo.HomeActivity.sIsFirstEnter = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5499/buggy-version/app.src.main.java.com.hypers.www.bluetoothdemo.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "336d8de25788d5822ce339754e4f58663fd4b87b", "Url": "https://api.github.com/repos/iwantthink/bluetoothDemo", "Date": "2017-05-27T07:41:52Z"},
{"Line": "=>752", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((matcher.group(2)) != null) { builder.getter(matcher.group(2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4297/buggy-version/core.src.main.java.ma.glasnost.orika.property.PropertyResolver.java", "BodyUseAPI": ["Property.Builder.getter(java.lang.String)", "java.util.regex.Matcher.group(int)"], "Fixed commit": "5378e5d99749bb3f25dafcc2f56d1f2bc3d4b969", "Url": "https://api.github.com/repos/orika-mapper/orika", "Date": "2014-12-04T11:35:46Z"},
{"Line": "=>755", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((matcher.group(3)) != null) { builder.setter(matcher.group(3)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4297/buggy-version/core.src.main.java.ma.glasnost.orika.property.PropertyResolver.java", "BodyUseAPI": ["Property.Builder.setter(java.lang.String)", "java.util.regex.Matcher.group(int)"], "Fixed commit": "5378e5d99749bb3f25dafcc2f56d1f2bc3d4b969", "Url": "https://api.github.com/repos/orika-mapper/orika", "Date": "2014-12-04T11:35:46Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (switchPreference.isChecked()) { org.md2k.phonesensor.UI.AlertDialogFrequency(getActivity(), preference.getKey(), frequencies, new org.md2k.phonesensor.AlertDialogResponse() { @java.lang.Override public void onResponse(java.lang.String dataSourceType, java.lang.String response) { if (response != null) { phoneSensorDataSources.find(dataSourceType).setEnabled(true); phoneSensorDataSources.find(dataSourceType).setFrequency(response); updatePreferenceScreen(); } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4013/buggy-version/phonesensor.src.main.java.org.md2k.phonesensor.PrefsFragmentPhoneSensorSettings.java", "BodyUseAPI": [], "Fixed commit": "1fc4e44615c60576e884b481de8d6be3f7ef3008", "Url": "https://api.github.com/repos/MD2Korg/mCerebrum-PhoneSensor", "Date": "2016-05-26T08:28:03Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((versionInfo.assetVersion()) > 13) { in.align(4); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7888/buggy-version/disunity-core.src.main.java.info.ata4.unity.asset.ObjectInfoTable.java", "BodyUseAPI": [], "Fixed commit": "ccad1a6b340bf3e275fd832231fea4536d28e8c4", "Url": "https://api.github.com/repos/zhukunqian/disunity", "Date": "2015-04-21T13:02:27Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((versionInfo.assetVersion()) > 13) { out.align(4); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7888/buggy-version/disunity-core.src.main.java.info.ata4.unity.asset.ObjectInfoTable.java", "BodyUseAPI": [], "Fixed commit": "ccad1a6b340bf3e275fd832231fea4536d28e8c4", "Url": "https://api.github.com/repos/zhukunqian/disunity", "Date": "2015-04-21T13:02:27Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["x.getTableElementList().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((this.isPrettyFormat()) && (element.hasAfterComment())) { print(' '); printComment(element.getAfterCommentsDirect(), \"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1135/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.odps.visitor.OdpsOutputVisitor.java", "BodyUseAPI": ["com.alibaba.druid.sql.ast.statement.SQLTableElement.getAfterCommentsDirect()", "com.alibaba.druid.sql.dialect.odps.visitor.OdpsOutputVisitor.printComment(element.getAfterCommentsDirect(),java.lang.String)"], "Fixed commit": "0ace7d12bb6c3b9aacb9e8a3f340c369f6ac36f1", "Url": "https://api.github.com/repos/jacking124/druid", "Date": "2015-07-20T06:41:09Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lexer.isKeepComments()) && (lexer.hasComment())) { column.addAfterComment(lexer.readAndResetComments()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1135/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.odps.parser.OdpsCreateTableParser.java", "BodyUseAPI": ["com.alibaba.druid.sql.dialect.odps.parser.OdpsCreateTableParser.readAndResetComments()", "com.alibaba.druid.sql.ast.statement.SQLColumnDefinition.addAfterComment(lexer.readAndResetComments())"], "Fixed commit": "0ace7d12bb6c3b9aacb9e8a3f340c369f6ac36f1", "Url": "https://api.github.com/repos/jacking124/druid", "Date": "2015-07-20T06:41:09Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lexer.isKeepComments()) && (lexer.hasComment())) { column.addAfterComment(lexer.readAndResetComments()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1135/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.odps.parser.OdpsCreateTableParser.java", "BodyUseAPI": ["com.alibaba.druid.sql.dialect.odps.parser.OdpsCreateTableParser.readAndResetComments()", "com.alibaba.druid.sql.ast.statement.SQLColumnDefinition.addAfterComment(lexer.readAndResetComments())"], "Fixed commit": "0ace7d12bb6c3b9aacb9e8a3f340c369f6ac36f1", "Url": "https://api.github.com/repos/jacking124/druid", "Date": "2015-07-20T06:41:09Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (args.isEmpty()) { io.dockstore.client.Client.kill(\"Please provide a container.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2845/buggy-version/dockstore-client.src.main.java.io.dockstore.client.Client.java", "BodyUseAPI": [], "Fixed commit": "f5d221ce5d0dbd305ddb40320fee1052fdc891e5", "Url": "https://api.github.com/repos/ga4gh/dockstore", "Date": "2015-10-30T21:29:15Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (args.isEmpty()) { io.dockstore.client.Client.kill(\"Please provide a container.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2845/buggy-version/dockstore-client.src.main.java.io.dockstore.client.Client.java", "BodyUseAPI": [], "Fixed commit": "f5d221ce5d0dbd305ddb40320fee1052fdc891e5", "Url": "https://api.github.com/repos/ga4gh/dockstore", "Date": "2015-10-30T21:29:15Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.rkfg.jtagsfs.FSHandlerManager.getTagByName(filepath.getPathLast(),org.hibernate.Session)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (checkLackOfParent(filepath, tag)) { getattrSession.clear(); tag = ru.rkfg.jtagsfs.FSHandlerManager.getTagByName(filepath.getPathLast(), getattrSession); if (checkLackOfParent(filepath, tag)) { throw new ru.rkfg.jtagsfs.FSHandlerManager.FSHandlerException(\"notfound\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6938/buggy-version/src.main.java.ru.rkfg.jtagsfs.TagsHandler.java", "BodyUseAPI": ["ru.rkfg.jtagsfs.Filepath.getPathLast()", "ru.rkfg.jtagsfs.TagsHandler.checkLackOfParent(ru.rkfg.jtagsfs.Filepath,ru.rkfg.jtagsfs.domain.Tag)", "ru.rkfg.jtagsfs.FSHandlerManager.getTagByName(filepath.getPathLast(),org.hibernate.Session)"], "Fixed commit": "694043bf567637940dd37ebd5ea859a2603f5421", "Url": "https://api.github.com/repos/rkfg/jtagsfs", "Date": "2015-04-19T18:31:19Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.typeOfMutant) == (-1)) { throw new java.lang.IllegalStateException(\"There are no mutants in this population\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4721/buggy-version/jevodyn.src.main.java.com.evolutionandgames.jevodyn.dimorphic.DimorphicPopulation.java", "BodyUseAPI": [], "Fixed commit": "c757a7c40ec9bea1757b86898e3f27b988c0712e", "Url": "https://api.github.com/repos/juliangarcia/jevodyn", "Date": "2013-09-06T13:49:26Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((memory) != null) { memoryRemove = memory.remove(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6708/buggy-version/rxcache.src.main.java.com.zchu.rxcache.CacheCore.java", "BodyUseAPI": [], "Fixed commit": "64f060ca6d1ce93aedf9cded3c0d3c916a8d2c48", "Url": "https://api.github.com/repos/z-chu/RxCache", "Date": "2017-12-09T11:54:31Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((disk) != null) { diskRemove = disk.remove(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6708/buggy-version/rxcache.src.main.java.com.zchu.rxcache.CacheCore.java", "BodyUseAPI": [], "Fixed commit": "64f060ca6d1ce93aedf9cded3c0d3c916a8d2c48", "Url": "https://api.github.com/repos/z-chu/RxCache", "Date": "2017-12-09T11:54:31Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (executor.isShutdown()) { throw new java.util.concurrent.RejectedExecutionException(((\"Rejected execution of task [\" + (r.getClass())) + \"] since the executor is shutdown.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5211/buggy-version/core.src.main.java.org.jclouds.concurrent.DynamicThreadPoolExecutor.java", "BodyUseAPI": [], "Fixed commit": "ebdf267e3897c3885f8609d91ec240c39b69cf5e", "Url": "https://api.github.com/repos/nacx/jclouds", "Date": "2017-04-21T18:17:02Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (executor.isShutdown()) { throw new java.util.concurrent.RejectedExecutionException(((\"Rejected execution of task [\" + (r.getClass())) + \"] since the executor is shutdown.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5211/buggy-version/core.src.main.java.org.jclouds.concurrent.DynamicThreadPoolExecutor.java", "BodyUseAPI": [], "Fixed commit": "ebdf267e3897c3885f8609d91ec240c39b69cf5e", "Url": "https://api.github.com/repos/nacx/jclouds", "Date": "2017-04-21T18:17:02Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uiDesignerView) != null) { uiDesignerView.getProfilePanel().setInitialized(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5291/buggy-version/src.org.openremote.modeler.client.view.ApplicationView.java", "BodyUseAPI": [], "Fixed commit": "2a73e4a1bbc140fc6c72ac516b0b4bebf0c5842d", "Url": "https://api.github.com/repos/openremote/Designer", "Date": "2016-11-22T10:38:43Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.td.models.MeasureLog>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (measureLogListCount == 0) { showReportTxt.setText(\"\u5c1a\u7121\u6e2c\u91cf\u7d00\u9304\"); layout.addView(showReportTxt); }else if (measureLogListCount == 1) { java.lang.StringBuilder sBuilder = new java.lang.StringBuilder(); sBuilder.append(\"------\\u76ee\\u524d\\u53ea\\u6709\\u4e00\\u7b46\\u6e2c\\u91cf\\u7d00\\u9304------\\n\").append(\"\u65e5\u671f\uff1a\").append(helper.getMeasureLogDateString(pid, true)).append(\"\\n\").append(\"\u7532\u9577\uff1a\").append(measureLogList.get(0).getShellLength()).append(\" \u516c\u5206\"); showReportTxt.setText(sBuilder.toString()); layout.addView(showReportTxt); }else { java.util.List<com.jjoe64.graphview.GraphView.GraphViewData> graphViewDataList = helper.getShellLengthGraphViewDataList(pid); createMeasureLogGraphView(graphViewDataList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6363/buggy-version/src.com.td.turtlediary.ReportActivity.java", "BodyUseAPI": [], "Fixed commit": "be9fd0d8d8ef70ae7fafa7d9aa667c6c9a173046", "Url": "https://api.github.com/repos/housemeow/TurtleDiary", "Date": "2014-05-27T07:16:58Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.td.models.MeasureLog>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (measureLogListCount == 0) { showReportTxt.setText(\"\u5c1a\u7121\u6e2c\u91cf\u7d00\u9304\"); layout.addView(showReportTxt); }else if (measureLogListCount == 1) { java.lang.StringBuilder sBuilder = new java.lang.StringBuilder(); double shellLength = measureLogList.get(0).getShellLength(); double weight = measureLogList.get(0).getWeight(); double jacksonRatio; if (shellLength == 0) { jacksonRatio = 0; }else { jacksonRatio = weight / ((shellLength * shellLength) * shellLength); } sBuilder.append(\"------\\u76ee\\u524d\\u53ea\\u6709\\u4e00\\u7b46\\u6e2c\\u91cf\\u7d00\\u9304------\\n\").append(\"\u65e5\u671f\uff1a\").append(helper.getMeasureLogDateString(pid, true)).append(\"\\n\").append(\"\u7532\u9577\uff1a\").append(shellLength).append(\" \\u516c\\u5206\\n\").append(\"\u9ad4\u91cd\uff1a\").append(weight).append(\" \\u514b\\n\").append(\"\u5091\u514b\u68ee\u503c\uff1a\").append(jacksonRatio); showReportTxt.setText(sBuilder.toString()); layout.addView(showReportTxt); }else { java.util.List<com.jjoe64.graphview.GraphView.GraphViewData> graphViewDataList = helper.getJacksonGraphViewDataList(pid); createMeasureLogGraphView(graphViewDataList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6363/buggy-version/src.com.td.turtlediary.ReportActivity.java", "BodyUseAPI": [], "Fixed commit": "be9fd0d8d8ef70ae7fafa7d9aa667c6c9a173046", "Url": "https://api.github.com/repos/housemeow/TurtleDiary", "Date": "2014-05-27T07:16:58Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.td.models.MeasureLog>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (measureLogListCount == 0) { showReportTxt.setText(\"\u5c1a\u7121\u6e2c\u91cf\u7d00\u9304\"); layout.addView(showReportTxt); }else if (measureLogListCount == 1) { java.lang.StringBuilder sBuilder = new java.lang.StringBuilder(); sBuilder.append(\"------\\u76ee\\u524d\\u53ea\\u6709\\u4e00\\u7b46\\u6e2c\\u91cf\\u7d00\\u9304------\\n\").append(\"\u65e5\u671f\uff1a\").append(helper.getMeasureLogDateString(pid, true)).append(\"\\n\").append(\"\u9ad4\u91cd\uff1a\").append(measureLogList.get(0).getWeight()).append(\" \u514b\"); showReportTxt.setText(sBuilder.toString()); layout.addView(showReportTxt); }else { java.util.List<com.jjoe64.graphview.GraphView.GraphViewData> graphViewDataList = helper.getWeightGraphViewDataList(pid); createMeasureLogGraphView(graphViewDataList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6363/buggy-version/src.com.td.turtlediary.ReportActivity.java", "BodyUseAPI": [], "Fixed commit": "be9fd0d8d8ef70ae7fafa7d9aa667c6c9a173046", "Url": "https://api.github.com/repos/housemeow/TurtleDiary", "Date": "2014-05-27T07:16:58Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.exists()) { new com.alexecollins.vbox.core.task.Clean(work, box).call(); org.apache.commons.io.FileUtils.forceDelete(file); com.alexecollins.vbox.core.task.DeleteDefinition.LOGGER.info(((\"deleted definition '\" + (box.getName())) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5558/buggy-version/vbox-core.src.main.java.com.alexecollins.vbox.core.task.DeleteDefinition.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.forceDelete(java.io.File)"], "Fixed commit": "9ab2a1a886f052e91a722db3842d887ea1ebb3bf", "Url": "https://api.github.com/repos/alexec/maven-vbox-plugin", "Date": "2013-02-24T23:49:28Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dir.exists()) { new com.alexecollins.vbox.core.task.DeleteDefinition(work(), new com.alexecollins.vbox.core.VBox(context(), dir.toURI())).call(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5558/buggy-version/vbox-ant-tasks.src.main.java.com.alexecollins.vbox.ant.DeleteDefinitionTask.java", "BodyUseAPI": ["com.alexecollins.vbox.core.task.DeleteDefinition.call()", "com.alexecollins.vbox.ant.DeleteDefinitionTask.toURI()"], "Fixed commit": "9ab2a1a886f052e91a722db3842d887ea1ebb3bf", "Url": "https://api.github.com/repos/alexec/maven-vbox-plugin", "Date": "2013-02-24T23:49:28Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (HealthHungerTweaks.instance.configHandler.shouldDisableRegularRegen()) { event.setResult(Result.DENY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3634/buggy-version/src.main.java.net.cerulan.healthhungertweaks.handler.HealthHungerHandler.java", "BodyUseAPI": [], "Fixed commit": "3e82f9c67d85310241cbb5e6dc0c4777c9a302c3", "Url": "https://api.github.com/repos/CerulanLumina/HealthHungerTweaks", "Date": "2016-12-21T20:32:10Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["signalNoiseEstimator.getModule().getSNCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (SNCode == \"Wavelet Coefficient Estimator\") { signalNoiseWindowMult = signalNoiseEstimator.getParameterSet().getParameter(net.sf.mzmine.modules.peaklistmethods.peakpicking.deconvolution.ADAPpeakpicking.WaveletCoefficientsSNParameters.HALF_WAVELET_WINDOW).getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5861/buggy-version/src.main.java.net.sf.mzmine.modules.peaklistmethods.peakpicking.deconvolution.ADAPpeakpicking.ADAPDetector.java", "BodyUseAPI": [], "Fixed commit": "d3d6f0b6281d8537109fe427085f77b7bf4072e3", "Url": "https://api.github.com/repos/du-lab/mzmine2", "Date": "2017-03-31T17:36:21Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dVal < (m_Distrib2.get(attI).size())) return m_Distrib2.get(attI).get(dVal).getOrDefault(classVal, 0.0F).intValue();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4414/buggy-version/src.moa.reduction.bayes.PIDdiscretize.java", "BodyUseAPI": ["java.lang.Float.intValue()", "java.util.Map<java.lang.Integer, java.lang.Float>.getOrDefault(int,float)", "java.util.List<java.util.Map<java.lang.Integer, java.lang.Float>>.get(int)", "java.util.List<java.util.List<java.util.Map<java.lang.Integer, java.lang.Float>>>.get(int)"], "Fixed commit": "eac5cb5f997bbd319cb7f712ee42d8e7c3590ed1", "Url": "https://api.github.com/repos/sramirez/MOAReduction", "Date": "2017-04-25T09:09:21Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Class<? extends org.ow2.authzforce.core.pdp.api.PdpExtension>, java.util.Map<java.lang.String, org.ow2.authzforce.core.pdp.api.PdpExtension>>.get(java.lang.Class<T>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (typeSpecificExtsById == null) { throw new java.lang.IllegalArgumentException(((\"No PDP extension of type '\" + extensionType) + \"' found\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7631/buggy-version/src.main.java.org.ow2.authzforce.core.pdp.impl.PdpExtensionLoader.java", "BodyUseAPI": [], "Fixed commit": "c5602fe45e22e973cf07ae7a60e5209d816b3237", "Url": "https://api.github.com/repos/authzforce/core", "Date": "2016-02-01T02:39:40Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.jcbIds.getSelectedItem()) == null) && ((this.jcbNames.getSelectedItem()) == null)) { results[0] = \"\"; results[1] = \"\"; }else { results[0] = ((java.lang.String) (this.jcbIds.getSelectedItem())); results[1] = ((java.lang.String) (this.jcbNames.getSelectedItem())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1552/buggy-version/ARcowabungaproject-server.src.org.escoladeltreball.arcowabungaproject.server.gui.database.MyDialogAddProduct.java", "BodyUseAPI": ["javax.swing.JComboBox<java.lang.String>.getSelectedItem()", "javax.swing.JComboBox<java.lang.String>.getSelectedItem()"], "Fixed commit": "24e8e31def1fdc70a2cd858cc33c806f3d92e2e6", "Url": "https://api.github.com/repos/VictorPurMar/PizzaNowAR", "Date": "2014-05-23T14:40:33Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rootNode) == null) { rootNode = mapper.createObjectNode(); try { java.io.Reader reader = new java.io.FileReader(file); rootNode = mapper.readTree(reader); reader.close(); } catch (java.io.IOException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/829/buggy-version/common.src.main.java.pt.unl.fct.di.novalincs.yanux.scavenger.common.logging.JsonLogger.java", "BodyUseAPI": [], "Fixed commit": "d738155cf75db2d4e658e1cde4a2c555967af6e0", "Url": "https://api.github.com/repos/YanuX-Framework/YanuX-Scavenger", "Date": "2016-04-13T13:05:50Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((listView.getFooterViewsCount()) != 0) listView.removeFooterView(footerView);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8677/buggy-version/Clever_Buy.src.it.polito.ai.project.fragment.ValutaInserzioneFragment.java", "BodyUseAPI": ["android.widget.ListView.removeFooterView(android.view.View)"], "Fixed commit": "082e4e6c5fb13b6ac3672c0b0f8c08e09b7e2fe3", "Url": "https://api.github.com/repos/brunano21/ai-project-android", "Date": "2014-06-22T14:27:46Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((listView.getFooterViewsCount()) != 0) listView.removeFooterView(footerView);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8677/buggy-version/Clever_Buy.src.it.polito.ai.project.fragment.ValutaInserzioneFragment.java", "BodyUseAPI": ["android.widget.ListView.removeFooterView(android.view.View)"], "Fixed commit": "082e4e6c5fb13b6ac3672c0b0f8c08e09b7e2fe3", "Url": "https://api.github.com/repos/brunano21/ai-project-android", "Date": "2014-06-22T14:27:46Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getConfig().storage()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(forceDelete(storage.dbDir()))) { ru.yandex.qatools.embed.postgresql.PostgresProcess.LOGGER.warn(\"Could not delete temp db dir: {}\", storage.dbDir()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4160/buggy-version/src.main.java.ru.yandex.qatools.embed.postgresql.PostgresProcess.java", "BodyUseAPI": ["ru.yandex.qatools.embed.postgresql.Storage.dbDir()", "org.slf4j.Logger.warn(java.lang.String,storage.dbDir())"], "Fixed commit": "a3c37f7112acccd27f2c75daa7c0414fa495845f", "Url": "https://api.github.com/repos/smecsia/postgresql-embedded", "Date": "2017-07-20T11:49:53Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getConfig().storage()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(storage.isTmpDir())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4160/buggy-version/src.main.java.ru.yandex.qatools.embed.postgresql.PostgresProcess.java", "BodyUseAPI": [], "Fixed commit": "a3c37f7112acccd27f2c75daa7c0414fa495845f", "Url": "https://api.github.com/repos/smecsia/postgresql-embedded", "Date": "2017-07-20T11:49:53Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["config.storage().dbDir()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((dbDir.exists()) && ((dbDir.listFiles()) != null)) && ((dbDir.listFiles().length) > 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4160/buggy-version/src.main.java.ru.yandex.qatools.embed.postgresql.PostgresProcess.java", "BodyUseAPI": [], "Fixed commit": "a3c37f7112acccd27f2c75daa7c0414fa495845f", "Url": "https://api.github.com/repos/smecsia/postgresql-embedded", "Date": "2017-07-20T11:49:53Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (paths == null) { paths = new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/548/buggy-version/imageviewer.src.main.java.cn.imageviewer.adapter.ViewpagerAdapter.java", "BodyUseAPI": [], "Fixed commit": "59840b346877509b9622c3ef1869e33d485e1c22", "Url": "https://api.github.com/repos/Cloudist/ImageViewer", "Date": "2017-07-19T07:25:09Z"},
{"Line": "=>507", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["val.getAsString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(prioString.equals(\"L\"))) { t.setPriority(val.getAsInt()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/985/buggy-version/src.de.azapps.mirakel.model.task.Task.java", "BodyUseAPI": [], "Fixed commit": "cc618997fa9487c2363ccb44adfa0b3a0073ab68", "Url": "https://api.github.com/repos/azapps/mirakel-android", "Date": "2013-08-22T19:41:10Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.core.formatter.CodeFormatter.format(CodeFormatter.K_COMPILATION_UNIT,java.lang.String,int,int,int,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (textEdit == null) { return code.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4017/buggy-version/prototypes.org.eclipse.incquery.examples.cps.m2t.proto.distributed.generator.src.org.eclipse.incquery.examples.cps.m2t.proto.distributed.generator.utils.FormatterUtil.java", "BodyUseAPI": [], "Fixed commit": "82c4abd4c9b93ef9f476f5c019a3b97105e08386", "Url": "https://api.github.com/repos/IncQueryLabs/incquery-examples-cps", "Date": "2014-12-05T16:23:24Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mUIHandler.hasMessages(com.bluestrom.gao.explorersogoupics.activity.PhotoDetailActivity.UPDATE_TOOLBAR_COLOR)) { mUIHandler.removeMessages(com.bluestrom.gao.explorersogoupics.activity.PhotoDetailActivity.UPDATE_TOOLBAR_COLOR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3516/buggy-version/app.src.main.java.com.bluestrom.gao.explorersogoupics.activity.PhotoDetailActivity.java", "BodyUseAPI": ["android.os.Handler.removeMessages(int)"], "Fixed commit": "61ae095888a3d8eee5e43efe35ec4cdb56d464bb", "Url": "https://api.github.com/repos/StormBlue/ExplorerSogouPics", "Date": "2017-02-09T09:34:07Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((factor[i]) != 0) { result[i] = df.format(((100.0F * (dividend[i])) / (factor[i]))); }else { result[i] = df.format(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4169/buggy-version/api.src.main.java.org.openmrs.module.isanteplusreports.healthqual.builder.HealthQualReportBuilder.java", "BodyUseAPI": ["java.text.DecimalFormat.format(float)"], "Fixed commit": "cc08c191cfc0624d2d8f0ec15839a5157a26359c", "Url": "https://api.github.com/repos/IsantePlus/openmrs-module-isanteplusreports", "Date": "2017-09-05T16:27:45Z"},
{"Line": "=>592", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mGoogleApiClient) == null) { mGoogleApiClient = new com.google.android.gms.common.api.GoogleApiClient.Builder(getActivity()).addConnectionCallbacks(this).addOnConnectionFailedListener(this).addApi(LocationServices.API).build(); mGoogleApiClient.connect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3399/buggy-version/app.src.main.java.com.biglynx.fulfiller.ui.BroadCastFragment.java", "BodyUseAPI": [], "Fixed commit": "2286b2a097f06afbcddcf41d6196a84c748f13ca", "Url": "https://api.github.com/repos/JgdshSeerm/Fulfiller", "Date": "2017-04-11T20:27:58Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ofbiz.entity.GenericValue.getRelatedOne(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.ofbiz.base.util.UtilValidate.isNotEmpty(content.getString(\"dataResourceId\"))) { org.ofbiz.entity.GenericValue dataResource = content.getRelatedOne(\"DataResource\"); org.ofbiz.entity.GenericValue electronicText = dataResource.getRelatedOne(\"ElectronicText\"); if (org.ofbiz.base.util.UtilValidate.isNotEmpty(electronicText)) { SpecialInstructions = ((java.lang.String) (electronicText.get(\"textData\"))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8009/buggy-version/hot-deploy.zuczugetl.src.com.zuczug.zuczugetl.ZuczugEtlService.java", "BodyUseAPI": ["org.ofbiz.entity.GenericValue.getRelatedOne(java.lang.String)"], "Fixed commit": "f2da57e39d8672e166f6c19491ead115991582b1", "Url": "https://api.github.com/repos/zuczug/huangpu", "Date": "2016-11-10T03:06:11Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(player instanceof org.bukkit.entity.Player)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4977/buggy-version/thulinma.mixedmodeauth.MixedModeAuth.java", "BodyUseAPI": [], "Fixed commit": "b5f93674dfdf11c4e3c79366076fa138ca352461", "Url": "https://api.github.com/repos/Thulinma/MixedModeAuth", "Date": "2011-09-15T20:03:27Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((networkChangeReceiver) != null) { networkChangeReceiver.remove(); networkChangeReceiver = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3385/buggy-version/src.main.java.io.kristal.networkstatusplugin.NetworkStatusPlugin.java", "BodyUseAPI": [], "Fixed commit": "2a4d8fe920c27925d1819547d72549dd13fb9ef3", "Url": "https://api.github.com/repos/Cobaltians-Plugins/Plugins-NetworkStatus-Android", "Date": "2016-04-15T08:43:15Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((agent != null) && ((agent.indexOf(\"MSIE\")) != (-1))) { filename = java.net.URLEncoder.encode(filename, \"UTF8\"); response.setContentType(\"application/x-download\"); response.setHeader(\"Content-Disposition\", (\"attachment;filename=\" + filename)); }else if ((agent != null) && ((agent.indexOf(\"Mozilla\")) != (-1))) { response.setCharacterEncoding(\"UTF-8\"); filename = java.net.URLEncoder.encode(filename, \"UTF8\"); response.setContentType(\"application/force-download\"); response.addHeader(\"Content-Disposition\", ((\"attachment; filename=\\\"\" + filename) + \"\\\"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1159/buggy-version/modules.mm-conductor.src.main.java.de.wehner.mediamagpie.conductor.webapp.controller.media.DownloadController.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "c6b9d17aae78b0fce75e476bdecf0d477b6870f3", "Url": "https://api.github.com/repos/rwe17/MediaMagpie", "Date": "2014-02-24T22:28:29Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controller.getStackInSlot(slot).copy()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((drop.getItem()) instanceof net.minecraft.item.ItemBlock) { drop.setItemDamage(drop.getItem().getMetadata(drop.getItemDamage())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/61/buggy-version/src.main.java.me.dmillerw.storage.block.tile.TileItemBlock.java", "BodyUseAPI": ["drop.getItem().getMetadata(drop.getItemDamage())", "net.minecraft.item.ItemStack.getItem()", "net.minecraft.item.ItemStack.setItemDamage(drop.getItem().getMetadata(drop.getItemDamage()))", "net.minecraft.item.ItemStack.getItemDamage()"], "Fixed commit": "46ab1a8a458c350833e00ba15a8940b015197934", "Url": "https://api.github.com/repos/dmillerw/Impractical-Storage", "Date": "2017-04-08T01:51:06Z"},
{"Line": "=>871", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (net.sf.jabref.logic.util.OS.WINDOWS) { defaults.put(net.sf.jabref.JabRefPreferences.CONSOLE_COMMAND, \"C:\\\\Program Files\\\\ConEmu\\\\ConEmu64.exe /single /dir \\\"%DIR\\\"\"); }else { defaults.put(net.sf.jabref.JabRefPreferences.CONSOLE_COMMAND, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5298/buggy-version/src.main.java.net.sf.jabref.JabRefPreferences.java", "BodyUseAPI": [], "Fixed commit": "4dbe1f237c6f30334d89fee766fda1ad206bef17", "Url": "https://api.github.com/repos/obraliar/jabref", "Date": "2016-07-17T21:52:18Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((conn.getExtraOptions().get(key)) != null) { props.put(((org.pentaho.di.core.database.BaseDatabaseMeta.ATTRIBUTE_PREFIX_EXTRA_OPTION) + key), conn.getExtraOptions().get(key)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5666/buggy-version/pentaho-database-gwt.src.org.pentaho.database.util.DatabaseUtil.java", "BodyUseAPI": ["org.pentaho.database.model.IDatabaseConnection.getExtraOptions()", "java.util.Properties.put(((org.pentaho.di.core.database.BaseDatabaseMeta.ATTRIBUTE_PREFIX_EXTRA_OPTION) + key),conn.getExtraOptions().get(key))", "conn.getExtraOptions().get(java.lang.String)"], "Fixed commit": "4742f9d80000e4d33db52d0a92da8bb7136c8f79", "Url": "https://api.github.com/repos/krivera-pentaho/pentaho-commons-database", "Date": "2013-03-11T04:21:44Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((conn.getConnectionPoolingProperties().get(key)) != null) { props.put(((org.pentaho.di.core.database.BaseDatabaseMeta.ATTRIBUTE_POOLING_PARAMETER_PREFIX) + key), conn.getConnectionPoolingProperties().get(key)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5666/buggy-version/pentaho-database-gwt.src.org.pentaho.database.util.DatabaseUtil.java", "BodyUseAPI": ["org.pentaho.database.model.IDatabaseConnection.getConnectionPoolingProperties()", "conn.getConnectionPoolingProperties().get(java.lang.String)", "java.util.Properties.put(((org.pentaho.di.core.database.BaseDatabaseMeta.ATTRIBUTE_POOLING_PARAMETER_PREFIX) + key),conn.getConnectionPoolingProperties().get(key))"], "Fixed commit": "4742f9d80000e4d33db52d0a92da8bb7136c8f79", "Url": "https://api.github.com/repos/krivera-pentaho/pentaho-commons-database", "Date": "2013-03-11T04:21:44Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((conn.getDatabasePort()) != null) { meta.setDBPort(conn.getDatabasePort()); }else { meta.setDBPort((\"\" + (meta.getDefaultDatabasePort()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5666/buggy-version/pentaho-database-gwt.src.org.pentaho.database.util.DatabaseUtil.java", "BodyUseAPI": ["org.pentaho.di.core.database.DatabaseMeta.setDBPort(conn.getDatabasePort())", "org.pentaho.database.model.IDatabaseConnection.getDatabasePort()"], "Fixed commit": "4742f9d80000e4d33db52d0a92da8bb7136c8f79", "Url": "https://api.github.com/repos/krivera-pentaho/pentaho-commons-database", "Date": "2013-03-11T04:21:44Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((esEnemigoNPC) != 1) { if ((paqueteEnemigo.getTrucosActivados().indexOf(0)) != (-1)) enemigo.setModoDios(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1564/buggy-version/src.main.java.estados.EstadoBatalla.java", "BodyUseAPI": [], "Fixed commit": "e2f42580e5748a4d02702f1f8b609a5a01f73f35", "Url": "https://api.github.com/repos/JavaATR/jrpg-2017b-cliente", "Date": "2017-11-23T17:57:58Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(partition.staticRow().isEmpty())) { for (org.apache.cassandra.db.index.PerColumnSecondaryIndex index : perColumnIndexes) index.indexRow(key, partition.staticRow(), opGroup, nowInSec); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1438/buggy-version/src.java.org.apache.cassandra.db.index.SecondaryIndexManager.java", "BodyUseAPI": ["org.apache.cassandra.db.index.PerColumnSecondaryIndex.indexRow(org.apache.cassandra.db.index.DecoratedKey,partition.staticRow(),OpOrder.Group,int)", "org.apache.cassandra.db.index.UnfilteredRowIterator.staticRow()"], "Fixed commit": "0db0e69d5bd38dc522995ebb30e886a1a9224d64", "Url": "https://api.github.com/repos/pcmanus/cassandra", "Date": "2015-06-16T13:57:06Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (l2.equals(\"\")) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6869/buggy-version/src.tavonatti.stefano.eqengine.Parser.java", "BodyUseAPI": [], "Fixed commit": "f9fcaf748d7eeafd9e914c2bad8f8571becfcd8f", "Url": "https://api.github.com/repos/StefanoTavonatti/EQEngine", "Date": "2016-10-30T22:43:44Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((mTextArray) != null) { mTextWidthArray = new float[mTextArray.length]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6472/buggy-version/src.com.dolphin.seekbar.RangeSeekbar.java", "BodyUseAPI": [], "Fixed commit": "7d9d73c5bd050c8abaab33611bd30254202d573e", "Url": "https://api.github.com/repos/dolphinwang/RangeSeekbar", "Date": "2014-05-13T08:16:07Z"},
{"Line": "=>765", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x.doubleValue()) == 0.0) throw new java.lang.ArithmeticException(\"Matrix divide, divisor is 0.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5081/buggy-version/src.artiano.core.structure.Matrix.java", "BodyUseAPI": [], "Fixed commit": "2e075c352e95f59b7e1a9b72e7559bdc988cd50d", "Url": "https://api.github.com/repos/Artiano/Artiano", "Date": "2013-12-12T11:55:07Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.entityPlayer.getCurrentEquippedItem()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((equipped == null) || ((equipped.getItem()) != (IguanaItems.clayBucketFired))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6782/buggy-version/src.main.java.iguanaman.iguanatweakstconstruct.claybuckets.ClayBucketHandler.java", "BodyUseAPI": [], "Fixed commit": "a33db58dc8f6c4640ff48f14d3a8ee19a5bf2180", "Url": "https://api.github.com/repos/SlimeKnights/IguanaTweaksTConstruct", "Date": "2014-08-15T09:20:54Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((event.target) == null) || (!((event.target) instanceof net.minecraft.entity.passive.EntityCow))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6782/buggy-version/src.main.java.iguanaman.iguanatweakstconstruct.claybuckets.ClayBucketHandler.java", "BodyUseAPI": [], "Fixed commit": "a33db58dc8f6c4640ff48f14d3a8ee19a5bf2180", "Url": "https://api.github.com/repos/SlimeKnights/IguanaTweaksTConstruct", "Date": "2014-08-15T09:20:54Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (args[0].isEmpty()) { runCommand(cmd); }else { runCommand(cmd, args); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2793/buggy-version/projects.telnetserver.src.main.java.com.janosgyerik.telnetserver.shell.SimpleShell.java", "BodyUseAPI": ["com.janosgyerik.telnetserver.shell.SimpleShell.runCommand(java.lang.String,java.lang.String[])"], "Fixed commit": "b4443e4a0da065955a570a76664cbea08682a487", "Url": "https://api.github.com/repos/janosgyerik/java-examples", "Date": "2014-08-29T21:04:46Z"},
{"Line": "=>1162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getAction()) == (android.view.KeyEvent.ACTION_UP)) { onSubmitQuery(); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/9232/buggy-version/library.src.com.actionbarsherlock.widget.SearchView.java", "BodyUseAPI": [], "Fixed commit": "d6c9dcd901b55da32bdd5bf07797937d683a537e", "Url": "https://api.github.com/repos/googolmo/ActionBarSherlock", "Date": "2012-10-22T07:05:12Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) == 0) { int numKilled = kill(player.getWorld(), \"monsters\"); player.sendMessage(((\"All \" + numKilled) + \" monsters have been killed!\")); return true; }else if ((args[0].equalsIgnoreCase(\"monsters\")) || (args[0].equalsIgnoreCase(\"mobs\"))) { int numKilled = kill(player.getWorld(), \"monsters\"); player.sendMessage(((\"All \" + numKilled) + \" monsters have been killed!\")); return true; }else if (args[0].equalsIgnoreCase(\"animals\")) { int numKilled = kill(player.getWorld(), \"animals\"); player.sendMessage(((\"All \" + numKilled) + \" animals have been killed!\")); return true; }else if (args[0].equalsIgnoreCase(\"all\")) { int numKilled = kill(player.getWorld(), \"all\"); player.sendMessage(((\"All \" + numKilled) + \" creatures have been killed!\")); return true; }else { int numKilled = kill(player.getWorld(), args[0].toLowerCase()); player.sendMessage(((((\"All \" + numKilled) + \" \") + (args[0].toLowerCase())) + \"(s) have been killed!\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2171/buggy-version/src.com.bradsproject.com.bradsproject.BradleyJewell.bMobs.bMobs.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "com.bradsproject.BradleyJewell.bMobs.bMobs.kill(player.getWorld(),java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.toLowerCase()", "com.bradsproject.BradleyJewell.bMobs.Player.sendMessage(java.lang.String)", "java.lang.String.toLowerCase()", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "ab43f0dc2cf0d5e399bc15a0c28e5a2f5de35d1c", "Url": "https://api.github.com/repos/brad811/bMobs", "Date": "2011-05-20T10:47:57Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((info.getAppVersion()) == null) || ((info.getVersion()) == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7133/buggy-version/src.br.com.mvbos.iup.Iup.java", "BodyUseAPI": [], "Fixed commit": "59e0095ba0dc6343bc1366d1f2ea830297d08052", "Url": "https://api.github.com/repos/marcusbecker/MoonMer", "Date": "2017-11-15T14:29:57Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCurrentPhase()) != null) { android.content.Intent intent = new android.content.Intent(this, com.example.tmp.trackmyprint.nfcActivity.class); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/538/buggy-version/app.src.main.java.com.example.tmp.trackmyprint.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "92ce191e7d9a545a7a629c51242ba4a7399e46a1", "Url": "https://api.github.com/repos/guillaime/TrackMyPrint", "Date": "2017-01-13T14:02:06Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(s.toString())) { mCurrentTargetItem.setRunning(\"0\"); }else { mCurrentTargetItem.setRunning(s.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/427/buggy-version/app.src.main.java.com.liteon.icampusguardian.fragment.SettingTargetFragment.java", "BodyUseAPI": ["com.liteon.icampusguardian.util.TargetItem.setRunning(s.toString())", "android.text.Editable.toString()"], "Fixed commit": "4f824a04fa48e2b0202dcb37ef82f8f5b5345781", "Url": "https://api.github.com/repos/tel3342311/ICG", "Date": "2017-10-20T09:19:03Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((android.text.TextUtils.isEmpty(s.toString())) || (!(android.text.TextUtils.isDigitsOnly(s.toString())))) { mCurrentTargetItem.setCarlos(\"0\"); }else { mCurrentTargetItem.setCarlos(s.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/427/buggy-version/app.src.main.java.com.liteon.icampusguardian.fragment.SettingTargetFragment.java", "BodyUseAPI": ["com.liteon.icampusguardian.util.TargetItem.setCarlos(s.toString())", "android.text.Editable.toString()"], "Fixed commit": "4f824a04fa48e2b0202dcb37ef82f8f5b5345781", "Url": "https://api.github.com/repos/tel3342311/ICG", "Date": "2017-10-20T09:19:03Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(s.toString())) { mCurrentTargetItem.setWalking(\"0\"); }else { mCurrentTargetItem.setWalking(s.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/427/buggy-version/app.src.main.java.com.liteon.icampusguardian.fragment.SettingTargetFragment.java", "BodyUseAPI": ["android.text.Editable.toString()", "com.liteon.icampusguardian.util.TargetItem.setWalking(s.toString())"], "Fixed commit": "4f824a04fa48e2b0202dcb37ef82f8f5b5345781", "Url": "https://api.github.com/repos/tel3342311/ICG", "Date": "2017-10-20T09:19:03Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(s.toString())) { mCurrentTargetItem.setStep(\"0\"); }else { mCurrentTargetItem.setStep(s.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/427/buggy-version/app.src.main.java.com.liteon.icampusguardian.fragment.SettingTargetFragment.java", "BodyUseAPI": ["android.text.Editable.toString()", "com.liteon.icampusguardian.util.TargetItem.setStep(s.toString())"], "Fixed commit": "4f824a04fa48e2b0202dcb37ef82f8f5b5345781", "Url": "https://api.github.com/repos/tel3342311/ICG", "Date": "2017-10-20T09:19:03Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(s.toString())) { mCurrentTargetItem.setCycling(\"0\"); }else { mCurrentTargetItem.setCycling(s.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/427/buggy-version/app.src.main.java.com.liteon.icampusguardian.fragment.SettingTargetFragment.java", "BodyUseAPI": ["com.liteon.icampusguardian.util.TargetItem.setCycling(s.toString())", "android.text.Editable.toString()"], "Fixed commit": "4f824a04fa48e2b0202dcb37ef82f8f5b5345781", "Url": "https://api.github.com/repos/tel3342311/ICG", "Date": "2017-10-20T09:19:03Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(s.toString())) { mCurrentTargetItem.setSleep(\"0\"); }else { mCurrentTargetItem.setSleep(s.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/427/buggy-version/app.src.main.java.com.liteon.icampusguardian.fragment.SettingTargetFragment.java", "BodyUseAPI": ["com.liteon.icampusguardian.util.TargetItem.setSleep(s.toString())", "android.text.Editable.toString()"], "Fixed commit": "4f824a04fa48e2b0202dcb37ef82f8f5b5345781", "Url": "https://api.github.com/repos/tel3342311/ICG", "Date": "2017-10-20T09:19:03Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ut.healthelink.service.newsArticleManager.getNewsArticleByTitle(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((article != null) && ((article.size()) > 0)) { mav.addObject(\"article\", article.get(0)); }else { mav.addObject(\"article\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/108/buggy-version/src.main.java.com.ut.healthelink.controller.newsArticleController.java", "BodyUseAPI": ["org.springframework.web.servlet.ModelAndView.addObject(java.lang.String,article.get(0))", "java.util.List<com.ut.healthelink.model.newsArticle>.get(int)"], "Fixed commit": "b64a4e238cdb26c1cef64ec414ebe343c3ae2645", "Url": "https://api.github.com/repos/bowlinktech/health-e-link", "Date": "2015-04-07T15:17:51Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (max > 1) { for (int i = 0; i < (Engine.Constants.SNAPSHOT_SIZE); i++) { y[i] /= max; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1344/buggy-version/src.Modules.Highpass.java", "BodyUseAPI": [], "Fixed commit": "ecc12dbb29968d4a44edbf3f07de14637637b048", "Url": "https://api.github.com/repos/Orpheon/Synthesizer", "Date": "2013-10-22T21:56:28Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (max > 1) { for (int i = 0; i < (Engine.Constants.SNAPSHOT_SIZE); i++) { y[i] /= max; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1344/buggy-version/src.Modules.Lowpass.java", "BodyUseAPI": [], "Fixed commit": "ecc12dbb29968d4a44edbf3f07de14637637b048", "Url": "https://api.github.com/repos/Orpheon/Synthesizer", "Date": "2013-10-22T21:56:28Z"},
{"Line": "=>638", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.broadinstitute.sting.gatk.walkers.genotyper.SNPGenotypeLikelihoodsCalculationModel.getSNPVCFromAllelesRod(org.broadinstitute.sting.gatk.refdata.RefMetaDataTracker,org.broadinstitute.sting.gatk.contexts.ReferenceContext,boolean,org.apache.log4j.Logger)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (vcInput.isMNP()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/703/buggy-version/public.java.src.org.broadinstitute.sting.gatk.walkers.genotyper.UnifiedGenotyperEngine.java", "BodyUseAPI": [], "Fixed commit": "cfe43e3971327ff26ef9087e31b4294d4a98d99c", "Url": "https://api.github.com/repos/broadgsa/gatk", "Date": "2011-07-12T17:43:46Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(record_type.equals(\"Item\"))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5318/buggy-version/ArchiveBatch.src.omeka.HierarchyCreator4da2.java", "BodyUseAPI": [], "Fixed commit": "eef3a43d501ef5bdcfb0f9c9e4fba6c1e19cacc7", "Url": "https://api.github.com/repos/nakamura196/da", "Date": "2017-07-27T00:12:48Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getNumberMethodArg(args, 0).intValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (chunkSize < 1) { throw new freemarker.core._TemplateModelException(\"The 1st argument to ?\", key, \" (...) must be at least 1.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1170/buggy-version/src.main.java.freemarker.core.BuiltInsForSequences.java", "BodyUseAPI": [], "Fixed commit": "0213afa5f5d154db1bde5c1d74d2d206eff14877", "Url": "https://api.github.com/repos/apache/freemarker", "Date": "2017-08-25T21:48:18Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(neededRationalMessages.contains(rationalMessages[i]))) { neededRationalMessages.add(rationalMessages[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/996/buggy-version/ask.src.main.java.com.vistrav.ask.AskActivity.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "bc6cb448f2401193c0566fbb7cf6a5bb1874bf00", "Url": "https://api.github.com/repos/00ec454/Ask", "Date": "2016-06-17T21:25:17Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player.getCurrentEquippedItem()) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7193/buggy-version/src.main.java.cyano.mineralogy.blocks.RockSlab.java", "BodyUseAPI": [], "Fixed commit": "564ffce724192f36dc5c2e957d2ef2246d8e4e82", "Url": "https://api.github.com/repos/cyanobacterium/Minecraft_Mineralogy", "Date": "2015-03-08T14:20:07Z"},
{"Line": "=>562", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (datetimeColumn != null) { pw.print(((\"ORDER BY \" + (datetimeColumn.getColumn_name())) + \" DESC\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7368/buggy-version/src.main.java.org.support.project.ormapping.tool.impl.DefaultTableSQLCreator.java", "BodyUseAPI": ["java.io.PrintWriter.print(((\"ORDER BY \" + (datetimeColumn.getColumn_name())) + \" DESC\"))", "org.support.project.ormapping.entity.ColumnDefinition.getColumn_name()"], "Fixed commit": "5aac6755b71c43e62d855727e8cb44119d83929d", "Url": "https://api.github.com/repos/support-project/common", "Date": "2016-04-14T20:34:10Z"},
{"Line": "=>482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (datetimeColumn != null) { pw.println(((\"ORDER BY \" + (datetimeColumn.getColumn_name())) + \" DESC\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7368/buggy-version/src.main.java.org.support.project.ormapping.tool.impl.DefaultTableSQLCreator.java", "BodyUseAPI": ["java.io.PrintWriter.println(((\"ORDER BY \" + (datetimeColumn.getColumn_name())) + \" DESC\"))", "org.support.project.ormapping.entity.ColumnDefinition.getColumn_name()"], "Fixed commit": "5aac6755b71c43e62d855727e8cb44119d83929d", "Url": "https://api.github.com/repos/support-project/common", "Date": "2016-04-14T20:34:10Z"},
{"Line": "=>579", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (datetimeColumn != null) { pw.println(((\"ORDER BY \" + (datetimeColumn.getColumn_name())) + \" DESC\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7368/buggy-version/src.main.java.org.support.project.ormapping.tool.impl.DefaultTableSQLCreator.java", "BodyUseAPI": ["java.io.PrintWriter.println(((\"ORDER BY \" + (datetimeColumn.getColumn_name())) + \" DESC\"))", "org.support.project.ormapping.entity.ColumnDefinition.getColumn_name()"], "Fixed commit": "5aac6755b71c43e62d855727e8cb44119d83929d", "Url": "https://api.github.com/repos/support-project/common", "Date": "2016-04-14T20:34:10Z"},
{"Line": "=>506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (datetimeColumn != null) { pw.println(((\"ORDER BY \" + (datetimeColumn.getColumn_name())) + \" DESC\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7368/buggy-version/src.main.java.org.support.project.ormapping.tool.impl.DefaultTableSQLCreator.java", "BodyUseAPI": ["java.io.PrintWriter.println(((\"ORDER BY \" + (datetimeColumn.getColumn_name())) + \" DESC\"))", "org.support.project.ormapping.entity.ColumnDefinition.getColumn_name()"], "Fixed commit": "5aac6755b71c43e62d855727e8cb44119d83929d", "Url": "https://api.github.com/repos/support-project/common", "Date": "2016-04-14T20:34:10Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cpsc599.util.Controls.isKeyTapped(input, Controls.DOWN)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3339/buggy-version/src.cpsc599.controller.PlayerController.java", "BodyUseAPI": [], "Fixed commit": "805ca38ed526fb3558a51419d9240c255cfe2887", "Url": "https://api.github.com/repos/Senney/CPSC599-RPG", "Date": "2014-04-02T02:12:30Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cpsc599.util.Controls.isKeyTapped(input, Controls.UP)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3339/buggy-version/src.cpsc599.controller.PlayerController.java", "BodyUseAPI": [], "Fixed commit": "805ca38ed526fb3558a51419d9240c255cfe2887", "Url": "https://api.github.com/repos/Senney/CPSC599-RPG", "Date": "2014-04-02T02:12:30Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((Nexus_Main.blocks[i][j]) == (Nexus_Main.GRASS)) { nexusG.drawImage(Nexus_Import.grass, (i * 10), (((Nexus_Main.MAPY) - j) * 10), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3795/buggy-version/src.nexus_main.Nexus_Graphics.java", "BodyUseAPI": ["java.awt.Graphics2D.drawImage(Nexus_Import.grass,int,(((Nexus_Main.MAPY) - j) * 10),<nulltype>)"], "Fixed commit": "cea53cbe1cea4171ad7f888a48c45697afee93e9", "Url": "https://api.github.com/repos/orionquick/Nexus", "Date": "2015-06-23T05:09:19Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.google.android.youtube.player.YouTubeIntents.canResolvePlayVideoIntent(getActivity())) { startActivity(com.google.android.youtube.player.YouTubeStandalonePlayer.createVideoIntent(getActivity(), DEVELOPER_KEY, video.id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4072/buggy-version/app.src.main.java.com.eden.youtubesample.VideoListFragment.java", "BodyUseAPI": [], "Fixed commit": "197790f48ab13fe74acd1182bb50cf9ca7f6fb98", "Url": "https://api.github.com/repos/Glurt/EdenYouTube", "Date": "2015-06-09T10:19:49Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.google.android.youtube.player.YouTubeIntents.canResolvePlayVideoIntentWithOptions(getActivity())) { startActivity(com.google.android.youtube.player.YouTubeStandalonePlayer.createVideoIntent(getActivity(), DEVELOPER_KEY, video.id, 0, true, true)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4072/buggy-version/app.src.main.java.com.eden.youtubesample.VideoListFragment.java", "BodyUseAPI": [], "Fixed commit": "197790f48ab13fe74acd1182bb50cf9ca7f6fb98", "Url": "https://api.github.com/repos/Glurt/EdenYouTube", "Date": "2015-06-09T10:19:49Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tmpDefence = (armyTwo.getUnit().getDefence()) - (armyOne.getUnit().getAttack())) > 28) { return 0.025 * 28; }else { return 0.025 * tmpDefence; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1298/buggy-version/src.main.java.com.mycompany.h3calculator.system.CalculatorEngine.java", "BodyUseAPI": [], "Fixed commit": "123d5abd6e60a8cf982c9f8d66eb662ffd84c3c0", "Url": "https://api.github.com/repos/LukaszPawelkiewicz/h3calculator", "Date": "2017-10-22T21:07:57Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tmpAttack = (armyOne.getUnit().getAttack()) - (armyTwo.getUnit().getDefence())) > 60) { return 0.05 * 60; }else { return 0.05 * tmpAttack; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1298/buggy-version/src.main.java.com.mycompany.h3calculator.system.CalculatorEngine.java", "BodyUseAPI": [], "Fixed commit": "123d5abd6e60a8cf982c9f8d66eb662ffd84c3c0", "Url": "https://api.github.com/repos/LukaszPawelkiewicz/h3calculator", "Date": "2017-10-22T21:07:57Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.egit.github.core.Issue.getMilestone()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (editedMilestone == null) { latest.setMilestone(new org.eclipse.egit.github.core.Milestone()); }else { latest.setMilestone(editedMilestone); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8424/buggy-version/src.model.Model.java", "BodyUseAPI": ["org.eclipse.egit.github.core.Issue.setMilestone(org.eclipse.egit.github.core.Milestone)"], "Fixed commit": "ebbee656086ac57f32c701d5095fbb74d25ffa9b", "Url": "https://api.github.com/repos/HubTurbo/HubTurbo", "Date": "2014-06-25T07:01:00Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.egit.github.core.Issue.getAssignee()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (editedAssignee == null) { latest.setAssignee(new org.eclipse.egit.github.core.User()); }else { latest.setAssignee(editedAssignee); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8424/buggy-version/src.model.Model.java", "BodyUseAPI": ["org.eclipse.egit.github.core.Issue.setAssignee(org.eclipse.egit.github.core.User)"], "Fixed commit": "ebbee656086ac57f32c701d5095fbb74d25ffa9b", "Url": "https://api.github.com/repos/HubTurbo/HubTurbo", "Date": "2014-06-25T07:01:00Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((getNumColumns()) * position) + index) < (getTotal())) { ll.addView(getCellView((((getNumColumns()) * position) + index))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3100/buggy-version/app.src.main.java.com.hobbes09.spaceviews.BaseGridAdapter.java", "BodyUseAPI": ["com.hobbes09.spaceviews.BaseGridAdapter.getCellView(int)", "android.widget.LinearLayout.addView(android.view.View)"], "Fixed commit": "fbd4b88cb92257e71152ef6c101dd02d4b35fea5", "Url": "https://api.github.com/repos/hobbes09/SpaceViews", "Date": "2016-05-25T15:00:31Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.thesarvo.guide.client.util.StringUtil.notNull(point.getAttribute(\"code\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.thesarvo.guide.client.util.StringUtil.isNotEmpty(code)) t += code;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8467/buggy-version/thesarvoguide2.src.com.thesarvo.guide.client.view.node.MapPanel.java", "BodyUseAPI": [], "Fixed commit": "0ee58f8a026ac556640a7e5521c64bb8e184093b", "Url": "https://api.github.com/repos/jonnermut/thesarvo", "Date": "2012-11-19T09:04:40Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.thesarvo.guide.client.util.StringUtil.notNull(point.getAttribute(\"description\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.thesarvo.guide.client.util.StringUtil.isNotEmpty(description)) { if (com.thesarvo.guide.client.util.StringUtil.isNotEmpty(t)) t += \" - \"; t += description; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8467/buggy-version/thesarvoguide2.src.com.thesarvo.guide.client.view.node.MapPanel.java", "BodyUseAPI": [], "Fixed commit": "0ee58f8a026ac556640a7e5521c64bb8e184093b", "Url": "https://api.github.com/repos/jonnermut/thesarvo", "Date": "2012-11-19T09:04:40Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (item.getAlbum().getImages().isEmpty()) { track.setAlbumArt(\"https://www.tunefind.com/i/new/album-art-empty.png\"); }else { track.setAlbumArt(item.getAlbum().getImages().get(0).getUrl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/376/buggy-version/app.src.main.java.nyc.c4q.ashiquechowdhury.auxx.util.SongListHelper.java", "BodyUseAPI": ["item.getAlbum().getImages()", "item.getAlbum().getImages().get(int)", "nyc.c4q.ashiquechowdhury.auxx.model.Item.getAlbum()", "nyc.c4q.ashiquechowdhury.auxx.model.PlaylistTrack.setAlbumArt(item.getAlbum().getImages().get(0).getUrl())", "item.getAlbum().getImages().get(0).getUrl()"], "Fixed commit": "0e58ce63aa0409fc9db25ce307da8c9c1418c526", "Url": "https://api.github.com/repos/achowdhury3762/Aux", "Date": "2017-03-10T03:50:35Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(item.getAlbum().getImages().isEmpty())) { com.bumptech.glide.Glide.with(itemView.getContext()).load(item.getAlbum().getImages().get(0).getUrl()).into(albumArt); }else { com.bumptech.glide.Glide.with(itemView.getContext()).load(\"https://www.tunefind.com/i/new/album-art-empty.png\").into(albumArt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/376/buggy-version/app.src.main.java.nyc.c4q.ashiquechowdhury.auxx.SearchViewHolder.java", "BodyUseAPI": ["com.bumptech.glide.Glide.with(itemView.getContext()).load(item.getAlbum().getImages().get(0).getUrl()).into(android.widget.ImageView)", "item.getAlbum().getImages().get(0).getUrl()", "com.bumptech.glide.Glide.with(itemView.getContext()).load(item.getAlbum().getImages().get(0).getUrl())", "nyc.c4q.ashiquechowdhury.auxx.model.Item.getAlbum()", "item.getAlbum().getImages()", "item.getAlbum().getImages().get(int)"], "Fixed commit": "0e58ce63aa0409fc9db25ce307da8c9c1418c526", "Url": "https://api.github.com/repos/achowdhury3762/Aux", "Date": "2017-03-10T03:50:35Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUris()) != null) { removeAllWatchContentUris(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2455/buggy-version/src.main.java.com.mridang.alarmer.ImprovedExtension.java", "BodyUseAPI": [], "Fixed commit": "c8f3662dd7c9f829cef9f6d0fe58aab76aabaaf5", "Url": "https://api.github.com/repos/mridang/dashclock-alarmer", "Date": "2015-03-29T09:07:39Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.happy_query.util.JDBCUtils.executeQuery(javax.sql.DataSource,java.lang.String,java.util.List<java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((data == null) || ((data.size()) == 0)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1411/buggy-version/src.main.java.com.happy_query.parser.dao.DataDefinitionDao.java", "BodyUseAPI": [], "Fixed commit": "37f1c695cf70916d43c7d98d9f8ba4648ca532f5", "Url": "https://api.github.com/repos/fantasycool/happy_query", "Date": "2016-07-06T06:40:33Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((operation) == (railo.transformer.bytecode.op.OPUnary.CONCAT)) return railo.transformer.bytecode.util.Types.STRING;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5140/buggy-version/railo-java.railo-core.src.railo.transformer.bytecode.op.OPUnary.java", "BodyUseAPI": [], "Fixed commit": "ea560d585587a8072ee3e825ef237b826739b731", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2014-04-08T07:43:59Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.minecolonies.entity.ai.citizen.builder.EntityAIStructureBuilder.getWorkOrder()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((workOrder.getRotation()) == 0) { net.minecraft.block.state.IBlockState blockState = world.getBlockState(pos); if ((blockState.getBlock()) instanceof com.minecolonies.blocks.AbstractBlockHut) { job.getStructure().rotate(blockState.getValue(AbstractBlockHut.FACING).ordinal()); } }else { job.getStructure().rotate(workOrder.getRotation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/9189/buggy-version/src.main.java.com.minecolonies.entity.ai.citizen.builder.EntityAIStructureBuilder.java", "BodyUseAPI": ["job.getStructure().rotate(workOrder.getRotation())", "com.minecolonies.colony.workorders.WorkOrderBuild.getRotation()"], "Fixed commit": "71265be49bb235849e3560a68d365200a303c37a", "Url": "https://api.github.com/repos/ldtteam/minecolonies", "Date": "2016-11-07T09:11:50Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPersonalChat()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/9072/buggy-version/src.main.java.com.github.ucchyocean.lc.channel.ChannelImpl.java", "BodyUseAPI": [], "Fixed commit": "a98007eccecc7cb57ce24cc8d872674f5452ce24", "Url": "https://api.github.com/repos/ucchyocean/LunaChat", "Date": "2014-04-16T13:31:52Z"},
{"Line": "=>561", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tokenizer.hasMore())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2168/buggy-version/http-client.src.main.java.com.proofpoint.http.client.MediaType.java", "BodyUseAPI": [], "Fixed commit": "761b689e6d131177e62de55cfc9e5663ee02df03", "Url": "https://api.github.com/repos/proofpoint/platform", "Date": "2012-04-02T17:59:44Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.roger.screenlocker.LockScreenService.5.imageProcessing(MrApplication.facePath)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (array1 == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7041/buggy-version/screenlocker.src.main.java.com.roger.screenlocker.LockScreenService.java", "BodyUseAPI": [], "Fixed commit": "49c9b16a1fdebe36d1357e0e9c864177e8c59436", "Url": "https://api.github.com/repos/Rogero0o/ScreenLocker", "Date": "2015-12-23T08:13:33Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((img) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7041/buggy-version/screenlocker.src.main.java.com.roger.screenlocker.LockScreenService.java", "BodyUseAPI": [], "Fixed commit": "49c9b16a1fdebe36d1357e0e9c864177e8c59436", "Url": "https://api.github.com/repos/Rogero0o/ScreenLocker", "Date": "2015-12-23T08:13:33Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.processes) == null) { this.processes = processes; }else { this.processes.clear(); this.processes.addAll(processes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4093/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Batch.java", "BodyUseAPI": [], "Fixed commit": "b5380021ecbf70040ad04d760d1950ae212e8353", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.batches) == null) { this.batches = batches; }else { this.batches.clear(); this.batches.addAll(batches); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4093/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Process.java", "BodyUseAPI": [], "Fixed commit": "b5380021ecbf70040ad04d760d1950ae212e8353", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["at.ac.tuwien.kr.alpha.common.NoGood.getLiteral(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((isPositive(literal)) && (mbtAssigned.contains(atomOf(literal)))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3541/buggy-version/src.main.java.at.ac.tuwien.kr.alpha.solver.NaiveSolver.java", "BodyUseAPI": [], "Fixed commit": "f9ab91da5eab1cb00a8c8d7a88b521cd20c6383a", "Url": "https://api.github.com/repos/alpha-asp/Alpha", "Date": "2017-05-29T16:34:05Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (messageOrBuilder.getClass().getSimpleName().equals(\"Builder\")) { messageOrBuilder.getClass().getMethod(((org.openbase.jul.extension.rst.processing.TimestampProcessor.SET) + (org.openbase.jul.extension.rst.processing.TimestampProcessor.TIMESTEMP_FIELD)), rst.timing.TimestampType.Timestamp.class).invoke(messageOrBuilder, org.openbase.jul.extension.rst.processing.TimestampProcessor.getCurrentTimestamp()); return messageOrBuilder; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1142/buggy-version/extension.rst.processing.src.main.java.org.openbase.jul.extension.rst.processing.TimestampProcessor.java", "BodyUseAPI": ["java.lang.Class<? extends com.google.protobuf.MessageOrBuilder>.getMethod(java.lang.String,java.lang.Class)", "M.getClass()", "java.lang.reflect.Method.invoke(M,rst.timing.TimestampType.Timestamp)"], "Fixed commit": "93436ce03623a1415b16f62dd00159fe1cd61c4b", "Url": "https://api.github.com/repos/openbase/jul", "Date": "2017-02-13T00:32:56Z"},
{"Line": "=>735", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((obj instanceof org.mixer2.jaxb.xhtml.Td) && (\"colspan\".equals(key))) { obj.cast(org.mixer2.jaxb.xhtml.Td.class).setColspan(((java.lang.Integer) (map.get(key)))); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7234/buggy-version/src.main.java.org.mixer2.xhtml.builder.TableBuilder.java", "BodyUseAPI": ["obj.cast(org.mixer2.jaxb.xhtml.Td.class).setColspan(java.lang.Object)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "T.cast(java.lang.Class)"], "Fixed commit": "b7934e4b7a6a1f73e53b3994d00be9694f544af3", "Url": "https://api.github.com/repos/nabedge/mixer2", "Date": "2013-10-23T13:53:53Z"},
{"Line": "=>731", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((obj instanceof org.mixer2.jaxb.xhtml.Td) && (\"rowspan\".equals(key))) { obj.cast(org.mixer2.jaxb.xhtml.Td.class).setRowspan(((java.lang.Integer) (map.get(key)))); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7234/buggy-version/src.main.java.org.mixer2.xhtml.builder.TableBuilder.java", "BodyUseAPI": ["obj.cast(org.mixer2.jaxb.xhtml.Td.class).setRowspan(java.lang.Object)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "T.cast(java.lang.Class)"], "Fixed commit": "b7934e4b7a6a1f73e53b3994d00be9694f544af3", "Url": "https://api.github.com/repos/nabedge/mixer2", "Date": "2013-10-23T13:53:53Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(pg.set3MonthSupply(new model.common.Size(size, getView().getSupplyUnit().toString())).getStatus())) { getView().enableOK(false); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3351/buggy-version/src.gui.productgroup.AddProductGroupController.java", "BodyUseAPI": [], "Fixed commit": "bc0cde173afeacec88c1693153fe79e909aa272e", "Url": "https://api.github.com/repos/CS340Group/hit", "Date": "2012-11-08T20:24:35Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.enerccio.sp.types.sequences.TupleObject.len()", "java.util.List<java.lang.String>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(isVararg)) && (argc > rargs)) throw me.enerccio.sp.utils.Utils.throwException(\"TypeError\", (((\"Incorrect amount of arguments, expected at most \" + rargs) + \", got \") + (args.len())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/665/buggy-version/src.me.enerccio.sp.types.callables.UserFunctionObject.java", "BodyUseAPI": ["me.enerccio.sp.utils.Utils.throwException(java.lang.String,(((\"Incorrect amount of arguments, expected at most \" + rargs) + \", got \") + (args.len())))"], "Fixed commit": "fcd877f66da10d9f112f1b9215f50d3b7a541c34", "Url": "https://api.github.com/repos/Enerccio/SimplePython", "Date": "2015-07-20T23:46:59Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(((controller.getGameInfo().getOwnPoints()) == 3) || ((controller.getGameInfo().getOpponentPoints()) == 3))) { controller.getConnection().deleteUnfinishedGame(controller.getGameInfo().getGameID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5092/buggy-version/src.main.java.com.lte.gui.Controller3.java", "BodyUseAPI": ["com.lte.controller.MainController.getGameInfo()", "controller.getGameInfo().getGameID()", "com.lte.controller.MainController.getConnection()", "controller.getConnection().deleteUnfinishedGame(controller.getGameInfo().getGameID())"], "Fixed commit": "d8ccfcc54b19fd4c37d22b803e221378647c041a", "Url": "https://api.github.com/repos/kauppfbi/LTE", "Date": "2016-11-10T14:39:05Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(((controller.getGameInfo().getOwnPoints()) == 3) || ((controller.getGameInfo().getOpponentPoints()) == 3))) { controller.getConnection().deleteUnfinishedGame(controller.getGameInfo().getGameID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5092/buggy-version/src.main.java.com.lte.gui.Controller1.java", "BodyUseAPI": ["controller.getConnection().deleteUnfinishedGame(controller.getGameInfo().getGameID())", "controller.getGameInfo().getGameID()", "com.lte.controller.MainController.getGameInfo()", "com.lte.controller.MainController.getConnection()"], "Fixed commit": "d8ccfcc54b19fd4c37d22b803e221378647c041a", "Url": "https://api.github.com/repos/kauppfbi/LTE", "Date": "2016-11-10T14:39:05Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((handler) != null) handler.onShutdown();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8440/buggy-version/src.org.sdu.net.NetworkClient.java", "BodyUseAPI": [], "Fixed commit": "4ded224efa2bc90de6b26c353661779557d9365f", "Url": "https://api.github.com/repos/skies457/HyperCube", "Date": "2013-01-06T03:47:09Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (list.containsKey(statement.substring(((statement.indexOf(\"what's on\")) + 10)))) response += (\"Your list, \" + (statement.substring(((statement.indexOf(\"what's on\")) + 10)))) + \", has:\\n\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7421/buggy-version/src.Magpie.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "b10f58c17e6f4fb90eb6da17e40a164e6e5c42f8", "Url": "https://api.github.com/repos/bencarlisle15/GabGuy", "Date": "2017-05-15T21:49:59Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (comService.isOffLine()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/798/buggy-version/integrar-t-android.src.main.java.org.utn.proyecto.helpful.integrart.integrar_t_android.activities.cantaconcali.CantaUpdateService.java", "BodyUseAPI": [], "Fixed commit": "627ea6a0323d9f4c538249e65491b9215cad8766", "Url": "https://api.github.com/repos/Proyecto-UTN-2012/Proyecto-UTN-2012", "Date": "2013-03-09T21:22:19Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (canvas == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/798/buggy-version/integrar-t-android.src.main.java.org.utn.proyecto.helpful.integrart.integrar_t_android.activities.cuentos.PintarActivity.java", "BodyUseAPI": [], "Fixed commit": "627ea6a0323d9f4c538249e65491b9215cad8766", "Url": "https://api.github.com/repos/Proyecto-UTN-2012/Proyecto-UTN-2012", "Date": "2013-03-09T21:22:19Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMap) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1257/buggy-version/src.org.inaturalist.android.INaturalistMapActivity.java", "BodyUseAPI": [], "Fixed commit": "c44bc7e214eb4399e2da6b6e6a7ee11c0865282f", "Url": "https://api.github.com/repos/inaturalist/iNaturalistAndroid", "Date": "2013-06-01T20:21:01Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (textureLocation == null) { this.textureLocation = \"resources/MissingTexture.png\"; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4557/buggy-version/src.world.BGround.java", "BodyUseAPI": [], "Fixed commit": "f686bcb9e44022810c778804a35a5afab0ec28be", "Url": "https://api.github.com/repos/JigginsGit/CSGame", "Date": "2013-12-29T18:00:59Z"},
{"Line": "=>588", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newGraphletImage.getDistanceGDDH()) != (-1)) btnAddToTable.setEnabled(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7904/buggy-version/src.main.java.epigraph.ImageProcessingWindow.java", "BodyUseAPI": [], "Fixed commit": "1cbbd6e0527718eeccdc2e36bdb4199b6ac31e63", "Url": "https://api.github.com/repos/ComplexOrganizationOfLivingMatter/Epigraph", "Date": "2017-01-27T15:20:03Z"},
{"Line": "=>575", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newGraphletImage.getDistanceGDDH()) == (-1)) btnAddToTable.setEnabled(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7904/buggy-version/src.main.java.epigraph.ImageProcessingWindow.java", "BodyUseAPI": [], "Fixed commit": "1cbbd6e0527718eeccdc2e36bdb4199b6ac31e63", "Url": "https://api.github.com/repos/ComplexOrganizationOfLivingMatter/Epigraph", "Date": "2017-01-27T15:20:03Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"opLessThan\".equals(operation)) { fieldOp = org.ofbiz.entity.condition.EntityOperator.LESS_THAN; }else if (\"upToDay\".equals(operation)) { fieldOp = org.ofbiz.entity.condition.EntityOperator.LESS_THAN; }else if (\"upThruDay\".equals(operation)) { fieldOp = org.ofbiz.entity.condition.EntityOperator.LESS_THAN_EQUAL_TO; }else if (operation.equals(\"greaterThanFromDayStart\")) { java.lang.String timeStampString = ((java.lang.String) (fieldValue)); java.lang.Object startValue = modelField.getModelEntity().convertFieldValue(modelField, org.ofbiz.common.FindServices.dayStart(timeStampString, 0), delegator, context); return org.ofbiz.entity.condition.EntityCondition.makeCondition(fieldName, EntityOperator.GREATER_THAN_EQUAL_TO, startValue); }else if (operation.equals(\"sameDay\")) { java.lang.String timeStampString = ((java.lang.String) (fieldValue)); java.lang.Object startValue = modelField.getModelEntity().convertFieldValue(modelField, org.ofbiz.common.FindServices.dayStart(timeStampString, 0), delegator, context); org.ofbiz.entity.condition.EntityCondition startCond = org.ofbiz.entity.condition.EntityCondition.makeCondition(fieldName, EntityOperator.GREATER_THAN_EQUAL_TO, startValue); java.lang.Object endValue = modelField.getModelEntity().convertFieldValue(modelField, org.ofbiz.common.FindServices.dayStart(timeStampString, 1), delegator, context); org.ofbiz.entity.condition.EntityCondition endCond = org.ofbiz.entity.condition.EntityCondition.makeCondition(fieldName, EntityOperator.LESS_THAN, endValue); return org.ofbiz.entity.condition.EntityCondition.makeCondition(startCond, endCond); }else { fieldOp = org.ofbiz.common.FindServices.entityOperators.get(operation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8228/buggy-version/framework.common.src.org.ofbiz.common.FindServices.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.util.Map<java.lang.String, org.ofbiz.entity.condition.EntityComparisonOperator<?, ?>>.get(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "0fd0fb7642eb8e08f78ba7710e01562f0c478695", "Url": "https://api.github.com/repos/onelazyboy/ofbiz-cms", "Date": "2017-11-19T04:18:43Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"upThruDay\".equals(operation)) { fieldOp = org.ofbiz.entity.condition.EntityOperator.LESS_THAN_EQUAL_TO; }else if (operation.equals(\"greaterThanFromDayStart\")) { java.lang.String timeStampString = ((java.lang.String) (fieldValue)); java.lang.Object startValue = modelField.getModelEntity().convertFieldValue(modelField, org.ofbiz.common.FindServices.dayStart(timeStampString, 0), delegator, context); return org.ofbiz.entity.condition.EntityCondition.makeCondition(fieldName, EntityOperator.GREATER_THAN_EQUAL_TO, startValue); }else if (operation.equals(\"sameDay\")) { java.lang.String timeStampString = ((java.lang.String) (fieldValue)); java.lang.Object startValue = modelField.getModelEntity().convertFieldValue(modelField, org.ofbiz.common.FindServices.dayStart(timeStampString, 0), delegator, context); org.ofbiz.entity.condition.EntityCondition startCond = org.ofbiz.entity.condition.EntityCondition.makeCondition(fieldName, EntityOperator.GREATER_THAN_EQUAL_TO, startValue); java.lang.Object endValue = modelField.getModelEntity().convertFieldValue(modelField, org.ofbiz.common.FindServices.dayStart(timeStampString, 1), delegator, context); org.ofbiz.entity.condition.EntityCondition endCond = org.ofbiz.entity.condition.EntityCondition.makeCondition(fieldName, EntityOperator.LESS_THAN, endValue); return org.ofbiz.entity.condition.EntityCondition.makeCondition(startCond, endCond); }else { fieldOp = org.ofbiz.common.FindServices.entityOperators.get(operation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8228/buggy-version/framework.common.src.org.ofbiz.common.FindServices.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.util.Map<java.lang.String, org.ofbiz.entity.condition.EntityComparisonOperator<?, ?>>.get(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "0fd0fb7642eb8e08f78ba7710e01562f0c478695", "Url": "https://api.github.com/repos/onelazyboy/ofbiz-cms", "Date": "2017-11-19T04:18:43Z"},
{"Line": "=>1394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useTextAreaMode) dx -= getResources().getDimensionPixelSize(R.dimen.text_area_left_and_right_padding);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2764/buggy-version/library.src.main.java.com.rengwuPATHn.materialedittext.MaterialEditText.java", "BodyUseAPI": [], "Fixed commit": "16988310caa68a65f28b74aaf2d15d01fcc5104b", "Url": "https://api.github.com/repos/BrigadeTom/MaterialEditText", "Date": "2017-08-24T23:28:29Z"},
{"Line": "=>1390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useTextAreaMode) dx -= getResources().getDimensionPixelSize(R.dimen.text_area_left_and_right_padding);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2764/buggy-version/library.src.main.java.com.rengwuPATHn.materialedittext.MaterialEditText.java", "BodyUseAPI": [], "Fixed commit": "16988310caa68a65f28b74aaf2d15d01fcc5104b", "Url": "https://api.github.com/repos/BrigadeTom/MaterialEditText", "Date": "2017-08-24T23:28:29Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (tx != null) req.txState(tx.txState());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5271/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.java", "BodyUseAPI": ["org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxLocal.txState()", "org.apache.ignite.internal.processors.cache.distributed.near.GridNearTxPrepareRequest.txState(tx.txState())"], "Fixed commit": "5384f03f5d26e18c111ab6410726480935dc2daf", "Url": "https://api.github.com/repos/ilantukh/ignite", "Date": "2016-05-11T15:35:38Z"},
{"Line": "=>612", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (val.startsWith(PersistentObject.MAPPING_ERROR_MARKER)) { val = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7467/buggy-version/ch.elexis.core.ui.src.ch.elexis.core.ui.util.LabeledInputField.java", "BodyUseAPI": [], "Fixed commit": "8c03cb41b16958c9c2cfc8049175d8d06c00a7c4", "Url": "https://api.github.com/repos/ngiger/elexis-3-core", "Date": "2014-08-19T12:35:55Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.yakindu.sct.model.stext.inferrer.STextTypeInferrer.deresolve(e.getEvent())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (event != null) type1 = event.getType();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5827/buggy-version/plugins.org.yakindu.sct.model.stext.src.org.yakindu.sct.model.stext.inferrer.STextTypeInferrer.java", "BodyUseAPI": ["org.yakindu.sct.model.stext.stext.EventDefinition.getType()"], "Fixed commit": "716752acf4e0c9590d6ea982c2a678a9ead8b954", "Url": "https://api.github.com/repos/Yakindu/statecharts", "Date": "2015-12-07T19:11:24Z"},
{"Line": "=>1243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n_trials >= 100) { isDamaging = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2698/buggy-version/src.com.dabomstew.pkrandom.romhandlers.AbstractRomHandler.java", "BodyUseAPI": [], "Fixed commit": "6f16af8d5873335ab07619ded4fe4abc2b5844b3", "Url": "https://api.github.com/repos/samfin/better-race-randomizer", "Date": "2015-07-05T22:57:14Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ln == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7508/buggy-version/src.main.java.fredboat.util.log.SLF4JInputStreamLogger.java", "BodyUseAPI": [], "Fixed commit": "9cf96648831addfc640b8fa452df292283c75403", "Url": "https://api.github.com/repos/Frederikam/FredBoat", "Date": "2016-10-07T19:58:21Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fredboat.util.log.SLF4JInputStreamErrorLogger.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ln == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7508/buggy-version/src.main.java.fredboat.util.log.SLF4JInputStreamErrorLogger.java", "BodyUseAPI": [], "Fixed commit": "9cf96648831addfc640b8fa452df292283c75403", "Url": "https://api.github.com/repos/Frederikam/FredBoat", "Date": "2016-10-07T19:58:21Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dao.SbillitOrderDao.findOrderbyId(java.lang.Long,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (order == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3080/buggy-version/app.services.impl.SbillitOrderServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "0555de9372a813ec0c680d27c058653b3356cf4c", "Url": "https://api.github.com/repos/xiwan/Sbillit", "Date": "2014-04-27T09:40:34Z"},
{"Line": "=>996", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((b.getPowerup()) == (Item.HYPER)) && (overlap(a, b))) { kill(b, a); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6923/buggy-version/Arena.src.game.ServerGameState.java", "BodyUseAPI": ["game.ServerGameState.kill(game.Actor,game.Actor)"], "Fixed commit": "22dd26571154aaaa1d1a870872dd1d9dc0e37442", "Url": "https://api.github.com/repos/pyrotech911/TSPSmashArena", "Date": "2013-11-20T19:57:17Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getClientEngine().getSecurityContext()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (securityContext != null) { callable = securityContext.createSecureCallable(getEndpoint().getSubject(), callable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/890/buggy-version/hazelcast.src.main.java.com.hazelcast.executor.client.PartitionCallableRequest.java", "BodyUseAPI": ["com.hazelcast.security.SecurityContext.createSecureCallable(getEndpoint().getSubject(),java.util.concurrent.Callable)"], "Fixed commit": "59a60419284fb257fb24b1c0d765f56aa49de623", "Url": "https://api.github.com/repos/eminn/hazelcast", "Date": "2014-05-26T13:34:10Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<P>.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (className.startsWith(\"java.util.\")) accessClassName = (\"net.minidev.asm.\" + className) + \"AccAccess\"; else accessClassName = className.concat(\"AccAccess\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3268/buggy-version/asm.src.main.java.net.minidev.asm.BeansAccess.java", "BodyUseAPI": ["java.lang.String.concat(java.lang.String)"], "Fixed commit": "d13c4c97779fd06f9a41df0c03670ee6decff0fb", "Url": "https://api.github.com/repos/hzpz/json-smart-v2", "Date": "2014-06-05T10:37:09Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (className.startsWith(\"java.util.\")) this.accessClassName = (\"net.minidev.asm.\" + (className)) + \"AccAccess\"; else this.accessClassName = className.concat(\"AccAccess\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3268/buggy-version/asm.src.main.java.net.minidev.asm.BeansAccessBuilder.java", "BodyUseAPI": [], "Fixed commit": "d13c4c97779fd06f9a41df0c03670ee6decff0fb", "Url": "https://api.github.com/repos/hzpz/json-smart-v2", "Date": "2014-06-05T10:37:09Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.CharSequence.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(number.equals(\".\"))) { mFabric.setHeight(java.lang.Double.parseDouble(c.toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2991/buggy-version/StashCache.app.src.main.java.com.geekeclectic.android.stashcache.StashFabricFragment.java", "BodyUseAPI": [], "Fixed commit": "8f158eb61c8a7570db5c94ab8c6f11549e649a22", "Url": "https://api.github.com/repos/sylkai/stash_cache", "Date": "2015-05-12T17:19:18Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (difference < 0) { difference = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2843/buggy-version/app.src.main.java.com.karthikb351.vitinfo2.activity.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "0914454ae5bd314eab0a9f70533486417afbb41b", "Url": "https://api.github.com/repos/saurabhsjoshi/VITacademics-for-Android", "Date": "2016-01-11T18:28:46Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMapViewHeightSetted) == true) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2513/buggy-version/app.src.main.java.com.dev.irsg.busassister.ui.MapFragment.java", "BodyUseAPI": [], "Fixed commit": "762043dd3feb0af9d89503e95fc122ca808c1862", "Url": "https://api.github.com/repos/Wujingli/BusAssister", "Date": "2017-06-26T17:45:42Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((a.length) > 1) content = (a[0]) + \"...\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5699/buggy-version/src.com.bnutalk.util.DBopenHelper.java", "BodyUseAPI": [], "Fixed commit": "d4860a444e5d01df42aa15bde6c03fbffb6028f5", "Url": "https://api.github.com/repos/linPATHoby/BNUtalk_Client", "Date": "2016-06-02T06:28:16Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentUser) == null) { currentUser = new ca.ualberta.cs.cmput301t02project.User(username); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2280/buggy-version/CMPUT301T02Project.src.ca.ualberta.cs.cmput301t02project.ProjectApplication.java", "BodyUseAPI": [], "Fixed commit": "39e52474bbf57911be901f044d1b6cf77d54ea36", "Url": "https://api.github.com/repos/CMPUT301W14T02/Comput301Project", "Date": "2014-03-29T23:21:32Z"},
{"Line": "=>778", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.Object)", "java.util.Calendar.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((now.getTime().getHours()) < hrTime) && ((now.getTime().getMinutes()) > minTime)) { error = true; errorMessage(\"Start time must be after the current time! Try Again\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/754/buggy-version/src.software.ParkingGUI.java", "BodyUseAPI": [], "Fixed commit": "0449e71bf0b789b66da99a3d056845649323a926", "Url": "https://api.github.com/repos/bbushnell95/ECE373_FinalProject", "Date": "2016-12-08T04:09:35Z"},
{"Line": "=>773", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((now.getTime().getHours()) > hrTime) { error = true; errorMessage(\"Start time must be after the current time! Try Again\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/754/buggy-version/src.software.ParkingGUI.java", "BodyUseAPI": [], "Fixed commit": "0449e71bf0b789b66da99a3d056845649323a926", "Url": "https://api.github.com/repos/bbushnell95/ECE373_FinalProject", "Date": "2016-12-08T04:09:35Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getList()) == null) { predatorieprede02.LinkedOrganisms list = new predatorieprede02.LinkedOrganisms(); setList(list); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1104/buggy-version/src.predatorieprede02.LinkedPredatore.java", "BodyUseAPI": [], "Fixed commit": "a6129693d4dacc2b0515a28f45f5cfc16800ea42", "Url": "https://api.github.com/repos/roccobarbi/predatorieprede02", "Date": "2017-04-29T12:42:05Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["predatorieprede02.LinkedPredatore.getField()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((newX >= (field.getXLength())) || (newY >= (field.getYLength()))) { errorMessage = (\"Invalid move: \" + dest) + \"! X or Y coordinate greater than top limit.\"; throw new java.lang.Exception(errorMessage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1104/buggy-version/src.predatorieprede02.LinkedPredatore.java", "BodyUseAPI": [], "Fixed commit": "a6129693d4dacc2b0515a28f45f5cfc16800ea42", "Url": "https://api.github.com/repos/roccobarbi/predatorieprede02", "Date": "2017-04-29T12:42:05Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (logger.isFinestEnabled()) { logger.warning(((((\"Migration commit failed for \" + (java.util.Arrays.toString(migrations))) + \" since destination \") + destination) + \" left the cluster\")); }else { logger.warning(((((\"Migration commit failed for \" + ((migrations.length) == 1 ? migrations[0] : \"multiple migrations\")) + \" since destination \") + destination) + \" left the cluster\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4048/buggy-version/hazelcast.src.main.java.com.hazelcast.internal.partition.impl.MigrationManager.java", "BodyUseAPI": ["com.hazelcast.logging.ILogger.warning(((((\"Migration commit failed for \" + ((migrations.length) == 1 ? migrations[0] : \"multiple migrations\")) + \" since destination \") + destination) + \" left the cluster\"))", "com.hazelcast.logging.ILogger.warning(((((\"Migration commit failed for \" + (java.util.Arrays.toString(migrations))) + \" since destination \") + destination) + \" left the cluster\"))"], "Fixed commit": "f8f6bc65365d6440ff4e470388b4c54ab08bd4bb", "Url": "https://api.github.com/repos/mdogan/hazelcast", "Date": "2016-05-30T11:46:04Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (logger.isFinestEnabled()) { logger.severe((((\"Migration commit to \" + destination) + \" failed for \") + (java.util.Arrays.toString(migrations))), t); }else { logger.severe((((\"Migration commit to \" + destination) + \" failed for \") + ((migrations.length) == 1 ? migrations[0] : \"multiple migrations\")), t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4048/buggy-version/hazelcast.src.main.java.com.hazelcast.internal.partition.impl.MigrationManager.java", "BodyUseAPI": ["com.hazelcast.logging.ILogger.severe((((\"Migration commit to \" + destination) + \" failed for \") + (java.util.Arrays.toString(migrations))),java.lang.Throwable)", "com.hazelcast.logging.ILogger.severe((((\"Migration commit to \" + destination) + \" failed for \") + ((migrations.length) == 1 ? migrations[0] : \"multiple migrations\")),java.lang.Throwable)"], "Fixed commit": "f8f6bc65365d6440ff4e470388b4c54ab08bd4bb", "Url": "https://api.github.com/repos/mdogan/hazelcast", "Date": "2016-05-30T11:46:04Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(obj instanceof com.polarbear.service.product.query.bean.ProductStyleProperty)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2743/buggy-version/polarbear.src.main.java.com.polarbear.service.product.query.bean.ProductStyleProperty.java", "BodyUseAPI": [], "Fixed commit": "14ae60b90ac3eb4370654c86c499084486923c80", "Url": "https://api.github.com/repos/polargull/polar", "Date": "2016-01-04T08:04:55Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((list != null) && ((list.get(i)) != null)) filtered.add(list.get(i));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/677/buggy-version/contrib.views.hive-next.src.main.java.org.apache.ambari.view.hive2.resources.jobs.ResultsPaginationController.java", "BodyUseAPI": ["java.util.List<T>.get(int)", "java.util.List<T>.add(T)"], "Fixed commit": "f3c0fcd0d5760e20abe6ec32c73cec058d317581", "Url": "https://api.github.com/repos/apache/ambari", "Date": "2016-06-14T10:31:51Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.wpi.cs.wpisuitetcw.modules.planningpoker.models.PlanningPokerRequirement.fromJsonArray(response.getBody())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (requirements == null) { requirements = new edu.wpi.cs.wpisuitetcw.modules.planningpoker.models.PlanningPokerRequirement[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5980/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetcw.modules.planningpoker.controllers.RetrieveFreePlanningPokerRequirementsRequestObserver.java", "BodyUseAPI": [], "Fixed commit": "e61b25caacff22a3d7fcf7f89348f8321f757f4f", "Url": "https://api.github.com/repos/Team-Combat-Wombat/wpi-suite-tcw", "Date": "2014-03-31T04:38:33Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((slot) >= 0) { writeSlab.release(slot); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2045/buggy-version/src.main.java.org.reaktivity.nukleus.tcp.internal.writer.stream.StreamFactory.java", "BodyUseAPI": [], "Fixed commit": "b912d49ffd9d2d931db7df58ad016cf766577ba8", "Url": "https://api.github.com/repos/cmebarrow/nukleus-tcp.java", "Date": "2017-02-23T07:20:40Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getBounceEnabled()) { doAtEdgeAnimation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6444/buggy-version/src.uk.co.jasonfry.android.tools.widget.PageView.java", "BodyUseAPI": [], "Fixed commit": "c60959f1006866ef584fcb26e9a54c8c9529b01c", "Url": "https://api.github.com/repos/ribot/uk.co.jasonfry.android.tools", "Date": "2013-10-04T11:40:06Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getAlphaParameter()) != null) { return java.util.Collections.singletonList(dr.evomodel.siteratemodel.GammaSiteRateModel.CITATION); }else { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6202/buggy-version/src.dr.evomodel.siteratemodel.GammaSiteRateModel.java", "BodyUseAPI": [], "Fixed commit": "35a5e7dfc64521f3bb267c1898b29f9230d15eff", "Url": "https://api.github.com/repos/beast-dev/beast-mcmc", "Date": "2017-07-24T16:17:47Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (propertyDesc != null) { jp.sf.amateras.mirage.annotation.Enumerated property = propertyDesc.getAnnotation(jp.sf.amateras.mirage.annotation.Enumerated.class); if ((property != null) && ((property.value()) == (jp.sf.amateras.mirage.annotation.Enumerated.EnumType.STRING))) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3941/buggy-version/src.main.java.jp.sf.amateras.mirage.type.enumerate.EnumStringValueType.java", "BodyUseAPI": ["jp.sf.amateras.mirage.bean.PropertyDesc.getAnnotation(java.lang.Class)"], "Fixed commit": "d26e47d2b2b603b65a81e6f40cd8750193329038", "Url": "https://api.github.com/repos/dai0304/mirage", "Date": "2013-09-11T06:31:08Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (propertyDesc != null) { jp.sf.amateras.mirage.annotation.Enumerated property = propertyDesc.getAnnotation(jp.sf.amateras.mirage.annotation.Enumerated.class); if ((property != null) && ((property.value()) == (jp.sf.amateras.mirage.annotation.Enumerated.EnumType.ORDINAL))) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3941/buggy-version/src.main.java.jp.sf.amateras.mirage.type.enumerate.EnumOrdinalValueType.java", "BodyUseAPI": ["jp.sf.amateras.mirage.bean.PropertyDesc.getAnnotation(java.lang.Class)"], "Fixed commit": "d26e47d2b2b603b65a81e6f40cd8750193329038", "Url": "https://api.github.com/repos/dai0304/mirage", "Date": "2013-09-11T06:31:08Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (propertyDesc != null) { jp.sf.amateras.mirage.annotation.Enumerated property = propertyDesc.getAnnotation(jp.sf.amateras.mirage.annotation.Enumerated.class); if ((property != null) && ((property.value()) == (jp.sf.amateras.mirage.annotation.Enumerated.EnumType.ONE_BASED_ORDINAL))) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3941/buggy-version/src.main.java.jp.sf.amateras.mirage.type.enumerate.EnumOneBasedOrdinalValueType.java", "BodyUseAPI": ["jp.sf.amateras.mirage.bean.PropertyDesc.getAnnotation(java.lang.Class)"], "Fixed commit": "d26e47d2b2b603b65a81e6f40cd8750193329038", "Url": "https://api.github.com/repos/dai0304/mirage", "Date": "2013-09-11T06:31:08Z"},
{"Line": "=>587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getChunkFromChunkCoords(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((chunk.getBlockID(((x & 127) >> 3), (y >> 3), ((z & 127) >> 3))) != (slimevoid.littleblocks.core.lib.ConfigurationLib.littleChunkID)) && (this.isAirBlock(x, y, z))) { this.getRealWorld().setBlock((x >> 3), (y >> 3), (z >> 3), ConfigurationLib.littleChunkID); }else if ((chunk.getBlockID(((x & 127) >> 3), (y >> 3), ((z & 127) >> 3))) != (slimevoid.littleblocks.core.lib.ConfigurationLib.littleChunkID)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/9193/buggy-version/LB-source.slimevoid.littleblocks.world.LittleWorld.java", "BodyUseAPI": ["net.minecraft.world.chunk.Chunk.getBlockID(int,int,int)", "net.minecraft.world.World.setBlock(int,int,int,ConfigurationLib.littleChunkID)"], "Fixed commit": "d7df7c9a2ff7d1c69d018da845d8f3194b6924fe", "Url": "https://api.github.com/repos/SlimeVoid/LittleBlocks-FML", "Date": "2013-10-16T16:13:38Z"},
{"Line": "=>703", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getChunkFromChunkCoords(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((chunk.getBlockID(((x & 127) >> 3), (y >> 3), ((z & 127) >> 3))) != (slimevoid.littleblocks.core.lib.ConfigurationLib.littleChunkID)) && (this.isAirBlock(x, y, z))) { this.getRealWorld().setBlock((x >> 3), (y >> 3), (z >> 3), ConfigurationLib.littleChunkID); }else if ((chunk.getBlockID(((x & 127) >> 3), (y >> 3), ((z & 127) >> 3))) != (slimevoid.littleblocks.core.lib.ConfigurationLib.littleChunkID)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/9193/buggy-version/LB-source.slimevoid.littleblocks.world.LittleWorld.java", "BodyUseAPI": ["net.minecraft.world.World.setBlock(int,int,int,ConfigurationLib.littleChunkID)", "net.minecraft.world.chunk.Chunk.getBlockID(int,int,int)"], "Fixed commit": "d7df7c9a2ff7d1c69d018da845d8f3194b6924fe", "Url": "https://api.github.com/repos/SlimeVoid/LittleBlocks-FML", "Date": "2013-10-16T16:13:38Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((key.getSource()) != null) sourceArray.addAll(key.getSource());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3255/buggy-version/src.cz.crcs.sekan.rsakeysanalysis.classification.DataSetClassification.java", "BodyUseAPI": ["org.json.simple.JSONArray.addAll(key.getSource())", "cz.crcs.sekan.rsakeysanalysis.classification.key.ClassificationKey.getSource()"], "Fixed commit": "912ab691d9ae659f04cdec2baee1e1701f6b6926", "Url": "https://api.github.com/repos/crocs-muni/classifyRSAkey", "Date": "2016-10-21T14:11:08Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nedap.archie.adlparser.modelconstraints.ConstraintToClassLookup.getField(java.lang.Class<? extends java.lang.Object>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (field == null) { throw new java.lang.IllegalArgumentException(java.lang.String.format(\"Attribute %s not known for object %s\", rmAttributeName, object.getClass().getSimpleName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2568/buggy-version/parser.src.main.java.com.nedap.archie.adlparser.modelconstraints.RMObjectCreator.java", "BodyUseAPI": [], "Fixed commit": "fc7708f069b744b5df70b63952b25f8fad71b6f3", "Url": "https://api.github.com/repos/nedap/archie", "Date": "2016-02-04T17:09:51Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (segment.hasNumberIndex()) { int number = java.lang.Integer.parseInt(segment.getNodeId()); if (number != 1) { return null; } }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2568/buggy-version/archetypemodel.src.main.java.com.nedap.archie.query.APathQuery.java", "BodyUseAPI": ["com.nedap.archie.paths.PathSegment.getNodeId()", "java.lang.Integer.parseInt(segment.getNodeId())"], "Fixed commit": "fc7708f069b744b5df70b63952b25f8fad71b6f3", "Url": "https://api.github.com/repos/nedap/archie", "Date": "2016-02-04T17:09:51Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bbct.android.common.provider.BaseballCardAdapter.1.getCount()", "mListFragment.getListView().getCheckedItemCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (checkedCount == itemCount) { selectAll.setChecked(true); }else { selectAll.setChecked(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1509/buggy-version/gradle.android.src.main.java.bbct.android.common.provider.BaseballCardAdapter.java", "BodyUseAPI": [], "Fixed commit": "9e0d5ec920664632e1b2349821a9ea8074e1c572", "Url": "https://api.github.com/repos/codeguru42/bbct", "Date": "2014-06-28T20:39:52Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentState) == (CURRENT_STATE_PLAYING)) { dissmissControlView(); }else { startDismissControlViewTimer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6615/buggy-version/jiaozivideoplayer.src.main.java.cn.jzvd.JZVideoPlayerStandard.java", "BodyUseAPI": [], "Fixed commit": "cb9b0c7a856c00fb1e5b6afbe29c6abf0f09f659", "Url": "https://api.github.com/repos/lipangit/JiaoZiVideoPlayer", "Date": "2017-09-18T12:27:54Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (seq == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8134/buggy-version/modules.ballerina-core.src.main.java.org.ballerinalang.model.values.BXMLItem.java", "BodyUseAPI": [], "Fixed commit": "7c93147e715d31afe9fe018ce30cf9c87f45e57b", "Url": "https://api.github.com/repos/ballerina-platform/ballerina-lang", "Date": "2017-11-14T11:46:04Z"},
{"Line": "=>469", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (seq == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8134/buggy-version/modules.ballerina-core.src.main.java.org.ballerinalang.model.values.BXMLItem.java", "BodyUseAPI": [], "Fixed commit": "7c93147e715d31afe9fe018ce30cf9c87f45e57b", "Url": "https://api.github.com/repos/ballerina-platform/ballerina-lang", "Date": "2017-11-14T11:46:04Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getEditor().getProject()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (project == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6651/buggy-version/EDIDE.src.ru.compscicenter.edide.StudyEditorFactoryListener.java", "BodyUseAPI": [], "Fixed commit": "8235cad709fee5fdbbb0939993b5384649fb86db", "Url": "https://api.github.com/repos/cscenter/EDIDE", "Date": "2014-06-20T15:10:46Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.czyzby.autumn.context.ContextInitializer.processConstructor(com.badlogic.gdx.utils.reflect.Constructor,com.github.czyzby.autumn.context.Context)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (component != null) { components.add(component); }else { delayedConstructions.add(constructor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1572/buggy-version/autumn.src.main.java.com.github.czyzby.autumn.context.ContextInitializer.java", "BodyUseAPI": ["com.badlogic.gdx.utils.Array<java.lang.Object>.add(java.lang.Object)"], "Fixed commit": "5df5fbfc17563ea8f1d0ad9c1975c64ba460f217", "Url": "https://api.github.com/repos/metaphore/gdx-lml", "Date": "2017-12-17T18:26:03Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(value.isEmpty())) { result.put(key, java.util.Collections.unmodifiableSet(new java.util.HashSet<>(value))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3284/buggy-version/jtrim-task-graph.src.main.java.org.jtrim.taskgraph.DirectedGraph.java", "BodyUseAPI": ["java.util.Map<K, java.util.Set<V>>.put(K,java.util.Set<V>)", "java.util.Collections.unmodifiableSet(java.util.HashSet<>)"], "Fixed commit": "cd8b2df407ba10455be7037b86181859f07dd829", "Url": "https://api.github.com/repos/kelemen/JTrim", "Date": "2017-04-17T08:23:37Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.juniper.contrail.vcenter.VCenterMonitor.getVncDB()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6480/buggy-version/src.net.juniper.contrail.sandesh.VCenterPluginResp.java", "BodyUseAPI": [], "Fixed commit": "29a163bb5f33c9840c14ba9655d19b995565b0d5", "Url": "https://api.github.com/repos/Juniper/contrail-vcenter-plugin", "Date": "2015-10-13T22:48:34Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.juniper.contrail.vcenter.VCenterMonitor.getVncDB().getVRouterApiMap()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (apiMap == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6480/buggy-version/src.net.juniper.contrail.sandesh.VCenterPluginResp.java", "BodyUseAPI": [], "Fixed commit": "29a163bb5f33c9840c14ba9655d19b995565b0d5", "Url": "https://api.github.com/repos/Juniper/contrail-vcenter-plugin", "Date": "2015-10-13T22:48:34Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (endDate != null) { javax.persistence.criteria.Expression expression = root.get(\"createdOn\"); if (startDate == null) { cq.where(cb.lessThanOrEqualTo(expression, endDate.getTime())); }else { cq.where(cb.and(cq.getRestriction(), cb.lessThanOrEqualTo(expression, endDate.getTime()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7943/buggy-version/Fuse.qlack2-fuse-auditing.qlack2-fuse-auditing-impl.src.main.java.com.eurodyn.qlack2.fuse.auditing.impl.AuditLoggingServiceImpl.java", "BodyUseAPI": ["javax.persistence.criteria.CriteriaQuery<T>.where(cb.lessThanOrEqualTo(expression, endDate.getTime()))", "javax.persistence.criteria.CriteriaBuilder.lessThanOrEqualTo(javax.persistence.criteria.Expression,long)", "java.util.Date.getTime()", "java.util.Date.getTime()", "javax.persistence.criteria.CriteriaBuilder.lessThanOrEqualTo(javax.persistence.criteria.Expression,long)", "javax.persistence.criteria.CriteriaBuilder.and(cq.getRestriction(),cb.lessThanOrEqualTo(expression, endDate.getTime()))", "javax.persistence.criteria.CriteriaQuery<T>.where(cb.and(cq.getRestriction(), cb.lessThanOrEqualTo(expression, endDate.getTime())))"], "Fixed commit": "510a83e1a50f074190cd56fe0e57a8102980e7d0", "Url": "https://api.github.com/repos/clebesis/Qlack2", "Date": "2017-05-12T12:53:34Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entity == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/583/buggy-version/dao-gen-core.src.main.java.com.ctrip.platform.dal.daogen.dao.DaoOfDatabaseSet.java", "BodyUseAPI": [], "Fixed commit": "3a5256c37160774b880a9a0bf0208d149f380f83", "Url": "https://api.github.com/repos/ctripcorp/dal", "Date": "2017-07-04T02:53:43Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reading) == (io.datakernel.http.AbstractHttpConnection.FIRSTLINE)) throw new io.datakernel.async.ParseException(\"Empty response from server\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4869/buggy-version/http.src.main.java.io.datakernel.http.AbstractHttpConnection.java", "BodyUseAPI": [], "Fixed commit": "7684dcea86d37504a3cf9fdc2532b5c6d61f5c28", "Url": "https://api.github.com/repos/softindex/datakernel", "Date": "2016-03-31T09:43:15Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((midNodeItemsList.size()) == 3) { leftNodeItemsList.add(htmlContent); }else { midNodeItemsList.add(htmlContent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6238/buggy-version/OVWMigration.src.main.com.cisco.dse.global.migration.web.WebVariation10.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "682df6dba0b3a9b0209821f75a6aac2220ab861a", "Url": "https://api.github.com/repos/shreyabhatnagar/OVWMigration", "Date": "2016-01-19T09:23:30Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(actor.isDestroyed())) { processActor(actor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3946/buggy-version/src.main.java.org.sankozi.rogueland.control.Game.java", "BodyUseAPI": ["org.sankozi.rogueland.control.Game.GameRunnable.processActor(org.sankozi.rogueland.model.Actor)"], "Fixed commit": "b41eb3c1cb218d4e617cfb642a386ca2559a3294", "Url": "https://api.github.com/repos/Sankozi/rogueland", "Date": "2011-07-31T13:45:09Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.citizensnpcs.questers.PlayerProfile.getProfile(player.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (profile.getProgress().fullyCompleted()) { player.sendMessage(((org.bukkit.ChatColor.AQUA) + \"Quest is completed.\")); }else { player.sendMessage(((((((org.bukkit.ChatColor.GREEN) + \"-\") + (org.bukkit.ChatColor.AQUA)) + \" Progress report \") + (org.bukkit.ChatColor.GREEN)) + \"-\")); for (net.citizensnpcs.questers.quests.ObjectiveProgress progress : profile.getProgress().getProgress()) { net.citizensnpcs.utils.Messaging.send(player, progress.getQuestUpdater().getStatus(progress)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2480/buggy-version/src.quester.net.citizensnpcs.questers.QuesterCommands.java", "BodyUseAPI": ["net.citizensnpcs.questers.PlayerProfile.getProgress()", "profile.getProgress().getProgress()"], "Fixed commit": "4fbf3afab67664124e333e8257315142d04bc963", "Url": "https://api.github.com/repos/CitizensDev/Citizens", "Date": "2011-08-28T10:25:07Z"},
{"Line": "=>825", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.matrix.androidsdk.MXSession.getMyUserId()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((null != mySelf) && (!(mMemberId.equals(mySelf)))) { imageResource = R.drawable.vector_create_direct_room; actionText = getResources().getString(R.string.start_new_chat); directMessagesActions.add(new im.vector.adapters.VectorMemberDetailsAdapter.AdapterMemberActionItems(imageResource, actionText, im.vector.activity.VectorMemberDetailsActivity.ITEM_ACTION_START_CHAT)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3713/buggy-version/vector.src.main.java.im.vector.activity.VectorMemberDetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "8125bb25fcb27b6bf0edcb148e7a7d224cfcd7dc", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2016-11-22T22:51:06Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((net.petrovsky.flights.util.TimeUtil.toDate(from).isAfter(java.time.LocalDateTime.now().toLocalDate().minusDays(1))) && (net.petrovsky.flights.util.TimeUtil.toDate(to).isAfter(java.time.LocalDateTime.now().toLocalDate().minusDays(1))))) { if (!(net.petrovsky.flights.util.TimeUtil.toDate(from).isAfter(java.time.LocalDateTime.now().toLocalDate().minusDays(1)))) { model.addAttribute(\"msgIncorrectDateFrom\", \"Incorrect date\"); } if (!(net.petrovsky.flights.util.TimeUtil.toDate(to).isAfter(java.time.LocalDateTime.now().toLocalDate().minusDays(1)))) { model.addAttribute(\"msgIncorrectDateTo\", \"Incorrect date\"); } }else { model.addAttribute(\"selectedFlights\", flightService.getFlightToOrder(destination, pointOfDeparture, net.petrovsky.flights.util.TimeUtil.toDate(from).atTime(0, 0, 0), net.petrovsky.flights.util.TimeUtil.toDate(to).atTime(0, 0, 0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2802/buggy-version/src.main.java.net.petrovsky.flights.web.FlightController.java", "BodyUseAPI": ["net.petrovsky.flights.util.TimeUtil.toDate(from).isAfter(java.time.LocalDate)", "net.petrovsky.flights.util.TimeUtil.toDate(java.lang.String)", "net.petrovsky.flights.util.TimeUtil.toDate(to).isAfter(java.time.LocalDate)", "net.petrovsky.flights.util.TimeUtil.toDate(java.lang.String)", "net.petrovsky.flights.util.TimeUtil.toDate(to).atTime(int,int,int)", "net.petrovsky.flights.util.TimeUtil.toDate(java.lang.String)", "net.petrovsky.flights.service.FlightService.getFlightToOrder(java.lang.String,java.lang.String,net.petrovsky.flights.util.TimeUtil.toDate(from).atTime(0, 0, 0),net.petrovsky.flights.util.TimeUtil.toDate(to).atTime(0, 0, 0))", "org.springframework.ui.Model.addAttribute(java.lang.String,flightService.getFlightToOrder(destination, pointOfDeparture, net.petrovsky.flights.util.TimeUtil.toDate(from).atTime(0, 0, 0), net.petrovsky.flights.util.TimeUtil.toDate(to).atTime(0, 0, 0)))", "net.petrovsky.flights.util.TimeUtil.toDate(from).atTime(int,int,int)", "net.petrovsky.flights.util.TimeUtil.toDate(java.lang.String)"], "Fixed commit": "5f0cbabb274f322bab0af362721c1c76c911e1e5", "Url": "https://api.github.com/repos/uraniumdawn/flights-booking-service", "Date": "2015-06-11T08:43:46Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.openstack4j.openstack.identity.internal.DefaultEndpointURLResolver.LEGACY_EP_HANDLING) { if ((endpoint.getAdminURL()) != null) { if (((getPublicIP(access)) != null) && (!(getPublicIP(access).equals(endpoint.getAdminURL().getHost())))) { return endpoint.getAdminURL().toString().replaceAll(endpoint.getAdminURL().getHost(), getPublicIP(access)); } return endpoint.getAdminURL().toString(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3457/buggy-version/core.src.main.java.org.openstack4j.openstack.identity.internal.DefaultEndpointURLResolver.java", "BodyUseAPI": [], "Fixed commit": "37fd591e48f8b0b953c87b6c46c2ee5a1a7f4a38", "Url": "https://api.github.com/repos/gondor/openstack4j", "Date": "2014-11-26T19:55:27Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value) == null) { throw new org.kairosdb.client.builder.DataFormatException(\"Value is not a string\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5349/buggy-version/src.main.java.org.kairosdb.client.builder.DataPoint.java", "BodyUseAPI": [], "Fixed commit": "3937f43dee45b3e1e97a723d30fc3326f3d3ba5e", "Url": "https://api.github.com/repos/kairosdb/kairosdb-client", "Date": "2017-03-02T03:59:01Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((maxValue % maxThreads) != 0) intervall++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/483/buggy-version/src.PrimeSimulator.java", "BodyUseAPI": [], "Fixed commit": "4092830ec474623a49fde49aea57b6fc16a94e51", "Url": "https://api.github.com/repos/tscheims1/PrimeCalculator2", "Date": "2014-05-06T21:43:59Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((plugin.getServer().getPluginManager().getPlugin(\"Tier2\")) != null) && ((event.getPlayer()) instanceof org.bukkit.entity.Player)) && (event.getPlayer().hasMetadata(\"assistance\"))) { if (!(event.getPlayer().getDisplayName().equals(event.getPlayer().getName()))) { event.setCancelled(true); plugin.getServer().broadcastMessage((((\"<\" + (event.getPlayer().getName())) + \"> \") + (event.getMessage()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2143/buggy-version/src.at.junction.transmission.TransmissionListener.java", "BodyUseAPI": ["at.junction.transmission.Transmission.getServer()", "org.bukkit.event.player.AsyncPlayerChatEvent.setCancelled(boolean)", "org.bukkit.event.player.AsyncPlayerChatEvent.getMessage()", "event.getPlayer().getName()", "event.getPlayer().getName()", "org.bukkit.event.player.AsyncPlayerChatEvent.getPlayer()", "event.getPlayer().getDisplayName().equals(event.getPlayer().getName())", "org.bukkit.event.player.AsyncPlayerChatEvent.getPlayer()", "plugin.getServer().broadcastMessage((((\"<\" + (event.getPlayer().getName())) + \"> \") + (event.getMessage())))", "event.getPlayer().getDisplayName()", "org.bukkit.event.player.AsyncPlayerChatEvent.getPlayer()"], "Fixed commit": "8f66e3e75b2203098ca1aab79c7f2df833ebfbfb", "Url": "https://api.github.com/repos/JunctionAt/Transmission", "Date": "2013-12-03T07:19:23Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player.addBuff(buff, param, durationInMS)) { collect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/397/buggy-version/DugeonGeneration.src.objects.Item.java", "BodyUseAPI": [], "Fixed commit": "2552ea31402e120d0802ae1b387124b1b0d906a7", "Url": "https://api.github.com/repos/x2spieler/GreenfootTeam6", "Date": "2015-11-24T14:25:52Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.os.Build.DEVICE.equalsIgnoreCase(\"tf700t\")) return START_STICKY;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7819/buggy-version/Dimmer.src.giraffine.dimmer.DimmerService.java", "BodyUseAPI": [], "Fixed commit": "85edf75f2e80ee3d5f0edc13bd996723b97f3223", "Url": "https://api.github.com/repos/giraffine/Android-Project", "Date": "2014-02-14T01:19:22Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.os.Build.DEVICE.equalsIgnoreCase(\"tf700t\")) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7819/buggy-version/Dimmer.src.giraffine.dimmer.DimmerService.java", "BodyUseAPI": [], "Fixed commit": "85edf75f2e80ee3d5f0edc13bd996723b97f3223", "Url": "https://api.github.com/repos/giraffine/Android-Project", "Date": "2014-02-14T01:19:22Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lat != 0) && (lon != 0)) { simpleTweet.put(\"client_latlong\", ((lat + \",\") + lon)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1207/buggy-version/src.main.java.net.redborder.social.twitter.TwitterProducer.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.String)"], "Fixed commit": "5dc11eb210400f467b0c769ec4f11fc2f65c8add", "Url": "https://api.github.com/repos/pikislabis/rb-social", "Date": "2017-10-02T11:20:24Z"},
{"Line": "=>857", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["my_game.models.game_components.Map.getObjectAt(my_game.util.Vector2)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (o != null) { if ((o.getObjectType().compareTo(GameObject.GameObjectType.Mine)) == 0) { my_game.models.game_components.Mine m = ((my_game.models.game_components.Mine) (o)); minezone = m.getMineZone(); for (my_game.util.Vector2 zone : minezone) { allMinezone.add(zone); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2236/buggy-version/BattleshipsGame.src.my_game.models.game_components.Map.java", "BodyUseAPI": ["my_game.models.game_components.GameObject.getObjectType()", "o.getObjectType().compareTo(GameObject.GameObjectType.Mine)"], "Fixed commit": "02eff096a3b0d4b12e092318208f8e36eb1bc1c3", "Url": "https://api.github.com/repos/dWarf-In-thE-FlaSk/Proj_361", "Date": "2014-04-07T05:40:38Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getSource()) == (this.v.getInsertPassenger())) { this.addFlightPassenger(); goToFlight(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1475/buggy-version/buchung.Controller.java", "BodyUseAPI": [], "Fixed commit": "c6f880b6dd2a3cb881cca6707a42eb88dd79151b", "Url": "https://api.github.com/repos/ahold-tgm/insy-a01_jdbc", "Date": "2017-10-06T07:08:45Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parameter.getGroupTargets()) != null) { for (java.lang.String groupTarget : parameter.getGroupTargets()) { groupIndices.add(resultTable.getAttributeNames().indexOf(groupTarget)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7896/buggy-version/src.main.java.com.github.taffy128s.tlcdbms.DBManager.java", "BodyUseAPI": ["com.github.taffy128s.tlcdbms.sqlparsers.SQLParseResult.getGroupTargets()"], "Fixed commit": "b2b5d9cc0a070ab859c6fe046bc608d617ea4a88", "Url": "https://api.github.com/repos/taffy128s/TLC_DBMS", "Date": "2017-04-11T11:30:58Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.StringTokenizer.nextToken()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (token.equals(\"Bundle\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7946/buggy-version/com.dubture.symfony.core.src.com.dubture.symfony.core.util.ModelUtils.java", "BodyUseAPI": [], "Fixed commit": "812bf525d67d55d3905140771b594e4f41299b88", "Url": "https://api.github.com/repos/pulse00/Symfony-2-Eclipse-Plugin", "Date": "2011-08-06T14:05:43Z"},
{"Line": "=>1320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["orgomg.cwm.objectmodel.core.ModelElement.eResource()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (modEResource != null) { java.util.Iterator<org.eclipse.emf.ecore.EObject> iterator = modEResource.getContents().iterator(); while (iterator.hasNext()) { org.eclipse.emf.ecore.EObject eObject = iterator.next(); if ((eObject instanceof orgomg.cwm.objectmodel.core.Dependency) && (!(supplierDependencys.contains(eObject)))) { iterator.remove(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1639/buggy-version/main.plugins.org.talend.dataprofiler.core.src.org.talend.dataprofiler.core.ui.imex.model.FileSystemImportWriter.java", "BodyUseAPI": ["org.eclipse.emf.ecore.resource.Resource.getContents()", "modEResource.getContents().iterator()"], "Fixed commit": "39223750155e7bf7f702ee9cd5751262832b594e", "Url": "https://api.github.com/repos/Talend/tdq-studio-se", "Date": "2017-09-21T09:58:01Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (logger.isInfoEnabled()) { logger.info(\"New tree is now {}\", tree.toPrettyString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4832/buggy-version/applications.dummy.src.main.java.com.github.afide.model.SimpleModel.java", "BodyUseAPI": ["com.github.afide.model.SimpleModel.info(java.lang.String,tree.toPrettyString())"], "Fixed commit": "25e0526a456db3e70f14b64596b3aa78f54db179", "Url": "https://api.github.com/repos/afide/capraia", "Date": "2017-03-22T02:12:10Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.afide.model.SimpleModel<T>.getBytable(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (null == value) { logger.warn(\"Invalid transaction value, bytable value is null\"); return false; }else { if (logger.isInfoEnabled()) { logger.info(\"Validated tx value {}\", value.toPrettyString()); } return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4832/buggy-version/applications.dummy.src.main.java.com.github.afide.model.SimpleModel.java", "BodyUseAPI": ["com.github.jtmsp.merkletree.byteable.IByteable.toPrettyString()", "com.github.afide.model.SimpleModel.info(java.lang.String,value.toPrettyString())"], "Fixed commit": "25e0526a456db3e70f14b64596b3aa78f54db179", "Url": "https://api.github.com/repos/afide/capraia", "Date": "2017-03-22T02:12:10Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mrp.getPriority()) != null) order.setPriorityRule(mrp.getPriority());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/732/buggy-version/src.main.java.base.org.eevolution.process.MRPSchedule.java", "BodyUseAPI": ["org.eevolution.model.MPPOrder.setPriorityRule(mrp.getPriority())", "org.eevolution.model.MPPMRP.getPriority()"], "Fixed commit": "7cdf2231397a8905b34c195036bbca9b65bdf753", "Url": "https://api.github.com/repos/adempiere/extension_libero_manufacturing", "Date": "2014-12-12T05:03:18Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((eachPublication.getAbstractText()) == null) || ((eachPublication.getAbstractText().length()) < lengthOfComparedAbstractText)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1481/buggy-version/src.main.java.de.rwth.i9.palm.datasetcollect.service.PublicationCollectionService.java", "BodyUseAPI": [], "Fixed commit": "428d1c49fb92753621831681c8f1cd81b5964e8d", "Url": "https://api.github.com/repos/palm-toolkit/palm-core", "Date": "2015-10-01T18:23:55Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.isssr.foodemperors.model.Product.getPropertyList()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (propertyList == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6758/buggy-version/src.main.java.com.isssr.foodemperors.model.Product.java", "BodyUseAPI": [], "Fixed commit": "091f05d5fd9a75f73617c1afba43fd3967f140d3", "Url": "https://api.github.com/repos/calmar3/foodemperors", "Date": "2017-06-20T08:33:32Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(recipe.isFavorite())) menu.add(0, MENU_FAVORITE, 0, \"\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0432 \u0438\u0437\u043e\u0431\u0440\u0430\u043d\u043d\u043e\u0435\"); else menu.add(1, MENU_FAVORITE_DEL, 1, \"\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0438\u0437 \u0438\u0437\u0431\u0440\u0430\u043d\u043d\u043e\u0433\u043e\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4901/buggy-version/LetsCook.app.src.main.java.com.julia_sk.favorite.RecipeActivity.java", "BodyUseAPI": [], "Fixed commit": "8233d59e484f412167e9419deeb2ab06d4b4eda4", "Url": "https://api.github.com/repos/sailormoon11/LetsCookProject1", "Date": "2017-01-11T04:36:32Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(inScene)) faRenderer.update(delta);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8224/buggy-version/adventure-composer.src.main.java.com.bladecoder.engineeditor.scneditor.ScnWidget.java", "BodyUseAPI": [], "Fixed commit": "31029b3ec216800cfecc3045cae36d00ca33e5b2", "Url": "https://api.github.com/repos/bladecoder/bladecoder-adventure-engine", "Date": "2015-03-04T13:50:34Z"},
{"Line": "=>7", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list == null) throw new java.lang.NullPointerException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1467/buggy-version/sort.src.InsertionSort.java", "BodyUseAPI": [], "Fixed commit": "d763b2a999bd730b124a183cf6f85bd8a2699810", "Url": "https://api.github.com/repos/Konstantin8105/GenericSort", "Date": "2016-03-27T11:47:43Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list.size()) == 1) return new java.util.ArrayList<>(list);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1467/buggy-version/sort.src.InsertionSort.java", "BodyUseAPI": [], "Fixed commit": "d763b2a999bd730b124a183cf6f85bd8a2699810", "Url": "https://api.github.com/repos/Konstantin8105/GenericSort", "Date": "2016-03-27T11:47:43Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list.size()) == 0) throw new java.lang.IndexOutOfBoundsException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1467/buggy-version/sort.src.InsertionSort.java", "BodyUseAPI": [], "Fixed commit": "d763b2a999bd730b124a183cf6f85bd8a2699810", "Url": "https://api.github.com/repos/Konstantin8105/GenericSort", "Date": "2016-03-27T11:47:43Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(varNonRef.isVariant())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4318/buggy-version/src.main.java.org.snpeff.snpEffect.commandLine.SnpEffCmdEff.java", "BodyUseAPI": [], "Fixed commit": "7854f0cd2946eedf6541b6d5f86f7e062032f27a", "Url": "https://api.github.com/repos/pcingola/SnpEff", "Date": "2017-08-12T16:00:54Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((genotype) == null) { genotype = variant.getReference(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4318/buggy-version/src.main.java.org.snpeff.interval.VariantNonRef.java", "BodyUseAPI": [], "Fixed commit": "7854f0cd2946eedf6541b6d5f86f7e062032f27a", "Url": "https://api.github.com/repos/pcingola/SnpEff", "Date": "2017-08-12T16:00:54Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((variantRef.getGenotype()) == null) { return genotype; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4318/buggy-version/src.main.java.org.snpeff.interval.VariantNonRef.java", "BodyUseAPI": [], "Fixed commit": "7854f0cd2946eedf6541b6d5f86f7e062032f27a", "Url": "https://api.github.com/repos/pcingola/SnpEff", "Date": "2017-08-12T16:00:54Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gaia.cu9.ari.gaiaorbit.render.ComponentType.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(ct.id.equals(name))) buttonMap.put(ct.id, button);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6599/buggy-version/core.src.gaia.cu9.ari.gaiaorbit.interfce.components.VisibilityComponent.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.badlogic.gdx.scenes.scene2d.ui.Button>.put(ct.id,com.badlogic.gdx.scenes.scene2d.ui.Button)"], "Fixed commit": "292d1d84a0b3b98df7c234249a9cf928a3fc9a72", "Url": "https://api.github.com/repos/langurmonkey/gaiasky", "Date": "2017-05-19T06:55:24Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sample > (centre)) { if (sample < ((int) (((float) (maxref)) * ((float) (1.25))))) { if (((jitter) == (-1)) && ((lastSample) < (centre))) jitter = i; } }else { if (sample > ((int) (((float) (minref)) * ((float) (1.25))))) { if (((jitter) == (-1)) && ((lastSample) > (centre))) jitter = i; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2510/buggy-version/src.com.dmr.DMRDecode.java", "BodyUseAPI": [], "Fixed commit": "53954bce2fa46475beba427966b69e55bb1a1237", "Url": "https://api.github.com/repos/IanWraith/DMRDecode", "Date": "2011-02-11T09:15:18Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (changeSet.contains(\"name\")) { validate(inventory, errors); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5321/buggy-version/src.main.java.com.ofs.validations.inventory.ValidateInventoryNameDNE.java", "BodyUseAPI": [], "Fixed commit": "64571f9735fa14cd2122240ba322a7e5af262196", "Url": "https://api.github.com/repos/mwpenna/OFSInventoryService", "Date": "2017-07-13T00:46:17Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(batchstarter.CsgoSounds.convertpath.toString().equals(\"\"))) { chooser.setCurrentDirectory(batchstarter.CsgoSounds.convertpath.toFile()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/557/buggy-version/src.batchstarter.CsgoSounds.java", "BodyUseAPI": ["javax.swing.JFileChooser.setCurrentDirectory(java.io.File)", "java.nio.file.Path.toFile()"], "Fixed commit": "2723e25818351d206a60adccf5ad366646fe3a72", "Url": "https://api.github.com/repos/Zyboarg/Csgo-Switcher", "Date": "2015-09-12T13:36:23Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (expr instanceof BuiltIn) { return apply(((Closure) (expr)), expr.getCdr()).getCar(); }else { if (expr instanceof Ident) { Node val = ref.assq(((Ident) (expr))); if (val != null) { expr = val; }else { java.lang.System.err.println(((((Ident) (expr)).getName()) + \" is not defined.\")); } } return expr; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8842/buggy-version/src.Interpreter.java", "BodyUseAPI": ["Node.getCar()", "Interpreter.apply(Node,expr.getCdr())", "Node.getCdr()"], "Fixed commit": "23ba6daf5f7f4a5df4b4146bf7170f42cb15352b", "Url": "https://api.github.com/repos/boubre/cs4101_Scheme_Interpreter", "Date": "2012-11-16T00:27:16Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bob.sun.mpod.service.PlayerService.getCurrentSong()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (bean == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4550/buggy-version/app.src.main.java.bob.sun.mpod.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "17ae213c53663a197d735c450a3a28d2faa96ce6", "Url": "https://api.github.com/repos/SpongeBobSun/Prodigal", "Date": "2015-06-12T06:47:45Z"},
{"Line": "=>1981", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.getIdentity()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (id.isValid()) if (id.isPersistent()) { final com.orientechnologies.orient.core.record.ORecord connected = ((com.orientechnologies.orient.core.db.record.OIdentifiable) (fieldValue)).getRecord(); if (connected == null) return true; }else return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/907/buggy-version/tools.src.main.java.com.orientechnologies.orient.console.OConsoleDatabaseApp.java", "BodyUseAPI": ["com.orientechnologies.orient.core.id.ORID.isPersistent()"], "Fixed commit": "1c6875570e58866d7e90d9992e16523d1c137dff", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-04-20T17:58:39Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["expressionResult.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((stringPlus.isEmpty()) || (stringPlus.equals(\"-\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8935/buggy-version/app.src.main.java.com.example.chloe.calculator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e5d2df5f6ce120c11522f1018955509a3d54b0a3", "Url": "https://api.github.com/repos/cehan-Chloe/SimpleCalculator", "Date": "2016-09-30T03:13:56Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((lastInput) == 1) && (!(stringDot.isEmpty()))) && (!(stringDot.equals(\"-\")))) { expressionResult.setText(\"0.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8935/buggy-version/app.src.main.java.com.example.chloe.calculator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e5d2df5f6ce120c11522f1018955509a3d54b0a3", "Url": "https://api.github.com/repos/cehan-Chloe/SimpleCalculator", "Date": "2016-09-30T03:13:56Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["expressionResult.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((stringMinus.isEmpty()) || (stringMinus.equals(\"-\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8935/buggy-version/app.src.main.java.com.example.chloe.calculator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e5d2df5f6ce120c11522f1018955509a3d54b0a3", "Url": "https://api.github.com/repos/cehan-Chloe/SimpleCalculator", "Date": "2016-09-30T03:13:56Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["expressionResult.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((curOP == 2) && (myString.isEmpty())) { myString = \"-\"; expressionResult.setText(myString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8935/buggy-version/app.src.main.java.com.example.chloe.calculator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e5d2df5f6ce120c11522f1018955509a3d54b0a3", "Url": "https://api.github.com/repos/cehan-Chloe/SimpleCalculator", "Date": "2016-09-30T03:13:56Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.osmand.map.TileSourceManager.getLocalTileSourceTemplates(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (availableSourceTemplates != null) { availableSourceTemplates.addAll(net.osmand.map.TileSourceManager.downloadTileSourceTemplates(net.osmand.plus.Version.getVersionAsURLParam(app))); return availableSourceTemplates; }else { return net.osmand.map.TileSourceManager.downloadTileSourceTemplates(net.osmand.plus.Version.getVersionAsURLParam(app)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1863/buggy-version/OsmAnd.src.net.osmand.plus.rastermaps.OsmandRasterMapsPlugin.java", "BodyUseAPI": ["java.util.List<net.osmand.map.TileSourceManager.TileSourceTemplate>.addAll(net.osmand.map.TileSourceManager.downloadTileSourceTemplates(net.osmand.plus.Version.getVersionAsURLParam(app)))"], "Fixed commit": "4522b9eafbd9547445e46c85dd5e09cff8f90319", "Url": "https://api.github.com/repos/swkim01/Osmand", "Date": "2015-02-11T07:15:13Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(inputBuffer.hasRemaining())) { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4619/buggy-version/src.main.java.org.jboss.stdio.WriterOutputStream.java", "BodyUseAPI": [], "Fixed commit": "9730364bee6da8a2ec6255b894d16b32ca26de99", "Url": "https://api.github.com/repos/stuartwdouglas/jboss-stdio", "Date": "2011-05-11T02:59:52Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(inputBuffer.hasRemaining())) { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4619/buggy-version/src.main.java.org.jboss.stdio.WriterOutputStream.java", "BodyUseAPI": [], "Fixed commit": "9730364bee6da8a2ec6255b894d16b32ca26de99", "Url": "https://api.github.com/repos/stuartwdouglas/jboss-stdio", "Date": "2011-05-11T02:59:52Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (position != (arrayListCount.size())) { notifyItemRangeChanged(position, ((arrayListCount.size()) - position)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5762/buggy-version/src.main.java.com.zhoumushui.calendar.adapter.CountRecyclerAdapter.java", "BodyUseAPI": ["com.zhoumushui.calendar.adapter.CountRecyclerAdapter.notifyItemRangeChanged(int,((arrayListCount.size()) - position))", "java.util.ArrayList<com.zhoumushui.calendar.Count>.size()"], "Fixed commit": "af803753c1bdd4e57ddc26e9229ae953e14cad4c", "Url": "https://api.github.com/repos/zhoumushui/calendar", "Date": "2017-04-10T16:02:57Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.exists())) { final java.lang.String msg = java.lang.String.format(\"Suppression file '%s' does not exists\", file.getPath()); org.owasp.dependencycheck.analyzer.AbstractSuppressionAnalyzer.LOGGER.warn(msg); throw new org.owasp.dependencycheck.xml.suppression.SuppressionParseException(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3117/buggy-version/dependency-check-core.src.main.java.org.owasp.dependencycheck.analyzer.AbstractSuppressionAnalyzer.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String)", "java.io.File.getPath()"], "Fixed commit": "9150df964f4a85474a503d8473d0be448ce531d5", "Url": "https://api.github.com/repos/jeremylong/DependencyCheck", "Date": "2016-10-16T11:31:17Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((appDto.getAssessmentStatus()) != null) { java.lang.Double.parseDouble(appDto.getAssessmentStatus()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6490/buggy-version/gde-backend.src.main.java.com.nagarro.gde.service.ApplicationDataServiceImpl.java", "BodyUseAPI": ["com.nagarro.gde.dto.ApplicationDataDto.getAssessmentStatus()", "java.lang.Double.parseDouble(appDto.getAssessmentStatus())"], "Fixed commit": "e87573d7c8b2b5412b1aa289d636d123b9ede939", "Url": "https://api.github.com/repos/nagarro-gde/GDE", "Date": "2015-04-16T09:08:31Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (atmosphereHandlerWrapper == null) { path = (path.substring(0, path.lastIndexOf(\"/\"))) + \"/*\"; atmosphereHandlerWrapper = config.handlers().get(path); if (atmosphereHandlerWrapper == null) { if (!(path.endsWith(\"/\"))) { path += \"/*\"; }else { path += \"*\"; } atmosphereHandlerWrapper = config.handlers().get(path); if (atmosphereHandlerWrapper == null) { org.atmosphere.cpr.AsynchronousProcessor.logger.warn(\"No AtmosphereHandler maps request for {}\", path); for (java.lang.String m : config.handlers().keySet()) { org.atmosphere.cpr.AsynchronousProcessor.logger.warn(\"\\tAtmosphereHandler registered: {}\", m); } throw new javax.servlet.ServletException((\"No AtmosphereHandler maps request for \" + path)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6669/buggy-version/modules.cpr.src.main.java.org.atmosphere.cpr.AsynchronousProcessor.java", "BodyUseAPI": [], "Fixed commit": "04ff571a4604c47f7bd9baa4ed48341962170359", "Url": "https://api.github.com/repos/Atmosphere/atmosphere", "Date": "2011-11-24T13:58:28Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(userResponse.isEmpty())) && ((userResponse.length()) > 2)) { player.sendMessage((((org.bukkit.ChatColor.RED) + \"Home location(s): \") + (userResponse.substring(2)))); }else { player.sendMessage(((org.bukkit.ChatColor.RED) + \"No home locations defined.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4627/buggy-version/src.net.madmanmarkau.MultiHome.MultiHome.java", "BodyUseAPI": ["java.lang.String.substring(int)", "org.bukkit.entity.Player.sendMessage((((org.bukkit.ChatColor.RED) + \"Home location(s): \") + (userResponse.substring(2))))"], "Fixed commit": "6ca8c7481b45282928fb0e871c257f2f95f63be2", "Url": "https://api.github.com/repos/MadManMarkAu/MultiHome", "Date": "2011-04-03T11:24:36Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((helpPageList.size()) > 0) { helpTitle += (((\" (\" + pageNumber) + \"/\") + (helpPageList.size())) + \") \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2505/buggy-version/src.main.java.com.netprogs.minecraft.plugins.assassins.help.HelpBook.java", "BodyUseAPI": ["java.util.List<com.netprogs.minecraft.plugins.assassins.help.HelpPage>.size()"], "Fixed commit": "1e2b5f973d7c702605f3fbb775ab1b68fac91bae", "Url": "https://api.github.com/repos/Netprogs/Assassins", "Date": "2012-08-25T14:25:18Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((stores.length) < 4) { javax.swing.JOptionPane.showMessageDialog(uk.ac.babraham.SeqMonk.SeqMonkApplication.getInstance(), ((\"<html>Sorry - you can't run Tsne with fewer than 4 datasets.<br>You only had \" + (stores.length)) + \" valid data stores</html>\"), \"Can't run Tsne\", javax.swing.JOptionPane.INFORMATION_MESSAGE); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/9114/buggy-version/uk.ac.babraham.SeqMonk.Displays.TsneDataStorePlot.TsneOptionsDialog.java", "BodyUseAPI": [], "Fixed commit": "3c31ba8570e21ae57167ba5a3e4ca6ccfbf0a5fe", "Url": "https://api.github.com/repos/s-andrews/SeqMonk", "Date": "2017-06-13T08:40:31Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mifosplatform.portfolio.loanaccount.service.LoanChargeAssembler.fromParsedJson(command.parsedJson())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(possiblyModifedLoanCharges.isEmpty())) { if (!(possiblyModifedLoanCharges.containsAll(existingCharges))) { isChargeModified = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1010/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.portfolio.loanaccount.service.LoanApplicationWritePlatformServiceJpaRepositoryImpl.java", "BodyUseAPI": ["java.util.Set<org.mifosplatform.portfolio.loanaccount.domain.LoanCharge>.containsAll(java.util.Set<org.mifosplatform.portfolio.loanaccount.domain.LoanCharge>)"], "Fixed commit": "e1313fd254d0aa6d6295fefbff4f8569910cebc8", "Url": "https://api.github.com/repos/samsruti/mifosx", "Date": "2014-11-16T19:54:55Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (input.equals(\"\")) { return; }else if (decimalToHexRadioButton.isSelected()) { output = decimalToHexConverter.decimalToHex(java.lang.Integer.parseInt(input)); }else if (hexToDecimalRadioButton.isSelected()) { output = java.lang.Long.toString(hexToDecimalConverter.hexToDecimal(input)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/542/buggy-version/src.main.ConverterGUIClass.java", "BodyUseAPI": ["conversionTools.DecimalToHexConverter.decimalToHex(int)", "java.lang.Integer.parseInt(java.lang.String)", "conversionTools.HexToDecimalConverter.hexToDecimal(java.lang.String)", "java.lang.Long.toString(hexToDecimalConverter.hexToDecimal(input))"], "Fixed commit": "79812d8361a5aa88bf6e2d97d03a87fbdc7201c3", "Url": "https://api.github.com/repos/kevinb22/hex-decimal-converter", "Date": "2016-09-07T04:32:21Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["JaideepSinghHeer.Minecraft.mod.PropertyManagerClient.getIntProperty(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (d > 0) dist.set(customPlayerList, d);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6282/buggy-version/src.main.java.JaideepSinghHeer.Minecraft.mod.ServerPropertiesLAN.java", "BodyUseAPI": ["java.lang.reflect.Field.set(net.minecraft.server.management.PlayerList,int)"], "Fixed commit": "9aaf6e17a341b71be76fdf97075b1e6b86800707", "Url": "https://api.github.com/repos/jaideepheer/MinecraftForge-Mods-ServerPropertiesLAN", "Date": "2017-01-15T10:33:51Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["orego.experiment.Game.play()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (winner >= 0) { (wins[winner])++; }else { i--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4110/buggy-version/src.orego.experiment.parallel.GameBatch.java", "BodyUseAPI": [], "Fixed commit": "fbb314f63d4b9606f16ef0d9cce991bfe1c4db80", "Url": "https://api.github.com/repos/Orego/Orego", "Date": "2013-05-28T16:24:13Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((config.getKeys((path + \"auto-blocks\"))) == null) config.addNode((path + \"auto-blocks\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7351/buggy-version/src.main.java.com.sk89q.craftbook.mechanics.BounceBlocks.java", "BodyUseAPI": ["com.sk89q.util.yaml.YAMLProcessor.addNode(java.lang.String)"], "Fixed commit": "c2996721651c609cade6182a16295d957f796e4f", "Url": "https://api.github.com/repos/sk89q/CraftBook", "Date": "2014-08-08T05:56:29Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((time2[0].equals(\"12\")) && (time2[2].equals(\"am\"))) { numTime2 = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3124/buggy-version/app.src.main.java.com.example.ryanmak.organizerapp.Routine_Activity.ScheduleModel.java", "BodyUseAPI": [], "Fixed commit": "affa9ad95b1524823d5c33f398e7d0e371754c37", "Url": "https://api.github.com/repos/ryanmak/OrganizerApp", "Date": "2017-12-04T04:18:23Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.duracloud.s3storage.S3StorageProvider.getStoragePolicy()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (null != storagePolicy) { setSpaceLifecycle(bucketName, storagePolicy.getBucketLifecycleConfig()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2005/buggy-version/s3storageprovider.src.main.java.org.duracloud.s3storage.S3StorageProvider.java", "BodyUseAPI": ["org.duracloud.s3storage.StoragePolicy.getBucketLifecycleConfig()", "org.duracloud.s3storage.S3StorageProvider.setSpaceLifecycle(java.lang.String,storagePolicy.getBucketLifecycleConfig())"], "Fixed commit": "375c5133f9180ab92dc90ec84b8cef8df6e19942", "Url": "https://api.github.com/repos/duracloud/duracloud", "Date": "2015-09-26T05:46:25Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (context instanceof android.app.Activity) ((android.app.Activity) (context)).onBackPressed();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4407/buggy-version/carbon.src.main.java.carbon.widget.Toolbar.java", "BodyUseAPI": [], "Fixed commit": "7e0598b5c60f2f845c121a4ce16f367fcbea20bd", "Url": "https://api.github.com/repos/mkorniluk/Carbon", "Date": "2016-02-19T20:58:05Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (deltaTm != 0) { float rise = ((tracklog.getAltitudeMM(i)) - (tracklog.getAltitudeMM((i - 1)))) / deltaTm; rise = java.lang.Math.min(java.lang.Math.max(rise, minMMeterSec), maxMMeterSec); float level = ((rise - (minMMeterSec)) / ((maxMMeterSec) - (minMMeterSec))) * 255.0F; mColors.add(trackPaints[((int) (level))]); }else mColors.add(trackPaints[127]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1387/buggy-version/src.com.geeksville.maps.TracklogOverlay.java", "BodyUseAPI": [], "Fixed commit": "dd044ad03a996b8c29e2fbc0852a86648541e81a", "Url": "https://api.github.com/repos/kubrin/Gaggle", "Date": "2016-01-26T07:26:28Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.valueOf(char[],int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((fileData.length()) == 0) && (readData.startsWith(com.orientechnologies.common.io.OIOUtils.UTF8_BOM))) readData = readData.substring(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7884/buggy-version/core.src.main.java.com.orientechnologies.common.io.OIOUtils.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "9146fcb137cb2a70261224c41f2f41b7b323e99a", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-04-16T08:36:03Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ref.getDeclaringType()) != null) { if ((ref.getDeclaringType().getPackage()) != null) { if (ref.getDeclaringType().getPackage().equals(this.targetType.getPackage())) { addClassImport(ref.getDeclaringType()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7980/buggy-version/src.main.java.spoon.reflect.visitor.ImportScannerImpl.java", "BodyUseAPI": ["spoon.reflect.reference.CtExecutableReference.getDeclaringType()", "spoon.reflect.reference.CtExecutableReference.getDeclaringType()", "spoon.reflect.visitor.ImportScannerImpl.addClassImport(ref.getDeclaringType())", "spoon.reflect.reference.CtExecutableReference.getDeclaringType()", "ref.getDeclaringType().getPackage()", "ref.getDeclaringType().getPackage().equals(this.targetType.getPackage())", "ref.getDeclaringType().getPackage()"], "Fixed commit": "bdeef5516b5c29755f71a8906a00c621f97cf727", "Url": "https://api.github.com/repos/surli/spoon", "Date": "2016-12-10T19:09:24Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ref.getDeclaringType()) != null) { if (((ref.getDeclaringType().getPackage()) != null) && (!(ref.getDeclaringType().getPackage().isUnnamedPackage()))) { if (!(ref.getDeclaringType().getPackage().getSimpleName().equals(\"java.lang\"))) { if (!(ref.getDeclaringType().getPackage().getSimpleName().equals(pack.getSimpleName()))) { refs.add(ref); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7980/buggy-version/src.main.java.spoon.reflect.visitor.ImportScannerImpl.java", "BodyUseAPI": ["ref.getDeclaringType().getPackage()", "ref.getDeclaringType().getPackage().getSimpleName().equals(java.lang.String)", "ref.getDeclaringType().getPackage().getSimpleName().equals(pack.getSimpleName())", "ref.getDeclaringType().getPackage()", "ref.getDeclaringType().getPackage().isUnnamedPackage()", "spoon.reflect.reference.CtExecutableReference<?>.getDeclaringType()", "java.util.List<spoon.reflect.reference.CtExecutableReference<?>>.add(spoon.reflect.reference.CtExecutableReference<?>)", "ref.getDeclaringType().getPackage().getSimpleName()", "ref.getDeclaringType().getPackage()", "ref.getDeclaringType().getPackage().getSimpleName()", "ref.getDeclaringType().getPackage()", "spoon.reflect.reference.CtExecutableReference<?>.getDeclaringType()", "spoon.reflect.reference.CtExecutableReference<?>.getDeclaringType()", "spoon.reflect.reference.CtExecutableReference<?>.getDeclaringType()"], "Fixed commit": "bdeef5516b5c29755f71a8906a00c621f97cf727", "Url": "https://api.github.com/repos/surli/spoon", "Date": "2016-12-10T19:09:24Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tk.travisdeshotels.bracketgenerator.dao.BracketDao.findByPlayer1(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"[]\".equals(bracketTypes.toString())) { bracketTypes = bracketDao.findByPlayer2(player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1773/buggy-version/src.main.java.tk.travisdeshotels.bracketgenerator.rest.controller.BracketController.java", "BodyUseAPI": [], "Fixed commit": "7f6914c3ebc71dc0b10b2377ff50240c9f4c04d1", "Url": "https://api.github.com/repos/travis-deshotels/BracketGeneratorJava", "Date": "2017-02-16T04:18:23Z"},
{"Line": "=>1282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((gdsc.smlm.ij.plugins.BenchmarkSpotFit.fitConfig.getFitSolver()) == (gdsc.smlm.fitting.FitSolver.MLE)) && (gdsc.smlm.ij.plugins.BenchmarkSpotFit.fitConfig.isModelCamera())) name += \" Camera\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7151/buggy-version/src.main.java.gdsc.smlm.ij.plugins.BenchmarkSpotFit.java", "BodyUseAPI": [], "Fixed commit": "88a9283083021fbd2c7fd68d1b112864b3393d6e", "Url": "https://api.github.com/repos/aherbert/GDSC-SMLM", "Date": "2016-07-21T15:26:42Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((board[x1][y1].getRank()) != '9') && ((((java.lang.Math.abs((x1 - x2))) > 1) || ((java.lang.Math.abs((y1 - y2))) > 1)) || (((java.lang.Math.abs((x1 - x2))) == 1) && ((java.lang.Math.abs((y1 - y2))) == 1)))) { return false; }else if (((board[x1][y1].getRank()) == '9') && ((((java.lang.Math.abs((x1 - x2))) >= 1) && ((java.lang.Math.abs((y1 - y2))) >= 1)) || (((java.lang.Math.abs((x1 - x2))) == 1) && ((java.lang.Math.abs((y1 - y2))) == 1)))) { return false; }else if (anyoneInTheWay(x1, y1, x2, y2)) { return false; }else if ((board[x2][y2]) == null) { board[x2][y2] = board[x1][y1]; board[x2][y2].setIsRevealed(true); board[x1][y1] = null; return true; }else if ((board[x1][y1].getTeamNumber()) == (board[x2][y2].getTeamNumber())) { return false; }else { if ((board[x2][y2].getRank()) == 'F') { }else if ((board[x2][y2].getRank()) == 'B') { if ((board[x1][y1].getRank()) == '8') { board[x2][y2] = board[x1][y1]; board[x2][y2].setIsRevealed(true); board[x1][y1] = null; return true; }else { board[x1][y1] = null; return true; } }else if ((board[x1][y1].getRank()) == 'S') { if ((board[x2][y2].getRank()) == '1') { board[x2][y2] = board[x1][y1]; board[x2][y2].setIsRevealed(true); board[x1][y1] = null; return true; }else { board[x1][y1] = null; return true; } }else { int rank1 = java.lang.Character.getNumericValue(board[x1][y1].getRank()); int rank2 = java.lang.Character.getNumericValue(board[x2][y2].getRank()); if (rank1 < rank2) { board[x2][y2] = board[x1][y1]; board[x2][y2].setIsRevealed(true); board[x1][y1] = null; return true; }else if (rank1 == rank2) { board[x1][y1] = null; board[x2][y2] = null; return true; }else { board[x1][y1] = null; board[x2][y2].setIsRevealed(true); return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4622/buggy-version/Stratego.core.src.com.game.stratego.Board.java", "BodyUseAPI": ["board[x2][y2].getRank()", "board[x1][y1].getRank()", "java.lang.Math.abs(int)", "board[x2][y2].getRank()", "board[x1][y1].getRank()", "board[x1][y1].getRank()", "board[x2][y2].setIsRevealed(boolean)", "board[x2][y2].getRank()", "board[x2][y2].getTeamNumber()", "java.lang.Character.getNumericValue(board[x1][y1].getRank())", "com.game.stratego.Board.anyoneInTheWay(int,int,int,int)", "java.lang.Math.abs(int)", "board[x2][y2].getRank()", "board[x2][y2].setIsRevealed(boolean)", "board[x2][y2].setIsRevealed(boolean)", "java.lang.Math.abs(int)", "board[x2][y2].setIsRevealed(boolean)", "board[x1][y1].getTeamNumber()", "board[x1][y1].getRank()", "board[x2][y2].setIsRevealed(boolean)", "java.lang.Math.abs(int)", "java.lang.Character.getNumericValue(board[x2][y2].getRank())"], "Fixed commit": "a3b13b5972ee72f730c05e774fc6bdc91ddc1c27", "Url": "https://api.github.com/repos/mmekker/StrategoAI", "Date": "2017-02-23T18:45:00Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fieldName == null) throw new java.lang.NullPointerException(\"Parameter fieldName is null\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7814/buggy-version/src.net.vicp.lylab.utils.Config.java", "BodyUseAPI": [], "Fixed commit": "4b462accd7267cf77ef47df077b9d9ed2028ee2b", "Url": "https://api.github.com/repos/liyang-bsy/LYLab", "Date": "2016-01-04T02:44:13Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((android.widget.EditText) (findViewById(R.id.xCord))).getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (xStr.isEmpty()) { success = false; android.widget.Toast.makeText(getApplicationContext(), \"X must have a float value\", edu.stanford.cs108.worldcreator.Editor.TOAST_LENGTHS).show(); }else x = java.lang.Float.parseFloat(xStr);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6464/buggy-version/app.src.main.java.edu.stanford.cs108.worldcreator.Editor.java", "BodyUseAPI": ["java.lang.Float.parseFloat(java.lang.String)"], "Fixed commit": "2ef51c2cbc6f179dfffe6d8291d6e04e58f5e3f7", "Url": "https://api.github.com/repos/N-Demir/WorldCreator", "Date": "2017-12-09T02:42:21Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((or.getId()) != null) { return or; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/442/buggy-version/fang.web.service.src.main.java.com.ddkfang.service.order.impl.OrdersServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "0e622de8a4168ab8a4149ba20a4574eae76c9fb3", "Url": "https://api.github.com/repos/zaqweb/kf", "Date": "2016-10-15T05:12:28Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((moedas == 1) || (moedas == 50)) { moeda.setMoeda(moedas); credito += moeda.getValor(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6741/buggy-version/MaquinaProdutos.src.Maquina.java", "BodyUseAPI": ["Moeda.setMoeda(int)"], "Fixed commit": "0938d97bfde52388fbcd13dc5f45bf7991c63715", "Url": "https://api.github.com/repos/laviniameds/Java-Projects", "Date": "2017-09-29T00:54:33Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nameEditText.getText().length()) > 0) { com.vanderbilt.people.finder.DataModel d = new com.vanderbilt.people.finder.DataModel(); d.setName(nameEditText.getText().toString()); d.setStatus(statusEditText.getText().toString()); d.setLatitude(latitude); d.setLongitude(longitude); new com.vanderbilt.people.finder.StartupActivity.UploadNewUserTask().execute(d); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8537/buggy-version/src.com.vanderbilt.people.finder.StartupActivity.java", "BodyUseAPI": ["nameEditText.getText().toString()", "com.vanderbilt.people.finder.DataModel.setName(nameEditText.getText().toString())", "android.widget.EditText.getText()"], "Fixed commit": "8e3a304823e94e511c98816c4019dda8143e37bf", "Url": "https://api.github.com/repos/whalenrp/peopleFinder", "Date": "2012-07-11T17:29:33Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((swipeView) != null) && (swipeView.isRefreshing())) swipeView.post(new java.lang.Runnable() { @java.lang.Override public void run() { swipeView.setRefreshing(false); } });", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4728/buggy-version/app.src.main.java.com.a5corp.weather.fragment.WeatherFragment.java", "BodyUseAPI": ["android.support.v4.widget.SwipeRefreshLayout.setRefreshing(boolean)", "android.support.v4.widget.SwipeRefreshLayout.post(java.lang.Runnable)"], "Fixed commit": "52db5bebe82741326512f17fc8c4ea95b38dfd2a", "Url": "https://api.github.com/repos/Sparker0i/Weather", "Date": "2017-02-23T06:08:35Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(world.isRemote)) { if ((world.getChunkProvider()) instanceof net.minecraft.world.gen.ChunkProviderServer) { net.minecraft.world.gen.ChunkProviderServer providerServer = ((net.minecraft.world.gen.ChunkProviderServer) (world.getChunkProvider())); if (!(providerServer.chunkExists(((pos.getX()) >> 4), ((pos.getZ()) >> 4)))) { return null; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3279/buggy-version/src.main.java.ValkyrienWarfareBase.PhysicsManagement.DimensionPhysObjectManager.java", "BodyUseAPI": ["net.minecraft.world.World.getChunkProvider()", "net.minecraft.world.World.getChunkProvider()"], "Fixed commit": "24a2f504c3dc35e596839a8d7a2d14633cb5ad05", "Url": "https://api.github.com/repos/ValkyrienWarfare/Valkyrien-Warfare-Revamped", "Date": "2017-03-18T12:26:51Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (startCity == endCity) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/345/buggy-version/src.thoughtworks.Trains.java", "BodyUseAPI": [], "Fixed commit": "66897ab70a252939cd46d00a3c6d17c74c247fbf", "Url": "https://api.github.com/repos/ciuf/thoughtworks", "Date": "2017-12-02T14:53:39Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDisable()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2848/buggy-version/src.main.java.gwt.material.design.client.ui.MaterialButton.java", "BodyUseAPI": [], "Fixed commit": "61ec840b9e1880b35e3a6e19be0743798ebb6c87", "Url": "https://api.github.com/repos/Kusig/kusis-gwt-material", "Date": "2015-08-24T17:19:21Z"},
{"Line": "=>842", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (oldItem != null) { drawerStringList.set(drawerStringList.indexOf(oldItem.getTitle()), newItem.getTitle()); }else { drawerStringList.add(newItem.getTitle()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1348/buggy-version/src.com.yoneko.areyouthereyet.update.MapActivity.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.set(int,newItem.getTitle())", "java.util.ArrayList<java.lang.String>.indexOf(oldItem.getTitle())", "com.yoneko.models.SimpleGeofence.getTitle()"], "Fixed commit": "59ffbc930b3082c7edb616cbff1267a125f76759", "Url": "https://api.github.com/repos/reidisaki/dumpy", "Date": "2014-09-01T20:43:21Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNew) CreateEvent(); else EditEvent();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/124/buggy-version/eclipse.qattend.src.com.mikroskil.android.qattend.ManageEventActivity.java", "BodyUseAPI": [], "Fixed commit": "59c42b3773d59436b8c3781f05bbccb7e45de032", "Url": "https://api.github.com/repos/Mikroskil/Chrone-Code", "Date": "2014-01-07T16:45:18Z"},
{"Line": "=>865", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.dobots.bluenet.utils.BleUtils.toUint8(byte)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (length == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8133/buggy-version/src.main.java.nl.dobots.bluenet.ble.core.BleCore.java", "BodyUseAPI": [], "Fixed commit": "91401812617d25b4a81fdafeb6a0ea698f427fa5", "Url": "https://api.github.com/repos/crownstone/bluenet-lib-android", "Date": "2016-11-22T13:36:24Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dak.duty.repository.DutyRepository.findOne(duty.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(duty.getActive())) && (dutyBeforeChanges.getActive())) { dutyRepos.decrementSortOrderAboveAndIncludingExcludingDutyId(dutyBeforeChanges.getSortOrder(), duty.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3133/buggy-version/src.main.java.com.dak.duty.service.DutyService.java", "BodyUseAPI": ["com.dak.duty.model.Duty.getSortOrder()", "com.dak.duty.repository.DutyRepository.decrementSortOrderAboveAndIncludingExcludingDutyId(dutyBeforeChanges.getSortOrder(),duty.getId())", "com.dak.duty.model.Duty.getId()"], "Fixed commit": "9b19584e2939989a7277888e6a8afd3f3195e3ec", "Url": "https://api.github.com/repos/davidkey/roster", "Date": "2015-06-04T02:36:53Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (vHeight >= dHeight) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7881/buggy-version/scrollparallaximageview.src.main.java.com.gjiazhe.scrollparallaximageview.parallaxstyle.VerticalAlphaStyle.java", "BodyUseAPI": [], "Fixed commit": "e64c90f0c1c64c2b73219cb0bb1e5184904b9a4f", "Url": "https://api.github.com/repos/gjiazhe/ScrollParallaxImageView", "Date": "2016-11-26T03:46:20Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.action_cancel)) { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1498/buggy-version/app.src.main.java.cpsc481.t02.animalshelter.NewAnimalForm.java", "BodyUseAPI": [], "Fixed commit": "c71ffb416b0eca0165c60b84f7dae891b9e8080f", "Url": "https://api.github.com/repos/nbrons/T02_AnimalShelter", "Date": "2016-11-25T07:36:12Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bgu.dsp.awsUtils.SQSUtils.getMessage(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (msg == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8917/buggy-version/worker.src.main.java.com.bgu.dsp.worker.Worker.java", "BodyUseAPI": [], "Fixed commit": "f0d254a6c6302fb1ed4178d0bd26473fbebd4e59", "Url": "https://api.github.com/repos/tomleibo/distributedSystems", "Date": "2016-04-13T08:19:47Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["juliano.pagetrack.frontend.service.FrontendRESTService.findContacts()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((contacts != null) && (!(contacts.isEmpty()))) { juliano.pagetrack.frontend.FrontendRESTController.logger.info((\"findContacts: contacts=\" + (contacts.size()))); for (juliano.pagetrack.common.domain.Contact c : contacts) { text += (((\"<a href=\\\"/api/v1/contact/\" + (c.getUserId())) + \"/pageaccess\\\">\") + (c.getEmail())) + \"</a><br>\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5147/buggy-version/frontend.src.main.java.juliano.pagetrack.frontend.FrontendRESTController.java", "BodyUseAPI": ["org.slf4j.Logger.info((\"findContacts: contacts=\" + (contacts.size())))", "java.util.List<juliano.pagetrack.common.domain.Contact>.size()"], "Fixed commit": "da1985f2bdc456c7735469bdcb51dafeeecbeae7", "Url": "https://api.github.com/repos/jcvacaro/pagetrack", "Date": "2017-10-11T04:35:36Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((project) != (net.sf.mzmine.main.MZmineCore.getProjectManager().getCurrentProject())) { project.removeProjectListener(listener); project = net.sf.mzmine.main.MZmineCore.getProjectManager().getCurrentProject(); project.addProjectListener(listener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1786/buggy-version/src.main.java.net.sf.mzmine.modules.batchmode.BatchTask.java", "BodyUseAPI": [], "Fixed commit": "606d9cbeeb75e7126fc6aa342c2104c0e998e448", "Url": "https://api.github.com/repos/mzmine/mzmine2", "Date": "2017-05-31T23:02:07Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.baidu.mapapi.MKPoiResult.getAllPoi()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (poiInfos == null) { android.widget.Toast.makeText(this, this.getString(R.string.empty_pos_rslt), 100); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3032/buggy-version/src.com.utopia.lijiang.LijiangMapActivity.java", "BodyUseAPI": [], "Fixed commit": "f4457ff3fb2b871ddafbf02d45dc6f5787c4852f", "Url": "https://api.github.com/repos/chao-zhou/Lijiang", "Date": "2012-04-22T07:22:19Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getMessage()) != null) { actionErrors.add(\"error\", new org.apache.struts.action.ActionMessage(e.getMessage())); }else { actionErrors.add(\"error\", new org.apache.struts.action.ActionMessage(\"label.invalid.student.number\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2517/buggy-version/src.main.java.org.fenixedu.academic.ui.struts.action.teacher.ManageExecutionCourseDA.java", "BodyUseAPI": ["org.fenixedu.academic.service.services.exceptions.FenixServiceException.getMessage()", "org.apache.struts.action.ActionErrors.add(java.lang.String,org.apache.struts.action.ActionMessage)"], "Fixed commit": "931f7c53ec93d404eded17f2e7897efb3b747b9f", "Url": "https://api.github.com/repos/sergiofbsilva/fenixedu-academic", "Date": "2015-03-30T11:28:19Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pt.ist.fenixframework.FenixFramework.getDomainObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((selectedShift.getLotacao().intValue()) <= (selectedShift.getStudentsSet().size())) { throw new org.fenixedu.academic.service.services.exceptions.FenixServiceException(\"error.exception.shift.full\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2517/buggy-version/src.main.java.org.fenixedu.academic.service.services.enrollment.shift.EnrollStudentInShifts.java", "BodyUseAPI": [], "Fixed commit": "931f7c53ec93d404eded17f2e7897efb3b747b9f", "Url": "https://api.github.com/repos/sergiofbsilva/fenixedu-academic", "Date": "2015-03-30T11:28:19Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(database.getTransaction().isActive())) { database.begin(); database.getTransaction().setUsingLog(useLog); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2787/buggy-version/graphdb.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientTransactionalGraph.java", "BodyUseAPI": ["com.tinkerpop.blueprints.impls.orient.OrientTransactionalGraph.begin()", "database.getTransaction().setUsingLog(boolean)", "com.tinkerpop.blueprints.impls.orient.OrientTransactionalGraph.getTransaction()"], "Fixed commit": "0d5a1e474eee8346279f7f1ccd1f43e5f8ea2b4e", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-10-16T14:43:02Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((mMinute) + 30) - 60) < 10) endMinute = \"0\" + endMinute;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3628/buggy-version/android-bootstrap.app.src.main.java.com.lsus.teamcoach.teamcoachapp.ui.Calender.AddEventFrag.java", "BodyUseAPI": [], "Fixed commit": "b485e7be313755e5df9d381ba0226a359a958287", "Url": "https://api.github.com/repos/donadley/TeamCoach", "Date": "2015-04-28T02:58:52Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (val < 0) val += 256;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1710/buggy-version/Source.com.drew.metadata.exif.makernotes.NikonType2MakernoteDescriptor.java", "BodyUseAPI": [], "Fixed commit": "98775ae9c899f86ab4664707bed12426b0273e66", "Url": "https://api.github.com/repos/drewnoakes/metadata-extractor", "Date": "2016-03-03T17:28:33Z"},
{"Line": "=>579", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.motechproject.mobile.omp.manager.intellivr.MessageRequest.getNotificationType()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (notificationType != null) notificationIDs.append(notificationType.getId().toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5455/buggy-version/motech-mobile-omp.src.main.java.org.motechproject.mobile.omp.manager.intellivr.IntellIVRBean.java", "BodyUseAPI": ["java.lang.StringBuilder.append(notificationType.getId().toString())", "notificationType.getId().toString()", "org.motechproject.mobile.omp.manager.intellivr.NotificationType.getId()"], "Fixed commit": "7a5dd059762c88c69f9f07f8bece85ae8bb4c1f1", "Url": "https://api.github.com/repos/motech/MOTECH-Mobile", "Date": "2011-10-08T05:22:30Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (column.isDynamic()) { org.gephi.graph.impl.TimeIndexStore timeIndexStore = getTimeIndexStore(); if (timeIndexStore != null) { if (oldValue != null) { timeIndexStore.remove(((org.gephi.graph.api.types.TimeMap) (oldValue))); } timeIndexStore.add(((org.gephi.graph.api.types.TimeMap) (value))); } }else if (((column.isIndexed()) && (columnStore != null)) && (isValid())) { value = columnStore.indexStore.set(column, oldValue, value, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8894/buggy-version/store.src.main.java.org.gephi.graph.impl.ElementImpl.java", "BodyUseAPI": ["org.gephi.graph.api.Column.isIndexed()", "columnStore.indexStore.set(org.gephi.graph.api.Column,java.lang.Object,java.lang.Object,org.gephi.graph.impl.ElementImpl)"], "Fixed commit": "011a578bea324378cc4f38710cbd46478ba6410c", "Url": "https://api.github.com/repos/gephi/graphstore", "Date": "2015-10-06T08:39:05Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (game.getState()) { switchState.setChecked(true); switchState.setText(\"Completed\"); }else { switchState.setText(\"Playing\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2536/buggy-version/app.src.main.java.com.example.vic.vglist.GameDetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "2156006aafb5fd1d28b0e9aeae91f18500fb215d", "Url": "https://api.github.com/repos/vila6/VGList", "Date": "2017-12-21T01:20:31Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((text.charAt(((text.length()) - 1))) == ' ') { text.deleteCharAt(((text.length()) - 1)); locations.remove(((locations.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7882/buggy-version/janno.src.main.java.edu.depauw.janno.TextLocationStripper.java", "BodyUseAPI": ["java.lang.StringBuilder.length()", "java.lang.StringBuilder.deleteCharAt(int)"], "Fixed commit": "25bab11cbe882fc19c8aa9ebac0ae83fb6aa836d", "Url": "https://api.github.com/repos/bhoward/NLP", "Date": "2017-07-02T03:27:55Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.newdawn.slick.GameContainer.getInput()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (input.isKeyPressed(Input.KEY_C)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1588/buggy-version/src.net.net23.paulb.ludumdare.states.Controls.java", "BodyUseAPI": [], "Fixed commit": "0913cb61cf719a95427bc9c4ebe7c9714cccfabc", "Url": "https://api.github.com/repos/Paulb23/LudumDare", "Date": "2014-04-28T12:31:32Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((currentRole != null) && (role != null)) { if ((currentRole.ordinal()) > (role.ordinal())) { role = currentRole; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/420/buggy-version/portlets.proposals-portlet.src.main.java.org.xcolab.jsp.tags.discussion.GetRoleNameTag.java", "BodyUseAPI": ["org.xcolab.jsp.tags.discussion.MemberRole.ordinal()", "org.xcolab.jsp.tags.discussion.MemberRole.ordinal()"], "Fixed commit": "c1bb669e001a33133038aad93f4810dbdfa1d40f", "Url": "https://api.github.com/repos/CCI-MIT/XCoLab", "Date": "2014-04-01T09:50:34Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (stack == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/194/buggy-version/src.com.gmail.zariust.otherdrops.data.ContainerData.java", "BodyUseAPI": [], "Fixed commit": "65b30145dee0e7b61a18a0928b210f3f9e8e1658", "Url": "https://api.github.com/repos/Zarius/Bukkit-OtherBlocks", "Date": "2011-08-30T15:07:18Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (lastSeparator > 0) { fileName = fileName.substring((lastSeparator + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3733/buggy-version/plexus-compilers.plexus-compiler-eclipse.src.main.java.org.codehaus.plexus.compiler.eclipse.EclipseJavaCompiler.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "b426970c72d59ce8d611b7c9ad51893999501997", "Url": "https://api.github.com/repos/aaronlabella/plexus-compiler", "Date": "2011-12-19T22:21:04Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((startingpoint != oldstartingpoint) && (startingpoint <= (gullevents.size()))) { if (oldstartingpoint == 0) { if (algorithms.Tools.WithinRadius(gullevents.get(oldstartingpoint).coordinate, location, epsilon)) { segmented.add(new java.util.ArrayList(gullevents.subList(oldstartingpoint, (startingpoint + 1)))); java.lang.System.out.println((((\"added = \" + oldstartingpoint) + \" \") + startingpoint)); } }else { segmented.add(new java.util.ArrayList(gullevents.subList(oldstartingpoint, (startingpoint + 1)))); java.lang.System.out.println((((\"added = \" + oldstartingpoint) + \" \") + startingpoint)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7117/buggy-version/Project.src.algorithms.Segmentation.java", "BodyUseAPI": ["java.util.ArrayList<java.util.ArrayList<algorithms.Event>>.add(java.util.ArrayList)", "java.util.ArrayList<algorithms.Event>.subList(int,int)", "java.io.PrintStream.println(java.lang.String)", "java.util.ArrayList<java.util.ArrayList<algorithms.Event>>.add(java.util.ArrayList)", "algorithms.Tools.WithinRadius(gullevents.get(oldstartingpoint).coordinate,org.openstreetmap.gui.jmapviewer.Coordinate,double)", "java.io.PrintStream.println(java.lang.String)", "java.util.ArrayList<algorithms.Event>.get(int)", "java.util.ArrayList<algorithms.Event>.subList(int,int)"], "Fixed commit": "8bf8b448c5178245e10125e9bfe79195db6afdee", "Url": "https://api.github.com/repos/LasseBlaauwbroek/AlgorithmsForGeographicalData", "Date": "2016-04-08T18:54:37Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (editable.toString().isEmpty()) { positiveButton.setClickable(false); positiveButton.setTextColor(getResources().getColorStateList(R.color.gray)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1766/buggy-version/catroid.src.org.catrobat.catroid.ui.fragment.FormulaEditorVariableListFragment.java", "BodyUseAPI": [], "Fixed commit": "714ac0670eaeaa9484f065f1f2f06afd433c014c", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2013-03-21T15:09:28Z"},
{"Line": "=>916", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((dump.getRemark()) != null) && ((dump.getRemark().length()) != 0)) { dText.append(dump.getRemark()); }else { dText.append(\"DD: \"); java.text.DateFormat df = new java.text.SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\"); java.util.Calendar c = java.util.Calendar.getInstance(); dText.append(df.format(c.getTime())); dText.append(\"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2404/buggy-version/app.src.main.java.net.basov.nfc.NFCaDump.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "net.basov.nfc.NFCaDump.getRemark()"], "Fixed commit": "675e531656b283230a3b77d672073f959476c0f3", "Url": "https://api.github.com/repos/mvbasov/Ticket-Info", "Date": "2017-07-08T13:29:31Z"},
{"Line": "=>2388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lexer.token()) == (com.alibaba.druid.sql.parser.Token.EQ)) { accept(Token.EQ); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8177/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.java", "BodyUseAPI": [], "Fixed commit": "987458f16d7512e642db4607e65adbed5f27948d", "Url": "https://api.github.com/repos/alibaba/druid", "Date": "2014-03-05T03:15:53Z"},
{"Line": "=>2373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (identifierEquals(com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.CHARACTER)) { lexer.nextToken(); accept(Token.SET); accept(Token.EQ); com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlAlterTableCharacter item = new com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlAlterTableCharacter(); item.setCharacterSet(this.exprParser.primary()); if ((lexer.token()) == (com.alibaba.druid.sql.parser.Token.COMMA)) { lexer.nextToken(); acceptIdentifier(com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.COLLATE2); accept(Token.EQ); item.setCollate(this.exprParser.primary()); } stmt.getItems().add(item); }else if ((lexer.token()) == (com.alibaba.druid.sql.parser.Token.COMMENT)) { lexer.nextToken(); if ((lexer.token()) == (com.alibaba.druid.sql.parser.Token.EQ)) { accept(Token.EQ); } stmt.getItems().add(new com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlAlterTableOption(\"COMMENT\", (('\\'' + (lexer.stringVal())) + '\\''))); lexer.nextToken(); }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8177/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.java", "BodyUseAPI": [], "Fixed commit": "987458f16d7512e642db4607e65adbed5f27948d", "Url": "https://api.github.com/repos/alibaba/druid", "Date": "2014-03-05T03:15:53Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof org.springframework.security.authentication.LockedException) { redirectStrategy.sendRedirect(httpServletRequest, httpServletResponse, \"/locked\"); }else { redirectStrategy.sendRedirect(httpServletRequest, httpServletResponse, \"/signin\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3281/buggy-version/src.main.java.twitter.web.handlers.LockedUserHandler.java", "BodyUseAPI": [], "Fixed commit": "f9f534a8bd3ae251fe413358e0c192b13e103131", "Url": "https://api.github.com/repos/studentgroupCracker/LikeTwitter", "Date": "2017-05-22T21:01:43Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(primaryActive.containsKey(effectId))) { return false; }else if (primaryActive.get(effectId)) { setPrimaryEffectId(effectId); return true; }else { myPet.sendMessageToOwner(de.Keyle.MyPet.util.MyPetBukkitUtil.setColors(de.Keyle.MyPet.util.locale.MyPetLocales.getString(\"Message.BeaconBuffNotActive\", myPet.getOwner().getLanguage())).replace(\"%buff%\", de.Keyle.MyPet.util.locale.MyPetLocales.getString((\"Name.\" + (de.Keyle.MyPet.skill.skills.implementation.Beacon.buffNames.get(effectId))), myPet.getOwner().getLanguage()))); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/9110/buggy-version/src.main.java.de.Keyle.MyPet.skill.skills.implementation.Beacon.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.lang.Boolean>.get(int)", "java.util.Map<java.lang.Integer, java.lang.String>.get(int)", "de.Keyle.MyPet.entity.types.MyPet.sendMessageToOwner(de.Keyle.MyPet.util.MyPetBukkitUtil.setColors(de.Keyle.MyPet.util.locale.MyPetLocales.getString(\"Message.BeaconBuffNotActive\", myPet.getOwner().getLanguage())).replace(\"%buff%\", de.Keyle.MyPet.util.locale.MyPetLocales.getString((\"Name.\" + (de.Keyle.MyPet.skill.skills.implementation.Beacon.buffNames.get(effectId))), myPet.getOwner().getLanguage())))", "de.Keyle.MyPet.util.locale.MyPetLocales.getString(java.lang.String,myPet.getOwner().getLanguage())", "de.Keyle.MyPet.skill.skills.implementation.Beacon.setPrimaryEffectId(int)", "de.Keyle.MyPet.util.MyPetBukkitUtil.setColors(de.Keyle.MyPet.util.locale.MyPetLocales.getString(\"Message.BeaconBuffNotActive\", myPet.getOwner().getLanguage())).replace(java.lang.String,de.Keyle.MyPet.util.locale.MyPetLocales.getString((\"Name.\" + (de.Keyle.MyPet.skill.skills.implementation.Beacon.buffNames.get(effectId))), myPet.getOwner().getLanguage()))"], "Fixed commit": "3c823450392dce4f5b2b2ec88ea888338281a6de", "Url": "https://api.github.com/repos/xXKeyleXx/MyPet", "Date": "2013-06-06T15:52:03Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(secundaryActive.containsKey(effectId))) { return false; }else if (secundaryActive.get(effectId)) { setSecondaryEffectId(effectId); return true; }else { if (effectId != 10) { myPet.sendMessageToOwner(de.Keyle.MyPet.util.MyPetBukkitUtil.setColors(de.Keyle.MyPet.util.locale.MyPetLocales.getString(\"Message.BeaconImprovedBuffNotActive\", myPet.getOwner().getLanguage())).replace(\"%buff%\", de.Keyle.MyPet.util.locale.MyPetLocales.getString((\"Name.\" + (de.Keyle.MyPet.skill.skills.implementation.Beacon.buffNames.get(effectId))), myPet.getOwner().getLanguage()))); }else { myPet.sendMessageToOwner(de.Keyle.MyPet.util.MyPetBukkitUtil.setColors(de.Keyle.MyPet.util.locale.MyPetLocales.getString(\"Message.BeaconBuffNotActive\", myPet.getOwner().getLanguage())).replace(\"%buff%\", de.Keyle.MyPet.util.locale.MyPetLocales.getString((\"Name.\" + (de.Keyle.MyPet.skill.skills.implementation.Beacon.buffNames.get(effectId))), myPet.getOwner().getLanguage()))); } return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/9110/buggy-version/src.main.java.de.Keyle.MyPet.skill.skills.implementation.Beacon.java", "BodyUseAPI": ["de.Keyle.MyPet.skill.skills.implementation.Beacon.setSecondaryEffectId(int)", "de.Keyle.MyPet.entity.types.MyPet.sendMessageToOwner(de.Keyle.MyPet.util.MyPetBukkitUtil.setColors(de.Keyle.MyPet.util.locale.MyPetLocales.getString(\"Message.BeaconImprovedBuffNotActive\", myPet.getOwner().getLanguage())).replace(\"%buff%\", de.Keyle.MyPet.util.locale.MyPetLocales.getString((\"Name.\" + (de.Keyle.MyPet.skill.skills.implementation.Beacon.buffNames.get(effectId))), myPet.getOwner().getLanguage())))", "de.Keyle.MyPet.util.locale.MyPetLocales.getString(java.lang.String,myPet.getOwner().getLanguage())", "de.Keyle.MyPet.util.locale.MyPetLocales.getString(java.lang.String,myPet.getOwner().getLanguage())", "java.util.Map<java.lang.Integer, java.lang.Boolean>.get(int)", "de.Keyle.MyPet.util.MyPetBukkitUtil.setColors(de.Keyle.MyPet.util.locale.MyPetLocales.getString(\"Message.BeaconImprovedBuffNotActive\", myPet.getOwner().getLanguage())).replace(java.lang.String,de.Keyle.MyPet.util.locale.MyPetLocales.getString((\"Name.\" + (de.Keyle.MyPet.skill.skills.implementation.Beacon.buffNames.get(effectId))), myPet.getOwner().getLanguage()))", "de.Keyle.MyPet.util.MyPetBukkitUtil.setColors(de.Keyle.MyPet.util.locale.MyPetLocales.getString(\"Message.BeaconBuffNotActive\", myPet.getOwner().getLanguage())).replace(java.lang.String,de.Keyle.MyPet.util.locale.MyPetLocales.getString((\"Name.\" + (de.Keyle.MyPet.skill.skills.implementation.Beacon.buffNames.get(effectId))), myPet.getOwner().getLanguage()))", "java.util.Map<java.lang.Integer, java.lang.String>.get(int)", "de.Keyle.MyPet.entity.types.MyPet.sendMessageToOwner(de.Keyle.MyPet.util.MyPetBukkitUtil.setColors(de.Keyle.MyPet.util.locale.MyPetLocales.getString(\"Message.BeaconBuffNotActive\", myPet.getOwner().getLanguage())).replace(\"%buff%\", de.Keyle.MyPet.util.locale.MyPetLocales.getString((\"Name.\" + (de.Keyle.MyPet.skill.skills.implementation.Beacon.buffNames.get(effectId))), myPet.getOwner().getLanguage())))", "java.util.Map<java.lang.Integer, java.lang.String>.get(int)"], "Fixed commit": "3c823450392dce4f5b2b2ec88ea888338281a6de", "Url": "https://api.github.com/repos/xXKeyleXx/MyPet", "Date": "2013-06-06T15:52:03Z"},
{"Line": "=>555", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((collectionPlayerPresenter) != null) { collectionPlayerPresenter.updateRatReacSessionActivityItem(emoticRatingNumber, gooruOid, isRatingsReactions); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1741/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.play.resource.body.ResourcePlayerMetadataPresenter.java", "BodyUseAPI": [], "Fixed commit": "bb428b57af4d6a82b032a89ac5db15bbd11620a8", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-05-22T09:43:46Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((collectionPlayerPresenter) != null) { collectionPlayerPresenter.updateRatReacSessionActivityItem(starRatingValue, resourceGooruId, org.ednovo.gooru.client.mvp.play.resource.body.ResourcePlayerMetadataPresenter.RATING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1741/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.play.resource.body.ResourcePlayerMetadataPresenter.java", "BodyUseAPI": [], "Fixed commit": "bb428b57af4d6a82b032a89ac5db15bbd11620a8", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-05-22T09:43:46Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((collectionPlayerPresenter) != null) { collectionPlayerPresenter.updateRatReacSessionActivityItem(starRatingValue, resourceGooruId, org.ednovo.gooru.client.mvp.play.resource.body.ResourcePlayerMetadataPresenter.RATING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1741/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.play.resource.body.ResourcePlayerMetadataPresenter.java", "BodyUseAPI": [], "Fixed commit": "bb428b57af4d6a82b032a89ac5db15bbd11620a8", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-05-22T09:43:46Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (named) writer.NBTWriter.writeString(out, (tag.isNamed() ? tag.getName() : \"\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3784/buggy-version/src.writer.NBTWriter.java", "BodyUseAPI": [], "Fixed commit": "6948419389108a359ba9f5b84c28901c4d97246b", "Url": "https://api.github.com/repos/sedlak477/NBTReader", "Date": "2016-10-15T19:28:37Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lines.size()) > 0) { observatory.ObservatoryLine lineToModify = lines.get(((int) ((p.time) % (lines.size())))); lineToModify.modify(p, recentData, currentTemplate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3850/buggy-version/Observatory.src.observatory.Observatory.java", "BodyUseAPI": ["java.util.ArrayList<observatory.ObservatoryLine>.get(((int) ((p.time) % (lines.size()))))", "java.util.ArrayList<observatory.ObservatoryLine>.size()"], "Fixed commit": "7df6afed6d0d114dae7b25d332c28ec909663a9d", "Url": "https://api.github.com/repos/redfieldp/observatory_2014", "Date": "2014-05-10T22:29:54Z"},
{"Line": "=>437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jetbrains.buildServer.buildTriggers.vcs.accurev.command.XMLTag.getTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((message != null) && (\"true\".equals(message.getAttributeValue(\"error\")))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4476/buggy-version/accurev-common.src.main.java.jetbrains.buildServer.buildTriggers.vcs.accurev.command.AcRunProcessExe.java", "BodyUseAPI": [], "Fixed commit": "b10da333e585b3643dcec1fc791c55589cc240d5", "Url": "https://api.github.com/repos/fgretief/teamcity-vcs-accurev-plugin", "Date": "2014-06-04T12:36:21Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.deidentifier.arx.framework.check.groupify.HashGroupify.getFirstEquivalenceClass()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((m.count) > 0) { int value = m.key[dimension]; int level = transformation[dimension]; double share = ((double) (m.count)) * (shares[dimension].getShare(value, level)); score += (m.isNotOutlier) ? share : m.count; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1595/buggy-version/src.main.org.deidentifier.arx.metric.v2.MetricMDNMLoss.java", "BodyUseAPI": [], "Fixed commit": "6234a3c951b57447bd2b1b30a43e23504abf3e64", "Url": "https://api.github.com/repos/RaffaelBild/arx", "Date": "2017-06-08T14:05:51Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.mirkosertic.gameengine.teavm.TeaVMRenderer.window.getLocation().getFullURL().contains(\"canvas\")) { theRenderer = de.mirkosertic.gameengine.teavm.pixi.Renderer.canvasRenderer(320, 200, canvasElement); }else { theRenderer = de.mirkosertic.gameengine.teavm.pixi.Renderer.autodetectRenderer(320, 200, canvasElement); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4278/buggy-version/gameengine-teavmrenderer.src.main.java.de.mirkosertic.gameengine.teavm.TeaVMRenderer.java", "BodyUseAPI": [], "Fixed commit": "d6088743919934f7edb5826f7a97464c531c13da", "Url": "https://api.github.com/repos/mirkosertic/GameComposer", "Date": "2016-08-02T21:55:45Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (jobName == null) { return null; }else if ((jobName.length()) > (org.apache.airavata.gsi.ssh.api.job.SlurmOutputParser.JOB_NAME_OUTPUT_LENGTH)) { jobName = jobName.substring(0, org.apache.airavata.gsi.ssh.api.job.SlurmOutputParser.JOB_NAME_OUTPUT_LENGTH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4941/buggy-version/tools.gsissh.src.main.java.org.apache.airavata.gsi.ssh.api.job.SlurmOutputParser.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "a6a80d5ac827976f0c637c8adf9447b98795c7c7", "Url": "https://api.github.com/repos/apache/airavata", "Date": "2015-05-13T16:03:21Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(response.getData().isPresent())) return java.util.Optional.empty();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5116/buggy-version/src.main.java.address.sync.RemoteManager.java", "BodyUseAPI": [], "Fixed commit": "6cd84273fcea0dbb6774a039cce13f1bebfed6f9", "Url": "https://api.github.com/repos/m133225/addressbook", "Date": "2016-06-20T03:07:29Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["oc.ontology.getAnnotationAssertionAxioms(org.semanticweb.owlapi.model.OWLAnnotationSubject)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (aAA.isEmpty()) { current = child.getRepresentativeElement(); children = oc.reasoner.getSubClasses(current, true); java.util.Iterator<org.semanticweb.owlapi.reasoner.Node<org.semanticweb.owlapi.model.OWLClass>> it = children.iterator(); child = it.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/4578/buggy-version/src.Telepath.java", "BodyUseAPI": [], "Fixed commit": "e713a28542c692e0e8af4ef820d3d19179761432", "Url": "https://api.github.com/repos/jaimemnds/the-telepath", "Date": "2017-05-04T20:13:45Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (ns != null) { org.eclipse.emf.ecore.EObject res = ns.findNamedElement(name); if (res instanceof org.osate.aadl2.Subcomponent) { searchResult = res; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6857/buggy-version/org.osate.xtext.aadl2.errormodel.src.org.osate.xtext.aadl2.errormodel.linking.EMLinkingService.java", "BodyUseAPI": ["org.osate.aadl2.Classifier.findNamedElement(java.lang.String)"], "Fixed commit": "c48cfa4ccceee213d31ec524977f017287eac8c7", "Url": "https://api.github.com/repos/osate/ErrorModelV2", "Date": "2014-03-19T04:40:18Z"},
{"Line": "=>696", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.quartz.spi.OperableTrigger.getNextFireTime()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (nextFireDate != null) { nextFireTime = nextFireDate.getTime(); jedis.hset(triggerHashKey, net.joelinn.quartz.jobstore.TRIGGER_NEXT_FIRE_TIME, java.lang.Long.toString(nextFireTime)); setTriggerState(RedisTriggerState.WAITING, ((double) (nextFireTime)), triggerHashKey, jedis); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/898/buggy-version/src.main.java.net.joelinn.quartz.jobstore.RedisStorage.java", "BodyUseAPI": ["java.util.Date.getTime()"], "Fixed commit": "fe7ffd72b299f956d03096f68ff475c393813d68", "Url": "https://api.github.com/repos/jlinn/quartz-redis-jobstore", "Date": "2016-12-30T23:28:45Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (msg instanceof org.zstack.compute.vm.APIGetInterdependentL3NetworksImagesMsg) { validate(((org.zstack.compute.vm.APIGetInterdependentL3NetworksImagesMsg) (msg))); }else if (msg instanceof org.zstack.compute.vm.APIUpdateVmInstanceMsg) { validate(((org.zstack.compute.vm.APIUpdateVmInstanceMsg) (msg))); }else if (msg instanceof org.zstack.compute.vm.APISetVmConsolePasswordMsg) { validate(((org.zstack.compute.vm.APISetVmConsolePasswordMsg) (msg))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6668/buggy-version/compute.src.main.java.org.zstack.compute.vm.VmInstanceApiInterceptor.java", "BodyUseAPI": [], "Fixed commit": "9064c0bef482a3f5d4d87891a2eb75ad86d93344", "Url": "https://api.github.com/repos/MaJin1996/zstack", "Date": "2017-03-13T06:33:38Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getGenreIds()) == null) || ((getGenreIds().size()) == 0)) { return null; }else { return com.liebert.lab002.Utils.translateGenre(io.realm.Realm.getDefaultInstance(), getGenreIds().get(0).getInt()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/5575/buggy-version/app.src.main.java.com.liebert.lab002.Models.Movie.java", "BodyUseAPI": [], "Fixed commit": "fa27052a77e4616ba0190a0d2309a9a583da1072", "Url": "https://api.github.com/repos/shorti1996/MoviesList", "Date": "2017-06-16T14:35:07Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.jsonrpclib.JsonResult>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((response.result) == null) { throw new com.jsonrpclib.JsonException(\"Result object required.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3030/buggy-version/src.com.jsonrpclib.JsonProxy.java", "BodyUseAPI": [], "Fixed commit": "661fc4815d37271b578d0654150dd0903a0a5195", "Url": "https://api.github.com/repos/kubatatami/JsonCallbacks", "Date": "2013-09-23T08:16:43Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jsonrpclib.ProtocolController.parseResponse(com.jsonrpclib.JsonRequest,com.jsonrpclib.JsonInputStream)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((result instanceof com.jsonrpclib.JsonSuccessResult) && (!(request.getReturnType().equals(java.lang.Void.class)))) { if ((result.result) == null) { throw new com.jsonrpclib.JsonException(\"Result object required.\"); } if (rpc.isVerifyResultModel()) { com.jsonrpclib.JsonConnector.verifyResultObject(result.result, request.getReturnType()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/3030/buggy-version/src.com.jsonrpclib.JsonConnector.java", "BodyUseAPI": ["com.jsonrpclib.JsonConnector.verifyResultObject(result.result,request.getReturnType())", "com.jsonrpclib.JsonRequest.getReturnType()"], "Fixed commit": "661fc4815d37271b578d0654150dd0903a0a5195", "Url": "https://api.github.com/repos/kubatatami/JsonCallbacks", "Date": "2013-09-23T08:16:43Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((filter.getInstructor()) != null) { predicates.add(builder.equal(root.get(\"instructor\"), filter.getInstructor())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/96/buggy-version/src.main.java.ru.strela.repository.spec.AthleteSpec.java", "BodyUseAPI": ["ru.strela.model.filter.AthleteFilter.getInstructor()", "java.util.List<ru.strela.repository.spec.Predicate>.add(builder.equal(root.get(\"instructor\"), filter.getInstructor()))", "ru.strela.repository.spec.CriteriaBuilder.equal(root.get(\"instructor\"),filter.getInstructor())"], "Fixed commit": "8c16a18996ef057bf5f8ef10c66b7c18e5ecd821", "Url": "https://api.github.com/repos/aisenpopov/strela", "Date": "2016-04-27T13:43:12Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((filter.getOrders()) == null) || (filter.getOrders().isEmpty())) { filter.addOrder(new ru.strela.model.filter.Order(\"id\", ru.strela.model.filter.OrderDirection.Asc)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/96/buggy-version/src.main.java.ru.strela.editor.controller.EditorAthleteController.java", "BodyUseAPI": ["ru.strela.model.filter.AthleteFilter.addOrder(ru.strela.model.filter.Order)"], "Fixed commit": "8c16a18996ef057bf5f8ef10c66b7c18e5ecd821", "Url": "https://api.github.com/repos/aisenpopov/strela", "Date": "2016-04-27T13:43:12Z"},
{"Line": "=>586", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == (RESULT_OK)) { boolean needShowRefreshProgress = ((requestCode == (magic.yuyong.app.AppConstant.REQUESTCODE_COMMENT)) && ((currentType) == (commentState.requestType))) || ((requestCode == (magic.yuyong.app.AppConstant.REQUESTCODE_FORWARD)) && ((currentType) == (repostState.requestType))); if (needShowRefreshProgress) { mPullToRefreshLayout.startRefresh(); listView.post(new java.lang.Runnable() { @java.lang.Override public void run() { if ((adapter.getCount()) != 0) { listView.setSelectionFromTop(1, header.findViewById(R.id.buttons_lay).getHeight()); } } }); refresh(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/2941/buggy-version/src.magic.yuyong.activity.TwitterShowActivity.java", "BodyUseAPI": [], "Fixed commit": "1a2f38bcbc34f7041441280afac220cf7093b0b3", "Url": "https://api.github.com/repos/wanyuyong/iCo", "Date": "2014-01-03T04:10:42Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(player.hasPermission(\"SJRedeem.sd\"))) { sender.sendMessage(new java.lang.StringBuilder(plugin.prefix).append(ChatColor.RED).append(\"\ufffd\ufffd\u00fb\ufffd\ufffd\u0228\ufffd\ufffd\").toString()); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7728/buggy-version/src.main.java.cc.isotopestudio.SJRedeem.sjredeem.SJRedeemCommand.java", "BodyUseAPI": [], "Fixed commit": "9a223b8f59f752c1783b547aee69a485a6ad209e", "Url": "https://api.github.com/repos/ISOTOPE-Studio/SJRedeem", "Date": "2016-02-11T10:14:04Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(sender.hasPermission(\"SJRedeem.sda\"))) { sender.sendMessage(new java.lang.StringBuilder(plugin.prefix).append(ChatColor.RED).append(\"\ufffd\ufffd\u00fb\ufffd\ufffd\u0228\ufffd\ufffd\").toString()); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/7728/buggy-version/src.main.java.cc.isotopestudio.SJRedeem.sjredeem.SJRedeemCommand.java", "BodyUseAPI": ["org.bukkit.command.CommandSender.sendMessage(new java.lang.StringBuilder(plugin.prefix).append(ChatColor.RED).append(\"\ufffd\ufffd\u00fb\ufffd\ufffd\u0228\ufffd\ufffd\").toString())"], "Fixed commit": "9a223b8f59f752c1783b547aee69a485a6ad209e", "Url": "https://api.github.com/repos/ISOTOPE-Studio/SJRedeem", "Date": "2016-02-11T10:14:04Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (values.containsKey(ItemEntry.COLUMN_ITEM_IMAGE)) { byte[] image = values.getAsByteArray(ItemEntry.COLUMN_ITEM_IMAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1320/buggy-version/app.src.main.java.com.example.android.inventory.data.InventoryProvider.java", "BodyUseAPI": ["android.content.ContentValues.getAsByteArray(ItemEntry.COLUMN_ITEM_IMAGE)"], "Fixed commit": "039fea9ebf580a665b05799d2d3b69725fd22684", "Url": "https://api.github.com/repos/ltpitt/android-inventory", "Date": "2017-03-12T00:55:35Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fileBrowser.getSelectedFile().getPath()) != null) { uri = fileBrowser.getSelectedFile().getPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/8397/buggy-version/MovieBase.src.main.java.gui.ImportWindow.java", "BodyUseAPI": ["javax.swing.JFileChooser.getSelectedFile()", "java.io.File.getPath()"], "Fixed commit": "7417cebc3d033d0fa3193fa4197269ebb921f0a6", "Url": "https://api.github.com/repos/rosetti/movie-base", "Date": "2016-11-30T16:11:25Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(movies.containsKey(id))) { throw new java.lang.IllegalArgumentException(\"No such Movie exists\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1216/buggy-version/src.main.java.io.egen.rentalflix.MovieService.java", "BodyUseAPI": [], "Fixed commit": "5e2e5a1b88db6bdfdf4048a6f6ddf7be980f8adb", "Url": "https://api.github.com/repos/vish0910/rentalflix", "Date": "2016-02-11T09:33:59Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!flag) { java.util.ArrayList<Row> ar = new java.util.ArrayList<Row>(); ar.add(r); DB.put(r.getWiFi(i).getMac(), ar); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/1706/buggy-version/src.Algo2.java", "BodyUseAPI": [], "Fixed commit": "89721886ac6d447a6935dd6a00cea299fe62d1b5", "Url": "https://api.github.com/repos/Dvir570/Geographic-Application---OOP-course", "Date": "2017-12-19T11:29:31Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (unit == (java.util.concurrent.TimeUnit.NANOSECONDS)) { formatSpec = \"%d \"; }else { formatSpec = (\"%.\" + decimals) + \"f \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/844/buggy-version/src.edu.duke.cs.osprey.tools.Stopwatch.java", "BodyUseAPI": [], "Fixed commit": "588e4f08d666996ca671330e9529dce635bae0f4", "Url": "https://api.github.com/repos/donaldlab/OSPREY3", "Date": "2016-06-20T23:30:25Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inputDialogPrice.getText().toString().equals(\"\")) { inputDialogError.setText(\"Please input your price!\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V103/6793/buggy-version/app.src.main.java.com.project.zxt.ustauctionhouse.LiveAuction.WebSocketLive.java", "BodyUseAPI": [], "Fixed commit": "09f12280598843961181e51b24d0544ecec67739", "Url": "https://api.github.com/repos/xzhouaf/Auction-House", "Date": "2015-05-11T19:48:47Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { com.tasteofuganda.app.RecipeDetailFragment detailFragment = new com.tasteofuganda.app.RecipeDetailFragment(); detailFragment.setArguments(args); getSupportFragmentManager().beginTransaction().add(R.id.recipe_detail_container, detailFragment).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5294/buggy-version/app.src.main.java.com.tasteofuganda.app.RecipeDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "fc5a21362edbaf4102c78bb3df7af7ca31867d46", "Url": "https://api.github.com/repos/atimothee/taste-of-ug", "Date": "2015-01-03T17:14:40Z"},
{"Line": "=>955", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.nist.isg.mist.lib.tilegrid.TileGrid<gov.nist.isg.mist.lib.imagetile.ImageTile<T>>.getTileThatExists()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (initImg == null) { gov.nist.isg.mist.lib.log.Log.msg(LogType.MANDATORY, \"Grid Preview Canceled.\"); gov.nist.isg.mist.lib.log.Log.msg(LogType.MANDATORY, \"Cannot find any images within the grid, check parameters.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1304/buggy-version/src.main.java.gov.nist.isg.mist.lib.executor.StitchingExecutor.java", "BodyUseAPI": [], "Fixed commit": "b34c6eaab54b62c0ead55fc86cb2a63a1b7925f6", "Url": "https://api.github.com/repos/usnistgov/MIST", "Date": "2016-12-06T15:46:31Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newlyCreated) { recursivelyAttach(arcMap, result, oldToNew, child, nodeSet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3511/buggy-version/src.main.java.edu.stanford.nlp.experiments.AMRPipelineStateBased.java", "BodyUseAPI": [], "Fixed commit": "e993764d1a90d6ba6b47ad5ad4350b3cfa6cf49e", "Url": "https://api.github.com/repos/keenon/amr", "Date": "2015-02-06T03:10:43Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i > 0) { char[] ss = ci.toCharArray(); ss[(i + 1)] = '4'; s.setCoverImg(new java.lang.String(ss)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1597/buggy-version/src.main.java.com.ideax.fm360.controller.SongC.java", "BodyUseAPI": [], "Fixed commit": "b2dd53a2dbc5c8cad7047cb8c074be4bb251b816", "Url": "https://api.github.com/repos/xxjacob/fm", "Date": "2014-04-21T12:08:30Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<me.zq.youjoin.model.UserInfo>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((info.getImg_url()) != null) && (!(info.getImg_url().equals(\"\")))) { com.squareup.picasso.Picasso.with(this).load(me.zq.youjoin.utils.StringUtils.getPicUrlList(searchResult.get(pos).getImg_url()).get(0)).resize(200, 200).centerCrop().into(holder.img); }else { holder.img.setBackgroundResource(R.mipmap.ic_account_circle_white_48dp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4826/buggy-version/app.src.main.java.me.zq.youjoin.activity.SearchUserActivity.java", "BodyUseAPI": [], "Fixed commit": "e11499c33110e83cc9caf48337f1b65797016d0b", "Url": "https://api.github.com/repos/FreedomZZQ/YouJoin-Android", "Date": "2016-05-14T16:15:33Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.name) == (other.name)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2467/buggy-version/src.main.java.com.alibaba.druid.stat.TableStat.java", "BodyUseAPI": [], "Fixed commit": "fa3a423582c5ed9bb2eb4355d1e7f84d474cb546", "Url": "https://api.github.com/repos/wenshao/druid", "Date": "2016-05-11T04:12:52Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.name) == null) | ((other.name) == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2467/buggy-version/src.main.java.com.alibaba.druid.stat.TableStat.java", "BodyUseAPI": [], "Fixed commit": "fa3a423582c5ed9bb2eb4355d1e7f84d474cb546", "Url": "https://api.github.com/repos/wenshao/druid", "Date": "2016-05-11T04:12:52Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((responseBodyResponse.code()) == 404) { model.remove(pos); }else { view().restoreShot(pos, unlikeShot); android.util.Log.i(\"dribbble\", ((responseBodyResponse.code()) + \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3924/buggy-version/app.src.main.java.com.hustunique.jianguo.dribile.presenters.LikeListPresenter.java", "BodyUseAPI": ["android.util.Log.i(java.lang.String,((responseBodyResponse.code()) + \"\"))", "retrofit2.Response<okhttp3.ResponseBody>.code()"], "Fixed commit": "cb2b67eb595d72f6d775f89242f2e16da1cb11ed", "Url": "https://api.github.com/repos/TedaLIEz/Dribile", "Date": "2016-08-04T02:58:13Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["git.status().call().getModified()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(mods.isEmpty())) { org.eclipse.jgit.api.AddCommand addCmd = git.add(); for (java.lang.String m : mods) { addCmd.addFilepattern(m); } addCmd.call(); git.commit().setMessage(\"Epona commit\").call(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7860/buggy-version/src.br.cin.ufpe.epona.scmclient.GitClient.java", "BodyUseAPI": [], "Fixed commit": "2b10a7e9aedca0df71994e2f79ae80d416984bb1", "Url": "https://api.github.com/repos/fjsj/epona", "Date": "2012-07-05T22:38:55Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((players.size()) == 1) { rand = 0; }else { rand = new java.util.Random().nextInt(players.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1458/buggy-version/src.net.erbros.Lottery.Lottery.java", "BodyUseAPI": ["java.util.Random.nextInt(int)", "java.util.ArrayList<java.lang.String>.size()"], "Fixed commit": "9a9796a43df7f8ef06a55712a5b6d4399b272324", "Url": "https://api.github.com/repos/Erbros/Lottery", "Date": "2011-03-16T12:54:38Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["AdvancedEnemy.getControlledPlanets()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((myPlanets.size()) > 0) { int targetPlanet = random.nextInt(myPlanets.size()); myTransports.get(i).setLocationTarget(myPlanets.get(targetPlanet).center); java.lang.System.out.println(\"Transports moving between planets\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7436/buggy-version/StarshipArena.src.AdvancedEnemy.java", "BodyUseAPI": ["java.util.ArrayList<Planet>.get(int)", "java.util.ArrayList<Planet>.size()", "myTransports.get(i).setLocationTarget(myPlanets.get(targetPlanet).center)", "java.util.Random.nextInt(myPlanets.size())"], "Fixed commit": "6847981fe7000a82623262568deb8a8822e12666", "Url": "https://api.github.com/repos/ShatteredIce/StarshipArena", "Date": "2017-04-06T02:58:07Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((game.planets.size()) > 0) { targetPlanet = random.nextInt(game.planets.size()); if (!(game.planets.get(targetPlanet).getTeam().equals(enemyPlayer.getTeam()))) break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7436/buggy-version/StarshipArena.src.AdvancedEnemy.java", "BodyUseAPI": [], "Fixed commit": "6847981fe7000a82623262568deb8a8822e12666", "Url": "https://api.github.com/repos/ShatteredIce/StarshipArena", "Date": "2017-04-06T02:58:07Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (maxWidth == (NO_MAXIMUM)) { return new android.graphics.Rect[]{ new android.graphics.Rect(0, 0, java.lang.Math.max(topSize.width(), bottomSize.width()), operatorHeight), topSize, bottomSize }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4558/buggy-version/src.org.teaminfty.math_dragon.view.math.MathOperationDivide.java", "BodyUseAPI": [], "Fixed commit": "cf4bcadb8d49aa7673d4b768f5242f34e981e586", "Url": "https://api.github.com/repos/denu12/math-dragon", "Date": "2013-12-13T18:36:13Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getChild(0).getBoundingBox(int,org.teaminfty.math_dragon.view.math.NO_MAXIMUM)", "getChild(1).getBoundingBox(int,org.teaminfty.math_dragon.view.math.NO_MAXIMUM)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((topSize.width()) < maxWidth) || ((bottomSize.width()) < maxWidth)) { final float factor = (maxWidth == (NO_MAXIMUM)) ? 1.0F : ((float) (maxWidth)) / (java.lang.Math.max(topSize.width(), bottomSize.width())); topSize.set(0, 0, ((int) ((topSize.width()) * factor)), topSize.height()); bottomSize.set(0, 0, ((int) ((bottomSize.width()) * factor)), bottomSize.height()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4558/buggy-version/src.org.teaminfty.math_dragon.view.math.MathOperationDivide.java", "BodyUseAPI": ["android.graphics.Rect.width()", "android.graphics.Rect.height()", "android.graphics.Rect.set(int,int,((int) ((bottomSize.width()) * factor)),bottomSize.height())", "android.graphics.Rect.width()", "java.lang.Math.max(topSize.width(),bottomSize.width())", "android.graphics.Rect.height()", "android.graphics.Rect.width()", "android.graphics.Rect.width()", "android.graphics.Rect.set(int,int,((int) ((topSize.width()) * factor)),topSize.height())"], "Fixed commit": "cf4bcadb8d49aa7673d4b768f5242f34e981e586", "Url": "https://api.github.com/repos/denu12/math-dragon", "Date": "2013-12-13T18:36:13Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmpty()) { return sample; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5195/buggy-version/SampleableListImpl.java", "BodyUseAPI": [], "Fixed commit": "fe54d33fc923b60f8131257a2f70eb0f14249464", "Url": "https://api.github.com/repos/BBK-PiJ-2014-92/cw3", "Date": "2014-11-17T13:26:25Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entryToNumber.contains(org.fundacionjala.coding.abel.BankOCR.QUESTION_MARK)) { return java.lang.String.join(\"\", entryToNumber, \" ILL\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6703/buggy-version/src.main.java.org.fundacionjala.coding.abel.BankOCR.java", "BodyUseAPI": ["java.lang.String.join(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "065f33de2a9fbeda8a7e33d46c4ac9300612c119", "Url": "https://api.github.com/repos/AT-04/coding", "Date": "2017-06-02T19:26:54Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mMapsActivity.hasLocationPermission()) { LocationServices.FusedLocationApi.requestLocationUpdates(mGoogleApiClient, mLocationRequest, this); getLocation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4468/buggy-version/app.src.main.java.ch.ralena.maptracker.LocationHelper.java", "BodyUseAPI": [], "Fixed commit": "9e639c3e13f93c453390f2b96ae13c0ae31ea52d", "Url": "https://api.github.com/repos/chickendude/MapTracker", "Date": "2017-03-24T15:40:56Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mickoo.xml.xsd2simplexml.SchemaParser.processSimpleType(com.mickoo.xml.xsd2simplexml.XSSimpleType,com.mickoo.xml.xsd2simplexml.SchemaParser.ParseContext)", "com.mickoo.xml.xsd2simplexml.SchemaParser.getJType(parseContext.currentClass.codeModel,simpleType.getName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((jType == null) && ((restrictions.pattern) != null)) { jType = parseContext.currentClass.codeModel.ref(java.lang.String.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6263/buggy-version/src.main.java.com.mickoo.xml.xsd2simplexml.SchemaParser.java", "BodyUseAPI": [], "Fixed commit": "0cf5c7f410ffa72891fabdb3fc8ad397a8bce0b8", "Url": "https://api.github.com/repos/yeshodhan/android-jaxb", "Date": "2016-01-11T02:17:03Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["emailBox.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((email == null) || ((email.length()) == 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6847/buggy-version/Bilro.app.src.main.java.com.sseo242.bilro.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "f4104d16cc050cac35201c5f74fe9fed5b82a825", "Url": "https://api.github.com/repos/ndson040496/Bilro", "Date": "2017-08-29T07:00:32Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["emailBox.getText().toString()", "passwordBox.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((((email == null) || (password == null)) || ((email.length()) == 0)) || ((password.length()) == 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6847/buggy-version/Bilro.app.src.main.java.com.sseo242.bilro.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "f4104d16cc050cac35201c5f74fe9fed5b82a825", "Url": "https://api.github.com/repos/ndson040496/Bilro", "Date": "2017-08-29T07:00:32Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.v2tech.service.GlobalHolder.getInstance().findGroupById(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (g == null) { com.v2tech.util.V2Log.e((\" didn't find group information \" + (go.gId))); }else { g.addUserToGroup(existU); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3342/buggy-version/source.src.com.v2tech.view.JNIService.java", "BodyUseAPI": ["com.v2tech.vo.Group.addUserToGroup(com.v2tech.vo.User)"], "Fixed commit": "d6ccbbba7bbce45bae30f718003b28c3d952a7b1", "Url": "https://api.github.com/repos/jiangzhen1984/V2TechConferenceClient", "Date": "2014-05-06T08:52:41Z"},
{"Line": "=>1218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAttendeeContainer) != null) { mAttendeeContainer.removeAttendee(a); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3342/buggy-version/source.src.com.v2tech.view.conference.VideoActivityV2.java", "BodyUseAPI": [], "Fixed commit": "d6ccbbba7bbce45bae30f718003b28c3d952a7b1", "Url": "https://api.github.com/repos/jiangzhen1984/V2TechConferenceClient", "Date": "2014-05-06T08:52:41Z"},
{"Line": "=>1226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAttendeeContainer) != null) { mAttendeeContainer.addAttendee(a1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3342/buggy-version/source.src.com.v2tech.view.conference.VideoActivityV2.java", "BodyUseAPI": [], "Fixed commit": "d6ccbbba7bbce45bae30f718003b28c3d952a7b1", "Url": "https://api.github.com/repos/jiangzhen1984/V2TechConferenceClient", "Date": "2014-05-06T08:52:41Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8876/buggy-version/skinlibrary.src.main.java.solid.ren.skinlibrary.loader.SkinInflaterFactory.java", "BodyUseAPI": [], "Fixed commit": "806c777cf7d86764c7eeb3d9737bf7b20552d826", "Url": "https://api.github.com/repos/burgessjp/ThemeSkinning", "Date": "2017-04-14T09:36:42Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (edgeProp.isShuffleNone()) { edgeProp.setShuffleGroup(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6570/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.parse.spark.GenSparkUtils.java", "BodyUseAPI": ["org.apache.hadoop.hive.ql.plan.SparkEdgeProperty.setShuffleGroup()"], "Fixed commit": "0bb13c590faf23091d9b63b728d6f7b4c5d336fa", "Url": "https://api.github.com/repos/lirui-intel/hive", "Date": "2014-11-07T09:34:49Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (edgeProp.isShuffleNone()) { edgeProp.setShuffleGroup(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6570/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.parse.spark.GenSparkWork.java", "BodyUseAPI": ["org.apache.hadoop.hive.ql.plan.SparkEdgeProperty.setShuffleGroup()"], "Fixed commit": "0bb13c590faf23091d9b63b728d6f7b4c5d336fa", "Url": "https://api.github.com/repos/lirui-intel/hive", "Date": "2014-11-07T09:34:49Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (maxAttempt > 0) { maxAttempt--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7530/buggy-version/WEB-INF.src.edu.wustl.catissuecore.processor.CatissueLoginProcessor.java", "BodyUseAPI": [], "Fixed commit": "770aaa7c6f260317bf5065244ac1e02d9dc474a4", "Url": "https://api.github.com/repos/NCIP/catissue-core", "Date": "2014-02-26T15:39:57Z"},
{"Line": "=>1983", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fromChain) { checkState((result != (TransactionInput.ConnectionResult.ALREADY_SPENT))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1778/buggy-version/core.src.main.java.org.bitcoinj.core.Wallet.java", "BodyUseAPI": [], "Fixed commit": "757e25ba9b43bd99a0c2165a49fba74378170f35", "Url": "https://api.github.com/repos/devrandom/bitcoinj", "Date": "2014-12-04T16:09:53Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stacksync.commons.models.CommitInfo.isCommitSucceed()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (committed) { update = com.stacksync.desktop.repository.Update.parse(obj.getMetadata(), workspace); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3690/buggy-version/src.com.stacksync.desktop.syncserver.RemoteWorkspaceImpl.java", "BodyUseAPI": [], "Fixed commit": "585702496e7590834d8230828dd5cda12f25f793", "Url": "https://api.github.com/repos/stacksync/desktop", "Date": "2014-12-16T16:08:06Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.metalcon.imageStorageServer.protocol.create.CreateRequest.checkMetaData(de.metalcon.utils.FormItemList,de.metalcon.imageStorageServer.protocol.create.CreateResponse)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (metaData != null) { final java.lang.Boolean autoRotateFlag = de.metalcon.imageStorageServer.protocol.create.CreateRequest.checkAutoRotateFlag(formItemList, response); if (autoRotateFlag != null) { return new de.metalcon.imageStorageServer.protocol.create.CreateRequest(imageIdentifier, imageStream, metaData, autoRotateFlag); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5675/buggy-version/imageServer.src.main.java.de.metalcon.imageStorageServer.protocol.create.CreateRequest.java", "BodyUseAPI": [], "Fixed commit": "7e062ddebf9cbcceaaa05ae12644a21617f268b1", "Url": "https://api.github.com/repos/renepickhardt/metalcon", "Date": "2013-09-24T16:12:28Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(board[c][c].isFlagged())) board[r][c].click();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7473/buggy-version/GameBoard.java", "BodyUseAPI": ["board[r][c].click()"], "Fixed commit": "d1577a79164b3ef77ffa3e495d574f72d1af04c3", "Url": "https://api.github.com/repos/andrewbeav/Minesweeper", "Date": "2017-02-28T00:16:59Z"},
{"Line": "=>1060", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasFieldErrors()) { return INPUT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7577/buggy-version/freightbit.src.main.java.com.sr.apps.freightbit.operations.action.OperationsAction.java", "BodyUseAPI": [], "Fixed commit": "d8745d642dedd551a3cb3a49dc90b177613bb1fa", "Url": "https://api.github.com/repos/johnpelquingua/freightbit-logistics", "Date": "2015-02-20T09:08:52Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gnu.trove.map.hash.TObjectIntHashMap<org.molgenis.genotype.variant.GeneticVariant>.get(org.molgenis.genotype.variant.GeneticVariant)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index == (-1)) { throw new org.molgenis.genotype.GenotypeDataException((((((((\"Error reading variant from bed file. ID: \" + (variant.getPrimaryVariantId())) + \" chr: \") + (variant.getSequenceName())) + \" pos: \") + (variant.getStartPos())) + \" alleles\") + (variant.getVariantAlleles().toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4258/buggy-version/Genotype-IO.src.main.java.org.molgenis.genotype.plink.BedBimFamGenotypeData.java", "BodyUseAPI": [], "Fixed commit": "7318aea0f8ebaac8250be1ca5e9b93e9df71d0aa", "Url": "https://api.github.com/repos/Bonder-MJ/systemsgenetics", "Date": "2014-05-14T10:47:58Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class.isAssignableFrom(java.lang.Class<? extends java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isMap) { writer.object(); writer.endObject(); }else { writer.array(); writer.endArray(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/49/buggy-version/grails-plugin-converters.src.main.groovy.grails.converters.JSON.java", "BodyUseAPI": [], "Fixed commit": "c281a445e940dc1c26d7eb395e7e6724d10c9aff", "Url": "https://api.github.com/repos/vaskoz/grails-core", "Date": "2015-06-17T12:20:22Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.hsyyid.commandsigns.utils.CommandSign.getOneTime()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (time) oneTime = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3915/buggy-version/src.main.java.io.github.hsyyid.commandsigns.utils.DatabaseManager.java", "BodyUseAPI": [], "Fixed commit": "867a464437050267d6b3b19ace9cc78ff80319ae", "Url": "https://api.github.com/repos/hsyyid/CommandSigns", "Date": "2015-12-11T14:11:27Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (time == 1) oneTime = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3915/buggy-version/src.main.java.io.github.hsyyid.commandsigns.utils.DatabaseManager.java", "BodyUseAPI": [], "Fixed commit": "867a464437050267d6b3b19ace9cc78ff80319ae", "Url": "https://api.github.com/repos/hsyyid/CommandSigns", "Date": "2015-12-11T14:11:27Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, umcg.genetica.io.trityper.EQTL>.get(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((aseZ * (eQtl.getZscore())) > 0) { ++sameDirection; }else { ++oppositeDirection; java.lang.System.out.println((((((((((((\"Opposite: \" + (eQtl.getRsChr())) + \":\") + (eQtl.getRsChrPos())) + \"\\t\") + (elements[7])) + \"\\t\") + (eQtl.getAlleleAssessed())) + \"\\t\") + aseZ) + \"\\t\") + (eQtl.getZscore()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8490/buggy-version/eqtl-mapping-pipeline.src.main.java.eqtlmappingpipeline.ase.CompareAseToEqtl.java", "BodyUseAPI": ["umcg.genetica.io.trityper.EQTL.getZscore()", "umcg.genetica.io.trityper.EQTL.getAlleleAssessed()", "java.io.PrintStream.println((((((((((((\"Opposite: \" + (eQtl.getRsChr())) + \":\") + (eQtl.getRsChrPos())) + \"\\t\") + (elements[7])) + \"\\t\") + (eQtl.getAlleleAssessed())) + \"\\t\") + aseZ) + \"\\t\") + (eQtl.getZscore())))", "umcg.genetica.io.trityper.EQTL.getRsChr()", "umcg.genetica.io.trityper.EQTL.getRsChrPos()"], "Fixed commit": "48a4b622d67f772db7e05e3805a70cc386280e69", "Url": "https://api.github.com/repos/Bonder-MJ/systemsgenetics", "Date": "2014-05-05T19:38:46Z"},
{"Line": "=>2135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ut.dph.service.transactionInManager.getTransactionTargetDetails(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((transactiontarget.getTargetSubOrgId()) != (transactionDetails.getTargetSubOrgId())) { transactiontarget.setTargetSubOrgId(transactionDetails.getTargetSubOrgId()); transactionInManager.submitTransactionTargetChanges(transactiontarget); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/905/buggy-version/src.main.java.com.ut.dph.controller.HealtheWebController.java", "BodyUseAPI": ["com.ut.dph.model.Transaction.getTargetSubOrgId()", "com.ut.dph.service.transactionInManager.submitTransactionTargetChanges(com.ut.dph.model.transactionTarget)", "com.ut.dph.model.transactionTarget.setTargetSubOrgId(transactionDetails.getTargetSubOrgId())"], "Fixed commit": "09d51bafda3b6207ed828db1983b1aee696e6dff", "Url": "https://api.github.com/repos/thenhkid/universalTranslator", "Date": "2015-08-28T06:41:39Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.ndatasource.rdbms.RDBMSDataSourceReader.loadConfig(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((rdbmsConfiguration.getUsername()) != null) { java.sql.DriverManager.getConnection(rdbmsConfiguration.getUrl(), rdbmsConfiguration.getUsername(), rdbmsConfiguration.getPassword()); }else { java.sql.DriverManager.getConnection(rdbmsConfiguration.getUrl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8335/buggy-version/core.org.wso2.carbon.ndatasource.rdbms.src.main.java.org.wso2.carbon.ndatasource.rdbms.RDBMSDataSourceReader.java", "BodyUseAPI": ["org.wso2.carbon.ndatasource.rdbms.RDBMSConfiguration.getUsername()", "java.sql.DriverManager.getConnection(rdbmsConfiguration.getUrl())", "org.wso2.carbon.ndatasource.rdbms.RDBMSConfiguration.getUrl()", "org.wso2.carbon.ndatasource.rdbms.RDBMSConfiguration.getUrl()", "org.wso2.carbon.ndatasource.rdbms.RDBMSConfiguration.getPassword()", "java.sql.DriverManager.getConnection(rdbmsConfiguration.getUrl(),rdbmsConfiguration.getUsername(),rdbmsConfiguration.getPassword())"], "Fixed commit": "575d420fe1d2ba3c4abc40dd38da975d12411d6a", "Url": "https://api.github.com/repos/madhawa-gunasekara/carbon4-kernel", "Date": "2015-09-02T12:59:21Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((min != (java.lang.Double.POSITIVE_INFINITY)) && (max != (java.lang.Double.NEGATIVE_INFINITY))) { checkArgument((min <= max), \"max should be greater or equal to min.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/164/buggy-version/core.src.main.java.io.opencensus.stats.Range.java", "BodyUseAPI": ["io.opencensus.stats.Range.checkArgument(boolean,java.lang.String)"], "Fixed commit": "3aaad4ffc7e4a06da17bd59a178796f214728d68", "Url": "https://api.github.com/repos/songy23/instrumentation-java", "Date": "2017-07-13T17:25:59Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((request) != null) { if (isException) { exceptionCaught(ctx, exception); return; } if (!(writeResponse(ctx))) { ctx.writeAndFlush(Unpooled.EMPTY_BUFFER).addListener(ChannelFutureListener.CLOSE); }else { ctx.flush(); } ctx.disconnect(); if ((selectedRoute) != null) { this.processLogging(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1527/buggy-version/src.main.java.com.lunex.httpproxy.http.HttpProxyServerHandler.java", "BodyUseAPI": [], "Fixed commit": "c9ef0c332f113c4f27e8ecf382d7a0e4e63b0f6b", "Url": "https://api.github.com/repos/lunextelecom/http-proxy", "Date": "2014-10-21T09:40:10Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cursor.getString(com.example.dawiduk.conferencevoteapplication.AgendaAdapter.COLUMN_START).equals(hour.toString())) & (actualPresentation)) { layoutId = R.layout.actual_presentation; actualPresentation = false; return android.view.LayoutInflater.from(context).inflate(layoutId, parent, false); }else { layoutId = R.layout.presentation_desc; return android.view.LayoutInflater.from(context).inflate(layoutId, parent, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2177/buggy-version/app.src.main.java.com.example.dawiduk.conferencevoteapplication.AgendaAdapter.java", "BodyUseAPI": [], "Fixed commit": "0ab135fe7870d32cbb0cfbe72cb11c2fecaaabbf", "Url": "https://api.github.com/repos/pdawiduk/ConferenceVoteApplication", "Date": "2016-02-27T11:23:04Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == hi) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4499/buggy-version/src.algorithms.sortings.QuickSorting.java", "BodyUseAPI": [], "Fixed commit": "bbdaba2acf567426aca2200b62931f2ae0fdf89f", "Url": "https://api.github.com/repos/QinJiangbo/Algorithms", "Date": "2017-01-31T17:01:40Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (j == lo) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4499/buggy-version/src.algorithms.sortings.QuickSorting.java", "BodyUseAPI": [], "Fixed commit": "bbdaba2acf567426aca2200b62931f2ae0fdf89f", "Url": "https://api.github.com/repos/QinJiangbo/Algorithms", "Date": "2017-01-31T17:01:40Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hi <= lo) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4499/buggy-version/src.algorithms.sortings.QuickSorting.java", "BodyUseAPI": [], "Fixed commit": "bbdaba2acf567426aca2200b62931f2ae0fdf89f", "Url": "https://api.github.com/repos/QinJiangbo/Algorithms", "Date": "2017-01-31T17:01:40Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((viewHolder.duration) != null) viewHolder.duration.setText(duration);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7906/buggy-version/src.info.bottiger.podcast.RecentItemFragment.java", "BodyUseAPI": ["viewHolder.duration.setText(java.lang.String)"], "Fixed commit": "47df032cb13add5562596fe438cb668e330d297f", "Url": "https://api.github.com/repos/bottiger/SoundWaves", "Date": "2013-01-12T23:10:27Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((context) == null) return rtn;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2342/buggy-version/src.main.java.org.reactome.web.diagram.client.LayoutManager.java", "BodyUseAPI": [], "Fixed commit": "1fd42dfb6bccdd07f1323216ee8f5e435cdd1f18", "Url": "https://api.github.com/repos/reactome-pwp/diagram", "Date": "2016-01-22T11:53:32Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.wso2.carbon.identity.notification.mgt.NotificationMgtConfigBuilder.log.isDebugEnabled()) { org.wso2.carbon.identity.notification.mgt.NotificationMgtConfigBuilder.log.debug((\"No encryption done for value with key :\" + key)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8245/buggy-version/components.identity.org.wso2.carbon.identity.notification.mgt.src.main.java.org.wso2.carbon.identity.notification.mgt.NotificationMgtConfigBuilder.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug(java.lang.String)"], "Fixed commit": "01b062c870e7ed9254366624e085d9aa330d7fb6", "Url": "https://api.github.com/repos/hasinthaindrajee/carbon-identity", "Date": "2014-12-16T12:18:45Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rs.wasNull()) { refId = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6875/buggy-version/src.main.java.net.symplifier.db.jdbc.JDBCIterator.java", "BodyUseAPI": [], "Fixed commit": "f60514c09dde07f70fd566e292f28abb741c6dc5", "Url": "https://api.github.com/repos/ranjan-sym/sym.net-db", "Date": "2015-07-11T07:43:12Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (logout != null) { model.addAttribute(\"msg\", \"You've been logged out successfully\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/9063/buggy-version/src.main.java.ru.hse.esadykov.controller.LoginController.java", "BodyUseAPI": [], "Fixed commit": "62d619772afb486744cf7d7a929ba9c753e4e03c", "Url": "https://api.github.com/repos/Xokker/bugtracking", "Date": "2014-06-14T15:37:34Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (error != null) { model.addAttribute(\"error\", \"Invalid username and/or password\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/9063/buggy-version/src.main.java.ru.hse.esadykov.controller.LoginController.java", "BodyUseAPI": [], "Fixed commit": "62d619772afb486744cf7d7a929ba9c753e4e03c", "Url": "https://api.github.com/repos/Xokker/bugtracking", "Date": "2014-06-14T15:37:34Z"},
{"Line": "=>800", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (zmax > (this.sizeZ)) { zmax = this.sizeZ; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5771/buggy-version/src.main.java.mcib3d.image3d.ImageInt.java", "BodyUseAPI": [], "Fixed commit": "6e251302a48a92ceec8d07302ef00aedd4ec0246", "Url": "https://api.github.com/repos/mcib3d/mcib3d-core", "Date": "2017-06-02T03:47:24Z"},
{"Line": "=>797", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (zmin < 0) { zmin = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5771/buggy-version/src.main.java.mcib3d.image3d.ImageInt.java", "BodyUseAPI": [], "Fixed commit": "6e251302a48a92ceec8d07302ef00aedd4ec0246", "Url": "https://api.github.com/repos/mcib3d/mcib3d-core", "Date": "2017-06-02T03:47:24Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mongodb.morphia.mapping.MappedClass.getAnnotations(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (convertersList != null) { for (java.lang.annotation.Annotation a : convertersList) { final org.mongodb.morphia.annotations.Converters c = ((org.mongodb.morphia.annotations.Converters) (a)); if (c != null) { for (final java.lang.Class<? extends org.mongodb.morphia.converters.TypeConverter> clazz : c.value()) { if (!(getConverters().isRegistered(clazz))) { getConverters().addConverter(clazz); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2137/buggy-version/morphia.src.main.java.org.mongodb.morphia.mapping.Mapper.java", "BodyUseAPI": [], "Fixed commit": "8b277f78edfa56d3bf0ee4aab1c459fe315c7a9a", "Url": "https://api.github.com/repos/Eemuli/morphia", "Date": "2014-08-06T20:00:34Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((splitText.length) == 1) { if (splitText[0].endsWith(\".\")) splitText[0] = splitText[0].substring(0, ((splitText[0].length()) - 1)); return splitText; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1011/buggy-version/src.at.ac.tuwien.touristguide.summarizer.Utilities.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "821adeafa4c2e26ae7cafd5668118047aef3b141", "Url": "https://api.github.com/repos/Karatekiwi/TouristGuide", "Date": "2014-11-12T14:08:32Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((homeworld) != null) { applyBackground(homeworld.asBackground, actor); applySystem(((stratos.game.actors.Sector) (homeworld)), actor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2504/buggy-version/src.stratos.game.actors.Career.java", "BodyUseAPI": [], "Fixed commit": "a20a1f5f53f007a342cd72283fdd5135739f5839", "Url": "https://api.github.com/repos/Morgan-Allen/Presidium-Graphics-Overhaul", "Date": "2016-01-21T18:20:55Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((homeworld) != null) { applyBackground(homeworld.asBackground, actor); applySystem(((stratos.game.actors.Sector) (homeworld)), actor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2504/buggy-version/src.stratos.game.actors.Career.java", "BodyUseAPI": [], "Fixed commit": "a20a1f5f53f007a342cd72283fdd5135739f5839", "Url": "https://api.github.com/repos/Morgan-Allen/Presidium-Graphics-Overhaul", "Date": "2016-01-21T18:20:55Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.hp.main.Navigation.i) == 1) { getSupportFragmentManager().beginTransaction().remove(getSupportFragmentManager().findFragmentById(R.id.container)).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2799/buggy-version/app.src.main.java.com.example.hp.main.Navigation.java", "BodyUseAPI": [], "Fixed commit": "4989415b213cdc854b2693ea064c737248eea262", "Url": "https://api.github.com/repos/Abdulkadir98/EverythingCollege", "Date": "2017-02-23T16:02:21Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(baseStr.startsWith(\"#\"))) { final org.thymeleaf.standard.expression.Token token = org.thymeleaf.standard.expression.Token.parse(baseStr); if (token != null) { return org.thymeleaf.standard.expression.TextLiteralExpression.parseTextLiteral(token.getValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2879/buggy-version/src.main.java.org.thymeleaf.standard.expression.LinkExpression.java", "BodyUseAPI": ["org.thymeleaf.standard.expression.Token.parse(java.lang.String)"], "Fixed commit": "e9ecd23680e3e9ba3f21dbf56d7f9f80e6ae0bf7", "Url": "https://api.github.com/repos/thymeleaf/thymeleaf", "Date": "2013-04-30T22:34:06Z"},
{"Line": "=>482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i != 0) & (!(category.isEmpty()))) { query = (((((\"SELECT * FROM \" + (tables[i])) + \" WHERE tstamp > '\") + date) + \"' AND cid = \") + category) + \";\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4754/buggy-version/src.helpers.AnalyticsHelper.java", "BodyUseAPI": [], "Fixed commit": "bdeda917c7030cd6051f1eab8f96fe3d8e74d1b0", "Url": "https://api.github.com/repos/jiashenwang/project3", "Date": "2015-06-06T05:02:22Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.JsonElement.getAsJsonObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((object.get(\"next_page\")) != null) { nextPageUrl = object.get(\"next_page\").getAsString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8138/buggy-version/src.main.java.uib.info323.twitterAWSM.io.impl.JsonTweetFactory.java", "BodyUseAPI": ["object.get(\"next_page\").getAsString()", "com.google.gson.JsonObject.get(java.lang.String)"], "Fixed commit": "e7b2d5577c14221ccf60c5dc226d3d6db82ffd8f", "Url": "https://api.github.com/repos/lha047/IrProject", "Date": "2012-05-11T13:34:59Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (paramValue == null) { if ((requestParam.defaultValue()) != null) { param = requestParam.defaultValue(); }else { param = \"\"; } }else { param = paramValue.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1206/buggy-version/src.main.java.com.art4ul.jcoon.handlers.RequestParamAnnotationBeforeHandler.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "9ce07b7f545f19562a43d2777023c6e4e5efd98e", "Url": "https://api.github.com/repos/art4ul/jcoon", "Date": "2014-12-20T13:01:28Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(outputFile.getParentFile().isDirectory())) outputFile.getParentFile().mkdirs();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6686/buggy-version/utils.src.main.java.org.jboss.windup.util.TarUtil.java", "BodyUseAPI": ["java.io.File.mkdirs()", "java.io.File.getParentFile()"], "Fixed commit": "38a243ebb5372eaf92483a7dc334d4fb469102b8", "Url": "https://api.github.com/repos/jsight/windup", "Date": "2017-10-17T03:21:15Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["UserAccounts.getIndex(transaction.getNumber())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index == (-1)) { java.lang.System.out.println(\"ERROR: Account not found\"); }else { User currentUser = userAccounts.getUser(index); float currentBalance = java.lang.Float.parseFloat(currentUser.getBalance()); if ((currentUser.getPlan()) == \"S\") { currentBalance -= 0.05; }else if ((currentUser.getPlan()) == \"N\") { currentBalance -= 0.1; } currentBalance += java.lang.Float.parseFloat(transaction.getFunds()); currentUser.setBalance(java.lang.Float.toString(currentBalance)); userAccounts.updateUser(index, currentUser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5275/buggy-version/back_end.BackEnd.java", "BodyUseAPI": ["UserAccounts.updateUser(int,User)", "UserAccounts.getUser(int)"], "Fixed commit": "ecf1f98d71c814c3d9a14b3999d77e63639409e9", "Url": "https://api.github.com/repos/Thao-Truong/SQAProject", "Date": "2016-03-17T04:12:06Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["UserAccounts.getIndex(transaction.getNumber())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index == (-1)) { java.lang.System.out.println(\"ERROR: Account not found\"); }else { userAccounts.removeUser(index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5275/buggy-version/back_end.BackEnd.java", "BodyUseAPI": ["UserAccounts.removeUser(int)"], "Fixed commit": "ecf1f98d71c814c3d9a14b3999d77e63639409e9", "Url": "https://api.github.com/repos/Thao-Truong/SQAProject", "Date": "2016-03-17T04:12:06Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["UserAccounts.getIndex(transaction.getNumber())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index == (-1)) { java.lang.System.out.println(\"ERROR: Account not found\"); }else { User currentUser = userAccounts.getUser(index); currentUser.setStatus(\"D\"); userAccounts.updateUser(index, currentUser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5275/buggy-version/back_end.BackEnd.java", "BodyUseAPI": ["UserAccounts.updateUser(int,User)", "UserAccounts.getUser(int)"], "Fixed commit": "ecf1f98d71c814c3d9a14b3999d77e63639409e9", "Url": "https://api.github.com/repos/Thao-Truong/SQAProject", "Date": "2016-03-17T04:12:06Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["UserAccounts.getIndex(transaction.getNumber())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index == (-1)) { java.lang.System.out.println(\"ERROR: Account not found\"); }else { User currentUser = userAccounts.getUser(index); java.lang.String currentPlan = currentUser.getPlan(); if (currentPlan == \"S\") { currentPlan = \"N\"; }else if (currentPlan == \"N\") { currentPlan = \"S\"; } currentUser.setPlan(currentPlan); userAccounts.updateUser(index, currentUser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5275/buggy-version/back_end.BackEnd.java", "BodyUseAPI": ["UserAccounts.getUser(int)", "UserAccounts.updateUser(int,User)"], "Fixed commit": "ecf1f98d71c814c3d9a14b3999d77e63639409e9", "Url": "https://api.github.com/repos/Thao-Truong/SQAProject", "Date": "2016-03-17T04:12:06Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["UserAccounts.getIndex(transaction.getNumber())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index == (-1)) { java.lang.System.out.println(\"ERROR: Account not found\"); }else { User currentUser = userAccounts.getUser(index); currentUser.setStatus(\"A\"); userAccounts.updateUser(index, currentUser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5275/buggy-version/back_end.BackEnd.java", "BodyUseAPI": ["UserAccounts.updateUser(int,User)", "UserAccounts.getUser(int)"], "Fixed commit": "ecf1f98d71c814c3d9a14b3999d77e63639409e9", "Url": "https://api.github.com/repos/Thao-Truong/SQAProject", "Date": "2016-03-17T04:12:06Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["UserAccounts.getIndex(transaction.getNumber())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index == (-1)) { java.lang.System.out.println(\"ERROR: Account not found\"); }else { User currentUser = userAccounts.getUser(index); float currentBalance = java.lang.Float.parseFloat(currentUser.getBalance()); if ((currentUser.getPlan()) == \"S\") { currentBalance -= 0.05; }else if ((currentUser.getPlan()) == \"N\") { currentBalance -= 0.1; } currentBalance -= java.lang.Float.parseFloat(transaction.getFunds()); currentUser.setBalance(java.lang.Float.toString(currentBalance)); userAccounts.updateUser(index, currentUser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5275/buggy-version/back_end.BackEnd.java", "BodyUseAPI": ["UserAccounts.updateUser(int,User)", "UserAccounts.getUser(int)"], "Fixed commit": "ecf1f98d71c814c3d9a14b3999d77e63639409e9", "Url": "https://api.github.com/repos/Thao-Truong/SQAProject", "Date": "2016-03-17T04:12:06Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.Integer, java.util.HashSet<java.lang.Integer>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (aCellColumnVector != null) summand.addAll(aCellColumnVector);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5545/buggy-version/src.main.java.com.jom._OPERATOR_MULTIPLY.java", "BodyUseAPI": ["java.util.HashSet<java.lang.Integer>.addAll(java.util.HashSet<java.lang.Integer>)"], "Fixed commit": "3c3bc82f1b3f1da82ffde7929d1a1faffc712e0d", "Url": "https://api.github.com/repos/girtel/JOM", "Date": "2016-10-24T15:39:20Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["inventoriesDto.getInventories().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((inventoryDto.getMedia()) != null) { previewHref = inventoryDto.getMedia().getPhotos().getThumbnails().getLinks().iterator().next().getHref(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3008/buggy-version/dealer-dashboard.src.main.java.com.edmunds.track.controller.InventoriesController.java", "BodyUseAPI": ["inventoryDto.getMedia().getPhotos().getThumbnails().getLinks().iterator().next().getHref()", "inventoryDto.getMedia().getPhotos().getThumbnails().getLinks()", "inventoryDto.getMedia().getPhotos().getThumbnails()", "inventoryDto.getMedia().getPhotos().getThumbnails().getLinks().iterator().next()", "inventoryDto.getMedia().getPhotos()", "inventoryDto.getMedia().getPhotos().getThumbnails().getLinks().iterator()", "com.edmunds.rest.dto.inventory.InventoryDto.getMedia()"], "Fixed commit": "e048e4fb104231f6ba971beb01a8e6c5b97909d8", "Url": "https://api.github.com/repos/EvgeniyAndrievskiy/edmunds-trip-tracking", "Date": "2015-09-29T18:26:22Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (getSubroutineMap().containsKey(commandSub.getSubName())) { throw new com.scriptbasic.exceptions.GenericSyntaxException(((\"The subroutine '\" + (commandSub.getSubName())) + \"' is defined more than once\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5344/buggy-version/jscriptbasic.src.main.java.com.scriptbasic.syntax.AbstractBasicProgramPostprocessing.java", "BodyUseAPI": ["com.scriptbasic.executors.commands.CommandSub.getSubName()"], "Fixed commit": "c0c7a6e9782393b88e96346537f0dcd6b334ae8c", "Url": "https://api.github.com/repos/verhas/jScriptBasic", "Date": "2012-08-16T18:00:52Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(javax.swing.JRootPane,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((!(s.equals(\"\"))) || (s != null)) { OpenLogViewer.Properties.SingleProperty newprop = new OpenLogViewer.Properties.SingleProperty(); newprop.setHeader(s); addProperty(newprop); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/321/buggy-version/src.OpenLogViewer.Properties.PropertiesPane.java", "BodyUseAPI": ["OpenLogViewer.Properties.SingleProperty.setHeader(java.lang.String)"], "Fixed commit": "e6a36a3e23ce04483deb6144dd2f53b7cd1bec04", "Url": "https://api.github.com/repos/gufi/OpenLogViewer", "Date": "2011-03-02T07:00:03Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jpaGraph.getDamper().isObjectDB()) { boolean bGraphTest = ((bpJpaVertex.getVersion()) == null) && ((bpJpaVertex.getVersion()) > 1); if (bGraphTest) { }else { if (((bpJpaVertex.getVersion()) != null) && ((bpJpaVertex.getVersion()) > 1)) { jpaGraph.getRawGraph().refresh(bpJpaVertex); } } }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8216/buggy-version/src.main.java.com.tinkerpop.blueprints.impls.jpa.internal.VertexFacade.java", "BodyUseAPI": ["com.tinkerpop.blueprints.impls.jpa.JpaGraph.getRawGraph()", "jpaGraph.getRawGraph().refresh(com.tinkerpop.blueprints.impls.jpa.internal.models.BpJpaVertex)"], "Fixed commit": "e4e27e54f97f98302c11ceda0eec6c493f916c80", "Url": "https://api.github.com/repos/sgougi/blueprints-jpa-graph", "Date": "2014-01-23T07:32:59Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jpaGraph.getDamper().isObjectDB()) { boolean bGraphTest = !((bpJpaElement.getKeys().size()) > 0); if (bGraphTest) { jpaGraph.getDamper().persist(jpaGraph, property); bpJpaElement.putProperty(property); }else { bpJpaElement.putProperty(property); } }else { bpJpaElement.putProperty(property); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8216/buggy-version/src.main.java.com.tinkerpop.blueprints.impls.jpa.internal.ElementFacade.java", "BodyUseAPI": ["jpaGraph.getDamper().persist(com.tinkerpop.blueprints.impls.jpa.JpaGraph,com.tinkerpop.blueprints.impls.jpa.internal.models.BpJpaProperty)", "com.tinkerpop.blueprints.impls.jpa.JpaGraph.getDamper()"], "Fixed commit": "e4e27e54f97f98302c11ceda0eec6c493f916c80", "Url": "https://api.github.com/repos/sgougi/blueprints-jpa-graph", "Date": "2014-01-23T07:32:59Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (readLen > 0) { content += new java.lang.String(buffer).substring(0, readLen); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5933/buggy-version/app.src.main.java.com.example.jianming.Tasks.DownloadWebpageTask.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "77764f2761c4cfc5fe670dcd0be5077cd2e9ad0f", "Url": "https://api.github.com/repos/knightingal/android_start_demo", "Date": "2015-04-11T15:23:39Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((machine) != null) machine.useNetworkData(player, Side.CLIENT, packetId, nbt);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7009/buggy-version/src.main.java.zmaster587.advancedRocketry.network.PacketMachine.java", "BodyUseAPI": [], "Fixed commit": "20dfda0394d495a3cdbf0d4ed21e680586d79b73", "Url": "https://api.github.com/repos/zmaster587/AdvancedRocketry", "Date": "2016-08-18T21:33:17Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((\"httpbidirserver\".equals(mType)) || (\"streamrserver\".equals(mType))) generalServerHttpBidirOrStreamr(\"streamrserver\".equals(mType));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6919/buggy-version/app.src.main.java.net.i2p.android.i2ptunnel.util.TunnelLogic.java", "BodyUseAPI": ["net.i2p.android.i2ptunnel.util.TunnelLogic.generalServerHttpBidirOrStreamr(boolean)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "40f3d91ebb874813eab83d844530e081b6d3bc29", "Url": "https://api.github.com/repos/i2p/i2p.android.base", "Date": "2015-04-05T13:12:14Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name.equals(\"\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3112/buggy-version/src.com.tisawesomeness.minecord.Listener.java", "BodyUseAPI": [], "Fixed commit": "7eacd7a74657e7ad2b8c7df3d7872d3cc0718451", "Url": "https://api.github.com/repos/Tisawesomeness/Minecord", "Date": "2017-06-01T18:05:58Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.endsWith(resource, \".gz\")) { is = new java.util.zip.GZIPInputStream(is); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7578/buggy-version/eol-globi-lib.src.main.java.org.eol.globi.util.ResourceUtil.java", "BodyUseAPI": [], "Fixed commit": "34d68e8b182f34bd29260c1b2af8d164eb836def", "Url": "https://api.github.com/repos/jhpoelen/eol-globi-data", "Date": "2015-12-16T06:26:23Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((module) != null) && ((delegate) != null)) { module.handleResponse(typeRequest, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/323/buggy-version/android.src.com.sims.topaz.network.NetworkRestModule.java", "BodyUseAPI": [], "Fixed commit": "c61ff88da46307336a12e79de33d4c9ba931d0ca", "Url": "https://api.github.com/repos/SIMS-Topaz/sims-topaz-android", "Date": "2014-02-14T10:47:29Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (value.getBonds())) { for (int i = 0; i < (value.getBonds().getAid1().getBerInteger().size()); i++) { int a1 = (value.getBonds().getAid1().getBerInteger().get(i).intValue()) - 1; int a2 = (value.getBonds().getAid2().getBerInteger().get(i).intValue()) - 1; org.gradoop.flink.io.impl.pubchem_asn.functions.Edge e = edgeFactory.createEdge(\"\", atoms[a1], atoms[a2], headId); out.collect(new org.apache.flink.api.java.tuple.Tuple2(org.gradoop.flink.io.impl.pubchem_asn.functions.CompoundsToElements.ELEMENT_IDENTIFIER_EDGE, e)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/9221/buggy-version/gradoop-flink.src.main.java.org.gradoop.flink.io.impl.pubchem_asn.functions.CompoundsToElements.java", "BodyUseAPI": ["org.gradoop.flink.io.impl.pubchem_asn.jasn1.ncbi.pcsubstance.PCCompound.getBonds()", "value.getBonds().getAid1().getBerInteger()", "value.getBonds().getAid2()", "org.gradoop.flink.io.impl.pubchem_asn.jasn1.ncbi.pcsubstance.PCCompound.getBonds()", "value.getBonds().getAid2().getBerInteger()", "value.getBonds().getAid2().getBerInteger().get(i).intValue()", "value.getBonds().getAid2().getBerInteger().get(int)", "org.gradoop.flink.io.impl.pubchem_asn.jasn1.ncbi.pcsubstance.PCCompound.getBonds()", "value.getBonds().getAid1().getBerInteger().size()", "value.getBonds().getAid1()", "value.getBonds().getAid1().getBerInteger().get(int)", "value.getBonds().getAid1().getBerInteger().get(i).intValue()", "value.getBonds().getAid1().getBerInteger()", "value.getBonds().getAid1()"], "Fixed commit": "6a10272763028cae18255ee1d0c20bbecac86491", "Url": "https://api.github.com/repos/lordon/gradoop", "Date": "2017-06-19T09:59:29Z"},
{"Line": "=>979", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((meldung) != null) { meldung.terminate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/9233/buggy-version/Watten-gui.src.de.verbund.watten.hauptfenster.Spielfenster.java", "BodyUseAPI": [], "Fixed commit": "9c0fc14ea6e4c383983f0f694bb533c54fda6984", "Url": "https://api.github.com/repos/SRTigers98/Watten", "Date": "2017-01-24T08:21:08Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(observableIterator.hasNext())) { this.observableIterator = java.util.Collections.singleton(new org.apache.usergrid.persistence.Results()).iterator(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/51/buggy-version/stack.core.src.main.java.org.apache.usergrid.corepersistence.results.AbstractGraphQueryExecutor.java", "BodyUseAPI": [], "Fixed commit": "6904c9dbdf80e4dee303ad020d4d8c99a9f3946c", "Url": "https://api.github.com/repos/senthilkumar-kj/incubator-usergrid", "Date": "2015-04-24T15:35:40Z"},
{"Line": "=>2118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(isKmaxMode)) && (isRightsOnTopicsEnabled())) { com.stratelia.webactiv.util.node.model.NodeDetail node = getNodeHeader(getCurrentFolderId()); if (node.haveRights()) { sug.setObjectId(((ObjectType.NODE.getCode()) + (node.getRightsDependsOn()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/9223/buggy-version/kmelia.kmelia-war.src.main.java.com.stratelia.webactiv.kmelia.control.KmeliaSessionController.java", "BodyUseAPI": [], "Fixed commit": "ddbff850a82483b1eb6a7591582fe852835f49ba", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Components", "Date": "2013-09-09T14:15:23Z"},
{"Line": "=>1332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rascalmpl.library.lang.rascal.newsyntax.RascalParser.parse(Parser.START_MODULE,java.net.URI,char[],org.rascalmpl.parser.gtd.result.action.IActionExecutor<org.eclipse.imp.pdb.facts.IConstructor>,org.rascalmpl.parser.gtd.result.out.DefaultNodeFlattener<org.eclipse.imp.pdb.facts.IConstructor, org.eclipse.imp.pdb.facts.IConstructor, org.eclipse.imp.pdb.facts.ISourceLocation>,org.rascalmpl.parser.uptr.UPTRNodeFactory)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.rascalmpl.values.uptr.TreeAdapter.isAmb(tree)) { throw new org.rascalmpl.interpreter.asserts.Ambiguous(tree); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/733/buggy-version/src.org.rascalmpl.interpreter.Evaluator.java", "BodyUseAPI": [], "Fixed commit": "1373360c85f32338d9a21d43562029c66ac10f15", "Url": "https://api.github.com/repos/cwi-swat/rascal", "Date": "2013-02-07T07:30:41Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ui.AnimationPanel.findChosenAttacker(java.awt.Point)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (chosen_attacker_index == (-1)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2571/buggy-version/src.ui.AnimationPanel.java", "BodyUseAPI": [], "Fixed commit": "c8f7afe00578d4aa74d37d903cf0b1543473d8b9", "Url": "https://api.github.com/repos/yulinzhang/Multi-UAVPathPlanning", "Date": "2015-04-03T08:11:26Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["m.getMenuList().getSelectedItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"My Old Form\".equals(sel)) { showMyOldForm(); }else if (\"Tabs Demo\".equals(sel)) { showTabsDemo(); }else if (\"Login Form\".equals(sel)) { showLoginDemo(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2090/buggy-version/CN1MLDemos.src.ca.weblite.codename1.cn1ml.demos.CN1MLDemo.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "3b427b8e2637a467a4001efcfc8e6b1dc43017f6", "Url": "https://api.github.com/repos/shannah/CN1ML-NetbeansModule", "Date": "2014-11-04T18:04:26Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getInventory().getType()) != (org.bukkit.event.inventory.InventoryType.BEACON)) { getUserManager().getUser(event.getPlayer().getName()).setSnapshot(event.getInventory().getContents()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/983/buggy-version/src.main.java.net.h31ix.anticheat.event.InventoryListener.java", "BodyUseAPI": ["getUserManager().getUser(event.getPlayer().getName())", "org.bukkit.event.inventory.InventoryOpenEvent.getPlayer()", "getUserManager().getUser(event.getPlayer().getName()).setSnapshot(event.getInventory().getContents())", "event.getInventory().getContents()", "org.bukkit.event.inventory.InventoryOpenEvent.getInventory()", "event.getPlayer().getName()"], "Fixed commit": "09194b25910c5b92b4cf99a3f7b86a3dd5579b9c", "Url": "https://api.github.com/repos/h31ix/AntiCheat", "Date": "2013-01-23T04:05:34Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inventorySnapshot) != null) { inventory.clear(); for (org.bukkit.inventory.ItemStack is : inventorySnapshot) { if (is != null) { inventory.addItem(is); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/983/buggy-version/src.main.java.net.h31ix.anticheat.manage.User.java", "BodyUseAPI": [], "Fixed commit": "09194b25910c5b92b4cf99a3f7b86a3dd5579b9c", "Url": "https://api.github.com/repos/h31ix/AntiCheat", "Date": "2013-01-23T04:05:34Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tabsContainer.getChildAt(position).getWidth()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (childWidth == 0) { postDelayed(new java.lang.Runnable() { @java.lang.Override public void run() { scrollToChild(position, ((int) (positionOffset * childWidth))); } }, 50); }else { scrollToChild(position, ((int) (positionOffset * childWidth))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7052/buggy-version/library.src.com.astuetz.PagerSlidingTabStrip.java", "BodyUseAPI": ["com.astuetz.PagerSlidingTabStrip.PageListener.1.scrollToChild(int,float)", "com.astuetz.PagerSlidingTabStrip.PageListener.postDelayed(java.lang.Runnable,int)", "com.astuetz.PagerSlidingTabStrip.PageListener.scrollToChild(int,float)"], "Fixed commit": "2165e103898aeeb570a842972a07d4accf3430a5", "Url": "https://api.github.com/repos/xszconfig/PagerSlidingTabStrip", "Date": "2016-06-28T01:33:08Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((entry == null) && (modelRoot instanceof jetbrains.mps.extapi.persistence.FileBasedModelRoot)) { entry = new jetbrains.mps.ide.ui.dialogs.properties.roots.editors.FileBasedModelRootEntry(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5366/buggy-version/workbench.mps-ui.source.jetbrains.mps.ide.ui.dialogs.properties.roots.editors.ModelRootEntryPersistence.java", "BodyUseAPI": [], "Fixed commit": "dde53ef866ac28d9937c30e57fab4d2c890e1741", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2013-03-12T11:43:15Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Class<? extends org.jetbrains.mps.openapi.ui.persistence.ModelRootEntry>>.get(modelRoot.getType())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (aClass != null) { entry = aClass.newInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5366/buggy-version/workbench.mps-ui.source.jetbrains.mps.ide.ui.dialogs.properties.roots.editors.ModelRootEntryPersistence.java", "BodyUseAPI": ["java.lang.Class<? extends org.jetbrains.mps.openapi.ui.persistence.ModelRootEntry>.newInstance()"], "Fixed commit": "dde53ef866ac28d9937c30e57fab4d2c890e1741", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2013-03-12T11:43:15Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((rawError.getClass()) == (java.lang.Integer.class)) { treatedError = ((java.lang.Integer) (rawError)).toString(); }else { treatedError = rawError.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5632/buggy-version/spring-social-twitter.src.main.java.org.springframework.social.twitter.api.impl.TwitterErrorHandler.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "0fa2190045be1783d449f30246e149466dcea038", "Url": "https://api.github.com/repos/bxfsh/spring-social-twitter", "Date": "2015-05-22T19:15:28Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.daef.repositories.PostRepository.findAll()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (posts.isEmpty()) { return new org.springframework.http.ResponseEntity(new org.json.simple.JSONArray(), new org.springframework.http.HttpHeaders(), org.springframework.http.HttpStatus.OK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/808/buggy-version/src.main.java.com.daef.controllers.PostController.java", "BodyUseAPI": [], "Fixed commit": "cddd9182a46a85e2786692d9ce872142040abb01", "Url": "https://api.github.com/repos/gode-ting/hackernews-clone-backend", "Date": "2017-11-02T21:30:29Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.timer) != null) { this.timer.stopStopwatch(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3798/buggy-version/src.main.java.rmblworx.tools.timey.Stopwatch.java", "BodyUseAPI": [], "Fixed commit": "094acdaf2be3ef8bed19abf72a600d6da067ad1d", "Url": "https://api.github.com/repos/mmatthies/timey", "Date": "2014-02-16T10:11:28Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (newScales == null) { boneTrack.setKeyframes(newTimes, newTranslations, newRotations); }else { boneTrack.setKeyframes(newTimes, newTranslations, newRotations, newScales); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2856/buggy-version/heart.src.main.java.jme3utilities.MyAnimation.java", "BodyUseAPI": ["com.jme3.animation.BoneTrack.setKeyframes(float[],com.jme3.math.Vector3f[],com.jme3.math.Quaternion[],com.jme3.math.Vector3f[])"], "Fixed commit": "baaf0cf57095b5449d6f658f05b409c981f46428", "Url": "https://api.github.com/repos/stephengold/jme3-utilities", "Date": "2017-07-20T07:44:01Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.maps.model.PolylineOptions.getPoints()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((points.size()) > 1) { com.google.android.gms.maps.model.LatLngBounds.Builder builder = new com.google.android.gms.maps.model.LatLngBounds.Builder(); for (com.google.android.gms.maps.model.LatLng p : points) { builder.include(p); } UIobjects.mMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngBounds(builder.build(), 5)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5491/buggy-version/app.src.main.java.org.peno.b4.bikerisk.PositionManager.java", "BodyUseAPI": [], "Fixed commit": "4a918910d070204f6f0667dcdce9256fcdaaa9b1", "Url": "https://api.github.com/repos/timower/RoadWars", "Date": "2015-10-28T18:34:54Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.Set<org.eclipse.moquette.spi.impl.subscriptions.Subscription>>.get(s.getClientId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((subscriptions.size()) > 0) { clientIDSubCache.put(s.getClientId(), subscriptions); }else { clientIDSubCache.remove(s.getClientId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7092/buggy-version/broker.src.main.java.org.eclipse.moquette.spi.impl.subscriptions.Subscriptions.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.Set<org.eclipse.moquette.spi.impl.subscriptions.Subscription>>.put(s.getClientId(),java.util.Set<org.eclipse.moquette.spi.impl.subscriptions.Subscription>)"], "Fixed commit": "0d6bd5b99351521da0a1221a132f29448cec8b73", "Url": "https://api.github.com/repos/thinkjoyorg/moquette", "Date": "2015-07-03T08:07:43Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.Set<org.eclipse.moquette.spi.impl.subscriptions.Subscription>>.get(s.getTopicFilter())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((subscriptions.size()) > 0) { topicSubCache.put(s.getTopicFilter(), subscriptions); }else { topicSubCache.remove(s.getTopicFilter()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7092/buggy-version/broker.src.main.java.org.eclipse.moquette.spi.impl.subscriptions.Subscriptions.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.Set<org.eclipse.moquette.spi.impl.subscriptions.Subscription>>.put(s.getTopicFilter(),java.util.Set<org.eclipse.moquette.spi.impl.subscriptions.Subscription>)"], "Fixed commit": "0d6bd5b99351521da0a1221a132f29448cec8b73", "Url": "https://api.github.com/repos/thinkjoyorg/moquette", "Date": "2015-07-03T08:07:43Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (yAndYVelocity >= 0) { nextPosition = new model.Position(position.getX(), yAndYVelocity); }else { nextPosition = new model.Position(position.getX(), position.getY()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8670/buggy-version/project.bobothepanda.src.main.java.model.Character.java", "BodyUseAPI": [], "Fixed commit": "63a7f3d806cf9911f9138ae451b7fe63210ca435", "Url": "https://api.github.com/repos/eeayiaia/bobothepanda", "Date": "2014-05-07T09:11:31Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mEvent.startTime) != null) { when = mEvent.startTime.toMillis(true); }else { when = new java.util.Date().getTime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2381/buggy-version/src.com.android.calendar.therapy.EditTherapyFragment.java", "BodyUseAPI": ["mEvent.startTime.toMillis(boolean)"], "Fixed commit": "55b74ab78c65e7113964a9acff005cfcfc8eff40", "Url": "https://api.github.com/repos/sausame/calendar", "Date": "2013-12-30T08:16:12Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jetbrains.jet.lang.resolve.BindingContext.get(BindingContext.DECLARATION_TO_DESCRIPTOR,classObject.getObjectDeclaration())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (declaration == null) { org.jetbrains.jet.lang.resolve.lazy.data.JetClassLikeInfo classObjectInfo = parentClassDescriptor.getClassObjectInfo(classObject); if (classObjectInfo != null) { org.jetbrains.jet.lang.resolve.name.Name name = org.jetbrains.jet.lang.resolve.DescriptorUtils.getClassObjectName(parentClassDescriptor.getName().asString()); return new org.jetbrains.jet.lang.resolve.lazy.descriptors.LazyClassDescriptor(this, parentClassDescriptor, name, classObjectInfo); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/399/buggy-version/compiler.frontend.src.org.jetbrains.jet.lang.resolve.lazy.ResolveSession.java", "BodyUseAPI": [], "Fixed commit": "3160789e91407e6fda7de1aa06348967071a3674", "Url": "https://api.github.com/repos/JetBrains/kotlin", "Date": "2013-07-24T16:11:12Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.contentData) != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7597/buggy-version/spring-cloud-netflix-core.src.main.java.org.springframework.cloud.netflix.zuul.filters.pre.FormBodyWrapperFilter.java", "BodyUseAPI": [], "Fixed commit": "a01fc5b7588947efe70e287222f3bf6a895f1504", "Url": "https://api.github.com/repos/dsyer/spring-cloud-netflix", "Date": "2017-08-04T19:40:10Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof com.google.gson.JsonArray) { return result; }else { builder = new java.lang.StringBuilder(); for (java.util.Map.Entry<java.lang.String, com.google.gson.JsonElement> item : result.entrySet()) { if ((builder.length()) > 0) { builder.append(','); } builder.append(item.getKey()); builder.append(':'); builder.append(item.getValue().getAsString()); } return new com.google.gson.JsonPrimitive(builder.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4839/buggy-version/main.src.main.java.net.oneandone.stool.setup.Lib.java", "BodyUseAPI": [], "Fixed commit": "e160aa1b85ea3f0b4ebe4d798b6deac17bf53b2e", "Url": "https://api.github.com/repos/mlhartme/stool", "Date": "2015-11-26T21:42:06Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["example.banking.dao.AccountDao.find(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fromAccount == null) throw new example.banking.services.AccountNotFoundException(java.lang.String.format(\"Account #%d was not found\", fromAccountId));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6944/buggy-version/src.main.java.example.banking.services.SimpleBankingService.java", "BodyUseAPI": [], "Fixed commit": "ff5e3e03eb95d16b5dd21dd0f66dc7173ab8b3da", "Url": "https://api.github.com/repos/thenewcircle/class-3980", "Date": "2015-04-29T14:10:09Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.bcvsolutions.idm.acc.service.api.SysSystemService.readObject(eu.bcvsolutions.idm.acc.entity.SysSystem,attribute.getSystemMapping(),eu.bcvsolutions.idm.ic.impl.IcUidAttributeImpl)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (attributes == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4793/buggy-version/Realization.backend.acc.src.main.java.eu.bcvsolutions.idm.acc.security.authentication.impl.DefaultAccAuthenticator.java", "BodyUseAPI": [], "Fixed commit": "1f82dc498da4e5053a9bc2d777d87d3538779e22", "Url": "https://api.github.com/repos/bcvsolutions/CzechIdMng", "Date": "2017-03-16T14:59:36Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.unicef.rapidreg.service.cache.CaseFieldValueCache.getProfileValue(CaseProfile.SEX)) != null) { gender = CaseListAdapter.Gender.valueOf(org.unicef.rapidreg.service.cache.CaseFieldValueCache.getProfileValue(CaseProfile.SEX).toUpperCase()); }else { gender = CaseListAdapter.Gender.UNKNOWN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2231/buggy-version/app.src.main.java.org.unicef.rapidreg.widgets.viewholder.MiniFormProfileViewHolder.java", "BodyUseAPI": [], "Fixed commit": "95019c969912fc92890b812b400dbd7f1e025565", "Url": "https://api.github.com/repos/UnicefNY/RapidReg", "Date": "2016-07-01T07:36:13Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((caseInfo.get(\"Sex\")) != null) { gender = org.unicef.rapidreg.childcase.CaseListAdapter.Gender.valueOf(caseInfo.get(\"Sex\").toUpperCase()); }else { gender = org.unicef.rapidreg.childcase.CaseListAdapter.Gender.UNKNOWN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2231/buggy-version/app.src.main.java.org.unicef.rapidreg.childcase.CaseListAdapter.java", "BodyUseAPI": ["org.unicef.rapidreg.childcase.CaseListAdapter.Gender.valueOf(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.lang.String.toUpperCase()"], "Fixed commit": "95019c969912fc92890b812b400dbd7f1e025565", "Url": "https://api.github.com/repos/UnicefNY/RapidReg", "Date": "2016-07-01T07:36:13Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.getY()) == (o.getY())) { return (this.getX()) < (o.getX()) ? -1 : 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/9272/buggy-version/src.entity.AbstractEntity.java", "BodyUseAPI": ["entity.AbstractEntity.getX()"], "Fixed commit": "5f2c078f4a5477e919c0f0d9de33066404d397a7", "Url": "https://api.github.com/repos/DominikRidder/RTSProjekt", "Date": "2015-10-15T08:48:48Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((firmware) == null) || ((firmware.keySet()) == null)) || (firmware.keySet().isEmpty())) return new java.util.ArrayList<>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/244/buggy-version/src.main.java.io.relayr.java.model.models.DeviceModel.java", "BodyUseAPI": [], "Fixed commit": "ae586431d2062e2462f69818960cb07290725a77", "Url": "https://api.github.com/repos/relayr/java-sdk", "Date": "2016-03-11T14:43:15Z"},
{"Line": "=>718", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Bukkit.getServer().getPlayer(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (player != null) updateVanishState(player, false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5430/buggy-version/SimplyVanish.src.asofold.simplyvanish.SimplyVanishCore.java", "BodyUseAPI": ["asofold.simplyvanish.SimplyVanishCore.updateVanishState(org.bukkit.entity.Player,boolean)"], "Fixed commit": "9380c4491e1150a114d754954453cc3361537059", "Url": "https://api.github.com/repos/asofold/SimplyVanish", "Date": "2012-04-08T19:30:43Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["matcha.PositionStats.getTradeCountSma30(backTestingParameters.getMovingAverageDayCount())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tradeCountSma30 == (PositionStats.NOT_ENOUGH_DATA_FOR_EDGE)) { haveEdge = false; }else if (tradeCountSma30 < ((backTestingParameters.getEdgeLevelCount()) * (-1))) { haveEdge = true; }else if (tradeCountSma30 > (backTestingParameters.getEdgeLevelCount())) { haveEdge = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5976/buggy-version/src.main.java.matcha.PositionExecutor.java", "BodyUseAPI": [], "Fixed commit": "dc24ed0d772cac30b55a08d637e354256956af08", "Url": "https://api.github.com/repos/willhumphreys/backtesting", "Date": "2016-08-12T20:34:25Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (expense.getPaid()) { labels[count] = ((expense.getDueDate().getMonthValue()) + \"/\") + (expense.getDueDate().getYear()); data[(count++)] = expense.getAmount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5415/buggy-version/src.main.java.au.com.mason.expensemanager.service.ExpenseService.java", "BodyUseAPI": ["au.com.mason.expensemanager.domain.Expense.getDueDate()", "au.com.mason.expensemanager.domain.Expense.getDueDate()", "expense.getDueDate().getYear()", "expense.getDueDate().getMonthValue()", "au.com.mason.expensemanager.domain.Expense.getAmount()"], "Fixed commit": "4be4c238e65ccb931b0027148accec1589e12c01", "Url": "https://api.github.com/repos/cjmason8/expenseManager", "Date": "2017-09-23T07:16:45Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(org.nutz.lang.Lang.isAndroid)) { org.nutz.mvc.impl.chainconfig.JsonActionChainMakerConfiguretion.log.warn(\"org/nutz/mvc/impl/chainconfig/default-chains.js NOT Found!!\"); throw new org.nutz.NutRuntimeException(\"Default Chains File Not FOUND?!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1976/buggy-version/src.org.nutz.mvc.impl.chainconfig.JsonActionChainMakerConfiguretion.java", "BodyUseAPI": [], "Fixed commit": "18b2f23d83ada8844e3a3d8e7e23e94e705e3a25", "Url": "https://api.github.com/repos/nutzam/nutz", "Date": "2012-12-21T12:48:55Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.nutz.lang.Lang.isAndroid) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1976/buggy-version/src.org.nutz.mvc.impl.chainconfig.JsonActionChainMakerConfiguretion.java", "BodyUseAPI": [], "Fixed commit": "18b2f23d83ada8844e3a3d8e7e23e94e705e3a25", "Url": "https://api.github.com/repos/nutzam/nutz", "Date": "2012-12-21T12:48:55Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value) == (other.value)) { return (hotel.rating) > (other.hotel.rating) ? this : other; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4576/buggy-version/src.main.java.com.yrachid.reservations.data.ReservationPrice.java", "BodyUseAPI": [], "Fixed commit": "1e6d978e41fa4463b7f9c3cd228ab18f898b891e", "Url": "https://api.github.com/repos/othman853/java-newbie-hotel-reservation", "Date": "2016-05-03T20:59:39Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mng.player.getPlayingTrack()) == null) { msg += \"\\nand the Player has stated playing;\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8083/buggy-version/src.main.java.me.duncte123.skybot.utils.AudioUtils.java", "BodyUseAPI": [], "Fixed commit": "e81effbf98cc172a3ad082731cfdbda398941df5", "Url": "https://api.github.com/repos/DuncteBot/SkyBot", "Date": "2017-08-03T16:48:08Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.uniks.networkparser.ext.Os.isEclipse()) { de.uniks.networkparser.ext.generic.ReflectionLoader.call(\"show\", this.stage); }else { try { de.uniks.networkparser.ext.generic.ReflectionLoader.call(\"show\", this.stage); } catch (java.lang.Exception e) { errorHandler.saveException(e, this.stage); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5069/buggy-version/src.main.java.de.uniks.networkparser.ext.javafx.SimpleController.java", "BodyUseAPI": [], "Fixed commit": "d172fe96e98a673f94d1f9d9620186b6c2fe5fdf", "Url": "https://api.github.com/repos/fujaba/NetworkParser", "Date": "2017-07-11T19:43:54Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hp.hpl.jena.rdf.model.Statement.getObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(obj.isLiteral())) && (conf.getIgnoreElementList().contains(obj.toString()))) { log(((\"Ignoring statement \" + st) + \" due to ignoreElememtList (object)\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6292/buggy-version/es.upm.oeg.ar2dtool.RDF2Diagram.java", "BodyUseAPI": [], "Fixed commit": "ec3abefe820f3dd0f992f262365daf6833de0ba1", "Url": "https://api.github.com/repos/idafensp/ar2dtool", "Date": "2015-03-25T14:18:02Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (maxPerWorker == 0) maxPerWorker = 50;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4959/buggy-version/src.main.java.uk.ac.shef.dcs.jate.algorithm.RAKE.java", "BodyUseAPI": [], "Fixed commit": "a9ce504b56692ccde127eb1cded9b99c287a51fb", "Url": "https://api.github.com/repos/ziqizhang/jate", "Date": "2016-02-25T15:22:22Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tString.equals(\"s. p. harrison\")) || (tString.equals(\"a. a. polikarpov\"))) java.lang.System.out.println(\"here\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4959/buggy-version/src.main.java.uk.ac.shef.dcs.jate.algorithm.RAKEWorker.java", "BodyUseAPI": [], "Fixed commit": "a9ce504b56692ccde127eb1cded9b99c287a51fb", "Url": "https://api.github.com/repos/ziqizhang/jate", "Date": "2016-02-25T15:22:22Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (path.startsWith(\"file://\")) { return new java.io.FileInputStream(path.substring(6)); }else { return new java.io.FileInputStream(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2091/buggy-version/framework.src.com.phonegap.FileTransfer.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "bb777c096c981b163ea70483531d800e414ddf0b", "Url": "https://api.github.com/repos/macdonst/phonegap-android", "Date": "2011-09-21T20:46:43Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (chunkedMode) { conn.setChunkedStreamingMode(maxBufferSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2091/buggy-version/framework.src.com.phonegap.FileTransfer.java", "BodyUseAPI": [], "Fixed commit": "bb777c096c981b163ea70483531d800e414ddf0b", "Url": "https://api.github.com/repos/macdonst/phonegap-android", "Date": "2011-09-21T20:46:43Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(instanceIds.isEmpty())) { persistenceSupport.transactionWithRetry(com.eucalyptus.autoscaling.instances.AutoScalingInstance.class, updateCallback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8515/buggy-version/clc.modules.autoscaling-backend.src.main.java.com.eucalyptus.autoscaling.instances.PersistenceAutoScalingInstances.java", "BodyUseAPI": [], "Fixed commit": "51a8796b39cfbdc3c4ada0b74db16b7a5311c2bd", "Url": "https://api.github.com/repos/eucalyptus/eucalyptus", "Date": "2016-02-12T00:54:00Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.pms.configuration.RendererConfiguration.getRendererConfigurationByUUID(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (renderer != null) { player = ((net.pms.util.BasicPlayer.Logical) (renderer.getPlayer())); players.put(uuid, player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8482/buggy-version/src.main.java.net.pms.network.PlayerControlHandler.java", "BodyUseAPI": ["net.pms.configuration.RendererConfiguration.getPlayer()"], "Fixed commit": "629a3571f21aa936204e6a30902ceaa27e595721", "Url": "https://api.github.com/repos/UniversalMediaServer/UniversalMediaServer", "Date": "2017-06-07T19:28:51Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((delayS) < 3) delayS = 3;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8371/buggy-version/app.src.main.java.com.example.boba.lookapplication.LookActivity.java", "BodyUseAPI": [], "Fixed commit": "7532627fdfb9dc6ac49bb6b93ba36170e8686ad0", "Url": "https://api.github.com/repos/SorokinV/LookApplication", "Date": "2015-06-23T12:39:30Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((delayS) > 300) delayS = 300;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8371/buggy-version/app.src.main.java.com.example.boba.lookapplication.LookActivity.java", "BodyUseAPI": [], "Fixed commit": "7532627fdfb9dc6ac49bb6b93ba36170e8686ad0", "Url": "https://api.github.com/repos/SorokinV/LookApplication", "Date": "2015-06-23T12:39:30Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((delayS) >= ((timeM) * 60)) delayS = ((timeM) * 60) / 2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8371/buggy-version/app.src.main.java.com.example.boba.lookapplication.LookActivity.java", "BodyUseAPI": [], "Fixed commit": "7532627fdfb9dc6ac49bb6b93ba36170e8686ad0", "Url": "https://api.github.com/repos/SorokinV/LookApplication", "Date": "2015-06-23T12:39:30Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timeM) > (60 * 10)) timeM = 60 * 10;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8371/buggy-version/app.src.main.java.com.example.boba.lookapplication.LookActivity.java", "BodyUseAPI": [], "Fixed commit": "7532627fdfb9dc6ac49bb6b93ba36170e8686ad0", "Url": "https://api.github.com/repos/SorokinV/LookApplication", "Date": "2015-06-23T12:39:30Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timeM) < 2) timeM = 2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8371/buggy-version/app.src.main.java.com.example.boba.lookapplication.LookActivity.java", "BodyUseAPI": [], "Fixed commit": "7532627fdfb9dc6ac49bb6b93ba36170e8686ad0", "Url": "https://api.github.com/repos/SorokinV/LookApplication", "Date": "2015-06-23T12:39:30Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (needClean) { for (java.lang.String path : com.xxboy.services.pool.RunnablePool.runningImageLoaderPool.keySet()) { if (!(com.xxboy.services.pool.RunnablePool.checkCanBeRan(com.xxboy.services.pool.RunnablePool.runningImageLoaderPool.get(path).getPosition()))) { com.xxboy.services.pool.RunnablePool.removeRunningImageLoader(com.xxboy.services.pool.RunnablePool.runningImageLoaderPool.remove(path)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1217/buggy-version/src.com.xxboy.services.pool.RunnablePool.java", "BodyUseAPI": [], "Fixed commit": "38b47bfeae382ba3805f9705b4f8c9d5c69639ec", "Url": "https://api.github.com/repos/armstrongli/XCamera", "Date": "2015-03-28T13:58:19Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(fx.canDelete())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8055/buggy-version/src.main.java.jp.co.flect.salesforce.fixtures.FixtureRunner.java", "BodyUseAPI": [], "Fixed commit": "4fb17c67a2c9fe591330bc9263c7ae3daf604b06", "Url": "https://api.github.com/repos/shunjikonishi/flectSalesforce", "Date": "2013-11-07T12:21:40Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.roan.kps.Main.getExtendedKeyCode(org.jnativehook.NativeInputEvent)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (me.roan.kps.Main.keys.containsKey(code)) { me.roan.kps.Main.keys.get(code).keyReleased(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2120/buggy-version/KeysPerSecond.src.me.roan.kps.Main.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, me.roan.kps.Main.Key>.get(int)", "me.roan.kps.Main.Key.keyReleased()"], "Fixed commit": "35755172cb6b9ad2f4259907a3358287c27fa896", "Url": "https://api.github.com/repos/RoanH/KeysPerSecond", "Date": "2017-12-24T17:00:15Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(com.appus.splash.Splash.hasBeenPerformed)) { com.appus.splash.Splash.hasBeenPerformed = com.appus.splash.Splash.isOneShot; initScreenSize(activity); replaceRootContent(activity); initViews(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5309/buggy-version/zoom-splash.src.main.java.com.appus.splash.Splash.java", "BodyUseAPI": [], "Fixed commit": "0ea5ecec4ab1dd21281d96c23a54ae500e6858da", "Url": "https://api.github.com/repos/igor-malytsky/Zoom-Splash", "Date": "2015-09-16T14:57:46Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (validFrom != null) { validFromStr = sdf.format(validFrom); validToStr = sdf.format(validTo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5884/buggy-version/src.main.java.dk.frv.enav.ins.gui.ComponentPanels.NoGoComponentPanel.java", "BodyUseAPI": ["java.text.SimpleDateFormat.format(java.util.Date)"], "Fixed commit": "9a57e6a3f9aff23163839b0e6ca9ddd3fc645c4b", "Url": "https://api.github.com/repos/DaMSA/ee-INS", "Date": "2012-07-12T17:38:46Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line_num == (editLine)) line += \"_\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7698/buggy-version/java.emd24.rpgmod.gui.GUIScriptEditor.java", "BodyUseAPI": [], "Fixed commit": "db5b1c15acb96bc9dc8a2ea0e432c3bf5e4b58ce", "Url": "https://api.github.com/repos/jaltekruse/WhatEverYouWantMinecraft", "Date": "2014-04-27T04:14:12Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRootNode) { refreshRootNode(treeStructure); }else { refreshChildNode(treeStructure, pathToNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8151/buggy-version/plugin-machine.che-plugin-machine-ext-client.src.main.java.org.eclipse.che.ide.extension.machine.client.watcher.SystemFileWatcher.java", "BodyUseAPI": [], "Fixed commit": "67e324222c53d24053d351c65ab713c84766c0c5", "Url": "https://api.github.com/repos/codenvy-legacy/che-plugins", "Date": "2015-08-04T14:04:21Z"},
{"Line": "=>526", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSession) != null) { mSession.release(); mSession = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8320/buggy-version/app.src.main.java.com.julie.spotifystreamer.MediaPlayerService.java", "BodyUseAPI": [], "Fixed commit": "32e59a6984318ba44cfd86913213d7bbc6f616fc", "Url": "https://api.github.com/repos/delorenzo/SpotifyStreamer", "Date": "2016-06-04T20:22:57Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (bindingName != null) { throw new java.lang.RuntimeException(java.lang.String.format((\"No binding was defined for class %s and name %s \" + \"in scope %s and its parents\"), clazz.getName(), bindingName, getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2518/buggy-version/toothpick-runtime.src.main.java.toothpick.ScopeImpl.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String,java.lang.String,getName())"], "Fixed commit": "ab317348a110e9892a5853d822a4caded4420cac", "Url": "https://api.github.com/repos/stephanenicolas/toothpick", "Date": "2016-05-11T04:40:13Z"},
{"Line": "=>2006", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.grails.orm.hibernate.cfg.Association.getInverseSide()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (otherSide != null) { if (isHasOne(otherSide)) { return false; } if ((!(currentGrailsProp.isOwningSide())) && (otherSide.isOwningSide())) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4170/buggy-version/grails-datastore-gorm-hibernate5.src.main.groovy.org.grails.orm.hibernate.cfg.GrailsDomainBinder.java", "BodyUseAPI": ["org.grails.orm.hibernate.cfg.Association.isOwningSide()", "org.grails.orm.hibernate.cfg.GrailsDomainBinder.isHasOne(org.grails.orm.hibernate.cfg.Association)"], "Fixed commit": "81b316e88e81b98a33a57c40ed8921be2280ccfe", "Url": "https://api.github.com/repos/grails/gorm-hibernate5", "Date": "2016-09-16T15:13:01Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["chat.infra.conexao.Requisicao<chat.dominio.entidade.Sala>.getDados()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((sala.getUsuarios()) != null) { for (chat.dominio.entidade.Usuario u : sala.getUsuarios()) { chat.servidor.SalasContainer.Instance().entrarNaSala(u, sala); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8027/buggy-version/src.chat.servidor.servico.SalaServico.java", "BodyUseAPI": ["chat.servidor.SalasContainer.Instance().entrarNaSala(chat.dominio.entidade.Usuario,chat.dominio.entidade.Sala)", "chat.dominio.entidade.Sala.getUsuarios()"], "Fixed commit": "b67d392289c1f9a2d6b29e345ee34bc75c19e0b1", "Url": "https://api.github.com/repos/faustofjunqueira/chat", "Date": "2015-11-02T21:31:48Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tc.execute(WhoAmIAction.INSTANCE, new com.floragunn.searchguard.action.whoami.WhoAmIRequest()).actionGet()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(whoAmIRes.isNodeCertificateRequest())) { java.lang.System.out.println(\"Make sure the elasticsearch.yml on all nodes contain\"); java.lang.System.out.println(((((\"searchguard.authcz.admin_dn:\" + (java.lang.System.lineSeparator())) + \" - \\\"\") + (whoAmIRes.getDn())) + \"\\\"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1280/buggy-version/src.main.java.com.floragunn.searchguard.tools.SearchGuardAdmin.java", "BodyUseAPI": ["java.io.PrintStream.println(((((\"searchguard.authcz.admin_dn:\" + (java.lang.System.lineSeparator())) + \"  - \\\"\") + (whoAmIRes.getDn())) + \"\\\"\"))", "com.floragunn.searchguard.action.whoami.WhoAmIResponse.getDn()"], "Fixed commit": "2f9259f4ed4131c581e33addf8e1eec1a37ecf40", "Url": "https://api.github.com/repos/floragunncom/search-guard", "Date": "2017-10-31T13:07:51Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tictactoe.game) == false) { if (tictactoe.character.equals(\"O\")) { tictactoe.character = \"X\"; }else if (tictactoe.character.equals(\"X\")) { tictactoe.character = \"O\"; } }else { java.lang.System.out.println(\"Invalid input. Please try again.\"); tictactoe.line = tictactoe.in.nextInt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7736/buggy-version/src.tictactoe.java", "BodyUseAPI": [], "Fixed commit": "ee6899d061205a8e8b36b3ee42dfd6cf45da1451", "Url": "https://api.github.com/repos/isaaclo123/tictactoe", "Date": "2015-03-21T05:30:50Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((value.length()) == 0) { return new greed.model.ParamValue(param, new java.lang.String[]{ }); }else { java.lang.String[] valueList = value.split(\",\"); greed.model.Param paramWithPrim = new greed.model.Param(param.getName(), new greed.model.Type(param.getType().getPrimitive(), 0), param.getIndex()); for (int i = 0; i < (valueList.length); i++) { valueList[i] = renderParamValue(new greed.model.ParamValue(paramWithPrim, valueList[i].trim())); } return new greed.model.ParamValue(param, valueList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/771/buggy-version/src.main.java.greed.code.lang.AbstractLanguage.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "1410faf9278287d00df7013da8917465adfc0e78", "Url": "https://api.github.com/repos/shivawu/topcoder-greed", "Date": "2013-11-01T21:19:55Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (de.cismet.cids.custom.sudplan.DefaultModelManagerUI.LOG.isDebugEnabled()) { de.cismet.cids.custom.sudplan.DefaultModelManagerUI.LOG.debug(((\"DefaultModelManagerUI for '\" + (model.getCidsBean())) + \"' initialized\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5738/buggy-version/src.main.java.de.cismet.cids.custom.sudplan.DefaultModelManagerUI.java", "BodyUseAPI": [], "Fixed commit": "ae8fa830f69e22218b5d8d3e3e8d03877d35f03d", "Url": "https://api.github.com/repos/cismet/cids-custom-sudplan", "Date": "2012-08-13T12:49:26Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1241/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "2666c20fd45e6bb698d5f4a800439125ba8a4943", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-04-05T11:35:08Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.glassfish.jersey.examples.helloworld.CustomerStore.getCustomer(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (reqCust != null) { return reqCust.toJson(); }else { return \"No Such User\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5244/buggy-version/src.main.java.org.glassfish.jersey.examples.helloworld.Customers.java", "BodyUseAPI": ["org.glassfish.jersey.examples.helloworld.Customer.toJson()"], "Fixed commit": "92ebdf8e18c13cb20f69c893feaf281109b31263", "Url": "https://api.github.com/repos/billy102386/codesample", "Date": "2013-11-05T02:54:01Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scrollDirection == (ScrollDirection.SCROLL_DIRECTION_DOWN)) && hidden) { animateOffset(child, mDefaultOffset); }else if ((scrollDirection == (ScrollDirection.SCROLL_DIRECTION_UP)) && (!hidden)) { animateOffset(child, ((mBottomNavHeight) + (mDefaultOffset))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6692/buggy-version/bottom-navigation-bar.src.main.java.com.ashokvarma.bottomnavigation.behaviour.BottomVerticalScrollBehavior.java", "BodyUseAPI": [], "Fixed commit": "04223ef287b383bf83fd23af76b33662c2094ecb", "Url": "https://api.github.com/repos/jt-gilkeson/BottomNavigation", "Date": "2016-06-23T02:59:09Z"},
{"Line": "=>4193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bo instanceof com.emc.storageos.db.client.model.Volume) { volume = ((com.emc.storageos.db.client.model.Volume) (bo)); if (com.emc.storageos.volumecontroller.impl.ControllerUtils.isVolumeFullCopy(volume, _dbClient)) { volume = _dbClient.queryObject(com.emc.storageos.db.client.model.Volume.class, volume.getAssociatedSourceVolume()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2741/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.smis.SmisCommandHelper.java", "BodyUseAPI": [], "Fixed commit": "42d0556a723298da75a1367a789639040b2500cf", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-12-22T19:17:20Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((count) == 1) { aurora.V1.core.AuroraLauncher.logger.info(\"AuroraLauncher Exited\"); manualMode = false; launchPane.dispose(); launchPane.setVisible(false); launchPane.setAlwaysOnTop(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3202/buggy-version/src.aurora.V1.core.AuroraLauncher.java", "BodyUseAPI": [], "Fixed commit": "2a5972ef1f96ea6037c630b1018032ebbb646940", "Url": "https://api.github.com/repos/sguergachi/AuroraGameHub", "Date": "2013-12-14T05:57:33Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(rentableLand.get(landName).repeatable)) { rentableLand.remove(landName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/920/buggy-version/src.com.bekvon.bukkit.residence.economy.rent.RentManager.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.bekvon.bukkit.residence.economy.rent.RentableLand>.remove(java.lang.String)"], "Fixed commit": "ff749f4e6fa636d09bb4a6cdb3f33be63478f7cd", "Url": "https://api.github.com/repos/bekvon/Residence", "Date": "2011-05-22T22:09:18Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (text.isEmpty()) text = org.pescuma.buildhealth.computer.tasks.CodeTasksComputer.NO_MESSAGE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8413/buggy-version/buildhealth.extractors.src.org.pescuma.buildhealth.computer.tasks.CodeTasksComputer.java", "BodyUseAPI": [], "Fixed commit": "ecda3c7873d408ffc01f30a2eeed0b3e5fac1d5c", "Url": "https://api.github.com/repos/pescuma/buildhealth", "Date": "2014-03-12T17:16:56Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (text.contains(\"Submission\")) { out.println(\"<tr><td>\"); }else if ((!(text.contains(\"Options\"))) && (!(text.contains(\"Submission\")))) { out.println((text + \"<br>\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5598/buggy-version/src.CreateGameServlet.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.io.PrintWriter.println(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "7fdaa52a59dec63c48bee8ecf339583fef661820", "Url": "https://api.github.com/repos/rohanraval/Jeopardy-Java", "Date": "2017-03-16T23:35:35Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["requirements.get(i).getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tempName.length()) > 15) { tempName = (tempName.substring(0, 15)) + \"...\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1878/buggy-version/TaskManager.src.main.java.edu.wpi.cs.wpisuitetng.modules.taskmanager.view.tasks.AbstractInformationPanel.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "c4ff6cb2f8e7e4485f030f9f9fec3ebf60c0e3ed", "Url": "https://api.github.com/repos/R2-Team2/wpi-suite", "Date": "2014-12-10T04:05:02Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(processMetaFile.createNewFile())) { throw new java.io.IOException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1085/buggy-version/Kitodo-FileManagement.src.main.java.org.kitodo.filemanagement.FileManagement.java", "BodyUseAPI": [], "Fixed commit": "31929739c89489f58e011978c4c76b59de32bd10", "Url": "https://api.github.com/repos/Kathrin-Huber/kitodo-production", "Date": "2017-04-21T08:38:00Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(processMetaFile.getParentFile().mkdirs())) { throw new java.io.IOException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1085/buggy-version/Kitodo-FileManagement.src.main.java.org.kitodo.filemanagement.FileManagement.java", "BodyUseAPI": [], "Fixed commit": "31929739c89489f58e011978c4c76b59de32bd10", "Url": "https://api.github.com/repos/Kathrin-Huber/kitodo-production", "Date": "2017-04-21T08:38:00Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (new java.io.File(path).isDirectory()) { return new jetbrains.mps.reloading.FileClassPathItem(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6309/buggy-version/core.kernel.source.jetbrains.mps.reloading.ClassPathFactory.java", "BodyUseAPI": [], "Fixed commit": "728381602d4800b1fe21be0207cc31b3c2746a83", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2013-02-07T13:51:55Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isOffScreen()) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5960/buggy-version/Enemy.java", "BodyUseAPI": [], "Fixed commit": "3b6d0a59718cee290d1c5a6cbfbd6161960f8d73", "Url": "https://api.github.com/repos/jakewilson/spaceinvaders", "Date": "2014-03-11T15:52:24Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ocpsoft.prettytime.PrettyTime.format(java.util.Date)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((str.contains(\"mon\")) || (str.contains(\"week\"))) { java.text.DateFormat format = new java.text.SimpleDateFormat(\"d MMM\"); str = format.format(date); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8135/buggy-version/app.src.main.java.io.getstrike.strike.EmailAdapter.java", "BodyUseAPI": [], "Fixed commit": "8be88ea2181cfb3337ce3d290d015ae9ac6ff486", "Url": "https://api.github.com/repos/sidharthsethia/Assignment---Email-App", "Date": "2016-02-11T17:42:41Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (intent == null) { return super.onStartCommand(intent, flags, startId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2286/buggy-version/app.src.main.java.com.zsx.download.Lib_DownloadService.java", "BodyUseAPI": ["android.app.Service.onStartCommand(android.content.Intent,int,int)"], "Fixed commit": "0c6874db3ca816ee216b57c95c3fca3e1b3fffb8", "Url": "https://api.github.com/repos/z1986s8x11/androidLib", "Date": "2015-11-06T07:50:13Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((grid[to.getX()][to.getY()]) == (com.project.server.logic.board.Board.BOARD_EDGE)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6336/buggy-version/src.com.project.server.logic.board.Board.java", "BodyUseAPI": [], "Fixed commit": "4255f5863ccc565f8ebe4bcfa11b59daf66bb0d0", "Url": "https://api.github.com/repos/bigblind/Project-2-1", "Date": "2015-10-04T17:06:26Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(expectOperator)) throw new com.github.gianlucanitti.javaexpreval.UnexpectedTokenException(expectOperator, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5037/buggy-version/src.main.java.com.github.gianlucanitti.javaexpreval.ExpressionList.java", "BodyUseAPI": [], "Fixed commit": "e9a9ed359a2a506b692c54ee0a930ad94238977a", "Url": "https://api.github.com/repos/gianluca-nitti/java-expr-eval", "Date": "2016-10-03T12:54:20Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ignoreTransform) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8817/buggy-version/jme3-core.src.main.java.com.jme3.scene.Geometry.java", "BodyUseAPI": [], "Fixed commit": "f67751517daffbea3221bbe1d9e948be60e2c524", "Url": "https://api.github.com/repos/MeFisto94/jmonkeyengine", "Date": "2017-09-22T16:36:52Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.query(java.lang.String,java.lang.String[],<nulltype>,<nulltype>,<nulltype>,<nulltype>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((cursor.getString(0)) != null) { if ((cursor.getString(0).compareTo(\"yes\")) == 0) { prevDate = cursor.getInt(2); prevDateMonth = cursor.getInt(3); if ((java.lang.Math.abs((currDate - prevDate))) <= 1) dosesInaRow++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7161/buggy-version/malaria-app-android.src.main.java.com.peacecorps.malaria.db.DatabaseSQLiteHelper.java", "BodyUseAPI": ["android.database.Cursor.getInt(int)", "android.database.Cursor.getString(int)", "cursor.getString(0).compareTo(java.lang.String)", "android.database.Cursor.getInt(int)"], "Fixed commit": "c7707f64294e28ea6da59726fc7873605c835de6", "Url": "https://api.github.com/repos/codingblazer/malaria-app-android", "Date": "2017-01-08T13:29:36Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pattern.contains(\"/{\")) { partsPattern = pattern.replaceAll(\"(\\\\{[^\\\\}]+\\\\})\", \"\\\\\\\\{(.+)\\\\\\\\}\"); }else if (pattern.contains(\"/:\")) { partsPattern = pattern.replaceAll(\"(/:[^:^/]+)\", \"\\\\/:(.+)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4373/buggy-version/src.main.java.com.github.lbroudoux.microcks.util.DispatchCriteriaHelper.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "e0a5cbb0491634d7dc80c0ca9a5fe7b699067c7c", "Url": "https://api.github.com/repos/microcks/microcks", "Date": "2017-08-03T12:53:48Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((url.indexOf(operationNameRadix)) != (-1)) { url = url.substring(url.indexOf(operationNameRadix)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4373/buggy-version/src.main.java.com.github.lbroudoux.microcks.util.postman.PostmanCollectionImporter.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "e0a5cbb0491634d7dc80c0ca9a5fe7b699067c7c", "Url": "https://api.github.com/repos/microcks/microcks", "Date": "2017-08-03T12:53:48Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (structureNameSet.add(s.getName())) { possibleStructures.add(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4377/buggy-version/src.main.java.edu.umich.gpd.algorithm.AbstractSolver.java", "BodyUseAPI": ["java.util.List<edu.umich.gpd.database.common.Structure>.add(edu.umich.gpd.database.common.Structure)"], "Fixed commit": "0c008f75a46b954f0ab33819b07776299ce0baae", "Url": "https://api.github.com/repos/dongyoungy/gpd", "Date": "2017-03-03T00:08:37Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showConfirmDialog(this.getMobileAppGUI(),java.lang.String,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (makePayment != 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4340/buggy-version/src.ticketingsystem.GUIs.MobileAppGUIs.Panels.PaymentPanel.java", "BodyUseAPI": [], "Fixed commit": "131899adf8587f720bf74d94bef23eab6cd05e92", "Url": "https://api.github.com/repos/MarkLeeFrancis/CSSD", "Date": "2015-03-01T02:21:55Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showConfirmDialog(this.getMobileAppGUI(),java.lang.String,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (makePayment != 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4340/buggy-version/src.ticketingsystem.GUIs.MobileAppGUIs.Panels.PaymentPanel.java", "BodyUseAPI": [], "Fixed commit": "131899adf8587f720bf74d94bef23eab6cd05e92", "Url": "https://api.github.com/repos/MarkLeeFrancis/CSSD", "Date": "2015-03-01T02:21:55Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (idx > 20) idx = 10; else if (idx == (-1)) idx = 10;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6671/buggy-version/app.src.main.java.c.m.mobile8.ViewActivity.java", "BodyUseAPI": [], "Fixed commit": "6823d64d16e9234e5973f0c4e27d7f2c30e341f1", "Url": "https://api.github.com/repos/hyosang82/silver-spoon", "Date": "2016-05-28T15:51:11Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(android.text.TextUtils.isEmpty(url))) && (!(url.contains(\"://\")))) { url = \"http://\" + url; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2502/buggy-version/library.src.com.dmitriy.tarasov.android.intents.IntentUtils.java", "BodyUseAPI": [], "Fixed commit": "011cf240bf6e339211953596426fffdd23e91e56", "Url": "https://api.github.com/repos/d-tarasov/android-intents", "Date": "2013-08-11T14:40:25Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (equippedItem != null) { final net.minecraft.item.Item item = equippedItem.getItem(); final net.minecraft.block.Block block = getBlockFrom(item); return (block != null) && (block.getClass().equals(net.snowshock.goldentreasures.blocks.BlockGoldenTorch.class)); }else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2526/buggy-version/src.main.java.net.snowshock.goldentreasures.blocks.BlockGoldenTorch.java", "BodyUseAPI": ["net.minecraft.item.ItemStack.getItem()"], "Fixed commit": "f3e7691615427d5107943b80884f8ccdb2aae34e", "Url": "https://api.github.com/repos/LyraelRayne/Golden-Treasures", "Date": "2015-12-30T07:25:51Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((params.get(\"NanoHttpd.QUERY_STRING\")) != null) is = new java.io.ByteArrayInputStream(params.get(\"NanoHttpd.QUERY_STRING\").getBytes()); else if ((files.get(\"postData\")) != null) is = new java.io.ByteArrayInputStream(files.get(\"postData\").getBytes()); else return new com.github.uiautomatorstub.Response(Response.Status.INTERNAL_ERROR, MIME_PLAINTEXT, \"Invalid http post data!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5404/buggy-version/src.com.github.uiautomatorstub.AutomatorHttpServer.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.lang.String.getBytes()"], "Fixed commit": "dbc38bc4b57c921ac805a12bb9e8f9d5fcbf3a4b", "Url": "https://api.github.com/repos/PATHocong/android-uiautomator-jsonrpcserver", "Date": "2014-07-15T11:03:23Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isClickedOnEmail) { downloadUrl = savedFileName; }else { downloadUrl = org.ednovo.gooru.server.service.UrlGenerator.generateUrl(getRestEndPoint(), UrlToken.V2_DOWNLOADFILE, getLoggedInSessionToken(), savedFileName, pdfName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2897/buggy-version/src.main.java.org.ednovo.gooru.server.service.AnalyticsServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "260990a386f09d4a583a20e3442d29fe62177521", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-01-02T07:21:32Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!g) sb.append(')');", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6636/buggy-version/src.obj.Search.java", "BodyUseAPI": [], "Fixed commit": "c65ccb426eabf145b938ef1af40becff766b9644", "Url": "https://api.github.com/repos/LionCherry/EPMS", "Date": "2017-11-06T08:22:09Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.noahhuppert.java.Wumpus.WumpusGame.gameActive) { com.noahhuppert.java.Wumpus.ArrowElement element = null; if (!((targetRoom.getElement()) instanceof com.noahhuppert.java.Wumpus.ArrowElement)) { element = new com.noahhuppert.java.Wumpus.ArrowElement(); }else { element = ((com.noahhuppert.java.Wumpus.ArrowElement) (targetRoom.getElement())); } element.ammountArrows += 1; targetRoom.setElement(element); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6918/buggy-version/src.com.noahhuppert.java.Wumpus.WumpusGame.java", "BodyUseAPI": [], "Fixed commit": "cc10e168aa5c37a79dde994179b5b7b71714dd0d", "Url": "https://api.github.com/repos/Noah-Huppert/Wumpus", "Date": "2014-10-24T17:29:16Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mExpandPositon) < 0) { mExpandView.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4719/buggy-version/app.src.main.java.com.zdh.widget.expandtaggridbar.customgridview.ExpandTagNaviGridBar.java", "BodyUseAPI": [], "Fixed commit": "40c151415ae0707ca3142908b0b6e186cf97019b", "Url": "https://api.github.com/repos/d198965/ExpandTagGridBar", "Date": "2016-03-27T06:23:56Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (publicSearch != null) { savedSearch.setPublic(publicSearch); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5670/buggy-version/app.src.com.constellio.app.ui.pages.search.savedSearch.SavedSearchPresenter.java", "BodyUseAPI": ["com.constellio.model.entities.records.wrappers.SavedSearch.setPublic(java.lang.Boolean)"], "Fixed commit": "3b10c737fd6974976267915243752336a8ad97fc", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2017-10-13T18:00:16Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["client.preparePut(announcementUrl).setBody(json).setHeader(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON).execute().get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((response.getStatusCode()) != 200) { com.proofpoint.galaxy.AnnouncementService.log.warn((((\"Announcement to \" + (announcementUrl)) + \" failed: \") + (response.getStatusText()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4034/buggy-version/src.main.java.com.proofpoint.galaxy.AnnouncementService.java", "BodyUseAPI": ["com.proofpoint.log.Logger.warn((((\"Announcement to \" + (announcementUrl)) + \" failed: \") + (response.getStatusText())))", "com.ning.http.client.Response.getStatusText()"], "Fixed commit": "6f7d350c94cf650bbb9e851d662e216bfb6c1ba1", "Url": "https://api.github.com/repos/dain/galaxy-server", "Date": "2011-03-24T05:21:11Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.task) instanceof org.jenkinsci.plugins.workflow.support.steps.ExecutorStepExecution.PlaceholderTask) { return getPriorityFromOwnerTask(item, priorityCallback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4124/buggy-version/src.main.java.jenkins.advancedqueue.PriorityConfiguration.java", "BodyUseAPI": ["jenkins.advancedqueue.PriorityConfiguration.getPriorityFromOwnerTask(Queue.Item,jenkins.advancedqueue.PriorityConfigurationCallback)"], "Fixed commit": "83afcbcac29107736ee9a84238f2cb8cca39a711", "Url": "https://api.github.com/repos/vitalii-vitrenko/priority-sorter-plugin", "Date": "2016-09-27T12:53:06Z"},
{"Line": "=>732", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(((flags.outputWrapper) == null) || (flags.outputWrapper.contains(com.google.javascript.jscomp.CommandLineRunner.OUTPUT_MARKER)))) { err.println(((\"ERROR - invalid output_wrapper specified. Missing '\" + (com.google.javascript.jscomp.CommandLineRunner.OUTPUT_MARKER)) + \"'.\")); isConfigValid = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8126/buggy-version/src.com.google.javascript.jscomp.CommandLineRunner.java", "BodyUseAPI": [], "Fixed commit": "64c61b8eac6af992d040881d35b2716360c3829c", "Url": "https://api.github.com/repos/google/closure-compiler", "Date": "2014-05-07T15:15:04Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, wyil.lang.Constant>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fieldValue instanceof wyil.lang.Constant.Integer) || (fieldValue instanceof wyil.lang.Constant.Bool)) { return update(record, givenValue, field); }else if (fieldValue instanceof wyil.lang.Constant.Record) { wyil.lang.Constant.Record fieldValue2 = ((wyil.lang.Constant.Record) (fieldValue)); if ((code.fields.size()) == 2) { java.lang.String field2 = code.fields.get(1); wyil.lang.Constant.Record updateField = update(fieldValue2, givenValue, field2); return update(record, updateField, field); }else { wycc.lang.SyntaxError.internalFailure(\"Not implemented!\", \"UpdateInterpreter.java\", null); return null; } }else { wycc.lang.SyntaxError.internalFailure(\"Not implemented!\", \"UpdateInterpreter.java\", null); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1720/buggy-version/modules.wyopcl.src.wyopcl.interpreter.U.UpdateInterpreter.java", "BodyUseAPI": [], "Fixed commit": "8057cfe37c70ac11352856b77f74d1b2caf873b8", "Url": "https://api.github.com/repos/samminweng/WhileyOpenCL", "Date": "2014-09-03T23:08:03Z"},
{"Line": "=>957", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bigstep.datalake.DLFileSystem.getFileStatus(com.bigstep.datalake.Path)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (prefixStatus.isFile()) return new com.bigstep.datalake.FileStatus[]{ prefixStatus };", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2340/buggy-version/src.main.com.bigstep.datalake.DLFileSystem.java", "BodyUseAPI": [], "Fixed commit": "311be4db0a671db38c37fb5c91b11cfa615c4594", "Url": "https://api.github.com/repos/bigstepinc/datalake-client-libraries", "Date": "2016-10-25T10:51:28Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Double.valueOf(clipboard.getPrimaryClip().getItemAt(0).coerceToText(activity).toString())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (value != null) { me.kstep.ucalc.numbers.UNumber item = new me.kstep.ucalc.numbers.UFloat(value); adapter.insert(item, 0); getListView().setItemChecked(0, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4838/buggy-version/src.me.kstep.ucalc.views.UStackFragment.java", "BodyUseAPI": [], "Fixed commit": "9b83a242634daaac6fed1a17c88ea4e9c241c220", "Url": "https://api.github.com/repos/kstep/ucalc", "Date": "2013-05-18T10:41:06Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (t.getEndDate().before(t.getStartDate())) { s += (\"<p><font color=\\\"#006600\\\"><b>\" + (net.sf.memoranda.util.Local.getString(\"No Deadline\"))) + \".</b></font></p>\"; }else if (t.getEndDate().equals(date)) s += (\"<p><font color=\\\"#FF9900\\\"><b>\" + (net.sf.memoranda.util.Local.getString(\"Should be done today\"))) + \".</b></font></p>\"; else { java.util.Calendar endDateCal = t.getEndDate().getCalendar(); java.util.Calendar dateCal = date.getCalendar(); int numOfDays = (((endDateCal.get(java.util.Calendar.YEAR)) * 365) + (endDateCal.get(java.util.Calendar.DAY_OF_YEAR))) - (((dateCal.get(java.util.Calendar.YEAR)) * 365) + (dateCal.get(java.util.Calendar.DAY_OF_YEAR))); java.lang.String days = \"\"; if (numOfDays > 0) { if (numOfDays > 1) { days = ((((net.sf.memoranda.util.Local.getString(\"in\")) + \" \") + numOfDays) + \" \") + (net.sf.memoranda.util.Local.getString(\"day(s)\")); }else { days = net.sf.memoranda.util.Local.getString(\"tomorrow\"); } s += (((((\"<p>\" + (net.sf.memoranda.util.Local.getString(\"Deadline\"))) + \": <i>\") + (t.getEndDate().getMediumDateString())) + \"</i> (\") + days) + \")</p>\"; }else if ((numOfDays < 0) && (numOfDays > (-10000))) { java.lang.String overdueDays = java.lang.String.valueOf(((-1) * numOfDays)); s += (((\"<p><font color=\\\"#FF9900\\\"><b>\" + overdueDays) + \" \") + (net.sf.memoranda.util.Local.getString(\"days overdue\"))) + \".</b></font></p>\"; }else { s += (\"<p>\" + (net.sf.memoranda.util.Local.getString(\"No Deadline\"))) + \"</p>\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3002/buggy-version/src.net.sf.memoranda.util.AgendaGenerator.java", "BodyUseAPI": ["t.getEndDate().equals(net.sf.memoranda.date.CalendarDate)", "net.sf.memoranda.Task.getEndDate()", "t.getEndDate().getMediumDateString()", "t.getEndDate().getCalendar()", "net.sf.memoranda.Task.getEndDate()", "net.sf.memoranda.Task.getEndDate()"], "Fixed commit": "ea69172a5e89127ca3a43ead24e88008c1b13bdc", "Url": "https://api.github.com/repos/cst316/spring16project-Korn", "Date": "2016-03-18T09:00:02Z"},
{"Line": "=>734", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((prevRunningJob) != null) { while (prevRunningJob.isAlive()) { try { java.lang.Thread.sleep(50); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4706/buggy-version/OsmAnd.src.net.osmand.plus.routing.RoutingHelper.java", "BodyUseAPI": [], "Fixed commit": "50804ae0ce0ee9496538ae436794de7eddb5494d", "Url": "https://api.github.com/repos/Zahnstocher/Osmand", "Date": "2015-01-12T01:02:35Z"},
{"Line": "=>831", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (prevRunningJob != null) { newThread.setWaitPrevJob(prevRunningJob); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4706/buggy-version/OsmAnd.src.net.osmand.plus.routing.RoutingHelper.java", "BodyUseAPI": ["net.osmand.plus.routing.RoutingHelper.RouteRecalculationThread.setWaitPrevJob(java.lang.Thread)"], "Fixed commit": "50804ae0ce0ee9496538ae436794de7eddb5494d", "Url": "https://api.github.com/repos/Zahnstocher/Osmand", "Date": "2015-01-12T01:02:35Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((com.SecUpwN.AIMSICD.BuildConfig.DEBUG) && ((mCellTowerGridMarkerClusterer) != null)) && ((mCellTowerGridMarkerClusterer.getItems()) != null)) { android.util.Log.v(TAG, (\"mMessageReceiver CellTowerMarkers.invalidate() markers.size():\" + (mCellTowerGridMarkerClusterer.getItems().size()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/569/buggy-version/app.src.main.java.com.SecUpwN.AIMSICD.activities.MapViewerOsmDroid.java", "BodyUseAPI": ["android.util.Log.v(java.lang.String,(\"mMessageReceiver CellTowerMarkers.invalidate() markers.size():\" + (mCellTowerGridMarkerClusterer.getItems().size())))", "com.SecUpwN.AIMSICD.map.CellTowerGridMarkerClusterer.getItems()", "mCellTowerGridMarkerClusterer.getItems().size()"], "Fixed commit": "dd37fa6c5e91b1c996e3928a7fc30eeca2011a0b", "Url": "https://api.github.com/repos/CellularPrivacy/Android-IMSI-Catcher-Detector", "Date": "2015-05-04T21:41:18Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (context instanceof com.SecUpwN.AIMSICD.activities.MapViewerOsmDroid) { ((com.SecUpwN.AIMSICD.activities.MapViewerOsmDroid) (context)).setRefreshActionButtonState(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/569/buggy-version/app.src.main.java.com.SecUpwN.AIMSICD.utils.Helpers.java", "BodyUseAPI": [], "Fixed commit": "dd37fa6c5e91b1c996e3928a7fc30eeca2011a0b", "Url": "https://api.github.com/repos/CellularPrivacy/Android-IMSI-Catcher-Detector", "Date": "2015-05-04T21:41:18Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (context instanceof com.SecUpwN.AIMSICD.activities.MapViewerOsmDroid) { ((com.SecUpwN.AIMSICD.activities.MapViewerOsmDroid) (context)).setRefreshActionButtonState(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/569/buggy-version/app.src.main.java.com.SecUpwN.AIMSICD.utils.Helpers.java", "BodyUseAPI": [], "Fixed commit": "dd37fa6c5e91b1c996e3928a7fc30eeca2011a0b", "Url": "https://api.github.com/repos/CellularPrivacy/Android-IMSI-Catcher-Detector", "Date": "2015-05-04T21:41:18Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((transactionThrowableFrameCount.get()) > (org.glowroot.agent.model.ErrorMessage.TRANSACTION_THROWABLE_FRAME_LIMIT)) { builder.setCause(Proto.Throwable.newBuilder().setMessage(\"Throwable frame capture limit exceeded\").build()); }else if (recursionDepth == 80) { builder.setCause(Proto.Throwable.newBuilder().setMessage(\"The rest of the causal chain for this exception has been truncated\").build()); }else { builder.setCause(org.glowroot.agent.model.ErrorMessage.buildThrowableInfo(cause, java.util.Arrays.asList(t.getStackTrace()), transactionThrowableFrameCount, (recursionDepth + 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3632/buggy-version/agent.core.src.main.java.org.glowroot.agent.model.ErrorMessage.java", "BodyUseAPI": ["Proto.Throwable.Builder.setCause(Proto.Throwable)", "org.glowroot.agent.model.ErrorMessage.buildThrowableInfo(java.lang.Throwable,java.util.List<java.lang.StackTraceElement>,java.util.concurrent.atomic.AtomicInteger,int)"], "Fixed commit": "3706b1c61d314da89f94aa3a9254544a07b70217", "Url": "https://api.github.com/repos/trask/glowroot", "Date": "2016-09-15T18:48:46Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((login_type.equals(\"google\")) || (login_type.equals(\"facebook\"))) useritem.setEmailIsConfirmed(true); else useritem.setEmailIsConfirmed(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8295/buggy-version/src.co.ords.w.WordsCore.java", "BodyUseAPI": [], "Fixed commit": "b5aa2e34431a36aebaa887b31e22ae4548ac4a2e", "Url": "https://api.github.com/repos/fivedogit/words-backend", "Date": "2014-08-02T19:17:02Z"},
{"Line": "=>1149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (categories.isEmpty()) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6176/buggy-version/src.main.java.ua.sumdu.group73.model.OracleDataBase.java", "BodyUseAPI": [], "Fixed commit": "703e8acbdd74adb2c8b8c3a763c3bf05bd4bbb82", "Url": "https://api.github.com/repos/oGREENo/WebApplication", "Date": "2015-08-24T11:17:15Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.cacheResolver) != null) { cacheAspect.setCacheResolver(this.cacheResolver); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2790/buggy-version/spring-aspects.src.main.java.org.springframework.cache.aspectj.AspectJCachingConfiguration.java", "BodyUseAPI": [], "Fixed commit": "cc47f92473d1cf2490b4bab38f2c5775eb3df57d", "Url": "https://api.github.com/repos/jayarampradhan/spring-framework", "Date": "2016-06-25T16:45:37Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.errorHandler) != null) { cacheAspect.setErrorHandler(this.errorHandler); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2790/buggy-version/spring-aspects.src.main.java.org.springframework.cache.aspectj.AspectJCachingConfiguration.java", "BodyUseAPI": [], "Fixed commit": "cc47f92473d1cf2490b4bab38f2c5775eb3df57d", "Url": "https://api.github.com/repos/jayarampradhan/spring-framework", "Date": "2016-06-25T16:45:37Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (is_mac) { delete_acc = \"BACK_SPACE\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1744/buggy-version/core-task-impl.src.main.java.org.cytoscape.task.internal.CyActivator.java", "BodyUseAPI": [], "Fixed commit": "bc8a62078f30a7a62ae1ffa45a39633d36225650", "Url": "https://api.github.com/repos/cytoscape/cytoscape-impl", "Date": "2016-03-10T22:36:44Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (milliseconds > 0) return new java.util.Date(milliseconds); else return new java.util.Date(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3928/buggy-version/src.tw.edu.chu.csie.e_learning.util.LearningUtils.java", "BodyUseAPI": [], "Fixed commit": "f484f099cbf82113d56fd074c4632ae3cbe39e8f", "Url": "https://api.github.com/repos/CHU-TDAP/E-learning-Android", "Date": "2014-02-05T09:16:06Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gOrder == (order)) { if ((happiness) != 10) { (happiness)++; return -1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1494/buggy-version/Customer.java", "BodyUseAPI": [], "Fixed commit": "6cb724596630dc927c99f9f38b72340a488cfbf3", "Url": "https://api.github.com/repos/TLiang518/Pd10-Liang-Chan-McDash", "Date": "2014-06-02T04:03:54Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (podcastManager.contains(newPodcast)) onPodcastLoaded(newPodcast); else podcastManager.load(newPodcast);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/840/buggy-version/src.net.alliknow.podcatcher.AddPodcastActivity.java", "BodyUseAPI": ["net.alliknow.podcatcher.AddPodcastActivity.onPodcastLoaded(net.alliknow.podcatcher.model.types.Podcast)", "net.alliknow.podcatcher.AddPodcastActivity.load(net.alliknow.podcatcher.model.types.Podcast)"], "Fixed commit": "b7ce5a47b82523f9bd9cc4c1b43e015eb069da18", "Url": "https://api.github.com/repos/salema/PodCatcher-Deluxe-Android", "Date": "2013-08-23T13:11:40Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (enc)) { enc.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3427/buggy-version/CCSDS_MAL_ENCODING_GEN.src.main.java.esa.mo.mal.encoder.gen.GENElementOutputStream.java", "BodyUseAPI": [], "Fixed commit": "f0ea76b14e0a057b8adae78c9418c9ab5d40310d", "Url": "https://api.github.com/repos/esa/CCSDS_MO_TRANS", "Date": "2015-08-19T13:41:31Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, com.thoughtworks.mindit.mindit.view.model.UINode>.get(tree.getLastUpdatedNode().getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((nodeList.indexOf(existingParent)) != (-1)) { customAdapter.collapse(nodeList.indexOf(existingParent), existingParent); customAdapter.expand(nodeList.indexOf(existingParent), existingParent); existingParent.setStatus(Constants.STATUS.EXPAND.toString()); java.lang.System.out.println((\"updated childsubtree \" + (existingParent.getChildSubTree()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/342/buggy-version/app.src.main.java.com.thoughtworks.mindit.mindit.presenter.Presenter.java", "BodyUseAPI": ["java.util.ArrayList<com.thoughtworks.mindit.mindit.view.model.UINode>.indexOf(com.thoughtworks.mindit.mindit.view.model.UINode)", "java.util.ArrayList<com.thoughtworks.mindit.mindit.view.model.UINode>.indexOf(com.thoughtworks.mindit.mindit.view.model.UINode)", "com.thoughtworks.mindit.mindit.view.model.UINode.setStatus(Constants.STATUS.EXPAND.toString())", "java.io.PrintStream.println((\"updated childsubtree \" + (existingParent.getChildSubTree())))", "com.thoughtworks.mindit.mindit.view.model.UINode.getChildSubTree()", "com.thoughtworks.mindit.mindit.view.adapter.CustomAdapter.expand(nodeList.indexOf(existingParent),com.thoughtworks.mindit.mindit.view.model.UINode)", "com.thoughtworks.mindit.mindit.view.adapter.CustomAdapter.collapse(nodeList.indexOf(existingParent),com.thoughtworks.mindit.mindit.view.model.UINode)"], "Fixed commit": "ea41817844eb4ca7440d1e63a6509369decede4c", "Url": "https://api.github.com/repos/Allminds/mind-it-android", "Date": "2016-02-01T10:43:27Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (res.exists()) { java.util.Date date = new java.util.Date(); mDatabase.updateBender(user.getAvatarId(), user.getId(), user.getAvatarFile(), new java.sql.Timestamp(date.getTime())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/9209/buggy-version/src.main.java.com.mde.potdroid.helpers.BenderHandler.java", "BodyUseAPI": [], "Fixed commit": "245b3c99bb533cb609b580bfdd5ead71e8e58bb7", "Url": "https://api.github.com/repos/janoliver/pOT-Droid", "Date": "2014-04-27T14:01:46Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.tpgeovk.back.controller.LocationService.detectPlace(com.vk.api.sdk.client.actors.UserActor,request.getLatitude(),request.getLongitude(),request.getText())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (place != null) { defResult.setResult(org.springframework.http.ResponseEntity.ok(place)); }else { defResult.setResult(org.springframework.http.ResponseEntity.ok(new ru.tpgeovk.back.model.response.ErrorResponse(\"No any places near your coordinates!\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7883/buggy-version/src.main.java.ru.tpgeovk.back.controller.LocationController.java", "BodyUseAPI": ["org.springframework.http.ResponseEntity.ok(ru.tpgeovk.back.model.FullPlaceInfo)", "org.springframework.web.context.request.async.DeferredResult<org.springframework.http.ResponseEntity>.setResult(org.springframework.http.ResponseEntity.ok(place))"], "Fixed commit": "93ca61686af4ce6effb320aa2564bb930521f3be", "Url": "https://api.github.com/repos/TPgeoVK/TPgeoVK-backend", "Date": "2017-12-02T16:43:27Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i1 == 39999) i1++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4489/buggy-version/src.org.rscdaemon.client.GameImageMiddleMan.java", "BodyUseAPI": [], "Fixed commit": "31b4436e908c487acec37895789177a0fa4c4cb8", "Url": "https://api.github.com/repos/CodeForFame/Client", "Date": "2011-11-15T23:09:13Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(dataSnapshot.exists())) search_recycler.setAdapter(adapter);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5668/buggy-version/app.src.main.java.invite.hfad.com.inviter.Contacts.SearchContactsActivity.java", "BodyUseAPI": [], "Fixed commit": "1652f2853ac9f6388da01e9f5eb46ddeabd177ee", "Url": "https://api.github.com/repos/darylk31/inviter", "Date": "2017-06-01T09:51:09Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getPathInfo()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (path.endsWith(\"insertCategory\")) { java.lang.System.out.println(\"insertCategory\"); try { java.lang.String name = ((java.lang.String) (request.getParameter(\"name\"))); il.ac.shenkar.model.Category newCategory = new il.ac.shenkar.model.Category(name); dao.addObject(newCategory); dispatcher = getServletContext().getRequestDispatcher(\"/categoryaddedsuccessfully.jsp\"); dispatcher.forward(request, response); } catch (il.ac.shenkar.model.SystemException e) { dispatcher = getServletContext().getRequestDispatcher(\"/error.jsp\"); dispatcher.forward(request, response); } }else if (path.endsWith(\"insert\")) { java.lang.System.out.println(\"insert\"); try { java.lang.String name = ((java.lang.String) (request.getParameter(\"name\"))); java.lang.String description = ((java.lang.String) (request.getParameter(\"description\"))); java.lang.String category = ((java.lang.String) (request.getParameter(\"category\"))); int longitude = java.lang.Integer.parseInt(request.getParameter(\"longitude\")); int latitude = java.lang.Integer.parseInt(request.getParameter(\"latitude\")); il.ac.shenkar.model.Coupon newCoupon = new il.ac.shenkar.model.Coupon(name, description, category, longitude, latitude); dao.addObject(newCoupon); request.setAttribute(\"coupons\", dao.getObjectsList(il.ac.shenkar.model.Coupon.class)); dispatcher = getServletContext().getRequestDispatcher(\"/coupons.jsp\"); dispatcher.forward(request, response); } catch (il.ac.shenkar.model.SystemException e) { dispatcher = getServletContext().getRequestDispatcher(\"/error.jsp\"); dispatcher.forward(request, response); } }else if ((path.endsWith(\"deleteCouponById\")) || (path.endsWith(\"deleteCategoryById\"))) { try { if (path.endsWith(\"deleteCouponById\")) { int id = java.lang.Integer.parseInt(request.getParameter(\"couponId\")); java.lang.System.out.println(id); il.ac.shenkar.model.Coupon coupon = ((il.ac.shenkar.model.Coupon) (dao.getObject(il.ac.shenkar.model.Coupon.class, id))); dao.deleteObject(coupon); request.setAttribute(\"coupons\", dao.getObjectsList(il.ac.shenkar.model.Coupon.class)); dispatcher = getServletContext().getRequestDispatcher(\"/coupons.jsp\"); }else if (path.endsWith(\"deleteCategoryById\")) { int id = java.lang.Integer.parseInt(request.getParameter(\"categoryId\")); java.lang.System.out.println(id); il.ac.shenkar.model.Category category = ((il.ac.shenkar.model.Category) (dao.getObject(il.ac.shenkar.model.Category.class, id))); dao.deleteObject(category); request.setAttribute(\"category\", dao.getObjectsList(il.ac.shenkar.model.Category.class)); dispatcher = getServletContext().getRequestDispatcher(\"/addCategory.jsp\"); } dispatcher.forward(request, response); } catch (il.ac.shenkar.model.SystemException e) { e.printStackTrace(); dispatcher = getServletContext().getRequestDispatcher(\"/error.jsp\"); dispatcher.forward(request, response); } }else if ((path.endsWith(\"editCouponById\")) || (path.endsWith(\"editCategoryById\"))) { try { if (path.endsWith(\"editCouponById\")) { int id = java.lang.Integer.parseInt(request.getParameter(\"couponId\")); java.lang.System.out.println(id); il.ac.shenkar.model.Coupon coupon = ((il.ac.shenkar.model.Coupon) (dao.getObject(il.ac.shenkar.model.Coupon.class, id))); request.setAttribute(\"editCoupon\", coupon); dispatcher = getServletContext().getRequestDispatcher(\"/editCoupon.jsp\"); }else if (path.endsWith(\"editCategoryById\")) { int id = java.lang.Integer.parseInt(request.getParameter(\"categoryId\")); java.lang.System.out.println(id); il.ac.shenkar.model.Category category = ((il.ac.shenkar.model.Category) (dao.getObject(il.ac.shenkar.model.Category.class, id))); request.setAttribute(\"editCategory\", category); dispatcher = getServletContext().getRequestDispatcher(\"/editCategory.jsp\"); } dispatcher.forward(request, response); } catch (il.ac.shenkar.model.SystemException e) { e.printStackTrace(); dispatcher = getServletContext().getRequestDispatcher(\"/error.jsp\"); dispatcher.forward(request, response); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6178/buggy-version/src.il.ac.shenkar.controller.Controller.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)"], "Fixed commit": "8ee720fc32d5f4ead24161d7dbf620312a8b14c2", "Url": "https://api.github.com/repos/tomcohen/CouponSystem", "Date": "2015-01-29T11:33:27Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getPathInfo()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (path.endsWith(\"editCouponById\")) { int id = java.lang.Integer.parseInt(request.getParameter(\"couponId\")); java.lang.System.out.println(id); il.ac.shenkar.model.Coupon coupon = ((il.ac.shenkar.model.Coupon) (dao.getObject(il.ac.shenkar.model.Coupon.class, id))); request.setAttribute(\"editCoupon\", coupon); dispatcher = getServletContext().getRequestDispatcher(\"/editCoupon.jsp\"); }else if (path.endsWith(\"editCategoryById\")) { int id = java.lang.Integer.parseInt(request.getParameter(\"categoryId\")); java.lang.System.out.println(id); il.ac.shenkar.model.Category category = ((il.ac.shenkar.model.Category) (dao.getObject(il.ac.shenkar.model.Category.class, id))); request.setAttribute(\"editCategory\", category); dispatcher = getServletContext().getRequestDispatcher(\"/editCategory.jsp\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6178/buggy-version/src.il.ac.shenkar.controller.Controller.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)"], "Fixed commit": "8ee720fc32d5f4ead24161d7dbf620312a8b14c2", "Url": "https://api.github.com/repos/tomcohen/CouponSystem", "Date": "2015-01-29T11:33:27Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["response.getOptions().getBlock1()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((block1.getSize()) < currentSize) { newSize = block1.getSize(); newSzx = block1.getSzx(); }else { newSize = currentSize; newSzx = status.getCurrentSzx(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7850/buggy-version/californium-core.src.main.java.org.eclipse.californium.core.network.stack.BlockwiseLayer.java", "BodyUseAPI": ["org.eclipse.californium.core.coap.BlockOption.getSzx()", "org.eclipse.californium.core.coap.BlockOption.getSize()"], "Fixed commit": "0bc8398b0e9976946a0588390381c3bbf888946c", "Url": "https://api.github.com/repos/eclipse/californium", "Date": "2016-10-03T09:42:01Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rendererPipe) != null) { rendererPipe.clearCache(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1055/buggy-version/src.main.java.pl.asie.charset.pipes.ProxyClient.java", "BodyUseAPI": [], "Fixed commit": "a7c6c2848e274cda00a5c1b64b5c502095eeb0ad", "Url": "https://api.github.com/repos/CharsetMC/Charset", "Date": "2016-05-21T08:33:42Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (toEnd) { toEnd = false; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7465/buggy-version/app.src.main.java.com.lauratebben.campus_accessibility.MainMap.java", "BodyUseAPI": [], "Fixed commit": "aa90631e47dc19ef504b5d4c9e21a70ff8362bc9", "Url": "https://api.github.com/repos/ltebben/Campus-Accessibility", "Date": "2016-11-20T13:58:56Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o instanceof java.lang.Boolean) { result = ((java.lang.Boolean) (o)); }else if (o instanceof java.lang.String) { result = false; }else { result = com.waytta.Utils.validateInnerJsonObject(((net.sf.json.JSONObject) (o))); if (!result) { break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3740/buggy-version/src.main.java.com.waytta.Utils.java", "BodyUseAPI": [], "Fixed commit": "b7b60b6e9ad839b3c5183cc7cab3ec62951f3795", "Url": "https://api.github.com/repos/jenkinsci/saltstack-plugin", "Date": "2016-02-01T17:00:28Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((plugin.getUltimateArena()) != null) { if (plugin.getUltimateArena().isInArena(bullet.getShooter().getPlayer())) applicable = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1332/buggy-version/src.main.java.net.dmulloy2.swornguns.listeners.EntityListener.java", "BodyUseAPI": ["plugin.getUltimateArena().isInArena(bullet.getShooter().getPlayer())", "net.dmulloy2.swornguns.SwornGuns.getUltimateArena()"], "Fixed commit": "a919706c887db6988267f4f8e991f2c5184c6fb8", "Url": "https://api.github.com/repos/dmulloy2/SwornGuns", "Date": "2013-10-19T23:57:00Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((projectSelector.getEditedObject()) != null) { model.setCurrentProject(projectSelector.getEditedObject()); }else { projectSelector.setEditedObject(model.getCurrentProject()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3217/buggy-version/flexodesktop.GUI.flexo.src.main.java.org.openflexo.view.MainPaneTopBar.java", "BodyUseAPI": ["org.openflexo.components.widget.FIBProjectSelector.setEditedObject(model.getCurrentProject())", "org.openflexo.view.controller.model.ControllerModel.setCurrentProject(projectSelector.getEditedObject())", "org.openflexo.components.widget.FIBProjectSelector.getEditedObject()"], "Fixed commit": "821953747396a80428ed143e6944ae727babf190", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2013-01-15T22:09:15Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.getWorld().spawnCreature(player.getLocation(),org.bukkit.entity.EntityType)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (entity.getType().equals(EntityType.WOLF)) { entity.setHealth(entity.getMaxHealth()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1456/buggy-version/src.main.java.com.gmail.nossr50.skills.Taming.java", "BodyUseAPI": ["org.bukkit.entity.LivingEntity.setHealth(entity.getMaxHealth())", "org.bukkit.entity.LivingEntity.getMaxHealth()"], "Fixed commit": "6c6fb117ea0485faccd5d65058d271a210f4e2a4", "Url": "https://api.github.com/repos/mcMMO-Dev/mcMMO", "Date": "2012-03-29T02:24:32Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(srcPomFile.exists())) { srcPomFile = new java.io.File(artifact.getFile().getParent(), org.mule.tools.maven.repository.ArtifactInstaller.POM_FILE_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4535/buggy-version/src.main.java.org.mule.tools.maven.repository.ArtifactInstaller.java", "BodyUseAPI": [], "Fixed commit": "d8978bad163a9671dd96cb7afb1a7520f627d21c", "Url": "https://api.github.com/repos/mulesoft/mule-maven-plugin", "Date": "2017-06-22T16:04:39Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sourcePomFile.exists())) { sourcePomFile = new java.io.File(artifact.getFile().getParent(), org.mule.tools.maven.repository.ArtifactInstaller.POM_FILE_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4535/buggy-version/src.main.java.org.mule.tools.maven.repository.ArtifactInstaller.java", "BodyUseAPI": [], "Fixed commit": "d8978bad163a9671dd96cb7afb1a7520f627d21c", "Url": "https://api.github.com/repos/mulesoft/mule-maven-plugin", "Date": "2017-06-22T16:04:39Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timer) != null) { workout.onStop(workout); stopTimer(); android.content.Intent intent = new android.content.Intent(this, org.runnerup.view.DetailActivity.class); intent.putExtra(\"mode\", \"save\"); intent.putExtra(\"ID\", activityId); this.startActivityForResult(intent, (workout.isPaused() ? 1 : 0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2037/buggy-version/src.org.runnerup.view.RunActivity.java", "BodyUseAPI": [], "Fixed commit": "b53d25d22ed7be281068d57f492e880a93127941", "Url": "https://api.github.com/repos/jonasoreland/runnerup", "Date": "2013-04-22T19:25:47Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getRenderList().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (icon == null) icon = getRenderList().get(\"blank\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4807/buggy-version/src.main.java.rubedo.items.spells.SpellBase.java", "BodyUseAPI": [], "Fixed commit": "6fa5f0fe78ad9c15bfc19edf7e6e465f756ff6b6", "Url": "https://api.github.com/repos/Katalliaan/Rubedo", "Date": "2014-03-06T20:47:23Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((org.bukkit.enchantments.Enchantment.getByName(\"BatteryDevice\")) == null) { me.wirlie.bukkit.minedevices.devices.Battery.BatteryEnchantment battery = new me.wirlie.bukkit.minedevices.devices.Battery.BatteryEnchantment(500); org.bukkit.enchantments.Enchantment.registerEnchantment(battery); me.wirlie.bukkit.minedevices.devices.Battery.item_battery_enchantment = battery; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5434/buggy-version/MineDevices.src.main.java.me.wirlie.bukkit.minedevices.devices.Battery.java", "BodyUseAPI": [], "Fixed commit": "5192a5a6fe64ba11ea0051d1c00bfdd44c241956", "Url": "https://api.github.com/repos/Wirlie/MineDevices", "Date": "2016-07-18T06:50:53Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"NORMAL\".equalsIgnoreCase(status)) { status = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8050/buggy-version/src.java.com.smi.travel.datalayer.view.dao.impl.TaxInvoiceSummaryReportImpl.java", "BodyUseAPI": [], "Fixed commit": "1aa3f13d31b9de1d68e8f968efcb61876c90cff2", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-09-18T09:06:06Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gg.frog.mc.permissionstime.config.PluginCfg.USE_MYSQL) { for (int i = 0; i < 3; i++) { if (!(db.isOpen())) { if (db.open()) { return db; } }else { return db; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2010/buggy-version/src.main.gg.frog.mc.permissionstime.utils.database.DatabaseUtil.java", "BodyUseAPI": [], "Fixed commit": "27f573c26b869ce96cd7443cfd5228f5e5882b7b", "Url": "https://api.github.com/repos/geekfrog/PermissionsTime", "Date": "2017-07-16T02:38:19Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (valueArrayObj instanceof java.lang.Integer) { android.opengl.GLES20.glUniform1i(uniformLocation, ((java.lang.Integer) (valueArrayObj))); }else if (valueArrayObj instanceof java.lang.Float) { android.opengl.GLES20.glUniform1f(uniformLocation, ((java.lang.Float) (valueArrayObj))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4527/buggy-version/app.src.main.java.max3d.core.ObjectRenderer.java", "BodyUseAPI": [], "Fixed commit": "81395c48de126971193740e08c4fe7bd96efd7c9", "Url": "https://api.github.com/repos/talentzxf/LearningAndroid", "Date": "2017-12-26T02:25:12Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gender) != 0) { studentInformationValues.put(StudentInformation.Columns.GENDER, gender); contentResolver.insert(StudentInformation.CONTENT_URI, studentInformationValues); }else { android.widget.Toast.makeText(this, \"Please Select Your Gender\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3762/buggy-version/app.src.main.java.daffodil.international.ac.coopapplication.daffodil.international.ac.coopapplication.signUp.StudentSignUpActivity.java", "BodyUseAPI": [], "Fixed commit": "5affd38193d42aa4ff8ec8546ce95acf3111af5c", "Url": "https://api.github.com/repos/Coding-Squad/CoOpApplication", "Date": "2017-08-20T10:58:02Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["LocationServices.FusedLocationApi.getLastLocation(com.google.android.gms.common.api.GoogleApiClient)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (mLastLocation != null) { onLocationConnected(new com.google.android.gms.maps.model.LatLng(mLastLocation.getLatitude(), mLastLocation.getLongitude())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3816/buggy-version/app.src.main.java.pe.com.johnson.pablo.limago.view.ui.common.LocationFragment.java", "BodyUseAPI": ["pe.com.johnson.pablo.limago.view.ui.common.LocationFragment.onLocationConnected(com.google.android.gms.maps.model.LatLng)", "android.location.Location.getLongitude()", "android.location.Location.getLatitude()"], "Fixed commit": "21844a2fbe4e21766981c3e558a4d5039d3ae228", "Url": "https://api.github.com/repos/pablo-johnson/LimaGo", "Date": "2017-02-06T19:36:19Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.bindService(android.content.Intent,com.microsoft.aad.adal.BrokerAccountServiceHandler.BrokerAccountServiceConnection,Context.BIND_AUTO_CREATE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!serviceBound) { context.unbindService(connection); callback.onError(new com.microsoft.aad.adal.AuthenticationException(ADALError.BROKER_BIND_SERVICE_FAILED)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5133/buggy-version/adal.src.main.java.com.microsoft.aad.adal.BrokerAccountServiceHandler.java", "BodyUseAPI": [], "Fixed commit": "4999cb6f8c1ea822030a4b3d4fded8f324fbd289", "Url": "https://api.github.com/repos/AzureAD/azure-activedirectory-library-for-android", "Date": "2017-09-20T22:24:06Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(extraSplits.isEmpty())) extraSplits.pop(); else { nodeStack.remove(current); current = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2373/buggy-version/src.main.java.ca.nines.ise.validator.SplitLineValidator.java", "BodyUseAPI": ["java.util.ArrayDeque<ca.nines.ise.node.Node>.pop()"], "Fixed commit": "68375f99306390ca11b019d842ec41d87fa9001c", "Url": "https://api.github.com/repos/emmental/isetools", "Date": "2016-03-04T19:51:03Z"},
{"Line": "=>590", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (blobEntry == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/9202/buggy-version/src.main.java.com.pratilipi.data.util.PratilipiDocUtil.java", "BodyUseAPI": [], "Fixed commit": "fb22d2d180308fbd55ca3bc4da6a508a5c7f7f98", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-10-20T06:39:07Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(compShips[i].updatePosition(row, column, orientation))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2930/buggy-version/src.main.java.edu.oregonstate.cs361.battleship.BattleshipModel.java", "BodyUseAPI": [], "Fixed commit": "bce8719c4802c99bc200f9f8093f01a01029fc3b", "Url": "https://api.github.com/repos/CelticChristoph/group7_project1", "Date": "2017-02-04T02:37:22Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(playerShips[i].updatePosition(row, column, orientation))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2930/buggy-version/src.main.java.edu.oregonstate.cs361.battleship.BattleshipModel.java", "BodyUseAPI": [], "Fixed commit": "bce8719c4802c99bc200f9f8093f01a01029fc3b", "Url": "https://api.github.com/repos/CelticChristoph/group7_project1", "Date": "2017-02-04T02:37:22Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(stack.isEmpty())) return false; else return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8724/buggy-version/ICOM4035_Lab5.src.classes.SymmetricStringAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "a4ee2f6f3caf526cea81f98bb87615f8bfbcf789", "Url": "https://api.github.com/repos/jasp0894/HelloWorld", "Date": "2016-09-28T17:34:21Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tonghs.manager.AreaMgr.getAreas()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((list != null) && ((list.size()) > 0)) { android.os.Bundle bundle = new android.os.Bundle(); bundle.putInt(\"requestCode\", RequestCode.SEND_SMS_ADD); intent.putExtras(bundle); intent.setClass(this, com.tonghs.AddModuleActivity.class); startActivityForResult(intent, RequestCode.SEND_SMS_ADD); }else { alert(\"\u8bf7\u5148\u5efa\u7acb\u533a\u57df\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/651/buggy-version/Controller.src.main.java.com.tonghs.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "fc17029f45458fc63369f3bae94ac75fc74cc067", "Url": "https://api.github.com/repos/tonghuashuai/ControllerAndroid", "Date": "2013-12-18T09:35:00Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.technicpack.launchercore.modpacks.resources.resourcetype.IModpackResourceType.getResource(net.technicpack.launchercore.modpacks.ModpackModel)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (res == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5011/buggy-version/src.main.java.net.technicpack.launchercore.modpacks.resources.PackResourceMapper.java", "BodyUseAPI": [], "Fixed commit": "9454a3606de7087ad0a6f38e4f034a37cf5a0588", "Url": "https://api.github.com/repos/wiktorek140/LauncherCoreV3", "Date": "2014-03-29T21:53:48Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"9606\".equals(taxonId)) { return identifier; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/649/buggy-version/bio.sources.panther.main.src.org.intermine.bio.dataconversion.PantherConverter.java", "BodyUseAPI": [], "Fixed commit": "c118d3ee4cb81668f0215d624335c35b76eda78f", "Url": "https://api.github.com/repos/jcvi-plant-genomics/intermine", "Date": "2013-08-07T15:35:39Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.stuntguy3000.java.redditlivebot.object.reddit.redditthread.RedditThreadChildren.getData()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((threadData != null) && ((threadData.getMedia()) != null)) { long secs = (new java.util.Date().getTime()) / 1000; java.lang.String threadID = threadData.getMedia().getEvent_id(); if ((((threadData.getScore()) >= 5) && ((secs - (threadData.getCreated_utc())) < 10800)) && (!(me.stuntguy3000.java.redditlivebot.RedditLiveBot.getInstance().getConfigHandler().getBotSettings().getKnownLiveFeeds().contains(threadID.toLowerCase())))) { me.stuntguy3000.java.redditlivebot.object.Lang.sendDebug(\"Following thread %s.\", threadID); me.stuntguy3000.java.redditlivebot.RedditLiveBot.getInstance().getRedditHandler().startLiveThread(threadData); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3697/buggy-version/src.main.java.me.stuntguy3000.java.redditlivebot.scheduler.NewLiveThreadsTask.java", "BodyUseAPI": ["me.stuntguy3000.java.redditlivebot.RedditLiveBot.getInstance().getRedditHandler().startLiveThread(me.stuntguy3000.java.redditlivebot.object.reddit.redditthread.RedditThreadChildrenData)", "me.stuntguy3000.java.redditlivebot.object.reddit.redditthread.RedditThreadChildrenData.getMedia()", "me.stuntguy3000.java.redditlivebot.object.reddit.redditthread.RedditThreadChildrenData.getScore()", "me.stuntguy3000.java.redditlivebot.object.reddit.redditthread.RedditThreadChildrenData.getCreated_utc()", "threadData.getMedia().getEvent_id()"], "Fixed commit": "b2bcf54bcbd424c33d6009cc882db34f68a92a9a", "Url": "https://api.github.com/repos/stuntguy3000/RedditLiveBot", "Date": "2016-04-03T10:12:58Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (endPos >= 0) { name = name.substring(0, endPos); name = name.replace(java.io.File.separatorChar, '.'); packageNames.put(name, name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2696/buggy-version/enough-polish-build.source.src.de.enough.polish.util.JarUtil.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "27486bb17db2b3425e620a25d96411e3d390f1e5", "Url": "https://api.github.com/repos/Enough-Software/j2mepolish", "Date": "2011-10-05T12:40:06Z"},
{"Line": "=>700", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (orPerCopyRange.isEmpty()) { orPerCopyRange = associationCalculationService.setRange(orPerCopyStdError, orPerCopyNum); association.setOrPerCopyRange(orPerCopyRange); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8831/buggy-version/goci-interfaces.goci-curation.src.main.java.uk.ac.ebi.spot.goci.curation.controller.AssociationController.java", "BodyUseAPI": [], "Fixed commit": "b6920ffbcd300f61bd269e94238cfa3a707ed1c3", "Url": "https://api.github.com/repos/EBISPOT/goci", "Date": "2015-02-24T08:55:15Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((student.schedule) != null) student.schedule.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5571/buggy-version/src.MainDriver.MainDriver.java", "BodyUseAPI": ["java.util.List<MainDriver.Event>.clear()"], "Fixed commit": "7a6c2b844833bf6627b0ce3746bfa97742bbc5ae", "Url": "https://api.github.com/repos/lophygor/AI-CourseScheduler", "Date": "2012-12-19T00:50:52Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((u.getImageUrl()) != null) com.squareup.picasso.Picasso.with(this).load(u.getImageUrl()).into(ivProfileImage);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7705/buggy-version/app.src.main.java.com.example.denis.ecar.MainActivity.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(this).load(u.getImageUrl())", "com.example.denis.ecar.sharedPref.User.getImageUrl()", "com.squareup.picasso.Picasso.with(this).load(u.getImageUrl()).into(de.hdodenhof.circleimageview.CircleImageView)"], "Fixed commit": "b5147d354d2e37426eef64019143c0312c3a8a7d", "Url": "https://api.github.com/repos/Zhen-Yuan/e-car", "Date": "2017-12-17T18:00:37Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!in_string) { if (((java.lang.Character.isWhitespace(c)) || (c == '(')) || (c == ')')) { break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1364/buggy-version/src.main.java.org.jmf1sh.jisp.Tokenizer.java", "BodyUseAPI": [], "Fixed commit": "e7d5e204542dcf96e5ebe356408905de6111400c", "Url": "https://api.github.com/repos/jmf1sh/jisp", "Date": "2017-08-30T20:19:06Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.usethesource.vallang.type.Type.getFieldType(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((argType.isTuple()) && (alwaysIncreasesDepth(argType))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4209/buggy-version/src.main.java.io.usethesource.vallang.random.RandomValueGenerator.java", "BodyUseAPI": [], "Fixed commit": "3824af5ea40135b8aaada3d077d9322ffb871cc4", "Url": "https://api.github.com/repos/usethesource/vallang", "Date": "2017-06-21T13:47:45Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (alwaysIncreasesDepth(constructor)) { constructor = original; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4209/buggy-version/src.main.java.io.usethesource.vallang.random.RandomValueGenerator.java", "BodyUseAPI": [], "Fixed commit": "3824af5ea40135b8aaada3d077d9322ffb871cc4", "Url": "https://api.github.com/repos/usethesource/vallang", "Date": "2017-06-21T13:47:45Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((nameBody.length) < 2) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3425/buggy-version/src.lang.parsing.ChatProcessor.java", "BodyUseAPI": [], "Fixed commit": "7f9dd2324b073888e21f19141857050754b4ada0", "Url": "https://api.github.com/repos/bradwarrum/GroupMeAnalytics", "Date": "2016-03-14T03:29:15Z"},
{"Line": "=>1683", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!unManagedFileQuotaDirectoryExists) { unManagedFileQuotaDirectories.add(unManagedFileQuotaDirectory); }else { existingUnManagedFileQuotaDirectories.add(unManagedFileQuotaDirectory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4461/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.plugins.VNXFileCommunicationInterface.java", "BodyUseAPI": [], "Fixed commit": "f4bb27abc29033ecd621e407e7e411dc464c7b13", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-08-30T03:12:52Z"},
{"Line": "=>494", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bspNode == null) { addObject(object); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7673/buggy-version/src.sofia.graphics.collision.IBSPColChecker.java", "BodyUseAPI": [], "Fixed commit": "06da6949a93e090b233827242b65c904dcef6e57", "Url": "https://api.github.com/repos/web-cat/sofia-graphics", "Date": "2012-11-02T13:33:56Z"},
{"Line": "=>1599", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((contactCodeParam) == null) && ((addressIdParam) == null)) { contactCodeParam = ((java.lang.Integer) (sessionAttributes.get(\"contactCodeParam\"))); addressIdParam = ((java.lang.Integer) (sessionAttributes.get(\"addressIdParam\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/9254/buggy-version/freightbit.src.main.java.com.sr.apps.freightbit.customer.action.CustomerAction.java", "BodyUseAPI": [], "Fixed commit": "903bea3e5fbec27e391b093cf8161f849ee6746e", "Url": "https://api.github.com/repos/johnpelquingua/freightbit-logistics", "Date": "2015-03-05T04:07:19Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["at.o2xfs.emv.tlv.TLV.parse(response.getData())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (EMVTag.RESPONSE_MESSAGE_TEMPLATE_FORMAT_1.getTag().equals(tlv.getTag())) { return tlv.getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6850/buggy-version/at.o2xfs.emv.src.at.o2xfs.emv.dda.DynamicDataAuthentication.java", "BodyUseAPI": ["at.o2xfs.emv.tlv.TLV.getValue()"], "Fixed commit": "93e899c0a0d26f666f3b31e6895de6c1bba71388", "Url": "https://api.github.com/repos/AndreasFagschlunger/O2Xfs", "Date": "2014-06-20T17:20:49Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (column.isEmpty()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2003/buggy-version/src.main.java.com.fhaidary.xmlcmd.core.DsvTool.java", "BodyUseAPI": [], "Fixed commit": "14a26565912e5e9250537b5ce8715e91104c6173", "Url": "https://api.github.com/repos/xafero/XMLCmd", "Date": "2015-12-01T03:21:42Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.conventnunnery.plugins.conventlib.utils.ContainerUtils.containsIgnoreCase(getPlugin().getPluginSettings().getMaterialIDTypes(), e.getKey())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4646/buggy-version/src.main.java.com.conventnunnery.plugins.mythicdrops.managers.ItemManager.java", "BodyUseAPI": [], "Fixed commit": "1d08256d1f7713ea2f7cea4d8b8ad5bd48837b51", "Url": "https://api.github.com/repos/Nunnery/MythicDrops", "Date": "2013-05-15T23:12:58Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((json.choices) != null) { for (api.entities.ChoiceJSON c : json.choices) { result.choices.add(models.Choice.fromJson(c)); } for (models.Choice c : result.choices) { c.poll = result; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3645/buggy-version/Service.app.models.Poll.java", "BodyUseAPI": [], "Fixed commit": "4872010c039c825232c957f44ff904d2f38fa5e8", "Url": "https://api.github.com/repos/atiti/OpenARMS", "Date": "2012-03-19T09:47:57Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.core.dom.MethodInvocation.resolveMethodBinding()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((meth.getDeclaringClass()) == null) { throw new edu.cmu.cs.syzygy.NotImplementedException(\"method without declaring class\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7521/buggy-version/Syzygy.src.edu.cmu.cs.syzygy.TrainingVisitor.java", "BodyUseAPI": [], "Fixed commit": "ca397d9ea240b0fb4b0bc6aa8e786c6425077314", "Url": "https://api.github.com/repos/cyrus-/syzygy", "Date": "2013-10-28T02:27:56Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isAdded())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5527/buggy-version/app.src.main.java.com.abyx.loyalty.fragments.CardFragment.java", "BodyUseAPI": [], "Fixed commit": "3b268f0f945080be3563c007a629d3bf99489d04", "Url": "https://api.github.com/repos/AbyxBelgium/Loyalty", "Date": "2017-07-14T14:18:26Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (schedule.getScheduleTime().contains(\":\")) { splitTime = schedule.getScheduleTime().split(\":\"); hour = java.lang.Integer.parseInt(splitTime[0]); minute = java.lang.Integer.parseInt(splitTime[1]); }else { hour = java.lang.Integer.parseInt(schedule.getScheduleTime()); minute = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7487/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.FilePolicyService.java", "BodyUseAPI": ["java.lang.Integer.parseInt(schedule.getScheduleTime())", "com.emc.storageos.model.file.FilePolicyScheduleParam.getScheduleTime()", "com.emc.storageos.model.file.FilePolicyScheduleParam.getScheduleTime()", "schedule.getScheduleTime().split(java.lang.String)"], "Fixed commit": "651be3bb41376860b0a1482315b7de9938a8921e", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-01-06T07:31:03Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (gps.getIsGPSConnected()) gps.stopLocationUpdates();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8484/buggy-version/app.src.main.java.com.example.user01.planit.MainActivity.java", "BodyUseAPI": ["com.example.user01.planit.GPS.stopLocationUpdates()"], "Fixed commit": "c67247492b00f8a3b5b09e8da33c50ee95e4f4f6", "Url": "https://api.github.com/repos/KevinLee00/Plan_It", "Date": "2016-05-20T08:10:22Z"},
{"Line": "=>489", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) { android.support.v7.app.ActionBar toolbar = ((android.support.v7.app.AppCompatActivity) (getActivity())).getSupportActionBar(); if (toolbar != null) { java.lang.String title = ((current + 1) + \"/\") + (mPresenter.getItemCount()); toolbar.setTitle(title); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5375/buggy-version/app.src.main.java.com.github.runningforlife.photosniffer.ui.fragment.ImageDetailPagerFragment.java", "BodyUseAPI": [], "Fixed commit": "a6cf850579c97823ce6a815c9adfbdf1763e62d6", "Url": "https://api.github.com/repos/runningforlife/PhotoFans", "Date": "2017-12-27T23:25:11Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newGen.objFunc) < (this.population.get(indexMax).objFunc)) this.population.set(indexMax, newGen);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1021/buggy-version/src.Population.java", "BodyUseAPI": ["java.util.ArrayList<Timetable>.set(int,Timetable)"], "Fixed commit": "e79f56750941a5f49a0c17fda896e144d4b64b2b", "Url": "https://api.github.com/repos/steroagna/sosecretnameforoma", "Date": "2017-11-22T18:27:50Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (xSize <= 0) throw new java.lang.IllegalArgumentException(\"xSize must be positive\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2174/buggy-version/src.geometry.Parallelepiped.java", "BodyUseAPI": [], "Fixed commit": "ef290e7d8bd34b15b4846c5f13cab3c55d1f7029", "Url": "https://api.github.com/repos/slemonide/sasuga", "Date": "2017-05-13T07:25:10Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (ySize <= 0) throw new java.lang.IllegalArgumentException(\"ySize must be positive\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2174/buggy-version/src.geometry.Parallelepiped.java", "BodyUseAPI": [], "Fixed commit": "ef290e7d8bd34b15b4846c5f13cab3c55d1f7029", "Url": "https://api.github.com/repos/slemonide/sasuga", "Date": "2017-05-13T07:25:10Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (zSize <= 0) throw new java.lang.IllegalArgumentException(\"zSize must be positive\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2174/buggy-version/src.geometry.Parallelepiped.java", "BodyUseAPI": [], "Fixed commit": "ef290e7d8bd34b15b4846c5f13cab3c55d1f7029", "Url": "https://api.github.com/repos/slemonide/sasuga", "Date": "2017-05-13T07:25:10Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.erlide.core.model.root.IErlModel.getChildNamed(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (p != null) { final java.lang.String mName = pm[1]; try { final java.lang.String s = (org.erlide.utils.CommonUtils.isErlangFileContentFileName(mName)) ? mName : mName + \".erl\"; module = p.getModule(s); } catch (final org.erlide.core.model.root.ErlModelException e) { org.erlide.jinterface.ErlLogger.warn(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6842/buggy-version/org.erlide.ui.src.org.erlide.ui.launch.DebugTab.java", "BodyUseAPI": ["org.erlide.core.model.root.IErlProject.getModule(java.lang.String)"], "Fixed commit": "0b1fc6e07c716cd2b57126ee1bf22ab436cc1200", "Url": "https://api.github.com/repos/vladdu/erlide", "Date": "2012-06-15T13:19:02Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (args[0].equals(\"-h\")) com.dexesttp.hkxpack.view.ConsoleView.showHelp();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5607/buggy-version/src.com.dexesttp.hkxpack.view.ConsoleView.java", "BodyUseAPI": [], "Fixed commit": "563163022998a7a28a6e0b9a41710bf3028e845f", "Url": "https://api.github.com/repos/Dexesttp/hkxpack", "Date": "2016-01-18T18:18:05Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getRecipe()) instanceof org.bukkit.inventory.ShapelessRecipe) { if (!(canCraftShapeless(items))) { event.getInventory().setResult(new org.bukkit.inventory.ItemStack(org.bukkit.Material.AIR)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1306/buggy-version/src.io.github.joffrey4.compressedblocks.Main.java", "BodyUseAPI": ["event.getInventory().setResult(org.bukkit.inventory.ItemStack)", "io.github.joffrey4.compressedblocks.PrepareItemCraftEvent.getInventory()"], "Fixed commit": "5db39242352edb8b9f31b4a8dccdb25b030ea776", "Url": "https://api.github.com/repos/Joffrey4/CompressedBlocksPlugin", "Date": "2017-05-25T22:38:55Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["prescriptionInstance.getRecordedSets().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((set.getMainLifts()) == null) || (set.getMainLifts().isEmpty())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1929/buggy-version/app.src.main.java.com.completeconceptstrength.activity.AthleteWorkoutResults.java", "BodyUseAPI": [], "Fixed commit": "b9ded82c77b45d1dd0ebde904820c1bbdcc73375", "Url": "https://api.github.com/repos/pureStrength/completeStrengthAndroidApp", "Date": "2015-12-05T22:09:17Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((prescriptionInstance.getRecordedSets()) == null) || (prescriptionInstance.getRecordedSets().isEmpty())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1929/buggy-version/app.src.main.java.com.completeconceptstrength.activity.AthleteWorkoutResults.java", "BodyUseAPI": [], "Fixed commit": "b9ded82c77b45d1dd0ebde904820c1bbdcc73375", "Url": "https://api.github.com/repos/pureStrength/completeStrengthAndroidApp", "Date": "2015-12-05T22:09:17Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((completedTasks.size()) > 0) totalComplete = completedTasks.size();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/547/buggy-version/app.src.main.java.com.pensum.pensumapplication.fragments.CompleteTaskDialogFragment.java", "BodyUseAPI": ["java.util.List<com.pensum.pensumapplication.models.Task>.size()"], "Fixed commit": "d7af2f0c620181aa8693cf666aa74af4e1ddb2b2", "Url": "https://api.github.com/repos/july2016codepathgroup2/pensum", "Date": "2016-09-07T01:18:56Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.languagetool.gui.Configuration.getLanguage()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (lang == null) { lang = org.languagetool.Language.getLanguageForLocale(java.util.Locale.getDefault()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8494/buggy-version/languagetool-gui-commons.src.main.java.org.languagetool.gui.ConfigurationDialog.java", "BodyUseAPI": [], "Fixed commit": "9c6b4cd3823f216e5a078c18f72e186718c2a307", "Url": "https://api.github.com/repos/languagetool-org/languagetool", "Date": "2014-09-01T10:45:32Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((list != null) && ((list.get(i)) != null)) filtered.add(list.get(i));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/607/buggy-version/contrib.views.hive-next.src.main.java.org.apache.ambari.view.hive2.resources.jobs.ResultsPaginationController.java", "BodyUseAPI": ["java.util.List<T>.get(int)", "java.util.List<T>.add(T)"], "Fixed commit": "8f52cff955d6f7738d6dc89593459a671b5cc74a", "Url": "https://api.github.com/repos/apache/ambari", "Date": "2016-06-14T10:31:51Z"},
{"Line": "=>844", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f.getName().contains(Const.FIELD_UK_POSTAL_ADDRESS_URL)) { jsonField = uk.bl.api.JsonUtils.getStringItem(resNode, Const.URL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2105/buggy-version/app.uk.bl.api.JsonUtils.java", "BodyUseAPI": [], "Fixed commit": "c5420a9ca13cebf8abeee27e57a0aae5ed7c97db", "Url": "https://api.github.com/repos/ukwa/w3act", "Date": "2014-03-30T20:53:24Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles(java.io.FileFilter)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (content == null) { com.tellerulam.logic4mqtt.ScriptScanner.L.severe(((\"Script directory \" + dir) + \" does not exist, skipping\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8348/buggy-version/src.main.java.com.tellerulam.logic4mqtt.ScriptScanner.java", "BodyUseAPI": [], "Fixed commit": "1500b7b0e0a1c1da99e6d775089b960bdf3a5ba2", "Url": "https://api.github.com/repos/owagner/logic4mqtt", "Date": "2015-04-12T13:49:02Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.siddhi.debs2016.graph.Graph.getLargestConnectedComponent(commentLikeGraph.getGraph())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sizeOfComponent == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5977/buggy-version/src.main.java.org.wso2.siddhi.debs2016.comment.CommentStore.java", "BodyUseAPI": [], "Fixed commit": "6b1141bdbbca05cffeb328b66c2dbdf764592da9", "Url": "https://api.github.com/repos/miyurud/debs2016", "Date": "2016-03-23T09:05:56Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bookBuilder.DBookBuildersFactory.getBookBuilder(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (builder.isContainer()) { java.lang.String folderPath = f.getAbsolutePath().replace(IBookBuildersFactory.FOLDER_CONF_SUFFIX, \"\"); java.io.File[] childFiles = new java.io.File(folderPath).listFiles(); if (childFiles != null) { java.util.List<java.io.File> children = java.util.Arrays.asList(childFiles); sortByLeadingNumber(children); if (!(children.isEmpty())) addFilesToTreeNode(children, branch); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1529/buggy-version/OraytaCore.src.bookTree.BookTreeBuilder.java", "BodyUseAPI": [], "Fixed commit": "8b93d03ba2c297dd8d8056392cd7688a9ca3ca9d", "Url": "https://api.github.com/repos/MosheWagner/Orayta-Java", "Date": "2015-09-30T10:12:27Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Arrays.asList(java.io.File[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(children.isEmpty())) addFilesToTreeNode(children, branch);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1529/buggy-version/OraytaCore.src.bookTree.BookTreeBuilder.java", "BodyUseAPI": ["bookTree.BookTreeBuilder.addFilesToTreeNode(java.util.List<java.io.File>,tree.TreeNode<book.Book>)"], "Fixed commit": "8b93d03ba2c297dd8d8056392cd7688a9ca3ca9d", "Url": "https://api.github.com/repos/MosheWagner/Orayta-Java", "Date": "2015-09-30T10:12:27Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(DimensionsDescriptor.RESERVED_DIMENSION_NAMES.contains(field))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7631/buggy-version/library.src.main.java.com.datatorrent.lib.appdata.schemas.GenericDataQuery.java", "BodyUseAPI": [], "Fixed commit": "ef8fb64f38f01da7dd44b27e0340009dcd80b9ab", "Url": "https://api.github.com/repos/apache/apex-malhar", "Date": "2015-03-24T23:34:44Z"},
{"Line": "=>2690", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((localStackSpace) > 0) asm.emitSUBimm(org.jikesrvm.compilers.baseline.arm.ALWAYS, org.jikesrvm.compilers.baseline.arm.SP, org.jikesrvm.compilers.baseline.arm.SP, localStackSpace);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6538/buggy-version/rvm.src.org.jikesrvm.compilers.baseline.arm.BaselineCompilerImpl.java", "BodyUseAPI": [], "Fixed commit": "f7161f6f97b5b69a26ed395a53f32bfdff45e13c", "Url": "https://api.github.com/repos/dmitry-brizhinev/JikesRVM", "Date": "2016-01-29T03:31:39Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event.getMember().equals(victim)) { event.getTextChannel().sendMessage(MSGS.error.setDescription(((\"Sorry, \" + (event.getAuthor().getAsMention())) + \", you can't free yourself from your fate...\")).build()).queue(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3774/buggy-version/src.main.java.commands.chat.BJoke.java", "BodyUseAPI": ["event.getAuthor().getAsMention()", "MSGS.error.setDescription(((\"Sorry, \" + (event.getAuthor().getAsMention())) + \", you can't free yourself from your fate...\"))", "event.getTextChannel().sendMessage(MSGS.error.setDescription(((\"Sorry, \" + (event.getAuthor().getAsMention())) + \", you can't free yourself from your fate...\")).build())", "MSGS.error.setDescription(((\"Sorry, \" + (event.getAuthor().getAsMention())) + \", you can't free yourself from your fate...\")).build()", "event.getTextChannel().sendMessage(MSGS.error.setDescription(((\"Sorry, \" + (event.getAuthor().getAsMention())) + \", you can't free yourself from your fate...\")).build()).queue()", "net.dv8tion.jda.core.events.message.MessageReceivedEvent.getAuthor()", "net.dv8tion.jda.core.events.message.MessageReceivedEvent.getTextChannel()"], "Fixed commit": "7c92c7d55ef50ae533e062863bb786c93d2b1cea", "Url": "https://api.github.com/repos/zekroTJA/DiscordBot", "Date": "2017-06-04T08:28:47Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (loc.contains(\"(\")) loc = loc.substring(0, loc.indexOf('(')).trim();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2621/buggy-version/app.src.main.java.de.tum.in.tumcampus.models.managers.LocationManager.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(char)", "java.lang.String.trim()"], "Fixed commit": "8b08bf4c6a7a8d4e1d67345df2f6538266d0a104", "Url": "https://api.github.com/repos/kordianbruck/TumCampusApp", "Date": "2014-10-21T15:47:21Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node instanceof org.drools.workbench.models.guided.dtree.shared.model.nodes.ConstraintNode) { final org.drools.workbench.models.guided.dtree.shared.model.nodes.ConstraintNode cn = ((org.drools.workbench.models.guided.dtree.shared.model.nodes.ConstraintNode) (node)); if (context instanceof org.drools.workbench.models.guided.dtree.shared.model.nodes.ConstraintNode) { drl.append(\", \"); } if ((cn.getFieldName()) != null) { drl.append(cn.getFieldName()); if ((cn.getOperator()) != null) { drl.append(\" \").append(cn.getOperator()); if ((cn.getValue()) != null) { drl.append(\" \").append(generateValueDRL(cn.getValue())); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4358/buggy-version/drools-workbench-models.drools-workbench-models-guided-dtree.src.main.java.org.drools.workbench.models.guided.dtree.backend.GuidedDecisionTreeModelDRLVisitor.java", "BodyUseAPI": [], "Fixed commit": "c6ee02b70e068239259fc14e75f3f2433ac29c6e", "Url": "https://api.github.com/repos/droolsjbpm/drools", "Date": "2014-10-01T15:44:24Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cn.getValue()) != null) { drl.append(\" \").append(generateValueDRL(cn.getValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4358/buggy-version/drools-workbench-models.drools-workbench-models-guided-dtree.src.main.java.org.drools.workbench.models.guided.dtree.backend.GuidedDecisionTreeModelDRLVisitor.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.StringBuilder)", "org.drools.workbench.models.guided.dtree.backend.GuidedDecisionTreeModelDRLVisitor.generateValueDRL(cn.getValue())", "org.drools.workbench.models.guided.dtree.shared.model.nodes.ConstraintNode.getValue()"], "Fixed commit": "c6ee02b70e068239259fc14e75f3f2433ac29c6e", "Url": "https://api.github.com/repos/droolsjbpm/drools", "Date": "2014-10-01T15:44:24Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.lp20.aikuma.model.Recording.getLanguages()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((langs.size()) > 0) { respeakingLang.setText(respeaking.getLanguages().get(0).getCode()); respeakingLang.setGravity(Gravity.CENTER_HORIZONTAL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3013/buggy-version/Aikuma.src.org.lp20.aikuma.ui.ListenActivity.java", "BodyUseAPI": [], "Fixed commit": "6e4c30d2601340d906f50d6d2bc0c5c96d6e1f57", "Url": "https://api.github.com/repos/langtech/aikuma", "Date": "2013-12-19T04:32:32Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.media.audiofx.AutomaticGainControl.create(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (agc == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3013/buggy-version/Aikuma.src.org.lp20.aikuma.audio.record.Microphone.java", "BodyUseAPI": [], "Fixed commit": "6e4c30d2601340d906f50d6d2bc0c5c96d6e1f57", "Url": "https://api.github.com/repos/langtech/aikuma", "Date": "2013-12-19T04:32:32Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.length()", "java.lang.String.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (l1 > l2) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4172/buggy-version/app.src.main.java.Model.Airport.java", "BodyUseAPI": [], "Fixed commit": "38af560b65b9e1ad166f6a53739cbae84f00a442", "Url": "https://api.github.com/repos/ericberman/MyFlightbookAndroid", "Date": "2017-12-10T19:28:08Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.length()", "java.lang.String.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (l2 > l1) return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4172/buggy-version/app.src.main.java.Model.Airport.java", "BodyUseAPI": [], "Fixed commit": "38af560b65b9e1ad166f6a53739cbae84f00a442", "Url": "https://api.github.com/repos/ericberman/MyFlightbookAndroid", "Date": "2017-12-10T19:28:08Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentOrientation) == (ApplicationLocal.orientationLTR)) { scrollBarPosition = secondScrollPane.getHorizontalScrollBar().getMinimum(); }else { scrollBarPosition = secondScrollPane.getHorizontalScrollBar().getMaximum(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5506/buggy-version/webchick-local.src.main.java.com.agrologic.app.gui.rxtx.MainScreenPanel.java", "BodyUseAPI": [], "Fixed commit": "457797c06745ef44ec3007e9e58a1212fe1e01cf", "Url": "https://api.github.com/repos/val100/webchick-server", "Date": "2014-06-05T10:06:53Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(edgeMap.containsKey(connectedTo))) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7333/buggy-version/src.notTheWitness.board.NodeGraph.java", "BodyUseAPI": [], "Fixed commit": "c20b4cc8a90c6e6410920e96392b0ec2937dfd11", "Url": "https://api.github.com/repos/rk1024/NotTheWitness", "Date": "2016-05-26T01:10:13Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (totalTimeConnected > 0) { return ((long) (((numberOfBytesSent) * 8) / totalTimeConnected)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1099/buggy-version/src.harenet.Peer.java", "BodyUseAPI": [], "Fixed commit": "35d8e515ece2982fe94b17b09c8df093fbf6c7b0", "Url": "https://api.github.com/repos/tonysparks/seventh", "Date": "2015-01-09T02:55:53Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (totalTimeConnected > 0) { return ((long) (((numberOfBytesRecv) * 8) / totalTimeConnected)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1099/buggy-version/src.harenet.Peer.java", "BodyUseAPI": [], "Fixed commit": "35d8e515ece2982fe94b17b09c8df093fbf6c7b0", "Url": "https://api.github.com/repos/tonysparks/seventh", "Date": "2015-01-09T02:55:53Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(right.isNumberNode())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4814/buggy-version/json-path.src.main.java.com.jayway.jsonpath.internal.filter.EvaluatorFactory.java", "BodyUseAPI": [], "Fixed commit": "58c454b52d40dbf6086a6e9cf41b38770f2dbec4", "Url": "https://api.github.com/repos/json-path/JsonPath", "Date": "2015-12-23T12:26:03Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((resultThisDay.size()) == 0) { resultThisDay.add(\"There is no empty slot for this day :(\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6449/buggy-version/src.pact.EventHandler.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "c69a35a320fb3873bbea539800847a248f316c3a", "Url": "https://api.github.com/repos/cs2103aug2014-w11-3j/Pact", "Date": "2014-11-10T10:11:03Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hirebigdata.spider.main.Spider.getThreadCount(com.hirebigdata.spider.main.ZhihuUser)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((array[4]) >= 1) { com.hirebigdata.spider.main.ZhihuUserFollower zhihuUserFollower = new com.hirebigdata.spider.main.ZhihuUserFollower(); for (int i = 0; i < c; i++) { zhihuUserFollower.getFollowers().addAll(followersTasks[i].get().getFollowers()); } new com.hirebigdata.spider.main.Mongo().upsertUserFollower(user.getUser_data_id(), zhihuUserFollower); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4038/buggy-version/src.main.java.com.hirebigdata.spider.main.Spider.java", "BodyUseAPI": [], "Fixed commit": "904e8a410f5a40f700362b39ae59047986fe4dd4", "Url": "https://api.github.com/repos/suchang1992/JavaSpider", "Date": "2015-03-17T06:06:12Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.cakephp.netbeans.util.CakeVersion.getInstance(phpModule).isCakePhp(3)) { org.openide.filesystems.FileObject configDirectory = cakeModule.getConfigDirectory(CakePhpModule.DIR_TYPE.APP); if (configDirectory != null) { config = configDirectory.getFileObject(\"session.php\"); } }else { config = cakeModule.getConfigFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8622/buggy-version/src.org.cakephp.netbeans.ui.actions.CheckDefault.java", "BodyUseAPI": [], "Fixed commit": "347f31fd355bfbf393ef54a5bd7e9d6950532f06", "Url": "https://api.github.com/repos/junichi11/cakephp-netbeans", "Date": "2013-06-17T13:44:02Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["opendap.threddsHandler.Catalog.getRawCatalogDocument()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (catDoc == null) { java.lang.String msg = (\"FAILED to get catalog Document object for the catalog associated with file \" + (catalog.getFileName())) + \"'\"; opendap.threddsHandler.CatalogManager._log.error(\"addCatalog() - {}\", msg); throw new opendap.bes.BadConfigurationException(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4430/buggy-version/src.opendap.threddsHandler.CatalogManager.java", "BodyUseAPI": [], "Fixed commit": "c58bdc77de6b764c55bf7351b206a776d243fc8a", "Url": "https://api.github.com/repos/OPENDAP/olfs", "Date": "2015-09-11T23:47:51Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(java.lang.Character.isDigit(c))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6935/buggy-version/src.com.brif.nix.oauth2.OAuth2Authenticator.java", "BodyUseAPI": [], "Fixed commit": "5eac2f5ecb7817447489a1a6c877964d1da24bc7", "Url": "https://api.github.com/repos/ganoro/com.brif.nix", "Date": "2014-09-07T19:42:34Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getTileEntity(net.minecraft.util.math.BlockPos)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tile instanceof refinedstorage.tile.TileController) { if (((refinedstorage.tile.TileController) (tile)).onOpenWirelessGrid(player, hand)) { return new refinedstorage.item.ActionResult(EnumActionResult.SUCCESS, stack); }else { player.addChatComponentMessage(new net.minecraft.util.text.TextComponentString(net.minecraft.util.text.translation.I18n.translateToLocal(\"misc.refinedstorage:wireless_grid.out_of_range\"))); } }else { player.addChatComponentMessage(new net.minecraft.util.text.TextComponentString(net.minecraft.util.text.translation.I18n.translateToLocal(\"misc.refinedstorage:wireless_grid.not_found\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7649/buggy-version/src.main.java.refinedstorage.item.ItemWirelessGrid.java", "BodyUseAPI": [], "Fixed commit": "89f1a84a04b58de0b1af53c3331c9d9f2b7da02a", "Url": "https://api.github.com/repos/raoulvdberge/refinedstorage", "Date": "2016-04-11T20:05:44Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((files.length) > 0) { if (host == null) { com.dotmarketing.util.Logger.error(com.dotmarketing.menubuilders.RefreshMenus.class, ((\"Folder id :\" + (auxFolder.getInode())) + \" has no host\")); return; } for (int i = 0; i < (files.length); i++) { java.io.File file = files[i]; java.lang.String fileName = file.getName(); if (fileName.startsWith(host.getIdentifier())) { file.delete(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4998/buggy-version/src.com.dotmarketing.menubuilders.RefreshMenus.java", "BodyUseAPI": [], "Fixed commit": "e8f6ff4223c94f75296488d94d927bbea6e9286e", "Url": "https://api.github.com/repos/dotCMS/dotCMS", "Date": "2013-07-22T16:52:49Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(line.trim().equals(\"\"))) stmt.execute(line);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6912/buggy-version/src.main.java.com.xyz.DBInteraction.java", "BodyUseAPI": ["java.sql.Statement.execute(java.lang.String)"], "Fixed commit": "636150b5ebca20e9f46cbe36800269aeb0e23bb5", "Url": "https://api.github.com/repos/Hunter-Buckhorn/cs174A-Proj", "Date": "2017-12-10T13:58:55Z"},
{"Line": "=>3310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(handler.deleted)) register.addException(handler);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5327/buggy-version/ParaLangShared.src.cz.upol.vanusanik.paralang.compiler.PLCompiler.java", "BodyUseAPI": ["cz.upol.vanusanik.paralang.compiler.PLCompiler.ExceptionShiftRegister.addException(cz.upol.vanusanik.paralang.compiler.PLCompiler.ExceptionHandler)"], "Fixed commit": "05bc70b317efb0a0f64fbc37ab9c8b98bc961d11", "Url": "https://api.github.com/repos/Enerccio/ParaLang", "Date": "2015-06-23T19:33:27Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dateString.endsWith(\"Z\")) { formatter = new java.text.SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", java.util.Locale.getDefault()); formatter.setTimeZone(java.util.TimeZone.getTimeZone(\"UTC\")); }else formatter = new java.text.SimpleDateFormat(\"yyyy/MM/dd HH:mm:ss\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6517/buggy-version/VotingSystemLibrary.src.main.java.org.votingsystem.util.DateUtils.java", "BodyUseAPI": [], "Fixed commit": "2d3805fa7480fa1c6c28a203c8ae75c06182a281", "Url": "https://api.github.com/repos/votingsystem/votingsystem", "Date": "2015-01-26T14:11:01Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.solr.request.sparse.SparseKeys.useOverallHeuristic(int,searcher.maxDoc())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (heuristic && (termList != null)) { return org.apache.solr.request.SimpleFacets.fallbackGetListedTermCounts(searcher, null, fieldName, termList, docs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6632/buggy-version/solr.core.src.java.org.apache.solr.request.sparse.SparseDocValuesFacets.java", "BodyUseAPI": ["org.apache.solr.request.SimpleFacets.fallbackGetListedTermCounts(org.apache.solr.search.SolrIndexSearcher,<nulltype>,java.lang.String,java.lang.String,org.apache.solr.search.DocSet)"], "Fixed commit": "5f2a0dd01c7f75fb81042258cdc42fa941c81634", "Url": "https://api.github.com/repos/tokee/lucene-solr", "Date": "2015-06-22T13:09:11Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCurrentRange()) != null) { start = getCurrentRange().getStartOffset(); end = getCurrentRange().getEndOffset(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4951/buggy-version/platform.xdebugger-impl.src.com.intellij.xdebugger.impl.evaluate.quick.XValueHint.java", "BodyUseAPI": [], "Fixed commit": "18e068b493b71720a579dac8bc5406dd145d63c1", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2014-09-17T10:35:23Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((java.lang.System.currentTimeMillis()) > (calendar.getTimeInMillis())) { calendar.add(java.util.Calendar.DAY_OF_YEAR, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1872/buggy-version/MessagesScheduler.src.com.example.messagesscheduler.MainActivity.java", "BodyUseAPI": ["java.util.Calendar.add(int,int)"], "Fixed commit": "12ade4b92bab64a3c9113cc0f22cb28fe944ca1a", "Url": "https://api.github.com/repos/lucascgomes/MsgScheduler", "Date": "2015-03-12T02:39:46Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((initial_states) == null) { initial_states = new java.util.LinkedList<GS>(); }else { initial_states.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5423/buggy-version/src.engine.ModelChecker.java", "BodyUseAPI": [], "Fixed commit": "8401d16f460140a3332805440731c0aa21b2a1ff", "Url": "https://api.github.com/repos/Gueust/StateMachineModelization", "Date": "2014-06-16T13:37:57Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cmput301f17t12.quirks.Helpers.HelperFunctions.getAllUsers(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (followingUsers != null) { if (!(followingUsers.isEmpty())) { for (cmput301f17t12.quirks.Models.User user : followingUsers) { quirkList.addAllQuirks(user.getQuirks()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8619/buggy-version/app.src.main.java.cmput301f17t12.quirks.Activities.MapActivity.java", "BodyUseAPI": ["java.util.ArrayList<cmput301f17t12.quirks.Models.User>.isEmpty()"], "Fixed commit": "8abcd7d48d8624f5184e026db82215eee74dbf0b", "Url": "https://api.github.com/repos/ThomasTetz/Quirks", "Date": "2017-12-04T02:08:34Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((endOffset - startOffset) <= 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5082/buggy-version/src.consulo.javaee.jsp.psi.impl.java.psi.JspxImportListImpl.java", "BodyUseAPI": [], "Fixed commit": "8eb6ea19476ff8ff2f4af202d25a4b3b7a9bd33f", "Url": "https://api.github.com/repos/consulo/consulo-javaee", "Date": "2017-06-23T14:06:49Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCurrentLoad()) > 0) { deposit(); }else { state = rover.GenericRover.State.GoingToResource; map.Resource r = map.closestResource(); java.lang.System.out.println(\"Attempting to Move to Resource\"); roverMove(((r.getxPos()) - (xPos)), ((r.getyPos()) - (yPos))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/538/buggy-version/rover.rover.src.main.java.rover.GenericRover.java", "BodyUseAPI": [], "Fixed commit": "8bb58f2e57dc83d5bd2ac37a2ecabb3a75bf5c9a", "Url": "https://api.github.com/repos/Birdfriender/IA-AgentScape-Rover", "Date": "2016-10-29T11:06:22Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isHint) { titleEditView.setHint(title); }else { titleEditView.setText(title); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5263/buggy-version/app.src.main.java.me.lshare.cardnote.ui.widget.TitleBar.java", "BodyUseAPI": [], "Fixed commit": "37b25a12ffd16a4f37ce6da439b21c0010aa55ec", "Url": "https://api.github.com/repos/LinLshare/CardNote", "Date": "2017-06-05T15:22:50Z"},
{"Line": "=>976", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(reservedIdentifier.isEmpty())) { java.lang.Integer spokenForIdentifier = java.lang.Integer.parseInt(reservedIdentifier); spokenFor.put(spokenForIdentifier, isSpokenFor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8830/buggy-version/DataPackageManager.src.edu.lternet.pasta.datapackagemanager.DataPackageManager.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "ce94483929d1839f728ac7978e83b28de7baea79", "Url": "https://api.github.com/repos/PASTAplus/PASTA", "Date": "2017-01-26T22:36:44Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (userid == null) { throw new org.apache.wicket.RestartResponseAtInterceptPageException(com.tysanclan.site.projectewok.pages.RosterPage.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/9068/buggy-version/src.main.java.com.tysanclan.site.projectewok.pages.MemberPage.java", "BodyUseAPI": [], "Fixed commit": "99fac602ad111df55a45b4cc23ae503e8413cd8e", "Url": "https://api.github.com/repos/jsteenbeeke/tysansite", "Date": "2014-02-24T10:43:08Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sum < 0) { sum = java.lang.Double.MAX_VALUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1988/buggy-version/classification.regression.stochastic.src.classification.regression.stochastic.problem.OccupancyClassification.java", "BodyUseAPI": [], "Fixed commit": "757d6d3231660742e50eb8f0cd0cf1f8dfd59e9f", "Url": "https://api.github.com/repos/wrwei/DAASE", "Date": "2016-07-20T14:40:05Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (checkRange(h.getX(), h.getY())) { attackHero(h); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6762/buggy-version/model.Enemy.java", "BodyUseAPI": ["model.Enemy.attackHero(model.Hero)"], "Fixed commit": "b2645012562e34912178443b4f8d03e8083badf5", "Url": "https://api.github.com/repos/PlutonyiumDev/Project-Platypus", "Date": "2015-01-09T05:04:51Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((accessToken) == null) || (accessToken.expired())) { com.riversoft.weixin.common.WxClient.logger.debug(\"[{}]:requesting a new access token.\", clientId); java.lang.String content = httpGet(java.lang.String.format(tokenUrl, clientId, clientSecret)); com.riversoft.weixin.common.WxClient.AccessToken accessToken = com.riversoft.weixin.common.WxClient.AccessToken.fromJson(content); com.riversoft.weixin.common.WxClient.logger.debug(\"[{}]:requested a new access token: {}\", clientId, accessToken.accessToken); this.accessToken = accessToken; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6286/buggy-version/weixin-common.src.main.java.com.riversoft.weixin.common.WxClient.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "b75d0cead88f339d59f81fc7a2c29e7c916fc898", "Url": "https://api.github.com/repos/borball/weixin-sdk", "Date": "2016-02-23T16:46:14Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((serverPort) == 443) { forwardSocket = javax.net.ssl.SSLContext.getDefault().getSocketFactory().createSocket(serverAddr, serverPort); }else { forwardSocket = javax.net.SocketFactory.getDefault().createSocket(serverAddr, serverPort); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5389/buggy-version/Java.Server.java", "BodyUseAPI": [], "Fixed commit": "0b2046421b6fb206ba8e3dc61331bb287b1a606c", "Url": "https://api.github.com/repos/xioxu/HttpProxyChain", "Date": "2015-09-02T08:56:29Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (act != null) return act;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5206/buggy-version/javaagents.src.main.java.marsbot.marsbot.RepairerAgent.java", "BodyUseAPI": [], "Fixed commit": "6677f0d281239781f51d0d810745a73de5042050", "Url": "https://api.github.com/repos/pinieb/marsbot", "Date": "2013-12-12T06:30:04Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.DEBUG) { analyticsID = getVariableFromConfig(\"GOOGLE_ANALYTICS_DEV\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6655/buggy-version/app.src.main.java.au.com.newint.newinternationalist.App.java", "BodyUseAPI": [], "Fixed commit": "13e6ae67ed95dd748c1b239447b60b52599bbbc8", "Url": "https://api.github.com/repos/sighmon/NewInternationalist", "Date": "2015-06-26T03:08:33Z"},
{"Line": "=>547", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((row >= 3) && (col <= 2)) { c[(row - 3)][col] = value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5464/buggy-version/Pentago.src.ai.AiBoard.java", "BodyUseAPI": [], "Fixed commit": "5e0ee6d8354d11cc1c3b676f7f9d11cc4793cea9", "Url": "https://api.github.com/repos/jawolf17/Pentago", "Date": "2015-11-17T04:39:05Z"},
{"Line": "=>550", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((row >= 3) && (col >= 3)) { d[(row - 3)][(col - 3)] = value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5464/buggy-version/Pentago.src.ai.AiBoard.java", "BodyUseAPI": [], "Fixed commit": "5e0ee6d8354d11cc1c3b676f7f9d11cc4793cea9", "Url": "https://api.github.com/repos/jawolf17/Pentago", "Date": "2015-11-17T04:39:05Z"},
{"Line": "=>541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((row <= 2) && (col <= 2)) { a[row][col] = value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5464/buggy-version/Pentago.src.ai.AiBoard.java", "BodyUseAPI": [], "Fixed commit": "5e0ee6d8354d11cc1c3b676f7f9d11cc4793cea9", "Url": "https://api.github.com/repos/jawolf17/Pentago", "Date": "2015-11-17T04:39:05Z"},
{"Line": "=>544", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((row <= 2) && (col >= 3)) { b[row][(col - 3)] = value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5464/buggy-version/Pentago.src.ai.AiBoard.java", "BodyUseAPI": [], "Fixed commit": "5e0ee6d8354d11cc1c3b676f7f9d11cc4793cea9", "Url": "https://api.github.com/repos/jawolf17/Pentago", "Date": "2015-11-17T04:39:05Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((message.tag) == (DEL)) cache.remove(obj.key); else if ((message.tag) == (GC)) cache.gc(message.valueAsLong()); else unhandled(message);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/825/buggy-version/actor4j-core.src.main.java.actor4j.core.data.access.VolatileCacheActor.java", "BodyUseAPI": ["actor4j.core.messages.ActorMessage<?>.valueAsLong()", "actor4j.core.data.access.VolatileCacheActor<K, V>.unhandled(actor4j.core.messages.ActorMessage<?>)", "actor4j.core.data.access.VolatileCacheActor.gc(message.valueAsLong())"], "Fixed commit": "a08a4ea52fa911aa7e6738a5c52d21b4fb014a3c", "Url": "https://api.github.com/repos/relvaner/actor4j-core", "Date": "2017-07-04T16:03:24Z"},
{"Line": "=>3494", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((aclEntries) == null) { aclEntries = com.google.common.collect.Lists.newArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4658/buggy-version/hadoop-hdfs-project.hadoop-hdfs.src.main.java.org.apache.hadoop.hdfs.server.namenode.FSEditLogOp.java", "BodyUseAPI": [], "Fixed commit": "5fa240d39d68161d673941da84d76058d9e04aef", "Url": "https://api.github.com/repos/cnauroth/hadoop-common", "Date": "2014-02-13T06:24:14Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["rhogenwizard.editors.Capabilities.fromId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((list.indexOf(temp)) == (-1)) list.add(rhogenwizard.editors.Capabilities.fromId(pt));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5883/buggy-version/rhogen-wizard.src.rhogenwizard.editors.Capabilities.java", "BodyUseAPI": ["java.util.List<rhogenwizard.editors.Capabilities>.add(rhogenwizard.editors.Capabilities)"], "Fixed commit": "945b59f5fe1a2d323d58c3e149df79bd60290b5a", "Url": "https://api.github.com/repos/rhomobile/rhostudio", "Date": "2013-08-26T05:41:58Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["rhogenwizard.buildfile.YmlFile.getObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (rawList != null) { if (androidList != null) { rawList.addAll(androidList); } }else { rawList = androidList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5883/buggy-version/rhogen-wizard.src.rhogenwizard.buildfile.AppYmlFile.java", "BodyUseAPI": ["java.util.List<java.lang.String>.addAll(java.util.List<java.lang.String>)"], "Fixed commit": "945b59f5fe1a2d323d58c3e149df79bd60290b5a", "Url": "https://api.github.com/repos/rhomobile/rhostudio", "Date": "2013-08-26T05:41:58Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((java.lang.Double.isNaN(dXr)) || (java.lang.Double.isNaN(dYr))) || (java.lang.Double.isInfinite(dXr))) || (java.lang.Double.isInfinite(dYr))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/871/buggy-version/GeoTools.process-spatialstatistics.src.main.java.org.geotools.process.spatialstatistics.distribution.StandardDeviationalEllipse.java", "BodyUseAPI": [], "Fixed commit": "90c44f6867c90851ea5854a340b1d0abf35a4ad6", "Url": "https://api.github.com/repos/mapplus/spatial_statistics_for_geotools_udig", "Date": "2016-01-08T06:04:30Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getEntity().getLastDamageCause()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((damage.getDamager()) instanceof org.bukkit.entity.Player) { org.bukkit.entity.Player player = ((org.bukkit.entity.Player) (damage.getDamager())); com.Ben12345rocks.AdvancedCore.Objects.User user = new com.Ben12345rocks.AdvancedCore.Objects.User(com.Ben12345rocks.AdvancedMobControl.Listeners.EntityDeath.plugin, player); handle.addKill(user); handle.runRewards(user, damage.getCause().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8429/buggy-version/AdvancedMobControl.src.com.Ben12345rocks.AdvancedMobControl.Listeners.EntityDeath.java", "BodyUseAPI": ["damage.getCause().toString()", "org.bukkit.event.entity.EntityDamageByEntityEvent.getCause()", "com.Ben12345rocks.AdvancedMobControl.Object.EntityHandler.runRewards(com.Ben12345rocks.AdvancedCore.Objects.User,damage.getCause().toString())", "org.bukkit.event.entity.EntityDamageByEntityEvent.getDamager()"], "Fixed commit": "b0de2ddaadd898712e9563bf72363575ef3c8e04", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedMobControl", "Date": "2016-08-29T14:42:02Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EndermanPlaceEvent.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((enderman.getCarriedMaterial().getItemType()) != null) newState.setType(enderman.getCarriedMaterial().getItemType());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7007/buggy-version/src.uk.co.oliwali.HawkEye.listeners.MonitorEntityListener.java", "BodyUseAPI": ["enderman.getCarriedMaterial().getItemType()", "org.bukkit.block.BlockState.setType(enderman.getCarriedMaterial().getItemType())", "org.bukkit.entity.Enderman.getCarriedMaterial()"], "Fixed commit": "ed747e56698e4c75044734bd6890192aa09b73e0", "Url": "https://api.github.com/repos/oliverwoodings/HawkEye", "Date": "2011-09-22T19:32:27Z"},
{"Line": "=>914", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gradle.api.Project.fileTree(java.util.Map<java.lang.String, java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(javaFileTree.isEmpty())) { org.gradle.api.Task zipJavadocTask = com.liferay.gradle.util.GradleUtil.getTask(project, com.liferay.gradle.plugins.LiferayJavaPlugin.ZIP_JAVADOC_TASK_NAME); artifactHandler.add(Dependency.ARCHIVES_CONFIGURATION, zipJavadocTask); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5140/buggy-version/modules.sdk.gradle-plugins.src.com.liferay.gradle.plugins.LiferayJavaPlugin.java", "BodyUseAPI": [], "Fixed commit": "b2124acabe9c3205bd26295674b9c1996810b5b1", "Url": "https://api.github.com/repos/brianchandotcom/liferay-portal", "Date": "2015-09-01T18:33:46Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((Rounds) (tabataPanel.getComponent(2))).getTabTotal()) > 1) { ((Rounds) (tabataPanel.getComponent(2))).addTabTotal((-1)); }else { javax.swing.JOptionPane.showMessageDialog(tabSetupDialog, \"Number of tabats must be grater than 0!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4408/buggy-version/TabataTimer.src.Main.java", "BodyUseAPI": ["((Rounds) (tabataPanel.getComponent(2))).addTabTotal(int)", "TabataPanel.getComponent(int)"], "Fixed commit": "03ff23b25d8b0f67e7fcdd8f8698983242f32b23", "Url": "https://api.github.com/repos/11michi11/TabataTimer", "Date": "2017-05-22T13:26:47Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((Rounds) (tabataPanel.getComponent(2))).getTotalRounds()) > 1) { ((Rounds) (tabataPanel.getComponent(2))).addTotalRounds((-1)); }else { javax.swing.JOptionPane.showMessageDialog(tabSetupDialog, \"Number of rounds must be grater than 0!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4408/buggy-version/TabataTimer.src.Main.java", "BodyUseAPI": ["TabataPanel.getComponent(int)", "((Rounds) (tabataPanel.getComponent(2))).addTotalRounds(int)"], "Fixed commit": "03ff23b25d8b0f67e7fcdd8f8698983242f32b23", "Url": "https://api.github.com/repos/11michi11/TabataTimer", "Date": "2017-05-22T13:26:47Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getStatusCode()) == (org.springframework.http.HttpStatus.CONFLICT)) { throw new io.reactivesw.common.exception.ConflictException(\"Customer already exist.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3295/buggy-version/src.main.java.io.reactivesw.authentication.application.service.RestClient.java", "BodyUseAPI": [], "Fixed commit": "295f967e9e57c110d7f47164996d03f03dd06170", "Url": "https://api.github.com/repos/reactivesw/keep-customer-server", "Date": "2017-02-04T05:07:28Z"},
{"Line": "=>1225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRoadOverlays) != null) { for (int i = 0; i < (mRoadOverlays.length); i++) root.addOverlay(mRoadOverlays[i], com.osmnavigator.MapActivity.mKmlDocument); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7044/buggy-version/OSMNavigator.src.main.java.com.osmnavigator.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "6ae3029b6fd6bad79e5f4c2ed72a7dc1f9fa3edf", "Url": "https://api.github.com/repos/spyhunter99/osmbonuspack", "Date": "2015-07-04T20:01:22Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((weaponTimer) > 10000) { weaponTimer = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3860/buggy-version/Player.java", "BodyUseAPI": [], "Fixed commit": "3cf5158a6d8133fea79b3b805f41f151f8e31e9c", "Url": "https://api.github.com/repos/NathanPhilliber/NullSec", "Date": "2015-10-05T21:40:02Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(fireFly.worldObj.isRemote)) { for (net.minecraft.entity.player.EntityPlayer player : ((net.minecraft.world.WorldServer) (fireFly.getEntityWorld())).getEntityTracker().getTrackingPlayers(fireFly)) { bossInfo.removePlayer(((net.minecraft.entity.player.EntityPlayerMP) (player))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2354/buggy-version/src.main.java.appalachia.entity.decorators.FireFly.EasterEggBoss.java", "BodyUseAPI": ["appalachia.entity.passive.EntityFireFly.getEntityWorld()", "((net.minecraft.world.WorldServer) (fireFly.getEntityWorld())).getEntityTracker()", "((net.minecraft.world.WorldServer) (fireFly.getEntityWorld())).getEntityTracker().getTrackingPlayers(appalachia.entity.passive.EntityFireFly)"], "Fixed commit": "66bb106fc9899207a46b25c9699ca260dd53f267", "Url": "https://api.github.com/repos/garantiertnicht/Appalachia", "Date": "2016-12-01T21:48:27Z"},
{"Line": "=>1793", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<com.basiscomponents.db.DataRow>.next()", "java.util.Iterator<java.lang.String>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((dr.getField(fn).getValue()) == null) { g.writeNullField(fn); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5572/buggy-version/java.src.com.basiscomponents.db.ResultSet.java", "BodyUseAPI": ["com.fasterxml.jackson.core.JsonGenerator.writeNullField(java.lang.String)"], "Fixed commit": "757bd9d99143895672a5daf2f4f9de2f9bfe2bdd", "Url": "https://api.github.com/repos/BasisHub/components", "Date": "2017-08-11T10:49:42Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (amountOfFavorites == 0) { ClearImageButtons(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5489/buggy-version/app.src.main.java.dk.tinytree.wikimovie.Fragments.Tabs.Fragment_A0_OverView.java", "BodyUseAPI": [], "Fixed commit": "bf9abf39a6c904bbf7550ed25cd22be5fbeef474", "Url": "https://api.github.com/repos/AppBuddies/wikiMovie", "Date": "2016-08-17T13:16:34Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["firstNameEditText.getText().toString()", "lastNameEditText.getText().toString()", "emailEditText.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((((((firstName != null) && (!(firstName.isEmpty()))) && (lastName != null)) && (!(lastName.isEmpty()))) && (email != null)) && (!(email.isEmpty()))) { final android.content.Intent intent = new android.content.Intent(getApplicationContext(), edu.cvtc.android.connectwithme.ResponseActivity.class); intent.putExtra(\"firstName\", firstName); intent.putExtra(\"lastName\", lastName); intent.putExtra(\"email\", email); startActivity(intent); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3241/buggy-version/app.src.main.java.edu.cvtc.android.connectwithme.MainActivity.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,java.lang.String)", "android.content.Intent.putExtra(java.lang.String,java.lang.String)", "android.content.Intent.putExtra(java.lang.String,java.lang.String)"], "Fixed commit": "354149c4780d143a92afe70449ce41a255abdc96", "Url": "https://api.github.com/repos/Geeklyrood/Connect-With-Me-App", "Date": "2017-04-06T15:33:30Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.PriorityQueue<T>.poll()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (polled != null) { res.add(polled); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4236/buggy-version/src.com.xdrop.fuzzywuzzy.algorithms.Utils.java", "BodyUseAPI": ["java.util.List<T>.add(T)"], "Fixed commit": "245f5e4e0ac9ba539eba8a16016bed45c15c6084", "Url": "https://api.github.com/repos/xdrop/fuzzywuzzy", "Date": "2016-09-11T22:06:42Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (src.contains(\"/\")) { path = src.substring(0, src.lastIndexOf('/')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6456/buggy-version/dspace-xmlui.src.main.java.org.dspace.app.xmlui.cocoon.ConcatenationReader.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.lastIndexOf(char)"], "Fixed commit": "114f1e0985833de96e6e846cff98f7056af50100", "Url": "https://api.github.com/repos/cjuergen/DSpace", "Date": "2015-02-20T16:45:43Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(path.isEmpty())) fullPath = (path + \"/\") + f; else fullPath = f;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6456/buggy-version/dspace-xmlui.src.main.java.org.dspace.app.xmlui.cocoon.ConcatenationReader.java", "BodyUseAPI": [], "Fixed commit": "114f1e0985833de96e6e846cff98f7056af50100", "Url": "https://api.github.com/repos/cjuergen/DSpace", "Date": "2015-02-20T16:45:43Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tail.isEmpty()) { ni = nodes.get(nodes.firstKey()); }else { ni = tail.get(tail.firstKey()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1574/buggy-version/scud-core.src.main.java.com.xj.scud.route.WeightRoute.java", "BodyUseAPI": ["java.util.SortedMap<java.lang.Long, java.lang.String>.firstKey()", "java.util.SortedMap<java.lang.Long, java.lang.String>.get(java.lang.Long)"], "Fixed commit": "1f98467c899443da993972eac6770c448afc13d1", "Url": "https://api.github.com/repos/PATHjunsongfan/scud", "Date": "2017-01-12T08:47:25Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastKnownLocation) == null) return \"No Location Info :(\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1754/buggy-version/android.src.org.castelodelego.ld30.android.AndroidLocation.java", "BodyUseAPI": [], "Fixed commit": "bee1a81e848beecc2d4842a875ed46586ae713d9", "Url": "https://api.github.com/repos/caranha/ludum30", "Date": "2014-09-02T11:50:26Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getCurrentDessert().getDatesAvailable().equals(getString(R.string.enter_dates))) { ((android.widget.TextView) (view.findViewById(R.id.dishDates))).setText(\"\"); }else { ((android.widget.TextView) (view.findViewById(R.id.dishDates))).setText(getCurrentDessert().getDatesAvailable()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1136/buggy-version/app.src.main.java.com.example.finalproject.Fragments.DessertFragment.java", "BodyUseAPI": [], "Fixed commit": "d2b0437edae8b3e9a76631f32d268cdfc1a23b70", "Url": "https://api.github.com/repos/daniellecn/androidFinalProject", "Date": "2017-02-06T18:22:05Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.serenitybdd.screenplay.actors.OnStage.stage()) != null) { net.serenitybdd.screenplay.actors.OnStage.stage().drawTheCurtain(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2074/buggy-version/serenity-screenplay.src.main.java.net.serenitybdd.screenplay.actors.OnStage.java", "BodyUseAPI": [], "Fixed commit": "19f5eac2721b87e4a02dd186277f1348d313ea5e", "Url": "https://api.github.com/repos/utwyko/serenity-core", "Date": "2016-10-27T15:28:15Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inputPickerSession) != null) { inputPickerButton.setSelected(false); getExternalInputControl().closeInputPicker(inputPickerSession, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1242/buggy-version/src.com.connectsdk.sampler.fragments.SystemFragment.java", "BodyUseAPI": [], "Fixed commit": "c8fd7c080cafec3d1be2c6e8d45d2ed616c24624", "Url": "https://api.github.com/repos/ConnectSDK/Connect-SDK-Android-API-Sampler", "Date": "2014-09-11T23:36:23Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(response.content().isReadable())) { if (((response.status().equals(HttpResponseStatus.OK)) || (response.status().equals(HttpResponseStatus.ACCEPTED))) || (response.status().equals(HttpResponseStatus.CREATED))) { this.client.connect(this.request); return; } this.promise.setFailure(new java.io.IOException((\"Content was not readable. HTTP Status: \" + (response.status())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8566/buggy-version/src.main.java.mousio.etcd4j.transport.AbstractEtcdResponseHandler.java", "BodyUseAPI": ["response.status().equals(HttpResponseStatus.ACCEPTED)", "response.status().equals(HttpResponseStatus.CREATED)", "io.netty.handler.codec.http.FullHttpResponse.status()", "response.status().equals(HttpResponseStatus.OK)", "io.netty.handler.codec.http.FullHttpResponse.status()", "io.netty.util.concurrent.Promise<RS>.setFailure(java.io.IOException)", "io.netty.handler.codec.http.FullHttpResponse.status()", "io.netty.handler.codec.http.FullHttpResponse.status()"], "Fixed commit": "38ffd14bbffdbfacc11073af2bcbcd0119d6a581", "Url": "https://api.github.com/repos/jurmous/etcd4j", "Date": "2015-08-30T13:51:55Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((objs[i]) == null) { s.append(\"null\"); }else { s.append(objs[i].toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2099/buggy-version/internalLibraries.serviceutils.src.main.java.com.emc.storageos.services.util.Strings.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "64facf3c36bbb86a67f7c9e2bf949ae498a29fc4", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-09-16T09:32:44Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(temp.trim().isEmpty())) { for (java.lang.String s : symbolCheck) { while ((temp.contains(s)) && ((temp.length()) > 0)) { temp = breakDownToken(temp, s); } } if (size == (tokenList.size())) { tokenList.add(temp); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/9191/buggy-version/4490.src.Compiler.java", "BodyUseAPI": ["Compiler.breakDownToken(java.lang.String,java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.length()"], "Fixed commit": "390702046daba0329d4e3733179721e8153e0e7a", "Url": "https://api.github.com/repos/nickFr0st/Compiler", "Date": "2013-01-12T18:42:41Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (breakDownItem.equals(\"'\")) { breakDownItem = checkForChars(item, breakDownItem); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/9191/buggy-version/4490.src.Compiler.java", "BodyUseAPI": ["Compiler.checkForChars(java.lang.String,java.lang.String)"], "Fixed commit": "390702046daba0329d4e3733179721e8153e0e7a", "Url": "https://api.github.com/repos/nickFr0st/Compiler", "Date": "2013-01-12T18:42:41Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (writer != null) { writer.flush(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8076/buggy-version/src.bbn.api.sms.Http.java", "BodyUseAPI": ["java.io.PrintWriter.flush()"], "Fixed commit": "dbfb850373cdb0d241af1895f498d09d43ed31aa", "Url": "https://api.github.com/repos/vicsstar/bbn-java-api", "Date": "2013-01-22T12:49:10Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(otherNodeList.isEmpty())) { com.dd.FoldedDirectoryNode fileNode = new com.dd.FoldedDirectoryNode(project, viewSettings, com.dd.FoldingStructureProvider.OTHER_NODE); fileNode.getChildren().addAll(otherNodeList); resultList.add(fileNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4059/buggy-version/src.com.dd.FoldingStructureProvider.java", "BodyUseAPI": ["fileNode.getChildren().addAll(java.util.List<com.intellij.ide.util.treeView.AbstractTreeNode>)"], "Fixed commit": "0a5f9641d1e4efc7217bd736877a7019852c20b8", "Url": "https://api.github.com/repos/dmytrodanylyk/folding-plugin", "Date": "2015-07-17T18:08:03Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(offlineFriends.contains(friend))) offlineFriends.add(friend);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4001/buggy-version/app.src.main.java.com.tesfayeabel.lolchat.ui.adapter.ExpandableFriendViewAdapter.java", "BodyUseAPI": ["java.util.List<com.tesfayeabel.lolchat.StaticFriend>.add(com.tesfayeabel.lolchat.StaticFriend)"], "Fixed commit": "f0a4a2be17faffec195ff3dfe149063421a2d249", "Url": "https://api.github.com/repos/abelDev/LOL-Chat", "Date": "2014-09-27T20:31:42Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(onlineFriends.contains(friend))) onlineFriends.add(friend);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4001/buggy-version/app.src.main.java.com.tesfayeabel.lolchat.ui.adapter.ExpandableFriendViewAdapter.java", "BodyUseAPI": ["java.util.List<com.tesfayeabel.lolchat.StaticFriend>.add(com.tesfayeabel.lolchat.StaticFriend)"], "Fixed commit": "f0a4a2be17faffec195ff3dfe149063421a2d249", "Url": "https://api.github.com/repos/abelDev/LOL-Chat", "Date": "2014-09-27T20:31:42Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tesfayeabel.lolchat.ui.adapter.ExpandableFriendViewAdapter.getGroup((friend.isOnline() ? 0 : 1))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(friends.contains(friend))) { friends.add(friend); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4001/buggy-version/app.src.main.java.com.tesfayeabel.lolchat.ui.adapter.ExpandableFriendViewAdapter.java", "BodyUseAPI": ["java.util.List<com.tesfayeabel.lolchat.StaticFriend>.add(com.tesfayeabel.lolchat.StaticFriend)"], "Fixed commit": "f0a4a2be17faffec195ff3dfe149063421a2d249", "Url": "https://api.github.com/repos/abelDev/LOL-Chat", "Date": "2014-09-27T20:31:42Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (start < 0) { android.util.Log.d(\"parsing\", ((rssUrl + \" - \") + token)); start = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8184/buggy-version/app.src.main.java.fr.vpm.audiorss.process.ItemParser.java", "BodyUseAPI": [], "Fixed commit": "f588bd5c571d3f1cc08085d651fb0008a4c9cd79", "Url": "https://api.github.com/repos/vpmalley/radiofeedz", "Date": "2015-05-01T16:17:08Z"},
{"Line": "=>481", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.slipcor.pvparena.arena.ArenaPlayer.parsePlayer(player.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((aPlayer.getStatus()) != (net.slipcor.pvparena.arena.ArenaPlayer.Status.LOUNGE)) { arena.getDebugger().i(\"cancelling: not fighting nor in the lounge\", player); event.setCancelled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7482/buggy-version/src.net.slipcor.pvparena.listeners.PlayerListener.java", "BodyUseAPI": [], "Fixed commit": "0ca26024e5a722665908f896da204163ccf6a480", "Url": "https://api.github.com/repos/ChrisLane/pvparena", "Date": "2016-06-18T19:20:52Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<V, java.util.Set<E>>.get(V)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (entities.isEmpty()) { index.remove(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1895/buggy-version/concourse-plugin-core.src.main.java.com.cinchapi.concourse.server.plugin.data.Dataset.java", "BodyUseAPI": [], "Fixed commit": "d0d60d8c8e008106cf05d7e4ab10b679a10e665e", "Url": "https://api.github.com/repos/cinchapi/concourse", "Date": "2016-12-23T20:20:18Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<A, java.util.Map<V, java.util.Set<E>>>.get(A)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index.isEmpty()) { inverted.remove(attribute); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1895/buggy-version/concourse-plugin-core.src.main.java.com.cinchapi.concourse.server.plugin.data.Dataset.java", "BodyUseAPI": [], "Fixed commit": "d0d60d8c8e008106cf05d7e4ab10b679a10e665e", "Url": "https://api.github.com/repos/cinchapi/concourse", "Date": "2016-12-23T20:20:18Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (data.get(key).isEmpty()) { data.remove(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1895/buggy-version/concourse-plugin-core.src.main.java.com.cinchapi.concourse.server.plugin.data.TrackingMultimap.java", "BodyUseAPI": ["java.util.Map<K, java.util.Set<V>>.remove(java.lang.Object)"], "Fixed commit": "d0d60d8c8e008106cf05d7e4ab10b679a10e665e", "Url": "https://api.github.com/repos/cinchapi/concourse", "Date": "2016-12-23T20:20:18Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.apache.drill.exec.proto.CoordinationProtos.DrillbitEndpoint, org.apache.drill.exec.store.schedule.AssignmentCreator.FragIteratorWrapper>.get(org.apache.drill.exec.proto.CoordinationProtos.DrillbitEndpoint)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (iteratorWrapper == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7345/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.store.schedule.AssignmentCreator.java", "BodyUseAPI": [], "Fixed commit": "bc56521db28f4dcf80950391b1b6b0769b99ed70", "Url": "https://api.github.com/repos/StevenMPhillips/drill", "Date": "2015-04-04T01:56:40Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasLanguageCheckNode()) { w.append(\"import com.oracle.truffle.api.CompilerDirectives.TruffleBoundary;\").append(\"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6021/buggy-version/truffle.com.oracle.truffle.dsl.processor.interop.src.com.oracle.truffle.dsl.processor.interop.ForeignAccessFactoryGenerator.java", "BodyUseAPI": [], "Fixed commit": "230bee7d113807d96f7880ba77ae54cd21ef96a9", "Url": "https://api.github.com/repos/oracle/graal", "Date": "2017-03-21T20:00:29Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasLanguageCheckNode()) { w.append(\" @TruffleBoundary\").append(\"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6021/buggy-version/truffle.com.oracle.truffle.dsl.processor.interop.src.com.oracle.truffle.dsl.processor.interop.ForeignAccessFactoryGenerator.java", "BodyUseAPI": [], "Fixed commit": "230bee7d113807d96f7880ba77ae54cd21ef96a9", "Url": "https://api.github.com/repos/oracle/graal", "Date": "2017-03-21T20:00:29Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.HONEYCOMB)) { return (bitmap.getByteCount()) / 1024; }else { return ((bitmap.getRowBytes()) * (bitmap.getHeight())) / 1024; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8719/buggy-version/src.com.android.volley.toolbox.BitmapCache.java", "BodyUseAPI": [], "Fixed commit": "5fe9349da0b4cd3cb18e486943ef1eddd480f887", "Url": "https://api.github.com/repos/hiphonezhu/Android-Volley", "Date": "2014-12-23T07:26:34Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bestNode == null) { bestNode = temp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4662/buggy-version/tregression.src.main.tregression.empiricalstudy.RootCauseFinder.java", "BodyUseAPI": [], "Fixed commit": "da1e701635a117f9fd43c901cae3be0a5717680f", "Url": "https://api.github.com/repos/llmhyy/tregression", "Date": "2017-12-24T16:11:40Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((entry.getValue().getHalAddress().getSecure()) != null) && (entry.getValue().getHalAddress().getSecure())) anUrl = \"https://\" + anUrl; else anUrl = \"http://\" + anUrl;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2580/buggy-version/src.main.java.com.bwssystems.HABridge.plugins.hal.HalHome.java", "BodyUseAPI": [], "Fixed commit": "fb9cc648398c660b2d96f28551077620296a50ec", "Url": "https://api.github.com/repos/bwssytems/ha-bridge", "Date": "2017-05-26T20:36:01Z"},
{"Line": "=>562", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (accumulator == null) { accumulator = af; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8396/buggy-version/src.ar.edu.jdynalloy.ast.JDynAlloyVisitor.java", "BodyUseAPI": [], "Fixed commit": "a01b3cccb3e4c0aa556c8a080802edd533a2be64", "Url": "https://api.github.com/repos/zeminlu/jdynalloy", "Date": "2014-11-10T12:33:46Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.getClass()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(clazz.isPrimitive())) && (!(ar.edu.jdynalloy.ast.JDynAlloyVisitor.isAutoboxingClass(clazz)))) { java.lang.reflect.Field[] fields = clazz.getDeclaredFields(); if ((fields.length) > 0) { for (java.lang.reflect.Field f : fields) { f.setAccessible(true); try { java.lang.Object o = f.get(inputToFix2); if (o == null) { ar.uba.dc.rfm.alloy.ast.formulas.AlloyFormula af = new ar.uba.dc.rfm.alloy.ast.formulas.EqualsFormula(new ar.uba.dc.rfm.alloy.ast.expressions.ExprJoin(mapConcreteToExpre.get(inputToFix2), new ar.uba.dc.rfm.alloy.ast.expressions.ExprVariable(new ar.uba.dc.rfm.alloy.AlloyVariable((((f.getDeclaringClass().getCanonicalName().replace(\".\", \"_\")) + \"_\") + (f.getName()))))), new ar.uba.dc.rfm.alloy.ast.expressions.ExprVariable(new ar.uba.dc.rfm.alloy.AlloyVariable(\"null\"))); if (accumulator == null) { accumulator = af; }else { accumulator = new ar.uba.dc.rfm.alloy.ast.formulas.AndFormula(accumulator, af); } }else if (o.getClass().isPrimitive()) { if (o.getClass().equals(int.class)) { ar.uba.dc.rfm.alloy.ast.formulas.AlloyFormula af = new ar.uba.dc.rfm.alloy.ast.formulas.EqualsFormula(new ar.uba.dc.rfm.alloy.ast.expressions.ExprJoin(mapConcreteToExpre.get(inputToFix2), new ar.uba.dc.rfm.alloy.ast.expressions.ExprVariable(new ar.uba.dc.rfm.alloy.AlloyVariable((((f.getDeclaringClass().getCanonicalName().replace(\".\", \"_\")) + \"_\") + (f.getName()))))), new ar.uba.dc.rfm.alloy.ast.expressions.ExprConstant(\"Int\", o.toString())); if (accumulator == null) { accumulator = af; }else { accumulator = new ar.uba.dc.rfm.alloy.ast.formulas.AndFormula(accumulator, af); } } }else { if (mapConcreteToExpre.containsKey(o)) { ar.uba.dc.rfm.alloy.ast.formulas.AlloyFormula af = new ar.uba.dc.rfm.alloy.ast.formulas.EqualsFormula(new ar.uba.dc.rfm.alloy.ast.expressions.ExprJoin(mapConcreteToExpre.get(inputToFix2), new ar.uba.dc.rfm.alloy.ast.expressions.ExprVariable(new ar.uba.dc.rfm.alloy.AlloyVariable((((f.getDeclaringClass().getCanonicalName().replace(\".\", \"_\")) + \"_\") + (f.getName()))))), mapConcreteToExpre.get(o)); if (accumulator == null) { accumulator = af; }else { accumulator = new ar.uba.dc.rfm.alloy.ast.formulas.AndFormula(accumulator, af); } }else { mapConcreteToExpre.put(o, new ar.uba.dc.rfm.alloy.ast.expressions.ExprJoin(mapConcreteToExpre.get(inputToFix2), new ar.uba.dc.rfm.alloy.ast.expressions.ExprVariable(new ar.uba.dc.rfm.alloy.AlloyVariable((((f.getDeclaringClass().getCanonicalName().replace(\".\", \"_\")) + \"_\") + (f.getName())))))); ar.uba.dc.rfm.alloy.ast.formulas.AlloyFormula af = ar.edu.jdynalloy.ast.JDynAlloyVisitor.processInputToFixToFormula(o, mapConcreteToExpre, isJavaArithmetic); if (accumulator == null) { accumulator = af; }else { accumulator = new ar.uba.dc.rfm.alloy.ast.formulas.AndFormula(accumulator, af); } } } } catch (java.lang.IllegalAccessException e) { e.printStackTrace(); } } }else { ar.uba.dc.rfm.alloy.ast.formulas.AlloyFormula af = new ar.uba.dc.rfm.alloy.ast.formulas.NotFormula(new ar.uba.dc.rfm.alloy.ast.formulas.EqualsFormula(mapConcreteToExpre.get(inputToFix2), new ar.uba.dc.rfm.alloy.ast.expressions.ExprVariable(new ar.uba.dc.rfm.alloy.AlloyVariable(\"null\")))); if (accumulator == null) { accumulator = af; } } }else { ar.uba.dc.rfm.alloy.ast.formulas.AlloyFormula af = new ar.uba.dc.rfm.alloy.ast.formulas.EqualsFormula(mapConcreteToExpre.get(inputToFix2), ((ar.uba.dc.rfm.alloy.ast.expressions.AlloyExpression) (ar.edu.jdynalloy.ast.JDynAlloyVisitor.getValueAsString(inputToFix2, isJavaArithmetic)))); if (accumulator == null) { accumulator = af; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8396/buggy-version/src.ar.edu.jdynalloy.ast.JDynAlloyVisitor.java", "BodyUseAPI": ["java.lang.Class<?>.getDeclaredFields()"], "Fixed commit": "a01b3cccb3e4c0aa556c8a080802edd533a2be64", "Url": "https://api.github.com/repos/zeminlu/jdynalloy", "Date": "2014-11-10T12:33:46Z"},
{"Line": "=>496", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.infoglue.deliver.cache.PageCacheHelper.logger.isDebugEnabled()) { if ((entities.size()) > 5) java.lang.System.out.println((\"entities: \" + (entities.size()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3268/buggy-version/src.java.org.infoglue.deliver.cache.PageCacheHelper.java", "BodyUseAPI": [], "Fixed commit": "d75f75cece14c77e7671e43df6d09ed4d010f8c4", "Url": "https://api.github.com/repos/bogeblad/infoglue2", "Date": "2013-09-12T13:53:33Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(scan.hasNextInt())) { throw new seedu.address.logic.parser.exceptions.ParseException(java.lang.String.format(seedu.address.logic.parser.MESSAGE_INVALID_COMMAND_FORMAT, RemoveRemarkCommand.MESSAGE_USAGE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5051/buggy-version/src.main.java.seedu.address.logic.parser.RemoveRemarkCommandParser.java", "BodyUseAPI": [], "Fixed commit": "67dfa33d46660f896e7df836b976089025621849", "Url": "https://api.github.com/repos/NabeelZhr/main", "Date": "2017-10-31T03:43:04Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((photoInDB.getTitle()) != null) { if (!(photoInDB.getTitle().equals(photo.getTitle()))) { photoInDB.setTitle(photo.getTitle()); dbLink.updatePhotoTitle(photoInDB); } }else { if ((photo.getTitle()) != null) { photoInDB.setTitle(photo.getTitle()); dbLink.updatePhotoTitle(photoInDB); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7074/buggy-version/Journee.app.src.main.java.com.journee.activities.JournalActivity.java", "BodyUseAPI": ["com.journee.db.DBLink.updatePhotoTitle(com.journee.model.Photo)", "com.journee.model.Photo.setTitle(photo.getTitle())", "photoInDB.getTitle().equals(photo.getTitle())", "com.journee.model.Photo.setTitle(photo.getTitle())", "com.journee.db.DBLink.updatePhotoTitle(com.journee.model.Photo)", "com.journee.model.Photo.getTitle()"], "Fixed commit": "1e7cf45c2c315f43a06446d3324133ca9fd6aaba", "Url": "https://api.github.com/repos/alon-itzhaki/tau_workshop_repo", "Date": "2016-07-23T18:13:18Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.ooxmlDocumentFileSystem) != null) { ooxmlDocumentFileSystem.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1080/buggy-version/fileformat.src.main.java.org.zuinnote.hadoop.office.format.common.writer.MSExcelWriter.java", "BodyUseAPI": [], "Fixed commit": "dfe3b37f00cdaa4ed8eee47836e3b982ce9ee467", "Url": "https://api.github.com/repos/ZuInnoTe/hadoopoffice", "Date": "2017-02-04T11:56:13Z"},
{"Line": "=>1015", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSearchView) != null) { outState.putBoolean(com.owncloud.android.ui.activity.FileDisplayActivity.KEY_IS_SEARCH_OPEN, (!(mSearchView.isIconified()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7621/buggy-version/src.main.java.com.owncloud.android.ui.activity.FileDisplayActivity.java", "BodyUseAPI": [], "Fixed commit": "0c929b16b39718ee9d6da97662b2672da20a6985", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-23T10:00:13Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((attributeType) == (AttributeType.ENUM)) return value;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2513/buggy-version/hazelcast.src.main.java.com.hazelcast.query.impl.IndexImpl.java", "BodyUseAPI": [], "Fixed commit": "da460dce9851d459447566dfff17a8dce5913d81", "Url": "https://api.github.com/repos/seeburger-ag/hazelcast", "Date": "2013-07-25T20:12:53Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.edu.upc.yb.integrate.InstructorEvaluate.service.InstructorAuthService.getStudentNumber(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (studentNumber.equals(\"\")) { rs.put(\"status\", 4); rs.put(\"errorMsg\", \"\u8be5\u7528\u6237\u975e\u5b66\u751f\u6216\u8bc4\u4ef7\u8868\u4e2d\u65e0\u76f8\u5e94\u540c\u5b66\"); return rs; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5699/buggy-version/src.main.java.cn.edu.upc.yb.integrate.InstructorEvaluate.service.InstructorAuthService.java", "BodyUseAPI": [], "Fixed commit": "b280ac0853d6bb8c4b34480e86e5bd89623388b7", "Url": "https://api.github.com/repos/upcyiban/IntegrateApplication", "Date": "2017-06-12T12:34:46Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (validBits != 0) { scaling = java.lang.Math.pow(2.0, (-validBits)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6554/buggy-version/src.main.java.org.cellprofiler.knimebridge.message.RunReq.java", "BodyUseAPI": [], "Fixed commit": "c9d84f15feb4d935c7a51a97fa543cc646149211", "Url": "https://api.github.com/repos/CellProfiler/knime-bridge", "Date": "2015-01-26T17:27:59Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (msg != null) { message = objectMapper.writeValueAsBytes(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1104/buggy-version/wear.src.main.java.com.github.kubatatami.judonetworking.internals.wear.MessageUtils.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.ObjectMapper.writeValueAsBytes(java.lang.Object)"], "Fixed commit": "9949d2609525ed39b499debbda7ca1891c6ff2e8", "Url": "https://api.github.com/repos/kubatatami/JudoNetworking", "Date": "2015-09-28T21:53:57Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.vertx.java.core.json.JsonObject.getInteger(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (ttl == null) { ttl = gcm_max_seconds_to_leave; }else if (ttl > (gcm_max_seconds_to_leave)) { sendError(message, (((\"Max value of 'time_to_live' exceeded: \" + ttl) + \" > \") + (gcm_max_seconds_to_leave))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/677/buggy-version/src.main.java.net.atarno.vertx.gcm.server.GCMServer.java", "BodyUseAPI": ["net.atarno.vertx.gcm.server.GCMServer.sendError(org.vertx.java.core.eventbus.Message<org.vertx.java.core.json.JsonObject>,java.lang.String)"], "Fixed commit": "04ab2d509452c0499552537a779dbcd1d53058ce", "Url": "https://api.github.com/repos/ashertarno/vertx-gcm", "Date": "2015-06-18T17:36:46Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.utep.trustlab.visko.planning.pipelines.Pipeline.getViewerURI()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (viewerURI == null) viewerURI = \"no viewer\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8800/buggy-version/visko.visko-web.src.edu.utep.trustlab.visko.web.json.PipelineSetResults.java", "BodyUseAPI": [], "Fixed commit": "cfbabbee1527cb1a57510470b40eeac6cff53ffd", "Url": "https://api.github.com/repos/nicholasdelrio/visko", "Date": "2013-07-24T22:30:35Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (headers == null) { defaultHeaders = null; }else { defaultHeaders = okhttp3.Headers.of(headers); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4315/buggy-version/src.main.java.com.ibm.watson.developer_cloud.service.WatsonService.java", "BodyUseAPI": ["okhttp3.Headers.of(java.util.Map<java.lang.String, java.lang.String>)"], "Fixed commit": "43212a8deb4d211650b7a121d36414c163f00589", "Url": "https://api.github.com/repos/doconnor78/java-sdk", "Date": "2016-06-07T15:44:10Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.toString().startsWith(\"\\\\\\\\\")) { return new java.net.URL((\"file:\" + (file.toString().replace(\"\\\\\", \"/\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2529/buggy-version/src.main.java.com.tagtraum.mfsampledsp.MFAudioFileReader.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.io.File.toString()"], "Fixed commit": "a03c6aa0d0284de136dde34b01d1b2cd0f0983b9", "Url": "https://api.github.com/repos/hendriks73/mfsampledsp", "Date": "2014-08-18T16:44:40Z"},
{"Line": "=>596", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((previousQuery) != null) && ((previousQuery.length()) > (query.length()))) { friends = new java.util.ArrayList<com.charlesmadere.android.classygames.models.Person>(friendsCopy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/634/buggy-version/projects.android.classygames.src.com.charlesmadere.android.classygames.FriendsListFragment.java", "BodyUseAPI": [], "Fixed commit": "f74daa45e17a1f707633a64df999862f290e3e7e", "Url": "https://api.github.com/repos/ScootrNova/ClassyGames", "Date": "2013-06-09T04:05:58Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.exists())) file.mkdirs();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1251/buggy-version/Operation-Valkyrie.src.valkyrie.file.FileManager.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "8f831c78404c3e178c77f2860ca1702ffc46b4f3", "Url": "https://api.github.com/repos/MiloTischler/Operation-Valkyrie", "Date": "2012-06-05T15:44:06Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((removedPorts) != null) { for (java.lang.String removed : removedPorts) { java.util.Map<java.net.URI, java.util.List<java.net.URI>> port = ((java.util.Map<java.net.URI, java.util.List<java.net.URI>>) (com.emc.sa.util.CatalogSerializationUtils.serializeFromString(removed))); removedPortsMap.putAll(port); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3647/buggy-version/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.block.ExportPathAdjustmentService.java", "BodyUseAPI": [], "Fixed commit": "b772a52a66157056e51f1c9a9b5e297b9fb5f42a", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-01-20T20:36:03Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((affectedPorts) != null) { for (java.lang.String affected : affectedPorts) { java.util.Map<java.net.URI, java.util.List<java.net.URI>> port = ((java.util.Map<java.net.URI, java.util.List<java.net.URI>>) (com.emc.sa.util.CatalogSerializationUtils.serializeFromString(affected))); affectedPortsMap.putAll(port); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3647/buggy-version/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.block.ExportPathAdjustmentService.java", "BodyUseAPI": [], "Fixed commit": "b772a52a66157056e51f1c9a9b5e297b9fb5f42a", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-01-20T20:36:03Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((processingRequest) != _requestImpl) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1286/buggy-version/jactor2-coreMt.src.main.java.org.agilewiki.jactor2.core.impl.mtReactors.IsolationInbox.java", "BodyUseAPI": [], "Fixed commit": "53a3165408e3cc167c96dfe77134d362f5bd8a86", "Url": "https://api.github.com/repos/laforge49/JActor2", "Date": "2014-08-20T16:51:26Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rapla.entities.configuration.RaplaConfiguration.find(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (pluginClassConfig == null) { pluginClassConfig = config; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/221/buggy-version/src.org.rapla.gui.DefaultPluginOption.java", "BodyUseAPI": [], "Fixed commit": "0d7b9a3b71ba1c315672b0ba34a7eb37cc4e0a85", "Url": "https://api.github.com/repos/rapla/rapla", "Date": "2015-02-01T03:17:19Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mEraseMode) == status) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6909/buggy-version/DrawingApp.app.src.main.java.com.sociotech.javiert.imaginary.DrawingView.java", "BodyUseAPI": [], "Fixed commit": "9769c3e3fef779c0773ba4d151bc19a9014be6fc", "Url": "https://api.github.com/repos/JavierT/SocioDraw", "Date": "2015-03-25T09:26:36Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MotionEvent.findPointerIndex(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pointerIndex == (-1)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6909/buggy-version/DrawingApp.app.src.main.java.com.sociotech.javiert.imaginary.DrawingView.java", "BodyUseAPI": [], "Fixed commit": "9769c3e3fef779c0773ba4d151bc19a9014be6fc", "Url": "https://api.github.com/repos/JavierT/SocioDraw", "Date": "2015-03-25T09:26:36Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getAction()) == (android.view.MotionEvent.ACTION_DOWN)) { if ((videoControlsView) != null) { if ((videoControlsView.getVisibility()) == (android.view.View.VISIBLE)) hideControls(); else showControls(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8439/buggy-version/fullscreenvideoview.src.main.java.com.github.rtoshiro.view.video.FullscreenVideoLayout.java", "BodyUseAPI": [], "Fixed commit": "7146a525fa77f4c5b38b2f10a52cae86a21972c7", "Url": "https://api.github.com/repos/rtoshiro/FullscreenVideoView", "Date": "2015-06-25T21:29:36Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pendingHandler.session) != null) { pendingHandler.session.sendResponse(pendingRes, pendingHandler.originalRequestId); }else { sendResponse(pendingRes, pendingHandler.originalRequestId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/9188/buggy-version/Tetrapod-Core.src.io.tetrapod.core.Session.java", "BodyUseAPI": ["pendingHandler.session.sendResponse(io.tetrapod.core.Response,pendingHandler.originalRequestId)", "io.tetrapod.core.Session.4.sendResponse(io.tetrapod.core.Response,pendingHandler.originalRequestId)"], "Fixed commit": "1c0c4838f96b5399ee76d584c7f0fbdcd8ccbbf5", "Url": "https://api.github.com/repos/tetrapods/core", "Date": "2015-06-01T19:59:48Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(s.equals(\"String\"))) arguments.add(s);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2974/buggy-version/src.org.translator.java.ComponentCall.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "792edb74804148ff2ff3ae1762f25a4c5f0205ab", "Url": "https://api.github.com/repos/appinventortojava/parser", "Date": "2013-05-06T00:50:33Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lecture.getCourse()) != null) dto.setCourse(com.ncjavaedu.ediary.server.services.ServiceUtils.courseToDto(lecture.getCourse()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7921/buggy-version/frontend.src.main.java.com.ncjavaedu.ediary.server.services.ServiceUtils.java", "BodyUseAPI": ["com.ncjavaedu.ediary.client.model.LectureDTO.setCourse(com.ncjavaedu.ediary.client.model.CourseDTO)", "com.ncjavaedu.ediary.model.Lecture.getCourse()", "com.ncjavaedu.ediary.server.services.ServiceUtils.courseToDto(lecture.getCourse())"], "Fixed commit": "377b63e62b8ce9d51f5b220438629dd6206c55be", "Url": "https://api.github.com/repos/nc-javaedu-ediary/javaedu-ediary", "Date": "2017-05-09T23:55:27Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (page != null) { for (com.gargoylesoftware.htmlunit.html.HtmlForm form : page.getForms()) { parseForm(form); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5359/buggy-version/src.Fuzzer.java", "BodyUseAPI": ["com.gargoylesoftware.htmlunit.html.HtmlPage.getForms()"], "Fixed commit": "8834a0e6e41985059d5240d53da0b4bfc18e1f30", "Url": "https://api.github.com/repos/GavinNishizawa/swen-331-fuzzer", "Date": "2016-03-09T22:07:08Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(url.startsWith(\"http\"))) { url = \"http://\" + url; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5359/buggy-version/src.Start.java", "BodyUseAPI": [], "Fixed commit": "8834a0e6e41985059d5240d53da0b4bfc18e1f30", "Url": "https://api.github.com/repos/GavinNishizawa/swen-331-fuzzer", "Date": "2016-03-09T22:07:08Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((classMapping.getDeobfName()) != null) { classDeobfName = classMapping.getDeobfName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8846/buggy-version/src.main.java.cuchaz.enigma.mapping.MappingsWriter.java", "BodyUseAPI": ["cuchaz.enigma.mapping.ClassMapping.getDeobfName()"], "Fixed commit": "025c78f1b6f7879d5f843221376a007afa2a279e", "Url": "https://api.github.com/repos/jamierocks/enigma", "Date": "2015-11-12T18:23:09Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(methodMapping.getObfName().equals(\"<init>\"))) { out.format(\"MD: %s/%s %s %s/%s %s\\n\", classMapping.getObfFullName(), methodMapping.getObfName(), methodMapping.getObfSignature(), classDeobfName, methodMapping.getDeobfName(), methodMapping.getDeobfSiganture(mappings)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8846/buggy-version/src.main.java.cuchaz.enigma.mapping.MappingsWriter.java", "BodyUseAPI": ["cuchaz.enigma.mapping.MethodMapping.getObfSignature()", "cuchaz.enigma.mapping.MethodMapping.getObfName()", "java.io.PrintWriter.format(java.lang.String,classMapping.getObfFullName(),methodMapping.getObfName(),methodMapping.getObfSignature(),java.lang.String,methodMapping.getDeobfName(),methodMapping.getDeobfSiganture(mappings))", "cuchaz.enigma.mapping.MethodMapping.getDeobfName()", "cuchaz.enigma.mapping.MethodMapping.getDeobfSiganture(cuchaz.enigma.mapping.Mappings)"], "Fixed commit": "025c78f1b6f7879d5f843221376a007afa2a279e", "Url": "https://api.github.com/repos/jamierocks/enigma", "Date": "2015-11-12T18:23:09Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((classMapping.getDeobfName()) != null) { classDeobfName = classMapping.getDeobfName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8846/buggy-version/src.main.java.cuchaz.enigma.mapping.MappingsWriter.java", "BodyUseAPI": ["cuchaz.enigma.mapping.ClassMapping.getDeobfName()"], "Fixed commit": "025c78f1b6f7879d5f843221376a007afa2a279e", "Url": "https://api.github.com/repos/jamierocks/enigma", "Date": "2015-11-12T18:23:09Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(message.isCanceled())) retransmitt(); else ch.ethz.inf.vs.californium.network.layer.ReliabilityLayer.LOGGER.fine(\"The message has canceled retransmission (probably in favor of another one, e.g., notificaiton)\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/9087/buggy-version/californium.src.main.java.ch.ethz.inf.vs.californium.network.layer.ReliabilityLayer.java", "BodyUseAPI": [], "Fixed commit": "8042649acb0dfb439632fbe2a20b833adc941654", "Url": "https://api.github.com/repos/mkovatsc/Californium", "Date": "2013-11-22T23:06:29Z"},
{"Line": "=>968", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opencms.ade.contenteditor.CmsContentService.checkAutoCorrection(org.opencms.file.CmsObject,org.opencms.xml.content.CmsXmlContent)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (performedAutoCorrection) { content.initDocument(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1418/buggy-version/src.org.opencms.ade.contenteditor.CmsContentService.java", "BodyUseAPI": [], "Fixed commit": "ab729ea0fd1550a63b3e180d175a6841e3ad7be4", "Url": "https://api.github.com/repos/alkacon/opencms-core", "Date": "2012-10-04T15:46:29Z"},
{"Line": "=>901", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tracing.Path.getNodeIndex(tracing.PointInImage)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (eNode != (-1)) editingPath.setEditableNode(eNode);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4309/buggy-version/src.main.java.tracing.SimpleNeuriteTracer.java", "BodyUseAPI": ["tracing.Path.setEditableNode(int)"], "Fixed commit": "26d31f337829b0d51767b2039ea56d85337330ba", "Url": "https://api.github.com/repos/tferr/Simple_Neurite_Tracer", "Date": "2017-12-28T04:25:37Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((right) == 0) tmpBytesRight = java.util.Arrays.copyOfRange(tmpBytes, 0, jsse.SWP.BLOCK_BYTES); else tmpBytesRight = java.util.Arrays.copyOfRange(tmpBytes, 0, right);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6216/buggy-version/src.main.java.jsse.SWP.java", "BodyUseAPI": [], "Fixed commit": "6cfb3d50fd87836322fdbeac282b1f651ea4719f", "Url": "https://api.github.com/repos/sashank/jsse", "Date": "2014-10-04T09:01:37Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((list.size()) > max) && (!(list.contains(guess)))) { max = list.size(); maxList = list; }else if ((list.size()) > max) { max = list.size(); maxList = list; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4631/buggy-version/HangmanDeviousProject.src.Hangman.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.size()"], "Fixed commit": "c496d5f4f22a07961edf118d6937dbec989b9c48", "Url": "https://api.github.com/repos/joseph-brennan/java", "Date": "2016-12-05T22:34:08Z"},
{"Line": "=>1235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cdt.getPassClear()) == 1) { flagCWErrors(configId, batchId, cdt, foroutboundProcessing, transactionId); updateStatusForErrorTrans(batchId, 14, foroutboundProcessing, transactionId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1177/buggy-version/src.main.java.com.ut.dph.service.impl.transactionInManagerImpl.java", "BodyUseAPI": ["com.ut.dph.service.impl.transactionInManagerImpl.flagCWErrors(java.lang.Integer,java.lang.Integer,com.ut.dph.model.configurationDataTranslations,boolean,java.lang.Integer)"], "Fixed commit": "29fdc8ab855bc8a72e17134dd9d3207796cf14c9", "Url": "https://api.github.com/repos/thenhkid/universalTranslator", "Date": "2014-05-28T20:56:37Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["CuHashMap<K, V>.position(K)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((this.arr[pos]) != null) { java.util.List<Entry<K, V>> temp = this.arr[pos]; for (Entry<K, V> x : temp) { if (x.getKey().equals(key)) { return x.getValue(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2197/buggy-version/src.CuHashMap.java", "BodyUseAPI": [], "Fixed commit": "073597f3c648d394ad3f917d7b598fcb37f5bb2c", "Url": "https://api.github.com/repos/AdenKenny/HashMap", "Date": "2016-06-27T05:53:30Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (versionId.equals(ApplicationId.DEFAULT_VERSION)) { java.util.List<co.cask.cdap.internal.app.store.ApplicationMeta> appMetas = list(new co.cask.cdap.data2.dataset2.lib.table.MDSKey.Builder().add(co.cask.cdap.internal.app.store.AppMetadataStore.TYPE_APP_META, namespaceId, appId).build(), co.cask.cdap.internal.app.store.ApplicationMeta.class); for (co.cask.cdap.internal.app.store.ApplicationMeta meta : appMetas) { if (meta.getSpec().getAppVersion().equals(ApplicationId.DEFAULT_VERSION)) { return meta; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5139/buggy-version/cdap-app-fabric.src.main.java.co.cask.cdap.internal.app.store.AppMetadataStore.java", "BodyUseAPI": [], "Fixed commit": "9b7ce4baf4ed93b4df9a2c246eb7590bac4f7b89", "Url": "https://api.github.com/repos/caskdata/cdap", "Date": "2017-04-05T02:25:31Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState != null) { mSubtitleVisible = savedInstanceState.getBoolean(com.bignerdranch.android.criminalintent.CrimeListFragment.SAVED_SUBTITLE_VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6480/buggy-version/CriminalIntent.app.src.main.java.com.bignerdranch.android.criminalintent.CrimeListFragment.java", "BodyUseAPI": ["android.os.Bundle.getBoolean(java.lang.String)"], "Fixed commit": "a7f1ba95cc0a84006d2b392eca491e48a28d3272", "Url": "https://api.github.com/repos/Antony138/AndroidStudy", "Date": "2017-08-22T03:42:54Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.maxAvatar()) != null) { maxAvatarUrl = storageService.issueDownloadUrl(user.maxAvatar().key()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8569/buggy-version/liurushi-identityaccess.src.main.java.com.beautysight.liurushi.identityaccess.app.UserApp.java", "BodyUseAPI": ["com.beautysight.liurushi.fundamental.domain.storage.StorageService.issueDownloadUrl(user.maxAvatar().key())", "user.maxAvatar().key()", "com.beautysight.liurushi.identityaccess.domain.model.User.maxAvatar()"], "Fixed commit": "716f5b5af95f9fbd032c57bb6b50db158453cd7c", "Url": "https://api.github.com/repos/18luohan/beautysight-liurushi", "Date": "2015-07-23T13:26:53Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.HONEYCOMB)) { mButtonShape.setButtonsColor(getResources().getColor(mColor)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3277/buggy-version/TouchAndDraw.app.src.main.java.net.henriquedantas.android.touchanddraw.EditorFragment.java", "BodyUseAPI": [], "Fixed commit": "4deaac6df4cad7052d06fbb2fffaadd56b8a1a31", "Url": "https://api.github.com/repos/hdantas/touch-draw", "Date": "2014-12-06T12:21:45Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (false) { return java.lang.Double.MAX_VALUE; }else { return 15; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8690/buggy-version/src.main.java.net.clonecomputers.lab.queueing.generate.Queueing.java", "BodyUseAPI": [], "Fixed commit": "03d1d1e82a332ffee76738fca1a030f89109f4c7", "Url": "https://api.github.com/repos/Math-Modeling/Queueing", "Date": "2013-11-13T05:29:46Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFilename) != null) mFilename.setText(filename);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2687/buggy-version/src.org.csgeeks.TinyG.TinyGActivity.java", "BodyUseAPI": [], "Fixed commit": "a9fa239ad3d5519c4b72c7059d2bc3ad69f442d1", "Url": "https://api.github.com/repos/mattstock/android-tinyg", "Date": "2012-06-01T02:18:08Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!knowCursor) { this.cursor = calculateCursor(x); }else { cursor = x; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2480/buggy-version/WidgetSet.src.widget.Text.java", "BodyUseAPI": [], "Fixed commit": "1034e1a1075995d3303ebbeb756af3354753cc24", "Url": "https://api.github.com/repos/justam58/cs456", "Date": "2014-10-27T04:51:58Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((itemFriendRequest) != null) { itemFriendRequest.setVisible(service.areNewFriendRequests()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2295/buggy-version/Client.InstaMeet.src.de.tubs.androidlab.instameet.ui.main.ContactsFragment.java", "BodyUseAPI": [], "Fixed commit": "7e0e828ae59b97f636875e522b177b3cc26c185b", "Url": "https://api.github.com/repos/Vaniax/AndroidLab", "Date": "2015-02-04T21:07:37Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value > 1.0F) value = 1.0F; else if (value < (-1.0F)) value = -1.0F;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5800/buggy-version/main.src.georegression.geometry.UtilVector3D_F32.java", "BodyUseAPI": [], "Fixed commit": "19d331acbb8dc0956af002732d32521f70d118ae", "Url": "https://api.github.com/repos/lessthanoptimal/GeoRegression", "Date": "2014-08-19T00:51:09Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value > 1.0) value = 1.0; else if (value < (-1.0)) value = -1.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5800/buggy-version/main.src.georegression.geometry.UtilVector3D_F64.java", "BodyUseAPI": [], "Fixed commit": "19d331acbb8dc0956af002732d32521f70d118ae", "Url": "https://api.github.com/repos/lessthanoptimal/GeoRegression", "Date": "2014-08-19T00:51:09Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shouldWrite) && ((mode) == (org.citygml4j.util.xml.SAXFragmentWriter.WriteMode.TAIL))) writer.endDocument();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4208/buggy-version/src.org.citygml4j.util.xml.SAXFragmentWriter.java", "BodyUseAPI": [], "Fixed commit": "d059a564009bbee5620ec9aed251e4b0e1208088", "Url": "https://api.github.com/repos/citygml4j/citygml4j", "Date": "2017-03-30T19:54:48Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((defaultValue) instanceof org.pikater.core.ontology.subtrees.newOption.values.QuestionMarkRange) || ((defaultValue) instanceof org.pikater.core.ontology.subtrees.newOption.values.QuestionMarkSet)) && (((rangeRestriction) != null) || ((setRestriction) != null))) { return false; }else if (((rangeRestriction) != null) && (!(rangeRestriction.isValid()))) { return false; }else if (((setRestriction) != null) && (!(setRestriction.isValid()))) { return false; }else { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4593/buggy-version/src.org.pikater.core.ontology.subtrees.newOption.base.ValueType.java", "BodyUseAPI": [], "Fixed commit": "a0bc2fbbbc8ca1593da7277032b8633c2abde3b7", "Url": "https://api.github.com/repos/krajj7/pikater", "Date": "2014-07-17T23:09:30Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getText().toString().split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((lines.length) > 0) { lastLine = lines[java.lang.Math.min(lastLineNum, ((lines.length) - 1))]; for (int i = 0; i < (lastLine.length()); i++) { if ((lastLine.charAt(i)) == ' ') lastIndent += ' '; else break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/199/buggy-version/src.com.calsignlabs.apde.CodeEditText.java", "BodyUseAPI": ["java.lang.Math.min(int,int)"], "Fixed commit": "9a43879de294958355d2709126fa9e80b0663fb9", "Url": "https://api.github.com/repos/Calsign/APDE", "Date": "2013-12-15T15:56:07Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sortingName.equals(\"\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5808/buggy-version/Screen.java", "BodyUseAPI": [], "Fixed commit": "2721d9a3e95d1b61715fec06b20b2d15d64ba0ea", "Url": "https://api.github.com/repos/Jythonscript/Visual-Sort", "Date": "2017-11-27T02:41:06Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (actionType == (com.raylenmoore.im.presentation.model.ActionType.Add)) { this.noteId = newUUID(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6838/buggy-version/android.app.src.main.java.com.raylenmoore.im.presentation.presenter.NoteDetailsPresenter.java", "BodyUseAPI": [], "Fixed commit": "e6e717a1bb10641575aa30f567e19850dc1c8c00", "Url": "https://api.github.com/repos/raylenmoore/information-management", "Date": "2016-11-23T12:43:47Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentKey.equals(newKey)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3178/buggy-version/src.duplicatesearcher.analysis.frequency.TermFrequencyCounter.java", "BodyUseAPI": [], "Fixed commit": "470024d4a1d1e89405530fd6babd55c2655520c6", "Url": "https://api.github.com/repos/mantono/DuplicateSearcher", "Date": "2016-06-23T11:57:24Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (frequency.containsKey(newKey)) addition = frequency.get(newKey);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3178/buggy-version/src.duplicatesearcher.analysis.frequency.TermFrequencyCounter.java", "BodyUseAPI": ["java.util.Map<duplicatesearcher.Token, java.lang.Integer>.get(duplicatesearcher.Token)"], "Fixed commit": "470024d4a1d1e89405530fd6babd55c2655520c6", "Url": "https://api.github.com/repos/mantono/DuplicateSearcher", "Date": "2016-06-23T11:57:24Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dueDate) != null) { config.set(\"DueDate.Day\", dueDate.getDay()); config.set(\"DueDate.Month\", dueDate.getMonth()); config.set(\"DueDate.Year\", dueDate.getYear()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2024/buggy-version/src.com.m0pt0pmatt.LandPurchasing.LeaseLand.java", "BodyUseAPI": [], "Fixed commit": "20decb9e4d71433368ad86eed24cbb3072ef4954", "Url": "https://api.github.com/repos/Dove-Bren/LandPurchasing", "Date": "2015-05-29T23:40:28Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((info.groupOwnerAddress) != null) android.util.Log.d(com.seniordesign.wolfpack.quizinator.WifiDirect.ConnectionService.TAG, (\"onConnectionInfoAvailable: \" + (info.groupOwnerAddress.getHostAddress())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2469/buggy-version/app.src.main.java.com.seniordesign.wolfpack.quizinator.WifiDirect.ConnectionService.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,(\"onConnectionInfoAvailable: \" + (info.groupOwnerAddress.getHostAddress())))", "info.groupOwnerAddress.getHostAddress()"], "Fixed commit": "afdd27c7fe996b5b9478e32982047f50ff466c53", "Url": "https://api.github.com/repos/TeamWolfpack/Quizinator", "Date": "2017-01-10T21:32:15Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.geekygoblin.nedetlesmaki.game.manager.EntityIndexManager.getPosition(com.artemis.Entity)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (actualIsColorPlate(oldP, e)) { this.index.getSquare(oldP.getX(), oldP.getY()).getWith(org.geekygoblin.nedetlesmaki.game.components.gamesystems.Plate.class).get(0).getComponent(org.geekygoblin.nedetlesmaki.game.components.gamesystems.Plate.class).setMaki(false); this.index.getSquare(newP.getX(), newP.getY()).getWith(org.geekygoblin.nedetlesmaki.game.components.gamesystems.Plate.class).get(0).getComponent(org.geekygoblin.nedetlesmaki.game.components.gamesystems.Plate.class).setMaki(true); m.addAll(makiPlateMove(oldP, newP, e, true, aT, true)); }else { m.addAll(makiPlateMove(oldP, newP, e, true, aT, false)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/9050/buggy-version/game.src.main.java.org.geekygoblin.nedetlesmaki.game.systems.GameSystem.java", "BodyUseAPI": ["org.geekygoblin.nedetlesmaki.game.components.gamesystems.Position.getY()", "org.geekygoblin.nedetlesmaki.game.systems.GameSystem.makiPlateMove(org.geekygoblin.nedetlesmaki.game.components.gamesystems.Position,org.geekygoblin.nedetlesmaki.game.components.gamesystems.Position,com.artemis.Entity,boolean,float,boolean)", "org.geekygoblin.nedetlesmaki.game.systems.GameSystem.makiPlateMove(org.geekygoblin.nedetlesmaki.game.components.gamesystems.Position,org.geekygoblin.nedetlesmaki.game.components.gamesystems.Position,com.artemis.Entity,boolean,float,boolean)", "this.index.getSquare(oldP.getX(), oldP.getY()).getWith(java.lang.Class)", "this.index.getSquare(oldP.getX(), oldP.getY()).getWith(org.geekygoblin.nedetlesmaki.game.components.gamesystems.Plate.class).get(0).getComponent(java.lang.Class)", "java.util.ArrayList<org.geekygoblin.nedetlesmaki.game.utils.Mouvement>.addAll(java.util.ArrayList<org.geekygoblin.nedetlesmaki.game.utils.Mouvement>)", "org.geekygoblin.nedetlesmaki.game.manager.EntityIndexManager.getSquare(oldP.getX(),oldP.getY())", "this.index.getSquare(oldP.getX(), oldP.getY()).getWith(org.geekygoblin.nedetlesmaki.game.components.gamesystems.Plate.class).get(0).getComponent(org.geekygoblin.nedetlesmaki.game.components.gamesystems.Plate.class).setMaki(boolean)", "org.geekygoblin.nedetlesmaki.game.components.gamesystems.Position.getX()", "java.util.ArrayList<org.geekygoblin.nedetlesmaki.game.utils.Mouvement>.addAll(java.util.ArrayList<org.geekygoblin.nedetlesmaki.game.utils.Mouvement>)", "this.index.getSquare(oldP.getX(), oldP.getY()).getWith(org.geekygoblin.nedetlesmaki.game.components.gamesystems.Plate.class).get(int)"], "Fixed commit": "a0cabd7ed12e4941b4853788ccb549db3c0735db", "Url": "https://api.github.com/repos/natir/ned-et-les-maki", "Date": "2014-02-19T16:27:10Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityDeathEvent.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(player.hasPermission(\"playerheads.canloosehead\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7263/buggy-version/src.org.shininet.bukkit.PlayerHeads.PlayerHeadsListener.java", "BodyUseAPI": [], "Fixed commit": "39ecdbb10cdf9e95ff4cfbd120a30f4c3eed07de", "Url": "https://api.github.com/repos/meiskam/PlayerHeads", "Date": "2012-11-05T08:02:15Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Random.nextDouble()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dropchance >= (plugin.configFile.getDouble(\"droprate\", 0.05))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7263/buggy-version/src.org.shininet.bukkit.PlayerHeads.PlayerHeadsListener.java", "BodyUseAPI": [], "Fixed commit": "39ecdbb10cdf9e95ff4cfbd120a30f4c3eed07de", "Url": "https://api.github.com/repos/meiskam/PlayerHeads", "Date": "2012-11-05T08:02:15Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Random.nextDouble()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dropchance >= droprate) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7263/buggy-version/src.org.shininet.bukkit.PlayerHeads.PlayerHeadsListener.java", "BodyUseAPI": [], "Fixed commit": "39ecdbb10cdf9e95ff4cfbd120a30f4c3eed07de", "Url": "https://api.github.com/repos/meiskam/PlayerHeads", "Date": "2012-11-05T08:02:15Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((servChannel) != null) { servChannel.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/216/buggy-version/GyroWiFiJoyStick.app.src.main.java.com.example.koufula.gyrowifiserver.MultiplexerServer.java", "BodyUseAPI": [], "Fixed commit": "62a3fc4040f4cb77ac55ee39b0934593ee4dbd61", "Url": "https://api.github.com/repos/zll5267/gyro", "Date": "2016-08-25T14:39:52Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.first()) { return createYdiot(result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7105/buggy-version/ydio.src.ydio.dao.SQL.java", "BodyUseAPI": ["ydio.dao.SQL.createYdiot(java.sql.ResultSet)"], "Fixed commit": "396064c9d023df65dff4b6eb2c3c5f8d83a30a00", "Url": "https://api.github.com/repos/mathck/swe2013_Abgabe2", "Date": "2014-01-05T18:08:03Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (howToGetMobileScreen != null) howToGetMobileScreen.defineHowToGetPageStrategy(howToGetPage);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6218/buggy-version/arachnidium-app-model.src.main.java.com.github.arachnidium.model.common.DecompositionUtil.java", "BodyUseAPI": ["com.github.arachnidium.core.HowToGetMobileScreen.defineHowToGetPageStrategy(com.github.arachnidium.core.HowToGetPage)"], "Fixed commit": "3166501ac9e23a801274848bc8955f3204075454", "Url": "https://api.github.com/repos/arachnidium/arachnidium-java", "Date": "2014-12-04T19:52:35Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selected.getPhoto().getPath()) != null) img.setImageURI(android.net.Uri.parse(selected.getPhoto().getPath())); else img.setImageResource(R.drawable.ic_launcher);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/730/buggy-version/src.com.github.groupENIGMA.journalEgocentrique.ListActivity.java", "BodyUseAPI": ["android.widget.ImageView.setImageURI(android.net.Uri.parse(selected.getPhoto().getPath()))", "android.net.Uri.parse(selected.getPhoto().getPath())", "com.github.groupENIGMA.journalEgocentrique.model.Entry.getPhoto()", "selected.getPhoto().getPath()"], "Fixed commit": "28685d2be7891e8d20cd7e2b59d08cc172a35b3c", "Url": "https://api.github.com/repos/groupENIGMA/journalEgocentrique", "Date": "2013-06-20T16:05:07Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(pipeItems.containsKey(item))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2044/buggy-version/src.main.java.de.robotricker.transportpipes.pipes.types.Pipe.java", "BodyUseAPI": [], "Fixed commit": "a30049edb1ada49d26b4e6052dfb9af7cbefa86d", "Url": "https://api.github.com/repos/RoboTricker/Transport-Pipes", "Date": "2017-09-07T16:04:28Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((firstLineIndent == null) && (!(org.apache.commons.lang.StringUtils.isEmpty(currentLineString)))) { int firstNonWhitespaceIndex = org.apache.commons.lang.StringUtils.indexOfAnyBut(currentLineString, \" \\t\"); if (firstNonWhitespaceIndex != (-1)) firstLineIndent = currentLineString.substring(0, firstNonWhitespaceIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/229/buggy-version/reporting.impl.src.main.java.org.jboss.windup.reporting.xml.HintHandler.java", "BodyUseAPI": ["org.apache.commons.lang.StringUtils.indexOfAnyBut(java.lang.String,java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "58b39d8ad3bffa859f19cb5533cda996ab66912a", "Url": "https://api.github.com/repos/mbriskar/windup", "Date": "2015-08-04T20:22:24Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (firstLineIndent != null) currentLineString = org.apache.commons.lang.StringUtils.removeStart(currentLineString, firstLineIndent);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/229/buggy-version/reporting.impl.src.main.java.org.jboss.windup.reporting.xml.HintHandler.java", "BodyUseAPI": ["org.apache.commons.lang.StringUtils.removeStart(java.lang.String,java.lang.String)"], "Fixed commit": "58b39d8ad3bffa859f19cb5533cda996ab66912a", "Url": "https://api.github.com/repos/mbriskar/windup", "Date": "2015-08-04T20:22:24Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (buf == null) this.buf = buf = new byte[256];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4996/buggy-version/src.java.org.apache.cassandra.io.util.DataOutputStreamPlus.java", "BodyUseAPI": [], "Fixed commit": "2eb5337201bb19d8c31325d36b87d4238e14d754", "Url": "https://api.github.com/repos/belliottsmith/cassandra", "Date": "2014-03-05T16:39:35Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((params.length) > 1) { baudRate = ((java.lang.Integer) (params[1])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2674/buggy-version/Ardulink.src.org.zu.ardulink.connection.serial.SerialConnection.java", "BodyUseAPI": [], "Fixed commit": "81522f9261166efe170d881b51668b5a4e571beb", "Url": "https://api.github.com/repos/Ardulink/Ardulink-2", "Date": "2014-01-11T13:57:34Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((logVersion) > 0) { byte sync = buffer.get(); if (sync != (me.drton.jmavlib.log.ulog.ULogReader.SYNC_BYTE)) { continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6135/buggy-version/src.me.drton.jmavlib.log.ulog.ULogReader.java", "BodyUseAPI": [], "Fixed commit": "233bbde9a577e1fb243836bd8bcf86ea8b09293f", "Url": "https://api.github.com/repos/DrTon/jMAVlib", "Date": "2016-06-18T13:49:43Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((logVersion) > 0) { byte sync = buffer.get(); if (sync != (me.drton.jmavlib.log.ulog.ULogReader.SYNC_BYTE)) { errors.add(new me.drton.jmavlib.log.FormatErrorException(pos, java.lang.String.format(\"Wrong sync byte: 0x%02X (expected 0x%02X)\", (sync & 255), ((me.drton.jmavlib.log.ulog.ULogReader.SYNC_BYTE) & 255)))); continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6135/buggy-version/src.me.drton.jmavlib.log.ulog.ULogReader.java", "BodyUseAPI": [], "Fixed commit": "233bbde9a577e1fb243836bd8bcf86ea8b09293f", "Url": "https://api.github.com/repos/DrTon/jMAVlib", "Date": "2016-06-18T13:49:43Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof org.rapla.entities.domain.Allocatable) { return ((org.rapla.entities.domain.Allocatable) (value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5897/buggy-version/src.org.rapla.entities.dynamictype.internal.AttributeImpl.java", "BodyUseAPI": [], "Fixed commit": "f779bdb32de82bc94f576b0dfe2a48b73e375bfa", "Url": "https://api.github.com/repos/rapla/rapla", "Date": "2014-05-14T15:57:01Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.runa.wfe.lang.Transition.getFrom()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (testedNodes.contains(node)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3249/buggy-version/wfe-core.src.main.java.ru.runa.wfe.lang.bpmn2.ParallelGateway.java", "BodyUseAPI": [], "Fixed commit": "683a5a0013753484f7690c8ba2671c199514db38", "Url": "https://api.github.com/repos/vpanarin/runawfe-server", "Date": "2016-08-01T07:42:52Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((train.getDirection()) == true) { if (((currentSpeed) + (acceleration * (timeChanged / 1000.0))) < 0) { currentSpeed = 0; }else { currentSpeed += acceleration * (timeChanged / 1000.0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3487/buggy-version/src.view.Drawable.DrawableTrain.java", "BodyUseAPI": [], "Fixed commit": "68d2fe3ddca5395b6dc93b5f9d4f4d5700d3d78a", "Url": "https://api.github.com/repos/vanhunick/Train-Simulator", "Date": "2016-06-13T00:26:24Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.ByteBuffer.getShort()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type == 0) { targetJoint = src.MultiThreds.getPhysicsWorld().addTarget(g_midX, g_midY, 0.8F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1745/buggy-version/MultiThreadServer.src.ClientThread.java", "BodyUseAPI": [], "Fixed commit": "cc54bbd6890bcebb83b0fa8cd7f03094c5d534af", "Url": "https://api.github.com/repos/Cigg/Game-on-Mobile-Cluster", "Date": "2014-05-09T12:44:30Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getX()) > (getGame().getPlayerSpawnX())) setDx((-4));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1843/buggy-version/src.Goomba.java", "BodyUseAPI": [], "Fixed commit": "4f7eb9af85a1383ace8316c8c3a33077e0a79184", "Url": "https://api.github.com/repos/thompeth000/orangeSquareMaker", "Date": "2017-05-26T14:40:00Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getX()) > (getGame().getPlayerSpawnX())) setDx((-4));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1843/buggy-version/src.Koopa.java", "BodyUseAPI": [], "Fixed commit": "4f7eb9af85a1383ace8316c8c3a33077e0a79184", "Url": "https://api.github.com/repos/thompeth000/orangeSquareMaker", "Date": "2017-05-26T14:40:00Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getStyles()) == null) || ((getStyles().size()) == 0)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1562/buggy-version/servlet-printout.src.main.java.fi.nls.oskari.printout.input.layers.LayerDefinition.java", "BodyUseAPI": [], "Fixed commit": "8e8cb46537b77d8674724f2f6f11ba738ed9948a", "Url": "https://api.github.com/repos/nls-oskari/oskari-server", "Date": "2014-01-22T07:54:47Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, fi.nls.oskari.printout.input.layers.LayerDefinition.Style>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (mappedStyle == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1562/buggy-version/servlet-printout.src.main.java.fi.nls.oskari.printout.input.layers.LayerDefinition.java", "BodyUseAPI": [], "Fixed commit": "8e8cb46537b77d8674724f2f6f11ba738ed9948a", "Url": "https://api.github.com/repos/nls-oskari/oskari-server", "Date": "2014-01-22T07:54:47Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"BEQ\".equals(getInstruction())) registers.add(getARegisterName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6797/buggy-version/app.src.main.java.dlsu.advcarc.opcode.Opcode.java", "BodyUseAPI": [], "Fixed commit": "f5f199c20eea2f3d7d58cce1c1320562c202baec", "Url": "https://api.github.com/repos/darrensapalo/mini-mips", "Date": "2015-11-30T07:41:44Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((v.getId()) == (R.id.buttonStartGame)) { startActivity(new android.content.Intent(this, a8.battleship.View.SetShipView.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7626/buggy-version/app.src.main.java.a8.battleship.View.StartView.java", "BodyUseAPI": [], "Fixed commit": "f675c5b0b85803a1d2693fac14cd3c3902df99c8", "Url": "https://api.github.com/repos/simejo/Battleship", "Date": "2015-03-17T14:14:24Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sw.getOFFactory().getVersion()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ver.compareTo(OFVersion.OF_10)) == 0) { msgsBuilder.add(sw.getOFFactory().buildFlowDelete().setCookie(masked_cookie.getValue()).build()); }else { msgsBuilder.add(sw.getOFFactory().buildFlowDelete().setCookie(masked_cookie.getValue()).setCookieMask(masked_cookie.getMask()).build()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8280/buggy-version/src.main.java.net.floodlightcontroller.forwarding.Forwarding.java", "BodyUseAPI": [], "Fixed commit": "c330b33c1039c1c32a28d238acd845851c9f09a7", "Url": "https://api.github.com/repos/QingWang0909/floodlight", "Date": "2017-12-25T04:14:19Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((message.getClass()) == (async.chainreplication.communication.messages.AckMessage.class)) { serverMessageHandler.handleAckMessage(((async.chainreplication.communication.messages.AckMessage) (message))); }else if ((message.getClass()) == (async.chainreplication.communication.messages.MasterServerChangeMessage.class)) { serverMessageHandler.handleMasterMessage(((async.chainreplication.communication.messages.MasterServerChangeMessage) (message))); }else if ((message.getClass()) == (async.chainreplication.communication.messages.WaitServerMessage.class)) { serverMessageHandler.handleWaitServerMessage(((async.chainreplication.communication.messages.WaitServerMessage) (message))); }else if ((message.getClass()) == (async.chainreplication.communication.messages.SuccessorRequestMessage.class)) { serverMessageHandler.handleSuccessorRequestMessage(((async.chainreplication.communication.messages.SuccessorRequestMessage) (message))); }else if ((message.getClass()) == (async.chainreplication.communication.messages.MasterChainJoinReplyMessage.class)) { serverMessageHandler.handleChainJoinReplyMessage(((async.chainreplication.communication.messages.MasterChainJoinReplyMessage) (message))); }else if ((message.getClass()) == (async.chainreplication.communication.messages.ChainJoinMessage.class)) { serverMessageHandler.handleChainJoinMessage(((async.chainreplication.communication.messages.ChainJoinMessage) (message))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2505/buggy-version/Async-Server.src.main.java.async.chainreplication.server.ServerChainReplicationFacade.java", "BodyUseAPI": ["async.chainreplication.communication.messages.ChainReplicationMessage.getClass()", "async.chainreplication.communication.messages.ChainReplicationMessage.getClass()", "async.chainreplication.communication.messages.ChainReplicationMessage.getClass()", "async.chainreplication.communication.messages.ChainReplicationMessage.getClass()", "async.chainreplication.communication.messages.ChainReplicationMessage.getClass()"], "Fixed commit": "d5e6c29709bba9a7b98543d878468d38e31e7a9b", "Url": "https://api.github.com/repos/santhoshkumarml/Async-Project", "Date": "2014-11-12T04:38:08Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getStringSet(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (stringSet != null) { stringSet = new java.util.HashSet<>(stringSet); stringSet.remove(selectedItem); prefs.edit().clear().putStringSet(com.karol.sezonnazdrowie.ShoppingListFragment.PREF_SHOPPING_LIST, stringSet).apply(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5272/buggy-version/app.src.main.java.com.karol.sezonnazdrowie.ShoppingListFragment.java", "BodyUseAPI": [], "Fixed commit": "9d2bbb8dea942876a5f784c24783e5517537105c", "Url": "https://api.github.com/repos/karlkar/snz", "Date": "2016-05-06T18:30:51Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getStringSet(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (stringSet == null) stringSet = new java.util.HashSet<>(); else stringSet = new java.util.HashSet<>(stringSet);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5272/buggy-version/app.src.main.java.com.karol.sezonnazdrowie.ShoppingListFragment.java", "BodyUseAPI": [], "Fixed commit": "9d2bbb8dea942876a5f784c24783e5517537105c", "Url": "https://api.github.com/repos/karlkar/snz", "Date": "2016-05-06T18:30:51Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getStringSet(ShoppingListFragment.PREF_SHOPPING_LIST,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (stringSet == null) stringSet = new java.util.HashSet<>(); else stringSet = new java.util.HashSet<>(stringSet);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5272/buggy-version/app.src.main.java.com.karol.sezonnazdrowie.FoodItemPageFragment.java", "BodyUseAPI": [], "Fixed commit": "9d2bbb8dea942876a5f784c24783e5517537105c", "Url": "https://api.github.com/repos/karlkar/snz", "Date": "2016-05-06T18:30:51Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.event.DocumentEvent.getDocument()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sourceModel == (textField_D.getDocument())) { _model.setScaleY(parseDouble(textField_C)); }else if (sourceModel == (textField_E.getDocument())) { _model.setTranslateX(parseDouble(textField_E)); }else if (sourceModel == (textField_F.getDocument())) { _model.setTranslateY(parseDouble(textField_F)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4292/buggy-version/fflames-gui.src.main.java.fflames.gui.forms.AffineTransformEditor.java", "BodyUseAPI": [], "Fixed commit": "d3a3848ea15cae8487e4b213cdca89a2e7b6493b", "Url": "https://api.github.com/repos/pawelkorus/FFlames", "Date": "2015-06-29T06:54:16Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bekvon.bukkit.residence.Residence.getPermissionManager().getGroup(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(group.canCreateResidences())) { player.sendMessage(\"You dont have permission to create residences.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/814/buggy-version/src.com.bekvon.bukkit.residence.protection.ClaimedResidence.java", "BodyUseAPI": [], "Fixed commit": "4e198b09eb9154acd457aa908da7cbf209027812", "Url": "https://api.github.com/repos/bekvon/Residence", "Date": "2011-04-15T22:16:59Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event instanceof org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent) { assert last == null; aggregateEvent = ((org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent) (event)); }else if (last == null) { aggregateEvent = org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent.getAggregatedEvent(event, eventCountOnCreation); }else { assert last instanceof org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent; org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent aggregateLastEvent = ((org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent) (last)); aggregateEvent = org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent.appendOneEditEvent(aggregateLastEvent, event, eventCountOnCreation, toNewDuration); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5735/buggy-version/org.eclipse.mylyn.context.core.src.org.eclipse.mylyn.internal.context.core.DegreeOfInterest.java", "BodyUseAPI": ["org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent.appendOneEditEvent(org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent,org.eclipse.mylyn.monitor.core.InteractionEvent,int,boolean)", "org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent.getAggregatedEvent(org.eclipse.mylyn.monitor.core.InteractionEvent,int)"], "Fixed commit": "2aa549943e080a522af00c973e7f15af7c4ba455", "Url": "https://api.github.com/repos/conachang/mylyn.context", "Date": "2015-05-28T07:39:07Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isLoaded(dependency)) unload(dependency);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1486/buggy-version/gdx.src.com.badlogic.gdx.assets.AssetManager.java", "BodyUseAPI": ["com.badlogic.gdx.assets.AssetManager.unload(java.lang.String)"], "Fixed commit": "95b0f36f3ec663701af3ea66254ec6f63b5d6800", "Url": "https://api.github.com/repos/Dakror/libgdx", "Date": "2014-05-10T15:12:14Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["oracle.iam.identity.usermgmt.vo.User.getManagerKey()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (managerKey != null) { oracle.iam.identity.usermgmt.vo.User managerUser = this.usrMgr.getDetails(managerKey, new java.util.HashSet<java.lang.String>(), false); managerUserLogin = managerUser.getLogin(); }else { managerUserLogin = \"NO_MANAGER\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3124/buggy-version/src.com.blogspot.oraclestack.eventhandlers.BulkModifyUserEHPostProcess.java", "BodyUseAPI": ["oracle.iam.identity.usermgmt.api.UserManager.getDetails(java.lang.String,java.util.HashSet<java.lang.String>,boolean)"], "Fixed commit": "376fd70b4357b084fd4bb744ced3c6ef0f620f7c", "Url": "https://api.github.com/repos/rayedchan/OIMUtilities", "Date": "2015-03-21T04:29:03Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (vv.getPickedVertexState().isPicked(v)) { return v; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5609/buggy-version/de.bund.bfr.jung.src.de.bund.bfr.jung.BetterShapePickSupport.java", "BodyUseAPI": [], "Fixed commit": "151cf4d319103244fc775728e9e6caf173228eac", "Url": "https://api.github.com/repos/SiLeBAT/BfROpenLab", "Date": "2017-06-21T12:26:58Z"},
{"Line": "=>510", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((t.eContainer()) instanceof org.thingml.compilers.javascript.StateMachine) { builder.append(\"this.statemachine.to(null)\"); }else { builder.append(((((org.thingml.compilers.javascript.State) (t.eContainer())).qname(\"_\")) + \".to(null)\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/200/buggy-version/compilers.javascript.src.main.java.org.thingml.compilers.javascript.JSThingImplCompiler.java", "BodyUseAPI": ["java.lang.StringBuilder.append(((((org.thingml.compilers.javascript.State) (t.eContainer())).qname(\"_\")) + \".to(null)\"))", "((org.thingml.compilers.javascript.State) (t.eContainer())).qname(java.lang.String)", "org.thingml.compilers.javascript.InternalTransition.eContainer()"], "Fixed commit": "37ae26e182376f02a5974c7013283eff06ed4c15", "Url": "https://api.github.com/repos/TelluIoT/ThingML", "Date": "2016-04-27T12:03:54Z"},
{"Line": "=>521", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((t.eContainer()) instanceof org.thingml.compilers.javascript.StateMachine) { builder.append(\"this.statemachine.to(null)\"); }else { builder.append(((((org.thingml.compilers.javascript.State) (t.eContainer())).qname(\"_\")) + \".to(null)\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/200/buggy-version/compilers.javascript.src.main.java.org.thingml.compilers.javascript.JSThingImplCompiler.java", "BodyUseAPI": ["java.lang.StringBuilder.append(((((org.thingml.compilers.javascript.State) (t.eContainer())).qname(\"_\")) + \".to(null)\"))", "org.thingml.compilers.javascript.InternalTransition.eContainer()", "((org.thingml.compilers.javascript.State) (t.eContainer())).qname(java.lang.String)"], "Fixed commit": "37ae26e182376f02a5974c7013283eff06ed4c15", "Url": "https://api.github.com/repos/TelluIoT/ThingML", "Date": "2016-04-27T12:03:54Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (approachFromPresent) { return org.ithinktree.becky.CophylogenyModel.Utils.getContemporaneousLineageCountApproachingFromPresent(tree, tree.getRoot(), height); }else { return org.ithinktree.becky.CophylogenyModel.Utils.getContemporaneousLineageCountApproachingFromPast(tree, tree.getRoot(), height); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3568/buggy-version/src.org.ithinktree.becky.CophylogenyModel.java", "BodyUseAPI": [], "Fixed commit": "ef9fe18481b845ae7eed54a40c439de2e0b3caa1", "Url": "https://api.github.com/repos/armanbilge/BECKY", "Date": "2014-04-24T04:16:21Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (potentialHostCount <= 0) likelihood += 0.0; else { likelihood += (((likelihoodHostSwitchEventAndLossInTime(subHeight, nextSubHeight, e, l, eventRate, rate, tree, lostLineage)) * (likelihoodLossesAlongLineages(tree, java.util.Arrays.copyOfRange(originalLineages, (i + 1), originalLineages.length), rate))) * (likelihoodLossesAlongLineages(tree, java.util.Arrays.copyOfRange(newHostLineages, 0, (j + 1)), rate))) / potentialHostCount; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3568/buggy-version/src.org.ithinktree.becky.SimpleCophylogenyModel.java", "BodyUseAPI": [], "Fixed commit": "ef9fe18481b845ae7eed54a40c439de2e0b3caa1", "Url": "https://api.github.com/repos/armanbilge/BECKY", "Date": "2014-04-24T04:16:21Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.ignite.internal.processors.cache.GridCacheSharedContext.cacheContext(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(cacheCtx.userCache())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7459/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.processors.cache.database.evict.PageAbstractEvictionTracker.java", "BodyUseAPI": [], "Fixed commit": "77dd1e32db7be500f3db3f9993747759c05a89fa", "Url": "https://api.github.com/repos/gridgain/apache-ignite", "Date": "2017-03-23T16:02:35Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n == 0) { return; }else if (n == 1) { canvas.save(); canvas.rotate(rotation, ((float) (x)), ((float) (y))); drawCircle((x + (radius / 2)), y, java.lang.Math.round((radius / 4)), paint); canvas.restore(); return; }else if (n == 2) { canvas.save(); canvas.rotate(rotation, ((float) (x)), ((float) (y))); paint.setStrokeWidth(java.lang.Math.round((radius / 4))); drawLine((x - radius), y, (x + radius), y, paint); canvas.restore(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2431/buggy-version/app.src.main.java.com.laserfountain.framework.implementation.AndroidGraphics.java", "BodyUseAPI": [], "Fixed commit": "7d3f33b458282f547854db02c2406d6432e108a2", "Url": "https://api.github.com/repos/maltelenz/Circly", "Date": "2016-02-17T20:45:02Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (hasRailoRuntime(st)) setStackTrace(st); else { java.lang.StackTraceElement[] cst = new java.lang.Exception(\"Stack trace\").getStackTrace(); if (hasRailoRuntime(cst)) { java.lang.StackTraceElement[] mst = new java.lang.StackTraceElement[((st.length) + (cst.length)) - 1]; java.lang.System.arraycopy(st, 0, mst, 0, st.length); java.lang.System.arraycopy(cst, 1, mst, st.length, ((cst.length) - 1)); setStackTrace(mst); }else setStackTrace(st); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2576/buggy-version/railo-java.railo-core.src.railo.runtime.exp.NativeException.java", "BodyUseAPI": [], "Fixed commit": "7c0dd3b06562691485c413bf09177bf3e7f7122a", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2011-05-25T17:40:04Z"},
{"Line": "=>590", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.type) == (SymbolType.NAMESPACE)) { break; }else if ((s.type) == (SymbolType.NATIVE)) { throw new com.jpexs.decompiler.flash.abc.avm2.parser.AVM2ParseException(\"Cannot compile native code\", lexer.yyline()); }else if ((s.group) == (SymbolGroup.IDENTIFIER)) { customAccess = s.value.toString(); namespace = -2; }else { if (namespace != (-1)) { throw new com.jpexs.decompiler.flash.abc.avm2.parser.AVM2ParseException(\"Only one access identifier allowed\", lexer.yyline()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7241/buggy-version/libsrc.ffdec_lib.src.com.jpexs.decompiler.flash.abc.avm2.parser.script.ActionScriptParser.java", "BodyUseAPI": ["s.value.toString()"], "Fixed commit": "2779cd2d3b4c22a0423744efefb2e39832652f03", "Url": "https://api.github.com/repos/jindrapetrik/jpexs-decompiler", "Date": "2014-11-23T06:13:17Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getSession().getAttribute(java.lang.String)", "java.lang.Long.parseLong(request.getParameter(\"id\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(profileOrderValidationService.isValid(orderId, user.getId()))) { return redirectTo(lv.javaguru.java2.servlet.FrontPageController.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5791/buggy-version/src.main.java.lv.javaguru.java2.servlet.ProfileOrderController.java", "BodyUseAPI": [], "Fixed commit": "41a5f5215436baaa84ea92cdee60454cd2b750f4", "Url": "https://api.github.com/repos/alex-vit/java2", "Date": "2016-09-10T07:35:42Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.cccm5.MerchantTrait.stackToMerchant(org.bukkit.inventory.ItemStack)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (merchantItem == null) { p.sendMessage(((Error) + \"Thats not an item! Report this to your server operator\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6255/buggy-version/src.main.io.github.cccm5.MerchantTrait.java", "BodyUseAPI": [], "Fixed commit": "ec0a8c4e7bc2ee803f7fec2bf975537b950ccbd5", "Url": "https://api.github.com/repos/APDevTeam/AP-Merchants", "Date": "2016-08-25T14:20:36Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.List<net.chrislehmann.squeezedroid.service.PlayerStatusHandler>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(handlers.contains(handler))) { handlers.add(handler); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1116/buggy-version/src.main.java.net.chrislehmann.squeezedroid.service.EventThread.java", "BodyUseAPI": ["java.util.List<net.chrislehmann.squeezedroid.service.PlayerStatusHandler>.add(net.chrislehmann.squeezedroid.service.PlayerStatusHandler)"], "Fixed commit": "490ce113ec9c7f9a7b4a1319406aba0e0b411e72", "Url": "https://api.github.com/repos/clehmann/squeezedroid", "Date": "2011-03-06T02:00:38Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((myExpression.size()) == 1) { res = res + \"()\"; }else { res += \"(\"; for (int i = 1; i < (myExpression.size()); i++) { res += myExpression.get(i).toString(); res += \",\"; } res = (res.substring(0, ((res.length()) - 1))) + \")\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/590/buggy-version/src.unification.Function.java", "BodyUseAPI": ["unification.Function.size()", "myExpression.get(i).toString()", "unification.Function.get(int)"], "Fixed commit": "2b7096bd0af3ed1f45b28525c701916cdfd1a6aa", "Url": "https://api.github.com/repos/Omar-ElAzazy/AI-project-2", "Date": "2015-12-01T22:44:25Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mTableExist) { android.database.Cursor cursor = mDatabase.rawQuery((\"SELECT * FROM \" + (mTableName)), null); return cursor; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1933/buggy-version/src.com.mozzandroidutils.sqlite.Eloquent.java", "BodyUseAPI": [], "Fixed commit": "16f53ce30927915975b83cc5eb794af81bbf9a32", "Url": "https://api.github.com/repos/hsllany/MozzAndroid", "Date": "2015-02-11T06:26:31Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gmail.nossr50.party.PartyManager.getPlayerParty(player.getName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (party == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/976/buggy-version/src.main.java.com.gmail.nossr50.party.PartyManager.java", "BodyUseAPI": [], "Fixed commit": "70e8e534fe271f22cb758225b2e37a40c38d71d2", "Url": "https://api.github.com/repos/mcMMO-Dev/mcMMO", "Date": "2013-03-17T14:46:29Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((applicationService) == null) { org.dspace.app.cris.util.Researcher researcher = new org.dspace.app.cris.util.Researcher(); applicationService = researcher.getApplicationService(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4491/buggy-version/dspace-cris.api.src.main.java.org.dspace.app.cris.service.CrisObjectServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "da936b658f4ef7129e3ae5fabfcfd360130aac91", "Url": "https://api.github.com/repos/4Science/DSpace", "Date": "2017-12-05T14:27:37Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.hamiltonianCycle) == null) { this.getBestHamiltonianTour(); }else { this.getBestHamiltonianTour(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4328/buggy-version/VacuumES_EnvironmentB.src.utils.TourChooser.java", "BodyUseAPI": [], "Fixed commit": "0f143eb86b45df19aa4d9b41f193c3fb48ab74c9", "Url": "https://api.github.com/repos/veget88/VacuumES_EnvironmentB", "Date": "2013-12-19T09:54:36Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parentPaymentParametersDto.getPaymentOptions().contains(AccountPaymentParametersDto.PaymentOptions.ALLOW_OVERPAYMENTS)) { memberAccountPaymentParametersDto.addPaymentOption(AccountPaymentParametersDto.PaymentOptions.ALLOW_OVERPAYMENTS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2274/buggy-version/appdomain.src.main.java.org.mifos.accounts.api.StandardAccountService.java", "BodyUseAPI": [], "Fixed commit": "1f86ccdde4d6bde201831350ea5c57c9097be5a5", "Url": "https://api.github.com/repos/mifos/head", "Date": "2014-05-07T11:13:30Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (faultStack != null) { if ((faultStack.size()) == 0) { synapseInMessageContext.pushFaultHandler(new org.apache.synapse.mediators.MediatorFaultHandler(synapseInMessageContext.getFaultSequence())); } synapseInMessageContext.getFaultStack().addAll(faultStack); ((org.apache.synapse.FaultHandler) (successfulEndpoint)).handleFault(synapseInMessageContext, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/592/buggy-version/modules.core.src.main.java.org.apache.synapse.core.axis2.SynapseCallbackReceiver.java", "BodyUseAPI": ["synapseInMessageContext.getFaultStack().addAll(java.util.Stack)", "java.util.Stack.size()"], "Fixed commit": "f6d568a35e93f3aaa3b9a6bf7232dfb3c2a16c66", "Url": "https://api.github.com/repos/Pasadi/wso2-synapse", "Date": "2015-02-06T09:24:35Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.activemq.command.Message.getOriginalDestination()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (origDest != null) { org.apache.activemq.util.ByteSequence origDestBytes = marshaller.marshal(origDest); origDestBytes.compact(); coreMessage.putBytesProperty(org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.AMQ_MSG_ORIG_DESTINATION, origDestBytes.data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6674/buggy-version/artemis-protocols.artemis-openwire-protocol.src.main.java.org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.java", "BodyUseAPI": ["org.apache.activemq.wireformat.WireFormat.marshal(org.apache.activemq.command.ActiveMQDestination)"], "Fixed commit": "610174b42b84d1764a35ebe1ccec13afeab8e23d", "Url": "https://api.github.com/repos/apache/activemq-artemis", "Date": "2016-02-18T12:52:32Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listOfFiles) != null) { if ((listOfFiles.length) <= 1) { mDrawerLayout.openDrawer(mDrawerList); showPopUp(); android.widget.Toast.makeText(getApplicationContext(), \"Create a new trip.\", Toast.LENGTH_LONG).show(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7788/buggy-version/app.src.main.java.groupo.travellight.app.TripActivity.java", "BodyUseAPI": [], "Fixed commit": "f86dd3202596958ae944262c24e4d3fb0084ab69", "Url": "https://api.github.com/repos/CST316GroupO/Travellight", "Date": "2014-04-23T08:28:08Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(estimateSheetId)) messages.put(Constants.KEY_MB_MEASUREMENTS_LOA_NOT_VALID, Constants.MSG_MB_MEASUREMENTS_LOA_NOT_VALID);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3956/buggy-version/works.works-measurementbook.src.main.java.org.egov.works.measurementbook.domain.validator.MeasurementBookValidator.java", "BodyUseAPI": [], "Fixed commit": "8cd908fbdce62532d1f80bea4db6e21f0b0073c7", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2017-12-28T10:37:53Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sel instanceof edu.umass.ckc.wo.tutor.intervSel2.CollaborationIS) rememberInterventionSelector(sel);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7414/buggy-version/woServer.src.edu.umass.ckc.wo.tutor.intervSel2.NextProblemListCombinerIS.java", "BodyUseAPI": ["edu.umass.ckc.wo.tutor.intervSel2.NextProblemListCombinerIS.rememberInterventionSelector(edu.umass.ckc.wo.tutor.intervSel2.NextProblemInterventionSelector)"], "Fixed commit": "fa35444c955a3b09b8342f21c69178eb90f92654", "Url": "https://api.github.com/repos/marshall62/mathspring", "Date": "2015-06-09T15:13:53Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.circleSelectionGraphic) == null) { this.circleSelectionGraphic = new dk.dma.epd.common.prototype.layers.CircleSelectionGraphic(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7230/buggy-version/epd-common.src.main.java.dk.dma.epd.common.prototype.layers.ais.VesselDotGraphic.java", "BodyUseAPI": [], "Fixed commit": "af074e181e8dc85991c095ed22141f6ab88e03ae", "Url": "https://api.github.com/repos/dma-enav/EPD", "Date": "2014-02-10T14:07:39Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connection) != null) { connection.disconnect(); connection = null; info.rynkowski.hamsterclient.data.dbus.ConnectionProviderOverNetwork.log.info(\"D-Bus connection closed.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1477/buggy-version/data.src.main.java.info.rynkowski.hamsterclient.data.dbus.ConnectionProviderOverNetwork.java", "BodyUseAPI": [], "Fixed commit": "4e0de156bf20eff6b1ce4fd14fcc8771edc11fd6", "Url": "https://api.github.com/repos/rynkowsg/hamster-client-android", "Date": "2015-06-29T19:26:14Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(differentWords.contains(word))) differentWords.add(word);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/116/buggy-version/src.classes.Category.java", "BodyUseAPI": ["java.util.LinkedList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "9e1bf254ec6ed98bea47d905b575705954d31aef", "Url": "https://api.github.com/repos/Clown77/SoftwareprojektKMD", "Date": "2014-01-11T12:25:23Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(nicobot.isSelfMessage(opts.message))) { nicobot.sendMessage(opts.message, getRandomTalk()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/7768/buggy-version/src.main.java.com.st.nicobot.bot.behavior.RandomTalk.java", "BodyUseAPI": ["com.st.nicobot.bot.NicoBot.sendMessage(opts.message,java.lang.String)"], "Fixed commit": "ec25227cb0bce2096dd515b2cd8d3b07c26d9e19", "Url": "https://api.github.com/repos/logscl/nicobot-slack", "Date": "2015-05-10T22:46:11Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (cmd.equals(\"help\")) { ui.Main.help(); }else if (cmd.equals(\"login\")) { ui.Main.login(); }else if (cmd.equals(\"exit\")) { ui.Main.quit = true; }else if (cmd.equals(\"createproject\")) { ui.Main.createProject(); }else if (cmd.equals(\"updateproject\")) { ui.Main.updateProject(); }else if (cmd.equals(\"deleteproject\")) { ui.Main.deleteProject(); }else if (cmd.equals(\"showproject\")) { ui.Main.showProject(); }else if (cmd.equals(\"createsubsystem\")) { ui.Main.createSubSystem(); }else if (cmd.equals(\"createbugreport\")) { ui.Main.createBugReport(); }else if (cmd.equals(\"inspectbugreport\")) { ui.Main.inspectBugReport(); }else if (cmd.equals(\"createcomment\")) { ui.Main.createComment(); }else if (cmd.equals(\"assignproject\")) { ui.Main.assignToProject(); }else if (cmd.equals(\"assignbugreport\")) { ui.Main.assignToBugReport(); }else if (cmd.equals(\"updatebugreport\")) { ui.Main.updateBugReport(); }else java.lang.System.out.println(\"Command not recognized.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6931/buggy-version/src.ui.Main.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "9f1e83838a16297c5afdde56c9307152fe077c7c", "Url": "https://api.github.com/repos/mathijsdelabie/SWOPProject", "Date": "2016-03-06T13:07:57Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.ws.rs.core.Response.readEntity(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (req11 != null) { if ((req11.getMeasure()) == null) { req11.setMeasure(new java.util.ArrayList<tavonatti.stefano.model.Measure>()); } }else { req11 = new tavonatti.stefano.model.variants.MeasureHistory(); req11.setMeasure(new java.util.ArrayList<tavonatti.stefano.model.Measure>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5716/buggy-version/ClientAssignment2.src.tavonatti.stefano.assignment2.client.AssignmentClient.java", "BodyUseAPI": ["tavonatti.stefano.model.variants.MeasureHistory.setMeasure(java.util.ArrayList<tavonatti.stefano.model.Measure>)", "tavonatti.stefano.model.variants.MeasureHistory.getMeasure()"], "Fixed commit": "c1379b06aafeefa65cc6a12c481eec60aa866ece", "Url": "https://api.github.com/repos/StefanoTavonatti93/introsde-2016-assignment-2", "Date": "2016-11-22T17:44:59Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.ws.rs.core.Response.readEntity(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (req11 != null) { if ((req11.getMeasure()) == null) { req11.setMeasure(new java.util.ArrayList<tavonatti.stefano.model.Measure>()); } }else { req11 = new tavonatti.stefano.model.variants.MeasureHistory(); req11.setMeasure(new java.util.ArrayList<tavonatti.stefano.model.Measure>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5716/buggy-version/ClientAssignment2.src.tavonatti.stefano.assignment2.client.AssignmentClient.java", "BodyUseAPI": ["tavonatti.stefano.model.variants.MeasureHistory.getMeasure()", "tavonatti.stefano.model.variants.MeasureHistory.setMeasure(java.util.ArrayList<tavonatti.stefano.model.Measure>)"], "Fixed commit": "c1379b06aafeefa65cc6a12c481eec60aa866ece", "Url": "https://api.github.com/repos/StefanoTavonatti93/introsde-2016-assignment-2", "Date": "2016-11-22T17:44:59Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n.getText().trim().equals(\"\")) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/3870/buggy-version/src.main.java.ca.nines.ise.validator.SectionCoverageValidator.java", "BodyUseAPI": [], "Fixed commit": "bb3855ed6a154fd312cf5dc120b57b7b608565ad", "Url": "https://api.github.com/repos/emmental/isetools", "Date": "2016-03-09T22:23:44Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.lwjgl.input.Keyboard.getKeyName(key).trim().equalsIgnoreCase(\"space\")) { text += \" \"; }else { if ((text.length()) < (characterWidth)) { java.lang.String kt = org.lwjgl.input.Keyboard.getKeyName(key); if (\"abcdefghijklmnopqrstuvwxyz\".contains(kt.toLowerCase())) { text += kt; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6487/buggy-version/src.uk.co.newagedev.hieranarchy.ui.TextBox.java", "BodyUseAPI": ["org.lwjgl.input.Keyboard.getKeyName(int)"], "Fixed commit": "2d776820dab92623e62144fb8c749dd15c512594", "Url": "https://api.github.com/repos/JoshuaBradbury/Hieranarchy", "Date": "2015-04-03T18:22:05Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotEmpty(pool.getProcessRef())) { xtw.writeAttribute(org.activiti.bpmn.converter.export.ATTRIBUTE_PROCESS_REF, pool.getProcessRef()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6137/buggy-version/modules.activiti-bpmn-converter.src.main.java.org.activiti.bpmn.converter.export.PoolExport.java", "BodyUseAPI": ["org.activiti.bpmn.model.Pool.getProcessRef()", "javax.xml.stream.XMLStreamWriter.writeAttribute(org.activiti.bpmn.converter.export.ATTRIBUTE_PROCESS_REF,pool.getProcessRef())"], "Fixed commit": "d4e5314bdf9c84428db3616ec12117affa4bca08", "Url": "https://api.github.com/repos/Activiti/Activiti", "Date": "2013-07-30T11:50:39Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.unibo.alchemist.model.interfaces.ILsaNode.getConcentration(it.unibo.alchemist.model.interfaces.ILsaMolecule)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (matches.isEmpty()) { if (((curPos) == null) || (currentPosition.equals(curPos))) { return currentPosition; } return curPos; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/6905/buggy-version/src.main.java.it.unibo.alchemist.model.implementations.actions.SAPEREWalkerRiseGradient.java", "BodyUseAPI": [], "Fixed commit": "884475755746f19ab6e950557844a5b10cfb9817", "Url": "https://api.github.com/repos/DanySK/alchemist-incarnation-sapere", "Date": "2015-02-11T16:33:57Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["data.GameGrid.doCombats(data.GameGrid.MoveAttempt,int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!success) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5203/buggy-version/GridStrategy.src.data.GameGrid.java", "BodyUseAPI": [], "Fixed commit": "6c1d280e8d319e3e78ead53d7287d43112a6fa63", "Url": "https://api.github.com/repos/oparish/GridStrategy", "Date": "2014-03-21T18:56:29Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > (items.size())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8199/buggy-version/app.src.main.java.org.jorge.lolin1.ui.adapter.FeedAdapter.java", "BodyUseAPI": [], "Fixed commit": "392a157016acc0da392122b31fd847897223bed0", "Url": "https://api.github.com/repos/Stoyicker/LoLin1", "Date": "2014-12-23T18:38:13Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Element.getTextContent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.google.common.base.Strings.isNullOrEmpty(textValue)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8531/buggy-version/src.main.java.io.github.mzmine.parameters.parametertypes.DoubleParameter.java", "BodyUseAPI": [], "Fixed commit": "e873b04b4288c07cd521f914f4fcd38f12da1217", "Url": "https://api.github.com/repos/photocyte/mzmine3", "Date": "2015-12-21T00:03:47Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Element.getTextContent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.google.common.base.Strings.isNullOrEmpty(textValue)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8531/buggy-version/src.main.java.io.github.mzmine.parameters.parametertypes.IntegerParameter.java", "BodyUseAPI": [], "Fixed commit": "e873b04b4288c07cd521f914f4fcd38f12da1217", "Url": "https://api.github.com/repos/photocyte/mzmine3", "Date": "2015-12-21T00:03:47Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Element.getTextContent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.google.common.base.Strings.isNullOrEmpty(textValue)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8531/buggy-version/src.main.java.io.github.mzmine.parameters.parametertypes.PercentParameter.java", "BodyUseAPI": [], "Fixed commit": "e873b04b4288c07cd521f914f4fcd38f12da1217", "Url": "https://api.github.com/repos/photocyte/mzmine3", "Date": "2015-12-21T00:03:47Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isClickable)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/610/buggy-version/src.ca.claytonrogers.Client.GUIObjects.GUIObject.java", "BodyUseAPI": [], "Fixed commit": "5e327f33f684b82cf527488339eba7994191a765", "Url": "https://api.github.com/repos/clayton-rogers/12Golf", "Date": "2015-07-14T00:54:00Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(result.exists())) { result.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/1354/buggy-version/Cards.src.views.DeckCreationDialogModel.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "7c6ade25289c31bbf06da20b8bdc7bd896570a11", "Url": "https://api.github.com/repos/QKitty/cards", "Date": "2016-09-13T14:02:30Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tcp.getActive())) { try { tcp.close(); } catch (java.lang.Exception e) { } done = true; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/414/buggy-version/Chat.src.Server.ServerThread.java", "BodyUseAPI": ["Communications.TCP.close()"], "Fixed commit": "3558dce6fc466d6672464906636f144dc80a1e82", "Url": "https://api.github.com/repos/ragnarok089/CS544", "Date": "2013-06-08T03:24:31Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.vehicle.VehicleExitEvent.getExited()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pliv instanceof org.bukkit.entity.Player) { org.bukkit.entity.Player player = ((org.bukkit.entity.Player) (pliv)); ht.stats.removeBoard(player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8867/buggy-version/src.main.java.org.tritania.horseteleport.VehicleListener.java", "BodyUseAPI": [], "Fixed commit": "451ace75ce199519b010cccd722692767e1fcfc2", "Url": "https://api.github.com/repos/tritania/HorseTeleport", "Date": "2014-06-09T01:02:53Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.player.dead) == false) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2328/buggy-version/src.horrortactics.MyTiledMap.java", "BodyUseAPI": [], "Fixed commit": "2de1f56eb13f294e28f2fabbfbe58c53053f01b6", "Url": "https://api.github.com/repos/xmorg/horrorTactics", "Date": "2017-04-05T12:37:02Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((message.length()) > 0) { android.widget.Toast.makeText(c, \"Le message n'a pas pu \u00eatre envoy\u00e9\", Toast.LENGTH_LONG).show(); }else { android.widget.Toast.makeText(c, \"Nothing to send\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/8012/buggy-version/app.src.main.java.org.opensecurity.sms.controller.Controller.java", "BodyUseAPI": [], "Fixed commit": "d7f7ce2558d921cbc9f1b55cf88a0cfc13a67761", "Url": "https://api.github.com/repos/OpenSecurityOrganization/OpenSecuritySMS", "Date": "2015-10-29T09:28:21Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((daysOfHabit.contains(days[position])) == false) { daysOfHabit.add(days[position]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/4148/buggy-version/app.src.main.java.com.example.kelvin.liangmah__habittracker.habit_activity.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "a3d31bfde54648be79c8f796219c9e9e4de61f09", "Url": "https://api.github.com/repos/liangKelvin/Habit-Tracker", "Date": "2016-09-29T07:09:48Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.airavata.gfac.local.provider.impl.LocalProvider.get(RegistryModelType.TASK_DETAIL,jobExecutionContext.getTaskData().getTaskID())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (taskDetails != null) { taskDetails.setApplicationOutputs(outputArray); registry.update(RegistryModelType.TASK_DETAIL, taskDetails, taskDetails.getTaskID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2661/buggy-version/modules.gfac.gfac-local.src.main.java.org.apache.airavata.gfac.local.provider.impl.LocalProvider.java", "BodyUseAPI": ["org.apache.airavata.model.workspace.experiment.TaskDetails.setApplicationOutputs(java.util.List<org.apache.airavata.model.workspace.experiment.DataObjectType>)", "org.apache.airavata.model.workspace.experiment.TaskDetails.getTaskID()", "org.apache.airavata.gfac.local.provider.impl.LocalProvider.update(RegistryModelType.TASK_DETAIL,org.apache.airavata.model.workspace.experiment.TaskDetails,taskDetails.getTaskID())"], "Fixed commit": "722de6d1fe5eea90bad2ccf9815e4cb28e633274", "Url": "https://api.github.com/repos/apache/airavata", "Date": "2014-08-11T19:44:15Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(requestContext.getMethod().toUpperCase().equals(HttpMethod.OPTIONS))) { java.lang.Long tenantId = getTenantIdFromJwt(requestContext); try { requestContext.setRequestUri(new java.net.URI((((requestContext.getUriInfo().getAbsolutePath().toString()) + \"?tenantId=\") + (tenantId.toString())))); } catch (java.net.URISyntaxException e) { throw new javax.ws.rs.WebApplicationException(javax.ws.rs.core.Response.Status.INTERNAL_SERVER_ERROR); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/5215/buggy-version/api.src.main.java.balance.calculator.api.filters.PreMatchingFilter.java", "BodyUseAPI": ["requestContext.getUriInfo().getAbsolutePath()", "requestContext.getUriInfo().getAbsolutePath().toString()", "balance.calculator.api.filters.PreMatchingFilter.getTenantIdFromJwt(javax.ws.rs.container.ContainerRequestContext)", "javax.ws.rs.container.ContainerRequestContext.setRequestUri(java.net.URI)", "javax.ws.rs.container.ContainerRequestContext.getUriInfo()"], "Fixed commit": "014750a42db619fc2aa47ddb060e0f01cdbbd266", "Url": "https://api.github.com/repos/KostyantynPanchenko/balance-calculator", "Date": "2017-06-13T21:29:01Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((progress.getStatus()) == (org.cotrix.web.common.shared.Progress.Status.DONE)) callback.onSuccess(PublishWizardAction.NEXT); else callback.onFailure(progress.getFailureCause());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V104/2745/buggy-version/cotrix.cotrix-web-publish.src.main.java.org.cotrix.web.publish.client.wizard.task.PublishTask.java", "BodyUseAPI": ["org.cotrix.web.common.shared.Progress.getFailureCause()", "org.cotrix.web.publish.client.wizard.task.TaskCallBack.onFailure(progress.getFailureCause())"], "Fixed commit": "f0adf1f8d61ad68692140e3682e8ced1ddb63807", "Url": "https://api.github.com/repos/cotrix/cotrixrep", "Date": "2014-04-29T15:15:32Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (replace) { symbols[bucket] = str; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2700/buggy-version/src.main.java.com.alibaba.fastjson.parser.SymbolTable.java", "BodyUseAPI": [], "Fixed commit": "adf114f975ea0d4389dcb72f60454869775557da", "Url": "https://api.github.com/repos/JavaNaive/fastjson", "Date": "2017-07-14T03:48:56Z"},
{"Line": "=>785", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (continuous) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2111/buggy-version/gdx.src.com.badlogic.gdx.graphics.g2d.ParticleEmitter.java", "BodyUseAPI": [], "Fixed commit": "147af2e8848e391944e714987afa59c12c0848d4", "Url": "https://api.github.com/repos/JFixby/libgdx", "Date": "2015-11-29T21:28:46Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((script.getContainer()) instanceof net.aufdemrand.denizencore.scripts.containers.core.ProcedureScriptContainer)) { dB.echoError(\"Chosen script is not a procedure script!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8530/buggy-version/src.main.java.net.aufdemrand.denizencore.tags.core.ProcedureScriptTags.java", "BodyUseAPI": [], "Fixed commit": "63f3b033e7cff687081b7dd937cf8cd20a262651", "Url": "https://api.github.com/repos/mcmonkey4eva/Denizen-Core", "Date": "2015-07-18T19:57:21Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playerIds.size()) <= 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3384/buggy-version/src.main.java.game.round.LandGrantRound.java", "BodyUseAPI": [], "Fixed commit": "3e9bc4ed7194cdfedf7c86507befd3cf510cf3b9", "Url": "https://api.github.com/repos/jacketattack/MULE", "Date": "2013-11-12T19:47:52Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (oldName != name) { com.fb.manusremote.PersistenceManager.removeIntercom(oldName, preferences); com.fb.manusremote.PersistenceManager.addIntercom(name, ip, port, username, password, preferences); }else { editor.putString(name, new com.fb.manusremote.model.Intercom(name, ip, port, username, password).toSaveFormat()); editor.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8676/buggy-version/app.src.main.java.com.fb.manusremote.PersistenceManager.java", "BodyUseAPI": ["com.fb.manusremote.PersistenceManager.addIntercom(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.content.SharedPreferences)", "com.fb.manusremote.model.Intercom.toSaveFormat()", "SharedPreferences.Editor.putString(java.lang.String,new com.fb.manusremote.model.Intercom(name, ip, port, username, password).toSaveFormat())", "com.fb.manusremote.PersistenceManager.removeIntercom(java.lang.String,android.content.SharedPreferences)"], "Fixed commit": "290b95f836c8a7aa69e7c73ed505e88484e12d73", "Url": "https://api.github.com/repos/eriol1977/ManusRemote", "Date": "2015-01-15T14:54:21Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (itemKey == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2939/buggy-version/src.me.becja10.CoinExchange.Utils.ItemManager.java", "BodyUseAPI": [], "Fixed commit": "b68a1c926a7b35a780bbde89e8a91208798b5480", "Url": "https://api.github.com/repos/10becja/CoinExchange", "Date": "2016-08-08T21:52:49Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zstack.core.db.DatabaseFacade.findByUuid(spec.getDestRootVolume().getPrimaryStorageUuid(),java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (cephPrimaryStorageVO != null) { cmd.getAddons().put(CephConstants.CEPH_SCECRET_KEY, cephPrimaryStorageVO.getUserKey()); cmd.getAddons().put(CephConstants.CEPH_SECRECT_UUID, CephSystemTags.KVM_SECRET_UUID.getTokenByResourceUuid(cephPrimaryStorageVO.getUuid(), CephSystemTags.KVM_SECRET_UUID_TOKEN)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3183/buggy-version/plugin.ceph.src.main.java.org.zstack.storage.ceph.primary.CephPrimaryStorageFactory.java", "BodyUseAPI": ["org.zstack.storage.ceph.primary.CephPrimaryStorageVO.getUuid()", "cmd.getAddons().put(CephConstants.CEPH_SECRECT_UUID,CephSystemTags.KVM_SECRET_UUID.getTokenByResourceUuid(cephPrimaryStorageVO.getUuid(), CephSystemTags.KVM_SECRET_UUID_TOKEN))", "org.zstack.storage.ceph.primary.CephPrimaryStorageVO.getUserKey()", "cmd.getAddons().put(CephConstants.CEPH_SCECRET_KEY,cephPrimaryStorageVO.getUserKey())", "CephSystemTags.KVM_SECRET_UUID.getTokenByResourceUuid(cephPrimaryStorageVO.getUuid(),CephSystemTags.KVM_SECRET_UUID_TOKEN)"], "Fixed commit": "be5e5d66d582cb93eae48a84663449b7fa8ba099", "Url": "https://api.github.com/repos/liningone/zstack", "Date": "2017-05-11T13:46:41Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (super.useSwitch(level, x, y, user)) { level.wireManager.updateWire(x, y, (!(isSwitched))); if (level.isClientLevel()) engine.Screen.playSoundEffect(engine.gameData.ResourceData.getSound(\"tick\"), 1.0F, 0.8F, ((x * 32) + 16), ((y * 32) + 16)); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1422/buggy-version/src.level.gameObject.LeverObject.java", "BodyUseAPI": ["engine.Screen.playSoundEffect(engine.gameData.ResourceData.getSound(\"tick\"),float,float,int,int)", "level.maps.Level.isClientLevel()", "level.wireManager.updateWire(int,int,(!(isSwitched)))"], "Fixed commit": "bf87faade325a9133dd3c08c62953b3bccbc166d", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2017-07-16T01:25:14Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((counterId) == (-1)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1422/buggy-version/src.level.gameObject.SwitchObject.java", "BodyUseAPI": [], "Fixed commit": "bf87faade325a9133dd3c08c62953b3bccbc166d", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2017-07-16T01:25:14Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((marker) != null) && (!(getConfiguration().isDeleteAfterRead()))) { listObjectsRequest.setMarker(marker); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6014/buggy-version/components.camel-aws.src.main.java.org.apache.camel.component.aws.s3.S3Consumer.java", "BodyUseAPI": [], "Fixed commit": "e75356c31e1fa0157420080516b0309d59bf9c27", "Url": "https://api.github.com/repos/apache/camel", "Date": "2015-03-04T12:59:22Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getConfiguration().isDeleteAfterRead())) { marker = listObjects.getMarker(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6014/buggy-version/components.camel-aws.src.main.java.org.apache.camel.component.aws.s3.S3Consumer.java", "BodyUseAPI": [], "Fixed commit": "e75356c31e1fa0157420080516b0309d59bf9c27", "Url": "https://api.github.com/repos/apache/camel", "Date": "2015-03-04T12:59:22Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (latestWeibo != null) { lastUpdateWeibo = latestWeibo; cn.edu.zju.plex.tdd.dao.DB4Tdd.updateWeiboTargets(wuid, lastUpdateWeibo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6420/buggy-version/src.cn.edu.zju.plex.tdd.module.WeiboCrawler.java", "BodyUseAPI": [], "Fixed commit": "843af36ae55d6dc8d967bc17e9c739b7923f0f41", "Url": "https://api.github.com/repos/wfwei/TddWorks", "Date": "2013-04-19T15:43:50Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i >= (lines.size())) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/474/buggy-version/Source.Core.src.com.shtrih.jpos.fiscalprinter.DriverHeader.java", "BodyUseAPI": [], "Fixed commit": "c395b30a7d66d425582c32bdcd92c3a120ceabab", "Url": "https://api.github.com/repos/shtrih-m/javapos_shtrih", "Date": "2017-03-25T06:40:59Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((workerGroup) != null) { workerGroup.shutdownGracefully(0, 1, java.util.concurrent.TimeUnit.SECONDS).syncUninterruptibly(); workerGroup = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8782/buggy-version/element-connector.src.main.java.org.eclipse.californium.elements.tcp.TcpServerConnector.java", "BodyUseAPI": [], "Fixed commit": "f561c1382e4f347e85546bbc43d3fd7ef1a5febb", "Url": "https://api.github.com/repos/tom-quanyong/californium", "Date": "2016-11-03T07:41:11Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bossGroup) != null) { bossGroup.shutdownGracefully(0, 1, java.util.concurrent.TimeUnit.SECONDS).syncUninterruptibly(); bossGroup = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8782/buggy-version/element-connector.src.main.java.org.eclipse.californium.elements.tcp.TcpServerConnector.java", "BodyUseAPI": [], "Fixed commit": "f561c1382e4f347e85546bbc43d3fd7ef1a5febb", "Url": "https://api.github.com/repos/tom-quanyong/californium", "Date": "2016-11-03T07:41:11Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(myApiListeners.contains(listener))) { myApiListeners.add(listener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/933/buggy-version/src.org.geometerplus.android.fbreader.api.ApiClientImplementation.java", "BodyUseAPI": ["java.util.List<org.geometerplus.android.fbreader.api.ApiListener>.add(org.geometerplus.android.fbreader.api.ApiListener)"], "Fixed commit": "496794a2fdf357226fbbaa6afef32c943dc07c6d", "Url": "https://api.github.com/repos/pxanych/FBReader-SyncClient", "Date": "2011-09-08T07:52:53Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) == 2) { java.lang.String cmdString = args[1]; org.bukkit.command.Command command = plugin.getCommand(cmdString); if (command == null) { sender.sendMessage(Message.HELP_COMMAND_NOT_FOUND.toString().replace(\"%command%\", cmdString)); return false; } sender.sendMessage(Message.COMMAND_HELP.toString().replace(\"%command%\", cmdString).replace(\"%description%\", command.getDescription()).replace(\"%usage%\", command.getUsage()).replace(\"%aliases%\", org.apache.commons.lang.StringUtils.join(com.google.common.collect.Lists.newArrayList(command.getAliases()), \", \"))); }else { sender.sendMessage(HELP.replace(\"%VERSION%\", plugin.VERSION.getNakedVersion())); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1882/buggy-version/src.main.java.org.shanerx.faketrollplus.commands.Faketrollplus.java", "BodyUseAPI": [], "Fixed commit": "5cd4e6383749a80d37ad6da55342b79b1b27ecaa", "Url": "https://api.github.com/repos/SparklingComet/FakeTrollPlus", "Date": "2017-06-18T17:53:50Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["patient.getIdentifier().getIdentifier()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (patientIdentifier != null) { isPatientIdentifierFitQuery = ((patientIdentifier.length()) >= (query.length())) && (patientIdentifier.substring(0, query.length()).equals(query)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6847/buggy-version/openmrs-client.src.main.java.org.openmrs.mobile.activities.FindSyncedPatientsActivity.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "b448d52d35249d1bbc8f88c551ec5b7690cf17d7", "Url": "https://api.github.com/repos/AdamGrzybkowski/openmrs-contrib-android-client", "Date": "2016-09-20T08:28:39Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((compositeEffectiveMoment) != null) compositeEffectiveMoment.setFocus();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2114/buggy-version/plugins.DefaultPlugins.src.main.java.bogdanrechi.defaultplugins.moment.MomentComposite.java", "BodyUseAPI": [], "Fixed commit": "dc8cdba667d6c603d2c31d6684599838b8205f4f", "Url": "https://api.github.com/repos/bogdanrechi/Cronologica", "Date": "2017-08-04T17:04:01Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((spinAvailabilityUnits) != null) spinAvailabilityUnits.setFocus();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2114/buggy-version/plugins.DefaultPlugins.src.main.java.bogdanrechi.defaultplugins.moment.MomentComposite.java", "BodyUseAPI": [], "Fixed commit": "dc8cdba667d6c603d2c31d6684599838b8205f4f", "Url": "https://api.github.com/repos/bogdanrechi/Cronologica", "Date": "2017-08-04T17:04:01Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((compositeNextMoment) != null) compositeNextMoment.setFocus();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2114/buggy-version/plugins.DefaultPlugins.src.main.java.bogdanrechi.defaultplugins.moment.MomentComposite.java", "BodyUseAPI": [], "Fixed commit": "dc8cdba667d6c603d2c31d6684599838b8205f4f", "Url": "https://api.github.com/repos/bogdanrechi/Cronologica", "Date": "2017-08-04T17:04:01Z"},
{"Line": "=>561", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (bogdanrechi.commons.Platform.SYSTEM_IS_LINUX) lblImage = new org.eclipse.swt.widgets.Label(this, ((org.eclipse.swt.SWT.CENTER) | (org.eclipse.swt.SWT.BORDER))); else lblImage = new org.eclipse.swt.widgets.Label(this, org.eclipse.swt.SWT.CENTER);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2114/buggy-version/plugins.DefaultPlugins.src.main.java.bogdanrechi.defaultplugins.moment.MomentComposite.java", "BodyUseAPI": [], "Fixed commit": "dc8cdba667d6c603d2c31d6684599838b8205f4f", "Url": "https://api.github.com/repos/bogdanrechi/Cronologica", "Date": "2017-08-04T17:04:01Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.osmand.plus.OsmandPlugin.getEnabledPlugin(net.osmand.plus.development.OsmandDevelopmentPlugin.class)) == null) { simulateRoute.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8946/buggy-version/OsmAnd.src.net.osmand.plus.views.controls.MapRouteInfoControl.java", "BodyUseAPI": [], "Fixed commit": "ec9ad06df5b50c807f72e5abc0fd86dcefa3f4a4", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2014-12-22T18:40:59Z"},
{"Line": "=>2540", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.response) == (java.lang.Boolean.TRUE)) { record.setValueData(request.value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6076/buggy-version/hazelcast.src.main.java.com.hazelcast.impl.ConcurrentMapManager.java", "BodyUseAPI": ["com.hazelcast.impl.Record.setValueData(request.value)"], "Fixed commit": "b4e678c44b152c98c0f8ffd501119cf0e1f4495e", "Url": "https://api.github.com/repos/hazelcast/hazelcast", "Date": "2012-06-11T13:09:38Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (killWorker) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6158/buggy-version/core.src.logic.Creature.java", "BodyUseAPI": [], "Fixed commit": "2e5a4ca26efbbf6e6c045fa605c3636f914acdee", "Url": "https://api.github.com/repos/fazo96/AIrium", "Date": "2015-08-07T09:48:23Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cengha.divider2.service.MoveService.getAllByGameId(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((allMovesByGameId.size()) > 0) { game.setLastMove(allMovesByGameId.get(((allMovesByGameId.size()) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4513/buggy-version/src.main.java.com.cengha.divider2.service.GameService.java", "BodyUseAPI": ["java.util.List<com.cengha.divider2.model.Move>.get(((allMovesByGameId.size()) - 1))", "java.util.List<com.cengha.divider2.model.Move>.size()", "com.cengha.divider2.model.Game.setLastMove(allMovesByGameId.get(((allMovesByGameId.size()) - 1)))"], "Fixed commit": "789e6f191a1a6f559e3be8a9ca02ef7afb5af268", "Url": "https://api.github.com/repos/cengha/divider2", "Date": "2017-10-16T07:13:40Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (screenSelection == (ScreenEnum.GAME)) { saveService.saveDataValue(\"Class\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5552/buggy-version/core.src.com.majalis.traprpg.MainMenuScreen.java", "BodyUseAPI": [], "Fixed commit": "373a0803ff5faad8da02679204dc0e8d1e55ff0b", "Url": "https://api.github.com/repos/majalistic/tales-of-androgyny", "Date": "2016-08-22T19:46:11Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(validateDate(startDateTextField))) { startDateTextField.grabFocus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3644/buggy-version/src.com.amdudda.LocationInfoForm.java", "BodyUseAPI": ["javax.swing.JTextField.grabFocus()"], "Fixed commit": "a1a3bab56add29e2944cd7b65e1b3847492ab800", "Url": "https://api.github.com/repos/amdudda/java_project_MusicologyInstitute", "Date": "2015-12-14T21:49:50Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(validateDate(endDateTextField))) { endDateTextField.grabFocus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3644/buggy-version/src.com.amdudda.LocationInfoForm.java", "BodyUseAPI": ["javax.swing.JTextField.grabFocus()"], "Fixed commit": "a1a3bab56add29e2944cd7b65e1b3847492ab800", "Url": "https://api.github.com/repos/amdudda/java_project_MusicologyInstitute", "Date": "2015-12-14T21:49:50Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(operator.isEmpty())) if (output.getText().equals(\"\")) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1852/buggy-version/src.application.Controller.java", "BodyUseAPI": [], "Fixed commit": "9ed78b5f6a149e61effecac9db7c0c92eba3e370", "Url": "https://api.github.com/repos/TsukiZombina/CalculatorMVC", "Date": "2017-02-03T05:15:43Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((classNode.getField(propertyName)) != null) && (!(classNode.getMethods(grails.util.GrailsNameUtils.getSetterName(propertyName)).isEmpty()))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6070/buggy-version/grails-core.src.main.groovy.org.codehaus.groovy.grails.compiler.injection.GrailsASTUtils.java", "BodyUseAPI": [], "Fixed commit": "3dc8e9ff72d51898af3cdbe1d7c17eb77a7a9817", "Url": "https://api.github.com/repos/grails/grails-core", "Date": "2013-12-02T09:26:21Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.app.FragmentManager.findFragmentById(R.id.content_frame)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (currentFragment != null) { if ((!(f.getClass().equals(org.openobservatory.ooniprobe.fragment.PastTestsFragment.class))) && (currentFragment.getClass().equals(org.openobservatory.ooniprobe.fragment.PastTestsFragment.class))) { org.openobservatory.ooniprobe.data.TestStorage.setAllViewed(this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1785/buggy-version/app.src.main.java.org.openobservatory.ooniprobe.activity.MainActivity.java", "BodyUseAPI": ["currentFragment.getClass().equals(java.lang.Class)", "android.support.v4.app.Fragment.getClass()"], "Fixed commit": "29218321801380d227d46ee796311a29a8d4e109", "Url": "https://api.github.com/repos/ooni/probe-android", "Date": "2017-05-30T12:17:59Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pathPoints.size()) > 0) { lastPoint = pathPoints.get(((pathPoints.size()) - 1)); }else { lastPoint = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1698/buggy-version/Android.src.org.droidplanner.android.mission.MissionRender.java", "BodyUseAPI": ["java.util.List<com.google.android.gms.maps.model.LatLng>.size()", "java.util.List<com.google.android.gms.maps.model.LatLng>.get(((pathPoints.size()) - 1))"], "Fixed commit": "786c5c01671ddea699a492a3988de035dfdab9fd", "Url": "https://api.github.com/repos/arthurbenemann/droidplanner", "Date": "2014-05-29T16:14:04Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.getBitmapInfo().bitmap) != null) { generateSwatch(result.getBitmapInfo().bitmap, mediaViewHolder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6093/buggy-version/app.src.main.java.com.luorrak.ouroboros.thread.MediaAdapter.java", "BodyUseAPI": ["com.luorrak.ouroboros.thread.MediaAdapter.1.generateSwatch(result.getBitmapInfo().bitmap,com.luorrak.ouroboros.thread.MediaAdapter.MediaViewHolder)", "com.koushikdutta.ion.ImageViewBitmapInfo.getBitmapInfo()"], "Fixed commit": "2b1a9e24922392d144da44486d055df181c8550d", "Url": "https://api.github.com/repos/Luorrak/Ouroboros", "Date": "2016-01-30T00:27:14Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (source.startsWith(\"//\")) { source = \"https:\" + source; }else if (source.startsWith(\"/\")) { source = (com.czbix.v2ex.network.RequestHelper.BASE_URL) + source; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/9270/buggy-version/app.src.main.java.com.czbix.v2ex.parser.AsyncImageGetter.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "26a085b81c9772ef92a723493d0be3c187fdf0f0", "Url": "https://api.github.com/repos/CzBiX/v2ex-android", "Date": "2015-07-19T11:59:57Z"},
{"Line": "=>516", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getnumstr.length()) != 0) { getnumstr = getnumstr.substring(0, ((getnumstr.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4295/buggy-version/app.src.main.java.momodupi.alandkaomoji.RealService.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "101e4e995ee7a10a26eac4ae7f69bc6c09a34408", "Url": "https://api.github.com/repos/momodupi/AlandKaomoji", "Date": "2017-05-24T07:01:29Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.door43.translationstudio.newui.translate.ChooseSourceTranslationAdapter.getItem(int)", "com.door43.translationstudio.core.Library.getResource(com.door43.translationstudio.core.SourceTranslation)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((item.hasUpdates) != (resource.hasUpdates())) { item.hasUpdates = resource.hasUpdates(); databaseChanged = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/93/buggy-version/app.src.main.java.com.door43.translationstudio.newui.translate.ChooseSourceTranslationAdapter.java", "BodyUseAPI": ["com.door43.translationstudio.core.Resource.hasUpdates()"], "Fixed commit": "ee18400d1f672146a894b5b235d50bab03063aa8", "Url": "https://api.github.com/repos/PhotoNomad0/ts-android", "Date": "2016-10-01T15:01:44Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.door43.translationstudio.core.Library.getResource(com.door43.translationstudio.core.SourceTranslation)", "com.door43.translationstudio.newui.translate.ChooseSourceTranslationAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((item.downloaded) != (resource.isDownloaded())) { item.downloaded = resource.isDownloaded(); databaseChanged = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/93/buggy-version/app.src.main.java.com.door43.translationstudio.newui.translate.ChooseSourceTranslationAdapter.java", "BodyUseAPI": ["com.door43.translationstudio.core.Resource.isDownloaded()"], "Fixed commit": "ee18400d1f672146a894b5b235d50bab03063aa8", "Url": "https://api.github.com/repos/PhotoNomad0/ts-android", "Date": "2016-10-01T15:01:44Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (len > lenother) { int difference = len - lenother; other.strNum = LargeNumber.leftPad(other.strNum, difference); lenother = len; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4667/buggy-version/src.LargeNumber.java", "BodyUseAPI": [], "Fixed commit": "d14496cdb19d671d194eb7e5caf5b48fe1250806", "Url": "https://api.github.com/repos/ak11234/Lab4-2016CTD", "Date": "2016-06-30T23:58:55Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.dries007.cmd.Worker.downloadForgeInstaller(net.dries007.cmd.util.forge.ForgeJson)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (forge != null) { doForgeInstall(forge); }else { nonForgeModloaders.add((\"forge-no-installer-\" + forgeVersion)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1219/buggy-version/src.main.java.net.dries007.cmd.Worker.java", "BodyUseAPI": ["net.dries007.cmd.Worker.doForgeInstall(java.io.File)"], "Fixed commit": "28d28b06f93d52417d7f5dd6baa3d55cc2704138", "Url": "https://api.github.com/repos/DoubleDoorDevelopment/CurseModpackDownloader", "Date": "2017-04-16T14:04:13Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mActionMode) == null) mActionMode = ((android.support.v7.app.ActionBarActivity) (getActivity())).startSupportActionMode(this); else { if ((mActionMode.getCustomView()) == null) { @android.annotation.SuppressLint(\"InflateParams\") android.widget.TextView tv = ((android.widget.TextView) (getActivity().getLayoutInflater().inflate(R.layout.action_mode_title, null))); mActionMode.setCustomView(tv); } ((android.widget.TextView) (mActionMode.getCustomView())).setText(mFeedAdapter.getItem(mSelectedIndex).getTitle()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4933/buggy-version/app.src.main.java.org.jorge.lolin1.ui.fragment.FeedListFragment.java", "BodyUseAPI": [], "Fixed commit": "18aa15f670cdd882c12ccf4991df9992253fafcf", "Url": "https://api.github.com/repos/Stoyicker/LoLin1", "Date": "2014-11-13T14:45:35Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((!(railo.runtime.config.NullSupportHelper.full())) && (value == null)) value = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2145/buggy-version/railo-java.railo-core.src.railo.runtime.functions.query.QueryColumnData.java", "BodyUseAPI": [], "Fixed commit": "de4d0c23ce50e21dbef7f50eef05a30d148e382f", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2013-06-07T07:55:38Z"},
{"Line": "=>461", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((offset + length) > (document.getLength())) length = (document.getLength()) - offset;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4677/buggy-version/Aletheia.GUI.src.aletheia.gui.cli.CliJPanel.java", "BodyUseAPI": ["javax.swing.text.DefaultStyledDocument.getLength()"], "Fixed commit": "df737dd4542efa03a59e752180bd34d224dfc86d", "Url": "https://api.github.com/repos/quimtestar/Aletheia", "Date": "2015-11-17T08:00:42Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ref == (Ref.Global.ROOT)) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7019/buggy-version/core.src.main.java.codex.model.Def.java", "BodyUseAPI": [], "Fixed commit": "1238002ad983ffdb76aa749d64c3110fbe51320f", "Url": "https://api.github.com/repos/scaled/codex", "Date": "2014-06-24T18:12:32Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jane.core.Storage.backup(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (r >= 0) Log.log.info(\"db-commit backup end. ({} bytes) ({} ms)\", r, ((java.lang.System.currentTimeMillis()) - t)); else Log.log.error(\"db-commit backup error({}). ({} ms)\", r, ((java.lang.System.currentTimeMillis()) - t));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8759/buggy-version/src.jane.core.DBManager.java", "BodyUseAPI": ["Log.log.info(java.lang.String,long,long)", "Log.log.error(java.lang.String,long,long)"], "Fixed commit": "d5916f327d564e78e61380b1e0cf0f6732bf132a", "Url": "https://api.github.com/repos/dwing4g/jane", "Date": "2015-08-28T14:59:24Z"},
{"Line": "=>502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(econ.EconomicEngine.AVOID_ECON_DUMP_PATHS)) { for (int tASN : this.theTopo.keySet()) { this.theTopo.get(tASN).reportMoneyEarned(this.cashForThisRound.get(tASN), this.transitCashForThisRound.get(tASN)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5159/buggy-version/src.econ.EconomicEngine.java", "BodyUseAPI": [], "Fixed commit": "477432c1c220a409dcac9b46bd354dd9d01d6f95", "Url": "https://api.github.com/repos/pendgaft/cash-nightwing", "Date": "2014-09-10T17:14:28Z"},
{"Line": "=>1802", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (this.isMapView) { zoomRatio = main.gui.GUIFront.zoomHandle.zoomAmount; panX = -500; panY = -250; }else { zoomRatio = 1; panX = 0; panY = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7970/buggy-version/src.main.gui.GUIFront.java", "BodyUseAPI": [], "Fixed commit": "d797cf070f8a487fcc1b8fa287fea6f14057b8c4", "Url": "https://api.github.com/repos/theflanman/HonestMistakesWPINav", "Date": "2015-12-09T04:20:38Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((editText.getInputType()) != inputType) { editText.setRawInputType(inputType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8627/buggy-version/library.src.main.java.com.shaubert.maskedinput.MaskedEditTextDelegate.java", "BodyUseAPI": ["android.widget.EditText.setRawInputType(int)"], "Fixed commit": "383e924e31d22e7a6493c314c051c00fa28e576d", "Url": "https://api.github.com/repos/shaubert/masked-input", "Date": "2016-02-15T17:27:19Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (restoreInputType) { setRawInputType(initialInputType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8627/buggy-version/library.src.main.java.com.shaubert.maskedinput.MaskedEditTextDelegate.java", "BodyUseAPI": [], "Fixed commit": "383e924e31d22e7a6493c314c051c00fa28e576d", "Url": "https://api.github.com/repos/shaubert/masked-input", "Date": "2016-02-15T17:27:19Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (taskToUpdate.isFavorite()) { updatedTask.setAsFavorite(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6386/buggy-version/src.main.java.seedu.address.logic.commands.taskcommands.UpdateTaskCommand.java", "BodyUseAPI": [], "Fixed commit": "4ff50eb636a256894fa4690e5017759255f12cea", "Url": "https://api.github.com/repos/CS2103AUG2016-W15-C2/main", "Date": "2016-10-18T12:27:34Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e instanceof com.i906.mpt.api.prayer.ServerException) { return R.string.error_server; }else { timber.log.Timber.w(e); return defaultResId; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6233/buggy-version/app.src.main.java.com.i906.mpt.common.BaseActivity.java", "BodyUseAPI": ["timber.log.Timber.w(java.lang.Throwable)"], "Fixed commit": "118906da97a3d47dacc13492eed40343ebf3126a", "Url": "https://api.github.com/repos/MalaysiaPrayerTimes/android", "Date": "2016-12-18T14:19:00Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(jTextField3.getText().isEmpty())) { App.login.blueNodeAddress = jTextField3.getText(); if (jTextField4.getText().isEmpty()) { App.login.blueNodePort = kostiskag.unitynetwork.rednode.App.defaultBlueNodeAuthPort; }else { App.login.blueNodePort = java.lang.Integer.parseInt(jTextField4.getText()); } App.login.useNetworkSelectedBN = true; App.login.toggleLogin(); setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3161/buggy-version/src.main.java.kostiskag.unitynetwork.rednode.gui.AdvancedWindow.java", "BodyUseAPI": ["javax.swing.JTextField.getText()"], "Fixed commit": "b674a4542afb2e14d68600daceed31a00b65cf72", "Url": "https://api.github.com/repos/kostiskag/unitynetwork-rednode", "Date": "2017-05-12T21:37:01Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((tag.isReadonly()) || (tag.isDisabled()))) { write(\"<button class=\\\"btn btn-sm btn-default p-uploader-btn\\\">\"); write(html(getText(\"btn-select-file\", \"Browse...\"))); write(\"</button>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2265/buggy-version/panda-gear.src.main.java.panda.mvc.view.tag.ui.theme.simple.UploaderRenderer.java", "BodyUseAPI": [], "Fixed commit": "97715bee54e1f50ad0d3763e243bf4f6a9ac92d0", "Url": "https://api.github.com/repos/pandafw/panda", "Date": "2017-05-15T08:40:15Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.riddles.hackman2.game.board.HackMan2Board.getCoordinateAfterMove(move.getMoveType(),java.awt.Point)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (board.dropBomb(newCoordinate, ((move.getBombTicks()) + 1))) { playerState.updateBombs((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6339/buggy-version/src.java.io.riddles.hackman2.game.processor.HackMan2Processor.java", "BodyUseAPI": [], "Fixed commit": "757a8f6cb29036e44d961053f8a989655eb48599", "Url": "https://api.github.com/repos/riddlesio/hack-man-2-engine", "Date": "2017-11-16T09:25:28Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((_tmpdatas) == null) && ((_model) != null)) && ((_model.getSize()) > 0)) { onInitRenderNow(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8070/buggy-version/zul.src.org.zkoss.zul.Selectbox.java", "BodyUseAPI": [], "Fixed commit": "1e554b6684e20f95290f6b9d0b12702082725821", "Url": "https://api.github.com/repos/VincentJian/zk", "Date": "2013-07-31T09:55:45Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getChild(0).getResult()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (resultOfFirstChild instanceof java.util.List) { ((java.util.List) (result)).addAll(((java.util.List<?>) (resultOfFirstChild))); }else { ((java.util.List) (result)).add(resultOfFirstChild); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2753/buggy-version/src.de.uni_koblenz.edl.parser.stack.elements.ApplicationOfWhitespaceRule.java", "BodyUseAPI": ["de.uni_koblenz.edl.parser.stack.elements.ApplicationOfWhitespaceRule.add(java.lang.Object)"], "Fixed commit": "8d4ace468758f0a33c456ccdad25b025c31d915d", "Url": "https://api.github.com/repos/jgralab/edl", "Date": "2013-04-04T11:14:36Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getChild(0).getResult()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (resultOfFirstChild instanceof java.util.List) { result = resultOfFirstChild; }else { result = new java.util.LinkedList<java.lang.Object>(); if (resultOfFirstChild != null) { ((java.util.List) (result)).add(resultOfFirstChild); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2753/buggy-version/src.de.uni_koblenz.edl.parser.stack.elements.ApplicationOfWhitespaceRule.java", "BodyUseAPI": ["de.uni_koblenz.edl.parser.stack.elements.ApplicationOfWhitespaceRule.add(java.lang.Object)"], "Fixed commit": "8d4ace468758f0a33c456ccdad25b025c31d915d", "Url": "https://api.github.com/repos/jgralab/edl", "Date": "2013-04-04T11:14:36Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (locationClient.isConnected()) { locationClient.requestLocationUpdates(gmsRequest, runningRequests.get(requestId)); }else { final java.lang.String connectRequestId = java.util.UUID.randomUUID().toString(); pendingRequests.put(connectRequestId, new java.lang.Runnable() { @java.lang.Override public void run() { locationClient.requestLocationUpdates(gmsRequest, runningRequests.get(requestId)); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7318/buggy-version/src.main.java.net.atomcode.bearing.location.provider.GMSLocationProvider.java", "BodyUseAPI": ["com.google.android.gms.location.LocationClient.requestLocationUpdates(com.google.android.gms.location.LocationRequest,runningRequests.get(requestId))", "com.google.android.gms.location.LocationClient.requestLocationUpdates(com.google.android.gms.location.LocationRequest,runningRequests.get(requestId))", "java.util.HashMap<java.lang.String, java.lang.Runnable>.put(java.lang.String,java.lang.Runnable)"], "Fixed commit": "5cf5f8caa3ce3dcdf1cefc7e714550fc17b28434", "Url": "https://api.github.com/repos/tom-bell/Bearing", "Date": "2014-05-21T13:12:41Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.LinkedBlockingQueue<com.offbynull.peernetic.core.shuttle.Message>.poll(long,java.util.concurrent.TimeUnit)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (msg != null) { ret.add(msg); readQueue.drainTo(ret); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5478/buggy-version/core.src.main.java.com.offbynull.peernetic.core.gateways.direct.DirectGateway.java", "BodyUseAPI": ["java.util.List<com.offbynull.peernetic.core.shuttle.Message>.add(com.offbynull.peernetic.core.shuttle.Message)"], "Fixed commit": "1d4abd734a33e5f09569823a6bb7b4f7f828774f", "Url": "https://api.github.com/repos/offbynull/actors", "Date": "2015-10-05T03:12:26Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(isDog(animals.get(i)))) { if ((((Cat) (animals.get(i))).isCanShareRun()) == true) { result[pos] = ((Cat) (animals.get(i))); pos++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/286/buggy-version/DogsRUs.src.Kennel.java", "BodyUseAPI": ["java.util.ArrayList<Animal>.get(int)", "java.util.ArrayList<Animal>.get(int)", "((Cat) (animals.get(i))).isCanShareRun()"], "Fixed commit": "137474115e0b5b43ed26d35c7154d4d560e81a17", "Url": "https://api.github.com/repos/SirSharpest/DogsRUs", "Date": "2015-04-19T09:42:08Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (ext.isAssignableFrom(ca.uqac.lif.cep.interpreter.GrammarExtension.class)) { extendGrammar(((java.lang.Class<? extends ca.uqac.lif.cep.interpreter.GrammarExtension>) (ext))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2701/buggy-version/Source.Core.src.ca.uqac.lif.cep.interpreter.Interpreter.java", "BodyUseAPI": [], "Fixed commit": "fdb5b6e8ef33d0cb9140c9f120b4e425dca699ca", "Url": "https://api.github.com/repos/liflab/beepbeep-3", "Date": "2016-01-21T00:52:54Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(entry.getValue().isDirty())) { entry.getValue().setReload(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2572/buggy-version/src.main.java.com.hazelcast.web.HazelcastHttpSession.java", "BodyUseAPI": ["entry.getValue().setReload(boolean)", "java.util.Map.Entry<java.lang.String, com.hazelcast.web.LocalCacheEntry>.getValue()"], "Fixed commit": "0dd0173d38cbaf556ee65363af4f2cee9bc9f7c3", "Url": "https://api.github.com/repos/hazelcast/hazelcast-wm", "Date": "2016-02-18T14:09:11Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mShowTime) { mGameTimer.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2032/buggy-version/app.src.main.java.org.moire.opensudoku.gui.SudokuPlayActivity.java", "BodyUseAPI": [], "Fixed commit": "bbd31a38b481dcb5ef2470ba88b1fd581d5c4fe1", "Url": "https://api.github.com/repos/spimanov/opensudoku", "Date": "2017-11-02T21:39:57Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.axelor.apps.sale.db.SaleOrderLine.getTaxLine()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (taxLine != null) { taxRate = taxLine.getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8723/buggy-version/axelor-supplychain.src.main.java.com.axelor.apps.supplychain.service.SaleOrderStockServiceImpl.java", "BodyUseAPI": ["com.axelor.apps.account.db.TaxLine.getValue()"], "Fixed commit": "61948a17cf64546f5b04c21af399753e669acbad", "Url": "https://api.github.com/repos/axelor/axelor-business-suite", "Date": "2016-04-04T17:23:46Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (mainStatement instanceof jumpingalien.program.statement.Sequence) for (jumpingalien.program.statement.Statement s : ((jumpingalien.program.statement.Sequence) (mainStatement)).getStatements()) if (s instanceof jumpingalien.program.statement.Break) setWellFormed(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1964/buggy-version/src.jumpingalien.program.program.Program.java", "BodyUseAPI": [], "Fixed commit": "7563fa9835edd375b1f3c8f64db666a14642a3d6", "Url": "https://api.github.com/repos/EllenVissers/OGP1415", "Date": "2015-05-23T12:36:42Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (mainStatement instanceof jumpingalien.program.statement.Break) setWellFormed(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1964/buggy-version/src.jumpingalien.program.program.Program.java", "BodyUseAPI": [], "Fixed commit": "7563fa9835edd375b1f3c8f64db666a14642a3d6", "Url": "https://api.github.com/repos/EllenVissers/OGP1415", "Date": "2015-05-23T12:36:42Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((com.edulectronics.tinycircuit.Models.Components.Component) (element)).hasInputAndOutputConnection()) ((com.edulectronics.tinycircuit.Models.Components.Component) (element)).handleInputHigh();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1807/buggy-version/app.src.main.java.com.edulectronics.tinycircuit.Controllers.CircuitAnimator.java", "BodyUseAPI": ["java.lang.Object.handleInputHigh()"], "Fixed commit": "f263893e5e41df2ea862843c2c62ca81d1da73d4", "Url": "https://api.github.com/repos/wzwietering/IntroductieProject", "Date": "2017-01-23T13:05:12Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nextComponent.hasInputAndOutputConnection()) && (currentComponent.hasInputAndOutputConnection())) this.highlightBetween(currentComponent, nextComponent, color, drawingMode);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1807/buggy-version/app.src.main.java.com.edulectronics.tinycircuit.Controllers.CircuitAnimator.java", "BodyUseAPI": ["com.edulectronics.tinycircuit.Controllers.CircuitAnimator.highlightBetween(com.edulectronics.tinycircuit.Models.Components.Component,com.edulectronics.tinycircuit.Models.Components.Component,int,Wire.WireDrawingMode)"], "Fixed commit": "f263893e5e41df2ea862843c2c62ca81d1da73d4", "Url": "https://api.github.com/repos/wzwietering/IntroductieProject", "Date": "2017-01-23T13:05:12Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(authorNames.equals(\"\"))) { publicationDetails.put(\"coauthor\", authorNames.substring(0, ((authorNames.length()) - 1))); publicationDetails.put(\"coauthorUrl\", authorUrl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1293/buggy-version/src.main.java.de.rwth.i9.palm.datasetcollect.service.DblpEventCollection.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "04c51211bf07fa6939085467034936e343439463", "Url": "https://api.github.com/repos/palm-toolkit/palm-core", "Date": "2015-10-15T16:25:25Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((pubSourceDate.length()) == 4) { pubSourceDate += \"/1/1\"; publicationDateFormat = \"yyyy\"; }else if ((pubSourceDate.length()) < 8) { pubSourceDate += \"/1\"; publicationDateFormat = \"yyyy/M\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1293/buggy-version/src.main.java.de.rwth.i9.palm.datasetcollect.service.EventPublicationCollectionService.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "04c51211bf07fa6939085467034936e343439463", "Url": "https://api.github.com/repos/palm-toolkit/palm-core", "Date": "2015-10-15T16:25:25Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4632/buggy-version/library.src.main.java.com.dm.wallpaper.board.fragments.CategoriesFragment.java", "BodyUseAPI": [], "Fixed commit": "8c035f73dd20028962db06fddf122cc4de1368bb", "Url": "https://api.github.com/repos/danimahardhika/wallpaperboard", "Date": "2017-12-26T03:58:37Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getActivity().isFinishing()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4632/buggy-version/library.src.main.java.com.dm.wallpaper.board.fragments.CategoriesFragment.java", "BodyUseAPI": [], "Fixed commit": "8c035f73dd20028962db06fddf122cc4de1368bb", "Url": "https://api.github.com/repos/danimahardhika/wallpaperboard", "Date": "2017-12-26T03:58:37Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT)) { cordova.getActivity().runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT)) { android.webkit.WebView.setWebContentsDebuggingEnabled(true); } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7155/buggy-version/src.android.com.commontime.cordova.plugins.preferences.Preferences.java", "BodyUseAPI": ["cordova.getActivity().runOnUiThread(java.lang.Runnable)"], "Fixed commit": "08c04b8a0183d2e2de51a9ec17157e1ab2371dbe", "Url": "https://api.github.com/repos/commontime/com.commontime.cordova.preferences", "Date": "2017-10-17T13:35:55Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sectionIndex < (mSections.length)) { position = mIndexer.get(mSections[sectionIndex]); }else { position = mIndexer.get(mSections[((mSections.length) - 1)]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4203/buggy-version/fanfictionReader.src.main.java.com.spicymango.fanfictionreader.menu.categorymenu.CategoryMenuAdapter.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Character, java.lang.Integer>.get(java.lang.Character)", "java.util.HashMap<java.lang.Character, java.lang.Integer>.get(java.lang.Character)"], "Fixed commit": "7ad3544d98369e5e9cae7857e617a6be87e052e4", "Url": "https://api.github.com/repos/genious7/FanFictionReader", "Date": "2016-01-13T02:04:36Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) > 0) { if (args[0].equals(\"users\")) { org.jinstagram.auth.model.Token secretToken = edu.usc.tcors.utils.TcorsInstagramUtils.getSecretToken(); org.jinstagram.Instagram instagram = new org.jinstagram.Instagram(secretToken); edu.usc.tcors.utils.TcorsInstagramUtils.updateUsers(conn, instagram); } if (args[0].equals(\"images\")) { int loops = 1; if ((args[1]) != null) loops = java.lang.Integer.parseInt(args[1]); for (int x = 0; x < loops; x++) { edu.usc.tcors.utils.TcorsInstagramUtils.getImages(conn); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4076/buggy-version/src.edu.usc.tcors.utils.TcorsInstagramUtils.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "7e233cdb95d433c77175189c972bb18f16002e6b", "Url": "https://api.github.com/repos/karhai/TcorsMiner", "Date": "2015-09-16T23:38:22Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((moon) == null) { moon = new com.estudio.cheke.game.gstb.objects.Moon(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6627/buggy-version/src.com.estudio.cheke.game.gstb.Mover.java", "BodyUseAPI": [], "Fixed commit": "96270aea032c5eef526ceeb32e3318521f5ee5db", "Url": "https://api.github.com/repos/cheke/God-Save-The-Bag", "Date": "2012-05-17T01:09:47Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(context.isRowExpanded())) { super.moveRowPositionIntoViewport(scrollableRowPosition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6679/buggy-version/src.gui.org.deidentifier.arx.gui.view.impl.common.table.LayerViewport.java", "BodyUseAPI": [], "Fixed commit": "6d9abb0050a0dca351b75bab75d0db10c820e4b3", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-08-18T19:26:26Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(context.isColumnExpanded())) { super.moveColumnPositionIntoViewport(scrollableColumnPosition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6679/buggy-version/src.gui.org.deidentifier.arx.gui.view.impl.common.table.LayerViewport.java", "BodyUseAPI": [], "Fixed commit": "6d9abb0050a0dca351b75bab75d0db10c820e4b3", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-08-18T19:26:26Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((context.isRowExpanded()) && (context.isColumnExpanded()))) { super.moveCellPositionIntoViewport(scrollableColumnPosition, scrollableRowPosition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6679/buggy-version/src.gui.org.deidentifier.arx.gui.view.impl.common.table.LayerViewport.java", "BodyUseAPI": [], "Fixed commit": "6d9abb0050a0dca351b75bab75d0db10c820e4b3", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-08-18T19:26:26Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.randoom.setlx.expressions.Expr.eval(org.randoom.setlx.utilities.State)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (v.isDouble().equalTo(SetlBoolean.TRUE)) { return v.jDoubleValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/68/buggy-version/interpreter.plot_addon.src.main.java.org.randoom.setlx.utilities.CalcFunction.java", "BodyUseAPI": ["org.randoom.setlx.types.Value.jDoubleValue()"], "Fixed commit": "7eb32c9edc69c8227ae725a3e6d6b25b19ba7456", "Url": "https://api.github.com/repos/topfdrummer/setlX", "Date": "2015-05-21T11:45:50Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.randoom.setlx.expressions.Expr.eval(org.randoom.setlx.utilities.State)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (v.isInteger().equalTo(SetlBoolean.TRUE)) { return ((double) (v.jIntValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/68/buggy-version/interpreter.plot_addon.src.main.java.org.randoom.setlx.utilities.CalcFunction.java", "BodyUseAPI": ["org.randoom.setlx.types.Value.jIntValue()"], "Fixed commit": "7eb32c9edc69c8227ae725a3e6d6b25b19ba7456", "Url": "https://api.github.com/repos/topfdrummer/setlX", "Date": "2015-05-21T11:45:50Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (adbDevicesOutput.contains(com.github.pedrovgs.androidwifiadb.adb.ADBParser.DAEMON_INDICATOR)) { return devices; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3947/buggy-version/src.main.java.com.github.pedrovgs.androidwifiadb.adb.ADBParser.java", "BodyUseAPI": [], "Fixed commit": "d853e50bda7b8bdcd8c766ca5511e086b9793df9", "Url": "https://api.github.com/repos/pedrovgs/AndroidWiFiADB", "Date": "2015-10-19T20:27:00Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jinhaoplus.oj.domain.ProblemSolution.getSolutionLanguage()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"go\".equals(lang)) { langCoreService = goCoreServiceImpl; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4043/buggy-version/src.com.jinhaoplus.oj.service.impl.CoreDisptcherService.java", "BodyUseAPI": [], "Fixed commit": "c643aab18c97aff84b72b70475a659a1f0f56be9", "Url": "https://api.github.com/repos/JinhaoPlus/PlusOnlineJudge", "Date": "2016-03-31T03:45:20Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((dataViewer) == null) || (dataViewer.getControl().isDisposed())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8273/buggy-version/org.dawb.workbench.ui.src.org.dawb.workbench.ui.editors.PlotDataComponent.java", "BodyUseAPI": [], "Fixed commit": "fd52f2dfeeca3d8b40428f519ded02a18160d612", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2013-08-22T15:33:12Z"},
{"Line": "=>1630", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getPlottingSystem()) != null) && ((dataViewRefreshListener) != null)) { getPlottingSystem().removeTraceListener(this.dataViewRefreshListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8273/buggy-version/org.dawb.workbench.ui.src.org.dawb.workbench.ui.editors.PlotDataComponent.java", "BodyUseAPI": [], "Fixed commit": "fd52f2dfeeca3d8b40428f519ded02a18160d612", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2013-08-22T15:33:12Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(node.includeMode)) { emitAbsoluteInstruction(\".TF\", node.targetFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3074/buggy-version/Compiler.java.AppleCoreCompiler.CodeGen.SCMacroWriter.java", "BodyUseAPI": ["AppleCoreCompiler.CodeGen.SCMacroWriter.emitAbsoluteInstruction(java.lang.String,node.targetFile)"], "Fixed commit": "81fd8321c204ed0bdb704ab62e4644ca4a67c34e", "Url": "https://api.github.com/repos/bocchino/AppleCore", "Date": "2011-12-14T05:56:04Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size()) == 0) { currentIndex_ = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1452/buggy-version/app.src.main.java.com.mamewo.malarm24.M3UPlaylist.java", "BodyUseAPI": [], "Fixed commit": "8a54234d683aa3b9ee5d13b3cf9547671235114a", "Url": "https://api.github.com/repos/mamewotoko/malarm", "Date": "2017-01-03T10:20:34Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.person) == null) index = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5760/buggy-version/src.edu.stanford.nlp.sempre.thingtalk.ParametricValue.java", "BodyUseAPI": [], "Fixed commit": "b164ced69cb4be561fc64bcd96e9371ccc465e2d", "Url": "https://api.github.com/repos/Stanford-Mobisocial-IoT-Lab/sempre", "Date": "2017-05-04T00:30:01Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((person) != null) tree.addChild(person.toLispTree());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5760/buggy-version/src.edu.stanford.nlp.sempre.thingtalk.ParametricValue.java", "BodyUseAPI": [], "Fixed commit": "b164ced69cb4be561fc64bcd96e9371ccc465e2d", "Url": "https://api.github.com/repos/Stanford-Mobisocial-IoT-Lab/sempre", "Date": "2017-05-04T00:30:01Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.erlide.engine.services.codeassist.CompletionData.getDisplayString()", "org.erlide.engine.services.codeassist.CompletionData.getDisplayString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((s1.startsWith(prefix)) && (s2.startsWith(prefix))) { return s1.compareTo(s2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1837/buggy-version/org.erlide.model.api.src.org.erlide.engine.services.codeassist.CompletionNameComparer.java", "BodyUseAPI": ["java.lang.String.compareTo(java.lang.String)"], "Fixed commit": "c941bb36f6f40d652a72698d73dbdf99ee49671f", "Url": "https://api.github.com/repos/erlang/erlide_eclipse", "Date": "2016-05-24T20:05:35Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (recipe == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1273/buggy-version/src.common.ro.narc.liquiduu.TileEntityAccelerator.java", "BodyUseAPI": [], "Fixed commit": "f7e2e0d575cbf9780af8ff7371e5e45231921135", "Url": "https://api.github.com/repos/narc0tiq/LiquidUU", "Date": "2012-11-14T13:44:43Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ro.narc.liquiduu.TileEntityAccelerator.getConnectedMachine()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (te == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1273/buggy-version/src.common.ro.narc.liquiduu.TileEntityAccelerator.java", "BodyUseAPI": [], "Fixed commit": "f7e2e0d575cbf9780af8ff7371e5e45231921135", "Url": "https://api.github.com/repos/narc0tiq/LiquidUU", "Date": "2012-11-14T13:44:43Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ro.narc.liquiduu.TileEntityAccelerator.getConnectedMachine()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (te == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1273/buggy-version/src.common.ro.narc.liquiduu.TileEntityAccelerator.java", "BodyUseAPI": [], "Fixed commit": "f7e2e0d575cbf9780af8ff7371e5e45231921135", "Url": "https://api.github.com/repos/narc0tiq/LiquidUU", "Date": "2012-11-14T13:44:43Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["egg.getItemMeta().getDisplayName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (eggName == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6863/buggy-version/src.org.caliog.Rolecraft.XMechanics.Listeners.RolecraftListener.java", "BodyUseAPI": [], "Fixed commit": "331fe928479901ab9474f628db61a405c41289b4", "Url": "https://api.github.com/repos/caliog/Rolecraft", "Date": "2017-03-12T19:55:22Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((s.length) < 2) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6863/buggy-version/src.org.caliog.Rolecraft.XMechanics.Listeners.RolecraftListener.java", "BodyUseAPI": [], "Fixed commit": "331fe928479901ab9474f628db61a405c41289b4", "Url": "https://api.github.com/repos/caliog/Rolecraft", "Date": "2017-03-12T19:55:22Z"},
{"Line": "=>1767", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (resource != null) imageView.setImageBitmap(resource);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4395/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.helper.Helper.java", "BodyUseAPI": ["android.widget.ImageView.setImageBitmap(android.graphics.Bitmap)"], "Fixed commit": "fec0b38056a23cf914e76dc8b8580043b3341a0d", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2017-12-16T07:17:42Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((productionFrontier == null) || ((productionFrontier.getRules()) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8303/buggy-version/src.games.strategy.triplea.ai.proAI.data.ProPurchaseOptionMap.java", "BodyUseAPI": [], "Fixed commit": "bd31a2f6c6b052fbbdb06676222e58e6f2214bdf", "Url": "https://api.github.com/repos/DanVanAtta/triplea", "Date": "2016-01-04T04:26:44Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<games.strategy.engine.data.Territory, java.util.List<games.strategy.triplea.ai.proAI.data.ProTerritory>>.get(games.strategy.engine.data.Territory)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (result != null) { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8303/buggy-version/src.games.strategy.triplea.ai.proAI.data.ProOtherMoveOptions.java", "BodyUseAPI": [], "Fixed commit": "bd31a2f6c6b052fbbdb06676222e58e6f2214bdf", "Url": "https://api.github.com/repos/DanVanAtta/triplea", "Date": "2016-01-04T04:26:44Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.startingTeamStatus.isSubstitutePosition()) && (objectToCompare.startingTeamStatus.isStartingPosition())) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2025/buggy-version/fantasy-draft-integration.src.main.java.net.blackcat.fantasy.draft.integration.model.SelectedPlayer.java", "BodyUseAPI": [], "Fixed commit": "d5535bc9a2750087d5f46884d5e410f8b90c8908", "Url": "https://api.github.com/repos/chrishern/fantasy-draft-integration", "Date": "2015-08-18T05:50:28Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.startingTeamStatus.isSubstitutePosition()) && (objectToCompare.startingTeamStatus.isSubstitutePosition())) { return this.startingTeamStatus.compareTo(objectToCompare.startingTeamStatus); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2025/buggy-version/fantasy-draft-integration.src.main.java.net.blackcat.fantasy.draft.integration.model.SelectedPlayer.java", "BodyUseAPI": ["net.blackcat.fantasy.draft.integration.model.types.player.StartingTeamStatus.compareTo(net.blackcat.fantasy.draft.integration.model.types.player.StartingTeamStatus)"], "Fixed commit": "d5535bc9a2750087d5f46884d5e410f8b90c8908", "Url": "https://api.github.com/repos/chrishern/fantasy-draft-integration", "Date": "2015-08-18T05:50:28Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.startingTeamStatus.isStartingPosition()) && (objectToCompare.startingTeamStatus.isSubstitutePosition())) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2025/buggy-version/fantasy-draft-integration.src.main.java.net.blackcat.fantasy.draft.integration.model.SelectedPlayer.java", "BodyUseAPI": [], "Fixed commit": "d5535bc9a2750087d5f46884d5e410f8b90c8908", "Url": "https://api.github.com/repos/chrishern/fantasy-draft-integration", "Date": "2015-08-18T05:50:28Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((((nick == null) || (nick.equals(\"\"))) || (pass == null)) || (pass.equals(\"\"))) || (mail == null)) || (mail.equals(\"\"))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8081/buggy-version/src.main.java.org.trainingTracker.database.dataAccesObject.UsersDAO.java", "BodyUseAPI": [], "Fixed commit": "816fec92542671664d69e0475534ece4a4751395", "Url": "https://api.github.com/repos/Electryk/trainingTracker", "Date": "2016-12-13T16:34:13Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((tokenBranchAtMatchesCode(index, in.nickma.ARITHMETIC_EXPRESSION)) && (tokenBranchAtMatchesCode((index + 1), in.nickma.ARITHMETIC_OPERATOR))) && (tokenBranchAtMatchesCode((index + 2), in.nickma.IDENTIFIER))) { createAndAddTokenBranchObjectFromIndices(in.nickma.ARITHMETIC_EXPRESSION, index, (index + 2)); return true; }else if (((tokenBranchAtMatchesCode(index, in.nickma.IDENTIFIER)) && (tokenBranchAtMatchesCode((index + 1), in.nickma.ARITHMETIC_OPERATOR))) && (tokenBranchAtMatchesCode((index + 2), in.nickma.IDENTIFIER))) { createAndAddTokenBranchObjectFromIndices(in.nickma.ARITHMETIC_EXPRESSION, index, (index + 2)); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6496/buggy-version/src.in.nickma.Parser.java", "BodyUseAPI": ["in.nickma.Parser.createAndAddTokenBranchObjectFromIndices(in.nickma.ARITHMETIC_EXPRESSION,int,int)", "in.nickma.Parser.tokenBranchAtMatchesCode(int,in.nickma.IDENTIFIER)", "in.nickma.Parser.tokenBranchAtMatchesCode(int,in.nickma.ARITHMETIC_OPERATOR)", "in.nickma.Parser.tokenBranchAtMatchesCode(int,in.nickma.IDENTIFIER)", "in.nickma.Parser.createAndAddTokenBranchObjectFromIndices(in.nickma.ARITHMETIC_EXPRESSION,int,int)"], "Fixed commit": "0a4df031071fe68ccbb2857a775ffe3eeb4073b5", "Url": "https://api.github.com/repos/TheNickmaster21/CS4308InterpreterProject", "Date": "2017-11-24T21:19:12Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.softhenge.supren.exif.service.ExifService.getExifInfoFromImageFile(imageFile.getImageFile())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (exifFileInfo == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/891/buggy-version/supRen.src.main.java.ch.softhenge.supren.exif.service.ImageService.java", "BodyUseAPI": [], "Fixed commit": "fcf584b034f9d485b1c2fe357eade556f08fa00b", "Url": "https://api.github.com/repos/chutz68/general", "Date": "2015-01-05T21:16:54Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(\"/login\".equals(httpRequest.getRequestURI()))) && ((httpRequest.getHeader(ConstantsHead.Pid)) == null)) { throw new com.project.common.exception.SystemException(com.project.common.data.ResponseMsg.AUTHORIZATION_ERROR_1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4021/buggy-version/project.project-rest.src.main.java.com.project.rest.restful.filter.RequestAuthorizationValidator.java", "BodyUseAPI": [], "Fixed commit": "169bbe63bfb2c9895f5c4c48d87b20a35c6c906f", "Url": "https://api.github.com/repos/zhibozhao/project1", "Date": "2017-11-22T09:29:51Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.base.equals(\"oracle\")) { sql = \"SELECT (LAST_NUMBER-1) as LAST_NUMBER FROM USER_SEQUENCES WHERE SEQUENCE_NAME = 'SEQ_CODIGO_CADNAVIO'\"; }else { sql = \"SELECT LAST_VALUE AS LAST_NUMBER FROM CADNAVIO_CODIGONAVIO_SEQ\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3735/buggy-version/src.model.dao.NavioDAO.java", "BodyUseAPI": [], "Fixed commit": "7cab31a8917d5e032b3d5cf4c7bfe960d305545b", "Url": "https://api.github.com/repos/jlsneto/FwBoarding", "Date": "2017-12-06T03:18:40Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((app.getAttributes().size()) > 0) { attributes = \"\\n\"; for (java.util.Map.Entry<java.lang.String, java.lang.String> attribute : app.getAttributes().entrySet()) { attributes += (((\" \" + (attribute.getKey())) + \": \") + (attribute.getValue())) + \"\\n\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2993/buggy-version/server.src.main.java.org.opentosca.toscana.plugins.cloudfoundry.CloudFoundryFileCreator.java", "BodyUseAPI": ["app.getAttributes().entrySet()", "org.opentosca.toscana.plugins.cloudfoundry.CloudFoundryApplication.getAttributes()"], "Fixed commit": "f5a513f17d5f64ea64aa0b17c909d6a0aba0b320", "Url": "https://api.github.com/repos/StuPro-TOSCAna/TOSCAna", "Date": "2017-12-01T20:58:45Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldEncoding.equals(\"undefined\")) { oldEncoding = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6560/buggy-version/52n-wps-webapp.src.main.java.org.n52.wps.webapp.web.GeneratorsController.java", "BodyUseAPI": [], "Fixed commit": "6c40bd4ca089557252623fad272077cca1e6f948", "Url": "https://api.github.com/repos/bpross-52n/WPS", "Date": "2016-06-14T07:58:37Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldSchema.equals(\"undefined\")) { oldSchema = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6560/buggy-version/52n-wps-webapp.src.main.java.org.n52.wps.webapp.web.GeneratorsController.java", "BodyUseAPI": [], "Fixed commit": "6c40bd4ca089557252623fad272077cca1e6f948", "Url": "https://api.github.com/repos/bpross-52n/WPS", "Date": "2016-06-14T07:58:37Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (plugins != null) { this.plugins = plugins; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8420/buggy-version/src.main.java.org.jsoftware.restclient.impl.DefaultRestClient.java", "BodyUseAPI": [], "Fixed commit": "6d26976b05d41ac4aa5d84180b939b1bf20eb890", "Url": "https://api.github.com/repos/m-szalik/rest-client", "Date": "2016-01-07T16:07:44Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.core.annotation.AnnotationUtils.findAnnotation(java.lang.reflect.Method,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((com.slyak.core.spring.web.ObjectUtils.isEmpty(annot.value())) || (com.slyak.core.spring.web.StringUtils.isEmpty(annot.value()[0]))) { return org.apache.commons.lang3.StringUtils.EMPTY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7658/buggy-version/src.main.java.com.slyak.core.spring.web.MvcUriComponentsBuilder.java", "BodyUseAPI": [], "Fixed commit": "d50f2fb2c4586623dacbf894dd80787c75ab55b1", "Url": "https://api.github.com/repos/stormning/slyak-core", "Date": "2015-06-25T09:37:40Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.core.annotation.AnnotationUtils.findAnnotation(java.lang.Class<?>,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((com.slyak.core.spring.web.ObjectUtils.isEmpty(annot.value())) || (com.slyak.core.spring.web.StringUtils.isEmpty(annot.value()[0]))) { return org.apache.commons.lang3.StringUtils.EMPTY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7658/buggy-version/src.main.java.com.slyak.core.spring.web.MvcUriComponentsBuilder.java", "BodyUseAPI": [], "Fixed commit": "d50f2fb2c4586623dacbf894dd80787c75ab55b1", "Url": "https://api.github.com/repos/stormning/slyak-core", "Date": "2015-06-25T09:37:40Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dotmarketing.business.APILocator.getWorkflowAPI().findSchemeForStruct(c.getStructure())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((null != wfscheme) && (!(wfscheme.isMandatory()))) com.dotmarketing.business.APILocator.getContentletAPI().publish(c, com.dotmarketing.business.APILocator.getUserAPI().loadUserById(c.getModUser(), systemU, false), false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5012/buggy-version/plugins.com.eng.dotcms.additions.src.com.eng.dotcms.additions.publisher.PublisherQueueJob.java", "BodyUseAPI": [], "Fixed commit": "a7b2aeed5a13f51e22320f594b18cb38f6b66d62", "Url": "https://api.github.com/repos/engineering-dotcms/dotCMS", "Date": "2013-12-10T15:22:37Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((com.cronutils.model.field.expression.Every) (cronField.getExpression())).getExpression()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (expression instanceof com.cronutils.model.field.expression.On) { return ((com.cronutils.model.field.expression.On) (expression)).getTime().getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3176/buggy-version/src.main.java.com.cronutils.model.time.generator.EveryFieldValueGenerator.java", "BodyUseAPI": [], "Fixed commit": "2835792fec8ec2be94d290c9fae688d16fad3fa0", "Url": "https://api.github.com/repos/jmrozanec/cron-utils", "Date": "2016-11-17T17:10:46Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (start != (offset())) { values.add(offset()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3176/buggy-version/src.main.java.com.cronutils.model.time.generator.EveryFieldValueGenerator.java", "BodyUseAPI": [], "Fixed commit": "2835792fec8ec2be94d290c9fae688d16fad3fa0", "Url": "https://api.github.com/repos/jmrozanec/cron-utils", "Date": "2016-11-17T17:10:46Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.thecn.app.tools.network.GlobalGson.getString(jObject.get(\"type\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type.equalsIgnoreCase(\"like_content\")) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5525/buggy-version/CNAndroidApp.src.main.java.com.thecn.app.tools.network.GlobalGson.java", "BodyUseAPI": [], "Fixed commit": "04a08628566e74a48cb8bed3112ad9e6480a867e", "Url": "https://api.github.com/repos/milanmanvar/CNAndroidApp-Milan", "Date": "2016-05-21T05:08:56Z"},
{"Line": "=>1697", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opencms.main.OpenCms.getSiteManager().getSiteForRootPath(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (site != null) { siteRoot = site.getSiteRoot(); vfsName = org.opencms.util.CmsStringUtil.joinPaths(\"/\", vfsName.substring(siteRoot.length())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6342/buggy-version/src.org.opencms.staticexport.CmsStaticExportManager.java", "BodyUseAPI": ["org.opencms.site.CmsSite.getSiteRoot()"], "Fixed commit": "b71f81d96d1c491065f91cfd25920c8314098d25", "Url": "https://api.github.com/repos/serrapos/opencms-core", "Date": "2012-01-18T12:02:23Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (contextString.equals(\"\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3472/buggy-version/src.main.java.ixa.pipe.ned_ukb.Annotate.java", "BodyUseAPI": [], "Fixed commit": "eb6c38a72a668001afca5105dc9d32bc9d258b0d", "Url": "https://api.github.com/repos/ixa-ehu/ixa-pipe-ned-ukb", "Date": "2016-08-30T15:06:53Z"},
{"Line": "=>3593", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.util.ParamUtil.getLong(javax.portlet.ActionRequest,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (serviceDomainId > 0) { domainItem = org.opencps.datamgt.service.DictItemLocalServiceUtil.getDictItem(serviceDomainId); serviceDomainIndex = domainItem.getTreeIndex(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4084/buggy-version/portlets.opencps-portlet.docroot.WEB-INF.src.org.opencps.dossiermgt.portlet.DossierMgtFrontOfficePortlet.java", "BodyUseAPI": ["org.opencps.datamgt.service.DictItemLocalServiceUtil.getDictItem(long)"], "Fixed commit": "98c269420cb7c6504726305e908481688b630900", "Url": "https://api.github.com/repos/nhan0987/opencps", "Date": "2016-10-21T10:14:18Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openintents.cloudsync.util.SyncUtil.mapTheMatrix(long[][],int,long,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((task.getTag()) == 'D') & (localId == (-1))) { continue; }else { org.openintents.cloudsync.AsyncSync.jsonBuilder = org.openintents.cloudsync.util.SyncUtil.addToJson(org.openintents.cloudsync.AsyncSync.jsonBuilder, localId, gId, jsonString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8409/buggy-version/CloudSync-Android.src.org.openintents.cloudsync.AsyncSync.java", "BodyUseAPI": ["org.openintents.cloudsync.util.SyncUtil.addToJson(java.lang.StringBuilder,long,long,java.lang.String)"], "Fixed commit": "77cc06d92a432d29e4c7c77c65cb1efb06ab9759", "Url": "https://api.github.com/repos/gastly/cloudsync", "Date": "2012-07-08T19:14:38Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.mInterface) != null) { this.mInterface.onPlayerWin(finalCell.getPlayer()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1365/buggy-version/src.bour.camus.gameofgooses.models.Game.java", "BodyUseAPI": [], "Fixed commit": "172ed245bbb001fa056614220f8444006fa7a411", "Url": "https://api.github.com/repos/Tydax/game-of-gooses", "Date": "2014-09-30T07:24:00Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((menuShareItem) != null) && (((noTrailers.getVisibility()) == (android.view.View.VISIBLE)) || ((cannotLoadTrailers.getVisibility()) == (android.view.View.VISIBLE)))) || ((no_movie_view.getVisibility()) == (android.view.View.VISIBLE))) { menuShareItem.setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2090/buggy-version/app.src.main.java.com.moviesapp.amrelmasry.popular_movies_app.MovieDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "1a9bb652dad8afff5bcebad7c165b610de518ba1", "Url": "https://api.github.com/repos/AmrElmasry/Popular-Movies-app", "Date": "2015-10-06T10:33:29Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((menuShareItem) != null) { menuShareItem.setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2090/buggy-version/app.src.main.java.com.moviesapp.amrelmasry.popular_movies_app.MovieDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "1a9bb652dad8afff5bcebad7c165b610de518ba1", "Url": "https://api.github.com/repos/AmrElmasry/Popular-Movies-app", "Date": "2015-10-06T10:33:29Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((menuShareItem) != null) { menuShareItem.setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2090/buggy-version/app.src.main.java.com.moviesapp.amrelmasry.popular_movies_app.MovieDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "1a9bb652dad8afff5bcebad7c165b610de518ba1", "Url": "https://api.github.com/repos/AmrElmasry/Popular-Movies-app", "Date": "2015-10-06T10:33:29Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mGoogleAPIClientConnected) { stopLocationUpdates(); removeGeofences(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3856/buggy-version/mobile.src.main.java.app.mapquest.com.mapquest.MapDisplay.java", "BodyUseAPI": [], "Fixed commit": "bb3e069dae54dcebd02d8d00e44ae2efc9409b4e", "Url": "https://api.github.com/repos/danagu/MapQuest", "Date": "2015-06-12T17:57:07Z"},
{"Line": "=>495", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cluster.manager.preparedQueries.containsKey(bs.statement.getPreparedId().id))) { throw new com.datastax.driver.core.exceptions.InvalidQueryException(java.lang.String.format((\"Tried to execute unknown prepared query : %s. \" + \"You may have used a PreparedStatement that was created with another Cluster instance.\"), bs.statement.getPreparedId().id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5040/buggy-version/driver-core.src.main.java.com.datastax.driver.core.SessionManager.java", "BodyUseAPI": ["bs.statement.getPreparedId()", "java.lang.String.format(java.lang.String,bs.statement.getPreparedId().id)"], "Fixed commit": "6653fc28b000dca785d9cd253c70a2e33eff8adb", "Url": "https://api.github.com/repos/newkek/java-driver", "Date": "2015-03-10T11:26:41Z"},
{"Line": "=>986", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["rjjson.get(\"type\").toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type.equalsIgnoreCase(\"insert\")) data = ((org.json.simple.JSONObject) (rjjson.get(\"data\"))); else data = ((org.json.simple.JSONObject) (rjjson.get(\"set_data\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4263/buggy-version/src.java.ViewManager.ViewManagerController.java", "BodyUseAPI": [], "Fixed commit": "4536454250d199a91dfcc4222d0a5587157f60b9", "Url": "https://api.github.com/repos/abdelrahmanbadawy/Cassandra-VMS", "Date": "2015-10-15T21:54:19Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isSetStart)) { isInvaild = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7696/buggy-version/library.src.main.java.com.tomduan.library.CircleSeekBar.java", "BodyUseAPI": [], "Fixed commit": "88465be988dddd0af9512b27b6a0c385f4b873e4", "Url": "https://api.github.com/repos/DuanTzXavier/conciseclock", "Date": "2016-04-15T06:22:43Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.util.concurrent.ListenableFuture<java.util.LinkedHashMap<java.lang.String, java.util.List<com.github.cheesesoftware.PowerfulPermsAPI.CachedGroup>>>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (unknow.keySet().isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8674/buggy-version/src.main.java.tw.mics.spigot.plugin.mkess.listener.PlayerVIPExpiredListener.java", "BodyUseAPI": [], "Fixed commit": "bdfbede702999a70b0074a9326d5c8088e3d6000", "Url": "https://api.github.com/repos/MkIIServer/MkEss", "Date": "2016-12-26T07:49:55Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(envTopicsList.isEmpty())) { target.put(MdekKeys.ENV_TOPICS, envTopicsList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8510/buggy-version/ingrid-import-export.src.main.java.de.ingrid.mdek.xml.importer.mapper.AbstractXMLToDocMapper.java", "BodyUseAPI": ["de.ingrid.utils.IngridDocument.put(MdekKeys.ENV_TOPICS,java.util.List<java.lang.Integer>)"], "Fixed commit": "65a0504675100f81e2cdf0dc0d2667d4d570a101", "Url": "https://api.github.com/repos/informationgrid/ingrid-mdek", "Date": "2016-12-06T14:39:35Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(openDataList.isEmpty())) { target.put(MdekKeys.OPEN_DATA_CATEGORY_LIST, openDataList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8510/buggy-version/ingrid-import-export.src.main.java.de.ingrid.mdek.xml.importer.mapper.AbstractXMLToDocMapper.java", "BodyUseAPI": ["de.ingrid.utils.IngridDocument.put(MdekKeys.OPEN_DATA_CATEGORY_LIST,java.util.List<de.ingrid.utils.IngridDocument>)"], "Fixed commit": "65a0504675100f81e2cdf0dc0d2667d4d570a101", "Url": "https://api.github.com/repos/informationgrid/ingrid-mdek", "Date": "2016-12-06T14:39:35Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((relation.getType()) == (Relation.TYPE.UNDER)) { if ((relation.getEntityA().getForm()) == (Entity.FORM.BALL)) { return false; } if (((relation.getEntityA().getSize()) == (Entity.SIZE.SMALL)) && ((relation.getEntityB().getSize()) == (Entity.SIZE.LARGE))) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5366/buggy-version/javaprolog.ConstraintCheck.java", "BodyUseAPI": ["relation.getEntityA().getForm()", "relation.getEntityA().getSize()", "Relation.getEntityB()", "relation.getEntityB().getSize()", "Relation.getEntityA()", "Relation.getEntityA()"], "Fixed commit": "0f7e77bd6144c66fc1bde1522d08247c3e648181", "Url": "https://api.github.com/repos/Ramqvist/shrdlite-template", "Date": "2014-04-09T14:18:43Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ConstraintCheck.isValidRelations(relationListAll)) { goalList.add(new Goal(relationListAll)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5366/buggy-version/javaprolog.Interpreter.java", "BodyUseAPI": ["java.util.List<Goal>.add(Goal)"], "Fixed commit": "0f7e77bd6144c66fc1bde1522d08247c3e648181", "Url": "https://api.github.com/repos/Ramqvist/shrdlite-template", "Date": "2014-04-09T14:18:43Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.freeplane.plugin.workspace.WorkspaceController.getMapModelExtension(org.freeplane.features.mode.Controller.getCurrentController().getMap())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (ext != null) { org.freeplane.plugin.workspace.model.project.AWorkspaceProject project = ext.getProject(); if (project != null) { org.docear.plugin.bibtex.JabRefProjectExtension jpe = ((org.docear.plugin.bibtex.JabRefProjectExtension) (project.getExtensions(org.docear.plugin.bibtex.JabRefProjectExtension.class))); if ((jpe != null) && (!(jpe.getBaseHandle().getBasePanel().equals(bp)))) { jpe.selectBasePanel(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1112/buggy-version/docear_plugin_bibtex.src.org.docear.plugin.bibtex.listeners.MapViewListener.java", "BodyUseAPI": ["org.freeplane.plugin.workspace.features.WorkspaceMapModelExtension.getProject()"], "Fixed commit": "6ee0587d8599c059582b5e42d0020c11ef309961", "Url": "https://api.github.com/repos/Docear/Desktop", "Date": "2013-04-24T13:56:29Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fields[0].indexOf(\".csv\")) != (-1)) { java.lang.String firstLine = fields[0]; firstLine = firstLine.substring(((firstLine.length()) - 50), firstLine.length()).trim(); fields[0] = firstLine; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1451/buggy-version/src.main.java.org.neo4j.batchimport.importer.AbstractLineData.java", "BodyUseAPI": [], "Fixed commit": "3597a014d7da6b63e6e6d9cc71dd70df26784815", "Url": "https://api.github.com/repos/mo9527/batch-import", "Date": "2017-03-21T09:19:27Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f.isDirectory()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3299/buggy-version/src.main.java.org.repositoryminer.mining.SourceAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "00bc156a8be7333f6752b217ad221637f45470b1", "Url": "https://api.github.com/repos/visminer/repositoryminer", "Date": "2016-09-25T00:57:28Z"},
{"Line": "=>820", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.photon.phresco.framework.actions.applications.REQ_JAR.equalsIgnoreCase(getFileType())) { setReqAttribute(com.photon.phresco.framework.actions.applications.REQ_PROJECT_LOCATION, \"\"); setReqAttribute(com.photon.phresco.framework.actions.applications.REQ_FROM, \"funcTestAgaistJar\"); }else { setReqAttribute(com.photon.phresco.framework.actions.applications.REQ_PROJECT_LOCATION, getAppDirectoryPath(applicationInfo).replace(java.io.File.separator, com.photon.phresco.framework.actions.applications.FORWARD_SLASH)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/808/buggy-version/phresco-framework-web.src.main.java.com.photon.phresco.framework.actions.applications.DynamicParameterAction.java", "BodyUseAPI": [], "Fixed commit": "663810e1c02bb62a1a7eb28371aaed0f15be83b2", "Url": "https://api.github.com/repos/phresco/framework", "Date": "2013-01-18T15:04:37Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isCompactMode())) containerLinearLayout.setVisibility(View.VISIBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/740/buggy-version/src.com.parang.checkedlistbox.CheckedListBox.java", "BodyUseAPI": [], "Fixed commit": "ecad5b284d3210bc692980e622668b3b76108211", "Url": "https://api.github.com/repos/ParangCo/ParangCheckedListBox", "Date": "2014-09-23T21:54:22Z"},
{"Line": "=>709", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player.getWall().getImageName().equals(\"obj/outside.png\")) { return \"You cannot rotate outside\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1740/buggy-version/src.evidence.gameworld.Game.java", "BodyUseAPI": [], "Fixed commit": "78785a3a5a31b5536e46bab10f16354c12253521", "Url": "https://api.github.com/repos/georginamurphy/Evidence", "Date": "2016-10-11T06:34:48Z"},
{"Line": "=>695", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player.getWall().getImageName().equals(\"obj/outside.png\")) { return \"You cannot rotate outside\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1740/buggy-version/src.evidence.gameworld.Game.java", "BodyUseAPI": [], "Fixed commit": "78785a3a5a31b5536e46bab10f16354c12253521", "Url": "https://api.github.com/repos/georginamurphy/Evidence", "Date": "2016-10-11T06:34:48Z"},
{"Line": "=>579", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((totalPlayers) > 1) { points[whichPlayer(buzzed)] -= row * 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5284/buggy-version/Woo.java", "BodyUseAPI": [], "Fixed commit": "debd08659e1113967454d971d1e92426bfb35f76", "Url": "https://api.github.com/repos/ilam1/Djaghrouri", "Date": "2017-01-23T05:20:21Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"NULL\".equals(militaryTime)) return militaryTime;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4599/buggy-version/src.time.Time.java", "BodyUseAPI": [], "Fixed commit": "63f3c009294d200ea8ff22a1996a3fd093c3d8fc", "Url": "https://api.github.com/repos/AndrewERAU/Calendar", "Date": "2017-04-29T00:17:01Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((key != null) && (value != null)) { tagMap.put(key, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/9007/buggy-version/common.src.main.java.com.xqbase.metric.common.MetricKey.java", "BodyUseAPI": [], "Fixed commit": "01b90ed29c12790b39a5f5d441a2334898c670e9", "Url": "https://api.github.com/repos/xqbase/metric", "Date": "2015-01-27T06:50:34Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLocation) != null) { android.content.Intent intent = new android.content.Intent(\"com.google.zxing.client.android.SCAN\"); intent.setPackage(\"com.google.zxing.client.android\"); intent.putExtra(\"SCAN_MODE\", \"QR_CODE_MODE\"); startActivityForResult(intent, com.ateam.tagger.Tagger.BARCODE_ACTIVITY_RESULT); }else { android.widget.Toast.makeText(getApplicationContext(), \"Please wait for a GPS fix before tagging!\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7501/buggy-version/src.com.ateam.tagger.Tagger.java", "BodyUseAPI": [], "Fixed commit": "5e433f901d68ab383fcf674ef619c2e2774d58ae", "Url": "https://api.github.com/repos/haukuri/Taggr", "Date": "2011-03-07T20:15:26Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((more.getSize()) != 1) { dataRank = more.getSliceView().squeeze().getRank(); }else { more.setShape(new int[]{ 1 }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/492/buggy-version/org.dawb.common.ui.src.org.dawb.common.ui.plot.tools.IDataReductionToolPage.java", "BodyUseAPI": ["more.getSliceView().squeeze().getRank()", "more.getSliceView().squeeze()", "org.eclipse.dawnsci.analysis.api.dataset.IDataset.setShape(int[])", "org.eclipse.dawnsci.analysis.api.dataset.IDataset.getSliceView()"], "Fixed commit": "2b5dbcd431f8fb733eb82170998ee9f8c8c79a29", "Url": "https://api.github.com/repos/DawnScience/dawn-common", "Date": "2015-11-13T09:16:01Z"},
{"Line": "=>570", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.nasa.jpl.mbee.mdk.util.Property.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (all.contains(type)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4839/buggy-version/src.main.java.gov.nasa.jpl.mbee.mdk.util.Utils.java", "BodyUseAPI": [], "Fixed commit": "763b2984b4bf319448fb15cc387e3663828c6f2a", "Url": "https://api.github.com/repos/Open-MBEE/mdk", "Date": "2017-04-19T21:47:20Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAppend) { android.widget.Toast.makeText(mContext, ((\"\u65b0\u589e\" + (ids.size())) + \"\u90e8\u5f71\u7247\u3002\"), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/773/buggy-version/app.src.main.java.com.kekebox.hukewei.javlibraryapp.BaseVideoFragment.java", "BodyUseAPI": [], "Fixed commit": "0b89e13acf4abbff56a2a5291b500dbe82d64ee3", "Url": "https://api.github.com/repos/hukewei/javLibraryApp", "Date": "2015-05-09T09:48:34Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["results.getJSONObject(i).getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(mResultReference.contains(current_record))) { mResultReference.add(current_record); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/773/buggy-version/app.src.main.java.com.kekebox.hukewei.javlibraryapp.SearchResultsActivity.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "0b89e13acf4abbff56a2a5291b500dbe82d64ee3", "Url": "https://api.github.com/repos/hukewei/javLibraryApp", "Date": "2015-05-09T09:48:34Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mNavDrawerOpen) { return false; }else if (hasEvents()) { ((news.androidtv.familycalendar.adapters.AbstractEventAdapter) (rv.getAdapter())).handleKeyEvent(keyCode); }else { displayError(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3994/buggy-version/app.src.main.java.news.androidtv.familycalendar.activities.MainLeanbackActivity.java", "BodyUseAPI": [], "Fixed commit": "794cd8f4ab39080748e07c6069d3b9a264ad983a", "Url": "https://api.github.com/repos/ITVlab/Family-Calendar", "Date": "2017-01-09T04:37:21Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugins.CENO.URLtoUSKTools.splitURL(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (splitMap.get(\"extraPath\").isEmpty()) { splitMap.put(\"extraPath\", \"index.html\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/826/buggy-version/plugin-ceno.src.plugins.CENO.Bridge.BundleInserter.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "25ba192de6e8673c34cae4a7b48d3586fb9af521", "Url": "https://api.github.com/repos/equalitie/ceno", "Date": "2015-05-08T20:42:40Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stack == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/9124/buggy-version/src.main.java.biomesoplenty.common.handler.AchievementEventHandler.java", "BodyUseAPI": [], "Fixed commit": "abe54ad1cab396e909e8eed6fd77f8adea7fcd20", "Url": "https://api.github.com/repos/Glitchfiend/BiomesOPlenty", "Date": "2016-01-21T00:26:16Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((validaEntrada()) == false) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/9159/buggy-version/src.grupo.android.agento.Agento.java", "BodyUseAPI": [], "Fixed commit": "30ba5850e32a13d5e8fffe6db1895ddc99010ef2", "Url": "https://api.github.com/repos/Grupo-Android/Agento", "Date": "2012-11-24T13:04:12Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (refvarstart >= (trmdl.getCdnaSequence().length())) { return jannovar.annotation.UTRAnnotation.createUTR3Annotation(trmdl, refvarstart, ref, var); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4957/buggy-version/src.main.java.jannovar.annotation.InsertionAnnotation.java", "BodyUseAPI": ["jannovar.annotation.UTRAnnotation.createUTR3Annotation(jannovar.reference.TranscriptModel,int,java.lang.String,java.lang.String)"], "Fixed commit": "0caea74cf554489e9f7753927e5317d6e21f3c50", "Url": "https://api.github.com/repos/buske/jannovar", "Date": "2014-09-08T14:08:09Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(update.birthday))) { userBirthday.setText(sdf.format(java.lang.Long.parseLong(update.birthday))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7540/buggy-version/app.src.main.java.com.syber.hypoPATH.UpdateUserInfoFragment.java", "BodyUseAPI": ["java.text.SimpleDateFormat.format(long)", "android.widget.TextView.setText(java.lang.String)", "java.lang.Long.parseLong(update.birthday)"], "Fixed commit": "43d04e78491c7275e1a0c0babd24d6c7aebcfbb8", "Url": "https://api.github.com/repos/liangtg/hypoPATH", "Date": "2016-06-08T10:09:19Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((hasSelection && ((dragDelay) != null)) && (dragDelay.isDone())) && (de.engineapp.controls.GuiUtil.isLeftButton(e, false, false, false))) && (!(pModel.getProperty(de.engineapp.controls.PRP_MODE).equals(de.engineapp.controls.CMD_PLAYBACK_MODE)))) { pModel.getSelectedObject().world_position.translation = cursor; pModel.fireObjectUpdated(pModel.getSelectedObject()); pModel.fireRepaint(); }else if ((hasSelection && ((de.engineapp.controls.GuiUtil.isLeftButton(e, false, true, false)) || (javax.swing.SwingUtilities.isMiddleMouseButton(e)))) && (!(pModel.getProperty(de.engineapp.controls.PRP_MODE).equals(de.engineapp.controls.CMD_PLAYBACK_MODE)))) { pModel.getSelectedObject().setRadius(de.engineapp.controls.Util.distance(pModel.getSelectedObject().getPosition(), cursor)); pModel.fireObjectUpdated(pModel.getSelectedObject()); pModel.fireRepaint(); }else if (javax.swing.SwingUtilities.isRightMouseButton(e)) { pModel.moveViewOffset(((e.getX()) - (mouseOffset.x)), ((e.getY()) - (mouseOffset.y))); mouseOffset.x = e.getPoint().x; mouseOffset.y = e.getPoint().y; pModel.fireRepaint(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4429/buggy-version/PhysicsApplication.src.de.engineapp.controls.Canvas.java", "BodyUseAPI": ["java.awt.event.MouseEvent.getX()", "de.engineapp.PresentationModel.fireObjectUpdated(pModel.getSelectedObject())", "de.engineapp.controls.GuiUtil.isLeftButton(java.awt.event.MouseEvent,boolean,boolean,boolean)", "pModel.getSelectedObject().setRadius(de.engineapp.controls.Util.distance(pModel.getSelectedObject().getPosition(), cursor))", "java.awt.event.MouseEvent.getY()", "de.engineapp.PresentationModel.fireRepaint()", "de.engineapp.PresentationModel.moveViewOffset(int,int)", "de.engineapp.PresentationModel.getProperty(de.engineapp.controls.PRP_MODE)", "de.engineapp.PresentationModel.getSelectedObject()", "java.awt.event.MouseEvent.getPoint()", "de.engineapp.PresentationModel.fireRepaint()", "de.engineapp.controls.Util.distance(pModel.getSelectedObject().getPosition(),de.engineapp.controls.Vector)", "de.engineapp.PresentationModel.getSelectedObject()", "de.engineapp.PresentationModel.getSelectedObject()", "javax.swing.SwingUtilities.isRightMouseButton(java.awt.event.MouseEvent)", "pModel.getProperty(de.engineapp.controls.PRP_MODE).equals(de.engineapp.controls.CMD_PLAYBACK_MODE)", "de.engineapp.PresentationModel.fireRepaint()", "de.engineapp.PresentationModel.fireObjectUpdated(pModel.getSelectedObject())", "java.awt.event.MouseEvent.getPoint()", "pModel.getSelectedObject().getPosition()", "javax.swing.SwingUtilities.isMiddleMouseButton(java.awt.event.MouseEvent)", "de.engineapp.PresentationModel.getSelectedObject()", "de.engineapp.PresentationModel.getSelectedObject()"], "Fixed commit": "0de4a5d13ae420742b88d46f22b2d2f0bdf24ec0", "Url": "https://api.github.com/repos/FrecherxDachs/PhysicsEngine", "Date": "2012-11-18T17:19:45Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentStage.getStatus()) == (net.hawkengine.model.enums.StageStatus.PASSED)) { continue; }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3604/buggy-version/Server.src.main.java.net.hawkengine.core.pipelinescheduler.StatusUpdaterService.java", "BodyUseAPI": [], "Fixed commit": "60901b567f21ba443b73a53ef89eba1d14171c86", "Url": "https://api.github.com/repos/rndsolutions/hawkcd", "Date": "2016-09-01T14:20:24Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((wordsOfInput.length) < 2) { throw new raijin.common.exception.IllegalCommandArgumentException(\"Please specify a task name!\", Constants.CommandParam.NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7135/buggy-version/src.main.raijin.logic.parser.AddParser.java", "BodyUseAPI": [], "Fixed commit": "fa896a99ac388a0b979def69e676bfc5a9c9fcfe", "Url": "https://api.github.com/repos/cs2103aug2015-w15-3j/main", "Date": "2015-10-21T04:29:35Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((input.configuration) == null) { input.configuration = new org.datacleaner.restclient.ComponentConfiguration(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5306/buggy-version/monitor.services.src.main.java.org.datacleaner.monitor.server.components.InputColumnAndMappedPropertyRewriter.java", "BodyUseAPI": [], "Fixed commit": "5f980aea3eb3344ae3ebbd4ddfc7c58ab59f553b", "Url": "https://api.github.com/repos/datacleaner/DataCleaner", "Date": "2016-10-21T11:45:19Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.h2.engine.Session.getTrace()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (t.isDebugEnabled()) { session.getTrace().debug(\"Plan : plan cost {0}\", cost); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2477/buggy-version/h2.src.main.org.h2.table.Plan.java", "BodyUseAPI": [], "Fixed commit": "4be1a5ce5a747b821fedd9a8680d3cb80ce49aea", "Url": "https://api.github.com/repos/nicolas-f/h2database", "Date": "2015-12-20T21:32:51Z"},
{"Line": "=>701", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.h2.engine.Session.getTrace()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (t.isDebugEnabled()) { t.debug(\"Table : potential plan item cost {0} index {1}\", item.cost, item.getIndex().getPlanSQL()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2477/buggy-version/h2.src.main.org.h2.table.Table.java", "BodyUseAPI": ["org.h2.message.Trace.debug(java.lang.String,item.cost,item.getIndex().getPlanSQL())"], "Fixed commit": "4be1a5ce5a747b821fedd9a8680d3cb80ce49aea", "Url": "https://api.github.com/repos/nicolas-f/h2database", "Date": "2015-12-20T21:32:51Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(obj instanceof ac.il.technion.twc.hashtag.Hashtag)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1025/buggy-version/src.main.java.ac.il.technion.twc.hashtag.Hashtag.java", "BodyUseAPI": [], "Fixed commit": "c9dce22d992d88350db02e95c7a4aff8d59a4024", "Url": "https://api.github.com/repos/snudler6/softwareDesignHW2", "Date": "2014-06-01T11:41:20Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((queriedURLs.get(fullPath)) == null) { queriedURLs.put(fullPath, new java.lang.Integer(1)); }else { queriedURLs.put(fullPath, new java.lang.Integer(((queriedURLs.get(fullPath).intValue()) + 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3613/buggy-version/src.xmlsitereader.XML.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Integer>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.Integer>.put(java.lang.String,java.lang.Integer)", "java.lang.Integer.intValue()", "java.util.HashMap<java.lang.String, java.lang.Integer>.put(java.lang.String,java.lang.Integer)"], "Fixed commit": "f4ed34478514dac1cd25393e54567ff48b926bf9", "Url": "https://api.github.com/repos/EagleCreekDrupalTeam/EagleCreekSiteMapAnalyzer", "Date": "2014-04-23T21:01:32Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (possibleSlugs == null) { throw new uk.ac.cam.cl.quebec.face.exceptions.StorageException(\"No users were provided to look for\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3904/buggy-version/src.main.java.uk.ac.cam.cl.quebec.face.storage.TrainingFiles.java", "BodyUseAPI": [], "Fixed commit": "fd176c41bb8ffe4db13ddd91c604ce60050d2178", "Url": "https://api.github.com/repos/quebec-group/face", "Date": "2017-03-02T11:37:30Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.Jessy1237.DwarfCraft.listeners.DCInventoryListener.check(block.getLocation())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (inv == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4514/buggy-version/src.com.Jessy1237.DwarfCraft.listeners.DCInventoryListener.java", "BodyUseAPI": [], "Fixed commit": "68d36f905c548677fcb3f99115102387f8015fa2", "Url": "https://api.github.com/repos/drekryan/DwarfCraft", "Date": "2016-11-05T03:23:55Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.Jessy1237.DwarfCraft.listeners.DCInventoryListener.check(block.getLocation())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((inv.getFuel()) != null) fuel = inv.getFuel().getTypeId();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4514/buggy-version/src.com.Jessy1237.DwarfCraft.listeners.DCInventoryListener.java", "BodyUseAPI": ["org.bukkit.inventory.BrewerInventory.getFuel()", "inv.getFuel().getTypeId()"], "Fixed commit": "68d36f905c548677fcb3f99115102387f8015fa2", "Url": "https://api.github.com/repos/drekryan/DwarfCraft", "Date": "2016-11-05T03:23:55Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.Jessy1237.DwarfCraft.listeners.DCInventoryListener.check(block.getLocation())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((inv.getIngredient()) != null) ing = inv.getIngredient().getTypeId();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4514/buggy-version/src.com.Jessy1237.DwarfCraft.listeners.DCInventoryListener.java", "BodyUseAPI": ["org.bukkit.inventory.BrewerInventory.getIngredient()", "inv.getIngredient().getTypeId()"], "Fixed commit": "68d36f905c548677fcb3f99115102387f8015fa2", "Url": "https://api.github.com/repos/drekryan/DwarfCraft", "Date": "2016-11-05T03:23:55Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.movies) == null) this.movies = new java.util.ArrayList(); else this.movies.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5052/buggy-version/app.src.main.java.com.example.andy.popularmovies.MainActivityFragment.java", "BodyUseAPI": [], "Fixed commit": "e821c7077148c1f75f724629cf86e7c0647fc4fd", "Url": "https://api.github.com/repos/Multitera/Popular_Movies", "Date": "2016-01-18T16:52:53Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getEditText().getText().toString().toUpperCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((text.length()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6355/buggy-version/src.com.cssdpu.hangman.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "fd97f175bcfbdd839281e1cd244657004a5cf193", "Url": "https://api.github.com/repos/CSSDePaul/HangmanAndroid", "Date": "2013-10-14T18:23:43Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(reflectedMethod.isAccessible())) { reflectedMethod.setAccessible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/473/buggy-version/base.lang.src.main.java.leap.lang.reflect.ReflectMethod.java", "BodyUseAPI": ["java.lang.reflect.Method.setAccessible(boolean)"], "Fixed commit": "bdb9b71dfba124871205acff9678b4be781b665f", "Url": "https://api.github.com/repos/leapframework/framework", "Date": "2016-09-01T06:09:17Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((((sensor) == (Sensor.VGT)) && (sourceProduct != null)) && ((sourceProduct.getSceneRasterWidth()) > 1)) && ((sourceProduct.getSceneRasterHeight()) > 1)) { float ozoMeanValue = org.esa.beam.globalbedo.bbdr.BbdrUtils.getImageMeanValue(sourceProduct.getBand(BbdrConstants.VGT_OZO_BAND_NAME).getGeophysicalImage()); setGasVal(ozoMeanValue); }else { setGasVal(BbdrConstants.CWV_CONSTANT_VALUE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7654/buggy-version/beam-globalbedo-bbdr-retrieval.src.main.java.org.esa.beam.globalbedo.bbdr.GasLookupTable.java", "BodyUseAPI": ["org.esa.beam.framework.datamodel.Product.getBand(BbdrConstants.VGT_OZO_BAND_NAME)", "org.esa.beam.globalbedo.bbdr.BbdrUtils.getImageMeanValue(sourceProduct.getBand(BbdrConstants.VGT_OZO_BAND_NAME).getGeophysicalImage())", "sourceProduct.getBand(BbdrConstants.VGT_OZO_BAND_NAME).getGeophysicalImage()"], "Fixed commit": "c974a5d7f6a9968361380ba3f27ae6436560b564", "Url": "https://api.github.com/repos/bcdev/beam-globalbedo", "Date": "2016-04-28T17:09:36Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (webServer.isAlive()) webServer.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6207/buggy-version/TinySMSGate.src.rocks.jahn.tinysmsgate.SMSGateService.java", "BodyUseAPI": ["rocks.jahn.tinysmsgate.SMSGateWebServer.stop()"], "Fixed commit": "35717ddf0caf5119d52ef96f8f943a7e57cdabdb", "Url": "https://api.github.com/repos/need12648430/tinysmsgate", "Date": "2014-10-26T06:39:45Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lastKnownRecord.getScheduleDeviation()) != null) { vehicleDetail.setScheduleDeviation(lastKnownRecord.getScheduleDeviation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4452/buggy-version/onebusaway-nyc-admin-webapp.src.main.java.org.onebusaway.nyc.admin.util.VehicleDetailBuilder.java", "BodyUseAPI": ["org.onebusaway.nyc.admin.model.json.VehicleLastKnownRecord.getScheduleDeviation()", "org.onebusaway.nyc.admin.model.ui.VehicleDetail.setScheduleDeviation(lastKnownRecord.getScheduleDeviation())"], "Fixed commit": "b8cc9cf6d1d75bf25dcdb05d0b26adf1f46941f8", "Url": "https://api.github.com/repos/camsys/onebusaway-nyc", "Date": "2012-07-31T15:51:22Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.onebusaway.nyc.admin.service.RemoteConnectionService.getContent(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (headSignContent == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4452/buggy-version/onebusaway-nyc-admin-webapp.src.main.java.org.onebusaway.nyc.admin.service.impl.VehicleStatusServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "b8cc9cf6d1d75bf25dcdb05d0b26adf1f46941f8", "Url": "https://api.github.com/repos/camsys/onebusaway-nyc", "Date": "2012-07-31T15:51:22Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (order >= (axisVariables.size())) { order = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/745/buggy-version/src.main.java.edu.uiuc.zenvisage.zqlcomplete.querygraph.DEuclidean.java", "BodyUseAPI": [], "Fixed commit": "63347634e5285b5e7248e6c439124a1ab1aaf98f", "Url": "https://api.github.com/repos/zenvisage/zenvisage", "Date": "2017-03-13T18:38:00Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Player._speed) <= 1) return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/974/buggy-version/Player.java", "BodyUseAPI": [], "Fixed commit": "12b08f0367d6c1abb4ca54ca863f8072a1e754b6", "Url": "https://api.github.com/repos/GordonLei/BindingOfRug", "Date": "2017-06-13T03:03:05Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JPasswordField.getPassword()", "javax.swing.JTextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((usernameValue.isEmpty()) || ((passwordValue.length) == 0)) { javax.swing.JOptionPane.showMessageDialog(null, \"Pogre\u0161ni pristupni podaci! (Username i/ili password nije unijet)\", \"Poruka o prijavi\", javax.swing.JOptionPane.INFORMATION_MESSAGE); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8858/buggy-version/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Prijava.java", "BodyUseAPI": [], "Fixed commit": "3d3ac7ef211716b5c89fae4ccdf4f75f52959774", "Url": "https://api.github.com/repos/SoftverInzenjeringETFSA/SI2015Tim12", "Date": "2016-05-17T21:24:12Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((oldVersion < 6) && (newVersion >= 6)) { jp.juggler.subwaytooter.table.MutedApp.onDBCreate(db); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1239/buggy-version/app.src.main.java.jp.juggler.subwaytooter.table.MutedApp.java", "BodyUseAPI": [], "Fixed commit": "74d147e8e8194f2127aed32dcfa68ceb7fc48be1", "Url": "https://api.github.com/repos/Belphemur/SubwayTooter", "Date": "2017-04-29T22:02:24Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((oldVersion < 6) && (newVersion >= 6)) { jp.juggler.subwaytooter.table.UserRelation.onDBCreate(db); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1239/buggy-version/app.src.main.java.jp.juggler.subwaytooter.table.UserRelation.java", "BodyUseAPI": [], "Fixed commit": "74d147e8e8194f2127aed32dcfa68ceb7fc48be1", "Url": "https://api.github.com/repos/Belphemur/SubwayTooter", "Date": "2017-04-29T22:02:24Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.Main.getParentFrame()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (frame != null) frame.dispose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8482/buggy-version/src.main.Main.java", "BodyUseAPI": ["javax.swing.JFrame.dispose()"], "Fixed commit": "a5de8218b054658e6e5ef8bfe5c33ae9089e28c9", "Url": "https://api.github.com/repos/wareya/Spark-Reader", "Date": "2017-11-28T09:58:21Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ref.WeakReference<android.content.Context>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (ctx.mPD.isShowing()) { ctx.mPD.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8529/buggy-version/vitamio.src.io.vov.vitamio.activity.InitActivity.java", "BodyUseAPI": ["android.app.ProgressDialog.dismiss()"], "Fixed commit": "d77c4267ff56f8575d94c71e3f1c826f4760db35", "Url": "https://api.github.com/repos/uphy/VitamioBundle", "Date": "2013-11-30T00:08:31Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fileUri.startsWith(\"~\")) { fileUri = fileUri.replaceFirst(\"^~\", java.lang.System.getProperty(\"user.home\")); if (!(org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS)) { fileUri = fileUri.replaceAll(\"\\\\\\\\\", \"\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7747/buggy-version/src.main.java.com.jaspersoft.jasperserver.jrsh.core.operation.impl.ExportOperation.java", "BodyUseAPI": ["java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "abf68010e95e7c8b7a9222b05c7245d2e76d5689", "Url": "https://api.github.com/repos/Krasnyanskiy/jrsh", "Date": "2015-07-13T22:56:00Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (destFile.getParentFile().mkdirs()) android.util.Log.v(lrstudios.games.ego.lib.ui.BaseBoardActivity.TAG, \"Directories recreated\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4475/buggy-version/elygo-lib.src.lrstudios.games.ego.lib.ui.BaseBoardActivity.java", "BodyUseAPI": [], "Fixed commit": "6c80fa468bfe583aecb3d26557919532798ffa3c", "Url": "https://api.github.com/repos/Daimas/elygo-lib", "Date": "2013-07-31T08:38:49Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(isDetached())) && (!(isRemoving()))) { onResponse(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2158/buggy-version/src.com.android.baseline.framework.ui.BasicFragment.java", "BodyUseAPI": [], "Fixed commit": "088267a2cf6d0e8ca6f81c951635bfd74bef42a7", "Url": "https://api.github.com/repos/hiphonezhu/AndroidLibrary", "Date": "2015-03-23T02:48:31Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(isDestroyed)) && (!(isFinishing()))) { onResponse(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2158/buggy-version/src.com.android.baseline.framework.ui.base.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "088267a2cf6d0e8ca6f81c951635bfd74bef42a7", "Url": "https://api.github.com/repos/hiphonezhu/AndroidLibrary", "Date": "2015-03-23T02:48:31Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dialog) == null) { dialog = new clueGame.GUI.DetectiveNotesDialog(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5114/buggy-version/clueGame.GUI.java", "BodyUseAPI": [], "Fixed commit": "5997f4ac882d85da49c55d4a116a7b2064f9801f", "Url": "https://api.github.com/repos/mstech/NewClueBoard", "Date": "2012-11-08T16:04:55Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (orientation == (android.content.res.Configuration.ORIENTATION_LANDSCAPE)) { if ((((option.getHeight()) == (((option.getWidth()) * h) / w)) && ((option.getWidth()) >= width)) && ((option.getHeight()) >= height)) { bigEnough.add(option); } }else { if ((((option.getHeight()) >= (((option.getWidth()) * width) / height)) && ((option.getHeight()) >= width)) && ((option.getWidth()) >= height)) { bigEnough.add(option); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2142/buggy-version/app.src.main.java.io.github.qi1002.icamera.Camera2BasicFragment.java", "BodyUseAPI": [], "Fixed commit": "b0b74dbe246c7ed9335737e840f22ca80087c7f7", "Url": "https://api.github.com/repos/QI1002/iCamera", "Date": "2017-03-13T15:08:42Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, iniconfigurationmanager.schema.OptionSchema>.get(option.getCanonicalName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (schema == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7756/buggy-version/src.iniconfigurationmanager.validators.RulesValidatorVisitor.java", "BodyUseAPI": [], "Fixed commit": "c6581bc505c77ba871dbf1532f54495ccecb901d", "Url": "https://api.github.com/repos/choko/IniConfigurationManager", "Date": "2011-05-09T10:08:28Z"},
{"Line": "=>828", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (storageType == null) storageType = \"plocal\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/9129/buggy-version/server.src.main.java.com.orientechnologies.orient.server.network.protocol.binary.ONetworkProtocolBinary.java", "BodyUseAPI": [], "Fixed commit": "9c6b20d148f81d4881c1b4a65f61db4dd45f0dc2", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-10-31T15:08:03Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((parsedPlace.length) == 3) { mEditCity.setText(parsedPlace[0].trim()); mEditState.setText(parsedPlace[1].substring(0, 3).trim()); }else if ((parsedPlace.length) == 4) { mEditStAddr.setText(parsedPlace[0].trim()); mEditCity.setText(parsedPlace[1].trim()); mEditState.setText(parsedPlace[2].substring(0, 3).trim()); }else if ((parsedPlace.length) == 5) { mEditStAddr.setText(parsedPlace[1].trim()); mEditCity.setText(parsedPlace[2].trim()); mEditState.setText(parsedPlace[3].substring(0, 3).trim()); }else { android.widget.Toast.makeText(getApplicationContext(), \"Unsupported address format\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7360/buggy-version/HomeSafe.app.src.main.java.cse403.homesafe.Destinations.EditDestinationActivity.java", "BodyUseAPI": ["android.widget.EditText.setText(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.trim()", "android.widget.EditText.setText(java.lang.String)", "java.lang.String.trim()", "android.widget.EditText.setText(java.lang.String)", "java.lang.String.trim()", "java.lang.String.trim()", "android.widget.EditText.setText(java.lang.String)", "android.widget.EditText.setText(java.lang.String)", "java.lang.String.trim()", "java.lang.String.trim()", "java.lang.String.substring(int,int)", "java.lang.String.trim()", "java.lang.String.substring(int,int)", "android.widget.EditText.setText(java.lang.String)", "android.widget.EditText.setText(java.lang.String)", "android.widget.EditText.setText(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "a5e4a47935433745f8536921120f5acd854422e2", "Url": "https://api.github.com/repos/HomeSafe/homesafe", "Date": "2015-05-29T00:28:44Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.codepath.timeline.util.ParseApplication.TURN_ON_PARSE) { new com.afollestad.materialdialogs.MaterialDialog.Builder(this).content(getString(R.string.logout)).positiveText(getString(android.R.string.yes)).negativeText(getString(R.string.just_close)).onAny(new com.afollestad.materialdialogs.MaterialDialog.SingleButtonCallback() { @java.lang.Override public void onClick(@android.support.annotation.NonNull com.afollestad.materialdialogs.MaterialDialog dialog, @android.support.annotation.NonNull com.afollestad.materialdialogs.DialogAction which) { if (which.equals(DialogAction.POSITIVE)) { com.codepath.timeline.util.ParseApplication.logout(); finish(); }else if (which.equals(DialogAction.NEGATIVE)) { moveTaskToBack(true); } } }).show(); }else { moveTaskToBack(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8981/buggy-version/app.src.main.java.com.codepath.timeline.activities.LandingActivity.java", "BodyUseAPI": [], "Fixed commit": "c94cff1c8ff3422f36bce42d3de3c549ce62e38e", "Url": "https://api.github.com/repos/codepath-project-stories/timeline", "Date": "2016-08-22T08:09:29Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((login_video) != null) { login_video.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8981/buggy-version/app.src.main.java.com.codepath.timeline.activities.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "c94cff1c8ff3422f36bce42d3de3c549ce62e38e", "Url": "https://api.github.com/repos/codepath-project-stories/timeline", "Date": "2016-08-22T08:09:29Z"},
{"Line": "=>1035", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (myBusMarker.isFavorite()) { addOrUpdateMarker(mEndLocationMarker, newLatLng, null); updateInfoWindows(mEndLocationMarker, myBusMarker.getFavoriteName(), null, myBusMarker.getMapMarker().getSnippet(), true); removeFavoriteMarker(myBusMarker); }else { addOrUpdateMarker(mEndLocationMarker, newLatLng, mEndLocationGeocodingCompleted); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2213/buggy-version/app.src.main.java.com.mybus.activity.MainActivity.java", "BodyUseAPI": ["com.mybus.marker.MyBusMarker.getFavoriteName()", "myBusMarker.getMapMarker().getSnippet()", "com.mybus.activity.MainActivity.10.updateInfoWindows(com.mybus.marker.MyBusMarker,myBusMarker.getFavoriteName(),<nulltype>,myBusMarker.getMapMarker().getSnippet(),boolean)", "com.mybus.marker.MyBusMarker.getMapMarker()", "com.mybus.activity.MainActivity.10.removeFavoriteMarker(com.mybus.marker.MyBusMarker)"], "Fixed commit": "da8a2d4c08b02e90d2092821254ae9d54878af23", "Url": "https://api.github.com/repos/sparkdigital/mybus-android", "Date": "2016-07-14T20:52:37Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cookie.length()) > 0) { request.setRequestHeader(\"Cookie\", ((cookie.length()) == 0 ? null : cookie)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8235/buggy-version/jestful-client.src.main.java.org.qfox.jestful.client.processor.CookieParameterProcessor.java", "BodyUseAPI": ["java.lang.String.length()", "org.qfox.jestful.client.processor.Request.setRequestHeader(java.lang.String,((cookie.length()) == 0 ? null : cookie))"], "Fixed commit": "b9d1a4a1ac38941129b15f1856af8891e9d32758", "Url": "https://api.github.com/repos/core-lib/jestful", "Date": "2017-03-26T17:06:53Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cookie.length()) > 0) { request.setRequestHeader(\"Cookie\", ((cookie.length()) == 0 ? null : cookie)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8235/buggy-version/jestful-client.src.main.java.org.qfox.jestful.client.handler.CookiesAnnotationHandler.java", "BodyUseAPI": ["java.lang.String.length()", "org.qfox.jestful.client.handler.Request.setRequestHeader(java.lang.String,((cookie.length()) == 0 ? null : cookie))"], "Fixed commit": "b9d1a4a1ac38941129b15f1856af8891e9d32758", "Url": "https://api.github.com/repos/core-lib/jestful", "Date": "2017-03-26T17:06:53Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.stage.FileChooser.showOpenDialog(<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (file == null) { return java.util.Optional.empty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/264/buggy-version/src.main.java.com.mlaskows.TspFileHelper.java", "BodyUseAPI": [], "Fixed commit": "8dbb091f90c13f438f299e5a6d35e2f5e2360570", "Url": "https://api.github.com/repos/dogenkigen/antsp-gui", "Date": "2017-08-17T01:52:59Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (results.isEmpty()) results.add(project);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5242/buggy-version/graph.api.src.main.java.org.jboss.windup.graph.traversal.ProjectTraversalCache.java", "BodyUseAPI": ["java.util.Set<org.jboss.windup.graph.model.ProjectModel>.add(org.jboss.windup.graph.model.ProjectModel)"], "Fixed commit": "05693c7b431ac65430c7122f720bf2590c597fdc", "Url": "https://api.github.com/repos/jsight/windup", "Date": "2016-06-13T20:49:49Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.idega.jbpm.bean.VariableInstanceInfo.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.idega.util.ListUtil.isEmpty(values)) { return com.idega.util.CoreConstants.MINUS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/713/buggy-version/src.java.is.idega.idegaweb.egov.bpm.cases.search.BPMCasesHandlersResolver.java", "BodyUseAPI": [], "Fixed commit": "dea82fe7bc3daf265f2659ad631ca08efb75e54d", "Url": "https://api.github.com/repos/idega/is.idega.idegaweb.egov.bpm", "Date": "2016-01-29T08:19:20Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (checkLine.equals(\"exit\")) { break; }else { total += java.lang.Integer.parseInt(checkLine); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6864/buggy-version/bugfixing2.src.main.java.bugs.bug_3_problem_with_loop_exit_step_does_not_work.LoopBug.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "811761588c21c70e54a9071d5c30995342ae6782", "Url": "https://api.github.com/repos/alekseyzykin/javaEE", "Date": "2017-04-26T14:52:22Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value instanceof java.lang.Enum) { value = ((value.getClass().getSimpleName()) + \".\") + (((java.lang.Enum) (value)).name()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/9264/buggy-version/src.main.java.com.speedment.util.Beans.java", "BodyUseAPI": ["java.lang.Object.getClass()", "java.lang.Class<? extends java.lang.Object>.getSimpleName()"], "Fixed commit": "866594fc9a45e968096b8fe79055732db44be90c", "Url": "https://api.github.com/repos/speedment/speedment", "Date": "2015-03-19T17:27:13Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["wifiInfo.getSSID().substring(int,((wifiInfo.getSSID().length()) - 1))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (com.thibaudperso.camera.io.WifiHandler.isSonyCameraSSID(ssid)) { connected(ssid); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8400/buggy-version/src.com.thibaudperso.camera.io.WifiHandler.java", "BodyUseAPI": ["com.thibaudperso.camera.io.WifiHandler.connected(java.lang.String)"], "Fixed commit": "2cb5b6f6a0cd85018bd6efaf082468c024c9ab4e", "Url": "https://api.github.com/repos/ThibaudM/timelapse-rx100", "Date": "2014-01-05T15:54:01Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (length < 0) { throw new java.lang.ArrayIndexOutOfBoundsException((\"length must be positive but found \" + length)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5749/buggy-version/src.main.java.com.ociweb.jfast.primitive.PrimitiveReader.java", "BodyUseAPI": [], "Fixed commit": "66dd497195bebef2868bea2b6e631ea5f9f60a70", "Url": "https://api.github.com/repos/nathantippy/jFAST", "Date": "2014-02-06T13:56:34Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rollPeriod >= (com.dp.blackhole.common.Util.magic)) { ts = ts - (com.dp.blackhole.common.Util.magic); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5041/buggy-version/src.main.java.com.dp.blackhole.common.Util.java", "BodyUseAPI": [], "Fixed commit": "216111f95be4937ba3656f093a2c1bfb930d1bb2", "Url": "https://api.github.com/repos/LantaoJin/blackhole", "Date": "2013-09-06T09:40:37Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file.getName().equals(\"BasicStatistics.tex\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7003/buggy-version/src.main.java.org.astrojournal.generator.minigen.MiniLatexExporterByDate.java", "BodyUseAPI": [], "Fixed commit": "647b0aaca491f6d9698c85a7194bd4377ca6bf98", "Url": "https://api.github.com/repos/pdp10/astrojournal", "Date": "2016-10-02T22:23:28Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (action.equals(com.qubits.cordova.plugin.BackgroundAudioPlayer.ACTION_STOP)) { cordova.getActivity().startService(intent); }else if (action.equals(com.qubits.cordova.plugin.BackgroundAudioPlayer.ACTION_SET_VOLUME)) { intent.putExtra(\"volume\", args.getString(0)); cordova.getActivity().startService(intent); }else if (action.equals(com.qubits.cordova.plugin.BackgroundAudioPlayer.ACTION_GET_STATUS)) { if (BackgroundAudioPlayerService.IsPlaying) { callbackContext.success(1); }else { callbackContext.success(0); } }else if (action.equals(com.qubits.cordova.plugin.BackgroundAudioPlayer.ACTION_SET_VOLUME)) { callbackContext.success(java.lang.Float.toString(BackgroundAudioPlayerService.CurrentVolume)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/760/buggy-version/src.android.BackgroundAudioPlayer.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "a22d8ef530b4c15ef168d5f7c466df0fecb01870", "Url": "https://api.github.com/repos/vmanikandan001/com.qubits.cordova.plugin.backgroundaudioplayer", "Date": "2015-09-13T14:05:31Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tagIds == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6692/buggy-version/src.main.java.com.pratilipi.data.util.TagDataUtil.java", "BodyUseAPI": [], "Fixed commit": "818f032afbee4acd73c4b30a83846fa1cf39806c", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2017-04-17T12:37:52Z"},
{"Line": "=>848", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type instanceof java.lang.Class<?>) { return ((java.lang.Class<?>) (type)); }else if (type instanceof java.lang.reflect.ParameterizedType) { return ((java.lang.Class<?>) (((java.lang.reflect.ParameterizedType) (type)).getRawType())); }else if (type instanceof java.lang.reflect.TypeVariable) { return resolveType(concreteClass, ((java.lang.reflect.TypeVariable<?>) (type)).getBounds()[0]); }else { throw new java.lang.IllegalArgumentException((\"Unsupported type for resolving: \" + type)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8370/buggy-version/core.impl.src.main.java.com.blazebit.persistence.impl.JoinManager.java", "BodyUseAPI": [], "Fixed commit": "cde6fb9c778ab2f07f6ae6b52333c31041272e80", "Url": "https://api.github.com/repos/Blazebit/blaze-persistence", "Date": "2015-02-02T11:29:20Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((delegate) != null) { delegate.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5916/buggy-version/lucene.src.main.java.com.orientechnologies.lucene.engine.OLuceneIndexEngineDelegator.java", "BodyUseAPI": [], "Fixed commit": "a63bb2c83d222d0c30ab591fe0af90806c1df888", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-10-18T13:13:38Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jared.waves.units.barriers.Reflector.project(w.getSprite(),axesShape[r][i])", "com.jared.waves.units.barriers.Reflector.project(com.badlogic.gdx.graphics.g2d.Sprite,axesShape[r][i])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((x[1]) - (x2[0])) < minVal) { minVal = java.lang.Math.abs(((int) ((x[1]) - (x2[0])))); minAxis = i + 1; }else if (((x2[1]) - (x[0])) < minVal) { minVal = java.lang.Math.abs(((int) ((x[1]) - (x2[0])))); minAxis = i + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5301/buggy-version/src.com.jared.waves.units.barriers.Reflector.java", "BodyUseAPI": ["java.lang.Math.abs(float)", "java.lang.Math.abs(float)"], "Fixed commit": "d0d1aa29730fda52c0dde0743a8e291285f148a9", "Url": "https://api.github.com/repos/Physics-Game/Physics-Game", "Date": "2015-06-05T00:52:14Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (user_id.contains(\"\\n\")) throw new java.lang.IllegalArgumentException(\"User Id cannot contain line breaks!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5131/buggy-version/src.main.TokenHandler.java", "BodyUseAPI": [], "Fixed commit": "72194a20718c1674384ffbdd3810058fcde0750d", "Url": "https://api.github.com/repos/diplomit-dtu/TokenBasedLogin", "Date": "2015-05-11T12:09:59Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openforis.idm.model.Entity.getValue(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (childCode != null) { java.lang.String codeVal = childCode.getCode(); if (code.equals(codeVal)) { return super.extractValues(childEntity); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2852/buggy-version/collect-core.src.main.java.org.openforis.collect.csv.EnumerableEntityColumnProvider.java", "BodyUseAPI": ["org.openforis.idm.model.Code.getCode()"], "Fixed commit": "7a18b43162d62ab83024faf10af25c862f76f56a", "Url": "https://api.github.com/repos/openforis/collect", "Date": "2013-12-04T10:14:14Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.NamedNodeMap.getNamedItem(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (node == null) { if (name.startsWith(\"android:\")) { name = name.substring(\"android:\".length()); } node = namedNodeMap.getNamedItem(name); if (node == null) { return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2899/buggy-version/src.main.java.net.dongliu.apk.parser.utils.XmlUtils.java", "BodyUseAPI": [], "Fixed commit": "a3899deceaddd83c9f2de31f73fb0c39ebc5449a", "Url": "https://api.github.com/repos/soundmonster/apk-parser", "Date": "2014-12-11T07:38:05Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((curValue.equals(\"\")) || (curValue.equals(0))) || (curValue.equals(\"0\"))) { curValue = \"no\"; }else { if (((curValue.equals(1)) || (curValue.equals(\"1\"))) || (curValue.equals(\"true\"))) { curValue = \"yes\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1725/buggy-version/app.src.main.java.com.example.wlg.ratewer.Model.CardList.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(int)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "0c31a855dbbf184df228f361fca8b183ec3ce6d8", "Url": "https://api.github.com/repos/JPGsProfil/RateWer", "Date": "2015-05-19T08:09:36Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.event.KeyEvent.getModifiers()", "java.awt.event.KeyEvent.getKeyCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((keyIndex == (java.awt.event.KeyEvent.VK_CAPS_LOCK)) && ((keyModifiers & (java.awt.Event.SHIFT_MASK)) != 0)) keyIndex = java.awt.event.KeyEvent.VK_SHIFT;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1085/buggy-version/src.emulator.io.keyboard.KeyboardIIe.java", "BodyUseAPI": [], "Fixed commit": "d80fea61696c51395a722c11be3de7b668628956", "Url": "https://api.github.com/repos/cursorcorner/ever2e-jvm", "Date": "2015-07-04T06:19:15Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (read == (-1)) { java.lang.System.out.println(\"Client probably disconnected, closing channel\"); client.close(); return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5587/buggy-version/src.main.java.net.yeputons.example.nonblockingserver.PalindromeChecker.java", "BodyUseAPI": [], "Fixed commit": "74e1636169b284698b2512742170c6a4c16db4b9", "Url": "https://api.github.com/repos/yeputons/non-blocking-server", "Date": "2016-06-01T18:01:46Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, net.smert.frameworkgl.examples.CustomClassLoader.FileEntryInJar>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fileEntryInJar == null) { net.smert.frameworkgl.examples.CustomClassLoader.log.log(java.util.logging.Level.FINEST, \"CustomClassLoader did not find native library: {0}\", libraryName); libraryName = mapLibraryNameAlternate(libraryName); net.smert.frameworkgl.examples.CustomClassLoader.log.log(java.util.logging.Level.FINER, \"CustomClassLoader mapped alternate library name: {0}\", libraryName); fileEntryInJar = fileEntriesInJar.get(libraryName); if (fileEntryInJar == null) { net.smert.frameworkgl.examples.CustomClassLoader.log.log(java.util.logging.Level.FINEST, \"CustomClassLoader did not find native library: {0}\", libraryName); return super.findLibrary(libraryName); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3318/buggy-version/examples.src.main.java.net.smert.frameworkgl.examples.CustomClassLoader.java", "BodyUseAPI": [], "Fixed commit": "21a989307553bbea94fde5051f753c10669ebfb6", "Url": "https://api.github.com/repos/kovertopz/Framework-GL", "Date": "2014-10-28T23:19:24Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((weatherData) == null) { android.widget.Toast.makeText(this, getString(R.string.toastNoWeatherData), Toast.LENGTH_SHORT).show(); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/721/buggy-version/app.src.main.java.com.group32.homework05.CityWeatherActivity.java", "BodyUseAPI": [], "Fixed commit": "0b1a8808209afc2e16da8c16c27e42185036d888", "Url": "https://api.github.com/repos/LupenWonse/Homework05", "Date": "2016-10-09T14:45:27Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xenoage.zong.musiclayout.stamper.PartNameStamper.fText(java.lang.String,com.xenoage.zong.core.text.FormattedTextStyle,Alignment.Right)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((text.getParagraphs().size()) == 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/620/buggy-version/layout.src.com.xenoage.zong.musiclayout.stamper.PartNameStamper.java", "BodyUseAPI": [], "Fixed commit": "ccc082f9c32178f587bc3f761380499099692762", "Url": "https://api.github.com/repos/Xenoage/Zong", "Date": "2016-12-28T12:54:32Z"},
{"Line": "=>575", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ODatabaseRecordThreadLocal.INSTANCE.get().getMetadata().getSchema().existsClass(currentClass.getSimpleName()))) { com.orientechnologies.orient.core.metadata.schema.OSchema schema = ODatabaseRecordThreadLocal.INSTANCE.get().getMetadata().getSchema(); if (java.lang.reflect.Modifier.isAbstract(currentClass.getModifiers())) { oSuperClass = schema.createAbstractClass(currentClass.getSimpleName()); }else { oSuperClass = schema.createClass(currentClass.getSimpleName()); } reloadSchema = true; }else { oSuperClass = ODatabaseRecordThreadLocal.INSTANCE.get().getMetadata().getSchema().getClass(currentClass.getSimpleName()); reloadSchema = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8479/buggy-version/object.src.main.java.com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer.java", "BodyUseAPI": ["ODatabaseRecordThreadLocal.INSTANCE.get().getMetadata().getSchema().getClass(java.lang.String)", "com.orientechnologies.orient.core.metadata.schema.OSchema.createAbstractClass(java.lang.String)", "java.lang.reflect.Modifier.isAbstract(int)", "java.lang.Class<?>.getSimpleName()", "java.lang.Class<?>.getModifiers()", "java.lang.Class<?>.getSimpleName()", "java.lang.Class<?>.getSimpleName()", "com.orientechnologies.orient.core.metadata.schema.OSchema.createClass(java.lang.String)"], "Fixed commit": "25d25fad55821980ee525422745a831e48560331", "Url": "https://api.github.com/repos/maggiolo00/orientdb", "Date": "2014-05-19T16:56:39Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.firebase.client.DataSnapshot.getValue(java.lang.Class)", "s3.thisisbetter.model.DB.getMyUID()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(e.getInvitedHaveResponded().containsKey(myUID))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1726/buggy-version/ThisIsBetter.app.src.main.java.s3.thisisbetter.fragments.EventsInvitedFragment.java", "BodyUseAPI": [], "Fixed commit": "6c5cae31b837b89d86362484b845842bed10938f", "Url": "https://api.github.com/repos/chloehale/ThisIsBetter", "Date": "2016-03-25T16:20:33Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isGroupFiles())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3350/buggy-version/components.formats-bsd.src.loci.formats.in.MicromanagerReader.java", "BodyUseAPI": [], "Fixed commit": "d1b1a4d77eca46fafe370d4f7072e106c7586512", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-03-25T16:49:58Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["loci.formats.FormatReader.isThisType(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (valid && (!(isGroupFiles()))) { try { return isSingleFile(metaFile); } catch (java.lang.Exception e) { loci.formats.in.LOGGER.debug(\"\", e); return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3350/buggy-version/components.formats-bsd.src.loci.formats.in.OMETiffReader.java", "BodyUseAPI": [], "Fixed commit": "d1b1a4d77eca46fafe370d4f7072e106c7586512", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-03-25T16:49:58Z"},
{"Line": "=>456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(s.equalsIgnoreCase(token))) { throw new com.codename1.l10n.ParseException((\"Unparseable string \" + source), startIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/9083/buggy-version/CodenameOne.src.com.codename1.l10n.SimpleDateFormat.java", "BodyUseAPI": [], "Fixed commit": "f51cc278d0be657af29ebbfe409906579b9083c3", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2017-11-21T17:18:22Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.minecraftforge.oredict.OreDictionary.getOres(\"itemRubber\").size()) > 0) { for (net.minecraft.item.ItemStack ore : net.minecraftforge.oredict.OreDictionary.getOres(\"woodRubber\")) { mekanism.common.recipe.RecipeHandler.addPrecisionSawmillRecipe(mekanism.common.util.MekanismUtils.size(ore, 1), new mekanism.api.ChanceOutput(new net.minecraft.item.ItemStack(net.minecraft.block.Block.planks, 4), mekanism.common.util.MekanismUtils.size(net.minecraftforge.oredict.OreDictionary.getOres(\"itemRubber\").get(0), 1), 1.0F)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7751/buggy-version/common.mekanism.common.integration.OreDictManager.java", "BodyUseAPI": [], "Fixed commit": "3e6e31ad3aa1566906287645833dc21737b59d04", "Url": "https://api.github.com/repos/aidancbrady/Mekanism", "Date": "2014-01-30T22:02:56Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (origin.startsWith(\"http\")) { this.whiteList.add(java.util.regex.Pattern.compile(origin.replaceFirst(\"https?://\", \"^https?://(.*\\\\.)?\"))); }else if (matcher.find()) { this.whiteList.add(java.util.regex.Pattern.compile((\"^\" + (origin.replaceFirst(\"//\", \"//(.*\\\\.)?\"))))); }else { this.whiteList.add(java.util.regex.Pattern.compile((\"^https?://(.*\\\\.)?\" + origin))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2812/buggy-version/framework.src.org.apache.cordova.Config.java", "BodyUseAPI": ["java.lang.String.replaceFirst(java.lang.String,java.lang.String)", "java.util.regex.Pattern.compile(java.lang.String)", "java.util.ArrayList<java.util.regex.Pattern>.add(java.util.regex.Pattern)", "java.lang.String.replaceFirst(java.lang.String,java.lang.String)", "java.util.ArrayList<java.util.regex.Pattern>.add(java.util.regex.Pattern)", "java.util.regex.Pattern.compile(java.lang.String)", "java.util.ArrayList<java.util.regex.Pattern>.add(java.util.regex.Pattern)", "java.util.regex.Pattern.compile(java.lang.String)"], "Fixed commit": "f4859444ddca5a94a1bcb8d7fcfef6faedc476d2", "Url": "https://api.github.com/repos/clelland/cordova-android", "Date": "2013-03-26T04:10:26Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (matcher.find()) { this.whiteList.add(java.util.regex.Pattern.compile((\"^\" + origin))); }else { this.whiteList.add(java.util.regex.Pattern.compile((\"^https?://\" + origin))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2812/buggy-version/framework.src.org.apache.cordova.Config.java", "BodyUseAPI": [], "Fixed commit": "f4859444ddca5a94a1bcb8d7fcfef6faedc476d2", "Url": "https://api.github.com/repos/clelland/cordova-android", "Date": "2013-03-26T04:10:26Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((warView.detach(multiComm)) == 1) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3362/buggy-version/AndroidClient.src.view.Game.java", "BodyUseAPI": [], "Fixed commit": "75d0f17a9ef519d4bd23abcb8c941b224ddcd72d", "Url": "https://api.github.com/repos/BykadorovR/AndroidGame", "Date": "2015-11-20T07:31:58Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUris()) != null) { removeAllWatchContentUris(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8419/buggy-version/src.main.java.com.mridang.network.ImprovedExtension.java", "BodyUseAPI": [], "Fixed commit": "efb1862ff988f4663dc6edec68d561efc2e2272e", "Url": "https://api.github.com/repos/mridang/dashclock-network", "Date": "2015-03-29T09:11:19Z"},
{"Line": "=>581", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mosquito.g0.Group5Graph.stuck(ml, ((java.awt.geom.Point2D.Double) (ml.getLocation())))) { greedyLights.put(ml, ((java.awt.geom.Point2D.Double) (collectorLocation))); }else if (greedyLights.containsKey(ml)) { java.awt.geom.Point2D currLocation = ml.getLocation(); java.awt.geom.Point2D destination = greedyLights.get(ml); if (currLocation.equals(destination)) { java.awt.geom.Point2D newDestination = collectorLocation; greedyLights.put(ml, ((java.awt.geom.Point2D.Double) (newDestination))); } dest = greedyLights.get(ml); }else if (ml.getLocation().equals(collectorLocation)) { java.awt.geom.Point2D greedyLocation = greedyLocation(board); greedyLights.put(ml, ((java.awt.geom.Point2D.Double) (greedyLocation))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/195/buggy-version/src.mosquito.g0.Group5Graph.java", "BodyUseAPI": ["java.util.HashMap<mosquito.sim.MoveableLight, java.awt.geom.Point2D.Double>.put(mosquito.sim.MoveableLight,java.awt.geom.Point2D)", "java.util.HashMap<mosquito.sim.MoveableLight, java.awt.geom.Point2D.Double>.put(mosquito.sim.MoveableLight,java.awt.geom.Point2D)", "java.util.HashMap<mosquito.sim.MoveableLight, java.awt.geom.Point2D.Double>.get(mosquito.sim.MoveableLight)", "mosquito.sim.MoveableLight.getLocation()", "ml.getLocation().equals(java.awt.geom.Point2D)", "java.util.HashMap<mosquito.sim.MoveableLight, java.awt.geom.Point2D.Double>.put(mosquito.sim.MoveableLight,java.awt.geom.Point2D)", "java.util.HashMap<mosquito.sim.MoveableLight, java.awt.geom.Point2D.Double>.get(mosquito.sim.MoveableLight)", "mosquito.sim.MoveableLight.getLocation()", "java.util.HashMap<mosquito.sim.MoveableLight, java.awt.geom.Point2D.Double>.containsKey(mosquito.sim.MoveableLight)"], "Fixed commit": "cad4697a8ce18b2ffa7dcc00fbcf3fecf5e72dd7", "Url": "https://api.github.com/repos/mehtatanay/CIS700-Project2", "Date": "2013-10-17T05:51:02Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rel.hasSubRelation()) { if (rel.hasSubRelation()) { relStr += \" ; \" + (rel.getSubRelation().toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8710/buggy-version/core.src.main.java.edu.washington.cs.knowitall.nlp.extraction.ChunkedBinaryExtraction.java", "BodyUseAPI": ["edu.washington.cs.knowitall.nlp.extraction.ChunkedRelationExtraction.getSubRelation()", "edu.washington.cs.knowitall.nlp.extraction.ChunkedRelationExtraction.hasSubRelation()", "rel.getSubRelation().toString()"], "Fixed commit": "fc25471537cb725d3eeb2798c6a6ddbc5e1527b4", "Url": "https://api.github.com/repos/tabergma/relation-extraction", "Date": "2016-05-03T13:27:21Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nextPlayer) != null) { currentPlayer = nextPlayer; nextPlayer = prepareMediaPlayer(context); nextPlayer.setOnPreparedListener(nextPlayerPreparedListener); mp.release(); com.huhx0015.hxaudio.utils.HXLog.d(com.huhx0015.hxaudio.audio.HXMusicEngine.LOG_TAG, \"MUSIC: onCompletion(): Preparing next MediaPlayer object for gapless playback.\"); }else { com.huhx0015.hxaudio.utils.HXLog.e(com.huhx0015.hxaudio.audio.HXMusicEngine.LOG_TAG, \"ERROR: onCompletion(): Unable to set nextPlayer as currentPlayer as nextPlayer was null.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7380/buggy-version/hxaudio.src.main.java.com.huhx0015.hxaudio.audio.HXMusicEngine.java", "BodyUseAPI": [], "Fixed commit": "b37e35b0a970840cb815ea7b8a6b0cd6405f8769", "Url": "https://api.github.com/repos/huhx0015/HXAudioPlayer", "Date": "2017-04-27T16:58:15Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dT <= 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3167/buggy-version/src.main.java.org.jtrfp.trcl.core.Renderer.java", "BodyUseAPI": [], "Fixed commit": "6d24e4e0a54558cfa96b425a772f847f374c4e1f", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2014-06-02T06:03:47Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myUser) != null) isMyUser = myUser.equals(to);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4835/buggy-version/BNUBot.src.net.bnubot.core.Connection.java", "BodyUseAPI": [], "Fixed commit": "7dafdc0afa5abcb9e84c3d3f22c31d4807f90bee", "Url": "https://api.github.com/repos/scottanderson/bnubot", "Date": "2007-11-19T06:17:05Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.joanzapata.iconify.Iconify.findTypefaceOf(com.joanzapata.iconify.Icon)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (descriptor == null) { throw new java.lang.IllegalStateException(((((\"Unable to find the module associated \" + \"with icon \") + (icon.key())) + \", have you registered the module \") + \"you are trying to use with Iconify.with(...) in your Application?\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3571/buggy-version/android-iconify.src.main.java.com.joanzapata.iconify.IconDrawable.java", "BodyUseAPI": [], "Fixed commit": "132fd08a28c89dbcbd560089f9c44bbefed12034", "Url": "https://api.github.com/repos/JoanZapata/android-iconify", "Date": "2015-11-20T13:48:44Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Matcher.group(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotEmpty(gustString)) { gust = java.lang.Integer.parseInt(matcher.group(3).substring(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4719/buggy-version/WeatherStation.src.ch.boxi.weatherStatistic.parser.metar.WindParser.java", "BodyUseAPI": [], "Fixed commit": "976cb38502aa19d8f8da9e020dc3929fa46d1686", "Url": "https://api.github.com/repos/theBoxi/WeatherStation", "Date": "2011-12-18T16:13:44Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["proposalsContext.getUser(request).getUserId()", "proposalsContext.getContestPhase(request).getContestPhasePK()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (com.ext.portlet.service.ProposalVoteLocalServiceUtil.hasUserVoted(contestPhaseId, userId)) { com.ext.portlet.service.ProposalLocalServiceUtil.removeVote(contestPhaseId, userId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8882/buggy-version/portlets.proposals-portlet.src.main.java.org.xcolab.portlets.proposals.view.action.VoteOnProposalActionController.java", "BodyUseAPI": ["com.ext.portlet.service.ProposalLocalServiceUtil.removeVote(long,long)"], "Fixed commit": "a53a828c298b46da8a85a4bc75e34bff4fd4f8ab", "Url": "https://api.github.com/repos/CCI-MIT/XCoLab", "Date": "2014-08-12T09:44:04Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((occurence.getEvent()) instanceof org.bukkit.event.player.PlayerFishEvent) { org.bukkit.event.player.PlayerFishEvent pfe = ((org.bukkit.event.player.PlayerFishEvent) (occurence.getEvent())); if ((pfe.getCaught()) != null) pfe.getCaught().remove(); }else { occurence.setCancelled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3431/buggy-version/src.com.gmail.zariust.otherdrops.OtherDrops.java", "BodyUseAPI": ["com.gmail.zariust.otherdrops.event.OccurredEvent.getEvent()", "com.gmail.zariust.otherdrops.event.OccurredEvent.setCancelled(boolean)"], "Fixed commit": "d9fa575ed17489ec9c21b1e67829a35e8dd32294", "Url": "https://api.github.com/repos/Zarius/Bukkit-OtherBlocks", "Date": "2013-03-30T03:09:39Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((commandRecord.size()) > 0) { this.command = commandRecord.get(commandPointer); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4124/buggy-version/src.ui.view.InputRecord.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "c6b16dc9d96e82137aab4de833c166a64f0f74b9", "Url": "https://api.github.com/repos/cs2103aug2015-w14-2j/main", "Date": "2015-11-09T06:41:30Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.flutterwave.rave.BuildConfig.DEBUG) { logging.setLevel(HttpLoggingInterceptor.Level.BODY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7055/buggy-version/rave.src.main.java.com.flutterwave.rave.service.RaveRestClient.java", "BodyUseAPI": [], "Fixed commit": "a39731f6d3e653922dc82e0618d842d022bb2861", "Url": "https://api.github.com/repos/po10cio/Rave", "Date": "2017-03-23T11:57:03Z"},
{"Line": "=>1053", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mUserToken) != null) { mUserToken.setEnabled(unLock); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7055/buggy-version/rave.src.main.java.com.flutterwave.rave.Components.RaveDialog.java", "BodyUseAPI": [], "Fixed commit": "a39731f6d3e653922dc82e0618d842d022bb2861", "Url": "https://api.github.com/repos/po10cio/Rave", "Date": "2017-03-23T11:57:03Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Node.getNodeName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (documentName.equals(\"sml:PhysicalComponent\")) { schema = org.opengis.cite.sensorml20.util.ValidationUtils.CreateSchema(\"physical_component.xsd\", null); }else if (documentName.equals(\"sml:AggregateProcess\")) { schema = org.opengis.cite.sensorml20.util.ValidationUtils.CreateSchema(\"aggregate_process.xsd\", null); }else if (documentName.equals(\"sml:PhysicalSystem\")) { schema = org.opengis.cite.sensorml20.util.ValidationUtils.CreateSchema(\"physical_system.xsd\", null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3494/buggy-version/src.main.java.org.opengis.cite.sensorml20.level1.CoreConcepts.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "f7bba2cde9ac40a9c1ff067dbdd57df695087f47", "Url": "https://api.github.com/repos/opengeospatial/ets-sensorml20", "Date": "2016-09-07T02:41:45Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.entity.Entity.getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (c1 != c2) { distance = ((int) (c1.getDistance(c1, c2))); ((model.effect.DealDamageEffect) (this.getEffect())).applyEffect(entities.get(i), distance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7519/buggy-version/FBG2.0.src.model.entity.ability.FlameStrikeAbility.java", "BodyUseAPI": ["model.map.pair.CoordinatePair.getDistance(model.map.pair.CoordinatePair,model.map.pair.CoordinatePair)"], "Fixed commit": "c371dad61ff975c2ec2f3dc6eb9cf033b7b658dc", "Url": "https://api.github.com/repos/TeamFinalBoss/GameIteration2", "Date": "2015-03-23T15:12:15Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.entity.Entity.getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (c1 != c2) { distance = ((int) (c1.getDistance(c1, c2))); ((model.effect.DealDamageEffect) (this.getEffect())).applyEffect(entities.get(i), distance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7519/buggy-version/FBG2.0.src.model.entity.ability.CleaveAbility.java", "BodyUseAPI": ["model.map.pair.CoordinatePair.getDistance(model.map.pair.CoordinatePair,model.map.pair.CoordinatePair)"], "Fixed commit": "c371dad61ff975c2ec2f3dc6eb9cf033b7b658dc", "Url": "https://api.github.com/repos/TeamFinalBoss/GameIteration2", "Date": "2015-03-23T15:12:15Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.catrobat.catroid.livewallpaper.LiveWallpaper.previewEngine) != null) { org.catrobat.catroid.livewallpaper.LiveWallpaper.previewEngine.onPause(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/582/buggy-version/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java", "BodyUseAPI": [], "Fixed commit": "b56b8d86f2352050c63be020292ffa3e6586187c", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2013-11-04T10:01:16Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mIndicator.getMeasuredWidth()) > 0) mIndicator.animate().translationX(tab.getX()).setDuration(200); else mIndicator.setTranslationX(tab.getX());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7447/buggy-version/lib.src.main.java.com.loicteillard.easytabs.EasyTabs.java", "BodyUseAPI": ["mIndicator.animate().translationX(tab.getX())", "mIndicator.animate().translationX(tab.getX()).setDuration(int)", "android.view.View.animate()", "android.view.View.setTranslationX(tab.getX())"], "Fixed commit": "b563a6310c9ffe55b1a48d7afa14ca98f2188306", "Url": "https://api.github.com/repos/loicteillard/EasyTabs", "Date": "2017-03-06T11:08:53Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (senderForReminderAlarm != null) { android.app.AlarmManager.AlarmClockInfo alarmClockInfoForReminder = new android.app.AlarmManager.AlarmClockInfo(reminderCal.getTimeInMillis(), showOperation); am.setAlarmClock(alarmClockInfoForReminder, senderForReminderAlarm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7297/buggy-version/src.main.java.trikita.talalarmo.alarm.AlarmController.java", "BodyUseAPI": ["android.app.AlarmManager.setAlarmClock(AlarmManager.AlarmClockInfo,android.app.PendingIntent)"], "Fixed commit": "e0fc5fbee5fc3a9ffc57816887bec1f42dd9ee40", "Url": "https://api.github.com/repos/c-samuel/talalarmo", "Date": "2017-03-06T10:23:50Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["trikita.talalarmo.ui.AlarmLayout.getReminderTimeCalendar(java.util.Calendar,state.settings().sleepingHours())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((reminderCal.getTimeInMillis()) >= (java.util.Calendar.getInstance().getTimeInMillis())) { senderForReminderAlarm = android.app.PendingIntent.getBroadcast(mContext, 1, intent, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7297/buggy-version/src.main.java.trikita.talalarmo.alarm.AlarmController.java", "BodyUseAPI": [], "Fixed commit": "e0fc5fbee5fc3a9ffc57816887bec1f42dd9ee40", "Url": "https://api.github.com/repos/c-samuel/talalarmo", "Date": "2017-03-06T10:23:50Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (colorToFind == \"\") { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5396/buggy-version/Mastermind.src.com.example.mastermind.Game.java", "BodyUseAPI": [], "Fixed commit": "0bf21cab325e5e3fc916a484ffd5450c140ad6b1", "Url": "https://api.github.com/repos/solostyle/androidMastermind", "Date": "2013-07-23T22:52:55Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((article.equals(\"\")) == false) { bufferedWriter_text.write(((((((title.replace(\" \", \"_\")) + \"\\t\\t\") + article) + \"|||\") + (org.apache.commons.lang3.StringUtils.join(entity_links, \" \"))) + \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/30/buggy-version/src.preProcess.PreProcess.java", "BodyUseAPI": ["java.io.BufferedWriter.write(((((((title.replace(\" \", \"_\")) + \"\\t\\t\") + article) + \"|||\") + (org.apache.commons.lang3.StringUtils.join(entity_links, \" \"))) + \"\\n\"))"], "Fixed commit": "a83cf83376230732bd66fd89f11b50fc679744e8", "Url": "https://api.github.com/repos/iamlockelightning/WikiExtractor", "Date": "2017-09-22T12:17:44Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((article.equals(\"\")) == false) { bufferedWriter_text.write(((((((title.replace(\" \", \"_\")) + \"\\t\\t\") + article) + \"|||\") + (org.apache.commons.lang3.StringUtils.join(entity_links, \" \"))) + \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/30/buggy-version/src.preProcess.PreProcess.java", "BodyUseAPI": ["java.io.BufferedWriter.write(((((((title.replace(\" \", \"_\")) + \"\\t\\t\") + article) + \"|||\") + (org.apache.commons.lang3.StringUtils.join(entity_links, \" \"))) + \"\\n\"))"], "Fixed commit": "a83cf83376230732bd66fd89f11b50fc679744e8", "Url": "https://api.github.com/repos/iamlockelightning/WikiExtractor", "Date": "2017-09-22T12:17:44Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((e.getKey()) > 900) && ((e.getKey()) < 920)) { java.lang.System.out.println(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2227/buggy-version/src.main.java.ch.ethz.bsse.cf.utils.Alignment.java", "BodyUseAPI": [], "Fixed commit": "e37a0c24b44e600f4ad5b98410ae89d0efbcd065", "Url": "https://api.github.com/repos/armintoepfer/ConsensusFixer", "Date": "2013-11-27T16:27:30Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((position == 916) && (base == 65)) { java.lang.System.err.println(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2227/buggy-version/src.main.java.ch.ethz.bsse.cf.utils.SFRComputing.java", "BodyUseAPI": [], "Fixed commit": "e37a0c24b44e600f4ad5b98410ae89d0efbcd065", "Url": "https://api.github.com/repos/armintoepfer/ConsensusFixer", "Date": "2013-11-27T16:27:30Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (last != (-1)) { resultString = string.substring(0, last); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4008/buggy-version/smack-extensions.src.main.java.org.jivesoftware.smackx.delay.provider.LegacyDelayInformationProvider.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "c5c5c90b1c6f53eb5bb8df8b0cc6c58338345437", "Url": "https://api.github.com/repos/xtreme-andrew-su/Smack", "Date": "2015-01-21T20:21:44Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isAdded())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3769/buggy-version/app.src.main.java.com.lonebytesoft.thetaleclient.fragment.WrapperFragment.java", "BodyUseAPI": [], "Fixed commit": "fc4acd02fbdf2c63297a7a5ce54ee6492a930330", "Url": "https://api.github.com/repos/hamsterxc/TheTaleClient", "Date": "2015-03-01T17:11:23Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (r < 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/270/buggy-version/JavaLab.src.Circle.java", "BodyUseAPI": [], "Fixed commit": "96470f47689a9ad6910493aba36ec68bb790338d", "Url": "https://api.github.com/repos/Cliwo/HelloGit", "Date": "2016-04-28T15:17:33Z"},
{"Line": "=>7", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((width < 0) || (height < 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/270/buggy-version/JavaLab.src.Rectangle.java", "BodyUseAPI": [], "Fixed commit": "96470f47689a9ad6910493aba36ec68bb790338d", "Url": "https://api.github.com/repos/Cliwo/HelloGit", "Date": "2016-04-28T15:17:33Z"},
{"Line": "=>692", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.lastModifiedDateTime) != null) { this.getHttpHeaders().put(\"Last-Modified\", org.infoglue.deliver.applications.databeans.DeliveryContext.HTTP_DATE_FORMAT.format(this.lastModifiedDateTime)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4848/buggy-version/src.java.org.infoglue.deliver.applications.databeans.DeliveryContext.java", "BodyUseAPI": [], "Fixed commit": "51e733d0c62dde20bb49d47b1d25f8c6527c5b3b", "Url": "https://api.github.com/repos/stenbacka/infoglue", "Date": "2013-06-24T14:13:25Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.length()) >= 2) return s.substring(0, ((s.length()) - 2));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6926/buggy-version/jspwiki-war.src.main.java.org.apache.wiki.plugin.SessionsPlugin.java", "BodyUseAPI": ["java.lang.StringBuilder.substring(int,int)", "java.lang.StringBuilder.length()"], "Fixed commit": "97433effa7fb84bb0ba3fd6650f99df9a2c8ea25", "Url": "https://api.github.com/repos/apache/jspwiki", "Date": "2017-01-21T16:20:53Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((baron.getState()) != (Baron.BaronState.Dead)) { pq.scroll(); if (!(baron.isFalling())) { pq.scroll(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2710/buggy-version/core.src.com.commontimegames.flapper.screens.GameScreen.java", "BodyUseAPI": ["com.commontimegames.flapper.objects.Baron.isFalling()"], "Fixed commit": "3ddc625a3dcd1a1e3c1a8b4fff428e1b339473cc", "Url": "https://api.github.com/repos/CommonTimeGames/Flapper-Baron", "Date": "2014-05-09T02:48:01Z"},
{"Line": "=>496", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { updateLocation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8500/buggy-version/app.src.main.java.com.sysu.yizhu.Activity.Business.AskHelp.AskHelpFragment.java", "BodyUseAPI": [], "Fixed commit": "9b7467fb9b14f40e2e0c12b6b583408768d139a3", "Url": "https://api.github.com/repos/SYSU-yizhu/yizhu-client", "Date": "2017-06-30T09:49:30Z"},
{"Line": "=>1602", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((service.getDeployment()) == null) { service.setDeployment(org.cloudifysource.dsl.ServiceDeploymentFactory.newDedicatedDeplyoment()); }else { if ((service.getDeployment().getGlobal()) != null) { dedicated = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2790/buggy-version/restful.src.main.java.org.cloudifysource.rest.controllers.ServiceController.java", "BodyUseAPI": ["org.cloudifysource.dsl.Service.setDeployment(org.cloudifysource.dsl.ServiceDeploymentFactory.newDedicatedDeplyoment())", "service.getDeployment().getGlobal()", "org.cloudifysource.dsl.Service.getDeployment()"], "Fixed commit": "53dedbdef37b21125e9edc0a4fe8b2887b13f94f", "Url": "https://api.github.com/repos/AsherBond/cloudify", "Date": "2012-10-25T16:06:35Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((totalPiecesToDeploy) == 0) piecesLeftToDeploy = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/133/buggy-version/src.battleships.backend.classhelpers.DeployPieceCounter.java", "BodyUseAPI": [], "Fixed commit": "36b8e11c7bd40bec60dcf89cc616165309ff62a1", "Url": "https://api.github.com/repos/Grupp2/GameBoard-API-Games", "Date": "2014-05-21T07:57:20Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (mainClass != null) { ret.put(io.fabric8.maven.generator.javaexec.JavaExecGenerator.JAVA_MAIN_CLASS_ENV_VAR, mainClass); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/9265/buggy-version/generator.java-exec.src.main.java.io.fabric8.maven.generator.javaexec.JavaExecGenerator.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "cead2e7befc3a55422c875214c6a3fc7855aa8b9", "Url": "https://api.github.com/repos/fabric8io/fabric8-maven-plugin", "Date": "2016-12-07T11:18:48Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (endOfLine >= 0) { underline.append(org.apache.commons.lang3.StringUtils.repeat('-', endOfLine)); }else { underline.append(org.apache.commons.lang3.StringUtils.repeat('-', banner.length())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1253/buggy-version/thucydides-core.src.main.java.net.thucydides.core.steps.ConsoleLoggingListener.java", "BodyUseAPI": ["java.lang.StringBuilder.append(org.apache.commons.lang3.StringUtils.repeat('-', endOfLine))", "org.apache.commons.lang3.StringUtils.repeat(char,int)"], "Fixed commit": "407053f224f39f51e7865e6b4ca2b0f47ce5a45e", "Url": "https://api.github.com/repos/thucydides-webtests/thucydides", "Date": "2012-03-20T08:08:56Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((startDate.equals(today)) && (startTime.isBefore(currentTime))) { return false; }else { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5685/buggy-version/src.main.java.seedu.taskell.model.task.EventTask.java", "BodyUseAPI": [], "Fixed commit": "796b26befd9d593590a6b3fa837cdb0b6e545535", "Url": "https://api.github.com/repos/CS2103AUG2016-W15-C3/main", "Date": "2016-10-25T09:13:07Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dynamicRouteHops.containsKey(i)) { possibleTargetsAtThisLevel.addAll(dynamicRouteHops.get(i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3175/buggy-version/src.torch.router.RouteManager.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.addAll(java.util.ArrayList<java.lang.Integer>)", "java.util.HashMap<java.lang.Integer, java.util.ArrayList<java.lang.Integer>>.get(int)"], "Fixed commit": "1378a393886b36cf2637a399d6c34964b84986c3", "Url": "https://api.github.com/repos/laxika/TorchWS", "Date": "2013-07-10T06:19:07Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (staticRouteHops.containsKey((((routeHops[i]) + \"_\") + i))) { possibleTargetsAtThisLevel.addAll(staticRouteHops.get((((routeHops[i]) + \"_\") + i))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3175/buggy-version/src.torch.router.RouteManager.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.addAll(java.util.ArrayList<java.lang.Integer>)", "java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.Integer>>.get(java.lang.String)"], "Fixed commit": "1378a393886b36cf2637a399d6c34964b84986c3", "Url": "https://api.github.com/repos/laxika/TorchWS", "Date": "2013-07-10T06:19:07Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.item.ItemStack.getItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!((energyItem.getEnergyStored(stack)) >= (energyItem.getMaxEnergyStored(stack)))) energyItem.receiveEnergy(stack, tile.extractEnergy(ForgeDirection.UP, (chargeSpeed / (chargableItems.size())), false), false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6701/buggy-version/src.main.java.com.tgame.advfluxtools.blocks.BlockChargePlatform.java", "BodyUseAPI": ["cofh.api.energy.IEnergyContainerItem.receiveEnergy(net.minecraft.item.ItemStack,tile.extractEnergy(ForgeDirection.UP, (chargeSpeed / (chargableItems.size())), false),boolean)"], "Fixed commit": "693d930dc895e0787f6045fb819a404e9773c13f", "Url": "https://api.github.com/repos/tgame14/Advanced-FluPATHn-Tools", "Date": "2014-05-09T18:54:06Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(selectionValue.equals(\"\"))) selectionArg = selectionValue.split(\",\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8641/buggy-version/app.src.main.java.com.mx.gillustrated.util.DBHelper.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "0078841213e5e9c048909b769315ffe7110730fa", "Url": "https://api.github.com/repos/ythy/GIMG", "Date": "2017-11-21T05:38:13Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentState.getId()) == (-1)) { java.lang.System.out.println(\"Error\"); return; }else { java.lang.System.out.print(((currentState.getId()) + \" \")); currentState = tba.TBA.q0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5950/buggy-version/src.tba.TBA.java", "BodyUseAPI": ["java.io.PrintStream.print(((currentState.getId()) + \" \"))", "tba.State.getId()"], "Fixed commit": "f179ec5c1f740528b30b1766aac7d97528ea6b27", "Url": "https://api.github.com/repos/adamgeraldy/tubestba", "Date": "2016-10-23T14:08:52Z"},
{"Line": "=>449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (postPublishDate != (-1)) { addPostItemToDB(opName, opProfileId, profilePicUrl, postId, postImageUrl, postCaption, postPublishDate, isIGPostLiked); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3846/buggy-version/BlocParty.app.src.main.java.com.ngynstvn.android.blocparty.api.DataSource.java", "BodyUseAPI": ["com.ngynstvn.android.blocparty.api.DataSource.3.addPostItemToDB(java.lang.String,long,java.lang.String,long,java.lang.String,java.lang.String,long,int)"], "Fixed commit": "e16468c337578e877af7d9847ebdf3ce1564ee6d", "Url": "https://api.github.com/repos/Et3SnF/blocparty_project", "Date": "2015-11-29T18:45:14Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["days.getValues().get(((days.getValues().size()) - 1))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (highestDay > 28) { int highestDayOfMonth = new org.joda.time.DateTime(previousYear, highestMonth, 1, 0, 0).dayOfMonth().getMaximumValue(); if (highestDay > highestDayOfMonth) { nearestValue = days.getPreviousValue(highestDay, 1); if ((nearestValue.getShifts()) > 0) { newDate = new org.joda.time.DateTime(previousYear, highestMonth, 1, 23, 59, 59).minusMonths(nearestValue.getShifts()).dayOfMonth().withMaximumValue(); return previousClosestMatch(newDate); }else { highestDay = nearestValue.getValue(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6768/buggy-version/src.main.java.com.cronutils.model.time.ExecutionTime.java", "BodyUseAPI": ["com.cronutils.model.time.TimeNode.getPreviousValue(int,int)"], "Fixed commit": "a65018b1a3f31fa3f7d8d23982b33dcffa8a154f", "Url": "https://api.github.com/repos/kallem/cron-utils", "Date": "2016-03-06T15:10:26Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((indices.size()) == occurences) { for (int index : indices) if ((word.charAt(index)) != letter) isEqual = false; }else isEqual = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1256/buggy-version/Hangman.src.com.example.hangman.EvilGameplay.java", "BodyUseAPI": [], "Fixed commit": "829af0614b7a410a0cc6de9c6ad341b10385b09e", "Url": "https://api.github.com/repos/muzzi11/hangman", "Date": "2013-11-11T03:01:32Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getIntExtra(java.lang.String,Config.FAILED)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (code == (Config.SUCCESS)) { listener.onSuccess(intent.getStringExtra(\"response\")); }else { listener.onFailure(Config.FAILED, intent.getStringExtra(\"response\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4224/buggy-version/Peach.src.main.java.devsupport.ai.peachpay.Peach.java", "BodyUseAPI": [], "Fixed commit": "553cde92aa7a14be8fb637baf08fc9feb2a5bc48", "Url": "https://api.github.com/repos/shardullavekar/peachpay", "Date": "2017-09-11T17:23:17Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (parameterObject.containsKey(\"name\")) { java.lang.String value = ((java.lang.String) (parameterObject.get(\"name\"))); return value.equalsIgnoreCase(verticalName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4731/buggy-version/dao.src.main.java.org.n52.series.db.da.QuantityProfileDataRepository.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "fd0c1d366d3b89dc8840f332fe0e12319e56100c", "Url": "https://api.github.com/repos/ridoo/dao-series-api", "Date": "2017-05-10T09:20:26Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(currentquestion.equals(\"\"))) { window.setQuestionLabel(((\"<html><body style='width: 1200px'>\" + (currentQuestion)) + \"</body></html>\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7885/buggy-version/Keuzepoort.src.SystemController.java", "BodyUseAPI": [], "Fixed commit": "699dcb80e50831b8410dc13e3810d4aa72c19cb9", "Url": "https://api.github.com/repos/WiertOmta/KeuzepoortV3", "Date": "2015-02-25T11:47:49Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (preferenceModel == null) { return preferences; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3756/buggy-version/plugins.eu.hyvar.reconfigurator.input.src.eu.hyvar.reconfigurator.input.exporter.DwPreferenceExporter.java", "BodyUseAPI": [], "Fixed commit": "62cd273a8cc3cee8b1c1c492ad89c7641789e235", "Url": "https://api.github.com/repos/DarwinSPL/DarwinSPL", "Date": "2017-08-28T08:15:41Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connectionSettings) != null) { java.lang.System.out.println((\"changeNetworkSettings: \" + (connectionSettings.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/679/buggy-version/src.net.yotvoo.asterd.app.GameLogic.java", "BodyUseAPI": [], "Fixed commit": "d6930022a4b43a822168d43e269bf04dc7176866", "Url": "https://api.github.com/repos/Jumper456/AsterDroids", "Date": "2017-11-12T21:38:11Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (panda.lang.Strings.isEmpty(c.getPath())) { c.setPath(\"/\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4707/buggy-version/panda-gear.src.main.java.panda.mvc.processor.LocaleProcessor.java", "BodyUseAPI": ["javax.servlet.http.Cookie.setPath(java.lang.String)"], "Fixed commit": "5932ebe4ed3665007263f679579a9749a1db6815", "Url": "https://api.github.com/repos/pandafw/panda", "Date": "2017-03-21T06:34:14Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (client.canChangeAppearance) { client.playerAppearance[0] = gender; client.playerAppearance[1] = apperances[0]; client.playerAppearance[2] = apperances[2]; client.playerAppearance[3] = apperances[3]; client.playerAppearance[4] = apperances[4]; client.playerAppearance[5] = apperances[5]; client.playerAppearance[6] = apperances[6]; client.playerAppearance[7] = apperances[1]; client.playerAppearance[8] = colors[0]; client.playerAppearance[9] = colors[1]; client.playerAppearance[10] = colors[2]; client.playerAppearance[11] = colors[3]; client.playerAppearance[12] = colors[4]; client.getPA().removeAllWindows(); client.getPA().requestUpdates(); client.canChangeAppearance = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1920/buggy-version/Source.src.server.model.players.packet.impl.ChangeAppearance.java", "BodyUseAPI": ["server.model.players.Client.getPA()", "server.model.players.Client.getPA()", "client.getPA().requestUpdates()", "client.getPA().removeAllWindows()"], "Fixed commit": "947465dde78414505c328cf7d0ed58ea4cef026e", "Url": "https://api.github.com/repos/TheeWiki/openPI", "Date": "2016-02-27T00:58:38Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((appUser) == null) { return false; }else if ((appUser.equals(obj)) || (this.getUsername().equals(((com.fave100.shared.requestfactory.AppUserProxy) (obj)).getUsername()))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/136/buggy-version/src.com.fave100.client.CurrentUser.java", "BodyUseAPI": [], "Fixed commit": "88dcf7acb0ea921c20f133fac0af296c6e9707be", "Url": "https://api.github.com/repos/yissachar/fave100", "Date": "2013-07-26T16:10:41Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cpw.mods.fml.common.FMLCommonHandler.instance().getSide()) == (cpw.mods.fml.relauncher.Side.CLIENT)) { cpw.mods.fml.client.registry.ClientRegistry.bindTileEntitySpecialRenderer(teClass, render); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/9043/buggy-version/src.main.java.com.github.hokutomc.lib.HT_Registries.java", "BodyUseAPI": [], "Fixed commit": "f6bf372d13aa5dae46b2956cea357f63b01e9894", "Url": "https://api.github.com/repos/hokutoMc/hokutoLib", "Date": "2015-02-22T14:25:04Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (mSearchBox)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/304/buggy-version/src.com.handsomezhou.xdesktophelper.fragment.QwertySearchFragment.java", "BodyUseAPI": [], "Fixed commit": "25647980d188420b960ac9b48b988eb62c25a4ab", "Url": "https://api.github.com/repos/handsomezhou/XDesktopHelper", "Date": "2015-10-11T12:52:52Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (mT9TelephoneDialpadView)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/304/buggy-version/src.com.handsomezhou.xdesktophelper.fragment.T9SearchFragment.java", "BodyUseAPI": [], "Fixed commit": "25647980d188420b960ac9b48b988eb62c25a4ab", "Url": "https://api.github.com/repos/handsomezhou/XDesktopHelper", "Date": "2015-10-11T12:52:52Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.handsomezhou.xdesktophelper.helper.AppInfoHelper.getAppInfo(android.content.pm.PackageManager,android.content.pm.PackageInfo)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(appInfo.getLabel())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/304/buggy-version/src.com.handsomezhou.xdesktophelper.helper.AppInfoHelper.java", "BodyUseAPI": [], "Fixed commit": "25647980d188420b960ac9b48b988eb62c25a4ab", "Url": "https://api.github.com/repos/handsomezhou/XDesktopHelper", "Date": "2015-10-11T12:52:52Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getID()) != currentID) sender.receiveMessage(new abstracts.Message(q_ary_de_bruijn.abstracts.QDeBruijnMessageType.NEIGHBORHOOD_ADAPTER, q_ary_de_bruijn.generalDeBruijn.GeneralDeBruijnProtocol.Methods.PROBE, level, target, sender, node, currentID, (-1)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4083/buggy-version/self_stabilizing_systems.q_ary_de_bruijn.generalDeBruijn.GeneralDeBruijnProtocol.java", "BodyUseAPI": ["q_ary_de_bruijn.QDeBruijnNode.receiveMessage(abstracts.Message)"], "Fixed commit": "29eb34890f4faccd315ad7be5b7d5211c0274f1c", "Url": "https://api.github.com/repos/Krakomat/Work", "Date": "2016-07-06T14:52:52Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectionRequest) == null) selectionRequest = urlManager.getSearchRequest(UrlManager.SearchTemplate.urlSearch, null, null, false, null, null, null, null, null, null, null, robotsTxtStatus, fetchStatus, null, parserStatus, indexStatus, null, null, null, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1816/buggy-version/src.main.java.com.jaeksoft.searchlib.scheduler.task.TaskUrlManagerAction.java", "BodyUseAPI": [], "Fixed commit": "a20218a5e58ecdb4bdba26494fe32d9fdd153f22", "Url": "https://api.github.com/repos/jaeksoft/opensearchserver", "Date": "2013-12-03T15:18:23Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (results != null) { for (org.bridgedb.statistics.DataSetInfo info : infos) { results.add(org.bridgedb.ws.bean.DataSetInfoBean.asBean(info)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2179/buggy-version/org.bridgedb.uri.ws.core.src.org.bridgedb.ws.bean.DataSetInfoBean.java", "BodyUseAPI": ["java.util.HashSet<org.bridgedb.ws.bean.DataSetInfoBean>.add(org.bridgedb.ws.bean.DataSetInfoBean)"], "Fixed commit": "fe183769ed57f0290d19b4178d36827b8e2cbdc9", "Url": "https://api.github.com/repos/openphacts/BridgeDb", "Date": "2013-04-11T16:44:30Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (beans != null) { for (org.bridgedb.ws.bean.DataSetInfoBean bean : beans) { results.add(org.bridgedb.ws.bean.DataSetInfoBean.asDataSetInfo(bean)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2179/buggy-version/org.bridgedb.uri.ws.core.src.org.bridgedb.ws.bean.DataSetInfoBean.java", "BodyUseAPI": [], "Fixed commit": "fe183769ed57f0290d19b4178d36827b8e2cbdc9", "Url": "https://api.github.com/repos/openphacts/BridgeDb", "Date": "2013-04-11T16:44:30Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((n.getDuration()) == 0) { throw new java.lang.IllegalArgumentException(\"Cannot add a note with a duration of 0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4352/buggy-version/src.cs3500.music.model.MusicModel.java", "BodyUseAPI": [], "Fixed commit": "677285398210d9bccf59ae821c09e3038a8621e0", "Url": "https://api.github.com/repos/evanmjohnson/music-editor", "Date": "2016-11-05T19:27:58Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (node == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2453/buggy-version/src.com.chrisfolger.needsmoredojo.core.amd.ImportReorderer.java", "BodyUseAPI": [], "Fixed commit": "dca721d7a17def75f065feef1a0700f923fab0df", "Url": "https://api.github.com/repos/cefolger/needsmoredojo", "Date": "2013-07-17T02:04:35Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.chrisfolger.needsmoredojo.core.amd.ImportReorderer.getSourceAndDestination(com.intellij.psi.PsiElement,com.chrisfolger.needsmoredojo.core.amd.ImportReorderer.Direction)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((defines == null) || ((defines.length) == 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2453/buggy-version/src.com.chrisfolger.needsmoredojo.core.amd.ImportReorderer.java", "BodyUseAPI": [], "Fixed commit": "dca721d7a17def75f065feef1a0700f923fab0df", "Url": "https://api.github.com/repos/cefolger/needsmoredojo", "Date": "2013-07-17T02:04:35Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clients.get(i).getCallbackObject().equals(c)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6149/buggy-version/src.Server.ChatServer.java", "BodyUseAPI": [], "Fixed commit": "da4a195bf6b19ceb6d7fb4d6f6124a2af6cd862d", "Url": "https://api.github.com/repos/Peonsson/SimpleChatRMI", "Date": "2015-10-06T19:30:05Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (snapshot.getKey().equals(uid)) { while (iterator.hasNext()) dentists.add(iterator.next().getValue(com.epicodus.dentistfinder.models.Dentist.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/71/buggy-version/app.src.main.java.com.epicodus.dentistfinder.adapters.FirebaseDentistViewHolder.java", "BodyUseAPI": [], "Fixed commit": "081ead7df5bf685489c7878e96d8572dba333ca0", "Url": "https://api.github.com/repos/malethr/DentistFinder", "Date": "2017-10-30T04:17:49Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (assignedType instanceof wyil.lang.Type.Strung) { java.lang.String value = from.toString(); value = value.replaceAll(\"=\", \"\"); to = wyil.lang.Constant.V_STRING(value); }else { to = ((wyil.lang.Constant) (from)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8704/buggy-version/modules.wyopcl.src.wyopcl.interpreter.Converter.java", "BodyUseAPI": [], "Fixed commit": "6e3b48de35d431562abee8764002a8592d34fe2d", "Url": "https://api.github.com/repos/samminweng/WhileyOpenCL", "Date": "2014-08-05T18:31:56Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getException()) instanceof java.lang.NoSuchMethodException) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4465/buggy-version/core.src.main.java.com.graphhopper.util.Helper.java", "BodyUseAPI": [], "Fixed commit": "d0a06b6c928ac61d4e3c3ae1a005ae09c8a017c3", "Url": "https://api.github.com/repos/JohannesPelzer/graphhopper", "Date": "2014-04-25T18:01:10Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((totalReads) > 0) { double percentUnique = (((uniqueReads) * 1.0) / (totalReads)) * 100.0; resultMetric.addKeyValue(\"PercentUnique\", getFormattedNumber(percentUnique)); }else { resultMetric.addKeyValue(\"PercentUnique\", \"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8276/buggy-version/java.analyzer.SequenceAnalyzer.UniquenessCalculator.java", "BodyUseAPI": [], "Fixed commit": "7c5c1526c7ec68107549bd8a13dd6a4f28406afe", "Url": "https://api.github.com/repos/nirav99/Illumina-Pipeline-V2", "Date": "2011-09-22T15:21:58Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNetworkConnected()) { new com.example.antonin.tp_android_projetmeteo.MyAsyncTask(this, this).execute(previsionsList, com.example.antonin.tp_android_projetmeteo.MainActivity.url, lv); }else { android.widget.Toast.makeText(this, \"Vous n'\u00eates pas connect\u00e9 \u00e0 internet !\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/9183/buggy-version/app.src.main.java.com.example.antonin.tp_android_projetmeteo.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3e649ea9890be5d0efede4df91ff1f9d233d27ad", "Url": "https://api.github.com/repos/AntoninS/TP_Android_ProjetMeteo", "Date": "2017-04-06T17:34:08Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((matrix) == null) return 0; else return matrix.getTranslation().getData()[1];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7890/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.RelicRecoveryLocalizer.java", "BodyUseAPI": [], "Fixed commit": "0b8c5fb50959b1f4335f53a7ac3f3cc64caa26c0", "Url": "https://api.github.com/repos/HazenRobotics/ftc_app", "Date": "2017-11-25T17:59:54Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getY()) == 0) return 90.0F; else return ((float) (java.lang.Math.toDegrees(java.lang.Math.atan(((getX()) / (getY()))))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7890/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.RelicRecoveryLocalizer.java", "BodyUseAPI": [], "Fixed commit": "0b8c5fb50959b1f4335f53a7ac3f3cc64caa26c0", "Url": "https://api.github.com/repos/HazenRobotics/ftc_app", "Date": "2017-11-25T17:59:54Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((matrix) == null) return 0; else return matrix.getTranslation().getData()[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7890/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.RelicRecoveryLocalizer.java", "BodyUseAPI": [], "Fixed commit": "0b8c5fb50959b1f4335f53a7ac3f3cc64caa26c0", "Url": "https://api.github.com/repos/HazenRobotics/ftc_app", "Date": "2017-11-25T17:59:54Z"},
{"Line": "=>571", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id == null) && ((attributes == null) || (attributes.isEmpty()))) { newSpecializationOf(e2, e1); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5606/buggy-version/prov-n.src.main.java.org.openprovenance.prov.notation.NotationConstructor.java", "BodyUseAPI": [], "Fixed commit": "84adebd7df5e0e0005c241a2224bb182da714436", "Url": "https://api.github.com/repos/lucmoreau/ProvToolbox", "Date": "2015-10-31T22:13:06Z"},
{"Line": "=>587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id == null) && ((attributes == null) || (attributes.isEmpty()))) { newHadMember(c, ll); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5606/buggy-version/prov-n.src.main.java.org.openprovenance.prov.notation.NotationConstructor.java", "BodyUseAPI": [], "Fixed commit": "84adebd7df5e0e0005c241a2224bb182da714436", "Url": "https://api.github.com/repos/lucmoreau/ProvToolbox", "Date": "2015-10-31T22:13:06Z"},
{"Line": "=>556", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id == null) && ((attributes == null) || (attributes.isEmpty()))) { newAlternateOf(e2, e1); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5606/buggy-version/prov-n.src.main.java.org.openprovenance.prov.notation.NotationConstructor.java", "BodyUseAPI": [], "Fixed commit": "84adebd7df5e0e0005c241a2224bb182da714436", "Url": "https://api.github.com/repos/lucmoreau/ProvToolbox", "Date": "2015-10-31T22:13:06Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.getClass()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (ru.otus.pyltsin.HW8.MyGson.ReflectionHelper.isDouble(type)) { jsonArrayBuilder.add(java.lang.Double.valueOf(value.toString())); }else if (ru.otus.pyltsin.HW8.MyGson.ReflectionHelper.isBool(type)) { jsonArrayBuilder.add(((boolean) (value))); }else { throw new java.lang.IllegalAccessException(\"Not found class\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1187/buggy-version/HW8.src.main.java.ru.otus.pyltsin.HW8.MyGson.MyGsonImpl.java", "BodyUseAPI": ["ru.otus.pyltsin.HW8.MyGson.ReflectionHelper.isBool(java.lang.Class<?>)"], "Fixed commit": "c820e6ff8917067a287f273742d9fbec62e0bb77", "Url": "https://api.github.com/repos/pyltsin/otus", "Date": "2017-05-28T10:37:25Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastSyncToken) != null) prop.setProperty(\"lastSyncToken\", lastSyncToken);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2441/buggy-version/src.main.java.net.czechit.gcalsync.RuntimeSettings.java", "BodyUseAPI": [], "Fixed commit": "b1c859be5dc162adb69c0f5edae669e084a166b8", "Url": "https://api.github.com/repos/tonyno/GCalSync", "Date": "2017-12-04T14:56:55Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ap.getCompletedQuestions()) != null) compQs.addAll(ap.getCompletedQuestions().keySet());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3743/buggy-version/app.src.main.java.com.pythagorithm.mathsmartv2.AppLogic.Student.java", "BodyUseAPI": ["ap.getCompletedQuestions().keySet()", "com.pythagorithm.mathsmartv2.AppLogic.AssignmentProgress.getCompletedQuestions()", "java.util.ArrayList<java.lang.String>.addAll(ap.getCompletedQuestions().keySet())"], "Fixed commit": "e0096ce1341f1dd8da2b8ac571ea9d12e2fd124f", "Url": "https://api.github.com/repos/hussu97/MathSmartV2", "Date": "2017-12-11T05:52:22Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.Ben12345rocks.VotingPlugin.Utils.getInstance().convertArray(com.Ben12345rocks.VotingPlugin.TopVoter.TopVoter.plugin.topVoter)", "com.Ben12345rocks.VotingPlugin.Config.ConfigFormat.getInstance().getPageSize()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((topVoters.size()) % pagesize) != 0) { pageSize++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7748/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.TopVoter.TopVoter.java", "BodyUseAPI": [], "Fixed commit": "e76b82c51e6b5f299e0cdc34e27fecbc16e07249", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-05-12T20:27:16Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.Ben12345rocks.VotingPlugin.Config.ConfigFormat.getInstance().getPageSize()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((com.Ben12345rocks.VotingPlugin.Commands.Commands.plugin.voteToday.length) % pagesize) != 0) { maxPage++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7748/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Commands.Commands.java", "BodyUseAPI": [], "Fixed commit": "e76b82c51e6b5f299e0cdc34e27fecbc16e07249", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-05-12T20:27:16Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["alien4cloud.suggestions.services.SuggestionService.normalizeTextForMatching(java.lang.String)", "org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((distance == 1) && (!(normalizedValue.equals(normalizedSuggestion)))) { distance = 0.999; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7393/buggy-version/alien4cloud-core.src.main.java.alien4cloud.suggestions.services.SuggestionService.java", "BodyUseAPI": [], "Fixed commit": "a31a176305fe2c1c4343fef3f46e13340a178c59", "Url": "https://api.github.com/repos/EdgarLGB/alien4cloud", "Date": "2017-04-03T13:05:24Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.htwg.minesweeper.model.Model.getUserFieldSimple(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (field.getFlagString().equals(testField)) { field.resetFlag(numberi, numberj); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4497/buggy-version/src.de.htwg.minesweeper.controller.Controller.java", "BodyUseAPI": ["de.htwg.minesweeper.model.Model.resetFlag(int,int)"], "Fixed commit": "be267e43480003625310ae2250fa7a77cc67868c", "Url": "https://api.github.com/repos/Samhamsam/htwg.se.mineSweeper", "Date": "2016-07-01T18:04:01Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.AbstractBuild.getResult()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (result == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1460/buggy-version/src.main.java.hudson.plugins.claim.AbstractClaimBuildAction.java", "BodyUseAPI": [], "Fixed commit": "dfe0b009e4e907302d034d03cfd6a9dca71d9120", "Url": "https://api.github.com/repos/asgoyal/claim-plugin", "Date": "2013-01-29T03:51:42Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.AbstractBuild<?, ?>.getAction(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (otherClaim == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1460/buggy-version/src.main.java.hudson.plugins.claim.AbstractClaimBuildAction.java", "BodyUseAPI": [], "Fixed commit": "dfe0b009e4e907302d034d03cfd6a9dca71d9120", "Url": "https://api.github.com/repos/asgoyal/claim-plugin", "Date": "2013-01-29T03:51:42Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.plugins.claim.AbstractClaimBuildAction<T>.getItems()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (items == null) { return buildList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1460/buggy-version/src.main.java.hudson.plugins.claim.AbstractClaimBuildAction.java", "BodyUseAPI": [], "Fixed commit": "dfe0b009e4e907302d034d03cfd6a9dca71d9120", "Url": "https://api.github.com/repos/asgoyal/claim-plugin", "Date": "2013-01-29T03:51:42Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (build == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1460/buggy-version/src.main.java.hudson.plugins.claim.AbstractClaimBuildAction.java", "BodyUseAPI": [], "Fixed commit": "dfe0b009e4e907302d034d03cfd6a9dca71d9120", "Url": "https://api.github.com/repos/asgoyal/claim-plugin", "Date": "2013-01-29T03:51:42Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((menuList.get(position).getAmount()) != 0) { holder.number.setText(java.lang.String.valueOf(menuList.get(position).getAmount())); }else { holder.number.setText(\"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6319/buggy-version/app.src.main.java.com.buu.se.duanrestaurant.MenuAdapter.java", "BodyUseAPI": ["java.lang.String.valueOf(menuList.get(position).getAmount())", "java.util.ArrayList<com.buu.se.duanrestaurant.Menus>.get(int)", "menuList.get(position).getAmount()", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "6cf41c56897e6f4e7f2d8390e223af0d7b744938", "Url": "https://api.github.com/repos/thamrongs/DuanRestaurant", "Date": "2015-04-23T06:42:09Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (au.edu.uq.cmm.paul.grabber.WorkEntry.LOG.isDebugEnabled()) { au.edu.uq.cmm.paul.grabber.WorkEntry.LOG.debug(\"Cause of previous exception\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1888/buggy-version/paul.src.main.java.au.edu.uq.cmm.paul.grabber.WorkEntry.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,java.io.IOException)"], "Fixed commit": "f2707bfe88a1deb441ad0107711e9c9457725fc8", "Url": "https://api.github.com/repos/crawley/CMM-data-grabber", "Date": "2013-07-26T06:01:46Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((g.getCopiedFile()) == null) { au.edu.uq.cmm.paul.grabber.WorkEntry.LOG.info(((\"Leaving out file \" + (g.getFile())) + \" which wasn't previously enqueued\")); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1888/buggy-version/paul.src.main.java.au.edu.uq.cmm.paul.grabber.WorkEntry.java", "BodyUseAPI": ["org.slf4j.Logger.info(((\"Leaving out file \" + (g.getFile())) + \" which wasn't previously enqueued\"))", "au.edu.uq.cmm.paul.grabber.GrabbedFile.getFile()"], "Fixed commit": "f2707bfe88a1deb441ad0107711e9c9457725fc8", "Url": "https://api.github.com/repos/crawley/CMM-data-grabber", "Date": "2013-07-26T06:01:46Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this) == (minestrapteam.minestrappolation.lib.MBlocks.meuroditeOre)) || ((this) == (minestrapteam.minestrappolation.lib.MBlocks.radiantQuartzOre))) { return 1 + (random.nextInt((fortune + 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8865/buggy-version/src.main.java.minestrapteam.mcore.block.MCBlock.java", "BodyUseAPI": [], "Fixed commit": "2ad63f32f08b68a3cbe757177cd2e90657c38a1e", "Url": "https://api.github.com/repos/MinestrapTeam/Minestrappolation-2", "Date": "2014-07-19T22:55:51Z"},
{"Line": "=>1922", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (variable == null) { addValidClassUses(\"\", result, request, clazz); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5057/buggy-version/quorum.src.org.quorum.vm.implementation.QuorumVirtualMachine.java", "BodyUseAPI": [], "Fixed commit": "f9fab01f8f1ab897637daf1215e013e9ea38a6f9", "Url": "https://api.github.com/repos/rjnienaber/quorum-ci", "Date": "2013-08-26T04:11:40Z"},
{"Line": "=>1932", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (variable == null) { addPrimitiveValues(result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5057/buggy-version/quorum.src.org.quorum.vm.implementation.QuorumVirtualMachine.java", "BodyUseAPI": [], "Fixed commit": "f9fab01f8f1ab897637daf1215e013e9ea38a6f9", "Url": "https://api.github.com/repos/rjnienaber/quorum-ci", "Date": "2013-08-26T04:11:40Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((x % 16) == 0) rebuildChunk(((x / 16) - 1), (z / 16));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6628/buggy-version/src.com.lassedissing.gamenight.client.ChunkManager.java", "BodyUseAPI": ["com.lassedissing.gamenight.client.ChunkManager.rebuildChunk(int,int)"], "Fixed commit": "78a3a92fd3c815ffca85a9a3ad35269cf0b96e9c", "Url": "https://api.github.com/repos/Dissing/GameNight", "Date": "2014-08-26T19:10:50Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((x % 16) == 15) rebuildChunk(((x / 16) + 1), (z / 16));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6628/buggy-version/src.com.lassedissing.gamenight.client.ChunkManager.java", "BodyUseAPI": ["com.lassedissing.gamenight.client.ChunkManager.rebuildChunk(int,int)"], "Fixed commit": "78a3a92fd3c815ffca85a9a3ad35269cf0b96e9c", "Url": "https://api.github.com/repos/Dissing/GameNight", "Date": "2014-08-26T19:10:50Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((z % 16) == 15) rebuildChunk((x / 16), ((z / 16) + 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6628/buggy-version/src.com.lassedissing.gamenight.client.ChunkManager.java", "BodyUseAPI": ["com.lassedissing.gamenight.client.ChunkManager.rebuildChunk(int,int)"], "Fixed commit": "78a3a92fd3c815ffca85a9a3ad35269cf0b96e9c", "Url": "https://api.github.com/repos/Dissing/GameNight", "Date": "2014-08-26T19:10:50Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((z % 16) == 0) rebuildChunk((x / 16), ((z / 16) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6628/buggy-version/src.com.lassedissing.gamenight.client.ChunkManager.java", "BodyUseAPI": ["com.lassedissing.gamenight.client.ChunkManager.rebuildChunk(int,int)"], "Fixed commit": "78a3a92fd3c815ffca85a9a3ad35269cf0b96e9c", "Url": "https://api.github.com/repos/Dissing/GameNight", "Date": "2014-08-26T19:10:50Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSupportFragmentManager().getFragments()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fragments != null) { for (android.support.v4.app.Fragment childFragment : fragments) { if ((childFragment instanceof ar.com.wolox.wolmo.core.fragment.IWoloxFragment) && (childFragment.isVisible())) { if (((ar.com.wolox.wolmo.core.fragment.IWoloxFragment) (childFragment)).onBackPressed()) return; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2030/buggy-version/core.src.main.java.ar.com.wolox.wolmo.core.activity.WoloxActivity.java", "BodyUseAPI": [], "Fixed commit": "8d80b531e3319865560633ae51010139bea949a5", "Url": "https://api.github.com/repos/Wolox/wolmo-core-android", "Date": "2017-03-22T15:15:11Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(line.isEmpty())) skaters.add(parseCSV(line));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1928/buggy-version/TeamGen.src.TeamGen.CSVSkaterSource.java", "BodyUseAPI": ["java.util.List<TeamGen.Skater>.add(TeamGen.Skater)", "TeamGen.CSVSkaterSource.parseCSV(java.lang.String)"], "Fixed commit": "e9faa3b79359b26bf2ed3398d7619cde5515d38a", "Url": "https://api.github.com/repos/haansn08/TeamGen", "Date": "2014-09-30T19:07:32Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Thread.interrupted()) == true) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1621/buggy-version/at.sunplugged.z600.core.conveyor.src.at.sunplugged.z600.conveyor.impl.ConveyorControlServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "02b126ed89c37b9be13717c9e91d6b84eacf4018", "Url": "https://api.github.com/repos/freelancer1845/at.sunplugged.z600", "Date": "2017-06-20T18:33:37Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getAction()) != (org.bukkit.event.block.Action.PHYSICAL)) { session.onSpectatorInteract(player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6769/buggy-version/src.main.java.org.bitbucket.ucchy.fnafim.game.GameSessionListener.java", "BodyUseAPI": [], "Fixed commit": "18b00e43b7e0787fc3ba64dea43a6c6adc0810e5", "Url": "https://api.github.com/repos/ucchyocean/Five-Nights-at-Freddy-s-in-Minecraft", "Date": "2015-06-16T14:56:27Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["stage.wstp.others.WordNetTool.getInstance().getSynonymsTags(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((original.size()) > limits) { synonyms = new java.util.HashSet(((java.util.List<java.lang.String>) (original.subList(0, limits)))); }else { synonyms = new java.util.HashSet(((java.util.ArrayList<java.lang.String>) (original))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1522/buggy-version/src.stage.wstp.search.tools.TransformAndOrderRequest.java", "BodyUseAPI": ["java.util.List<java.lang.String>.subList(int,int)"], "Fixed commit": "4a493e08c644679a62941c96e4ec1a02976a1d6c", "Url": "https://api.github.com/repos/emmanuelJd/WSTP", "Date": "2015-03-20T17:05:33Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((singlePortion * mealPortion) <= totalPortions) mealQuantity = singlePortion * mealPortion; else mealQuantity = totalPortions;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8984/buggy-version/src.ratios.Ratios.java", "BodyUseAPI": [], "Fixed commit": "24d1bd67a8a5dc4a2ebd604d9f48c84812f4feb1", "Url": "https://api.github.com/repos/HariniParth/Ratios", "Date": "2017-11-17T23:24:13Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((this.healthCheck) == null) && (lbHealthCheck != null)) { this.healthCheck = lbHealthCheck; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1822/buggy-version/code.iaas.config-item.server.src.main.java.io.cattle.platform.configitem.context.data.LoadBalancerTargetsInfo.java", "BodyUseAPI": [], "Fixed commit": "9fdeba382d6738550dca197e59855295f32edad2", "Url": "https://api.github.com/repos/alena1108/cattle", "Date": "2015-07-09T22:51:38Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toUpperCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (denizen.getScripts().contains(scriptKey)) { net.aufdemrand.denizen.scripts.requirements.RequirementsMode mode = new net.aufdemrand.denizen.scripts.requirements.RequirementsMode(denizen.getScripts().getString(scriptKey)); return new net.aufdemrand.denizen.scripts.requirements.RequirementsContext(mode, requirements, scriptName).attachPlayer(player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6994/buggy-version/src.main.java.net.jeebiss.questmanager.quests.QuestController.java", "BodyUseAPI": ["denizen.getScripts().getString(java.lang.String)", "net.aufdemrand.denizen.Denizen.getScripts()"], "Fixed commit": "76bedd18f07c2bc1c26e981fdb6fc56b0489b816", "Url": "https://api.github.com/repos/Jeebiss/QuestManager", "Date": "2013-01-23T03:55:49Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((worm.getWeapon().getCurrentWeapon()) == null) { java.lang.System.out.println(\"Toggled weapon\"); getActionHandler().toggleWeapon(worm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2377/buggy-version/1314-Worms-Part3.src.statement.action.Shoot.java", "BodyUseAPI": ["getActionHandler().toggleWeapon(worms.model.Worm)"], "Fixed commit": "b3cff2e8ddc51cd52491d9fdd96b1bee24fde5a9", "Url": "https://api.github.com/repos/WormsRepository/OGP_PROJECT_WORMS", "Date": "2014-05-21T09:46:56Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.skyincity.qaa.pathfinder.IPfStoryPicker.getStory()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (pfStory == null) { com.skyincity.qaa.pathfinder.SeleniumWithTracking.log.warn(\"Story for snapshot was not defined \", new java.lang.Exception(\"Store stacktrace excep[tion\")); }else { pfStory.addSnapshot(snapshot); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6316/buggy-version/skyincityqaa.src.main.java.com.skyincity.qaa.pathfinder.SeleniumWithTracking.java", "BodyUseAPI": ["com.skyincity.qaa.pathfinder.story.IPfStory.addSnapshot(com.skyincity.qaa.pathfinder.snapshot.BasePfSnapshot)"], "Fixed commit": "8e634635db322c0155e703dd6813331da321f33f", "Url": "https://api.github.com/repos/docentmail/skyincity-qaa", "Date": "2013-05-03T05:44:33Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((values) != null) && ((values.length) > (index))) { value = java.lang.Double.toString(get()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6097/buggy-version/src.net.benmann.evald.Variable.java", "BodyUseAPI": [], "Fixed commit": "6d111d044d73a6710e489985301b7499ceaefa55", "Url": "https://api.github.com/repos/Ben-Mann/evald", "Date": "2015-07-24T03:27:07Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (res > 0) { currentSize += res; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3645/buggy-version/core.src.main.java.io.undertow.websockets.core.BufferedTextMessage.java", "BodyUseAPI": [], "Fixed commit": "4e0acac596ec3363b97502205c1e772a76ae2bc7", "Url": "https://api.github.com/repos/pferraro/undertow", "Date": "2014-02-15T06:48:15Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((environment.getVersion()) == (se.glassfish.asadmin.api.Version.V2)) { int index = domain.indexOf(\" \"); java.lang.String domainName = domain.substring(0, index); java.lang.String status = domain.substring((index + 1), domain.length()); boolean starting = status.equals(\"starting\"); boolean running = (status.equals(\"running\")) || (status.equals(\"requires restart\")); boolean restart = status.equals(\"requires restart\"); result.add(new se.glassfish.asadmin.api.command.DomainInfo(domainName, running, restart)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3761/buggy-version/src.main.java.se.glassfish.asadmin.api.command.ListDomainsCommand.java", "BodyUseAPI": [], "Fixed commit": "27a39bd70764c664aadc0d465913b051816043db", "Url": "https://api.github.com/repos/patbos/glassfish-asadmin-api", "Date": "2012-03-18T16:24:23Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((environment.getVersion()) == (se.glassfish.asadmin.api.Version.V3_1)) { int index = domain.indexOf(\" \"); java.lang.String domainName = domain.substring(0, index); java.lang.String status = domain.substring((index + 1), domain.length()); boolean starting = status.equals(\"starting\"); boolean running = (status.equals(\"running\")) || (status.equals(\"running, restart required to apply configuration changes\")); boolean restart = status.equals(\"running, restart required to apply configuration changes\"); result.add(new se.glassfish.asadmin.api.command.DomainInfo(domainName, running, restart)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3761/buggy-version/src.main.java.se.glassfish.asadmin.api.command.ListDomainsCommand.java", "BodyUseAPI": [], "Fixed commit": "27a39bd70764c664aadc0d465913b051816043db", "Url": "https://api.github.com/repos/patbos/glassfish-asadmin-api", "Date": "2012-03-18T16:24:23Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((driver.getCar()) != null) { com.teamd.taxi.entity.Car car = carRepository.findOne(driver.getCar().getCarId()); car.setDriver(driver); carRepository.save(car); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8244/buggy-version/src.main.java.com.teamd.taxi.service.DriverService.java", "BodyUseAPI": ["com.teamd.taxi.entity.Driver.getCar()", "com.teamd.taxi.entity.Car.setDriver(com.teamd.taxi.entity.Driver)", "driver.getCar().getCarId()", "com.teamd.taxi.persistence.repository.CarRepository.findOne(driver.getCar().getCarId())"], "Fixed commit": "cd6e6e672489a65b13f3cf048ec73d27d66d0de7", "Url": "https://api.github.com/repos/NetCracker-TeamD/TaxiService", "Date": "2015-05-26T20:10:41Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(loadingSpinner.isShowing())) loadingSpinner.show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1223/buggy-version/app.src.main.java.uk.ac.ncl.csc2022.t14.bankingapp.server.live.LiveServerConnector.java", "BodyUseAPI": ["android.app.ProgressDialog.show()"], "Fixed commit": "1617d89528fa26cad983f3f2b70e5e4c05c5ddb8", "Url": "https://api.github.com/repos/robb-j/t14-mobile", "Date": "2015-04-14T16:17:49Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(biome.isWater())) { waterLevel += water; totalWaterTraversed += water; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/234/buggy-version/src.main.java.me.lucaspickering.terraingen.world.Tile.java", "BodyUseAPI": [], "Fixed commit": "414fef81fe16790065f2f899251ba6d8568e838d", "Url": "https://api.github.com/repos/LucasPickering/terra", "Date": "2017-04-21T16:00:19Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (extractedFile.isFile()) { org.codehaus.plexus.util.FileUtils.copyFile(extractedFile, artifactFile); }else if ((extractedFile.isDirectory()) && (artifactItem.isRepack())) { org.codehaus.plexus.archiver.Archiver archiver = archiverManager.getArchiver(artifactFile); archiver.setDestFile(artifactFile); archiver.addDirectory(extractedFile); archiver.createArchive(); }else { throw new org.apache.maven.plugin.MojoFailureException(((((((((((\"Could not find target artifact file to \" + (\"extract from downloaded resouce: \" + \"\\r\\n groupId : \")) + (artifact.getGroupId())) + \"\\r\\n artifactId : \") + (artifact.getArtifactId())) + \"\\r\\n version : \") + (artifact.getVersion())) + \"\\r\\n extractFile : \") + (artifactItem.getExtractFile())) + \"\\r\\n download URL : \") + (artifactItem.getDownloadUrl()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3617/buggy-version/maven-external-dependency-plugin.src.main.java.com.savage7.maven.plugin.dependency.ResolveExternalDependencyMojo.java", "BodyUseAPI": ["org.codehaus.plexus.util.FileUtils.copyFile(java.io.File,java.io.File)", "org.codehaus.plexus.archiver.Archiver.addDirectory(java.io.File)", "java.io.File.isDirectory()"], "Fixed commit": "8b36522d0b0f6132a4265f317e4f7e18f383f1f0", "Url": "https://api.github.com/repos/openam-org-ru/maven-external-dependency-plugin", "Date": "2010-10-12T22:28:38Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(mLoaded)) && ((mCenter) != null)) map.moveCamera(mCenter);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/735/buggy-version/app.src.main.java.com.mhacks.android.ui.map.MapFragment.java", "BodyUseAPI": [], "Fixed commit": "712aa990f249a9e48798bed8b7347d29b708fae4", "Url": "https://api.github.com/repos/mhacks/MHacks-Android", "Date": "2014-08-07T01:39:13Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.talend.repository.model.RepositoryNode.getObjectType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (repositoryType == (org.talend.core.model.repository.ERepositoryObjectType.SVG_BUSINESS_PROCESS)) { item = PropertiesFactory.eINSTANCE.createSVGBusinessProcessItem(); }else if (repositoryType == (org.talend.core.model.repository.ERepositoryObjectType.METADATA_EDIFACT)) { item = PropertiesFactory.eINSTANCE.createEDIFACTConnectionItem(); }else if (repositoryType == (org.talend.core.model.repository.ERepositoryObjectType.METADATA_VALIDATION_RULES)) { item = PropertiesFactory.eINSTANCE.createValidationRulesConnectionItem(); }else if (repositoryType == (org.talend.core.model.repository.ERepositoryObjectType.METADATA_HEADER_FOOTER)) { item = PropertiesFactory.eINSTANCE.createHeaderFooterConnectionItem(); }else if (repositoryType == (org.talend.core.model.repository.ERepositoryObjectType.METADATA_FILE_BRMS)) { item = PropertiesFactory.eINSTANCE.createBRMSConnectionItem(); }else if (repositoryType == (org.talend.core.model.repository.ERepositoryObjectType.METADATA_FILE_FTP)) { item = PropertiesFactory.eINSTANCE.createFTPConnectionItem(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5021/buggy-version/main.plugins.org.talend.core.repository.src.main.java.org.talend.core.repository.ui.actions.DuplicateAction.java", "BodyUseAPI": [], "Fixed commit": "cb2b1c38c1fa18acc65e201d1c799b89ddf97c59", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2015-02-12T08:02:27Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rnRForm.getSubmittedTime()) != null) { root.addProperty(\"clientSubmittedTime\", org.openlmis.core.utils.DateUtil.formatDate(rnRForm.getSubmittedTime(), \"yyyy-MM-dd HH:mm:ss\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8755/buggy-version/app.src.main.java.org.openlmis.core.network.adapter.RnrFormAdapter.java", "BodyUseAPI": ["org.openlmis.core.model.RnRForm.getSubmittedTime()", "org.openlmis.core.utils.DateUtil.formatDate(rnRForm.getSubmittedTime(),java.lang.String)", "com.google.gson.JsonObject.addProperty(java.lang.String,org.openlmis.core.utils.DateUtil.formatDate(rnRForm.getSubmittedTime(), \"yyyy-MM-dd HH:mm:ss\"))"], "Fixed commit": "2938f9de58b7662485165226b966cc651ce3a9e4", "Url": "https://api.github.com/repos/SIGLUS/lmis-moz-mobile", "Date": "2015-11-20T09:23:58Z"},
{"Line": "=>639", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((minTimeInverval) != (java.lang.Long.MAX_VALUE)) { intval = java.lang.Math.max(intval, ((minTimeInverval) / 20)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3622/buggy-version/smart-rule.src.main.java.org.smartdata.rule.parser.SmartRuleVisitTranslator.java", "BodyUseAPI": ["java.lang.Math.max(long,long)"], "Fixed commit": "28cbeb1050416319d143138eb171323a3962953c", "Url": "https://api.github.com/repos/yanpingyou/SSM", "Date": "2017-07-21T01:41:14Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isOwnerSet())) { repairMissingMaster(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2272/buggy-version/src.generated.java.scrum.server.collaboration.GEmoticon.java", "BodyUseAPI": [], "Fixed commit": "26221af46dca91368a87f4cbee7c47b52cb03cfc", "Url": "https://api.github.com/repos/Kunagi/kunagi", "Date": "2011-09-14T22:09:54Z"},
{"Line": "=>676", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentStruct) != null) && (!(currentlyInFunction))) { output.append(\"\\n}\\n\"); }else { output.append(\";\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/281/buggy-version/FirstSteps.src.interpreter.ToC.java", "BodyUseAPI": [], "Fixed commit": "e9488ac68071210bb5bde91ba03b2a266be3d73d", "Url": "https://api.github.com/repos/Rakito/Compilerbau", "Date": "2013-02-26T14:40:01Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["balle.world.Snapshot.getOpponent()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((oppRobot != null) && ((oppRobot.getPosition()) != null)) { oppDistToGoal = oppRobot.getPosition().dist(opponentsGoal.getPosition()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/9309/buggy-version/src.balle.strategy.planner.GoToObjectSafeProportional.java", "BodyUseAPI": ["oppRobot.getPosition().dist(opponentsGoal.getPosition())", "balle.world.objects.Robot.getPosition()"], "Fixed commit": "4d4ad709fe4bc9d01fe9c2150290acc31c02c14e", "Url": "https://api.github.com/repos/RimasTr/sdp-group6", "Date": "2013-04-01T21:37:06Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((oppRobot != null) && ((oppRobot.getPosition()) != null)) { oppDistanceToGoal = oppRobot.getPosition().dist(ourGoal.getPosition()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/9309/buggy-version/src.balle.strategy.Game2.java", "BodyUseAPI": ["oppRobot.getPosition().dist(ourGoal.getPosition())", "balle.world.objects.Robot.getPosition()"], "Fixed commit": "4d4ad709fe4bc9d01fe9c2150290acc31c02c14e", "Url": "https://api.github.com/repos/RimasTr/sdp-group6", "Date": "2013-04-01T21:37:06Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((retainerFragment.postMortem) != null) { android.widget.Toast.makeText(this, R.string.msg_corrupt_game_file, Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/9082/buggy-version/src.de.onyxbits.textfiction.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "51ac43b91c4013252dc4192c7137487cbabfda58", "Url": "https://api.github.com/repos/onyxbits/TextFiction", "Date": "2014-01-06T01:22:20Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["emppasstext.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((pass.length()) < 6) { android.widget.Toast.makeText(getApplicationContext(), \"Password too short, enter minimum 6 characters!\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2835/buggy-version/app.src.main.java.com.learn.shruti.workforceanalysis.AddEmployeeActivity.java", "BodyUseAPI": [], "Fixed commit": "c72ebe7a12d214f10940debf2b6794b97fb334aa", "Url": "https://api.github.com/repos/shruti9619/WorkforceAnalyser", "Date": "2017-08-09T17:03:36Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parent.getLayoutManager()) instanceof android.support.v7.widget.GridLayoutManager) { drawHorizontal(c, parent); drawVertical(c, parent); }else { if ((builder.orientationParams.orientation) == (android.support.v7.widget.LinearLayoutManager.HORIZONTAL)) { drawHorizontal(c, parent); }else { drawVertical(c, parent); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4284/buggy-version/src.main.java.com.joy.ui.view.recyclerview.ItemDecoration.java", "BodyUseAPI": ["com.joy.ui.view.recyclerview.ItemDecoration.drawVertical(android.graphics.Canvas,android.support.v7.widget.RecyclerView)", "com.joy.ui.view.recyclerview.ItemDecoration.drawHorizontal(android.graphics.Canvas,android.support.v7.widget.RecyclerView)", "com.joy.ui.view.recyclerview.ItemDecoration.drawHorizontal(android.graphics.Canvas,android.support.v7.widget.RecyclerView)", "com.joy.ui.view.recyclerview.ItemDecoration.drawVertical(android.graphics.Canvas,android.support.v7.widget.RecyclerView)"], "Fixed commit": "c07d69100122aec7ed18ea43a7f0055e61a510f7", "Url": "https://api.github.com/repos/joy-inc/core-ui", "Date": "2017-01-03T08:00:20Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.resources.ResourcesPlugin.getWorkspace().getRoot().getProject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(project.isOpen())) { throw new java.io.IOException(((\"project \" + (uri.getAuthority())) + \" is closed.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6859/buggy-version/src.org.rascalmpl.eclipse.uri.ProjectURIResolver.java", "BodyUseAPI": [], "Fixed commit": "9892eebed5cf9d25f5a2000ce52be0c8a56fd700", "Url": "https://api.github.com/repos/cwi-swat/rascal-eclipse", "Date": "2014-10-28T10:16:20Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.ironjan.mensaupb.opening_times.data_storage.OpeningTimesKeeper.isOpenOn(java.lang.String,java.lang.String)", "de.ironjan.mensaupb.menus_ui.MenuListingAdapter.isEmpty()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isEmpty && isOpen) { mLoadingView.setVisibility(View.VISIBLE); mClosed.setVisibility(View.GONE); }else if (isEmpty) { mLoadingView.setVisibility(View.GONE); mClosed.setVisibility(View.VISIBLE); }else { mLoadingView.setVisibility(View.GONE); mClosed.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/511/buggy-version/app.src.main.java.de.ironjan.mensaupb.menus_ui.MenuListingFragment.java", "BodyUseAPI": [], "Fixed commit": "8420020b3653f9324347b848dd138f01b72b2cb7", "Url": "https://api.github.com/repos/ironjan/MensaUPB", "Date": "2015-06-08T13:42:04Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rawMessage.isTxMessage()) { executeMcMessage(mcMessage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/303/buggy-version/modules.core.src.main.java.org.mycontroller.standalone.provider.mc.McProviderBridge.java", "BodyUseAPI": [], "Fixed commit": "705baa93a99da1ca00958277ed9b8f6b2a4504e1", "Url": "https://api.github.com/repos/mycontroller-org/mycontroller", "Date": "2017-01-13T10:25:15Z"}]}
