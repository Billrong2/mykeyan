{"UNKNOWN to If":[{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getType()) instanceof Code.AST.Type.ClassType) node.setType(currentScope.findType(node.getType().getTypeName()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3312/buggy-version/src.Code.ASTTraversal.SemanticChecker.java", "BodyUseAPI": ["node.getType().getTypeName()", "Code.ASTTraversal.VarDecNode.getType()", "Code.ASTTraversal.VarDecNode.setType(currentScope.findType(node.getType().getTypeName()))", "Code.ASTTraversal.Scope.Scope.findType(node.getType().getTypeName())"], "Fixed commit": "bb337badf9d5d5cfe7858192b0e153367a1d3453", "Url": "https://api.github.com/repos/TianBoyu/Mlang_Compiler", "Date": "2018-04-23T16:26:38Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((node.getArray().getExprType()) instanceof Code.AST.Type.ArrayType)) errorHandler.addError(node.getPosition(), \"'[]' can not be applied to non-array element\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3312/buggy-version/src.Code.ASTTraversal.SemanticChecker.java", "BodyUseAPI": ["Code.ASTTraversal.ErrorHandler.addError(node.getPosition(),java.lang.String)", "Code.ASTTraversal.ArrayExprNode.getPosition()"], "Fixed commit": "bb337badf9d5d5cfe7858192b0e153367a1d3453", "Url": "https://api.github.com/repos/TianBoyu/Mlang_Compiler", "Date": "2018-04-23T16:26:38Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (waypoints.isEmpty()) { subTrajectory.add().setConstant(0.0, subTrajectoryDuration, us.ihmc.commonWalkingControlModules.capturePoint.smoothCMPBasedICPPlanner.AMGeneration.CommandBasedAngularMomentumTrajectoryGenerator.zeroPoint); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8616/buggy-version/ihmc-common-walking-control-modules.src.main.java.us.ihmc.commonWalkingControlModules.capturePoint.smoothCMPBasedICPPlanner.AMGeneration.CommandBasedAngularMomentumTrajectoryGenerator.java", "BodyUseAPI": [], "Fixed commit": "976bec81b5f7c6b4069c816a834dfce4cf062f6f", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-open-robotics-software", "Date": "2018-09-14T02:11:09Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((extractMetaFields) == true) && (size > 0)) { moParameterListString += \",\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3679/buggy-version/src.main.java.com.bodastage.boda_huaweicmobjectparser.HuaweiCMObjectParser.java", "BodyUseAPI": [], "Fixed commit": "9d32c49f31977870fd8622a102e97707f1893d7b", "Url": "https://api.github.com/repos/bodastage/boda-huaweicmobjectparser", "Date": "2018-07-29T20:42:07Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(line.contains(\":\"))) { throw new java.lang.Exception((\"Wrong format. Contents:\" + line)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3679/buggy-version/src.main.java.com.bodastage.boda_huaweicmobjectparser.HuaweiCMObjectParser.java", "BodyUseAPI": [], "Fixed commit": "9d32c49f31977870fd8622a102e97707f1893d7b", "Url": "https://api.github.com/repos/bodastage/boda-huaweicmobjectparser", "Date": "2018-07-29T20:42:07Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((a) == -8388608) || ((b) == -8388608)) return -8388608;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7735/buggy-version/src.Processor.java", "BodyUseAPI": [], "Fixed commit": "f2c67b1ebd271f0378a19e951cfc1e24b3682b32", "Url": "https://api.github.com/repos/AddisonCurtis/ECGR-Project-2", "Date": "2018-04-30T15:11:35Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((KnowledgeBase.generator.nextDouble()) > 0.5) { if ((KnowledgeBase.generator.nextDouble()) > 0.5) { org.dllearner.core.owl.ObjectProperty role = allRoles[KnowledgeBase.generator.nextInt(allRoles.length)]; if ((KnowledgeBase.generator.nextDouble()) > 0.5) newConcept = new org.dllearner.core.owl.ObjectAllRestriction(role, newConceptBase); else newConcept = new org.dllearner.core.owl.ObjectSomeRestriction(role, newConceptBase); }else newConcept = new org.dllearner.core.owl.Negation(newConceptBase); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1619/buggy-version/TCT.src.main.java.it.uniba.di.lacam.ontologymining.tct.refinementoperators.RefinementOperator.java", "BodyUseAPI": [], "Fixed commit": "7e5a58cb697295a9a5642b7681ced52389dbd44a", "Url": "https://api.github.com/repos/Giuseppe-Rizzo/TCTNew", "Date": "2018-07-30T16:32:47Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMeshNode) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7647/buggy-version/android-nrf-mesh-library.meshprovisioner.src.main.java.no.nordicsemi.android.meshprovisioner.transport.NetworkLayer.java", "BodyUseAPI": [], "Fixed commit": "44a528f430eb0a4287bbd728dab34168c7ef5420", "Url": "https://api.github.com/repos/NordicSemiconductor/Android-nRF-Mesh-Library", "Date": "2018-10-24T12:08:39Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((post.get(\"access_token\")) == null) || ((authorization.getIdentity()) == null)) { throw new ai.susi.server.api.aaa.APIException(400, \"Bad access token.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4719/buggy-version/src.ai.susi.server.api.aaa.LoginService.java", "BodyUseAPI": [], "Fixed commit": "86fdb7afd8aa1a5d2a9de302f4d3623b52beb845", "Url": "https://api.github.com/repos/AnupKumarPanwar/susi_server", "Date": "2018-07-18T20:21:31Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((popup.getComponentCount()) > 0) { popup.getComponentAt(0).setScrollY(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/653/buggy-version/CodenameOne.src.com.codename1.ui.AutoCompleteTextField.java", "BodyUseAPI": ["popup.getComponentAt(0).setScrollY(int)", "com.codename1.ui.Container.getComponentAt(int)"], "Fixed commit": "be7a7b20697aa52e6e139d28f773366da8f4b365", "Url": "https://api.github.com/repos/ramsestom/CodenameOne", "Date": "2018-04-30T01:46:58Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.yanicksenn.heroku.Application.getPersistenceConfig()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (config != null) { java.lang.String entity = javax.json.Json.createObjectBuilder().add(\"dbUrl\", config.getDbUrl()).add(\"dbVendor\", config.getDbVendor()).add(\"username\", config.getUsername()).add(\"password\", config.getPassword()).add(\"host\", config.getHost()).add(\"port\", config.getPort()).add(\"dbName\", config.getDbName()).add(\"jdbcUrl\", config.getJdbcUrl()).build().toString(); return javax.ws.rs.core.Response.ok().entity(entity).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4034/buggy-version/src.main.java.ch.yanicksenn.heroku.blog.BlogResource.java", "BodyUseAPI": ["javax.json.Json.createObjectBuilder().add(\"dbUrl\", config.getDbUrl()).add(\"dbVendor\", config.getDbVendor()).add(\"username\", config.getUsername()).add(\"password\", config.getPassword()).add(\"host\", config.getHost()).add(\"port\", config.getPort()).add(\"dbName\", config.getDbName()).add(\"jdbcUrl\", config.getJdbcUrl()).build()", "javax.json.Json.createObjectBuilder().add(\"dbUrl\", config.getDbUrl()).add(\"dbVendor\", config.getDbVendor()).add(\"username\", config.getUsername()).add(\"password\", config.getPassword()).add(java.lang.String,config.getHost())", "ch.yanicksenn.heroku.Application.PersistenceConfig.getDbVendor()", "ch.yanicksenn.heroku.Application.PersistenceConfig.getPort()", "javax.json.Json.createObjectBuilder().add(\"dbUrl\", config.getDbUrl()).add(\"dbVendor\", config.getDbVendor()).add(\"username\", config.getUsername()).add(\"password\", config.getPassword()).add(\"host\", config.getHost()).add(\"port\", config.getPort()).add(java.lang.String,config.getDbName())", "javax.json.Json.createObjectBuilder().add(\"dbUrl\", config.getDbUrl()).add(\"dbVendor\", config.getDbVendor()).add(\"username\", config.getUsername()).add(\"password\", config.getPassword()).add(\"host\", config.getHost()).add(\"port\", config.getPort()).add(\"dbName\", config.getDbName()).add(java.lang.String,config.getJdbcUrl())", "ch.yanicksenn.heroku.Application.PersistenceConfig.getJdbcUrl()", "javax.json.Json.createObjectBuilder().add(\"dbUrl\", config.getDbUrl()).add(\"dbVendor\", config.getDbVendor()).add(\"username\", config.getUsername()).add(\"password\", config.getPassword()).add(\"host\", config.getHost()).add(\"port\", config.getPort()).add(\"dbName\", config.getDbName()).add(\"jdbcUrl\", config.getJdbcUrl()).build().toString()", "ch.yanicksenn.heroku.Application.PersistenceConfig.getDbName()", "javax.json.Json.createObjectBuilder().add(java.lang.String,config.getDbUrl())", "ch.yanicksenn.heroku.Application.PersistenceConfig.getPassword()", "ch.yanicksenn.heroku.Application.PersistenceConfig.getHost()", "ch.yanicksenn.heroku.Application.PersistenceConfig.getUsername()", "javax.json.Json.createObjectBuilder().add(\"dbUrl\", config.getDbUrl()).add(java.lang.String,config.getDbVendor())", "ch.yanicksenn.heroku.Application.PersistenceConfig.getDbUrl()", "javax.json.Json.createObjectBuilder().add(\"dbUrl\", config.getDbUrl()).add(\"dbVendor\", config.getDbVendor()).add(\"username\", config.getUsername()).add(java.lang.String,config.getPassword())", "javax.json.Json.createObjectBuilder().add(\"dbUrl\", config.getDbUrl()).add(\"dbVendor\", config.getDbVendor()).add(java.lang.String,config.getUsername())", "javax.json.Json.createObjectBuilder().add(\"dbUrl\", config.getDbUrl()).add(\"dbVendor\", config.getDbVendor()).add(\"username\", config.getUsername()).add(\"password\", config.getPassword()).add(\"host\", config.getHost()).add(java.lang.String,config.getPort())"], "Fixed commit": "025c23cf26dc12e61f8592b175edc4fcb3d037b5", "Url": "https://api.github.com/repos/yanicksenn/heroku-blog", "Date": "2018-04-05T14:43:27Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["treeCell.getTreeItem().getParent()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (parentItem == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/193/buggy-version/src.project.database.TagDatabase.java", "BodyUseAPI": [], "Fixed commit": "83e52f1cf677a76ec88c47e74228a322892fd00d", "Url": "https://api.github.com/repos/mazacik/ImageTag", "Date": "2018-06-28T23:00:29Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(categories.contains(tagItem.getGroup()))) { categories.add(tagItem.getGroup()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/193/buggy-version/src.project.database.TagDatabase.java", "BodyUseAPI": ["project.database.part.TagItem.getGroup()", "java.util.ArrayList<java.lang.String>.add(tagItem.getGroup())"], "Fixed commit": "83e52f1cf677a76ec88c47e74228a322892fd00d", "Url": "https://api.github.com/repos/mazacik/ImageTag", "Date": "2018-06-28T23:00:29Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (item.has(\"sizes\")) { sizes = item.getJSONObject(\"sizes\"); if (sizes.has(\"2048\")) { url = sizes.getString(\"2048\"); } }else { url = item.getString(\"url\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1729/buggy-version/src.main.java.com.jba.nationalgeo.JSonReader.java", "BodyUseAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "75fa04eb3d728d868b8d7f023aca635a6adf0f9d", "Url": "https://api.github.com/repos/jeremiebalcaen/nationalgeo", "Date": "2018-10-13T18:13:54Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["stratos.game.plans.Vehicle.flightState()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (FS < (Vehicle.STATE_BOARDING)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7584/buggy-version/src.stratos.game.plans.Smuggling.java", "BodyUseAPI": [], "Fixed commit": "7a6888e0480dda9410428b89049841216aac156f", "Url": "https://api.github.com/repos/Morgan-Allen/Presidium-Graphics-Overhaul", "Date": "2018-01-15T12:52:14Z"},
{"Line": "=>669", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requestBodyCounter < 1) { return \"Api-doc cannot currently provide examples of parameters for the RequestParam request mode\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5076/buggy-version/api-doc.src.main.java.com.power.doc.builder.SourceBuilder.java", "BodyUseAPI": [], "Fixed commit": "7f92113f304c1dc840846a5c102e1ec2ac9e895a", "Url": "https://api.github.com/repos/shalousun/ApplicationPower", "Date": "2018-07-07T07:10:47Z"},
{"Line": "=>611", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (activity instanceof com.facebook.react.modules.core.PermissionAwareActivity) { ((com.facebook.react.modules.core.PermissionAwareActivity) (activity)).requestPermissions(PERMISSIONS, requestCode, listener); }else { final java.lang.String errorDescription = new java.lang.StringBuilder(activity.getClass().getSimpleName()).append(\" must implement \").append(com.imagepicker.permissions.OnImagePickerPermissionsCallback.class.getSimpleName()).toString(); throw new java.lang.UnsupportedOperationException(errorDescription); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9517/buggy-version/android.src.main.java.com.imagepicker.ImagePickerModule.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.toString()", "activity.getClass().getSimpleName()", "java.lang.StringBuilder.append(java.lang.String)", "android.app.Activity.getClass()"], "Fixed commit": "f7a0f88f421b60b2a645dc4619bc51b253971f82", "Url": "https://api.github.com/repos/arash8m/react-native-image-picker", "Date": "2018-02-11T22:45:05Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (score > 0) { if (((scores.length) - 1) > characterIndex) { levelFinished = false; if ((scores[(characterIndex + 1)]) == (-1)) { scores[(characterIndex + 1)] = 0; } }else { java.lang.String nextLevelTag; if (((gameStructure.nextLevelByTag(levelTag)) != null) && ((findGameByTag(gameTag).findLevelByTag(gameStructure.nextLevelByTag(levelTag).getLevelTag()).getScores()[0]) == (-1))) { updateScore(gameTag, gameStructure.nextLevelByTag(levelTag).getLevelTag(), 0, 0); }else { java.lang.String firstLevelTag = gameStructure.findLevelByOrder(1).getLevelTag(); if (((gameStructure.nextGameByTag(gameTag)) != null) && ((findGameByTag(gameStructure.nextGameByTag(gameTag).getGameTag()).findLevelByTag(firstLevelTag).getScores()[0]) == (-1))) { findGameByTag(gameStructure.nextGameByTag(gameTag).getGameTag()).findLevelByTag(firstLevelTag).getScores()[0] = 0; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6241/buggy-version/LearnToWrite.app.src.main.java.com.appecco.learntowrite.model.Progress.java", "BodyUseAPI": [], "Fixed commit": "83c7dc0d8f8754e453c553e89f14ffd9c0a82a75", "Url": "https://api.github.com/repos/appecco/LearnToWrite", "Date": "2018-01-22T19:42:16Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((iValue.length()) == 0) { return iValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1624/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.OSQLHelper.java", "BodyUseAPI": [], "Fixed commit": "7347cc62c5650ffaa16a9945ae79d5c321e10b10", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2018-04-30T15:37:50Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(melody.isEmpty())) { java.util.List<java.util.Map.Entry<PentagramPosition, java.lang.String>> entryList = new java.util.ArrayList<java.util.Map.Entry<PentagramPosition, java.lang.String>>(melody.entrySet()); java.util.Map.Entry<PentagramPosition, java.lang.String> lastEntry = entryList.get(((entryList.size()) - 1)); melody.remove(lastEntry.getKey()); fillMelodyField(); pentagramTable.setValueAt(\"\", lastEntry.getKey().getRow(), lastEntry.getKey().getColumn()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3769/buggy-version/desafios.3.MusicComposer.src.App.java", "BodyUseAPI": ["java.util.Map<PentagramPosition, java.lang.String>.entrySet()", "java.util.Map<PentagramPosition, java.lang.String>.remove(lastEntry.getKey())"], "Fixed commit": "bc44fc33732e48fec9fa6ebeca7eed1609d02ffb", "Url": "https://api.github.com/repos/onofricamila/LaboratorioDeSoftware", "Date": "2018-09-17T16:37:47Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bn.Main.extraConnectionsCount) <= 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2524/buggy-version/Main.java", "BodyUseAPI": [], "Fixed commit": "4041741bd03c3032032e0ab5deebf6816bc2f080", "Url": "https://api.github.com/repos/shweelan/binomial-graph-simulation", "Date": "2018-05-22T20:02:35Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((deck) == null) outer.notifyDeckFailed(); else outer.notifyDeckFinished();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3398/buggy-version/src.edu.ucsb.cs56.projects.utilities.flashcards.MainMenuFrame.java", "BodyUseAPI": [], "Fixed commit": "27065bd6de61e1d34ff1dcea86aa4880344ffc95", "Url": "https://api.github.com/repos/ucsb-cs56-projects/cs56-utilities-flashcards", "Date": "2018-02-21T01:50:03Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (photoFile != null) { if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.N)) { android.os.StrictMode.VmPolicy.Builder builder = new android.os.StrictMode.VmPolicy.Builder(); android.os.StrictMode.setVmPolicy(builder.build()); } currentfile = photoFile; takePictureIntent.putExtra(MediaStore.EXTRA_OUTPUT, android.net.Uri.fromFile(photoFile)); startActivityForResult(takePictureIntent, org.smartregister.ug.hpv.activity.BasePatientDetailActivity.REQUEST_TAKE_PHOTO); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7453/buggy-version/opensrp-uganda-hpv.src.main.java.org.smartregister.ug.hpv.activity.BasePatientDetailActivity.java", "BodyUseAPI": ["android.net.Uri.fromFile(java.io.File)", "android.content.Intent.putExtra(MediaStore.EXTRA_OUTPUT,android.net.Uri.fromFile(photoFile))"], "Fixed commit": "f54a09d1dbcbeba22eebc65298bc121c326d4a07", "Url": "https://api.github.com/repos/OpenSRP/opensrp-client-uganda-hpv", "Date": "2018-05-29T11:39:53Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((station.getStationID()) == 4) { train.setOnGoing(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5780/buggy-version/src.main.java.Controller.TrainThread.java", "BodyUseAPI": [], "Fixed commit": "7b8026f9df0fb654d45bd5c5cc0def5023db441f", "Url": "https://api.github.com/repos/AitorVidarte/SimulatorRepo", "Date": "2018-01-05T22:23:19Z"},
{"Line": "=>1185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((combatQueue.size()) > 0) { for (com.samisdebest.projecte.Combat c : combatQueue) { if (c.conflict.name.equals(t.name)) { return false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3656/buggy-version/src.com.samisdebest.projecte.Game.java", "BodyUseAPI": [], "Fixed commit": "720e3f980b0cde1f9a90ea64296b75bbfc231416", "Url": "https://api.github.com/repos/ImSAMazing/Eurasia", "Date": "2018-06-03T19:10:18Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (classLoader != null) { return edu.snu.mist.common.SerializeUtils.deserializeFromString(new java.lang.String(bytes), classLoader); }else { return edu.snu.mist.common.SerializeUtils.deserializeFromString(new java.lang.String(bytes)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4661/buggy-version/mist-core.src.main.java.edu.snu.mist.core.task.StateSerializer.java", "BodyUseAPI": ["edu.snu.mist.common.SerializeUtils.deserializeFromString(java.lang.String,java.lang.ClassLoader)"], "Fixed commit": "742d4755860447457d28d497026e34c42c522403", "Url": "https://api.github.com/repos/DifferentSC/mist-1", "Date": "2018-07-02T15:27:04Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((storage) != null) { storage.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7223/buggy-version/ontodriver-jena.src.main.java.cz.cvut.kbss.ontodriver.jena.connector.SharedStorageConnector.java", "BodyUseAPI": [], "Fixed commit": "9ed887f2fd6574e0df5f2b0168cff26db666b90d", "Url": "https://api.github.com/repos/kbss-cvut/jopa", "Date": "2018-04-26T13:14:52Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, heronarts.lx.parameter.LXParameter>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (parameter instanceof heronarts.lx.parameter.FunctionalParameter) { }else { parameter.setValue(value.getAsDouble()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9237/buggy-version/src.heronarts.lx.LXComponent.java", "BodyUseAPI": ["heronarts.lx.parameter.LXParameter.setValue(value.getAsDouble())"], "Fixed commit": "5a56853e28c3ac2527107f4fc9554c7d8d6ab83c", "Url": "https://api.github.com/repos/jkbelcher/LX", "Date": "2018-08-07T23:08:26Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((map.getId()) == 75499008) { map.getCells().get(361).setMov(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6492/buggy-version/DatBot.Interface.src.utils.d2p.MapManager.java", "BodyUseAPI": ["utils.d2p.map.Map.getCells()", "map.getCells().get(int)", "map.getCells().get(361).setMov(boolean)"], "Fixed commit": "95e31670d8dceb0c28072c5488ca59a6150ab354", "Url": "https://api.github.com/repos/ProjectBlackFalcon/DatBot", "Date": "2018-07-27T20:01:42Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == printStream) { printStream = java.lang.System.out; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2656/buggy-version/jbake-core.src.main.java.org.jbake.app.DebugUtil.java", "BodyUseAPI": [], "Fixed commit": "b95f8d07500968de4d4ddcad0de75734635d40ab", "Url": "https://api.github.com/repos/OndraZizka/jbake", "Date": "2018-10-30T04:34:10Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == map) { printStream.println(\"The Map is null.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2656/buggy-version/jbake-core.src.main.java.org.jbake.app.DebugUtil.java", "BodyUseAPI": [], "Fixed commit": "b95f8d07500968de4d4ddcad0de75734635d40ab", "Url": "https://api.github.com/repos/OndraZizka/jbake", "Date": "2018-10-30T04:34:10Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang.StringUtils.isBlank(label))) { printStream.println((label + \":\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2656/buggy-version/jbake-core.src.main.java.org.jbake.app.DebugUtil.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "b95f8d07500968de4d4ddcad0de75734635d40ab", "Url": "https://api.github.com/repos/OndraZizka/jbake", "Date": "2018-10-30T04:34:10Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jbake.parser.MarkupEngine.parseHeaderBlock(org.jbake.parser.ParserContext)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (headersMap != null) applyHeadersToDocument(headersMap, context.getDocumentModel());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2656/buggy-version/jbake-core.src.main.java.org.jbake.parser.MarkupEngine.java", "BodyUseAPI": ["org.jbake.parser.MarkupEngine.applyHeadersToDocument(java.util.Map<java.lang.String, java.lang.String>,context.getDocumentModel())"], "Fixed commit": "b95f8d07500968de4d4ddcad0de75734635d40ab", "Url": "https://api.github.com/repos/OndraZizka/jbake", "Date": "2018-10-30T04:34:10Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.lizhi.kuman_mpi_3508_lcd_touch.Mpi3508LcdTouchDriver.1.getTouchInput()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (touchInput != null) { mInputDriver.emit(touchInput.x, touchInput.y, touchInput.pressing); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/517/buggy-version/app.src.main.java.com.example.lizhi.kuman_mpi_3508_lcd_touch.Mpi3508LcdTouchDriver.java", "BodyUseAPI": ["com.google.android.things.userdriver.InputDriver.emit(touchInput.x,touchInput.y,touchInput.pressing)"], "Fixed commit": "e44092392b9eebd8b16f3fdcba992b853e1a2614", "Url": "https://api.github.com/repos/zhanglijuan78/kuman_mpi_3508_lcd_touch", "Date": "2018-05-08T21:25:56Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (startPressing) { if (y == 0) { return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/517/buggy-version/app.src.main.java.com.example.lizhi.kuman_mpi_3508_lcd_touch.Mpi3508LcdTouchDriver.java", "BodyUseAPI": [], "Fixed commit": "e44092392b9eebd8b16f3fdcba992b853e1a2614", "Url": "https://api.github.com/repos/zhanglijuan78/kuman_mpi_3508_lcd_touch", "Date": "2018-05-08T21:25:56Z"},
{"Line": "=>3698", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEnabledOverScroll()) mScrollChecker.tryToFling(velocity); else mScrollChecker.destroy();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9564/buggy-version/core.src.main.java.me.dkzwm.widget.srl.SmoothRefreshLayout.java", "BodyUseAPI": [], "Fixed commit": "3cadb8039034923949461bb8b206fec34c1c9ae3", "Url": "https://api.github.com/repos/dkzwm/SmoothRefreshLayout", "Date": "2018-05-29T11:13:54Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((res.length()) >= 8) { res = res.substring(0, 8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6169/buggy-version/src.StringUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "269dbf49bb141a66d8c2930d7555ba919314e590", "Url": "https://api.github.com/repos/Purdue-CS193/lab-3-rhythm1705", "Date": "2018-10-04T19:10:46Z"},
{"Line": "=>663", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(calendarState.equals(CalendarState.ADDING))) && (!(calendarState.equals(CalendarState.REMOVING)))) { showAssignmentOnCalendar(email); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7457/buggy-version/src.customerClient.gui.GUICustomer.java", "BodyUseAPI": [], "Fixed commit": "d0f69cc9e811be978b298e851bb1547447354092", "Url": "https://api.github.com/repos/IngSW-unipv/Progetto-F18", "Date": "2018-06-12T14:13:50Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rk.rkeeper.MainActivity.getSupportActionBar()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (actionBar != null) { actionBar.setHomeAsUpIndicator(R.mipmap.ic_launcher); actionBar.setDisplayHomeAsUpEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7718/buggy-version/app.src.main.java.com.rk.rkeeper.MainActivity.java", "BodyUseAPI": ["android.support.v7.app.ActionBar.setHomeAsUpIndicator(R.mipmap.ic_launcher)", "android.support.v7.app.ActionBar.setDisplayHomeAsUpEnabled(boolean)"], "Fixed commit": "9669862894dc379837f1b4d8fa646000cf8eab5d", "Url": "https://api.github.com/repos/RaoKui/RKeeperJClean", "Date": "2018-05-23T12:33:06Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((android.widget.EditText) (view.findViewById(R.id.course_create_name))).getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((title.length()) == 0) { android.widget.Toast.makeText(getContext(), R.string.invalid_title, Toast.LENGTH_LONG).show(); return; }else if ((title.length()) > 30) { android.widget.Toast.makeText(getContext(), R.string.max_title_length, Toast.LENGTH_LONG).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9392/buggy-version/app.src.main.java.edu.rit.tinyturtle.offlinehomeworkplanner.CreateCourse.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "935e27e405dc3cabc927c2d2ff8a6d530117e2c7", "Url": "https://api.github.com/repos/TheGuywithTheHat/offline-homework-planner", "Date": "2018-03-30T02:30:03Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((format == (Grammar.Format.SRGF)) && ((this.getProbability(i)) != 1.0)) || jsgfNeedsWeight) { w.print(((\"/\" + (this.getProbability(i))) + \"/ \")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/851/buggy-version/com.clt.script.src.main.java.com.clt.srgf.Alternatives.java", "BodyUseAPI": ["java.io.PrintWriter.print(java.lang.String)", "com.clt.srgf.Alternatives.getProbability(int)"], "Fixed commit": "4544fc0d4ca297e8f53ee2fbae0b67746e282b6a", "Url": "https://api.github.com/repos/dialogos-project/dialogos", "Date": "2018-04-06T18:01:33Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.children[i].word) != null) list.add(node.children[i].word);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5121/buggy-version/src.main.java.com.nitin.algo.AutoComplete.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "dfd8745dee2b63440dd5f5a068ba7e141be6bfca", "Url": "https://api.github.com/repos/nitartnachi/Tries", "Date": "2018-01-29T21:17:55Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(socket.isClosed())) && (socket.isConnected())) { send(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8822/buggy-version/src.client.ClientCommunication.java", "BodyUseAPI": [], "Fixed commit": "582c18e6647466d5cd77cbf630b4c90e21e71ed3", "Url": "https://api.github.com/repos/mcalzaferri/Schieber", "Date": "2018-05-14T15:52:19Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["util.S3StringReader.getString(com.amazonaws.services.s3.AmazonS3,java.lang.String,java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (strDate != null) { dtLastChecked = new java.util.Date(java.lang.Long.parseLong(strDate)); }else { dtLastChecked = new java.util.Date(0L); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9748/buggy-version/src.main.java.lambda.LambdaHandler.java", "BodyUseAPI": ["java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "216716cef656cbbcbb10f88bcd5db15df18a50fa", "Url": "https://api.github.com/repos/lctyler/AwsStatusChecker", "Date": "2018-03-19T06:17:44Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (chr == '=') { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3217/buggy-version/CodenameOne.src.com.codename1.util.Base64.java", "BodyUseAPI": [], "Fixed commit": "5f50601f8feea1d60fd74f3b924c56924853f60f", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2018-06-06T12:52:17Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.springframework.util.ObjectUtils.isEmpty(endTime))) { example.createCriteria().andLogIdLessThan((endTime * 1000)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4457/buggy-version/com-github-app.com-github-app-api.src.main.java.com.github.app.api.services.impl.LogServiceImpl.java", "BodyUseAPI": ["example.createCriteria().andLogIdLessThan(long)"], "Fixed commit": "bfad04d852ef845e270b6d30a4ade0d04cbf3581", "Url": "https://api.github.com/repos/ioprotocol/com-github-app", "Date": "2018-02-11T11:17:17Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.springframework.util.ObjectUtils.isEmpty(offset)) { offset = java.lang.Integer.valueOf(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4457/buggy-version/com-github-app.com-github-app-api.src.main.java.com.github.app.api.services.impl.LogServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "bfad04d852ef845e270b6d30a4ade0d04cbf3581", "Url": "https://api.github.com/repos/ioprotocol/com-github-app", "Date": "2018-02-11T11:17:17Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.springframework.util.ObjectUtils.isEmpty(rows)) { rows = java.lang.Integer.valueOf(20); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4457/buggy-version/com-github-app.com-github-app-api.src.main.java.com.github.app.api.services.impl.LogServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "bfad04d852ef845e270b6d30a4ade0d04cbf3581", "Url": "https://api.github.com/repos/ioprotocol/com-github-app", "Date": "2018-02-11T11:17:17Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((actualBitmap) == null) { pixelColor = drawableToBitmap(initialDrawnMap).getPixel(scaledX, scaledY); }else { pixelColor = actualBitmap.getPixel(scaledX, scaledY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5312/buggy-version/app.src.main.java.com.wienerlinienproject.bac.bnavigator.Presentation.PositionView.java", "BodyUseAPI": [], "Fixed commit": "a05d4276684402191667cc5c3d3b966537bf9a20", "Url": "https://api.github.com/repos/Fenetik/bNavigator", "Date": "2018-03-28T10:08:38Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((token) == null) { token = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7038/buggy-version/src.main.java.StaticComponents.java", "BodyUseAPI": [], "Fixed commit": "0ad79a6c9b7be9d4650ce60b16332a1ff1db6e60", "Url": "https://api.github.com/repos/EviLPinGuiN/circle-gradle", "Date": "2018-06-03T10:16:33Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(userRequest.getPassword().equals(\"\"))) { java.lang.System.out.println(\"heeeeeeeeeere\"); userFromDb.setPassword(bCryptPasswordEncoder.encode(userRequest.getPassword())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8290/buggy-version/users-api.src.main.java.com.example.usersapi.controllers.UsersController.java", "BodyUseAPI": ["com.example.usersapi.models.User.getPassword()", "org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder.encode(userRequest.getPassword())", "com.example.usersapi.models.User.setPassword(bCryptPasswordEncoder.encode(userRequest.getPassword()))"], "Fixed commit": "b621d6ef60a9fd493711eb422b14a1414c8f01d8", "Url": "https://api.github.com/repos/golden22a/seca-3", "Date": "2018-05-31T16:29:32Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameterValues(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((hdd.length) == 1) stringaQuery += (\"h.capacita = \" + a) + \" \"; else if (i == 1) stringaQuery += ((\"h.capacita >= \" + a) + \" \") + \" AND \"; else if (i == (hdd.length)) stringaQuery += (\"h.capacita <= \" + a) + \" \";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6136/buggy-version/src.com.bdii.servlet.admin.InserisciServer.java", "BodyUseAPI": [], "Fixed commit": "01b35020f9d96826a98c90343519e94e90c7d554", "Url": "https://api.github.com/repos/rstanziale/CLOUDYS", "Date": "2018-07-02T16:39:45Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dspace.app.itemexport.factory.ItemExportServiceFactory.getInstance().getItemExportService().createDownloadableExport(org.dspace.content.DSpaceObject,org.dspace.core.Context,boolean,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (bitstreamUuid == null) { exportToZipService.delete(context, exportToZip); org.dspace.export.ExportToZipTask.log.info(((\"Deleted ExportToZip entry with UUID: \" + (exportToZipId)) + \", This record was corrupt and had no bitstreamUUID\")); }else { exportToZip.setBitstreamId(bitstreamUuid); exportToZip.setStatus(\"completed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7186/buggy-version/dspace-api.src.main.java.org.dspace.export.ExportToZipTask.java", "BodyUseAPI": ["org.dspace.content.ExportToZip.setBitstreamId(java.util.UUID)"], "Fixed commit": "c67d990becd78dbe73a09e78a534a98162ba1e1e", "Url": "https://api.github.com/repos/atmire/DSpace", "Date": "2018-09-04T12:41:40Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pet.getPetAvatar().equals(UIConstants.PET_NO_IMAGE_URL)) pet.setPetAvatar(avatarPath);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3762/buggy-version/src.main.java.com.netcracker.ui.pet.PetEditFormUI.java", "BodyUseAPI": ["com.netcracker.model.pet.Pet.setPetAvatar(java.lang.String)"], "Fixed commit": "a32494dd284db2f7064c868ba57b69492f7647aa", "Url": "https://api.github.com/repos/TanyaOdyniuk/PetSpace", "Date": "2018-02-04T21:14:31Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(active)) { am.cancel(pi); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6321/buggy-version/app.src.main.java.com.example.g.luciddreamgenerator.ToolsActivity.java", "BodyUseAPI": [], "Fixed commit": "389e811cbb362829e970af49317fac0cdeadd8a4", "Url": "https://api.github.com/repos/zhg0003/DesignProject", "Date": "2018-04-14T02:49:15Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(parseHeader(parts))) { throw new java.text.ParseException(((\"Header format mismatch (input: \" + inputLine) + \")\"), lineCount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1267/buggy-version/src.nz.ac.aut.SentienceLab.EarthquakeDatasetReader.DataSource.java", "BodyUseAPI": [], "Fixed commit": "8ff5d4678713666aa71822e09cb8f1aab9d0fe5d", "Url": "https://api.github.com/repos/stefanmarks/GeosciencesDatasetReader", "Date": "2018-08-13T20:50:07Z"},
{"Line": "=>455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((totalBankcode.charAt(i)) - '0') < 0) || (((totalBankcode.charAt(i)) - '0') > 9)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4552/buggy-version/src.main.java.com.lufi.regex.BankInfoUtil.java", "BodyUseAPI": [], "Fixed commit": "6d8ef84fe0d1e364ddae083148b437dfe440e8be", "Url": "https://api.github.com/repos/FDUAccessControlForBDA/LetUsFindIt", "Date": "2018-01-02T05:47:11Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (photoUri == null) { sharedPreferencesEditor.putString(com.sleepycookie.stillstanding.data.Preferences.KEY_PHOTO, null); }else { sharedPreferencesEditor.putString(com.sleepycookie.stillstanding.data.Preferences.KEY_PHOTO, photoUri.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1114/buggy-version/app.src.main.java.com.sleepycookie.stillstanding.data.Preferences.java", "BodyUseAPI": ["android.net.Uri.toString()", "SharedPreferences.Editor.putString(java.lang.String,photoUri.toString())"], "Fixed commit": "57f0e27d5e72c737a5e91fc4cbe07513e75dbb72", "Url": "https://api.github.com/repos/katsik/stillStanding", "Date": "2018-02-16T16:39:47Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(reader.hasMore())) || (((reader.getIndex()) + byteSize) > (reader.getSize()))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/864/buggy-version/src.net.highwayfrogs.editor.file.VBFile.java", "BodyUseAPI": [], "Fixed commit": "607a413881817f67c5d188982ceebf6f5e23fad2", "Url": "https://api.github.com/repos/Kneesnap/FrogLord", "Date": "2018-08-24T04:55:46Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.kabeja.dxf.DXFMText.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (text2.contains(\";\")) { text2 = text2.split(\";\")[1]; }else text2 = text2.replaceAll(\"[^\\\\d.]\", \"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7491/buggy-version/egov.egov-edcr.src.main.java.org.egov.edcr.utility.Util.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "eb84e8b91a1bec68d60e988ebf6de1439649b12f", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2018-03-02T09:19:56Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (authors.remove(null)) authors.add(\"UNKNOWN\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7581/buggy-version/libaris.src.edu.rpi.aris.proof.Proof.java", "BodyUseAPI": [], "Fixed commit": "b50d5a77a5edf08fc2edfe19f53330480d409d86", "Url": "https://api.github.com/repos/Bram-Hub/Aris", "Date": "2018-04-24T00:57:53Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((game) != null) { game.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7795/buggy-version/app.src.main.java.com.cet325.gamers_emotional_state_detection.activities.GameplayActivity.java", "BodyUseAPI": [], "Fixed commit": "92bfbf383e92efbc8ab3d32099cb4c351b7e545c", "Url": "https://api.github.com/repos/AantonM/g.e.m.a.", "Date": "2018-04-05T11:42:32Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((facialEmotionRecognitionManager) != null) { facialEmotionRecognitionManager.stopEmotionFaceRecognition(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7795/buggy-version/app.src.main.java.com.cet325.gamers_emotional_state_detection.activities.GameplayActivity.java", "BodyUseAPI": [], "Fixed commit": "92bfbf383e92efbc8ab3d32099cb4c351b7e545c", "Url": "https://api.github.com/repos/AantonM/g.e.m.a.", "Date": "2018-04-05T11:42:32Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.maxieds.chameleonminilivedebugger.ChameleonIO.DeviceStatusSettings.updateAllStatus(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!haveUpdates) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2558/buggy-version/app.src.main.java.com.maxieds.chameleonminilivedebugger.ChameleonIO.java", "BodyUseAPI": [], "Fixed commit": "ae9d2ee979d50b7594e1939aa46011dd271a00dd", "Url": "https://api.github.com/repos/maxieds/ChameleonMiniLiveDebugger", "Date": "2018-01-17T10:43:28Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resetTimer) statsUpdateHandler.postDelayed(statsUpdateRunnable, ((STATS_UPDATE_INTERVAL) / 4));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2558/buggy-version/app.src.main.java.com.maxieds.chameleonminilivedebugger.ChameleonIO.java", "BodyUseAPI": [], "Fixed commit": "ae9d2ee979d50b7594e1939aa46011dd271a00dd", "Url": "https://api.github.com/repos/maxieds/ChameleonMiniLiveDebugger", "Date": "2018-01-17T10:43:28Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resetTimer) statsUpdateHandler.postDelayed(statsUpdateRunnable, ((STATS_UPDATE_INTERVAL) / 4));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2558/buggy-version/app.src.main.java.com.maxieds.chameleonminilivedebugger.ChameleonIO.java", "BodyUseAPI": [], "Fixed commit": "ae9d2ee979d50b7594e1939aa46011dd271a00dd", "Url": "https://api.github.com/repos/maxieds/ChameleonMiniLiveDebugger", "Date": "2018-01-17T10:43:28Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (kv != null) { java.lang.String[] pair = kv.split(\"=\"); if ((pair != null) && ((pair.length) == 2)) { params.put(pair[0], pair[1]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3306/buggy-version/lib.src.main.java.site.binghai.lib.utils.UrlUtil.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "e9b6252cbef7ddd877d5f76b3a4c0ab6ba778fbb", "Url": "https://api.github.com/repos/IceSeaOnly/dayu", "Date": "2018-10-25T07:58:45Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(app))) { list.add(app); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/784/buggy-version/app.src.main.java.org.arpnetwork.arpdevice.device.TaskHelper.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "a2f89f068d2da9267a8c04a851184789186af280", "Url": "https://api.github.com/repos/arpnetwork/arpdevice", "Date": "2018-09-26T11:22:43Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (getConfig().getEngineEnabled()) { com.github.athenaengine.core.EventEngineManager.getInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1932/buggy-version/dist.game.data.scripts.custom.events.EventEngine.EventEngineStarter.java", "BodyUseAPI": [], "Fixed commit": "bf013e1fefa286c6aed5f82d984dca9370653e45", "Url": "https://api.github.com/repos/AthenaEventEngine/AthenaCore", "Date": "2018-02-15T18:07:38Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(startOfDay)) { java.lang.Thread.sleep(Timer.getSleepDuration(current.getDuration())); }else { startOfDay = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9421/buggy-version/src.Person.java", "BodyUseAPI": [], "Fixed commit": "e7d18b875f3ac2ddb8e218f47840facf0d0761bd", "Url": "https://api.github.com/repos/mmorris44/CSC3002F_Assignment_4", "Date": "2018-05-20T19:54:17Z"},
{"Line": "=>2925", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mHourScaleListener) != null) { mHourScaleListener.onScale(mNewHourHeight); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5183/buggy-version/library.src.main.java.com.alamkanak.weekview.WeekView.java", "BodyUseAPI": [], "Fixed commit": "dffaa94c6dd31c7a7c0be176a5cbc7eec226839c", "Url": "https://api.github.com/repos/mc-12/Android-Week-View", "Date": "2018-08-07T18:38:07Z"},
{"Line": "=>2910", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDayScaleListener) != null) { mDayScaleListener.onScale(newDayCount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5183/buggy-version/library.src.main.java.com.alamkanak.weekview.WeekView.java", "BodyUseAPI": [], "Fixed commit": "dffaa94c6dd31c7a7c0be176a5cbc7eec226839c", "Url": "https://api.github.com/repos/mc-12/Android-Week-View", "Date": "2018-08-07T18:38:07Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (type == null) { inputStream = this.getClass().getResourceAsStream(\"/shell/ci.sh\"); }else { inputStream = this.getClass().getResourceAsStream(((\"/shell/\" + type) + \".sh\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9677/buggy-version/src.main.java.io.choerodon.devops.app.service.impl.ApplicationServiceImpl.java", "BodyUseAPI": ["java.lang.Class<? extends io.choerodon.devops.app.service.impl.ApplicationServiceImpl>.getResourceAsStream(java.lang.String)"], "Fixed commit": "64d0d4282bb2c9c64e3794755feb2dd5bb0f0f53", "Url": "https://api.github.com/repos/choerodon/devops-service", "Date": "2018-06-13T08:26:35Z"},
{"Line": "=>2380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tab.getPosition()) == (mHalfTabPosition)) { if ((mCenterTabSelectedListener) != null) { mCenterTabSelectedListener.onCenterTabUnselected(tab); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4461/buggy-version/TabLayout.src.main.java.com.bug95.tablayout.XTabLayout.java", "BodyUseAPI": ["com.bug95.tablayout.OnCenterTabSelectedListener.onCenterTabUnselected(com.bug95.tablayout.XTabLayout.Tab)"], "Fixed commit": "dc5b484d1b06907e6475a078f192ded71d1ab346", "Url": "https://api.github.com/repos/lzjohnny/XTabLayout", "Date": "2018-01-04T06:28:41Z"},
{"Line": "=>542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.hardware.camera2.CameraCharacteristics.get(CameraCharacteristics.CONTROL_AF_AVAILABLE_MODES)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((afAvailableModes.length) == 0) || (((afAvailableModes.length) == 1) && ((afAvailableModes[0]) == (android.hardware.camera2.CameraMetadata.CONTROL_AF_MODE_OFF)))) { mAutoFocusSupported = false; }else { mAutoFocusSupported = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2440/buggy-version/3DPhotoMaker2.app.src.main.java.joshcarter.a3dphotomaker2.CameraFragment.java", "BodyUseAPI": [], "Fixed commit": "8093943e2ca79c8cfdcf76f94c8158279af5f447", "Url": "https://api.github.com/repos/JoshCarter99/TopSecretApp", "Date": "2018-04-13T22:53:52Z"},
{"Line": "=>807", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mAutoFocusSupported) { lockFocus(); }else { captureStillPicture(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2440/buggy-version/3DPhotoMaker2.app.src.main.java.joshcarter.a3dphotomaker2.CameraFragment.java", "BodyUseAPI": [], "Fixed commit": "8093943e2ca79c8cfdcf76f94c8158279af5f447", "Url": "https://api.github.com/repos/JoshCarter99/TopSecretApp", "Date": "2018-04-13T22:53:52Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (method instanceof org.openl.rules.lang.xls.prebind.ILazyMember) { return isDependencyMethodIgnorable(((org.openl.rules.lang.xls.prebind.ILazyMember<org.openl.types.IOpenMethod>) (method)).getMember()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6564/buggy-version/DEV.org.openl.rules.src.org.openl.rules.lang.xls.binding.XlsModuleOpenClass.java", "BodyUseAPI": [], "Fixed commit": "4488eaf34f0ad39e4140166af0d82d1737dd1378", "Url": "https://api.github.com/repos/openl-tablets/openl-tablets", "Date": "2018-03-21T16:23:30Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (openField instanceof org.openl.rules.lang.xls.prebind.ILazyMember) { return isDependencyFieldIgnorable(((org.openl.rules.lang.xls.prebind.ILazyMember<org.openl.types.IOpenField>) (openField)).getMember()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6564/buggy-version/DEV.org.openl.rules.src.org.openl.rules.lang.xls.binding.XlsModuleOpenClass.java", "BodyUseAPI": [], "Fixed commit": "4488eaf34f0ad39e4140166af0d82d1737dd1378", "Url": "https://api.github.com/repos/openl-tablets/openl-tablets", "Date": "2018-03-21T16:23:30Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getIntent().getBooleanExtra(\"isRegister\", false))) { nextBtn.setText(\"\u0e16\u0e31\u0e14\u0e44\u0e1b\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1834/buggy-version/app.src.main.java.com.custu.project.walktogether.ResultPassActivity.java", "BodyUseAPI": [], "Fixed commit": "97b8e73edbacdddda577cdd1deaad33f583b23da", "Url": "https://api.github.com/repos/gminemini/walk-together-android-app", "Date": "2018-03-30T06:31:42Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((c.get(java.util.Calendar.HOUR_OF_DAY)) < 17) || ((c.get(java.util.Calendar.HOUR_OF_DAY)) > 22)) { deliveryTime = new tech.mccauley.androiddinnerdelivery.RangeTimePickerDialog(getActivity(), android.app.AlertDialog.THEME_HOLO_DARK, this, 17, c.get(java.util.Calendar.MINUTE), android.text.format.DateFormat.is24HourFormat(getActivity())); }else { deliveryTime = new tech.mccauley.androiddinnerdelivery.RangeTimePickerDialog(getActivity(), android.app.AlertDialog.THEME_HOLO_DARK, this, c.get(java.util.Calendar.HOUR_OF_DAY), c.get(java.util.Calendar.MINUTE), android.text.format.DateFormat.is24HourFormat(getActivity())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2976/buggy-version/AndroidDinnerDelivery.app.src.main.java.tech.mccauley.androiddinnerdelivery.TimePickerFragment.java", "BodyUseAPI": ["java.util.Calendar.get(int)", "java.util.Calendar.get(int)", "java.util.Calendar.get(int)"], "Fixed commit": "6fff34def2f0a78a074da93d852fec930cfa1e88", "Url": "https://api.github.com/repos/cdmccauley/android-demos", "Date": "2018-06-18T18:42:43Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["es.caib.zkib.zkiblaf.Application.getActiveFrame()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((frame != null) && ((frame.component) != null)) doCommit(frame.component);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9022/buggy-version/src.main.java.es.caib.zkib.zkiblaf.ApplicationComponent.java", "BodyUseAPI": ["es.caib.zkib.zkiblaf.ApplicationComponent.CtrlKeyEventListener.doCommit(frame.component)"], "Fixed commit": "6284b017e61475794c858b7c57b9ed3a31802889", "Url": "https://api.github.com/repos/SoffidIAM/zkiblaf", "Date": "2018-05-01T17:41:50Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["es.caib.zkib.zkiblaf.Application.getApplication()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (app == null) return null; else return app.activeFrame;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9022/buggy-version/src.main.java.es.caib.zkib.zkiblaf.Application.java", "BodyUseAPI": [], "Fixed commit": "6284b017e61475794c858b7c57b9ed3a31802889", "Url": "https://api.github.com/repos/SoffidIAM/zkiblaf", "Date": "2018-05-01T17:41:50Z"},
{"Line": "=>609", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((startNode.getData().getX()) > initX) { while ((startNode.getData().getX()) > initX) { startNode = startNode.getLeft(); } }else { while (((startNode.getData().getX()) + (startNode.getData().getDrawingSize())) <= initX) { startNode = startNode.getRight(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4207/buggy-version/src.main.java.com.harystolho.pe.linkedList.IndexLinkedList.java", "BodyUseAPI": ["E.getX()", "com.harystolho.pe.linkedList.IndexLinkedList<E>.Node.getData()", "com.harystolho.pe.linkedList.IndexLinkedList<E>.Node.getLeft()", "E.getDrawingSize()", "com.harystolho.pe.linkedList.IndexLinkedList<E>.Node.getData()", "E.getX()", "com.harystolho.pe.linkedList.IndexLinkedList<E>.Node.getRight()", "com.harystolho.pe.linkedList.IndexLinkedList<E>.Node.getData()"], "Fixed commit": "cb84ceb76b8e5c51e0bc478e4e02628163dc60c2", "Url": "https://api.github.com/repos/Harystolho/PferdEditor", "Date": "2018-10-08T18:20:16Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stackEquation.isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4415/buggy-version/app.src.main.java.calculator.mafof.com.calculator.GUI.java", "BodyUseAPI": [], "Fixed commit": "a663e02f46412ee7140ea9a3998e6cabd80fff25", "Url": "https://api.github.com/repos/mafof/android-calculator", "Date": "2018-04-14T16:46:40Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mjr.extraplanets.Config.NUCLEAR_BOMB) { world.setBlockState(new net.minecraft.util.math.BlockPos((x + 3), (y + 2), (z + 3)), ExtraPlanets_Blocks.NUCLEAR_BOMB.getDefaultState(), 3); world.setBlockState(new net.minecraft.util.math.BlockPos((x + 3), (y + 2), (z + 4)), ExtraPlanets_Blocks.NUCLEAR_BOMB.getDefaultState(), 3); world.setBlockState(new net.minecraft.util.math.BlockPos((x + 3), (y + 2), (z + 5)), ExtraPlanets_Blocks.NUCLEAR_BOMB.getDefaultState(), 3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8668/buggy-version/src.main.java.com.mjr.extraplanets.world.features.WorldGenNuclearPile.java", "BodyUseAPI": [], "Fixed commit": "1f298c82a11b3cb527bb60c6934a228512ae7b16", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-07-25T00:43:23Z"},
{"Line": "=>2392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((wallmap[x][y]) == 0) { wallmap[x][y] = sg.getWallmap()[x][y]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3681/buggy-version/core.src.map.WorldGen.MapGen.java", "BodyUseAPI": [], "Fixed commit": "cfad635cd1b669495ba154b46a9904b19027f396", "Url": "https://api.github.com/repos/CuseCose/Aeronef", "Date": "2018-10-06T21:17:23Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cloud.prime.repository.menus.MenuRepository.findByRoleKeyLong(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((menuIdList != null) && ((menuIdList.size()) > 0)) { return menuRepository.findByNotInRoleKey(menuIdList); }else { return menuRepository.findAll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6316/buggy-version/src.main.java.com.cloud.prime.service.menus.MenuServiceImplement.java", "BodyUseAPI": ["com.cloud.prime.repository.menus.MenuRepository.findByNotInRoleKey(java.util.List<java.lang.Long>)"], "Fixed commit": "d6808ad96dec761e9b0f94834fbd5b7e20a2fec9", "Url": "https://api.github.com/repos/dadeyordan/app.cloud.prime", "Date": "2018-02-14T18:15:48Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (linearOpMode.isStopRequested()) { jewelDetector.disable(); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8299/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.functions.java", "BodyUseAPI": [], "Fixed commit": "aac83df429548be0e4fe4bff1f12bd832a27eecd", "Url": "https://api.github.com/repos/JDroids/ftc_app_relic_recovery", "Date": "2018-01-15T18:33:42Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getResources().getConfiguration()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((config.smallestScreenWidthDp) >= 600) { android.support.v7.widget.GridLayoutManager layoutManager = new android.support.v7.widget.GridLayoutManager(this, 2); recyclerView.setLayoutManager(layoutManager); }else { android.support.v7.widget.LinearLayoutManager layoutManager = new android.support.v7.widget.LinearLayoutManager(this); recyclerView.setLayoutManager(layoutManager); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/471/buggy-version/app.src.main.java.com.example.user.bakingapp.ui.RecipeListActivity.java", "BodyUseAPI": [], "Fixed commit": "377966c63d9c3d853a6ff5843a379fa1aaa03015", "Url": "https://api.github.com/repos/CannibalChoco/BakingApp", "Date": "2018-05-22T07:04:37Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(additionalContactNames.hasValue())) return contactablePlaneBodies;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/157/buggy-version/ihmc-common-walking-control-modules.src.main.java.us.ihmc.commonWalkingControlModules.highLevelHumanoidControl.factories.ContactableBodiesFactory.java", "BodyUseAPI": [], "Fixed commit": "992f2c73569981dd20c01d0ccdcba4946d411dd5", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-open-robotics-software", "Date": "2018-03-01T01:21:38Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (DistributionPackageInfo.PROPERTY_REQUEST_TYPE.equals(infoKey)) { if (value instanceof java.lang.String) { value = org.apache.sling.distribution.DistributionRequestType.valueOf(((java.lang.String) (value))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5620/buggy-version/src.main.java.org.apache.sling.distribution.queue.impl.resource.ResourceQueueUtils.java", "BodyUseAPI": [], "Fixed commit": "db1464db9e5b2f94c2031c88a5d8407602758e36", "Url": "https://api.github.com/repos/mpetria/sling-org-apache-sling-distribution-core", "Date": "2018-10-10T13:51:53Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (DistributionPackageInfo.PROPERTY_REQUEST_TYPE.equals(key)) { if (value instanceof org.apache.sling.distribution.DistributionRequestType) { value = ((org.apache.sling.distribution.DistributionRequestType) (value)).name(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5620/buggy-version/src.main.java.org.apache.sling.distribution.queue.impl.resource.ResourceQueueUtils.java", "BodyUseAPI": [], "Fixed commit": "db1464db9e5b2f94c2031c88a5d8407602758e36", "Url": "https://api.github.com/repos/mpetria/sling-org-apache-sling-distribution-core", "Date": "2018-10-10T13:51:53Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.tiles.equals(goal)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4595/buggy-version/graphs.day03.src.Board.java", "BodyUseAPI": [], "Fixed commit": "fae7946066c32da0cf090e2e0434fe446a98c6b9", "Url": "https://api.github.com/repos/Enmoren/DSA-18", "Date": "2018-04-03T23:33:45Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mAuth.getCurrentUser().getEmail()) != null) { nav_email.setText(mAuth.getCurrentUser().getEmail()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9035/buggy-version/app.src.main.java.com.zywie.android.zywie.LandingNav.java", "BodyUseAPI": ["com.google.firebase.auth.FirebaseAuth.getCurrentUser()", "mAuth.getCurrentUser().getEmail()", "android.widget.TextView.setText(mAuth.getCurrentUser().getEmail())"], "Fixed commit": "28c04e59053844c7ad2799ef8aae508e8a59f2d7", "Url": "https://api.github.com/repos/famasboy888/zywie", "Date": "2018-01-24T17:13:50Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(overrideParam.isEmpty())) { pageProvider.setOverrideParameter(overrideParam); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8113/buggy-version/app.src.main.java.com.quran.labs.androidquran.util.QuranScreenInfo.java", "BodyUseAPI": ["com.quran.data.page.provider.PageProvider.setOverrideParameter(java.lang.String)"], "Fixed commit": "91efaa666f220d2a8a2876a345ce204c10d24f9c", "Url": "https://api.github.com/repos/quran/quran_android", "Date": "2018-02-03T19:26:43Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mDbAdapter) == null) || ((mDbAdapter.getDb()) == null)) { mDbAdapter = new andicar.n.persistence.DBAdapter(getContext()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5160/buggy-version/AndiCar.src.main.java.andicar.n.activity.fragment.GPSTrackControllerFragment.java", "BodyUseAPI": [], "Fixed commit": "ac158ba49627414f1354862688565f7d9558ea03", "Url": "https://api.github.com/repos/mkeresztes/AndiCar", "Date": "2018-03-27T09:20:35Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!played) { for (int i = 0; i < 5; i++) { for (int n = 0; n < 4; n++) { if ((hand[i]) == 13) { (board.bPiles[0][n])++; board.cleanBPiles(); hand[i] = 0; played = true; break; } } if (played) { break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7156/buggy-version/src.Player.java", "BodyUseAPI": [], "Fixed commit": "615e8ec7ad074d39ea3189512fe89e5c703c8da8", "Url": "https://api.github.com/repos/ETEThan/MyCardGame", "Date": "2018-01-23T18:11:42Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!played) { boolean disFlag = false; if (true) { for (int i = 0; i < 4; i++) { for (int n = 0; n < 5; n++) { if (((hand[n]) == (disPile[0][i])) && ((hand[n]) != 0)) { disPile = addDisPile(disPile, hand[n], i); hand[n] = 0; disFlag = true; break; } } if (disFlag) { break; } } } if (!disFlag) { int largest = 0; int loc = 0; for (int i = 0; i < 5; i++) { if (((hand[i]) > largest) && ((hand[i]) != 13)) { largest = hand[i]; loc = i; } } for (int i = 0; i < 4; i++) { if ((disPile[0][i]) == 0) { disPile = addDisPile(disPile, largest, i); hand[loc] = 0; disFlag = true; break; } } } if (!disFlag) { disPile = addDisPile(disPile, hand[1], 0); hand[1] = 0; } flag = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7156/buggy-version/src.Player.java", "BodyUseAPI": [], "Fixed commit": "615e8ec7ad074d39ea3189512fe89e5c703c8da8", "Url": "https://api.github.com/repos/ETEThan/MyCardGame", "Date": "2018-01-23T18:11:42Z"},
{"Line": "=>630", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(displayParams.isEmpty())) { org.executequery.gui.editor.SelectParametersDialog spd = new org.executequery.gui.editor.SelectParametersDialog(displayParams); spd.display(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1973/buggy-version/src.org.executequery.sql.QueryDispatcher.java", "BodyUseAPI": [], "Fixed commit": "2d3c9ccef387bccb596e3e387ab3850ed1cdf1eb", "Url": "https://api.github.com/repos/red-soft-ru/redexpert", "Date": "2018-03-07T13:53:58Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (io.hekate.cluster.split.AddressReachabilityDetector.log.isWarnEnabled()) { io.hekate.cluster.split.AddressReachabilityDetector.log.warn(\"Address reachability check failed [host={}, timeout={}, error={}]\", address, timeout, e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9822/buggy-version/hekate-core.src.main.java.io.hekate.cluster.split.AddressReachabilityDetector.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String,java.net.InetSocketAddress,int,java.lang.String)"], "Fixed commit": "ef8a919b05b46caac9f34aaa9f990790311cedd0", "Url": "https://api.github.com/repos/hekate-io/hekate", "Date": "2018-01-04T22:48:57Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (io.hekate.cluster.split.HostReachabilityDetector.log.isWarnEnabled()) { io.hekate.cluster.split.HostReachabilityDetector.log.warn(\"Address reachability check failed with an error [host={}, timeout={}, cause={}]\", host, timeout, e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9822/buggy-version/hekate-core.src.main.java.io.hekate.cluster.split.HostReachabilityDetector.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String,java.lang.String,int,java.lang.String)"], "Fixed commit": "ef8a919b05b46caac9f34aaa9f990790311cedd0", "Url": "https://api.github.com/repos/hekate-io/hekate", "Date": "2018-01-04T22:48:57Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (io.hekate.cluster.split.HostReachabilityDetector.log.isWarnEnabled()) { io.hekate.cluster.split.HostReachabilityDetector.log.warn(\"Address reachability check failed [host={}, timeout={}]\", host, timeout); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9822/buggy-version/hekate-core.src.main.java.io.hekate.cluster.split.HostReachabilityDetector.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String,java.lang.String,int)"], "Fixed commit": "ef8a919b05b46caac9f34aaa9f990790311cedd0", "Url": "https://api.github.com/repos/hekate-io/hekate", "Date": "2018-01-04T22:48:57Z"},
{"Line": "=>561", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (piece != null) { piece.setIcon(null); topGlass.remove(piece); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3432/buggy-version/src.connect.four.gui.GamePanel.java", "BodyUseAPI": ["connect.four.gui.GUIPiece.setIcon(<nulltype>)", "javax.swing.JPanel.remove(connect.four.gui.GUIPiece)"], "Fixed commit": "5cb8b77a77ef7445e6d3653587a5028443f0f423", "Url": "https://api.github.com/repos/bbgun7/SER216-team13-connect4", "Date": "2018-04-15T21:56:44Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(GeographicSearchType.BOTH.equals(searchType))) { query.setParameter(\"user\", user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4297/buggy-version/grassroot-services.src.main.java.za.org.grassroot.services.geo.GeoLocationBrokerImpl.java", "BodyUseAPI": [], "Fixed commit": "662e65f626c883cc419590da54fd3630fbb11818", "Url": "https://api.github.com/repos/grassrootza/grassroot-platform", "Date": "2018-08-10T13:42:42Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["et_query_phone.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((\"\".equals(number)) || ((number.length()) != (phoneCount))) { com.example.mybulter.view.MyToast.showMessage(\"\u624b\u673a\u53f7\u7801\u683c\u5f0f\u4e0d\u6b63\u786e\"); }else { queryPhonePresenter.query(number); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7567/buggy-version/mybulter.src.main.java.com.example.mybulter.activity.PhoneQueryActivity.java", "BodyUseAPI": ["com.example.mybulter.presenter.impl.QueryPhonePresenterImpl.query(java.lang.String)"], "Fixed commit": "0b95725542c67ba55e245fe5ccd7754506349f60", "Url": "https://api.github.com/repos/foxalan/MyApplication", "Date": "2018-01-17T00:55:24Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((p.getLink()) != null) { next = p.getLink().getMaxId(); previous = p.getLink().getSinceId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6020/buggy-version/mastodon4j_to_twitter4j.src.main.java.com.github.moko256.mastodon.MTPagableResponseList.java", "BodyUseAPI": [], "Fixed commit": "ceaee7ffbc4f85af107473e056440d801b2a5431", "Url": "https://api.github.com/repos/moko256/twitlatte", "Date": "2018-01-21T14:34:42Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (p != null) { p.setScoreboard(scoreboard); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3155/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Util.Scoreboards.SimpleScoreboard.java", "BodyUseAPI": ["org.bukkit.entity.Player.setScoreboard(org.bukkit.scoreboard.Scoreboard)"], "Fixed commit": "a3a4fec1ffa0b3b4f4f62765eca9095146db3918", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2018-09-08T22:41:11Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["in.getFileHeader().getSequenceDictionary()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((samDictionary.getSequenceIndex(contig.getSequenceName())) != (-1)) { final htsjdk.samtools.SAMRecordIterator it = in.query(contig.getSequenceName(), 0, 0, false); writeReads(out, it, newOrder, contig.getSequenceName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7763/buggy-version/src.main.java.picard.sam.ReorderSam.java", "BodyUseAPI": ["htsjdk.samtools.SamReader.query(contig.getSequenceName(),int,int,boolean)", "htsjdk.samtools.SAMSequenceRecord.getSequenceName()", "htsjdk.samtools.SAMSequenceRecord.getSequenceName()", "picard.sam.ReorderSam.writeReads(htsjdk.samtools.SAMFileWriter,htsjdk.samtools.SAMRecordIterator,java.util.Map<java.lang.Integer, java.lang.Integer>,contig.getSequenceName())"], "Fixed commit": "b5e69f5be6a4ed58665fd3880710f7a0a45f0feb", "Url": "https://api.github.com/repos/CampagneLaboratory/picard", "Date": "2018-01-12T21:48:08Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (errCheck == false) { errFile.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/767/buggy-version/Project_4.SongReader.java", "BodyUseAPI": [], "Fixed commit": "08527764c4aaf28c8755d9726774073ea9d8792a", "Url": "https://api.github.com/repos/a-tayeh/Java", "Date": "2018-03-31T04:07:18Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.user.getCachedData().getPermissionData(calculateContexts()).getPermissionValue(java.lang.String,CheckOrigin.PLATFORM_PERMISSION_CHECK)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (ts != (me.lucko.luckperms.api.Tristate.UNDEFINED)) return ts.asBoolean();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3310/buggy-version/nukkit.src.main.java.me.lucko.luckperms.nukkit.model.permissible.LPPermissible.java", "BodyUseAPI": ["me.lucko.luckperms.api.Tristate.asBoolean()"], "Fixed commit": "2fd607887766b95465a567113ad8f6094b057814", "Url": "https://api.github.com/repos/Creeperface01/LuckPerms", "Date": "2018-05-12T16:05:32Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.nukkit.Server.getInstance().getPluginManager().getPermission(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (perm != null) { permDefault = me.lucko.luckperms.nukkit.model.PermissionDefault.fromPermission(perm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3310/buggy-version/nukkit.src.main.java.me.lucko.luckperms.nukkit.model.permissible.LPPermissible.java", "BodyUseAPI": ["me.lucko.luckperms.nukkit.model.PermissionDefault.fromPermission(cn.nukkit.permission.Permission)"], "Fixed commit": "2fd607887766b95465a567113ad8f6094b057814", "Url": "https://api.github.com/repos/Creeperface01/LuckPerms", "Date": "2018-05-12T16:05:32Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((network) != null) { android.os.Bundle addition = new android.os.Bundle(); addition.putString(TransactionHolder.DEFAULT_ADDRESS_ADDITIONAL, wallet.address); addition.putString(TransactionHolder.DEFAULT_SYMBOL_ADDITIONAL, network.symbol); holder.bind(items.get(position), addition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8130/buggy-version/app.src.main.java.com.asfoundation.wallet.ui.widget.adapter.TransactionsDetailsAdapter.java", "BodyUseAPI": [], "Fixed commit": "0b35af3fd640cbe2e16c4eeafce450e506eb21ce", "Url": "https://api.github.com/repos/Aptoide/appcoins-wallet-android", "Date": "2018-08-24T17:33:40Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.json.JsonProcess.removeLastNode(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(org.springframework.util.StringUtils.isEmpty(innerCurrentNode))) { return innerCurrentNode.concat(\".\").concat(lastNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1315/buggy-version/src.main.java.com.json.JsonProcess.java", "BodyUseAPI": ["java.lang.String.concat(java.lang.String)", "java.lang.String.concat(java.lang.String)"], "Fixed commit": "c4acabedd9c8a824651b7c3b1a2e493b8cacfea4", "Url": "https://api.github.com/repos/enok/json-util", "Date": "2018-08-25T00:07:53Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (arrayCopy != null) { for (com.ibm.wsspi.collector.manager.SynchronousHandler synchronousHandler : arrayCopy) { synchronousHandler.synchronousWrite(event); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6900/buggy-version/dev.com.ibm.ws.logging.core.src.com.ibm.ws.collector.manager.buffer.BufferManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "f33d3094a68221033c2b9e67a5965cfdd4ef7a85", "Url": "https://api.github.com/repos/Channyboy/open-liberty", "Date": "2018-02-08T19:06:38Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<com.feeyo.net.http.handler.IRequestHandler.Type, java.util.List<com.feeyo.net.http.filter.IFilter>>.get(requestHandler.getType())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (filters != null) { for (com.feeyo.net.http.filter.IFilter filter : filters) { if (filter.doFilter(ctx, messageEvent)) { continue; }else { return false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5844/buggy-version/src.main.java.com.feeyo.net.http.HttpServerRequestHandler.java", "BodyUseAPI": [], "Fixed commit": "a7c1ad14adaa05ca4a90ccbbb4566821732c73e8", "Url": "https://api.github.com/repos/variflight/feeyo-hlsserver", "Date": "2018-05-23T08:12:13Z"},
{"Line": "=>1135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (success) { if (simulate == false) { this.sql.deleteAttributeVector(id); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9352/buggy-version/DNA.src.dna.export.ExporterR.java", "BodyUseAPI": [], "Fixed commit": "785a7ec6057b3b129251a730d42c7f981564d433", "Url": "https://api.github.com/repos/leifeld/dna", "Date": "2018-06-11T21:34:43Z"},
{"Line": "=>1129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (simulate == false) { this.data.getAttributes().remove(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9352/buggy-version/DNA.src.dna.export.ExporterR.java", "BodyUseAPI": [], "Fixed commit": "785a7ec6057b3b129251a730d42c7f981564d433", "Url": "https://api.github.com/repos/leifeld/dna", "Date": "2018-06-11T21:34:43Z"},
{"Line": "=>1576", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (simulate == false) { this.data.getDocuments().remove(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9352/buggy-version/DNA.src.dna.export.ExporterR.java", "BodyUseAPI": [], "Fixed commit": "785a7ec6057b3b129251a730d42c7f981564d433", "Url": "https://api.github.com/repos/leifeld/dna", "Date": "2018-06-11T21:34:43Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (var == null) var = edu.mit.csail.sdg.alloy4compiler.ast.ExprVar.make(Pos.UNKNOWN, label, type.type());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9374/buggy-version/electrum.src.main.java.edu.mit.csail.sdg.alloy4compiler.translator.A4SolutionReader.java", "BodyUseAPI": [], "Fixed commit": "d62e04bf9b90483c54671dbf636b1aeffe7cf0e9", "Url": "https://api.github.com/repos/haslab/Electrum", "Date": "2018-10-19T10:12:43Z"},
{"Line": "=>661", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (cacheIdStr == null) { serializedIds = com.pratilipi.recommendations.utils.S3Utility.getSerializedContentPartOnePratilipiIds(language); cacheIdStr = serializedIds.stream().map(( number) -> java.lang.String.valueOf(number)).collect(java.util.stream.Collectors.joining(\",\")); redisUtility.set((\"v2_1_Serialized_\" + language), cacheIdStr, 120L, java.util.concurrent.TimeUnit.MINUTES); }else { if ((cacheIdStr.length()) > 0) { serializedIds = java.util.stream.Stream.of(cacheIdStr.split(\",\")).map(java.lang.Long::parseLong).collect(java.util.stream.Collectors.toList()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9888/buggy-version/src.main.java.com.pratilipi.recommendations.service.PratilipiService.java", "BodyUseAPI": ["java.util.stream.Stream<java.lang.Long>.collect(java.util.stream.Collector<java.lang.Long, ?, java.util.List<java.lang.Long>>)", "java.lang.String.length()", "java.util.stream.Stream.of(java.lang.String[])", "java.lang.String.split(java.lang.String)", "java.util.stream.Stream<java.lang.String>.map(java.util.function.Function<? super java.lang.String, ? extends java.lang.Long>)"], "Fixed commit": "37bdb650482720039489f6515d61ee4be3ec426b", "Url": "https://api.github.com/repos/Pratilipi/ecs-recommendation", "Date": "2018-09-01T07:05:55Z"},
{"Line": "=>670", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (serializedIds != null) { serializedIds.removeAll(userReadPratilipiIds); if ((serializedIds.size()) > 0) { java.util.Collections.shuffle(serializedIds); com.pratilipi.recommendations.dto.Pratilipi ptlp = new com.pratilipi.recommendations.dto.Pratilipi(); ptlp.setPratilipiId(serializedIds.get(0)); userReadPratilipiIds.add(serializedIds.get(0)); meta = new java.util.HashMap<java.lang.String, java.lang.Object>(); meta.put(\"recommendationType\", \"Serlialized\"); ptlp.setMeta(meta); pratilipis.add(ptlp); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9888/buggy-version/src.main.java.com.pratilipi.recommendations.service.PratilipiService.java", "BodyUseAPI": ["java.util.List<java.lang.Long>.get(int)", "java.util.Collections.shuffle(java.util.List<java.lang.Long>)", "com.pratilipi.recommendations.jdo.Pratilipi.setPratilipiId(java.lang.Long)", "java.util.List<java.lang.Long>.get(int)", "java.util.List<java.lang.Long>.add(java.lang.Long)", "java.util.List<java.lang.Long>.size()", "java.util.List<java.lang.Long>.removeAll(java.util.List<java.lang.Long>)"], "Fixed commit": "37bdb650482720039489f6515d61ee4be3ec426b", "Url": "https://api.github.com/repos/Pratilipi/ecs-recommendation", "Date": "2018-09-01T07:05:55Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((currentRdfClass.getBaseType()) != currentRdfClass) { currentRdfClass = currentRdfClass.getBaseType(); }else { currentRdfClass = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5770/buggy-version/odata2sparql.v4.src.main.java.com.inova8.odata2sparql.RdfModelToMetadata.RdfModelToMetadata.java", "BodyUseAPI": [], "Fixed commit": "21247bb92297066c4fed73329d2435005480fd5b", "Url": "https://api.github.com/repos/peterjohnlawrence/com.inova8.odata2sparql.v4", "Date": "2018-01-08T20:46:28Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((editorListFilterField) != null) { editorListFilterField.clear(); editorListFilterField.validate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3050/buggy-version/src.de.cses.client.bibliography.AnnotatedBiblographyEditor.java", "BodyUseAPI": [], "Fixed commit": "37ccd1b82bc783dd74d2ab1e730fee130b49b824", "Url": "https://api.github.com/repos/saw-leipzig/kucha", "Date": "2018-06-14T09:11:01Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((authorListFilterField) != null) { authorListFilterField.clear(); authorListFilterField.validate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3050/buggy-version/src.de.cses.client.bibliography.AnnotatedBiblographyEditor.java", "BodyUseAPI": [], "Fixed commit": "37ccd1b82bc783dd74d2ab1e730fee130b49b824", "Url": "https://api.github.com/repos/saw-leipzig/kucha", "Date": "2018-06-14T09:11:01Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, edu.mit.csail.sdg.alloy4compiler.ast.Sig>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((ans != null) && ((expr2ts.get(ans)) != null)) return ans;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9320/buggy-version/electrum.src.main.java.edu.mit.csail.sdg.alloy4compiler.translator.A4SolutionReader.java", "BodyUseAPI": [], "Fixed commit": "09766062438fb55dee67766be00a9ada17e46d50", "Url": "https://api.github.com/repos/haslab/Electrum", "Date": "2018-10-23T17:30:16Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (wall != null) { wall.setWall(wallFlag); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/309/buggy-version/src.main.java.it.spaghettisource.navaltrader.mapeditor.GridPanel.java", "BodyUseAPI": ["it.spaghettisource.navaltrade.pathfinding.Cell.setWall(boolean)"], "Fixed commit": "71a63aaa6554454e7fcc40ff11dbe766f958c503", "Url": "https://api.github.com/repos/alesky78/NavalTrader", "Date": "2018-03-19T15:58:02Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((sDate1.length()) != 0) { java.lang.System.out.println(\"im here for testing null birthd\"); date1 = new java.text.SimpleDateFormat(\"yyyy-mm-dd\").parse(sDate1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9498/buggy-version/src.SaveProfileListener.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "91830aa9f8e265470a4da9b066ea8b95eab72375", "Url": "https://api.github.com/repos/OliviaZY/CSSE333Project", "Date": "2018-05-17T16:27:15Z"},
{"Line": "=>526", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (args == null) { return php.runtime.Memory.CONST_INT_0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5758/buggy-version/jphp-runtime.src.php.runtime.ext.core.LangFunctions.java", "BodyUseAPI": [], "Fixed commit": "3115e6ee92862de2bd3310eed5ebb9c42e54cc1d", "Url": "https://api.github.com/repos/jphp-group/jphp", "Date": "2018-03-09T13:37:47Z"},
{"Line": "=>542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (args == null) { return php.runtime.Memory.FALSE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5758/buggy-version/jphp-runtime.src.php.runtime.ext.core.LangFunctions.java", "BodyUseAPI": [], "Fixed commit": "3115e6ee92862de2bd3310eed5ebb9c42e54cc1d", "Url": "https://api.github.com/repos/jphp-group/jphp", "Date": "2018-03-09T13:37:47Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((txtLat.getText().toString().matches(\"\")) && (txtLon.getText().toString().matches(\"\"))) { intent.putExtra(\"lat\", 0); intent.putExtra(\"lon\", 0); startActivityForResult(intent, 1); }else { intent.putExtra(\"lat\", java.lang.Double.parseDouble(txtLat.getText().toString())); intent.putExtra(\"long\", java.lang.Double.parseDouble(txtLon.getText().toString())); startActivityForResult(intent, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6126/buggy-version/Camping.app.src.main.java.com.example.sean.camping.MainActivity.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,double)", "android.content.Intent.putExtra(java.lang.String,double)", "java.lang.Double.parseDouble(txtLon.getText().toString())", "android.widget.EditText.getText()", "android.widget.EditText.getText()", "txtLat.getText().toString()", "txtLon.getText().toString()", "java.lang.Double.parseDouble(txtLat.getText().toString())"], "Fixed commit": "3acbd378a23fd4c480fc0ad55a771a03134edc51", "Url": "https://api.github.com/repos/skunz42/Camping", "Date": "2018-02-11T15:26:46Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rateCallback) != null) { rateCallback.onErrorFetchingRate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8857/buggy-version/cryptocoinview.src.main.java.xute.cryptocoinview.CoinView.java", "BodyUseAPI": [], "Fixed commit": "b1c6492012190a71d15a07c0526555da8eb0bcdd", "Url": "https://api.github.com/repos/bxute/CryptoCoinView", "Date": "2018-09-08T06:57:23Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((list != null) && ((list.size()) != 0)) { response.result.addAll(list); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2007/buggy-version/app.src.main.java.org.nervos.neuron.service.NervosHttpService.java", "BodyUseAPI": ["response.result.addAll(java.util.List<org.nervos.neuron.item.TransactionItem>)"], "Fixed commit": "0651dbd8413a8170342951ec8d6841b5dd7a0988", "Url": "https://api.github.com/repos/cryptape/neuron-android", "Date": "2018-07-01T13:38:02Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cmd.hasOption(\"h\")) { agentsoz.osm.analysis.app.Main.help(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4493/buggy-version/src.main.java.agentsoz.osm.analysis.app.Main.java", "BodyUseAPI": [], "Fixed commit": "4519bbe2f18d2227a9037546b9dce0d3f69e98c6", "Url": "https://api.github.com/repos/agentsoz/osm-analysis", "Date": "2018-05-21T14:12:59Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((majiangGame.getJu()) != null) { juResult = majiangGame.getJu().getJuResult(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9645/buggy-version/src.main.java.com.anbang.qipai.ruianmajiang.cqrs.c.domain.MajiangGameValueObject.java", "BodyUseAPI": [], "Fixed commit": "a2bb3627c66361159d1831d1966c909f769891c1", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_ruianmajiang", "Date": "2018-09-20T09:36:46Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((args.length) - index) < 1) { return ((((((\"That\\'s not the right number of arguments!\\n\" + \"Use ``\") + head) + \" \") + (args[0])) + \" \") + (args[(index - 1)])) + \" [announcement|comment] [args]\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8691/buggy-version/src.main.java.ws.nmathe.saber.commands.general.EditCommand.java", "BodyUseAPI": [], "Fixed commit": "07f85bf13571b447abcf203d6ea6f5bd389e3af3", "Url": "https://api.github.com/repos/notem/Saber-Bot", "Date": "2018-03-16T23:45:04Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((args.length) - index) < 1) { return ((((((\"That\\'s not the right number of arguments!\\n\" + \"Use ``\") + head) + \" \") + (args[0])) + \" \") + (args[(index - 1)])) + \" [announcement|comment] [args]\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8691/buggy-version/src.main.java.ws.nmathe.saber.commands.general.EditCommand.java", "BodyUseAPI": [], "Fixed commit": "07f85bf13571b447abcf203d6ea6f5bd389e3af3", "Url": "https://api.github.com/repos/notem/Saber-Bot", "Date": "2018-03-16T23:45:04Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((reads == null) || (counts == null)) { throw new java.lang.IllegalStateException((((\"Unexpected null: Reads =\" + reads) + \" counts=\") + counts)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4897/buggy-version/uk.ac.babraham.SeqMonk.DataTypes.Sequence.ReadsWithCounts.java", "BodyUseAPI": [], "Fixed commit": "d1ca752488c3800cf2ccc6a10332d553c9f22d3c", "Url": "https://api.github.com/repos/s-andrews/SeqMonk", "Date": "2018-03-30T19:44:42Z"},
{"Line": "=>506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(relation.getObjectType().equals(RelationObjectType.WEB))) { org.roda.wui.client.common.utils.JavascriptUtils.scrollToTop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4035/buggy-version/roda-ui.roda-wui.src.main.java.org.roda.wui.client.planning.ShowRepresentationInformation.java", "BodyUseAPI": [], "Fixed commit": "480988662ebe0c29f5976682a06e3472923c99ad", "Url": "https://api.github.com/repos/keeps/roda", "Date": "2018-04-19T10:46:34Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (touchedGroupIndex == (-1)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9029/buggy-version/app.src.main.java.edu.up.cs301.rummikub.RummikubHumanPlayer.java", "BodyUseAPI": [], "Fixed commit": "a8e63d0859640724c2644e5bf677108f683847af", "Url": "https://api.github.com/repos/itschrisL/RummikubApplication", "Date": "2018-04-19T06:30:28Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.up.cs301.rummikub.RummikubState.getSelectedGroup()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((selectedTileGroup.groupSize()) > 2)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9029/buggy-version/app.src.main.java.edu.up.cs301.rummikub.RummikubHumanPlayer.java", "BodyUseAPI": [], "Fixed commit": "a8e63d0859640724c2644e5bf677108f683847af", "Url": "https://api.github.com/repos/itschrisL/RummikubApplication", "Date": "2018-04-19T06:30:28Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.choerodon.devops.infra.common.util.V1LoadBalancerStatus.getIngress()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (v1LoadBalancerIngresses != null) { for (io.choerodon.devops.infra.common.util.V1LoadBalancerIngress v1LoadBalancerIngress : v1LoadBalancerIngresses) { if ((v1LoadBalancerIngress.getIp()) != \"\") { list.add(v1LoadBalancerIngress.getIp()); } if ((v1LoadBalancerIngress.getHostname()) != \"\") { list.add(v1LoadBalancerIngress.getHostname()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/869/buggy-version/src.main.java.io.choerodon.devops.infra.common.util.K8sUtil.java", "BodyUseAPI": [], "Fixed commit": "7b1daa5665d184ccabc973cca5dd5dde9a0b5107", "Url": "https://api.github.com/repos/choerodon/devops-service", "Date": "2018-08-17T05:25:05Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getContextReference().get().findGlobal(com.oracle.truffle.llvm.runtime.pointer.LLVMPointer)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (global == null) { throw new com.oracle.truffle.llvm.runtime.except.LLVMPolyglotException(this, \"First argument to truffle_assign_managed must be a pointer to a global.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7818/buggy-version/sulong.projects.com.oracle.truffle.llvm.nodes.src.com.oracle.truffle.llvm.nodes.intrinsics.interop.LLVMTruffleWriteManagedToGlobal.java", "BodyUseAPI": [], "Fixed commit": "646cd4467714632618d8742af3ebe6b6f5b112f8", "Url": "https://api.github.com/repos/oracle/graal", "Date": "2018-09-20T16:04:37Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mGoogleSignInClient) == null) { com.google.android.gms.auth.api.signin.GoogleSignInOptions mGso = new com.google.android.gms.auth.api.signin.GoogleSignInOptions.Builder(com.google.android.gms.auth.api.signin.GoogleSignInOptions.DEFAULT_SIGN_IN).requestEmail().build(); mGoogleSignInClient = com.google.android.gms.auth.api.signin.GoogleSignIn.getClient(context, mGso); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1133/buggy-version/app.src.main.java.com.fff.ingood.third_party.GoogleSignInManager.java", "BodyUseAPI": [], "Fixed commit": "9343a089531a614ea660e2cd262e4f472b0816a3", "Url": "https://api.github.com/repos/elminsterii/IngoodClientAndroid", "Date": "2018-08-13T04:07:56Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedTime) != null) c.setTime(new java.util.Date(selectedTime));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7660/buggy-version/app.src.main.java.com.example.vlad.franckformator.SpendingActivity.java", "BodyUseAPI": [], "Fixed commit": "a8b6979a8a3b46c83594ff1a8f99f7888017c995", "Url": "https://api.github.com/repos/vlad7001/FranckFormator", "Date": "2018-10-08T15:43:46Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((motionEvent.getAction()) == (android.view.MotionEvent.ACTION_DOWN)) { android.widget.Toast.makeText(mContext, mContext.getResources().getString(R.string.msg_sorry_only_manager_can_change), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4675/buggy-version/app.src.main.java.com.framgia.fgoal.screen.objectivedetail.adapter.ObjectiveDetailViewHolder.java", "BodyUseAPI": [], "Fixed commit": "e2c9c3726c853eb9f8a454b6c13b562409f113ab", "Url": "https://api.github.com/repos/hails96/fgoal-android", "Date": "2018-10-18T01:55:01Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((motionEvent.getAction()) == (android.view.MotionEvent.ACTION_DOWN)) { android.widget.Toast.makeText(getActivity(), R.string.msg_sorry_only_manager_can_change, Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4675/buggy-version/app.src.main.java.com.framgia.fgoal.screen.objectivedetail.ObjectiveDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "e2c9c3726c853eb9f8a454b6c13b562409f113ab", "Url": "https://api.github.com/repos/hails96/fgoal-android", "Date": "2018-10-18T01:55:01Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((c.getCount()) <= 0) return view;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3721/buggy-version/AppFolder.app.src.main.java.com.example.amir.mydiabetes.AvgFragment.java", "BodyUseAPI": [], "Fixed commit": "0199ca4493acfe7d427ba005a15f70d43726bf12", "Url": "https://api.github.com/repos/erezam/myDiabetes-app", "Date": "2018-02-15T12:49:29Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.state) != (net.smoofyuniverse.antixray.impl.network.NetworkChunk.State.NOT_OBFUSCATED)) throw new java.lang.IllegalStateException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8771/buggy-version/src.main.java.net.smoofyuniverse.antixray.impl.network.NetworkChunk.java", "BodyUseAPI": [], "Fixed commit": "fde8fa10f6ffd7821c646e7d39b6d8c68e01a547", "Url": "https://api.github.com/repos/Yeregorix/Mirage", "Date": "2018-01-21T18:00:06Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((y >= 0) && (y < 256)) ((net.smoofyuniverse.antixray.impl.internal.InternalWorld) (w)).getView().deobfuscate(x, y, z);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8771/buggy-version/src.main.java.net.smoofyuniverse.antixray.event.WorldEventListener.java", "BodyUseAPI": ["((net.smoofyuniverse.antixray.impl.internal.InternalWorld) (w)).getView().deobfuscate(int,int,int)"], "Fixed commit": "fde8fa10f6ffd7821c646e7d39b6d8c68e01a547", "Url": "https://api.github.com/repos/Yeregorix/Mirage", "Date": "2018-01-21T18:00:06Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.Set<java.lang.String>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (result.isEmpty()) { result.add(se.blinfo.mediatype.MediaTypeIdentifier.FALLBACK_MEDIA_TYPE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8601/buggy-version/BlMediaType.src.main.java.se.blinfo.mediatype.MediaTypeIdentifier.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)"], "Fixed commit": "c324376bbb4d01e91c95c6f087e13b5fe9519436", "Url": "https://api.github.com/repos/blinfo/bl-mediatype", "Date": "2018-10-19T09:54:47Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(portletDataHandlerBoolean.isDisabled())) { controlValue = com.liferay.portal.kernel.util.MapUtil.getBoolean(parameterMap, portletDataHandlerBoolean.getNamespacedControlName(), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9522/buggy-version/modules.apps.export-import.export-import-service.src.main.java.com.liferay.exportimport.internal.configuration.ExportImportConfigurationParameterMapFactoryImpl.java", "BodyUseAPI": ["com.liferay.portal.kernel.util.MapUtil.getBoolean(java.util.Map<java.lang.String, java.lang.String[]>,portletDataHandlerBoolean.getNamespacedControlName(),boolean)", "com.liferay.exportimport.kernel.lar.PortletDataHandlerBoolean.getNamespacedControlName()"], "Fixed commit": "638b6edffda318248f9cb89af1d9c229e6fec9df", "Url": "https://api.github.com/repos/drewbrokke/liferay-portal", "Date": "2018-07-04T11:50:29Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.manage_range)) { startActivity(new android.content.Intent(this, in.shadowsoft.onroad.range.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9154/buggy-version/app.src.main.java.in.shadowsoft.onroad.home.java", "BodyUseAPI": [], "Fixed commit": "a55cb2149b61a26957902504fba41e0aae8dad4e", "Url": "https://api.github.com/repos/prafful98/OnRoad-Dealer", "Date": "2018-10-22T15:07:50Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((historyAdapter.getItemCount()) > 0) { dialog.setContent(R.string.history_explanation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/930/buggy-version/app.src.main.java.com.randomappsinc.randomnumbergeneratorplus.dialogs.HistoryDialog.java", "BodyUseAPI": [], "Fixed commit": "66c8bc1869a141d291f3cb1ab5a028b6ca82e45f", "Url": "https://api.github.com/repos/Gear61/Random-Number-Generator", "Date": "2018-10-03T08:00:29Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gamepad2.b) { grabHome = 0.4; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/913/buggy-version/Relic.src.main.java.org.eastcobbrobotics.ftc.relic.teleop.JuniorTeleop.java", "BodyUseAPI": [], "Fixed commit": "abb429bedfb8e25acb3206df35f0c1a9fb122087", "Url": "https://api.github.com/repos/ECR-FTC/ftc_app", "Date": "2017-12-22T20:16:17Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gamepad2.y) { grabHome = 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/913/buggy-version/Relic.src.main.java.org.eastcobbrobotics.ftc.relic.teleop.JuniorTeleop.java", "BodyUseAPI": [], "Fixed commit": "abb429bedfb8e25acb3206df35f0c1a9fb122087", "Url": "https://api.github.com/repos/ECR-FTC/ftc_app", "Date": "2017-12-22T20:16:17Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["user.getData().getValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((value != null) && (!(value.isEmpty()))) { values.put(key, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5895/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Main.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "114f2170466945d8778d3fabb97d51b29256c8fb", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2018-07-22T01:44:56Z"},
{"Line": "=>596", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(RescribeConstants.TOKEN.equalsIgnoreCase(doctorList.getType()))) { doctorList.setType(doctorVsClinic.getString(doctorVsClinic.getColumnIndex(AppDBHelper.DOC_DATA.CLINIC_APPOINTMENT_TYPE))); clinicData.setAppointmentType(doctorList.getType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4658/buggy-version/app.src.main.java.com.rescribe.ui.activities.HomePageActivity.java", "BodyUseAPI": ["com.rescribe.model.book_appointment.doctor_data.DoctorList.setType(doctorVsClinic.getString(doctorVsClinic.getColumnIndex(AppDBHelper.DOC_DATA.CLINIC_APPOINTMENT_TYPE)))", "com.rescribe.model.book_appointment.doctor_data.ClinicData.setAppointmentType(doctorList.getType())", "com.rescribe.model.book_appointment.doctor_data.DoctorList.getType()"], "Fixed commit": "97cf570fadf742eb906fdf2baf0e2d5f8fe5838b", "Url": "https://api.github.com/repos/sandeepbahalkar123/myrescribe_repo", "Date": "2018-07-17T07:31:35Z"},
{"Line": "=>558", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rescribe.helpers.database.AppDBHelper.getAppointmentByDoctor(cardCursor.getInt(cardCursor.getColumnIndex(AppDBHelper.DOC_DATA.DOC_ID)))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (appointmentByDoctorCursor.getString(appointmentByDoctorCursor.getColumnIndex(AppDBHelper.DOC_DATA.APPOINTMENT_TYPE)).equalsIgnoreCase(RescribeConstants.TOKEN)) doctorList.setType(\"token\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4658/buggy-version/app.src.main.java.com.rescribe.ui.activities.HomePageActivity.java", "BodyUseAPI": [], "Fixed commit": "97cf570fadf742eb906fdf2baf0e2d5f8fe5838b", "Url": "https://api.github.com/repos/sandeepbahalkar123/myrescribe_repo", "Date": "2018-07-17T07:31:35Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useFree) { free = rs.getBoolean((startingIndex + 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1110/buggy-version/src.com.github.nbena.librarymanager.man.DbManager.java", "BodyUseAPI": [], "Fixed commit": "8972de8d4cf991ce25554d35527f3756a7bbbe4d", "Url": "https://api.github.com/repos/nbena/LibraryManager", "Date": "2018-05-19T16:59:36Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAttributes) == null) { if ((other.mAttributes) != null) { return false; } }else if (!(mAttributes.equals(other.mAttributes))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7310/buggy-version/cacheprototypelibrary.src.main.java.edu.ou.oudb.cacheprototypelibrary.querycache.query.Query.java", "BodyUseAPI": [], "Fixed commit": "c358b044ed2267ad4336c6179354459c3dd4217f", "Url": "https://api.github.com/repos/ZachArani/MOCCAD-Cache", "Date": "2018-05-03T23:38:20Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (idx == (-1)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7329/buggy-version/SuperWordList.src.to.us.tommyser.superlist.MainPanel.java", "BodyUseAPI": [], "Fixed commit": "1be1e48ae7175c6e78fa4fc501dc3d8276e749d7", "Url": "https://api.github.com/repos/STommydx/GuessTheWordList", "Date": "2018-03-03T15:30:48Z"},
{"Line": "=>4211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((toRemove.size()) >= 1) { for (megamek.common.Entity e : toRemove) { detector.sensorContacts.remove(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6733/buggy-version/megamek.src.megamek.common.Compute.java", "BodyUseAPI": [], "Fixed commit": "57e32e3bc435475f493bc9bbb5193c01e3a28edc", "Url": "https://api.github.com/repos/mkerensky/megamek", "Date": "2018-07-17T12:59:55Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["td.select(\"a\").text()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (name.contains(\"/\")) name = name.substring(0, name.indexOf(\"/\")).trim();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9017/buggy-version/src.main.java.org.magic.api.decksniffer.impl.MTGDecksSniffer.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.trim()"], "Fixed commit": "5ec825cc8c80d5848b16b26a61b89a61e7db5ff0", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2018-04-16T13:00:23Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (herbView.canScrollVertically(herbView.SCROLL_INDICATOR_BOTTOM)) { returnToMap.show(); }else { returnToMap.hide(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1515/buggy-version/app.src.main.java.fr.wildcodeschool.variadis.HerbariumActivity.java", "BodyUseAPI": [], "Fixed commit": "172d9cda9aafc7b5ea18851c5e6515cd37bfc1ae", "Url": "https://api.github.com/repos/WildCodeSchool/toulouse-0218-java-variadis", "Date": "2018-03-30T15:32:30Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (rate != null) { ratingBar.setRating(rate.getStars()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7975/buggy-version/Project.app.src.main.java.com.nhommot.doctruyen.ui.activities.ReviewActivity.java", "BodyUseAPI": ["android.widget.RatingBar.setRating(rate.getStars())", "com.nhommot.doctruyen.models.Rating.getStars()"], "Fixed commit": "85ef063dcadd3455d6c2ebc584428a3820ba3bae", "Url": "https://api.github.com/repos/nhommotd14/doctruyen", "Date": "2018-05-06T11:18:20Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value.charAt(((value.length) - 2))) == ')') { isMultiGo = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5661/buggy-version/src.wagner.stephanie.lizzie.rules.SGFParser.java", "BodyUseAPI": [], "Fixed commit": "6ccad1ca81daf5d0d34a9696dfefef721fee14c2", "Url": "https://api.github.com/repos/featurecat/lizzie", "Date": "2018-03-30T09:54:45Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isMultiGo) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5661/buggy-version/src.wagner.stephanie.lizzie.rules.SGFParser.java", "BodyUseAPI": [], "Fixed commit": "6ccad1ca81daf5d0d34a9696dfefef721fee14c2", "Url": "https://api.github.com/repos/featurecat/lizzie", "Date": "2018-03-30T09:54:45Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.activity.CropActivity.findPoints()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (points != null) { mSelectionImageView.setPoints(points); }else { com.owncloud.android.lib.common.utils.Log_OC.d(com.owncloud.android.ui.activity.CropActivity.TAG, getResources().getString(R.string.no_contour_found)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8872/buggy-version/src.com.owncloud.android.ui.activity.CropActivity.java", "BodyUseAPI": ["com.owncloud.android.ui.QuadrilateralSelectionImageView.setPoints(java.util.List<android.graphics.PointF>)"], "Fixed commit": "904701abefeb9a7df7dcb52fd1be5e0e90572562", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-03-12T06:43:04Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id == null) || (id < 0)) { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8287/buggy-version/src.main.java.fr.textma.web.rest.client.TeClientRestSource.java", "BodyUseAPI": [], "Fixed commit": "f05fa3333eae1093c4868d9fd4331688f9453cfa", "Url": "https://api.github.com/repos/wangyang2012/textma-rest", "Date": "2018-01-07T00:49:33Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dir.exists())) { final org.nyet.ecuxplot.ProfileMenu pm = this; java.lang.String err = null; try { if (!(dir.mkdirs())) { err = \"Failed to create profile directory \" + (dir.getPath()); } } catch (java.lang.SecurityException se) { err = ((\"Failed to create profile directory \" + (dir.getPath())) + \"\\n\") + (se.toString()); } if (err != null) java.lang.System.out.println(err); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5572/buggy-version/src.org.nyet.ecuxplot.ProfileMenu.java", "BodyUseAPI": ["java.io.File.getPath()", "java.io.File.getPath()", "java.io.File.mkdirs()"], "Fixed commit": "1939993e5d122fd08cd3ba933bf63ad8b74bffd5", "Url": "https://api.github.com/repos/nyetwurk/ecuxplot", "Date": "2018-02-23T01:56:54Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((startDate) == null) { ca.nrc.cadc.caom2.artifactsync.ArtifactHarvester.log.info(((((\"harvest window: null \" + (df.format(stopDate))) + \" [\") + (batchSize)) + \"]\")); }else { ca.nrc.cadc.caom2.artifactsync.ArtifactHarvester.log.info(((((((\"harvest window: \" + (df.format(startDate))) + \" \") + (df.format(stopDate))) + \" [\") + (batchSize)) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/143/buggy-version/caom2-artifact-sync.src.main.java.ca.nrc.cadc.caom2.artifactsync.ArtifactHarvester.java", "BodyUseAPI": [], "Fixed commit": "ecb02bded26a534f79f3035b34680011404bb7e4", "Url": "https://api.github.com/repos/yeunga/caom2db", "Date": "2018-10-16T21:26:34Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.nrc.cadc.caom2.harvester.state.HarvestStateDAO.get(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((state.curLastModified) != null) { ca.nrc.cadc.caom2.artifactsync.ArtifactHarvester.log.debug((((\"harvesState: \" + (format(state.curID))) + \", \") + (df.format(state.curLastModified)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/143/buggy-version/caom2-artifact-sync.src.main.java.ca.nrc.cadc.caom2.artifactsync.ArtifactHarvester.java", "BodyUseAPI": ["java.text.DateFormat.format(state.curLastModified)", "ca.nrc.cadc.caom2.artifactsync.ArtifactHarvester.format(state.curID)", "org.apache.log4j.Logger.debug((((\"harvesState: \" + (format(state.curID))) + \", \") + (df.format(state.curLastModified))))"], "Fixed commit": "ecb02bded26a534f79f3035b34680011404bb7e4", "Url": "https://api.github.com/repos/yeunga/caom2db", "Date": "2018-10-16T21:26:34Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((timeToEvent) > 0) && ((handler) != null)) { if ((getActivity()) != null) { com.teamnotfoundexception.impetus.Databases.Time time = com.teamnotfoundexception.impetus.Databases.EventsManager.get(getActivity().getApplicationContext()).convertSecondsToTime(timeToEvent); mTimeContainer.setText((((((\"starts in \" + (time.getHours())) + \":\") + (time.getMinutes())) + \":\") + (time.getSeconds()))); handler.postDelayed(this, 1000); }else { handler = null; } }else { handler = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4236/buggy-version/app.src.main.java.com.teamnotfoundexception.impetus.fragments.TimerFragment.java", "BodyUseAPI": [], "Fixed commit": "42d4f40f5b4f2334073f6339f620714335fc78af", "Url": "https://api.github.com/repos/dodococo/Fest-Management-App", "Date": "2018-03-22T14:12:04Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Math.abs(((toArrayIndex(originalRow)) - (toArrayIndex(newRow))))) == (java.lang.Math.abs(((toArrayIndex(originalColumn)) - (toArrayIndex(newColumn)))))) { int distance = java.lang.Math.abs(((toArrayIndex(originalRow)) - (toArrayIndex(newRow)))); java.lang.System.out.println((\"toArrayIndex(originalRow) = \" + (toArrayIndex(originalRow)))); java.lang.System.out.println((\"toArrayIndex(originalColumn) = \" + (toArrayIndex(originalColumn)))); java.lang.System.out.println((\"toArrayIndex(newRow) = \" + (toArrayIndex(newRow)))); java.lang.System.out.println((\"toArrayIndex(newColumn) = \" + (toArrayIndex(newColumn)))); if (((toArrayIndex(newRow)) < (toArrayIndex(originalRow))) && ((toArrayIndex(newColumn)) > (toArrayIndex(originalColumn)))) { java.lang.System.out.println(\"Going to top right\"); for (int i = 1; i < distance; i++) { if ((boardArray[((toArrayIndex(originalRow)) - i)][((toArrayIndex(originalColumn)) + i)]) != null) { java.lang.System.out.println(\"Error: Invalid Move. Piece(s) obstructing path.\"); return false; } } return true; }else if (((toArrayIndex(newRow)) < (toArrayIndex(originalRow))) && ((toArrayIndex(newColumn)) < (toArrayIndex(originalColumn)))) { java.lang.System.out.println(\"Going to top left\"); for (int i = 1; i < distance; i++) { if ((boardArray[((toArrayIndex(originalRow)) - i)][((toArrayIndex(originalColumn)) - i)]) != null) { java.lang.System.out.println(\"Error: Invalid Move. Piece(s) obstructing path.\"); return false; } } return true; }else if (((toArrayIndex(newRow)) > (toArrayIndex(originalRow))) && ((toArrayIndex(newColumn)) > (toArrayIndex(originalColumn)))) { java.lang.System.out.println(\"Going to bottom right\"); for (int i = 1; i < distance; i++) { if ((boardArray[((toArrayIndex(originalRow)) + i)][((toArrayIndex(originalColumn)) + i)]) != null) { java.lang.System.out.println(\"Error: Invalid Move. Piece(s) obstructing path.\"); return false; } } return true; }else if (((toArrayIndex(newRow)) > (toArrayIndex(originalRow))) && ((toArrayIndex(newColumn)) < (toArrayIndex(originalColumn)))) { java.lang.System.out.println(\"Going to bottom left\"); for (int i = 1; i < distance; i++) { if ((boardArray[((toArrayIndex(originalRow)) + i)][((toArrayIndex(originalColumn)) - i)]) != null) { java.lang.System.out.println(\"Error: Invalid Move. Piece(s) obstructing path.\"); return false; } } return true; }else { java.lang.System.out.println(\"Error: Honestly I have no idea how you got here.\"); return false; } }else { java.lang.System.out.println(\"Error: Invalid Move. Bishop can only move diagonally.\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1737/buggy-version/src.com.hbh7.Bishop.java", "BodyUseAPI": ["com.hbh7.Bishop.toArrayIndex(int)", "com.hbh7.Bishop.toArrayIndex(java.lang.String)", "com.hbh7.Bishop.toArrayIndex(java.lang.String)", "com.hbh7.Bishop.toArrayIndex(int)", "com.hbh7.Bishop.toArrayIndex(int)", "com.hbh7.Bishop.toArrayIndex(java.lang.String)", "com.hbh7.Bishop.toArrayIndex(int)", "com.hbh7.Bishop.toArrayIndex(int)", "java.lang.Math.abs(((toArrayIndex(originalRow)) - (toArrayIndex(newRow))))", "com.hbh7.Bishop.toArrayIndex(int)", "java.io.PrintStream.println((\"toArrayIndex(newColumn) = \" + (toArrayIndex(newColumn))))", "java.io.PrintStream.println((\"toArrayIndex(newRow) = \" + (toArrayIndex(newRow))))", "com.hbh7.Bishop.toArrayIndex(int)", "com.hbh7.Bishop.toArrayIndex(java.lang.String)", "com.hbh7.Bishop.toArrayIndex(java.lang.String)", "com.hbh7.Bishop.toArrayIndex(java.lang.String)", "com.hbh7.Bishop.toArrayIndex(java.lang.String)", "com.hbh7.Bishop.toArrayIndex(int)", "com.hbh7.Bishop.toArrayIndex(int)", "java.io.PrintStream.println((\"toArrayIndex(originalColumn) = \" + (toArrayIndex(originalColumn))))", "com.hbh7.Bishop.toArrayIndex(java.lang.String)", "com.hbh7.Bishop.toArrayIndex(int)", "com.hbh7.Bishop.toArrayIndex(java.lang.String)", "com.hbh7.Bishop.toArrayIndex(java.lang.String)", "com.hbh7.Bishop.toArrayIndex(java.lang.String)", "com.hbh7.Bishop.toArrayIndex(java.lang.String)", "com.hbh7.Bishop.toArrayIndex(int)", "com.hbh7.Bishop.toArrayIndex(int)", "com.hbh7.Bishop.toArrayIndex(int)", "com.hbh7.Bishop.toArrayIndex(java.lang.String)", "com.hbh7.Bishop.toArrayIndex(int)", "com.hbh7.Bishop.toArrayIndex(int)", "com.hbh7.Bishop.toArrayIndex(java.lang.String)", "java.io.PrintStream.println((\"toArrayIndex(originalRow) = \" + (toArrayIndex(originalRow))))", "com.hbh7.Bishop.toArrayIndex(int)"], "Fixed commit": "e0975579dbaba6cb33b1ca6f57aa53adf331be43", "Url": "https://api.github.com/repos/hbh7/ChessAndAI", "Date": "2018-05-07T12:51:53Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((response.length()) <= 2000) { response = \"I don't say this often, but I'm done talking for now.\"; com.rcx.powerglove.TalkListener.chats.remove((((event.getGuild().getId()) + \" \") + (channel.getId()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/522/buggy-version/src.main.java.com.rcx.powerglove.TalkListener.java", "BodyUseAPI": [], "Fixed commit": "576de71fc26156eea501c3fddb6dfa10ae697026", "Url": "https://api.github.com/repos/RCXcrafter/PowerGlove", "Date": "2018-06-10T10:45:23Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["response.getJsonObject().getAsJsonObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((error.has(\"root_cause\")) && (error.get(\"root_cause\").isJsonArray()))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/341/buggy-version/gateway.engine.es.src.main.java.io.apiman.gateway.engine.es.AbstractClientFactory.java", "BodyUseAPI": [], "Fixed commit": "2499e1a3812f683ec11cd20784f10bb615d4c69a", "Url": "https://api.github.com/repos/apiman/apiman", "Date": "2018-06-28T15:02:58Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((response.getJsonObject()) == null) || (!(response.getJsonObject().has(\"error\")))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/341/buggy-version/gateway.engine.es.src.main.java.io.apiman.gateway.engine.es.AbstractClientFactory.java", "BodyUseAPI": [], "Fixed commit": "2499e1a3812f683ec11cd20784f10bb615d4c69a", "Url": "https://api.github.com/repos/apiman/apiman", "Date": "2018-06-28T15:02:58Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((RUNMODE) == (DcMotor.RunMode.RUN_USING_ENCODER)) { FrontLeftDrive.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER); FrontRightDrive.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER); RearLeftDrive.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER); RearRightDrive.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1289/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.FourWheelDriveTrain.java", "BodyUseAPI": [], "Fixed commit": "8b01e8661d65b5473e6a22d3491e8cf52ed4bd71", "Url": "https://api.github.com/repos/LAPCODING123/ftc_team_5197_2018_19", "Date": "2018-10-29T20:21:07Z"},
{"Line": "=>761", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (uuids.containsValue(uuid)) { debug((\"Duplicate uuid? \" + uuid)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7437/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.AdvancedCoreHook.java", "BodyUseAPI": ["com.Ben12345rocks.AdvancedCore.AdvancedCoreHook.12.debug(java.lang.String)"], "Fixed commit": "cdeb3979f5e21a2e6e50e5bf100810cd6308fb58", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2018-01-07T22:40:13Z"},
{"Line": "=>517", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.PsiElement.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (parent != null) { com.intellij.psi.PsiElement superParent = parent.getParent(); if ((superParent != null) && (superParent instanceof org.ballerinalang.plugins.idea.psi.AnnotationAttachmentNode)) { com.intellij.lang.annotation.Annotation annotation = holder.createInfoAnnotation(element, null); annotation.setTextAttributes(BallerinaSyntaxHighlightingColors.ANNOTATION); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9800/buggy-version/tool-plugins.intellij.src.main.java.org.ballerinalang.plugins.idea.codeinsight.daemon.impl.BallerinaAnnotator.java", "BodyUseAPI": ["com.intellij.psi.PsiElement.getParent()"], "Fixed commit": "31e0807726fc0d338950e8109abb62e86988bff9", "Url": "https://api.github.com/repos/Shan1024/ballerina", "Date": "2018-03-20T11:30:17Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (swapped) { java.lang.String tmp = sourceUri; sourceUri = targetUri; targetUri = tmp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2309/buggy-version/limes-core.src.main.java.org.aksw.limes.core.measures.mapper.string.ExactMatchMapper.java", "BodyUseAPI": [], "Fixed commit": "441be42fe0252e2c73a64befa4196adc531af17f", "Url": "https://api.github.com/repos/ironjan/LIMES", "Date": "2018-02-19T12:59:54Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLocal) { hostName = \"localhost\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2259/buggy-version/src.main.java.Node.NodeConfigurator.java", "BodyUseAPI": [], "Fixed commit": "61aa7a70689edac2721cb5513de632c8cddfbb67", "Url": "https://api.github.com/repos/BraveNewPumpkin/LeaderElectionPractice", "Date": "2018-03-22T04:52:41Z"},
{"Line": "=>968", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count > 500) { result.append(original.substring(current, (current + Offset)).replace(\"\\r\", \"\").replace(\"\\n\", \"\\\\n\")).append(\"\\\" + new String()\\n+\\\"\"); count = 0; }else { result.append(original.substring(current, (current + Offset)).replace(\"\\r\", \"\").replace(\"\\n\", \"\\\\n\")).append(\"\\\"\\n+\\\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/97/buggy-version/main.plugins.org.talend.core.runtime.src.main.java.org.talend.core.model.utils.NodeUtil.java", "BodyUseAPI": [], "Fixed commit": "04341ca72d0360758f9203b71734c48918f03ea1", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2018-02-07T02:45:50Z"},
{"Line": "=>599", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((temp != null) && (!((this.selectedBody) instanceof micdoodle8.mods.galacticraft.api.galaxies.Satellite))) breathable = ((micdoodle8.mods.galacticraft.api.prefab.world.gen.WorldProviderSpace) (temp)).hasBreathableAtmosphere();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2141/buggy-version/src.main.java.com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection.java", "BodyUseAPI": [], "Fixed commit": "249a49de2878c6327e60575a3924d4818e396b99", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-01-03T16:38:33Z"},
{"Line": "=>601", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.selectedBody.getUnlocalizedName().contains(\"overworld\")) breathable = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2141/buggy-version/src.main.java.com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection.java", "BodyUseAPI": [], "Fixed commit": "249a49de2878c6327e60575a3924d4818e396b99", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-01-03T16:38:33Z"},
{"Line": "=>974", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count > 500) { result.append(original.substring(current, (current + Offset)).replace(\"\\r\", \"\").replace(\"\\n\", \"\\\\n\")).append(\"\\\" + new String()\\n+\\\"\"); count = 0; }else { result.append(original.substring(current, (current + Offset)).replace(\"\\r\", \"\").replace(\"\\n\", \"\\\\n\")).append(\"\\\"\\n+\\\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2513/buggy-version/main.plugins.org.talend.core.runtime.src.main.java.org.talend.core.model.utils.NodeUtil.java", "BodyUseAPI": [], "Fixed commit": "9b315dc31215131e58fc917a1f7a9ec3086570aa", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2018-02-07T02:45:50Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (willPost) contractRepository.save(contract);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3254/buggy-version/src.main.java.stu.csub.dbproject.service.ContractService.java", "BodyUseAPI": [], "Fixed commit": "ae96b65ab31d6522c682ebee6fafe9aecc5988c0", "Url": "https://api.github.com/repos/jacobfrench/databases-backend", "Date": "2018-04-25T02:59:13Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (resVo.isSuccess()) { resData = ((java.util.Map) (resVo.getData())); }else { vo.setSuccess(false); vo.setMsg(resVo.getMsg()); return vo; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2372/buggy-version/src.main.java.com.anbang.qipai.game.web.controller.GamePlayController.java", "BodyUseAPI": ["com.anbang.qipai.game.web.vo.CommonVO.getData()", "com.anbang.qipai.game.web.vo.CommonVO.setMsg(resVo.getMsg())", "com.anbang.qipai.game.web.vo.CommonVO.getMsg()"], "Fixed commit": "f0ff1e35be929b36ae96fe7cbdfcb89a5b7c08fd", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_game", "Date": "2018-07-12T10:18:45Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Integer.parseInt(f.getName())) > (-1)) { numProcs++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1287/buggy-version/uvm.impl.com.untangle.uvm.MetricManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "fd3b646151e371f08bc9cc444e66abda09f8a775", "Url": "https://api.github.com/repos/untangle/ngfw_src", "Date": "2018-06-13T17:31:48Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lombok.val.getAssertionConsumerService(SAMLConstants.SAML2_POST_BINDING_URI)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((acs == null) || (org.apache.commons.lang3.StringUtils.isBlank(acs.getLocation()))) { throw new org.opensaml.messaging.decoder.MessageDecodingException((\"Unable to resolve SP ACS URL location for binding \" + (org.opensaml.saml.common.xml.SAMLConstants.SAML2_POST_BINDING_URI))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5902/buggy-version/support.cas-server-support-saml-idp-web.src.main.java.org.apereo.cas.support.saml.web.idp.profile.IdPInitiatedProfileHandlerController.java", "BodyUseAPI": [], "Fixed commit": "c08a0da5450fa6c185cfc18047527677bf30d5a3", "Url": "https://api.github.com/repos/apereo/cas", "Date": "2018-08-24T17:41:10Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((song.getDuration()) == 0.0) { song.setDuration(((int) (java.lang.Double.parseDouble(metadata.get(\"xmpDM:duration\"))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6392/buggy-version/Main.src.Main.java", "BodyUseAPI": ["Song.setDuration(double)"], "Fixed commit": "289b7e2d7334bd2bd9ab7c046710513c0b144a0d", "Url": "https://api.github.com/repos/Feischd/DancingCozmo", "Date": "2018-03-04T18:50:19Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) throw new java.lang.Exception();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1472/buggy-version/api.src.main.java.enjuu.api.App.java", "BodyUseAPI": [], "Fixed commit": "2fb566ac9168269a2a26e9e670598b12620e0b2d", "Url": "https://api.github.com/repos/Enjuu/EnjuuAPI", "Date": "2018-10-17T13:37:49Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (definition != null) { if ((definition.isEmpty()) || (definition == \" \")) { definition = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5080/buggy-version/src.forer.dictionary.Dictionary.java", "BodyUseAPI": ["java.lang.String.isEmpty()"], "Fixed commit": "80ee86683762514c91949e87199ebd7d4e91e10c", "Url": "https://api.github.com/repos/chavs1997/forer-mco152-spring-2018", "Date": "2018-02-13T20:43:52Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((camera) != null) stopCamera();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/746/buggy-version/src.main.java.org.havenapp.main.sensors.motion.Preview.java", "BodyUseAPI": [], "Fixed commit": "0cdddc98f307c83978e410044f712ea864740c8d", "Url": "https://api.github.com/repos/lukeswitz/haven", "Date": "2018-01-20T11:26:20Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((serviceMessenger) != null) context.unbindService(mConnection);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/746/buggy-version/src.main.java.org.havenapp.main.sensors.motion.Preview.java", "BodyUseAPI": [], "Fixed commit": "0cdddc98f307c83978e410044f712ea864740c8d", "Url": "https://api.github.com/repos/lukeswitz/haven", "Date": "2018-01-20T11:26:20Z"},
{"Line": "=>578", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isok) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1743/buggy-version/src.main.java.com.adc.disasterforecast.task.DisPreventTask.java", "BodyUseAPI": [], "Fixed commit": "fac6de0ead712dd0ec26784278dbc24b206de4b2", "Url": "https://api.github.com/repos/Victor-ZHC/weathervisualization", "Date": "2018-01-15T14:07:37Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ch.epfl.sweng.swenggolf.TestMode.isTest()) { createOfferObject(name, description, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6726/buggy-version/app.src.main.java.ch.epfl.sweng.swenggolf.offer.CreateOfferActivity.java", "BodyUseAPI": [], "Fixed commit": "3694e7c7f490773a21b96b0679814d60a4297316", "Url": "https://api.github.com/repos/SwengGolfTeam/Sweng_Golf", "Date": "2018-10-16T16:33:56Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (d != 0) { op_scale = 1 + (((float) (d)) / (mCanvasView.getWidth())); invalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5363/buggy-version/edit.src.main.java.vip.frendy.edit.warp2.HipHelper.java", "BodyUseAPI": [], "Fixed commit": "69871aeaa9c3a3950f824e192e2c2683b754390d", "Url": "https://api.github.com/repos/frendyxzc/KCamera", "Date": "2018-07-24T02:47:55Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((aktuell.getZeiger()) == null) { ende = oldAkt; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/728/buggy-version/Liste.ListBittner.java", "BodyUseAPI": [], "Fixed commit": "847851736af9201f96bfa4e1503856fb0a37cbe2", "Url": "https://api.github.com/repos/ScholliYT/Datenstrukturen", "Date": "2018-01-18T17:01:41Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((current) == (end)) && ((current) == (start))) { current = null; start = null; end = null; }else if ((current) != (end)) { current.setObject(current.getNextNode().getObject()); if ((current.getNextNode()) == (end)) { end = current; } current.setNextNode(current.getNextNode().getNextNode()); }else { toFirst(); while ((current.getNextNode()) != (end)) { next(); } current.setNextNode(null); end = current; current = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/728/buggy-version/Liste.ListTom.java", "BodyUseAPI": [], "Fixed commit": "847851736af9201f96bfa4e1503856fb0a37cbe2", "Url": "https://api.github.com/repos/ScholliYT/Datenstrukturen", "Date": "2018-01-18T17:01:41Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((current.getNextNode()) == null) { end = oldCurrent; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/728/buggy-version/Liste.ListTom.java", "BodyUseAPI": [], "Fixed commit": "847851736af9201f96bfa4e1503856fb0a37cbe2", "Url": "https://api.github.com/repos/ScholliYT/Datenstrukturen", "Date": "2018-01-18T17:01:41Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.aufdemrand.denizencore.utilities.dObject.getAttribute(net.aufdemrand.denizencore.tags.Attribute)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (res == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6825/buggy-version/src.main.java.net.aufdemrand.denizencore.utilities.CoreUtilities.java", "BodyUseAPI": [], "Fixed commit": "5bf51fbbdc630f11ca1737168064e07650b51fe0", "Url": "https://api.github.com/repos/DenizenScript/Denizen-Core", "Date": "2018-06-30T03:02:01Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jtool.changetracker.xml.Xml2Operation.getFirstChildCode(org.w3c.dom.NodeList)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (code == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/260/buggy-version/org.jtool.changetracker.core.src.org.jtool.changetracker.xml.Xml2Operation.java", "BodyUseAPI": [], "Fixed commit": "a0cf9b54d2da994336498f15eb547d0195de2401", "Url": "https://api.github.com/repos/katsuhisamaruyama/ChangeTracker2", "Date": "2018-02-16T13:02:46Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.duangsuse.tinyaxml.Main.pluginClass.getName().equals(org.duangsuse.tinyaxml.Main.missingPluginId)) carg = new java.lang.String[]{ org.duangsuse.tinyaxml.Main.args[0] }; else carg = new java.lang.String[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3397/buggy-version/src.main.java.org.duangsuse.tinyaxml.Main.java", "BodyUseAPI": [], "Fixed commit": "915aa0711e4d123afd0047ea4432f7e4a0fae717", "Url": "https://api.github.com/repos/duangsuse/TinyAXML", "Date": "2018-04-14T07:43:21Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requestCode == (br.edu.ifspsaocarlos.sdm.fototagz.util.Constant.NEW_TAG)) { int id = data.getIntExtra(Constant.TAG_ID, 0); android.widget.ImageView ivTag = ((android.widget.ImageView) (findViewById(id))); ((android.view.ViewGroup) (ivTag.getParent())).removeView(ivTag); }else { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7580/buggy-version/app.src.main.java.br.edu.ifspsaocarlos.sdm.fototagz.ImageEditActivity.java", "BodyUseAPI": [], "Fixed commit": "c03dc39c96bc0a6ffa8540b7ec0c221e662cf61e", "Url": "https://api.github.com/repos/flpfar/FotoTagz", "Date": "2018-05-16T23:43:44Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (endpointMetric != null) { if (endpointMetric != (socketMetric.getEndpointMetric())) { socketMetric.setEndpointMetric(endpointMetric); } endpointMetric.onConnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6779/buggy-version/foundations.foundation-vertx.src.main.java.org.apache.servicecomb.foundation.vertx.metrics.DefaultHttpClientMetrics.java", "BodyUseAPI": ["org.apache.servicecomb.foundation.vertx.metrics.metric.DefaultHttpSocketMetric.setEndpointMetric(org.apache.servicecomb.foundation.vertx.metrics.metric.DefaultClientEndpointMetric)", "org.apache.servicecomb.foundation.vertx.metrics.metric.DefaultClientEndpointMetric.onConnect()"], "Fixed commit": "ac75fce6cd9aa7fc46281fd7cf7a4488f8c577f0", "Url": "https://api.github.com/repos/weichao666/incubator-servicecomb-java-chassis", "Date": "2018-10-10T09:39:56Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.helena128.droidscan.contacts.utils.AddressUtil.getOneAddress(android.database.Cursor)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (addr.isEmpty()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4855/buggy-version/app.src.main.java.com.helena128.droidscan.contacts.utils.AddressUtil.java", "BodyUseAPI": [], "Fixed commit": "41258aff16b0aa22f06ed53222872969dbcb9a20", "Url": "https://api.github.com/repos/helena128/Contact-Info", "Date": "2018-02-21T10:32:21Z"},
{"Line": "=>2138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hindrance > 0) { java.util.HashSet<VASL.LOS.counters.Smoke> hexSmoke = status.VASLGameInterface.getSmoke(hex); if ((hexSmoke != null) && (!(hexSmoke.isEmpty()))) { for (VASL.LOS.counters.Smoke s : hexSmoke) { if (s.getName().equals(\"Blaze\")) { hindrance = 0; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5412/buggy-version/src.VASL.LOS.Map.Map.java", "BodyUseAPI": [], "Fixed commit": "20b3ccc34c78b0878501bd36a2351715d75011de", "Url": "https://api.github.com/repos/vasl-developers/vasl", "Date": "2018-09-18T17:40:14Z"},
{"Line": "=>2061", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s.getName().equals(\"Blaze\")) { if (((status.VASLGameInterface.getVehicles(hex)) != null) && (!(status.VASLGameInterface.getVehicles(hex).isEmpty()))) { hindrance = 2; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5412/buggy-version/src.VASL.LOS.Map.Map.java", "BodyUseAPI": [], "Fixed commit": "20b3ccc34c78b0878501bd36a2351715d75011de", "Url": "https://api.github.com/repos/vasl-developers/vasl", "Date": "2018-09-18T17:40:14Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentIdentificationState) != (com.denimgroup.threadfix.framework.impl.dotNet.DotNetRoutesParser.IdentificationState.CLASS)) { currentIdentificationState = com.denimgroup.threadfix.framework.impl.dotNet.DotNetRoutesParser.IdentificationState.START; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2306/buggy-version/threadfix-ham.src.main.java.com.denimgroup.threadfix.framework.impl.dotNet.DotNetRoutesParser.java", "BodyUseAPI": [], "Fixed commit": "2a776b6db7bd22cc9cea0d2a1a93e7db2265ed96", "Url": "https://api.github.com/repos/secdec/astam-correlator", "Date": "2018-01-30T20:10:58Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isClassDecoratorKeyword(stringValue))) { currentIdentificationState = com.denimgroup.threadfix.framework.impl.dotNet.DotNetRoutesParser.IdentificationState.CLASS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2306/buggy-version/threadfix-ham.src.main.java.com.denimgroup.threadfix.framework.impl.dotNet.DotNetRoutesParser.java", "BodyUseAPI": [], "Fixed commit": "2a776b6db7bd22cc9cea0d2a1a93e7db2265ed96", "Url": "https://api.github.com/repos/secdec/astam-correlator", "Date": "2018-01-30T20:10:58Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmpty()) { lastNode = newNode; }else { frontNode.setPreNode(newNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9155/buggy-version/src.com.cz.ch10_queue.LinkedDeque.java", "BodyUseAPI": [], "Fixed commit": "2c621f673751c763b9b089bf4f3dd1f08e3389d3", "Url": "https://api.github.com/repos/chenzhao2013/dataStructure_java", "Date": "2018-05-29T15:11:52Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.size()) > 0) { android.support.v4.app.ActivityCompat.requestPermissions(this, request.toArray(new java.lang.String[0]), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7408/buggy-version/app.src.main.java.com.watshout.watshout.SignInActivity.java", "BodyUseAPI": ["android.support.v4.app.ActivityCompat.requestPermissions(com.watshout.watshout.SignInActivity,java.lang.String[],int)", "java.util.List<java.lang.String>.toArray(java.lang.String[])"], "Fixed commit": "b2e3a9ac24be55540792a668190d2076015813e4", "Url": "https://api.github.com/repos/WatShout/watshout-android", "Date": "2018-07-24T21:28:10Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (is == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4859/buggy-version/src.main.java.org.maxgamer.quickshop.Listeners.DisplayProtectionListener.java", "BodyUseAPI": [], "Fixed commit": "621f86fb39a1e091caaadcdf86f877855e0450d9", "Url": "https://api.github.com/repos/Ghost-chu/QuickShop-Reremake", "Date": "2018-07-31T07:12:39Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (is.getItemMeta().hasDisplayName()) { if (is.getItemMeta().getDisplayName().equals(\"QuickShop\")) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4859/buggy-version/src.main.java.org.maxgamer.quickshop.Listeners.DisplayProtectionListener.java", "BodyUseAPI": ["is.getItemMeta().getDisplayName()", "org.bukkit.inventory.ItemStack.getItemMeta()", "is.getItemMeta().getDisplayName().equals(java.lang.String)"], "Fixed commit": "621f86fb39a1e091caaadcdf86f877855e0450d9", "Url": "https://api.github.com/repos/Ghost-chu/QuickShop-Reremake", "Date": "2018-07-31T07:12:39Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dooboolab.RNIap.RNIapModule.getCurrentActivity()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (activity == null) { promise.reject(com.dooboolab.RNIap.RNIapModule.E_UNKNOWN, \"getCurrentActivity returned null\"); }else { addPromiseForKey(com.dooboolab.RNIap.RNIapModule.PROMISE_BUY_ITEM, promise); com.android.billingclient.api.BillingFlowParams flowParams = com.android.billingclient.api.BillingFlowParams.newBuilder().setSku(sku).setType(type).build(); int responseCode = mBillingClient.launchBillingFlow(activity, flowParams); android.util.Log.d(TAG, ((((((((\"buyItemByType (type: \" + type) + \", sku: \") + sku) + \") responseCode: \") + responseCode) + \"(\") + (getBillingResponseCodeName(responseCode))) + \")\")); if (responseCode != (BillingClient.BillingResponse.OK)) { rejectPromisesWithBillingError(com.dooboolab.RNIap.RNIapModule.PROMISE_BUY_ITEM, responseCode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6757/buggy-version/android.src.main.java.com.dooboolab.RNIap.RNIapModule.java", "BodyUseAPI": ["com.android.billingclient.api.BillingClient.launchBillingFlow(android.app.Activity,com.android.billingclient.api.BillingFlowParams)"], "Fixed commit": "7fcb6882e20492fab313c932fb60bb529605440a", "Url": "https://api.github.com/repos/jim-lake/react-native-iap", "Date": "2018-04-10T06:35:55Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getSemInvo()) >= (Constants.AT_LEAST_ONE_SEM_INVO)) { this.sendACK(curID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3942/buggy-version/client.UDPClient.java", "BodyUseAPI": [], "Fixed commit": "e87ce19d11dcb0e81623a52b091e7fa6915b6250", "Url": "https://api.github.com/repos/cacad-ntu/distributed-banking-system", "Date": "2018-03-31T22:27:22Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((writeQ.peek().getAPIType()) != (net.spy.memcached.ops.APIType.MGET)) { optimize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/367/buggy-version/src.main.java.net.spy.memcached.protocol.TCPMemcachedNodeImpl.java", "BodyUseAPI": [], "Fixed commit": "15dc2735e4e717dc4a166a75b3f15066ee335b4c", "Url": "https://api.github.com/repos/MinWooJin/arcus-java-client", "Date": "2018-02-22T06:53:41Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isQuantifier(regex.charAt(index))) { result = quantify(regex, current); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1464/buggy-version/src.RegexAST.java", "BodyUseAPI": ["RegexAST.quantify(java.lang.String,RegexAST.ASTNode)"], "Fixed commit": "fdf42a9f5adc78ab15dffb16f782a2c5fcedf5f9", "Url": "https://api.github.com/repos/nkohen/Regex", "Date": "2018-04-07T05:40:44Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parent.getParent()) != null) { parent = parent.getParent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8860/buggy-version/tooling.camel-route-parser.src.main.java.org.apache.camel.parser.helper.CamelJavaTreeParserHelper.java", "BodyUseAPI": ["org.apache.camel.parser.model.CamelNodeDetails.getParent()"], "Fixed commit": "341ff4de3115bd69091c38587196f69c2703a141", "Url": "https://api.github.com/repos/ramu11/camel", "Date": "2018-05-05T09:33:16Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parent.getParent()) != null) { parent = parent.getParent(); }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8860/buggy-version/tooling.camel-route-parser.src.main.java.org.apache.camel.parser.helper.CamelJavaTreeParserHelper.java", "BodyUseAPI": ["org.apache.camel.parser.model.CamelNodeDetails.getParent()"], "Fixed commit": "341ff4de3115bd69091c38587196f69c2703a141", "Url": "https://api.github.com/repos/ramu11/camel", "Date": "2018-05-05T09:33:16Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.camel.parser.model.CamelNodeDetails.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"choice\".equals(name)) { org.apache.camel.parser.model.CamelNodeDetails output = nodeFactory.copyNode(parent, name, node); parent.addOutput(output); parent = output; }else if ((\"when\".equals(name)) || (\"otherwise\".equals(name))) { while ((!(\"from\".equals(parent.getName()))) && (!(\"choice\".equals(parent.getName())))) { if ((parent.getParent()) != null) { parent = parent.getParent(); }else { break; } } }else { boolean hasOutput = hasOutput(name); if (hasOutput) { org.apache.camel.parser.model.CamelNodeDetails output = nodeFactory.copyNode(parent, name, node); parent.addOutput(output); parent = output; }else { org.apache.camel.parser.model.CamelNodeDetails output = nodeFactory.copyNode(parent, name, node); parent.addOutput(output); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8860/buggy-version/tooling.camel-route-parser.src.main.java.org.apache.camel.parser.helper.CamelJavaTreeParserHelper.java", "BodyUseAPI": ["org.apache.camel.parser.model.CamelNodeDetailsFactory.copyNode(org.apache.camel.parser.model.CamelNodeDetails,java.lang.String,org.apache.camel.parser.model.CamelNodeDetails)", "java.lang.String.equals(java.lang.String)", "org.apache.camel.parser.model.CamelNodeDetailsFactory.copyNode(org.apache.camel.parser.model.CamelNodeDetails,java.lang.String,org.apache.camel.parser.model.CamelNodeDetails)", "org.apache.camel.parser.helper.CamelJavaTreeParserHelper.hasOutput(java.lang.String)", "java.lang.String.equals(java.lang.String)", "org.apache.camel.parser.model.CamelNodeDetailsFactory.copyNode(org.apache.camel.parser.model.CamelNodeDetails,java.lang.String,org.apache.camel.parser.model.CamelNodeDetails)"], "Fixed commit": "341ff4de3115bd69091c38587196f69c2703a141", "Url": "https://api.github.com/repos/ramu11/camel", "Date": "2018-05-05T09:33:16Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((foodNum.length()) > 2) { logger.error(\"\u83dc\u54c1\u6570\u91cf\u8fc7\u591a\uff0c\u6700\u591a100\u9053\"); com.ineedwhite.diancan.common.utils.BizUtils.setRspMap(paraMap, ErrorCodeEnum.DC00013); return resp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7042/buggy-version/diancan-biz.src.main.java.com.ineedwhite.diancan.biz.impl.OrderServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "42706d42a076078e760c8839cb5fe13f88967916", "Url": "https://api.github.com/repos/Ruan-Xin/diancan", "Date": "2018-03-15T02:36:18Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tm.Game.drawCard()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (card == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9452/buggy-version/src.tm.action.DrawCardsAction.java", "BodyUseAPI": [], "Fixed commit": "0d1952754c256eddf6d081b355bbe455cc44788f", "Url": "https://api.github.com/repos/pjsavola/tm", "Date": "2018-07-22T10:59:30Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (condition == null) { throw new java.lang.IllegalArgumentException(\"The rule condition must be specified\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9920/buggy-version/easy-rules-mvel.src.main.java.org.jeasy.rules.mvel.MVELRuleDefinitionReader.java", "BodyUseAPI": [], "Fixed commit": "72d7bff9402cabf43b19900fbfd463cc693799e8", "Url": "https://api.github.com/repos/danrivcap/easy-rules", "Date": "2018-03-27T22:48:21Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((actions == null) || (actions.isEmpty())) { throw new java.lang.IllegalArgumentException(\"The rule action(s) must be specified\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9920/buggy-version/easy-rules-mvel.src.main.java.org.jeasy.rules.mvel.MVELRuleDefinitionReader.java", "BodyUseAPI": [], "Fixed commit": "72d7bff9402cabf43b19900fbfd463cc693799e8", "Url": "https://api.github.com/repos/danrivcap/easy-rules", "Date": "2018-03-27T22:48:21Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mainDprMap.containsKey(dpr)) { java.util.Map<java.lang.String, java.lang.Integer> innerdprmap = mainDprMap.get(dpr); java.lang.String ref = ch.so.agi.avgbs2mtab.mutdat.DPRContainer.getKeyFromValue(numberAndRefMap, parcelNumberAffectedByDPR); addedarea = innerdprmap.get(ref); }else { addedarea = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2018/buggy-version/library.src.main.java.ch.so.agi.avgbs2mtab.mutdat.DPRContainer.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.Map>.get(java.lang.String)"], "Fixed commit": "42e8766b040cb45834731c22153966dab89f1e57", "Url": "https://api.github.com/repos/sogis/avgbs2mtab-web-service", "Date": "2018-10-11T13:06:58Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.jahia.modules.verifyintegrity.jcrcommands.FixIntegrityErrorsCommand.devMode)) { java.lang.System.out.println(\"Not yet available, coming soon!\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9210/buggy-version/src.main.java.org.jahia.modules.verifyintegrity.jcrcommands.FixIntegrityErrorsCommand.java", "BodyUseAPI": [], "Fixed commit": "150e75be86358dbc843b4aaa50a943f79d562022", "Url": "https://api.github.com/repos/Jahia/content-integrity", "Date": "2018-04-25T15:11:32Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((visibilityMapInLocal) == null) visibilityMapInLocal = new us.ihmc.pathPlanning.visibilityGraphs.dataStructure.VisibilityMap();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/646/buggy-version/ihmc-path-planning.src.main.java.us.ihmc.pathPlanning.visibilityGraphs.dataStructure.NavigableRegion.java", "BodyUseAPI": [], "Fixed commit": "283a0b129a77d96969d143d19e486655bf6c7136", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-open-robotics-software", "Date": "2018-10-23T15:40:27Z"},
{"Line": "=>835", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCurrentSong().getId()) == (-1)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9665/buggy-version/app.src.main.java.com.flairmusicplayer.flair.services.FlairMusicService.java", "BodyUseAPI": [], "Fixed commit": "be9ddcb486bf3d3a573cc4b13955859224049adb", "Url": "https://api.github.com/repos/pulakdp/Flair", "Date": "2018-02-12T06:49:19Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["service.AdminService.selectAdminById(admin.getAid())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(origin.getAuthority().getRole().equals(admin.getAuthority().getRole()))) { authorityDao.updateRoleByAname(admin.getAname(), admin.getAuthority().getRole()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9316/buggy-version/com.us.ac.src.main.java.service.AdminService.java", "BodyUseAPI": ["entity.Admin.getAname()", "dao.AuthorityDao.updateRoleByAname(admin.getAname(),admin.getAuthority().getRole())", "entity.Admin.getAuthority()", "admin.getAuthority().getRole()"], "Fixed commit": "36abfa12edbaa4e3f4e1cbe0ac987720f0a0cf80", "Url": "https://api.github.com/repos/TrafalgarRicardoLu/TRLuck", "Date": "2018-04-30T07:41:37Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isForceGDAv20Response()) { req.setResponseFormat(GetDataAvailabilityConstants.NS_GDA_20); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9915/buggy-version/extensions.gda.hibernate.src.main.java.org.n52.sos.ds.hibernate.GetDataAvailabilityDAO.java", "BodyUseAPI": [], "Fixed commit": "4c8ef8ed32d7d1a02be7603f4f150fb2ee374429", "Url": "https://api.github.com/repos/52North/SOS", "Date": "2018-02-05T11:15:53Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.params.length) != (tr.params.length)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7706/buggy-version/src.org.sango_lang.PTypeRefSkel.java", "BodyUseAPI": [], "Fixed commit": "c4c0d6cef2d23370568a80e0c5da5a51007059b3", "Url": "https://api.github.com/repos/i-akym/sango0", "Date": "2018-08-11T09:33:29Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.sslEngine.isInboundDone()) { this.endOfStream = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7428/buggy-version/httpcore5.src.main.java.org.apache.hc.core5.reactor.ssl.SSLIOSession.java", "BodyUseAPI": [], "Fixed commit": "93a5f935fb4648b95ebf2ec23db872caa0cc64dd", "Url": "https://api.github.com/repos/rschmitt/httpcomponents-core", "Date": "2018-10-10T12:59:13Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (editAcc.updateAcc()) { ui.updateAccountMsg(); }else if ((order.getLineItems().size()) == 0) { java.lang.System.out.println(\"There are no items in your order.\"); }else { if (editAcc.getCollectionPreference().equalsIgnoreCase(\"d\")) { if (ui.valDelPostCode((\"\" + (editAcc.getPostcode())))) { ui.confOrderDetailsMsg(); java.lang.System.out.println(\"Account Details:\"); java.lang.System.out.println((\"Card Name: \" + (editAcc.getCardName()))); java.lang.System.out.println((((\"Card Number:\" + (editAcc.getCardNumber())) + \"\\tCard CCV:\") + (editAcc.getCardCCV()))); java.lang.System.out.println((((\"Payment Preference: \" + (editAcc.getPaymentPreference())) + \"\\tCollection Preference: \") + (editAcc.getCollectionPreference()))); java.lang.System.out.println(\"Order Details:\"); printOrder(order); if (ui.checkOutConfirm().matches(\"[Yy]\")) { db.getOrders().add(order); order = new Order(); ui.checkoutComplete(); } }else { java.lang.System.out.println(\"Cannot deliver to the postcode. Please change delivery preference or postcode\"); } }else { ui.confOrderDetailsMsg(); java.lang.System.out.println(\"Account Details:\"); java.lang.System.out.println((\"Card Name: \" + (editAcc.getCardName()))); java.lang.System.out.println((((\"Card Number:\" + (editAcc.getCardName())) + \"\\tCard CCV:\") + (editAcc.getCardCCV()))); java.lang.System.out.println((((\"Payment Preference: \" + (editAcc.getPaymentPreference())) + \"\\tCollection Preference: \") + (editAcc.getCollectionPreference()))); java.lang.System.out.println(\"Order Details:\"); printOrder(order); if (ui.checkOutConfirm().matches(\"[Yy]\")) { db.getOrders().add(order); order = new Order(); ui.checkoutComplete(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5186/buggy-version/MFVSystem.java", "BodyUseAPI": ["Customer.getCardCCV()", "Customer.getCardName()", "java.io.PrintStream.println((((\"Payment Preference: \" + (editAcc.getPaymentPreference())) + \"\\tCollection Preference: \") + (editAcc.getCollectionPreference())))", "Customer.getCardName()", "Customer.getCardCCV()", "Customer.getCollectionPreference()", "java.io.PrintStream.println((((\"Payment Preference: \" + (editAcc.getPaymentPreference())) + \"\\tCollection Preference: \") + (editAcc.getCollectionPreference())))", "java.io.PrintStream.println((((\"Card Number:\" + (editAcc.getCardNumber())) + \"\\tCard CCV:\") + (editAcc.getCardCCV())))", "Customer.getCollectionPreference()", "editAcc.getCollectionPreference().equalsIgnoreCase(java.lang.String)", "java.io.PrintStream.println((\"Card Name: \" + (editAcc.getCardName())))", "Customer.getPaymentPreference()", "java.io.PrintStream.println((\"Card Name: \" + (editAcc.getCardName())))", "Customer.getCardNumber()", "Customer.getPaymentPreference()", "Customer.getPostcode()", "Customer.getCardName()", "java.io.PrintStream.println((((\"Card Number:\" + (editAcc.getCardName())) + \"\\tCard CCV:\") + (editAcc.getCardCCV())))", "Customer.getCollectionPreference()", "UserInterface.valDelPostCode((\"\" + (editAcc.getPostcode())))"], "Fixed commit": "e493abf94f6d8802fdea5a4883f41fe7cd26d796", "Url": "https://api.github.com/repos/muhtasim3504/MFV", "Date": "2018-10-15T04:01:30Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sb.length()) > 0) { int lastComma = sb.lastIndexOf(\",\"); if (lastComma > 0) { int diff = (sb.length()) - lastComma; if ((diff > 0) && (diff <= 2)) { for (int i = 0; i < diff; i++) { sb.deleteCharAt(lastComma); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4763/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena-wrapper-for-sadl.src.main.java.com.ge.research.sadl.jena.translator.JenaTranslatorPlugin.java", "BodyUseAPI": ["java.lang.StringBuilder.deleteCharAt(int)", "java.lang.StringBuilder.lastIndexOf(java.lang.String)", "java.lang.StringBuilder.length()"], "Fixed commit": "9f4aa2968f39f3cfc8b52d97c72e10ba9d59a8ba", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2018-06-21T21:13:19Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((game.determineWinner()) != null) { java.lang.System.out.println(game.determineWinner().getName()); }else { java.lang.System.out.println(\"no clear winner\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3249/buggy-version/src.main.java.com.wordpress.macyves.Main.java", "BodyUseAPI": ["com.wordpress.macyves.Game.determineWinner()", "java.io.PrintStream.println(game.determineWinner().getName())", "game.determineWinner().getName()"], "Fixed commit": "fe57488db04235b0afd01a1bda52a82bcda02e69", "Url": "https://api.github.com/repos/yveshwang/blackjack", "Date": "2018-07-19T14:12:19Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.player.showHands()) == (com.wordpress.macyves.Game.BLACKJACK)) { return this.player; }else if (((this.player.showHands()) == (com.wordpress.macyves.Game.DOUBLEACE)) && ((this.dealer.showHands()) == (com.wordpress.macyves.Game.DOUBLEACE))) { return this.dealer; }else if (((this.player.showHands()) >= (PlayerHand.CAP)) && ((this.player.showHands()) < (this.dealer.showHands()))) { return dealer; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3249/buggy-version/src.main.java.com.wordpress.macyves.Game.java", "BodyUseAPI": ["com.wordpress.macyves.PlayerHand.showHands()", "com.wordpress.macyves.PlayerHand.showHands()", "com.wordpress.macyves.PlayerHand.showHands()"], "Fixed commit": "fe57488db04235b0afd01a1bda52a82bcda02e69", "Url": "https://api.github.com/repos/yveshwang/blackjack", "Date": "2018-07-19T14:12:19Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (handlePossibleTag(ctx.getBufferString().trim().substring(1), ctx, handler)) { ctx.resetBuffer(); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/10/buggy-version/src.main.java.pt.neticle.ark.templating.parsing.DefaultTemplateParser.java", "BodyUseAPI": ["pt.neticle.ark.templating.parsing.TemplateParserContext.resetBuffer()"], "Fixed commit": "5e2d27ace2308d35966bc68933e23d4eead764be", "Url": "https://api.github.com/repos/Neticle/ark-templating", "Date": "2018-03-22T19:13:11Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mergeParams.getMergeMode().isMerge()) { java.util.Collection<T> merged = org.hisp.dhis.system.util.ReflectionUtils.newCollectionInstance(property.getKlass()); merged.addAll(targetObject); merged.addAll(sourceObject.stream().filter(( o) -> !(merged.contains(o))).collect(java.util.stream.Collectors.toList())); targetObject.clear(); targetObject.addAll(merged); }else { targetObject.clear(); targetObject.addAll(sourceObject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9693/buggy-version/dhis-2.dhis-services.dhis-service-core.src.main.java.org.hisp.dhis.schema.DefaultMergeService.java", "BodyUseAPI": [], "Fixed commit": "7cb0e81d5ba7deabc81342eb6b749d06bfc1cc95", "Url": "https://api.github.com/repos/vietnguyen/dhis2-core", "Date": "2018-02-11T19:15:10Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userType) == null) { return ERROR; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5332/buggy-version/src.main.java.com.flightpub.queryFlights.actions.SearchAction.java", "BodyUseAPI": [], "Fixed commit": "0a215e84c1bbe45ac14af446eb4bcfca375dbfd0", "Url": "https://api.github.com/repos/SENG3160-2018/flightpub", "Date": "2018-10-16T23:03:50Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entry.getKey().equals(PlayerName)) lineflag = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2859/buggy-version/src.main.java.com.mycompany.premisesevent.TopList.java", "BodyUseAPI": [], "Fixed commit": "516bf89df48da1d15a1960fb4a92a728103c3237", "Url": "https://api.github.com/repos/kumaisu/PremisesEvent", "Date": "2018-03-30T19:02:39Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dateFragments.size()) > 0) { finalDate = purifyDateFragment(dateFragments.get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/630/buggy-version/app.src.main.java.com.dandyhacks.datereader.OcrDetectorProcessor.java", "BodyUseAPI": ["java.util.ArrayList<java.util.Date>.get(int)", "com.dandyhacks.datereader.OcrDetectorProcessor.purifyDateFragment(java.util.Date)"], "Fixed commit": "714699b622019b3c31545cb0b2af079c31b1ffed", "Url": "https://api.github.com/repos/nathreed/date-identification", "Date": "2018-02-18T05:17:30Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((toSave.getLocationName()) != null) toSave.setLocation(lservice.getObjByName(toSave.getLocationName()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6132/buggy-version/src.main.java.com.s.programowanieobiektoweprojekt.service.ItemService.java", "BodyUseAPI": ["com.s.programowanieobiektoweprojekt.model.Item.getLocationName()", "com.s.programowanieobiektoweprojekt.service.LocationService.getObjByName(toSave.getLocationName())", "com.s.programowanieobiektoweprojekt.model.Item.setLocation(lservice.getObjByName(toSave.getLocationName()))"], "Fixed commit": "a834631e02fc38d556e52c6f84489e6dee492987", "Url": "https://api.github.com/repos/gitsebste/programowanieObiektoweProjekt", "Date": "2018-01-21T13:59:24Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((toSave.getUnitShortName()) != null) toSave.setUnit(uservice.getObjByShortName(toSave.getUnitShortName()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6132/buggy-version/src.main.java.com.s.programowanieobiektoweprojekt.service.ItemService.java", "BodyUseAPI": ["com.s.programowanieobiektoweprojekt.service.UnitService.getObjByShortName(toSave.getUnitShortName())", "com.s.programowanieobiektoweprojekt.model.Item.getUnitShortName()", "com.s.programowanieobiektoweprojekt.model.Item.setUnit(uservice.getObjByShortName(toSave.getUnitShortName()))"], "Fixed commit": "a834631e02fc38d556e52c6f84489e6dee492987", "Url": "https://api.github.com/repos/gitsebste/programowanieObiektoweProjekt", "Date": "2018-01-21T13:59:24Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (similarNodes.isEmpty()) { ((de.ovgu.cide.fstgen.ast.FSTTerminal) (conflictNode)).setBody(oppositeSideNodeContent); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9069/buggy-version/src.main.java.br.ufpe.cin.mergers.handlers.singlerenaming.MergeMethodsSingleRenamingHandler.java", "BodyUseAPI": [], "Fixed commit": "7544dbc6b4ba5865456acf31653dee5d4cdc5b37", "Url": "https://api.github.com/repos/gaabs/jFSTMerge", "Date": "2018-10-20T22:09:51Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (set.isEmpty()) { return \"\\tno plugin exist\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6282/buggy-version/sofa-ark-parent.core-impl.container.src.main.java.com.alipay.sofa.ark.container.command.PluginCommandProvider.java", "BodyUseAPI": [], "Fixed commit": "374b17904c5271671d496b2e4e74aacddd223822", "Url": "https://api.github.com/repos/JoeKerouac/sofa-ark", "Date": "2018-07-25T09:59:01Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alipay.sofa.ark.spi.service.plugin.PluginManagerService.getPluginByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (plugin == null) { sb.append(java.lang.String.format(\"plugin %s not found\", commands[2])); }else { sb.append(getPrint(plugin)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6282/buggy-version/sofa-ark-parent.core-impl.container.src.main.java.com.alipay.sofa.ark.container.command.PluginCommandProvider.java", "BodyUseAPI": ["com.alipay.sofa.ark.container.command.PluginCommandProvider.getPrint(com.alipay.sofa.ark.spi.model.Plugin)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "374b17904c5271671d496b2e4e74aacddd223822", "Url": "https://api.github.com/repos/JoeKerouac/sofa-ark", "Date": "2018-07-25T09:59:01Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(data.getSwitchId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (switchId == null) { switchId = \"SW\" + (data.getSwitchId().replaceAll(\":\", \"\").toUpperCase()); switchNameCache.put(data.getSwitchId(), switchId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3300/buggy-version/services.wfm.src.main.java.org.openkilda.wfm.topology.stats.metrics.PortMetricGenBolt.java", "BodyUseAPI": [], "Fixed commit": "d3dd3efe1ead883a79a5961ea0f2acc7ddff82e1", "Url": "https://api.github.com/repos/jonvestal/open-kilda", "Date": "2018-02-06T08:22:42Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((alarmThread) != null) { alarmThread.interrupt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3411/buggy-version/AlarmClock.src.alarm.AlarmManager.java", "BodyUseAPI": [], "Fixed commit": "efe018ab651c510623e9c09f359d1b0dfabff0e8", "Url": "https://api.github.com/repos/Krzmbrzl/AlarmClock", "Date": "2018-07-28T16:29:44Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (folder != null) { f = new java.io.File((\"plugins/MaSuite/\" + folder)); }else { f = new java.io.File(\"plugins/MaSuite\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9740/buggy-version/src.main.java.fi.matiaspaavilainen.masuitecore.config.Configuration.java", "BodyUseAPI": [], "Fixed commit": "452b63cd490a57a41bd8d127bc299b4fe1b56bc7", "Url": "https://api.github.com/repos/masagameplay/MaSuiteCore", "Date": "2018-08-20T15:44:01Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (folder != null) { f = new java.io.File((\"plugins/MaSuite/\" + folder)); }else { f = new java.io.File(\"plugins/MaSuite\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9740/buggy-version/src.main.java.fi.matiaspaavilainen.masuitecore.config.Configuration.java", "BodyUseAPI": [], "Fixed commit": "452b63cd490a57a41bd8d127bc299b4fe1b56bc7", "Url": "https://api.github.com/repos/masagameplay/MaSuiteCore", "Date": "2018-08-20T15:44:01Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (outState != null) { outState.putBoolean(com.axel_stein.noteapp.notes.edit.EditNoteActivity.BUNDLE_FULLSCREEN, (!(com.axel_stein.noteapp.utils.ViewUtil.isShown(mToolbar)))); outState.putBoolean(com.axel_stein.noteapp.notes.edit.EditNoteActivity.BUNDLE_KEEP_SCREEN_ON, mKeepScreenOn); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2795/buggy-version/app.src.main.java.com.axel_stein.noteapp.notes.edit.EditNoteActivity.java", "BodyUseAPI": ["android.os.Bundle.putBoolean(java.lang.String,(!(com.axel_stein.noteapp.utils.ViewUtil.isShown(mToolbar))))", "android.os.Bundle.putBoolean(java.lang.String,boolean)"], "Fixed commit": "a9f94a99cb5989624c7132de93cf56846a92bbea", "Url": "https://api.github.com/repos/AxelStein/NoteApp", "Date": "2018-07-21T00:11:07Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState != null) { boolean fullscreen = savedInstanceState.getBoolean(com.axel_stein.noteapp.notes.edit.EditNoteActivity.BUNDLE_FULLSCREEN); com.axel_stein.noteapp.utils.ViewUtil.show((!fullscreen), mToolbar); mKeepScreenOn = savedInstanceState.getBoolean(com.axel_stein.noteapp.notes.edit.EditNoteActivity.BUNDLE_KEEP_SCREEN_ON); updateWindowFlagsKeepScreenOn(mKeepScreenOn); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2795/buggy-version/app.src.main.java.com.axel_stein.noteapp.notes.edit.EditNoteActivity.java", "BodyUseAPI": ["android.os.Bundle.getBoolean(java.lang.String)", "android.os.Bundle.getBoolean(java.lang.String)"], "Fixed commit": "a9f94a99cb5989624c7132de93cf56846a92bbea", "Url": "https://api.github.com/repos/AxelStein/NoteApp", "Date": "2018-07-21T00:11:07Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((profileImagePath) == null) { return \"pics/userIcon.png\"; }else { return profileImagePath; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6791/buggy-version/src.main.java.model.User.java", "BodyUseAPI": [], "Fixed commit": "e6a2d6170cd26cf290f478e9237947b3233461a6", "Url": "https://api.github.com/repos/JonathanKore/Basta_gruppen_LTD", "Date": "2018-10-21T20:48:23Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.rdf.rdf4j.experimental.RDF4JParser.getSourceInputStream()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (sourceInputStream.isPresent()) { loader.load(sourceInputStream.get(), base, formatByMimeType.orElse(null), rdfHandler); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2128/buggy-version/commons-rdf-rdf4j.src.main.java.org.apache.commons.rdf.rdf4j.experimental.RDF4JParser.java", "BodyUseAPI": ["org.eclipse.rdf4j.repository.util.RDFLoader.load(java.io.InputStream,java.lang.String,formatByMimeType.orElse(null),org.eclipse.rdf4j.rio.RDFHandler)", "java.util.Optional<java.io.InputStream>.get()"], "Fixed commit": "783b374f24992abcaedee37168dedd9b94c15e04", "Url": "https://api.github.com/repos/BME-MIT-IET/Csipet-Csapat-iet-2018", "Date": "2018-05-05T18:15:42Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (wrapped != null) { typeParameter.acceptHint(wrapped, source, getOrigin(), getExpectedVariance(), getActualVariance()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/313/buggy-version/org.eclipse.xtext.xbase.src.org.eclipse.xtext.xbase.typesystem.computation.AbstractClosureTypeHelper.java", "BodyUseAPI": ["org.eclipse.xtext.xbase.typesystem.references.UnboundTypeReference.acceptHint(org.eclipse.xtext.xbase.typesystem.references.LightweightTypeReference,org.eclipse.xtext.xbase.typesystem.util.BoundTypeArgumentSource,getOrigin(),getExpectedVariance(),getActualVariance())"], "Fixed commit": "85e8965dd69cf6869fde9240125be5f744a150c8", "Url": "https://api.github.com/repos/eclipse/xtext-extras", "Date": "2018-06-03T17:35:33Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.xtext.xbase.typesystem.util.DeferredTypeParameterHintCollector.getStricterConstraint(org.eclipse.xtext.xbase.typesystem.references.UnboundTypeReference,reference.getWrapperTypeIfPrimitive())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (wrapped != null) { typeParameter.acceptHint(wrapped, getTypeArgumentSource(), getOrigin(), getExpectedVariance(), getActualVariance()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/313/buggy-version/org.eclipse.xtext.xbase.src.org.eclipse.xtext.xbase.typesystem.util.DeferredTypeParameterHintCollector.java", "BodyUseAPI": ["org.eclipse.xtext.xbase.typesystem.references.UnboundTypeReference.acceptHint(org.eclipse.xtext.xbase.typesystem.references.LightweightTypeReference,org.eclipse.xtext.xbase.typesystem.util.BoundTypeArgumentSource,getOrigin(),getExpectedVariance(),getActualVariance())"], "Fixed commit": "85e8965dd69cf6869fde9240125be5f744a150c8", "Url": "https://api.github.com/repos/eclipse/xtext-extras", "Date": "2018-06-03T17:35:33Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(recursive[0])) { if (hint.isAssignableFrom(lightweightReference)) { hint = lightweightReference; }else if (((hint.isResolved()) && (!((lightweightReference.getType()) instanceof org.eclipse.xtext.common.types.JvmTypeParameter))) && (!(lightweightReference.isAssignableFrom(hint, TypeConformanceComputationArgument.RAW)))) { return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/313/buggy-version/org.eclipse.xtext.xbase.src.org.eclipse.xtext.xbase.typesystem.util.DeferredTypeParameterHintCollector.java", "BodyUseAPI": [], "Fixed commit": "85e8965dd69cf6869fde9240125be5f744a150c8", "Url": "https://api.github.com/repos/eclipse/xtext-extras", "Date": "2018-06-03T17:35:33Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((allObjects) == null) allObjects = new java.util.ArrayList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7851/buggy-version/app.src.main.java.com.example.kasutaja.andmeprojekt.CreateFragment.java", "BodyUseAPI": [], "Fixed commit": "0815a680118f3b30b7d02fd6333aa77894deeedc", "Url": "https://api.github.com/repos/Kmarten/Andmeprojekt2", "Date": "2018-01-10T17:23:39Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentBestLocation) != null) { android.util.Log.d(uk.co.appoly.arcorelocation.sensor.LocationManager.LOGTAG, \"dispatch latest currentBestLocation\"); locationUpdateListener.onLocationUpdate(currentBestLocation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2663/buggy-version/arcore-location.src.main.java.uk.co.appoly.arcorelocation.sensor.LocationManager.java", "BodyUseAPI": [], "Fixed commit": "e335e911ad55ed86cfcf5ad777c366fb082c531c", "Url": "https://api.github.com/repos/morhpeus87/ARCore-Location", "Date": "2018-09-28T14:41:43Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["kieker.common.configuration.Configuration.getStringArrayProperty(ConfigurationKeys.CONTAINER_MANAGEMENT_SINK,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((sinks.length) > 0) { final org.iobserve.analysis.InitializeDeploymentVisualization deploymentVisualization = new org.iobserve.analysis.InitializeDeploymentVisualization(this.containerManagementVisualizationBaseUrl, systemId, allocationModelProvider, systemModelProvider, resourceEnvironmentModelProvider); deploymentVisualization.initialize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4655/buggy-version/analysis.src.main.java.org.iobserve.analysis.AnalysisMain.java", "BodyUseAPI": [], "Fixed commit": "9ab0cfb0409cde42ca754b6072847f797c36c625", "Url": "https://api.github.com/repos/research-iobserve/iobserve-analysis", "Date": "2018-03-14T16:43:02Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.nav_forecast)) { item.setChecked(true); }else { item.setChecked(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4393/buggy-version/app.src.main.java.com.simpleweather.simpleweather.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "36175a6bba468729d80698f7ded8aa3272fe35a8", "Url": "https://api.github.com/repos/TianHongTao/SimpleWeather", "Date": "2018-07-25T04:32:40Z"},
{"Line": "=>749", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.dataTable(cmd.schemaName(),cmd.tableName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tbl == null) { idx.kernalContext().cache().createMissingQueryCaches(); tbl = idx.dataTable(cmd.schemaName(), cmd.tableName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4955/buggy-version/modules.indexing.src.main.java.org.apache.ignite.internal.processors.query.h2.DmlStatementsProcessor.java", "BodyUseAPI": [], "Fixed commit": "43ddca7ea1db9e4319e054fd0862678a9104ce8e", "Url": "https://api.github.com/repos/gridgain/apache-ignite", "Date": "2018-02-15T11:00:42Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6700/buggy-version/library.src.main.java.com.tylersuehr.androidmapper.ObjectMapper.java", "BodyUseAPI": [], "Fixed commit": "62cd09856913db4e414f4fee673374c0cdf013ed", "Url": "https://api.github.com/repos/tylersuehr7/android-object-mapper", "Date": "2018-04-13T16:49:10Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.common.config.Configuration.getCategory(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (category.isChild()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5879/buggy-version/src.main.java.net.minecraftforge.common.config.ConfigElement.java", "BodyUseAPI": [], "Fixed commit": "ff8ba90da3915c19048971ca453e13f25e201003", "Url": "https://api.github.com/repos/sokratis12GR/MinecraftForge", "Date": "2018-01-18T21:03:37Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nullsMatch()) { return new java.util.HashMap<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8459/buggy-version/src.main.java.ro.cucumber.core.matchers.Matcher.java", "BodyUseAPI": [], "Fixed commit": "cb8f4ecf13f8d04df2952973da9503ef269e1ec1", "Url": "https://api.github.com/repos/fslev/cucumber-core", "Date": "2018-07-19T19:41:51Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((expected) == null) && ((actual) == null)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8459/buggy-version/src.main.java.ro.cucumber.core.matchers.Matcher.java", "BodyUseAPI": [], "Fixed commit": "cb8f4ecf13f8d04df2952973da9503ef269e1ec1", "Url": "https://api.github.com/repos/fslev/cucumber-core", "Date": "2018-07-19T19:41:51Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (contents != null) { org.joda.time.format.DateTimeFormatter parser = org.joda.time.format.ISODateTimeFormat.dateTimeParser(); push.setPushedAt(parser.parseDateTime(getTimeStamp(contents)).toDate()); envs.put(EventTypeDescriptor.ENVIRONMENT_KEY, getType()); if (hasDigest()) { envs.put(org.jenkinsci.plugins.registry.notification.events.EventType.KEY_DOCKER_IMAGE_DIGEST, contents.getString(\"digest\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/218/buggy-version/src.main.java.org.jenkinsci.plugins.registry.notification.events.EventType.java", "BodyUseAPI": ["org.jenkinsci.plugins.registry.notification.webhook.PushNotification.setPushedAt(parser.parseDateTime(getTimeStamp(contents)).toDate())", "parser.parseDateTime(getTimeStamp(contents)).toDate()", "org.jenkinsci.plugins.registry.notification.events.EventType.getTimeStamp(net.sf.json.JSONObject)", "hudson.EnvVars.put(java.lang.String,contents.getString(\"digest\"))", "org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)", "net.sf.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "0e40af72e6433b3ca7163bdb03c0101e40e6ffff", "Url": "https://api.github.com/repos/ericsmalling/dockerhub-notification-plugin", "Date": "2018-01-09T20:46:24Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((src.getPriKey()) != null) && ((src.getPriKey().length) > 1)) { desc.setEcKey(io.nuls.core.crypto.ECKey.fromPrivate(new java.math.BigInteger(desc.getPriKey()))); }else { desc.setEcKey(io.nuls.core.crypto.ECKey.fromEncrypted(new io.nuls.core.crypto.EncryptedData(src.getEncryptedPriKey()), src.getPubKey())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7650/buggy-version/account.src.main.java.io.nuls.account.util.AccountTool.java", "BodyUseAPI": ["io.nuls.db.entity.AccountPo.getEncryptedPriKey()", "io.nuls.account.entity.Account.setEcKey(io.nuls.core.crypto.ECKey.fromEncrypted(new io.nuls.core.crypto.EncryptedData(src.getEncryptedPriKey()), src.getPubKey()))", "io.nuls.db.entity.AccountPo.getPubKey()", "io.nuls.core.crypto.ECKey.fromEncrypted(io.nuls.core.crypto.EncryptedData,src.getPubKey())"], "Fixed commit": "2ecd5d5e9ac764fc63d74da5afbc7aca72a76760", "Url": "https://api.github.com/repos/nuls-io/nuls", "Date": "2018-03-07T09:10:10Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(MultitenantConstants.SUPER_TENANT_DOMAIN_NAME.equalsIgnoreCase(tenantDomain))) { basePath = org.wso2.carbon.identity.mgt.endpoint.IdentityManagementServiceUtil.getInstance().getServiceContextURL().replace(IdentityManagementEndpointConstants.UserInfoRecovery.SERVICE_CONTEXT_URL_DOMAIN, ((\"t/\" + tenantDomain) + \"/api/identity/user/v0.9\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/527/buggy-version/components.identity-mgt.org.wso2.carbon.identity.mgt.endpoint.src.main.java.org.wso2.carbon.identity.mgt.endpoint.client.api.SelfRegisterApi.java", "BodyUseAPI": ["org.wso2.carbon.identity.mgt.endpoint.IdentityManagementServiceUtil.getInstance().getServiceContextURL().replace(IdentityManagementEndpointConstants.UserInfoRecovery.SERVICE_CONTEXT_URL_DOMAIN,java.lang.String)"], "Fixed commit": "4781b1859b49fb04d89b671e2ae02dfe05521099", "Url": "https://api.github.com/repos/mefarazath/identity-framework", "Date": "2018-01-10T14:04:06Z"},
{"Line": "=>520", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mDisplayOn.get()) { mVideoWindow.stop(); mDisplayOn.set(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5221/buggy-version/src.clearcontrol.gui.video.video2d.Stack2DDisplay.java", "BodyUseAPI": ["clearcontrol.core.variable.Variable<java.lang.Boolean>.set(boolean)"], "Fixed commit": "7ed1ef34d5db161bb31660530dd5d16be9fe2221", "Url": "https://api.github.com/repos/ClearControl/clearcontrol", "Date": "2018-07-11T07:36:00Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (myZipFile.startsWith(rootFolder)) myZipFile = myZipFile.replace(rootFolder, \"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5888/buggy-version/JavaCode.CTlib.src.main.java.cycronix.ctlib.CTcache.java", "BodyUseAPI": [], "Fixed commit": "750b6da43929f27f060bf086d13b781a4a7a5b1a", "Url": "https://api.github.com/repos/jpw-erigo/cloudturbine", "Date": "2018-04-03T17:18:08Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cycronix.ctlib.CTcache.TimeFolder.decodeUTF8(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (myZipFile == null) ctfile = cachedCTFile(((rootFolder) + myPath), null); else { if (myZipFile.startsWith(tmpdir)) ctfile = cachedCTFile(myPath, (myZipFile + \".zip\")); else ctfile = cachedCTFile(myPath, (((rootFolder) + myZipFile) + \".zip\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5888/buggy-version/JavaCode.CTlib.src.main.java.cycronix.ctlib.CTcache.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)", "cycronix.ctlib.CTcache.TimeFolder.cachedCTFile(java.lang.String,java.lang.String)", "cycronix.ctlib.CTcache.TimeFolder.cachedCTFile(java.lang.String,java.lang.String)"], "Fixed commit": "750b6da43929f27f060bf086d13b781a4a7a5b1a", "Url": "https://api.github.com/repos/jpw-erigo/cloudturbine", "Date": "2018-04-03T17:18:08Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_G)) { setUpMenu1(); }else if ((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_H)) { java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/658/buggy-version/HUD_GUI_Nightview.java", "BodyUseAPI": ["java.awt.event.KeyEvent.getKeyCode()"], "Fixed commit": "3f53a01d51350e83fa7d97017ba2c8ae6cad4902", "Url": "https://api.github.com/repos/lisalaux/HCI_Project", "Date": "2018-03-04T18:49:28Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_G)) { setUpMenu1(); }else if ((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_H)) { logger.writeSummary(counterRightArrow, counterLeftArrow, counterUpArrow, counterDownArrow, counterQ, counterA); logger.closeFileHandler(); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/658/buggy-version/HUD_GUI.java", "BodyUseAPI": ["java.awt.event.KeyEvent.getKeyCode()"], "Fixed commit": "3f53a01d51350e83fa7d97017ba2c8ae6cad4902", "Url": "https://api.github.com/repos/lisalaux/HCI_Project", "Date": "2018-03-04T18:49:28Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.ImageButton.getWidth()", "android.widget.ImageButton.getHeight()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((bugHeight == 0) && (bugWidth == 0)) { x = ((int) ((java.lang.Math.random()) * ((screenWidth) * 0.8))); y = ((int) ((java.lang.Math.random()) * ((screenHeight) * 0.8))); }else { x = ((int) ((java.lang.Math.random()) * ((screenWidth) - bugWidth))); y = ((int) ((java.lang.Math.random()) * ((screenHeight) - bugHeight))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9026/buggy-version/app.src.main.java.com.sma2.sma2.ExerciseFragments.ExOneFingerTapping.java", "BodyUseAPI": [], "Fixed commit": "01976088d447888b58b3b5646f84c8943e54c85c", "Url": "https://api.github.com/repos/jcvasquezc/SMA2", "Date": "2018-10-13T19:29:02Z"},
{"Line": "=>4592", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newVarName == null) && (variableMap.containsKey(varToUpdate.getVarName()))) { newVarName = generateNewVarName(varToUpdate.getVarName(), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9298/buggy-version/nd4j-backends.nd4j-api-parent.nd4j-api.src.main.java.org.nd4j.autodiff.samediff.SameDiff.java", "BodyUseAPI": ["org.nd4j.autodiff.samediff.SDVariable.getVarName()", "org.nd4j.autodiff.samediff.SameDiff.generateNewVarName(varToUpdate.getVarName(),int)"], "Fixed commit": "416e63291640d3ae2375d947eb25d17c1fb6db2d", "Url": "https://api.github.com/repos/deeplearning4j/nd4j", "Date": "2018-01-18T04:56:53Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isActive)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/775/buggy-version/src.engine.network.client.ClientTutorial.java", "BodyUseAPI": [], "Fixed commit": "a7e1b29ef291f75f34a13ded88bcd49a2b890dc5", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2018-07-06T13:16:09Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isActive)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/775/buggy-version/src.engine.network.client.ClientTutorial.java", "BodyUseAPI": [], "Fixed commit": "a7e1b29ef291f75f34a13ded88bcd49a2b890dc5", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2018-07-06T13:16:09Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sanousun.com.guide_view.GuideBuilder.create()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (guideView == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4745/buggy-version/guide_view.src.main.java.sanousun.com.guide_view.GuideBuilder.java", "BodyUseAPI": [], "Fixed commit": "35e083697008f8fc6f675303c12b4e77482dddbc", "Url": "https://api.github.com/repos/sanousun/GuideView", "Date": "2018-03-23T06:20:52Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9406/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "4100afd1227d17cdcee6e3412e0ae3f6bd59b1b0", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((word.length()) == 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4261/buggy-version/src.main.java.com.devx.Automaton.java", "BodyUseAPI": [], "Fixed commit": "021fe08368cce8dd4c03a575b4b23e9d16b5e380", "Url": "https://api.github.com/repos/KoisX/AutomatonProject", "Date": "2018-09-23T07:57:52Z"},
{"Line": "=>740", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mes.split(\" \").length) > 1) s_word = mes.split(\" \")[1];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/991/buggy-version/src.main.java.KMChat.KMChat.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "255a7faa5c222336cf846cf623abdca0ffef80c4", "Url": "https://api.github.com/repos/nekonungstvo/KMChat", "Date": "2018-04-11T15:09:10Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (spielrNr == (-1)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5991/buggy-version/source.de.petanqueturniermanager.meldeliste.MeldeListeSheet.java", "BodyUseAPI": [], "Fixed commit": "753f06ec786f847eca71b420b27458d1e0e832e6", "Url": "https://api.github.com/repos/michaelmassee/Petanque-Turnier-Manager", "Date": "2018-04-18T21:02:05Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.espmobile.esp_mobile.locations.AddLocationActivity.getSystemService(Context.LOCATION_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (locationManager != null) { android.location.Location location = locationManager.getLastKnownLocation(locationManager.getBestProvider(criteria, false)); if (location != null) { double latitude = location.getLatitude(); double longitude = location.getLongitude(); com.google.android.gms.maps.model.LatLng latLng = new com.google.android.gms.maps.model.LatLng(latitude, longitude); com.google.android.gms.maps.model.MarkerOptions markerOptions = new com.google.android.gms.maps.model.MarkerOptions(); markerOptions.position(latLng); markerOptions.title(\"Current Position\"); mGoogleMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(latLng, 11)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6905/buggy-version/app.src.main.java.org.espmobile.esp_mobile.locations.AddLocationActivity.java", "BodyUseAPI": ["android.location.LocationManager.getBestProvider(android.location.Criteria,boolean)", "android.location.LocationManager.getLastKnownLocation(locationManager.getBestProvider(criteria, false))"], "Fixed commit": "a41e36ef67ff31ac5edf2fbf55a85ac43acda97b", "Url": "https://api.github.com/repos/justinshapiro/esp-android", "Date": "2018-05-05T19:33:57Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.sciesla.server.Server.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (server.isConnectionLimitReached()) { server.removeConnection(sender.getConnection(), \"Kick: The Server is full!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1995/buggy-version/src.de.sciesla.datapackage.AuthentificationPackage.java", "BodyUseAPI": ["de.sciesla.server.Server.removeConnection(sender.getConnection(),java.lang.String)"], "Fixed commit": "3d7f09d4f150d407eb906f297e043d426ccfe739", "Url": "https://api.github.com/repos/Tryken/SimpleServerClient", "Date": "2018-02-26T08:46:57Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (connection.isAuthentificated()) connection.sendDataPackage(datapackage);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1995/buggy-version/src.de.sciesla.server.Server.java", "BodyUseAPI": ["de.sciesla.server.connection.Connection.sendDataPackage(de.sciesla.datapackage.DataPackage)"], "Fixed commit": "3d7f09d4f150d407eb906f297e043d426ccfe739", "Url": "https://api.github.com/repos/Tryken/SimpleServerClient", "Date": "2018-02-26T08:46:57Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((piwikTracker) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2878/buggy-version/OpenKeychain.src.main.java.org.sufficientlysecure.keychain.analytics.AnalyticsManager.java", "BodyUseAPI": [], "Fixed commit": "5b0d9d927cfc8152890a7e3e37944d22a15f7924", "Url": "https://api.github.com/repos/open-keychain/open-keychain", "Date": "2018-07-17T18:18:36Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (src == null) { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7691/buggy-version/latinQuizerWeb.src.main.java.net.viperfish.latinQuiz.quizers.VerbQuizerService.java", "BodyUseAPI": [], "Fixed commit": "cb489aca741ea65658dde93dae586381293ad42b", "Url": "https://api.github.com/repos/shilongdai/latinQuizerWeb", "Date": "2018-01-15T04:56:08Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (something.contains(\"-\")) { firstpart = \"-\"; something = something.substring(1, something.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4476/buggy-version/app.src.main.java.zz.interactivecalculatorstage2.maths.Calculation.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "1b2f30ba885dba33f1bbf0eb96fdf688f9484a45", "Url": "https://api.github.com/repos/ankit-learns/interactive-calculator-stage2", "Date": "2018-02-12T17:15:49Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((iMyInter) != null) iMyInter.unregisterCallback(myCallback);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1369/buggy-version/app.src.main.java.com.gdd.learn.views.fragments.ShowAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "c41d9f53fe3dadcc32bb8a82cd6aac86ba9d33a1", "Url": "https://api.github.com/repos/gongdongdong/Checking", "Date": "2018-07-09T17:13:10Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((iMyInter) != null) getContext().unbindService(conn);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1369/buggy-version/app.src.main.java.com.gdd.learn.views.fragments.ShowAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "c41d9f53fe3dadcc32bb8a82cd6aac86ba9d33a1", "Url": "https://api.github.com/repos/gongdongdong/Checking", "Date": "2018-07-09T17:13:10Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((exoPlayer) != null) { exoPlayer.stop(); exoPlayer.release(); exoPlayer = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8199/buggy-version/app.src.main.java.io.github.slupik.bakingapp.view.details.StepFragment.java", "BodyUseAPI": [], "Fixed commit": "9e96af7ac5c3c459fdb80c9def540498a816a625", "Url": "https://api.github.com/repos/Slupik/BakingApp", "Date": "2018-07-14T09:34:18Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((lastVideoURL) == null) || ((lastVideoURL.length()) == 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8199/buggy-version/app.src.main.java.io.github.slupik.bakingapp.view.details.StepFragment.java", "BodyUseAPI": [], "Fixed commit": "9e96af7ac5c3c459fdb80c9def540498a816a625", "Url": "https://api.github.com/repos/Slupik/BakingApp", "Date": "2018-07-14T09:34:18Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(message.startsWith(org.eclipselabs.plugindependencies.core.Logging.PREFIX_ERROR))) { err.print(org.eclipselabs.plugindependencies.core.Logging.PREFIX_ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6352/buggy-version/org.eclipselabs.plugindependencies.core.src.org.eclipselabs.plugindependencies.core.Logging.java", "BodyUseAPI": ["java.io.PrintStream.print(java.lang.String)"], "Fixed commit": "7ce5dcb40b2bc81a77b1b827c6616b05b1bf38ba", "Url": "https://api.github.com/repos/iloveeclipse/plugindependencies", "Date": "2018-08-14T14:11:08Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (profileCB.isChecked()) saveDataFromDetails(profileDetails); else android.widget.Toast.makeText(this, \"Please read the terms of use and agree with them.\", Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1398/buggy-version/app.src.main.java.com.example.moti.Activities.ProfileActivity.java", "BodyUseAPI": [], "Fixed commit": "cc7ca962e09f6d6d715fe69aaa200928d5181d3f", "Url": "https://api.github.com/repos/oriisking/MOTI", "Date": "2018-05-06T09:52:08Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cyclops.integrateddynamics.core.helper.NetworkHelpers.getNetwork(getTarget().getCenter().getPos().getWorld(),getTarget().getCenter().getPos().getBlockPos(),getTarget().getCenter().getSide())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (network != null) { network.getEventBus().post(new org.cyclops.integrateddynamics.core.network.event.VariableContentsUpdatedEvent(network)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9659/buggy-version/src.main.java.org.cyclops.integrateddynamics.core.inventory.container.ContainerAspectSettings.java", "BodyUseAPI": ["network.getEventBus().post(org.cyclops.integrateddynamics.core.network.event.VariableContentsUpdatedEvent)", "org.cyclops.integrateddynamics.api.network.INetwork.getEventBus()"], "Fixed commit": "2df8fc9cf602a49312f4832fd678ead342fb631a", "Url": "https://api.github.com/repos/CyclopsMC/IntegratedDynamics", "Date": "2018-02-07T11:50:50Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (analysisName.equals(experiment.getName())) { service.exportBMDExpressAnalysisDataSet(experiment, new java.io.File(outputFile)); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8261/buggy-version/src.com.sciome.bmdexpress2.commandline.ExportRunner.java", "BodyUseAPI": ["com.sciome.bmdexpress2.service.ProjectNavigationService.exportBMDExpressAnalysisDataSet(com.sciome.bmdexpress2.mvp.model.category.CategoryAnalysisResults,java.io.File)"], "Fixed commit": "a9e527b42c3834706913c451e665cc6199b50ea0", "Url": "https://api.github.com/repos/auerbachs/BMDExpress-2", "Date": "2018-09-14T13:46:30Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (analysisName.equals(experiment.getName())) { service.exportBMDExpressAnalysisDataSet(experiment, new java.io.File(outputFile)); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8261/buggy-version/src.com.sciome.bmdexpress2.commandline.ExportRunner.java", "BodyUseAPI": ["com.sciome.bmdexpress2.service.ProjectNavigationService.exportBMDExpressAnalysisDataSet(com.sciome.bmdexpress2.mvp.model.prefilter.OriogenResults,java.io.File)"], "Fixed commit": "a9e527b42c3834706913c451e665cc6199b50ea0", "Url": "https://api.github.com/repos/auerbachs/BMDExpress-2", "Date": "2018-09-14T13:46:30Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (analysisName.equals(experiment.getName())) { service.exportBMDExpressAnalysisDataSet(experiment, new java.io.File(outputFile)); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8261/buggy-version/src.com.sciome.bmdexpress2.commandline.ExportRunner.java", "BodyUseAPI": ["com.sciome.bmdexpress2.service.ProjectNavigationService.exportBMDExpressAnalysisDataSet(com.sciome.bmdexpress2.mvp.model.prefilter.OneWayANOVAResults,java.io.File)"], "Fixed commit": "a9e527b42c3834706913c451e665cc6199b50ea0", "Url": "https://api.github.com/repos/auerbachs/BMDExpress-2", "Date": "2018-09-14T13:46:30Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (analysisName.equals(experiment.getName())) { service.exportBMDExpressAnalysisDataSet(experiment, new java.io.File(outputFile)); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8261/buggy-version/src.com.sciome.bmdexpress2.commandline.ExportRunner.java", "BodyUseAPI": ["com.sciome.bmdexpress2.service.ProjectNavigationService.exportBMDExpressAnalysisDataSet(com.sciome.bmdexpress2.mvp.model.prefilter.WilliamsTrendResults,java.io.File)"], "Fixed commit": "a9e527b42c3834706913c451e665cc6199b50ea0", "Url": "https://api.github.com/repos/auerbachs/BMDExpress-2", "Date": "2018-09-14T13:46:30Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (analysisName.equals(experiment.getName())) { service.exportBMDExpressAnalysisDataSet(experiment, new java.io.File(outputFile)); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8261/buggy-version/src.com.sciome.bmdexpress2.commandline.ExportRunner.java", "BodyUseAPI": ["com.sciome.bmdexpress2.service.ProjectNavigationService.exportBMDExpressAnalysisDataSet(com.sciome.bmdexpress2.mvp.model.stat.BMDResult,java.io.File)"], "Fixed commit": "a9e527b42c3834706913c451e665cc6199b50ea0", "Url": "https://api.github.com/repos/auerbachs/BMDExpress-2", "Date": "2018-09-14T13:46:30Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["help.mercy.mvc.account.AccountController.getObject(((((mercyAPIURL) + (URI_USERS)) + \"/\") + (user.getPseudo())))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (userjson.has(\"error\")) { model.addAttribute(\"error\", \"Username or Password incorrect\"); model.addAttribute(\"user\", new help.mercy.mvc.user.User()); return \"login\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2253/buggy-version/mvc.src.main.java.help.mercy.mvc.account.AccountController.java", "BodyUseAPI": [], "Fixed commit": "053cf1c0e1e813ff4f27a0bce07be4caca71a997", "Url": "https://api.github.com/repos/Arthessia/mercy", "Date": "2018-09-19T18:29:26Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.microsoft.identity.common.adal.internal.util.StringExtensions.isNullOrBlank(string))) { final com.google.gson.JsonObject incomingJson = new com.google.gson.JsonParser().parse(string).getAsJsonObject(); final java.util.Set<java.lang.String> expectedFields = com.microsoft.identity.common.internal.cache.AccountCredentialCacheKeyValueDelegate.getExpectedJsonFields(t); for (final java.lang.String expectedField : expectedFields) { incomingJson.remove(expectedField); } final java.util.Map<java.lang.String, com.google.gson.JsonElement> additionalFields = new java.util.HashMap<>(); for (final java.lang.String key : incomingJson.keySet()) { additionalFields.put(key, incomingJson.get(key)); } resultObject.setAdditionalFields(additionalFields); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6573/buggy-version/common.src.main.java.com.microsoft.identity.common.internal.cache.AccountCredentialCacheKeyValueDelegate.java", "BodyUseAPI": ["com.google.gson.JsonParser.parse(java.lang.String)", "new com.google.gson.JsonParser().parse(string).getAsJsonObject()"], "Fixed commit": "c07c8242e536f6da7ec451dec538ea28d95e6d1d", "Url": "https://api.github.com/repos/AzureAD/microsoft-authentication-library-common-for-android", "Date": "2018-03-28T21:05:44Z"},
{"Line": "=>601", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.selectedBody.getUnlocalizedName().contains(\"overworld\")) breathable = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6423/buggy-version/src.main.java.com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection.java", "BodyUseAPI": [], "Fixed commit": "e68e4504744906d3123c86dafe4dbf3fe7d8b7e7", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-01-03T16:38:33Z"},
{"Line": "=>599", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((temp != null) && (!((this.selectedBody) instanceof micdoodle8.mods.galacticraft.api.galaxies.Satellite))) breathable = ((micdoodle8.mods.galacticraft.api.prefab.world.gen.WorldProviderSpace) (temp)).hasBreathableAtmosphere();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6423/buggy-version/src.main.java.com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection.java", "BodyUseAPI": [], "Fixed commit": "e68e4504744906d3123c86dafe4dbf3fe7d8b7e7", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-01-03T16:38:33Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (am != null) { com.gmail.berndivader.mythicmobsext.events.MythicMobsExtItemDropEvent e = new com.gmail.berndivader.mythicmobsext.events.MythicMobsExtItemDropEvent(am, trigger, drops); org.bukkit.Bukkit.getServer().getPluginManager().callEvent(e); if (e.isCancelled()) return false; drops = e.getDrops(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/965/buggy-version/src.main.java.com.gmail.berndivader.mythicmobsext.mechanics.DropMythicItemMechanic.java", "BodyUseAPI": [], "Fixed commit": "4fb5b0fc662844f86c62df96cbd0d377389182d8", "Url": "https://api.github.com/repos/BerndiVader/MythicMobsExtension", "Date": "2018-05-10T13:50:38Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["PlayerInteractEvent.RightClickItem.getItemStack()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((book.getItem()) != (net.minecraft.init.Items.WRITABLE_BOOK)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6593/buggy-version/TypeEx.src.main.java.net.icelane.typeex.event.ItemEvents.java", "BodyUseAPI": [], "Fixed commit": "ef966382e02c060a4f7279ca35367d368944b572", "Url": "https://api.github.com/repos/MrX13415/TypeEx", "Date": "2018-08-22T15:44:07Z"},
{"Line": "=>608", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.ioTHubConnectionType) == (com.microsoft.azure.sdk.iot.device.transport.amqps.IoTHubConnectionType.USE_TRANSPORTCLIENT)) { if ((this.transportClient.getTransportClientState()) == (TransportClient.TransportClientState.OPENED)) { throw new java.lang.IllegalStateException(((\"setOption \" + (SET_CERTIFICATE_PATH)) + \" only works when the transport is closed\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7738/buggy-version/device.iot-device-client.src.main.java.com.microsoft.azure.sdk.iot.device.DeviceClient.java", "BodyUseAPI": [], "Fixed commit": "4e6ea970df10204bfc54f51ec3107f450fcdadf2", "Url": "https://api.github.com/repos/Azure/azure-iot-sdk-java", "Date": "2018-09-25T21:41:37Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((((tv_address.getText().toString().trim().equals(placeName)) && (et_detailedAddress.getText().toString().trim().equals(detailedAddress))) && (et_deliveryCustomer.getText().toString().trim().equals(deliveryCustomer))) && (et_shipper.getText().toString().trim().equals(shipper))) && (et_phone.getText().toString().trim().equals(phone))) && (et_eixedTelephone.getText().toString().trim().equals(eixedTelephone))) { aty.finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8870/buggy-version/ZWBH-Android.app.src.main.java.com.ruitukeji.zwbh.mine.addressmanagement.newaddaddress.NewAddAddress1Activity.java", "BodyUseAPI": [], "Fixed commit": "cd0c2c9b7208030285a0f3a4d7d850d30ce7ef1e", "Url": "https://api.github.com/repos/921668753/wztx-shipper-android", "Date": "2018-01-03T10:33:30Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((((tv_address.getText().toString().trim().equals(placeName)) && (et_detailedAddress.getText().toString().trim().equals(detailedAddress))) && (et_deliveryCustomer.getText().toString().trim().equals(deliveryCustomer))) && (et_shipper.getText().toString().trim().equals(shipper))) && (et_phone.getText().toString().trim().equals(phone))) && (et_eixedTelephone.getText().toString().trim().equals(eixedTelephone))) { aty.finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8870/buggy-version/ZWBH-Android.app.src.main.java.com.ruitukeji.zwbh.main.selectaddress.ProvenanceActivity.java", "BodyUseAPI": [], "Fixed commit": "cd0c2c9b7208030285a0f3a4d7d850d30ce7ef1e", "Url": "https://api.github.com/repos/921668753/wztx-shipper-android", "Date": "2018-01-03T10:33:30Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (logFile.exists()) { java.nio.file.Files.delete(logFile.toPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6053/buggy-version/src.main.java.com.github.wasiqb.coteafs.appium.service.AppiumServer.java", "BodyUseAPI": ["java.nio.file.Files.delete(java.nio.file.Path)", "java.io.File.toPath()"], "Fixed commit": "1680e1cc8323e397ec587dd90f9ba90a43bd23a5", "Url": "https://api.github.com/repos/WasiqB/coteafs-appium", "Date": "2017-10-31T16:57:58Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (content == null) break; else if (isNullOrWhiteSpace(content)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7561/buggy-version/MBGParser.src.cn.s3bit.mbgparser.MBGData.java", "BodyUseAPI": ["cn.s3bit.mbgparser.MBGData.isNullOrWhiteSpace(java.lang.String)"], "Fixed commit": "33a40b136f9ad6e6e43312a5fd5d71c9b469f130", "Url": "https://api.github.com/repos/cn-s3bit/TH902", "Date": "2018-02-13T03:35:39Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((choiceBox.getSelectionModel().getSelectedItem().equals(\"Standard\")) || (choiceBox.getSelectionModel().getSelectedItem().equals(\"Animation\"))) if (!(videoCapture.isOpened())) { videoCapture.open(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3908/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "97a169a27faf2e223c888b253e9530fb0dab249d", "Url": "https://api.github.com/repos/AndrewHaworth/PeppersGhostPyramid-J", "Date": "2018-05-04T07:43:39Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((o1.getTotalDistance()) - (o2.getTotalDistance())) != 0) { return (o1.getTotalDistance()) - (o2.getTotalDistance()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3079/buggy-version/src.Geometry.NodeComparator.java", "BodyUseAPI": ["Geometry.Node.getTotalDistance()", "Geometry.Node.getTotalDistance()"], "Fixed commit": "e5e14112dd03cee70ed346043945abfc5184a2c4", "Url": "https://api.github.com/repos/EsbenNedergaard/P2", "Date": "2018-04-04T12:22:58Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((o1.getX()) - (o2.getX())) != 0) { return (o1.getX()) - (o2.getX()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3079/buggy-version/src.Geometry.NodeComparator.java", "BodyUseAPI": ["Geometry.Node.getX()", "Geometry.Node.getX()"], "Fixed commit": "e5e14112dd03cee70ed346043945abfc5184a2c4", "Url": "https://api.github.com/repos/EsbenNedergaard/P2", "Date": "2018-04-04T12:22:58Z"},
{"Line": "=>734", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((curFragmentCount) <= 0) { menu.setVisibility(View.VISIBLE); back.setVisibility(View.GONE); }else { menu.setVisibility(View.GONE); back.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7377/buggy-version/app.src.main.java.com.linka.lockapp.aos.AppMainActivity.java", "BodyUseAPI": [], "Fixed commit": "6adb5c447e1bf48ace9c41a72b15f47907774a48", "Url": "https://api.github.com/repos/gkurghinyan/LINKA-android-app", "Date": "2018-07-18T11:47:26Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((row < 0) || (col < 0)) || (row >= (iRows))) || (col >= (iCols))) throw new java.lang.IllegalArgumentException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9848/buggy-version/fr.lip6.move.gal.structural.src.fr.lip6.move.gal.util.MatrixCol.java", "BodyUseAPI": [], "Fixed commit": "9910e059647c13f637d8284356799cdc04463343", "Url": "https://api.github.com/repos/lip6/ITSTools", "Date": "2018-03-17T17:41:28Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.scene.image.Image.getWidth()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((width % (xPixles)) != 0) { xCut = ((int) (width / (xPixles))) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5470/buggy-version/src.SplitImage.java", "BodyUseAPI": [], "Fixed commit": "ee8522cf3f569b92e75fd4a0c9ca07f8f0741bdc", "Url": "https://api.github.com/repos/macmanmatty/png-split", "Date": "2018-08-24T17:28:26Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.scene.image.Image.getHeight()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((height % (yPixles)) != 0) { yCut = ((int) (height / (yPixles))) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5470/buggy-version/src.SplitImage.java", "BodyUseAPI": [], "Fixed commit": "ee8522cf3f569b92e75fd4a0c9ca07f8f0741bdc", "Url": "https://api.github.com/repos/macmanmatty/png-split", "Date": "2018-08-24T17:28:26Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9548/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "1b8b9e819e955150661ad2a7cfb033e1ae7c3167", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.fr3fou.Directory.getPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentPath.matches(\"^\\\\/[\\\\w]+\\\\/$\")) { this.currentDir = this.root; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5367/buggy-version/03-java-oop.homework.src.me.fr3fou.FileSystem.java", "BodyUseAPI": [], "Fixed commit": "48c8ae10792895cb1a9fae42fefc001acb9e9d78", "Url": "https://api.github.com/repos/fr3fou/geeky-camp-5.0", "Date": "2018-09-05T00:04:21Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (packageID.version.value.equals(Names.DEFAULT_VERSION.getValue())) { packageID.version.value = pathList.get(0).toFile().getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5497/buggy-version/compiler.ballerina-lang.src.main.java.org.wso2.ballerinalang.compiler.packaging.converters.PathConverter.java", "BodyUseAPI": [], "Fixed commit": "0fbceb5a9a95c029250e2f83f402d0689ab587c4", "Url": "https://api.github.com/repos/ballerina-platform/ballerina-lang", "Date": "2018-06-06T13:07:16Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tokenRequest.isMerchantToken()) { intPaymentTokenDelete.setTokenScope(\"merchant\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9529/buggy-version/hybris.bin.y-ext.ext-worldpay.worldpayapi.src.com.worldpay.service.model.token.DeleteTokenRequest.java", "BodyUseAPI": [], "Fixed commit": "aec23867ff9d9ad3179acab28c75948cdc4f22df", "Url": "https://api.github.com/repos/e2y/worldpay-hybris", "Date": "2018-07-03T11:52:28Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (postalAddresses != null) { for (java.util.HashMap postalAddress : postalAddresses) { contact.postalAddresses.add(flutter.plugins.contactsservice.contactsservice.PostalAddress.fromMap(postalAddress)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2232/buggy-version/android.src.main.java.flutter.plugins.contactsservice.contactsservice.Contact.java", "BodyUseAPI": [], "Fixed commit": "e1f586a6160ba2947ca6696e7dceb1d3a6e280e6", "Url": "https://api.github.com/repos/clovisnicolas/flutter_contacts", "Date": "2018-01-30T19:05:10Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (phones != null) { for (java.util.HashMap phone : phones) { contact.emails.add(flutter.plugins.contactsservice.contactsservice.Item.fromMap(phone)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2232/buggy-version/android.src.main.java.flutter.plugins.contactsservice.contactsservice.Contact.java", "BodyUseAPI": [], "Fixed commit": "e1f586a6160ba2947ca6696e7dceb1d3a6e280e6", "Url": "https://api.github.com/repos/clovisnicolas/flutter_contacts", "Date": "2018-01-30T19:05:10Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (emails != null) { for (java.util.HashMap email : emails) { contact.emails.add(flutter.plugins.contactsservice.contactsservice.Item.fromMap(email)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2232/buggy-version/android.src.main.java.flutter.plugins.contactsservice.contactsservice.Contact.java", "BodyUseAPI": [], "Fixed commit": "e1f586a6160ba2947ca6696e7dceb1d3a6e280e6", "Url": "https://api.github.com/repos/clovisnicolas/flutter_contacts", "Date": "2018-01-30T19:05:10Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.x.logic.salon.app.sso.client.ServiceController.login(com.x.logic.salon.app.reqresp.LoginRequest,javax.servlet.http.HttpServletResponse,com.x.logic.salon.app.reqresp.LoginResponse)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((responseEntity.getBody().getMessage().getErrorMessage()) == null) { setResponseCookie(responseEntity.getHeaders(), response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3261/buggy-version/src.main.java.com.x.logic.salon.app.service.AuthService.java", "BodyUseAPI": ["org.springframework.http.ResponseEntity<com.x.logic.salon.app.reqresp.LoginResponse>.getHeaders()", "com.x.logic.salon.app.service.AuthService.setResponseCookie(responseEntity.getHeaders(),javax.servlet.http.HttpServletResponse)"], "Fixed commit": "11fa00635a9c5c9a9177bd980be392f571627af4", "Url": "https://api.github.com/repos/karivamsikrishna/logicsalon-app", "Date": "2018-08-24T20:52:04Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.secuso.privacyfriendlynetmonitor.ConnectionAnalysis.Collector.getKnownUIDs().containsKey(uidList.get(groupPosition))) { appName = org.secuso.privacyfriendlynetmonitor.ConnectionAnalysis.Collector.getKnownUIDs().get(uidList.get(groupPosition)); }else { appName = packageManager.getNameForUid(new java.lang.Integer(uidList.get(groupPosition))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7455/buggy-version/app.src.main.java.org.secuso.privacyfriendlynetmonitor.Activities.ExpandableHistoryListAdapter.java", "BodyUseAPI": ["android.content.pm.PackageManager.getNameForUid(java.lang.Integer)", "java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.get(int)", "org.secuso.privacyfriendlynetmonitor.ConnectionAnalysis.Collector.getKnownUIDs().get(java.lang.String)"], "Fixed commit": "f343d634aaac032a03e1c4a9ec9583bf8a12fde9", "Url": "https://api.github.com/repos/SecUSo/privacy-friendly-netmonitor", "Date": "2018-01-04T18:13:27Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.secuso.privacyfriendlynetmonitor.ConnectionAnalysis.Collector.getKnownUIDs().containsKey(uid))) { org.secuso.privacyfriendlynetmonitor.ConnectionAnalysis.Collector.addKnownUIDs(new java.lang.String().valueOf(uid), appName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7455/buggy-version/app.src.main.java.org.secuso.privacyfriendlynetmonitor.Activities.HistoryActivity.java", "BodyUseAPI": ["org.secuso.privacyfriendlynetmonitor.ConnectionAnalysis.Collector.addKnownUIDs(java.lang.String,java.lang.String)", "java.lang.String.valueOf(int)"], "Fixed commit": "f343d634aaac032a03e1c4a9ec9583bf8a12fde9", "Url": "https://api.github.com/repos/SecUSo/privacy-friendly-netmonitor", "Date": "2018-01-04T18:13:27Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.ibm.ws.runtime.update.internal.RuntimeUpdateManagerImpl.tc.isDebugEnabled()) com.ibm.websphere.ras.Tr.debug(com.ibm.ws.runtime.update.internal.RuntimeUpdateManagerImpl.tc, \"About to begin quiesce of executor service threads.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3384/buggy-version/dev.com.ibm.ws.runtime.update.src.com.ibm.ws.runtime.update.internal.RuntimeUpdateManagerImpl.java", "BodyUseAPI": ["com.ibm.websphere.ras.Tr.debug(com.ibm.websphere.ras.TraceComponent,java.lang.String)"], "Fixed commit": "0c81627d88587650f823a4d90290d28eca98694f", "Url": "https://api.github.com/repos/MikeEdgar/open-liberty", "Date": "2018-10-25T02:45:50Z"},
{"Line": "=>961", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (config.getDailyEmails()) { BackEnd.email.send(); BackEnd.database.clear.LogsDB(); BackEnd.email.PDF.CreateBlankPDF(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6504/buggy-version/src.mainProgram.FrontEnd.java", "BodyUseAPI": [], "Fixed commit": "feb433c4d3b907213d1ce1672a30504fd8073a00", "Url": "https://api.github.com/repos/garytou2/Restroom-Logs", "Date": "2018-03-21T04:46:29Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (date == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6740/buggy-version/src.main.java.com.modelink.common.utils.DateUtils.java", "BodyUseAPI": [], "Fixed commit": "a000a4207c541b86ed775457599ed9d25bf1c3c1", "Url": "https://api.github.com/repos/modelink/modelink-api", "Date": "2018-07-07T02:36:38Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(called)) call.run();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5745/buggy-version/src.io.anuke.ucore.scene.actions.CallAction.java", "BodyUseAPI": [], "Fixed commit": "a3533da5fb41f7834080c2236ebcfe71ed8c63ee", "Url": "https://api.github.com/repos/Anuken/uCore", "Date": "2018-04-01T20:17:21Z"},
{"Line": "=>674", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pathA.startsWith(java.io.File.separator)) || (pathB.startsWith(java.io.File.separator))) { result = '/' + result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1422/buggy-version/threadfix-ham.src.main.java.com.denimgroup.threadfix.framework.impl.jsp.JSPEndpointGenerator.java", "BodyUseAPI": [], "Fixed commit": "a8d9a6e1016c1e5cc75673ce7719a1322016645a", "Url": "https://api.github.com/repos/secdec/astam-correlator", "Date": "2018-09-27T17:46:59Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isDirectory())) { throw new java.lang.UnsupportedOperationException(\"This is a file!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2721/buggy-version/libaums.src.main.java.com.github.mjdev.libaums.fs.AbstractUsbFile.java", "BodyUseAPI": [], "Fixed commit": "2c1a012792320f3f62413db1b9acd0160e5ea951", "Url": "https://api.github.com/repos/magnusja/libaums", "Date": "2018-08-14T20:19:26Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getMvpView()) != null) { if (getMvpView().isPlayServicesAvailable()) getMvpView().goMapActivity(listItem); else getMvpView().showDialog(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2364/buggy-version/app.src.main.java.com.imran.weatherapp.weatherapp.ui.main.MainPresenter.java", "BodyUseAPI": [], "Fixed commit": "a443cb19831abc53959b674b4f3f4fcf1aedc6be", "Url": "https://api.github.com/repos/imran-cse11/WeatherApp", "Date": "2018-05-28T12:13:06Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ee.hm.dop.utils.UserUtil.isAdminOrModerator(loggedInUser)) { return materialDao.findById(materialId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1567/buggy-version/back-end.src.main.java.ee.hm.dop.service.content.MaterialGetter.java", "BodyUseAPI": [], "Fixed commit": "832f477a810453c25b924ba9e5f2411dedda8323", "Url": "https://api.github.com/repos/hariduspilv/koolikott", "Date": "2018-03-06T10:59:29Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ee.hm.dop.dao.MaterialDao.findByIdNotDeleted(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(materialPermission.canView(loggedInUser, material))) { throw ee.hm.dop.utils.ValidatorUtil.permissionError(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1567/buggy-version/back-end.src.main.java.ee.hm.dop.service.content.MaterialGetter.java", "BodyUseAPI": [], "Fixed commit": "832f477a810453c25b924ba9e5f2411dedda8323", "Url": "https://api.github.com/repos/hariduspilv/koolikott", "Date": "2018-03-06T10:59:29Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (zutat != null) { zutaten.add(zutat); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3092/buggy-version/src.de.thb.fim.pizzaPronto.datenobjekte.GerichtVO.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "a68031fbe4ac573a10ae9084964d84cb447fa630", "Url": "https://api.github.com/repos/Tuuby/PizzaPronto", "Date": "2018-06-29T21:09:05Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (zutaten != null) { this.zutaten = zutaten; }else { this.zutaten = new java.util.ArrayList<java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3092/buggy-version/src.de.thb.fim.pizzaPronto.datenobjekte.GerichtVO.java", "BodyUseAPI": [], "Fixed commit": "a68031fbe4ac573a10ae9084964d84cb447fa630", "Url": "https://api.github.com/repos/Tuuby/PizzaPronto", "Date": "2018-06-29T21:09:05Z"},
{"Line": "=>881", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sectorOwnerIndex == 0) { sectorOwnerIndex = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2097/buggy-version/src.PlayGame.java", "BodyUseAPI": [], "Fixed commit": "50deffb468c25cd367d5100a8392d83419722f0d", "Url": "https://api.github.com/repos/nobodylovesm3/Monopoly", "Date": "2018-01-26T01:13:23Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.mozilla.focus.Inject.isScreenCaptureAnimationEnabled())) { mLottieAnimationView.setRepeatCount(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9443/buggy-version/app.src.main.java.org.mozilla.focus.fragment.ScreenCaptureDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "d6d7d94c1a51f438b39610de909fd03cae0a888d", "Url": "https://api.github.com/repos/mozilla-tw/Rocket", "Date": "2018-08-17T06:23:18Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((naechster) != null) { naechster.zeichnen(gc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2725/buggy-version/Knoten.java", "BodyUseAPI": [], "Fixed commit": "281ceb359789ee4b215efe89e266aa807b8914c4", "Url": "https://api.github.com/repos/UltronOne/Snake", "Date": "2018-10-24T05:44:04Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((naechster) == null) { naechster = new Knoten(elem); }else { einfuegen(elem); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2725/buggy-version/Knoten.java", "BodyUseAPI": [], "Fixed commit": "281ceb359789ee4b215efe89e266aa807b8914c4", "Url": "https://api.github.com/repos/UltronOne/Snake", "Date": "2018-10-24T05:44:04Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((erster) == null) { erster = new Knoten(elem); }else { erster.einfuegen(elem); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2725/buggy-version/Liste.java", "BodyUseAPI": [], "Fixed commit": "281ceb359789ee4b215efe89e266aa807b8914c4", "Url": "https://api.github.com/repos/UltronOne/Snake", "Date": "2018-10-24T05:44:04Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((erster) != null) { erster.zeichnen(gc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2725/buggy-version/Liste.java", "BodyUseAPI": [], "Fixed commit": "281ceb359789ee4b215efe89e266aa807b8914c4", "Url": "https://api.github.com/repos/UltronOne/Snake", "Date": "2018-10-24T05:44:04Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((robots) == null) { robots = null; robots = new java.util.ArrayList<model.robot.Robot>(); robots.addAll(_Roboter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/689/buggy-version/src.controller.InterviewPlayer.java", "BodyUseAPI": [], "Fixed commit": "428d14c39eb8ccc0e9d635844184a8968e49f084", "Url": "https://api.github.com/repos/project-ss18/Nao2Nao", "Date": "2018-06-12T15:44:32Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { ((com.owncloud.android.ui.preview.PreviewImageActivity) (getActivity())).toggleFullScreen(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3392/buggy-version/src.com.owncloud.android.ui.preview.PreviewImageFragment.java", "BodyUseAPI": [], "Fixed commit": "55f6f141c7fa1e5cd708bcf9cdb1c24a3a895360", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2018-04-05T07:56:12Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.app_service.util.HsEventUtil.eventSummary2EventRecom1(com.app_service.entity.hs_event.TEventSummary)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (null != sEventRecom1) { sEventRecom1Mapper.insertSelective(sEventRecom1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5400/buggy-version/src.main.java.com.app_service.service.impl.HsEventServiceImpl.java", "BodyUseAPI": ["com.app_service.dao.mapper.hs_event.SEventRecom1Mapper.insertSelective(com.app_service.entity.hs_event.SEventRecom1)"], "Fixed commit": "72599c5e44a9b3811d70c9e6d88533af9b2e5201", "Url": "https://api.github.com/repos/james-hadoop/AppService", "Date": "2018-04-29T22:04:08Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.app_service.util.HsEventUtil.eventSummary2EventRecom3(com.app_service.entity.hs_event.TEventSummary)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (null != sEventRecom3) { sEventRecom3Mapper.insertSelective(sEventRecom3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5400/buggy-version/src.main.java.com.app_service.service.impl.HsEventServiceImpl.java", "BodyUseAPI": ["com.app_service.dao.mapper.hs_event.SEventRecom3Mapper.insertSelective(com.app_service.entity.hs_event.SEventRecom3)"], "Fixed commit": "72599c5e44a9b3811d70c9e6d88533af9b2e5201", "Url": "https://api.github.com/repos/james-hadoop/AppService", "Date": "2018-04-29T22:04:08Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.app_service.util.HsEventUtil.eventSummary2EventRecom2(com.app_service.entity.hs_event.TEventSummary)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (null != sEventRecom2) { sEventRecom2Mapper.insertSelective(sEventRecom2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5400/buggy-version/src.main.java.com.app_service.service.impl.HsEventServiceImpl.java", "BodyUseAPI": ["com.app_service.dao.mapper.hs_event.SEventRecom2Mapper.insertSelective(com.app_service.entity.hs_event.SEventRecom2)"], "Fixed commit": "72599c5e44a9b3811d70c9e6d88533af9b2e5201", "Url": "https://api.github.com/repos/james-hadoop/AppService", "Date": "2018-04-29T22:04:08Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((geoJson.contains(\"Feature\")) || (geoJson.contains(\"feature\"))) || (geoJson.contains(\"FEATURE\"))) { if (geoJson.contains(\"properties\")) { org.wololo.geojson.Feature feature = ((org.wololo.geojson.Feature) (org.wololo.geojson.GeoJSONFactory.create(geoJson))); return new java.util.ArrayList(feature.getProperties().keySet()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8049/buggy-version/core.src.main.java.org.datasyslab.geospark.formatMapper.FormatMapper.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "org.wololo.geojson.GeoJSONFactory.create(java.lang.String)"], "Fixed commit": "61195f86c37b6a52cc1e2d037efbf39057353b75", "Url": "https://api.github.com/repos/DataSystemsLab/GeoSpark", "Date": "2018-09-04T07:31:24Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (adCreationDate == null) dueDate = new java.sql.Date(java.lang.System.currentTimeMillis()); else dueDate = com.dhbw.wwi16.b2.portfolioaufgabe1.web.WebUtils.parseDate(adCreationDate);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8437/buggy-version/src.main.java.com.dhbw.wwi16.b2.portfolioaufgabe1.web.AdEditServlet.java", "BodyUseAPI": ["com.dhbw.wwi16.b2.portfolioaufgabe1.web.WebUtils.parseDate(java.lang.String)"], "Fixed commit": "e5e1427313833aab43f5be34c76841c157f56c26", "Url": "https://api.github.com/repos/x7Git/PortfolioAufgabe_1", "Date": "2018-02-28T13:05:51Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(talkNumber)) { talkIdLong = java.lang.Long.parseLong(talkNumber); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6070/buggy-version/src.main.java.org.jenkinsci.plugins.typetalk.TypetalkBuildWrapper.java", "BodyUseAPI": ["java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "3f1eb8280ca9c39d86a82f5b2200cf015775f9ae", "Url": "https://api.github.com/repos/jenkinsci/typetalk-plugin", "Date": "2018-09-21T14:16:46Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (storage.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7837/buggy-version/src.datatype.CustomQueue.java", "BodyUseAPI": [], "Fixed commit": "4f312209369e8c3fb270ff4d9533c4005481e793", "Url": "https://api.github.com/repos/kredki/arrays", "Date": "2018-07-10T19:19:20Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (buffer == null) buffer = new boolean[len];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9034/buggy-version/src.core.net.cell_lang.Obj.java", "BodyUseAPI": [], "Fixed commit": "5a3521d85e152cc88427ed1335ca098a73ee989f", "Url": "https://api.github.com/repos/cell-lang/java", "Date": "2018-06-02T13:57:22Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (buffer == null) buffer = new long[len];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9034/buggy-version/src.core.net.cell_lang.Obj.java", "BodyUseAPI": [], "Fixed commit": "5a3521d85e152cc88427ed1335ca098a73ee989f", "Url": "https://api.github.com/repos/cell-lang/java", "Date": "2018-06-02T13:57:22Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (buffer == null) buffer = new net.cell_lang.Obj[len];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9034/buggy-version/src.core.net.cell_lang.Obj.java", "BodyUseAPI": [], "Fixed commit": "5a3521d85e152cc88427ed1335ca098a73ee989f", "Url": "https://api.github.com/repos/cell-lang/java", "Date": "2018-06-02T13:57:22Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (buffer == null) buffer = new double[len];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9034/buggy-version/src.core.net.cell_lang.Obj.java", "BodyUseAPI": [], "Fixed commit": "5a3521d85e152cc88427ed1335ca098a73ee989f", "Url": "https://api.github.com/repos/cell-lang/java", "Date": "2018-06-02T13:57:22Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (goodEntry) { thickness = java.lang.Double.parseDouble(thicknessStr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1188/buggy-version/src.main.java.edu.ithaca.Group6.UIImpl.java", "BodyUseAPI": [], "Fixed commit": "4efbd757ab90dea260d03ac1cbba673b540ff91b", "Url": "https://api.github.com/repos/ColtonGarelli/Architecture-Advisor3000", "Date": "2018-04-16T12:55:20Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diff > (maxDelay)) { value = java.lang.Double.parseDouble(\"NaN\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5279/buggy-version/AlmaWeatherStationPlugin.src.WeatherSensor.java", "BodyUseAPI": [], "Fixed commit": "ee7c89825d0e43d76dd381badd8b8c7df8a5a246", "Url": "https://api.github.com/repos/IntegratedAlarmSystem-Group/ias-contrib", "Date": "2018-04-05T20:19:12Z"},
{"Line": "=>510", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rangesensor.cmUltrasonic()) <= desired) { setPower(0.0, lf, lr, rf, rr); setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER, lf, lr, rf, rr); setTargetPosition((-1000000), lf); setTargetPosition(1000000, rf); setTargetPosition(1000000, lr); setTargetPosition((-1000000), rr); setMode(DcMotor.RunMode.RUN_TO_POSITION, lf, rf, lr, rr); setPower(0.1, lf, lr, rf, rr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/670/buggy-version/Robot1.src.main.java.org.firstinspires.ftc.Robot1.MecanumBot.java", "BodyUseAPI": [], "Fixed commit": "79bac0ee56733fff70361abeb45467a769922256", "Url": "https://api.github.com/repos/RoboEclipse/ftc_app", "Date": "2018-07-02T00:19:19Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((declaration.defaultValue()) != null) { annotation.addMember(\"defaultValue\", \"$S\", declaration.defaultValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7520/buggy-version/raml-to-pojo.src.main.java.org.raml.ramltopojo.extensions.jackson2.JacksonBasicExtension.java", "BodyUseAPI": ["AnnotationSpec.Builder.addMember(java.lang.String,java.lang.String,declaration.defaultValue())", "org.raml.v2.api.model.v10.datamodel.TypeDeclaration.defaultValue()"], "Fixed commit": "d81eb073f600e6fd9789fea55b955de4fa74d347", "Url": "https://api.github.com/repos/mulesoft-labs/raml-java-tools", "Date": "2018-02-16T22:09:43Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((declaration.defaultValue()) != null) { annotation.addMember(\"defaultValue\", \"$S\", declaration.defaultValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7520/buggy-version/raml-to-pojo.src.main.java.org.raml.ramltopojo.extensions.jackson2.JacksonBasicExtension.java", "BodyUseAPI": ["org.raml.v2.api.model.v10.datamodel.TypeDeclaration.defaultValue()", "AnnotationSpec.Builder.addMember(java.lang.String,java.lang.String,declaration.defaultValue())"], "Fixed commit": "d81eb073f600e6fd9789fea55b955de4fa74d347", "Url": "https://api.github.com/repos/mulesoft-labs/raml-java-tools", "Date": "2018-02-16T22:09:43Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((declaration.defaultValue()) != null) { annotation.addMember(\"defaultValue\", \"$S\", declaration.defaultValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7520/buggy-version/raml-to-pojo.src.main.java.org.raml.ramltopojo.extensions.jackson2.JacksonBasicExtension.java", "BodyUseAPI": ["org.raml.v2.api.model.v10.datamodel.TypeDeclaration.defaultValue()", "AnnotationSpec.Builder.addMember(java.lang.String,java.lang.String,declaration.defaultValue())"], "Fixed commit": "d81eb073f600e6fd9789fea55b955de4fa74d347", "Url": "https://api.github.com/repos/mulesoft-labs/raml-java-tools", "Date": "2018-02-16T22:09:43Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (model.getSender().isEmpty()) { model.updateNumCols(false); }else { model.updateNumCols(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4932/buggy-version/Exercise_202_RadioStations.src.GUI.RadioGUI.java", "BodyUseAPI": [], "Fixed commit": "7efe77cfbf29792fffa79640470ca210c557c8bd", "Url": "https://api.github.com/repos/Sandro1X/Exercise_202_RadioStations", "Date": "2018-10-15T08:39:27Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nextFile.length()) == 0) { nextFile.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4667/buggy-version/sergey.lavrenyuk.io.PartitionedFiles.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "1de562fd3a1a2e8fd97ff9c840fae6aa023f34ac", "Url": "https://api.github.com/repos/slavrenyuk/robots", "Date": "2018-09-18T11:15:02Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rule.containsKey(\"\\\\<\")) && (java.lang.Character.isDigit(thisToken.charAt(0)))) { processDigits(contextTokens, '<', ((java.util.HashMap) (rule.get(\"\\\\>\"))), matchBegin, currentPosition, matches); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2350/buggy-version/src.main.java.edu.utah.bmi.nlp.fastcontext.ContextRuleProcessor.java", "BodyUseAPI": ["edu.utah.bmi.nlp.fastcontext.ContextRuleProcessor.processDigits(java.util.List<edu.utah.bmi.nlp.core.Span>,char,java.lang.Object,int,int,java.util.LinkedHashMap<java.lang.String, edu.utah.bmi.nlp.context.common.ConTextSpan>)", "java.util.HashMap.get(java.lang.String)"], "Fixed commit": "330240b21e68f3c9f340ea588533037809e75101", "Url": "https://api.github.com/repos/jianlins/FastContext", "Date": "2018-07-09T18:37:12Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (payload != null) { payload.putString(\"origin\", \"android\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8092/buggy-version/android.src.main.java.com.novadart.reactnativenfc.ReactNativeNFCModule.java", "BodyUseAPI": ["com.facebook.react.bridge.WritableMap.putString(java.lang.String,java.lang.String)"], "Fixed commit": "d35771b75b978129277ba982a26557a439235973", "Url": "https://api.github.com/repos/joeldiaz2302/react-native-rfid-nfc", "Date": "2018-08-15T21:18:33Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Engine.GameManager.handNumber) == 1) { for (Engine.PokerPlayer p : players) buy(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8722/buggy-version/ChatLogicEngine.src.Engine.GameManager.java", "BodyUseAPI": [], "Fixed commit": "c1bd0bafe7705ae6da5a31f31e5e7e42c8d95ba5", "Url": "https://api.github.com/repos/danieltg/TexasHoldemWebApp", "Date": "2018-02-22T21:57:07Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (equipo.equals(EQUIPO_VISITANTE)) apuesta.setGolesVisitante(respuesta);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1992/buggy-version/src.main.java.ar.edu.unlam.tallerweb1.apuesta.ApuestaDao.java", "BodyUseAPI": [], "Fixed commit": "a055e0eb4e7fb03dfde57ea2901a83de2e3b653c", "Url": "https://api.github.com/repos/Max-UNLaM/dev-betsalah", "Date": "2018-06-24T20:55:27Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (equipo.equals(EQUIPO_LOCAL)) apuesta.setGolesLocal(respuesta);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1992/buggy-version/src.main.java.ar.edu.unlam.tallerweb1.apuesta.ApuestaDao.java", "BodyUseAPI": [], "Fixed commit": "a055e0eb4e7fb03dfde57ea2901a83de2e3b653c", "Url": "https://api.github.com/repos/Max-UNLaM/dev-betsalah", "Date": "2018-06-24T20:55:27Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((partitionVar == null) || (!(partitionVar.hasValue()))) return defaultCardinality;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6583/buggy-version/sail.src.main.java.com.msd.gin.halyard.sail.HalyardEvaluationStatistics.java", "BodyUseAPI": [], "Fixed commit": "12bcb5bdd5cafc5165d9c4783531e85bd8963e80", "Url": "https://api.github.com/repos/Merck/Halyard", "Date": "2018-10-03T14:03:03Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.softinel.sis.login.dao.LoginDao.getByPermanentPassword(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (login != null) { cz.softinel.sis.role.RoleHelper.prepareUserPermissions(login.getUser()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5398/buggy-version/src.main.java.cz.softinel.sis.login.blo.LoginLogicImpl.java", "BodyUseAPI": ["cz.softinel.sis.role.RoleHelper.prepareUserPermissions(login.getUser())", "cz.softinel.sis.login.Login.getUser()"], "Fixed commit": "b3ad09a8e044a271c23e24fa5931604fbbf1f2cb", "Url": "https://api.github.com/repos/retra/retra-system", "Date": "2018-05-21T08:43:19Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNumeric(range_of_applications[0])) limit_age_down = java.lang.Integer.parseInt(range_of_applications[0]); else limit_age_down = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5416/buggy-version/src.main.java.manke.spider.job.youku.MongoYoukuSeasonJob.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "0ff0de728e21ca9daa42084454176c631386240d", "Url": "https://api.github.com/repos/l854434716/spider", "Date": "2018-08-21T03:15:53Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNumeric(range_of_applications[1])) limit_age_up = java.lang.Integer.parseInt(range_of_applications[1]); else limit_age_up = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5416/buggy-version/src.main.java.manke.spider.job.youku.MongoYoukuSeasonJob.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "0ff0de728e21ca9daa42084454176c631386240d", "Url": "https://api.github.com/repos/l854434716/spider", "Date": "2018-08-21T03:15:53Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bigVals.size()) == 0) bigVals.add(newVal); else if (newVal < (bigVals.peekMax())) bigVals.add(newVal); else lilVals.add(newVal);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3161/buggy-version/rmed.RunMed.java", "BodyUseAPI": ["ALHeapMax.add(java.lang.Integer)", "ALHeapMax.add(java.lang.Integer)", "ALHeapMax.peekMax()"], "Fixed commit": "e9e8665d34afebefdc6f85c37cace38ed0bbe89b", "Url": "https://api.github.com/repos/raunakchowdhury/Queueties", "Date": "2018-05-17T21:36:14Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((iValue.length()) == 0) { return iValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7802/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.OSQLHelper.java", "BodyUseAPI": [], "Fixed commit": "7b9b0e4646704678c5cae70442b7fee2903d2721", "Url": "https://api.github.com/repos/sonatype/orientdb", "Date": "2018-04-30T15:37:50Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.configuration.AbstractConfiguration.getStringArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (packageNamesStrArray == null) { packageNamesStrArray = new java.lang.String[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/809/buggy-version/zuul-core.src.main.java.com.netflix.zuul.init.ZuulFiltersModule.java", "BodyUseAPI": [], "Fixed commit": "14580b91c82bbdb3ef4c75981ab41d1d4fb017e0", "Url": "https://api.github.com/repos/jingege/zuul", "Date": "2018-05-12T17:37:16Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.configuration.AbstractConfiguration.getStringArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (filterClassNamesStrArray == null) { filterClassNamesStrArray = new java.lang.String[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/809/buggy-version/zuul-core.src.main.java.com.netflix.zuul.init.ZuulFiltersModule.java", "BodyUseAPI": [], "Fixed commit": "14580b91c82bbdb3ef4c75981ab41d1d4fb017e0", "Url": "https://api.github.com/repos/jingege/zuul", "Date": "2018-05-12T17:37:16Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((followUpVolunteerReport.getFollowUpAssignedParticipants()) != 0) { followUpVolunteerReport.setPercentageCompletionOfFollowup((percentageCompletionOfFollowupVolunteerTotal / (followUpVolunteerReport.getFollowUpAssignedParticipants()))); }else { followUpVolunteerReport.setPercentageCompletionOfFollowup(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6313/buggy-version/src.main.java.com.giridhari.preachingassistant.controller.FollowUpAssignmentController.java", "BodyUseAPI": ["com.giridhari.preachingassistant.rest.model.followupassignment.FollowUpVolunteerReport.setPercentageCompletionOfFollowup(int)", "com.giridhari.preachingassistant.rest.model.followupassignment.FollowUpVolunteerReport.setPercentageCompletionOfFollowup((percentageCompletionOfFollowupVolunteerTotal / (followUpVolunteerReport.getFollowUpAssignedParticipants())))", "com.giridhari.preachingassistant.rest.model.followupassignment.FollowUpVolunteerReport.getFollowUpAssignedParticipants()"], "Fixed commit": "15375f54f52100b898cc88d04d0edef3b8ec5d2b", "Url": "https://api.github.com/repos/hariksetra/ISKCON-Preaching-Assistant", "Date": "2018-07-14T11:11:42Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((followUpProgramReport.getFollowUpAssignedParticipants()) != 0) { followUpProgramReport.setPercentageCompletionOfFollowup((percentageCompletionOfFollowupProgramTotal / (followUpProgramReport.getFollowUpAssignedParticipants()))); }else { followUpProgramReport.setPercentageCompletionOfFollowup(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6313/buggy-version/src.main.java.com.giridhari.preachingassistant.controller.FollowUpAssignmentController.java", "BodyUseAPI": ["com.giridhari.preachingassistant.rest.model.followupassignment.FollowUpProgramReport.setPercentageCompletionOfFollowup(int)", "com.giridhari.preachingassistant.rest.model.followupassignment.FollowUpProgramReport.getFollowUpAssignedParticipants()", "com.giridhari.preachingassistant.rest.model.followupassignment.FollowUpProgramReport.setPercentageCompletionOfFollowup((percentageCompletionOfFollowupProgramTotal / (followUpProgramReport.getFollowUpAssignedParticipants())))"], "Fixed commit": "15375f54f52100b898cc88d04d0edef3b8ec5d2b", "Url": "https://api.github.com/repos/hariksetra/ISKCON-Preaching-Assistant", "Date": "2018-07-14T11:11:42Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (listener != null) { listener.onCancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3213/buggy-version/AndUtilLib.src.main.java.com.github.lee.andutillib.util.DialogHelper.java", "BodyUseAPI": ["com.github.lee.andutillib.util.DialogHelper.OnDialogListener.onCancel()"], "Fixed commit": "28324b393f34912ffc4f4c02782af2caad0402bb", "Url": "https://api.github.com/repos/imleekey/AndUtils", "Date": "2018-06-29T15:41:19Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFlurryAdInterstitial) != null) { mFlurryAdInterstitial.destroy(); mFlurryAdInterstitial = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8480/buggy-version/adapter-flurry.src.main.java.com.adchain.adapters.FlurryAdAdapter.java", "BodyUseAPI": [], "Fixed commit": "01427cd3916207ee42cc465717d0df40cd22409a", "Url": "https://api.github.com/repos/fgustovo/adchain", "Date": "2018-09-19T09:25:16Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((presageInterstitial) != null) { presageInterstitial.destroy(); presageInterstitial = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8480/buggy-version/adapter-ogury.src.main.java.com.adchain.adapters.OguryAdAdapter.java", "BodyUseAPI": [], "Fixed commit": "01427cd3916207ee42cc465717d0df40cd22409a", "Url": "https://api.github.com/repos/fgustovo/adchain", "Date": "2018-09-19T09:25:16Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ad) != null) { ad.destroy(); ad = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8480/buggy-version/adapter-facebook.src.main.java.com.adchain.adapters.FacebookAdAdapter.java", "BodyUseAPI": [], "Fixed commit": "01427cd3916207ee42cc465717d0df40cd22409a", "Url": "https://api.github.com/repos/fgustovo/adchain", "Date": "2018-09-19T09:25:16Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.jdbc.core.JdbcTemplate.queryForRowSet(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (result.next()) { userId = result.getLong(\"id\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2022/buggy-version/src.main.java.com.techelevator.model.JDBCUserDAO.java", "BodyUseAPI": ["org.springframework.jdbc.support.rowset.SqlRowSet.getLong(java.lang.String)"], "Fixed commit": "969bb766cb4ed75911b04842e3de214146ab8f43", "Url": "https://api.github.com/repos/TechElevator/PGH-COHORT0-CAPSTONE-TEAM1", "Date": "2018-08-30T14:18:30Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tweet.retweetedStatus) != null) { favoriteCount = tweet.retweetedStatus.favoriteCount; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8289/buggy-version/app.src.main.java.com.tynmarket.serenade.model.TweetMapper.java", "BodyUseAPI": [], "Fixed commit": "79a301307ef249f4536bc5a6595fdd5bfb0fc280", "Url": "https://api.github.com/repos/tynmarket/Serenade", "Date": "2018-03-28T12:55:40Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!force) && (!(sync.needSync(this, de.tum.in.tumcampusapp.managers.NewsManager.TIME_TO_SYNC)))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/368/buggy-version/app.src.main.java.de.tum.in.tumcampusapp.managers.NewsManager.java", "BodyUseAPI": [], "Fixed commit": "985e7460beac1fd0695cc80f92805f9f85432242", "Url": "https://api.github.com/repos/TUM-Dev/Campus-Android", "Date": "2018-01-08T21:31:39Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StackTraceElement.getMethodName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((ste.getLineNumber()) < 0) & (Constants.Util.isSamShim(name))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3065/buggy-version/src.kilim.Task.java", "BodyUseAPI": [], "Fixed commit": "2ebc23c9b26dd963db430b9272936c10fb271841", "Url": "https://api.github.com/repos/nqzero/kilim", "Date": "2017-12-29T21:11:12Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.toString(getReceptiveFieldCellValue(((marioCenter[0]) - i), ((marioCenter[1]) - row)))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((curVal.length()) < 3) { curVal = (' ' + curVal) + ' '; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3589/buggy-version/MarioAI+Benchmark.src.main.SmarterForwardAgent.java", "BodyUseAPI": [], "Fixed commit": "a8481cf35441b2637b6f1903143da0e6861a379c", "Url": "https://api.github.com/repos/rystills/marioai", "Date": "2018-02-10T06:43:26Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.toString(getReceptiveFieldCellValue(((marioCenter[0]) + i), ((marioCenter[1]) - row)))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((curVal.length()) < 3) { curVal = (' ' + curVal) + ' '; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3589/buggy-version/MarioAI+Benchmark.src.main.SmarterForwardAgent.java", "BodyUseAPI": [], "Fixed commit": "a8481cf35441b2637b6f1903143da0e6861a379c", "Url": "https://api.github.com/repos/rystills/marioai", "Date": "2018-02-10T06:43:26Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.cam.cl.dtg.segue.dao.users.IUserGroupPersistenceManager.getAdditionalManagerSetByGroupId(group.getId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (additionalManagers != null) { setOfUsers.addAll(userManager.convertToDetailedUserSummaryObjectList(userManager.findUsers(additionalManagers))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5205/buggy-version/src.main.java.uk.ac.cam.cl.dtg.segue.api.managers.GroupManager.java", "BodyUseAPI": ["java.util.Set<uk.ac.cam.cl.dtg.segue.dto.users.DetailedUserSummaryDTO>.addAll(userManager.convertToDetailedUserSummaryObjectList(userManager.findUsers(additionalManagers)))", "uk.ac.cam.cl.dtg.segue.api.managers.UserAccountManager.findUsers(java.util.Set<java.lang.Long>)", "uk.ac.cam.cl.dtg.segue.api.managers.UserAccountManager.convertToDetailedUserSummaryObjectList(userManager.findUsers(additionalManagers))"], "Fixed commit": "5aa8c9462b18621aea8288921d51d20041793481", "Url": "https://api.github.com/repos/ucam-cl-dtg/isaac-api", "Date": "2018-03-16T15:46:32Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tle.web.api.baseentity.serializer.AbstractBaseEntitySerializer<BE, BEB, ED>.getI18NStrings(source.getDescription(),boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (descStrings != null) { target.setDescription(descStrings.asI18NString(null)); target.setDescriptionStrings(descStrings); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3380/buggy-version/Source.Plugins.Core.com.equella.core.src.com.tle.web.api.baseentity.serializer.AbstractBaseEntitySerializer.java", "BodyUseAPI": ["com.tle.web.api.interfaces.beans.BaseEntityBean.setDescriptionStrings(com.tle.common.interfaces.I18NStrings)", "com.tle.web.api.interfaces.beans.BaseEntityBean.setDescription(descStrings.asI18NString(null))", "com.tle.common.interfaces.I18NStrings.asI18NString(<nulltype>)"], "Fixed commit": "23fe97bd88ec0de81823f0b748e2992eb8e8f4dc", "Url": "https://api.github.com/repos/equella/Equella", "Date": "2018-05-28T10:47:11Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.scu.my_shop.service.ProductService.searchProductByID(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (product == null) { mav.setViewName(\"cart.html\"); mav.getModelMap().addAttribute(\"error\", \"\u4fe1\u606f\u9519\u8bef\"); return mav; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5401/buggy-version/src.main.java.edu.scu.my_shop.controller.CartController.java", "BodyUseAPI": [], "Fixed commit": "e9b9363d37b3775475a22b39efa325474f6d2fc1", "Url": "https://api.github.com/repos/lazyZhou1997/MyShop", "Date": "2018-03-22T12:57:25Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (projectEntityOld.getProjectStatus().getStatus().equals(ProjectStatus.RECRUITING)) { java.lang.System.out.println(\"ERVEVVEVEVEVEVEVEVEVEVEV\"); messageRequestService.save(person.getId(), \"\u0421\u0442\u0430\u0442\u0443\u0441 \u043f\u0440\u043e\u0435\u043a\u0442\u0430.\", ((\"\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435! \u0411\u044b\u043b \u0438\u0437\u043c\u0435\u043d\u0435\u043d \u0441\u0442\u0430\u0442\u0443\u0441 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \" + (projectEntity.getName())) + \" \u043d\u0430 \u041d\u0430\u0431\u043e\u0440 \u043a\u043e\u043c\u0430\u043d\u0434\u044b\"), projectEntityOld.getCustomer()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2858/buggy-version/services.src.main.java.com.itbootcamp.starter.services.impl.ProjectService.java", "BodyUseAPI": ["com.itbootcamp.starter.services.impl.MessageRequestService.save(person.getId(),java.lang.String,((\"\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435! \u0411\u044b\u043b \u0438\u0437\u043c\u0435\u043d\u0435\u043d \u0441\u0442\u0430\u0442\u0443\u0441 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \" + (projectEntity.getName())) + \" \u043d\u0430 \u041d\u0430\u0431\u043e\u0440 \u043a\u043e\u043c\u0430\u043d\u0434\u044b\"),projectEntityOld.getCustomer())", "com.itbootcamp.starter.services.impl.ProjectEntity.getCustomer()"], "Fixed commit": "c31c095da3c9fd4c48312a722da092bc40afaff0", "Url": "https://api.github.com/repos/sunkvant/starter", "Date": "2018-01-16T22:41:25Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["DB.DBCollection.findOne(DB.BasicDBObject)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(doc.containsField(Users.ContactList.toString()))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6438/buggy-version/src.main.java.DB.DataFetcher.java", "BodyUseAPI": [], "Fixed commit": "a805f33f122c6fc521b966f469937ed0e732a942", "Url": "https://api.github.com/repos/sanad94/ChatServer", "Date": "2018-08-04T16:28:22Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["DB.DataFetcher.getContactList(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (contacts == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6438/buggy-version/src.main.java.SocketsOperations.UsersOnline.java", "BodyUseAPI": [], "Fixed commit": "a805f33f122c6fc521b966f469937ed0e732a942", "Url": "https://api.github.com/repos/sanad94/ChatServer", "Date": "2018-08-04T16:28:22Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (null == rowList) { rowList = new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6248/buggy-version/hutool-poi.src.main.java.com.PATHoleilu.hutool.poi.excel.ExcelReader.java", "BodyUseAPI": [], "Fixed commit": "081e19b36dac9195a37280d85c0da48acb3f826e", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2018-01-04T09:27:57Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == row) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6248/buggy-version/hutool-poi.src.main.java.com.PATHoleilu.hutool.poi.excel.InternalExcelUtil.java", "BodyUseAPI": [], "Fixed commit": "081e19b36dac9195a37280d85c0da48acb3f826e", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2018-01-04T09:27:57Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seedu.address.logic.commands.UndoCommand.popUndo()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((toUndo instanceof seedu.address.logic.commands.SetAppointmentCommand) || (toUndo instanceof seedu.address.logic.commands.DeleteCommand)) { model.indicateAppointmentListChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8138/buggy-version/src.main.java.seedu.address.logic.commands.UndoCommand.java", "BodyUseAPI": [], "Fixed commit": "ce7ce6a22ee0f6d93f38fbaa5851fda46c47c20c", "Url": "https://api.github.com/repos/shanmu9898/main", "Date": "2018-04-14T08:39:55Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hopCounts) == null) { addDeviceToTable(senderContact, senderContact, 1, false); senderHopCount = 1; changeHappened = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1777/buggy-version/app.src.main.java.il.ac.tau.cs.mansur.kollmann.clusterchat.RoutingTable.java", "BodyUseAPI": [], "Fixed commit": "5e7b2033b35dbfa22e84022afefa22dc03960646", "Url": "https://api.github.com/repos/alonkol/ClusterChat", "Date": "2018-06-08T10:53:19Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((date.getValue().volume) != (-1.0)) totalVolume += date.getValue().volume;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2384/buggy-version/virtualassistant.data.stocks.Company.java", "BodyUseAPI": ["java.util.Map.Entry<java.util.Calendar, HistoricalData.Record>.getValue()"], "Fixed commit": "b0a53361a2eeeb1b56554f6ddd73c37c7ed274d3", "Url": "https://api.github.com/repos/matthewnoyes/pink-fluffy-unicorns", "Date": "2018-03-04T12:32:56Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((date.getValue().high) != (-1.0)) && (high < (date.getValue().high))) { high = date.getValue().high; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2384/buggy-version/virtualassistant.data.stocks.Company.java", "BodyUseAPI": ["java.util.Map.Entry<java.util.Calendar, HistoricalData.Record>.getValue()"], "Fixed commit": "b0a53361a2eeeb1b56554f6ddd73c37c7ed274d3", "Url": "https://api.github.com/repos/matthewnoyes/pink-fluffy-unicorns", "Date": "2018-03-04T12:32:56Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (icon != null) { builder.icon(icon); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5498/buggy-version/library.src.main.java.com.steinfluss.sfratedialog.RateDialogUtils.java", "BodyUseAPI": ["MaterialDialog.Builder.icon(android.graphics.drawable.Drawable)"], "Fixed commit": "496ae8076da5e3808fc8bb5c5ab9e6e1cf89ac7f", "Url": "https://api.github.com/repos/SteinFluss/SF_RateDialog", "Date": "2018-09-20T11:11:05Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (prevTotal == null) { prevTotal = io.jenkins.plugins.coverage.targets.Ratio.create(0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9091/buggy-version/src.main.java.io.jenkins.plugins.coverage.targets.CoverageAggregationRule.java", "BodyUseAPI": [], "Fixed commit": "6121381e19108c3a1ffa3f2b8664515e931fb807", "Url": "https://api.github.com/repos/jenkinsci/code-coverage-api-plugin", "Date": "2018-08-06T14:12:06Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (path instanceof org.openflexo.foundation.fml.cli.parser.node.ADotPath) { return \".\"; }else if (path instanceof org.openflexo.foundation.fml.cli.parser.node.ADotPathPath) { return (\".\" + (java.io.File.separator)) + (retrievePath(((org.openflexo.foundation.fml.cli.parser.node.ADotPathPath) (path)).getPath())); }else if (path instanceof org.openflexo.foundation.fml.cli.parser.node.AFileNamePath) { return ((org.openflexo.foundation.fml.cli.parser.node.AFileNamePath) (path)).getFileName().getText(); }else if (path instanceof org.openflexo.foundation.fml.cli.parser.node.AIdentifierPath) { return ((org.openflexo.foundation.fml.cli.parser.node.AIdentifierPath) (path)).getIdentifier().getText(); }else if (path instanceof org.openflexo.foundation.fml.cli.parser.node.APathPath) { return ((((org.openflexo.foundation.fml.cli.parser.node.APathPath) (path)).getFileName().getText()) + (java.io.File.separator)) + (retrievePath(((org.openflexo.foundation.fml.cli.parser.node.APathPath) (path)).getPath())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6114/buggy-version/fml-cli.src.main.java.org.openflexo.foundation.fml.cli.command.Directive.java", "BodyUseAPI": [], "Fixed commit": "47dffce2d7c2faa30b9171f3e4d4ced50cc67b69", "Url": "https://api.github.com/repos/openflexo-team/openflexo-core", "Date": "2018-03-15T10:48:02Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (book.getCheckout()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8248/buggy-version/src.com.twu.biblioteca.service.BookService.java", "BodyUseAPI": [], "Fixed commit": "80b24ae95592d182e1a80e46510c93c760cbf1e8", "Url": "https://api.github.com/repos/liuyunzhi/twu-biblioteca-yzliu", "Date": "2018-09-09T15:31:59Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(book.getCheckout())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8248/buggy-version/src.com.twu.biblioteca.service.BookService.java", "BodyUseAPI": [], "Fixed commit": "80b24ae95592d182e1a80e46510c93c760cbf1e8", "Url": "https://api.github.com/repos/liuyunzhi/twu-biblioteca-yzliu", "Date": "2018-09-09T15:31:59Z"},
{"Line": "=>4", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (str.isEmpty()) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4237/buggy-version/PE2.src.Palindrome.java", "BodyUseAPI": [], "Fixed commit": "28c01c950228e4395af7dfeb13ac4c6bbc5c03a4", "Url": "https://api.github.com/repos/kushagraagrawal/Java_training_stackroute", "Date": "2018-09-12T12:01:24Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e.isB()) { if (index != ((a.length) - 1)) { sb.delete(((sb.length()) - 4), sb.length()); sb.append(((\") {\\n\\tanswer[j] = i;\\n\\tj+= \" + logicalAnd) + \";\\n}\\n\")); }else { sb.delete(((sb.length()) - 3), sb.length()); sb.append(((\"answer[j] = i;\\nj+= \" + logicalAnd) + \";\\n\")); } }else { sb.append(logicalAnd); sb.append(\") {\\n\\tanswer[j++] = i;\\n}\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5834/buggy-version/COMS4112-project2.src.Main.java", "BodyUseAPI": [], "Fixed commit": "e08f9a7366837bb09a7d21bbc51b2768698fbe3e", "Url": "https://api.github.com/repos/pengPATHnzhe/COMS4112-project2", "Date": "2018-04-20T21:15:41Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!narrowMatch) { for (java.lang.String name : names) { twitterContents.addAll(twitterContentRepo.findByScreenNameAndIsQuotedAndUrlNarrowMatchAndTweetTimeGreaterThanAndTweetTimeLessThan(name, false, (!narrowMatch), startTime, finishTime)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6748/buggy-version/src.main.java.com.mystory.twitter.Engine.TwitterContentServer.java", "BodyUseAPI": ["java.util.List<com.mystory.twitter.model.TwitterContent>.addAll(twitterContentRepo.findByScreenNameAndIsQuotedAndUrlNarrowMatchAndTweetTimeGreaterThanAndTweetTimeLessThan(name, false, (!narrowMatch), startTime, finishTime))", "com.mystory.twitter.repository.TwitterContentRepo.findByScreenNameAndIsQuotedAndUrlNarrowMatchAndTweetTimeGreaterThanAndTweetTimeLessThan(java.lang.String,boolean,boolean,java.util.Date,java.util.Date)"], "Fixed commit": "a6efc1408d54f155dd3bf0e9d99dee6f5e42af13", "Url": "https://api.github.com/repos/godisboy0/testSpringBoot", "Date": "2018-10-18T15:57:15Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"slice\".equals(name)) { return new org.mozilla.javascript.IdFunctionObject(new org.structr.core.script.SliceFunctionCall(actionContext, entity, scriptingContext), null, 0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6560/buggy-version/structr-core.src.main.java.org.structr.core.script.StructrScriptable.java", "BodyUseAPI": [], "Fixed commit": "b35c6da8b5d11832d696e580dfffe7bd529694d6", "Url": "https://api.github.com/repos/structr/structr", "Date": "2018-03-20T09:31:58Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (flags == (android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE)) { val.writeToParcel(dest, flags); }else { dest.writeParcelable(val, flags); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3976/buggy-version/alinker.src.main.java.com.codezjx.alinker.OutType.java", "BodyUseAPI": ["android.os.Parcel.writeParcelable(android.os.Parcelable,int)", "android.os.Parcelable.writeToParcel(android.os.Parcel,int)"], "Fixed commit": "ca41cf7cbc7297dbaf5607a576f5eaad19cd0895", "Url": "https://api.github.com/repos/codezjx/AndLinker", "Date": "2018-01-05T15:25:39Z"},
{"Line": "=>621", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (day == ((days) - 1)) { java.lang.System.out.println(\"Autobus ended\"); simulationConfiguration.SimulationConfig.getInstance().waitThreadsEnd(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9246/buggy-version/src.main.Bus.java", "BodyUseAPI": [], "Fixed commit": "7f7477ee812b52193a8d818975bd6b79a93def51", "Url": "https://api.github.com/repos/adricarda/SMART-M3Project", "Date": "2018-01-21T20:17:37Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mIconHeight) == 0) && ((mIconWidth) == 0)) { if ((mIcon) != null) { mIconWidth = mIcon.getIntrinsicWidth(); mIconHeight = mIcon.getIntrinsicHeight(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9221/buggy-version/library.src.main.java.com.ruffian.library.RTextView.java", "BodyUseAPI": [], "Fixed commit": "4fa8a15a2c7760677134da8b739142faae68f1b3", "Url": "https://api.github.com/repos/RuffianZhong/RTextView", "Date": "2018-04-04T03:53:40Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.example.jonathanashcraft.pinnacleconnection.AndroidUser.isUserManager()) menu.findItem(R.id.nav_admin).setVisible(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7057/buggy-version/app.src.main.java.com.example.jonathanashcraft.pinnacleconnection.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f833c72d3150948b5e6879062e3ae71e4dc20016", "Url": "https://api.github.com/repos/latterdaystud/PinnacleConnection", "Date": "2018-03-20T00:44:09Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((plainSelect.getOrderByElements()) != null) opLeft = new com.sql.interpreter.SortOperator(opLeft, plainSelect);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2079/buggy-version/src.main.java.com.sql.interpreter.Handler.java", "BodyUseAPI": [], "Fixed commit": "4c3934b38d5c3ba0c55fc51143457e1c9773ca2d", "Url": "https://api.github.com/repos/fseldow/SQL_interpreter_p1", "Date": "2018-10-02T10:46:49Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((termid) == null) { org.monarchinitiative.hpoworkbench.io.Commandline.printUsage(\"[ERROR] stats command requires -t option\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9539/buggy-version/hpowbcli.src.main.java.org.monarchinitiative.hpoworkbench.io.Commandline.java", "BodyUseAPI": [], "Fixed commit": "1a2440ef1b5187cd2ce06b8414d6f8dc3d216188", "Url": "https://api.github.com/repos/TheJacksonLaboratory/HPOworkbench", "Date": "2018-03-07T16:57:36Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rgsSpace.addAgent(a)) { agentList.add(a); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1977/buggy-version/RabbitsGrassSimulationModel.java", "BodyUseAPI": ["java.util.ArrayList<RabbitsGrassSimulationAgent>.add(RabbitsGrassSimulationAgent)"], "Fixed commit": "8c7128879af983d51fbae2b6cbba535e164e5c2d", "Url": "https://api.github.com/repos/2pacalypse/EPFL", "Date": "2018-09-28T23:02:15Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (op == '*') { long target = 1; try { for (int v : this.values) { target = java.lang.Math.multiplyExact(v, target); } } catch (java.lang.ArithmeticException e) { return findTarget('+'); } return target; }else if (op == '-') { int operand = 0; int max = 0; for (int v : this.values) { if (v > max) { operand += max; max = v; }else { operand += v; } } long target = max - operand; return target < 0 ? -1 : target; }else if (op == '/') { long divisor = 1; long max = 1; for (int v : this.values) { if (v > max) { divisor *= max; max = v; }else { divisor *= v; } } return (max % divisor) == 0 ? ((int) (max / divisor)) : -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4122/buggy-version/kenken.Region.java", "BodyUseAPI": [], "Fixed commit": "38b8bdddfcbe3e11a888ce55c4b90f3568f3158b", "Url": "https://api.github.com/repos/Michael-Bianconi/KenKen", "Date": "2018-10-06T17:29:37Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (g == null) { return null; }else if (g == (cs3500.hw04.FreecellModelCreator.GameType.SINGLEMOVE)) { return new cs3500.hw02.FreecellModel(); }else { return new cs3500.hw04.FreecellMultiModel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3440/buggy-version/code.src.cs3500.hw04.FreecellModelCreator.java", "BodyUseAPI": [], "Fixed commit": "7ee2fe3e3920a9fc5a12ecfea7f6eb9c71a552e4", "Url": "https://api.github.com/repos/az0977776/freecell", "Date": "2018-02-16T19:38:52Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (list.contains(restaurantDetails)) { }else { list.add(restaurantDetails); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6277/buggy-version/app.src.main.java.malcolmmaima.dishi.View.Fragments.NearbyRestaurantsFragment.java", "BodyUseAPI": ["java.util.List<malcolmmaima.dishi.Model.RestaurantDetails>.add(malcolmmaima.dishi.Model.RestaurantDetails)"], "Fixed commit": "46bccac72839a12e98e1f1763048f6b8e9900479", "Url": "https://api.github.com/repos/malcolmmaima/Dishi", "Date": "2018-08-13T15:34:38Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (list.contains(restaurantDetails)) { }else { list.add(restaurantDetails); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6277/buggy-version/app.src.main.java.malcolmmaima.dishi.View.Fragments.NearbyRestaurantsFragment.java", "BodyUseAPI": ["java.util.List<malcolmmaima.dishi.Model.RestaurantDetails>.add(malcolmmaima.dishi.Model.RestaurantDetails)"], "Fixed commit": "46bccac72839a12e98e1f1763048f6b8e9900479", "Url": "https://api.github.com/repos/malcolmmaima/Dishi", "Date": "2018-08-13T15:34:38Z"},
{"Line": "=>5", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (str == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9565/buggy-version/src.main.java.com.utils.Utils.java", "BodyUseAPI": [], "Fixed commit": "d253eaf29c6ba3f0700069ea9e535902f142a39e", "Url": "https://api.github.com/repos/gorbatovea/WebHT", "Date": "2018-05-15T07:29:06Z"},
{"Line": "=>6", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((str.length()) < 1) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9565/buggy-version/src.main.java.com.utils.Utils.java", "BodyUseAPI": [], "Fixed commit": "d253eaf29c6ba3f0700069ea9e535902f142a39e", "Url": "https://api.github.com/repos/gorbatovea/WebHT", "Date": "2018-05-15T07:29:06Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (vehicle instanceof MercedesBenz) { MercedesBenz orderedMbenz = ((MercedesBenz) (vehicle)); java.lang.System.out.println(orderedMbenz); }else if (vehicle instanceof Sled) { Sled orderedSled = ((Sled) (vehicle)); java.lang.System.out.println(orderedSled); }else { java.lang.System.out.println(\"Invalid object type\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6222/buggy-version/Orders.java", "BodyUseAPI": [], "Fixed commit": "b000eba875f77a922f050bf8bac9329cecb91e21", "Url": "https://api.github.com/repos/command7/vehicle_ordering_system", "Date": "2018-10-15T01:13:45Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((device) == null) { com.airlenet.netconf.common.DeviceUser duser = new com.airlenet.netconf.common.DeviceUser(this.remoteUser, this.remoteUser, this.password); device = new com.airlenet.netconf.common.Device(this.mgmt_ip, duser, this.mgmt_ip, this.mgmt_port); device.connect(this.remoteUser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2533/buggy-version/netconf-common.src.main.java.com.airlenet.netconf.common.PlayNetconfDevice.java", "BodyUseAPI": [], "Fixed commit": "7a4de60f9cbe38badeab5e1889f97fd9c1add46f", "Url": "https://api.github.com/repos/airshiplay/play-netconf", "Date": "2018-03-16T09:42:14Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((listenerList.indexOf(listener)) == (-1)) { listenerList.add(listener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2533/buggy-version/netconf-common.src.main.java.com.airlenet.netconf.common.PlayNotification.java", "BodyUseAPI": ["java.util.List<com.airlenet.netconf.common.PlayNetconfListener>.add(com.airlenet.netconf.common.PlayNetconfListener)"], "Fixed commit": "7a4de60f9cbe38badeab5e1889f97fd9c1add46f", "Url": "https://api.github.com/repos/airshiplay/play-netconf", "Date": "2018-03-16T09:42:14Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(routes.containsKey(prediction.getRouteId()))) { routes.put(prediction.getRouteId(), prediction.getRoute()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/33/buggy-version/app.src.main.java.jackwtat.simplembta.controllers.PredictionsByLocationAsyncTask.java", "BodyUseAPI": ["jackwtat.simplembta.model.Prediction.getRouteId()", "jackwtat.simplembta.model.Prediction.getRoute()", "java.util.HashMap<java.lang.String, jackwtat.simplembta.model.Route>.put(prediction.getRouteId(),prediction.getRoute())"], "Fixed commit": "013b9c35a3a240c99c56941f54ffe589b3785695", "Url": "https://api.github.com/repos/jackwtat/SimpleMBTA", "Date": "2018-09-08T23:29:12Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (properties.containsKey(\"initially.shared.peaks\")) this.nInitiallySharedPeaks = java.lang.Integer.parseInt(properties.getProperty(\"initially.shared.peaks\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8670/buggy-version/src.main.java.org.spectra.cluster.util.DefaultParameters.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.util.Properties.getProperty(java.lang.String)"], "Fixed commit": "7978453590442fdf703f4e05d5d26f05147b7aac", "Url": "https://api.github.com/repos/bigbio/spectra-cluster-2", "Date": "2018-10-19T13:55:27Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.ws.rs.core.HttpHeaders.getRequestHeader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (headerPort == null) { headerPort = config.consumerPort(origAbsoluteUri.getScheme()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5319/buggy-version/kafka-rest.src.main.java.io.confluent.kafkarest.UriUtils.java", "BodyUseAPI": [], "Fixed commit": "a858b1dd8aa08800e806cbfd993cd53f63ac2ab1", "Url": "https://api.github.com/repos/lprashant-94/kafka-rest", "Date": "2018-10-01T16:55:10Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.ws.rs.core.HttpHeaders.getRequestHeader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (headerScheme == null) { headerScheme = origAbsoluteUri.getScheme(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5319/buggy-version/kafka-rest.src.main.java.io.confluent.kafkarest.UriUtils.java", "BodyUseAPI": [], "Fixed commit": "a858b1dd8aa08800e806cbfd993cd53f63ac2ab1", "Url": "https://api.github.com/repos/lprashant-94/kafka-rest", "Date": "2018-10-01T16:55:10Z"},
{"Line": "=>606", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((msg.getPayload().length) > 0) { org.knime.python2.kernel.CommandMessage.PayloadDecoder dec = new org.knime.python2.kernel.CommandMessage.PayloadDecoder(msg.getPayload()); return dec.nextBytes(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4839/buggy-version/org.knime.python2.src.org.knime.python2.kernel.Commands.java", "BodyUseAPI": ["org.knime.python2.kernel.CommandMessage.getPayload()"], "Fixed commit": "638bb8c804d7450b0b4ea26a0ae4f4fa979109e5", "Url": "https://api.github.com/repos/knime/knime-python", "Date": "2018-01-24T12:19:54Z"},
{"Line": "=>862", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["m_commands.getImage(name).get()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (bytes != null) { final java.lang.String string = new java.lang.String(bytes, \"UTF-8\"); if (string.startsWith(\"<?xml\")) { try { return new org.knime.python2.generic.ImageContainer(stringToSVG(string)); } catch (final org.apache.batik.transcoder.TranscoderException e) { throw new java.io.IOException(e.getMessage(), e); } }else { return new org.knime.python2.generic.ImageContainer(javax.imageio.ImageIO.read(new java.io.ByteArrayInputStream(bytes))); } }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4839/buggy-version/org.knime.python2.src.org.knime.python2.kernel.PythonKernel.java", "BodyUseAPI": ["javax.imageio.ImageIO.read(java.io.ByteArrayInputStream)"], "Fixed commit": "638bb8c804d7450b0b4ea26a0ae4f4fa979109e5", "Url": "https://api.github.com/repos/knime/knime-python", "Date": "2018-01-24T12:19:54Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((config) != null) { if ((config.logOption) != null) { if (config.logOption.equals(\"Log to File\")) { writeFileLog(echoStatement, isFatal); }else if (config.logOption.equals(\"Log to Monitor\")) { writeConsoleLog(echoStatement, isFatal); }else if (config.logOption.equals(\"Log to Both\")) { writeConsoleLog(echoStatement, isFatal); writeFileLog(echoStatement, isFatal); } }else { writeConsoleLog(echoStatement, isFatal); } }else { writeConsoleLog(echoStatement, isFatal); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/337/buggy-version/Console.java", "BodyUseAPI": [], "Fixed commit": "e2bb3f68c53ceb3b683a6ad6621c857fde9498c7", "Url": "https://api.github.com/repos/stephenerdelyi/os", "Date": "2018-10-16T05:43:01Z"},
{"Line": "=>493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (indexBase >= 0) { for (int i = 0; i < (samplesWithEvents.eventCount); i++) { eventsBuffer.put(samplesWithEvents.eventIndices[i], eventNames[(indexBase + i)]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3188/buggy-version/app.src.main.java.com.backyardbrains.drawing.BaseWaveformRenderer.java", "BodyUseAPI": ["android.util.SparseArray<java.lang.String>.put(samplesWithEvents.eventIndices[i],java.lang.String)"], "Fixed commit": "3b1c7c6fa4ca1fe5961bc221fdc6504d4b408df2", "Url": "https://api.github.com/repos/BackyardBrains/Spike-Recorder-Android", "Date": "2018-10-04T14:14:19Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (uniqueOwners.containsKey(contract.getAcceptorID())) { net.nikr.eve.jeveasset.io.esi.EsiContractItemsGetter.contracts.get(contract.getAcceptorID()).add(contract); net.nikr.eve.jeveasset.io.esi.EsiContractItemsGetter.SIZE.getAndIncrement(); }else if (uniqueOwners.containsKey(contract.getIssuerCorpID())) { net.nikr.eve.jeveasset.io.esi.EsiContractItemsGetter.contracts.get(contract.getIssuerCorpID()).add(contract); net.nikr.eve.jeveasset.io.esi.EsiContractItemsGetter.SIZE.getAndIncrement(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5500/buggy-version/src.main.java.net.nikr.eve.jeveasset.io.esi.EsiContractItemsGetter.java", "BodyUseAPI": ["java.util.Map<java.lang.Long, java.util.List<net.nikr.eve.jeveasset.data.api.my.MyContract>>.get(contract.getAcceptorID())", "net.nikr.eve.jeveasset.data.api.my.MyContract.getAcceptorID()", "net.nikr.eve.jeveasset.io.esi.EsiContractItemsGetter.contracts.get(contract.getIssuerCorpID()).add(net.nikr.eve.jeveasset.data.api.my.MyContract)", "net.nikr.eve.jeveasset.io.esi.EsiContractItemsGetter.contracts.get(contract.getAcceptorID()).add(net.nikr.eve.jeveasset.data.api.my.MyContract)", "java.util.Map<java.lang.Long, net.nikr.eve.jeveasset.data.api.accounts.EsiOwner>.containsKey(contract.getIssuerCorpID())", "net.nikr.eve.jeveasset.data.api.my.MyContract.getIssuerCorpID()", "net.nikr.eve.jeveasset.data.api.my.MyContract.getIssuerCorpID()", "java.util.Map<java.lang.Long, java.util.List<net.nikr.eve.jeveasset.data.api.my.MyContract>>.get(contract.getIssuerCorpID())"], "Fixed commit": "7f945fe16bfe415333d4e2d1b8e6e921c61a0342", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2018-05-26T17:46:42Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Long, T>.get(obj.getId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (existing != null) { existing.setDeleted(true); itemByPrimaryKey.remove(obj.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5144/buggy-version/src.main.java.io.stallion.dataAccess.PartialStash.java", "BodyUseAPI": ["T.setDeleted(boolean)"], "Fixed commit": "4b1a6dcc72009688ba11b9824a3d0aaf7e942273", "Url": "https://api.github.com/repos/StallionCMS/stallion-core", "Date": "2018-03-08T19:56:31Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Models.Request.getGame()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentGame.getMyPlayer().isTurn()) { Models.Client.getInstance().setCurState(new StatePattern.MyTurn()); }else { Models.Client.getInstance().setCurState(new StatePattern.NotMyTurn()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4308/buggy-version/app.src.main.java.Services.Commands.LobbyServices.java", "BodyUseAPI": [], "Fixed commit": "85898b2c44d5e79d25f9af5b76e76b079efc6ee4", "Url": "https://api.github.com/repos/otteb/TTR_Client", "Date": "2018-04-18T22:33:15Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.getErrorMsg()) == null) { Models.Client.getInstance().setCommandNum(0); }else { java.lang.System.out.println(result.getErrorMsg()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4308/buggy-version/app.src.main.java.Client_Server_Communication.ClientFacade.java", "BodyUseAPI": ["java.io.PrintStream.println(result.getErrorMsg())", "Models.Result.getErrorMsg()"], "Fixed commit": "85898b2c44d5e79d25f9af5b76e76b079efc6ee4", "Url": "https://api.github.com/repos/otteb/TTR_Client", "Date": "2018-04-18T22:33:15Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tag) == null) { tag = org.sagebionetworks.bridge.exporter.request.BridgeExporterRequest.DEFAULT_TAG; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5268/buggy-version/src.main.java.org.sagebionetworks.bridge.exporter.request.BridgeExporterRequest.java", "BodyUseAPI": [], "Fixed commit": "0ff9c29ab3070db8518fa7fe19d47a1c52aaa3bf", "Url": "https://api.github.com/repos/alxdarksage/Bridge-Exporter", "Date": "2018-08-09T02:36:14Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i == 0) || (j == 0)) { newPixel = new Pixel(128, 128, 128); }else { newPixel = new Pixel(v, v, v); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9159/buggy-version/src.Image.java", "BodyUseAPI": [], "Fixed commit": "129998fb96d83261ceb1db051bd4170f3ea8e241", "Url": "https://api.github.com/repos/singseraphim/240lab1", "Date": "2018-09-11T19:42:13Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (strength == null) android.util.Log.d(android.content.ContentValues.TAG, \"null string\"); else strengthsString.append(((\"\u2022 \" + strength) + \"\\n\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1069/buggy-version/BCHA-Formulary.app.src.main.java.com.lowermainlandpharmacyservices.lmpsformulary.Activity.ResultsActivity.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "67d98e15a508862cf3e96788751b60221249c6fa", "Url": "https://api.github.com/repos/BCHA-Formulary/Formulary-Android", "Date": "2018-01-29T16:13:02Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.speed) == 1.5F) { this.speed = 3.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6626/buggy-version/src.Game.Anchor.java", "BodyUseAPI": [], "Fixed commit": "ab27f435e19f418a3eb119cdde81448a4549d4fd", "Url": "https://api.github.com/repos/chung3011/feed-me", "Date": "2018-07-02T15:42:09Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gameObject instanceof Game.Effect.ShieldEffect) { this.hasShield = true; }else if (gameObject instanceof Game.Effect.SpeedEffect) { this.speed = 8; }else if (gameObject instanceof Game.ObjectsToCatch.Leaves) { this.movingDirection.multiply((1.0F / 4.0F)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6626/buggy-version/src.Game.Anchor.java", "BodyUseAPI": [], "Fixed commit": "ab27f435e19f418a3eb119cdde81448a4549d4fd", "Url": "https://api.github.com/repos/chung3011/feed-me", "Date": "2018-07-02T15:42:09Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mPhotoGallery.size()) > 0) { mCurrentPhotoPath = mPhotoGallery.get(mCurrentPhotoIndex); android.util.Log.d(\"scroll, size\", java.lang.Integer.toString(mPhotoGallery.size())); android.util.Log.d(\"scroll, current\", java.lang.Integer.toString(mCurrentPhotoIndex)); displayPhoto(mCurrentPhotoPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5306/buggy-version/app.src.main.java.com.example.myapplication.MainActivity.java", "BodyUseAPI": ["java.lang.Integer.toString(int)", "java.util.ArrayList<java.lang.String>.size()", "android.util.Log.d(java.lang.String,java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "3a060e01fce122ea4dead504549ad21acd1d2a1f", "Url": "https://api.github.com/repos/sinnbott/gallery_repo", "Date": "2018-05-02T21:42:45Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fragment.submissions.HarveyBal.Fragment.getInternal()", "fragment.submissions.HarveyBal.Fragment.getInternal()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (stringAlpha.contains(stringBeta)) { int beginIndex = stringAlpha.indexOf(stringBeta); metaLeft = new fragment.submissions.HarveyBal.MergerMeta(beginIndex, (beginIndex + (stringBeta.length())), fragment.submissions.HarveyBal.MergerMeta.Type.MIDDLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2660/buggy-version/src.main.java.fragment.submissions.HarveyBal.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.length()"], "Fixed commit": "1198538179cdc3daa57c1ac2ab3f8e39e4ca6410", "Url": "https://api.github.com/repos/harvey1327/fragment", "Date": "2018-02-27T20:36:28Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.unicode.cldr.tool.GeneratedPluralSamples.CHECK_VALUE) && (d == (org.unicode.cldr.tool.GeneratedPluralSamples.VALUE_TO_CHECK))) { int debug = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7386/buggy-version/tools.java.org.unicode.cldr.tool.GeneratedPluralSamples.java", "BodyUseAPI": [], "Fixed commit": "2f6184d6faea022cc7b4f2ccf94f0b5ef677da9a", "Url": "https://api.github.com/repos/srl295/cldr", "Date": "2013-09-13T19:56:08Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(channel.isConnected())) { channel.finishConnect(); }else { java.lang.System.out.println(\"connection interrupt,close channel ...\"); channel.close(); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/491/buggy-version/src.main.java.com.fs.frame.common.CommonClient.java", "BodyUseAPI": ["java.nio.channels.SocketChannel.close()", "java.nio.channels.SocketChannel.finishConnect()"], "Fixed commit": "50a070188d346e046b4017af8e582ba6a382a364", "Url": "https://api.github.com/repos/fs19910227/Screeen-BroadCast", "Date": "2018-05-04T11:36:12Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (runtime.isBootClassPathSupported()) readClassPath(runtime.getBootClassPath());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3307/buggy-version/src.main.java.antibug.Sandbox.java", "BodyUseAPI": [], "Fixed commit": "b7e1e65c921d0666d5158d8ba32fe46f4b61e97d", "Url": "https://api.github.com/repos/Teletha/Antibug", "Date": "2018-03-27T12:07:46Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (view instanceof android.widget.RadioButton) { ((android.widget.RadioButton) (view)).setButtonDrawable(stateListDrawable); }else { view.setBackground(stateListDrawable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9032/buggy-version/library.src.main.java.com.noober.background.BackgroundFactory.java", "BodyUseAPI": ["android.view.View.setBackground(android.graphics.drawable.StateListDrawable)"], "Fixed commit": "df8847015288f5830d9ee9c26f02dd916b598c10", "Url": "https://api.github.com/repos/JavaNoober/BackgroundLibrary", "Date": "2018-09-17T16:11:15Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event.isCancelled()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6154/buggy-version/src.main.java.cz.HackerGamingCZ.HackerTools.teams.TeamListener.java", "BodyUseAPI": [], "Fixed commit": "5fcc0bc51254d90fd3d4d528f26a578ecf8e6044", "Url": "https://api.github.com/repos/TomasCZE7/HackerTools", "Date": "2018-09-14T12:42:05Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedHashMap<java.lang.Integer, java.util.LinkedHashMap<java.lang.String, java.lang.Object>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(currFrame.containsKey(value_name))) currFrame.put(value_name, value);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5659/buggy-version/src.main.java.ch.epfl.leb.alica.AlicaLogger.java", "BodyUseAPI": ["java.util.LinkedHashMap<java.lang.String, java.lang.Object>.put(java.lang.String,double)"], "Fixed commit": "519a1897b80d28a7b278eac088ed1d0be0acbfc6", "Url": "https://api.github.com/repos/kmdouglass/ALICA", "Date": "2018-06-04T10:27:32Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cookieData.length) < 2) break PARSING_COOKIES;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3292/buggy-version/app.src.main.java.com.aefyr.apheleia.custom.ApheleiaRequest.java", "BodyUseAPI": [], "Fixed commit": "0e099cd7a4a310cdfb3ca651c9e0ad39e009da4e", "Url": "https://api.github.com/repos/Aefyr/Apheleia", "Date": "2018-04-30T19:28:00Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cookieMeta.length) < 3) break PARSING_COOKIES;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3292/buggy-version/app.src.main.java.com.aefyr.apheleia.custom.ApheleiaRequest.java", "BodyUseAPI": [], "Fixed commit": "0e099cd7a4a310cdfb3ca651c9e0ad39e009da4e", "Url": "https://api.github.com/repos/Aefyr/Apheleia", "Date": "2018-04-30T19:28:00Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["response.headers.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cookie == null) break PARSING_COOKIES;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3292/buggy-version/app.src.main.java.com.aefyr.apheleia.custom.ApheleiaRequest.java", "BodyUseAPI": [], "Fixed commit": "0e099cd7a4a310cdfb3ca651c9e0ad39e009da4e", "Url": "https://api.github.com/repos/Aefyr/Apheleia", "Date": "2018-04-30T19:28:00Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<co.smartreceipts.android.model.Distance>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((!(android.text.TextUtils.isEmpty(distance.getComment()))) && (!(comments.contains(distance.getComment())))) { comments.add(distance.getComment()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/745/buggy-version/app.src.main.java.co.smartreceipts.android.model.converters.DistanceToReceiptsConverter.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(distance.getComment())", "co.smartreceipts.android.model.Distance.getComment()"], "Fixed commit": "7c99c1c48bcf941681c4dee80c284b65290f746b", "Url": "https://api.github.com/repos/wbaumann/SmartReceiptsLibrary", "Date": "2018-03-24T16:47:26Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(comments.isEmpty())) { factory.setComment(android.text.TextUtils.join(\"; \", comments)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/745/buggy-version/app.src.main.java.co.smartreceipts.android.model.converters.DistanceToReceiptsConverter.java", "BodyUseAPI": ["co.smartreceipts.android.model.factory.ReceiptBuilderFactory.setComment(android.text.TextUtils.join(\"; \", comments))", "android.text.TextUtils.join(java.lang.String,java.util.ArrayList<java.lang.String>)"], "Fixed commit": "7c99c1c48bcf941681c4dee80c284b65290f746b", "Url": "https://api.github.com/repos/wbaumann/SmartReceiptsLibrary", "Date": "2018-03-24T16:47:26Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.props.length) == 0) return new sneps.network.classes.setClasses.PropositionSet();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3614/buggy-version/src.sneps.network.classes.setClasses.PropositionSet.java", "BodyUseAPI": [], "Fixed commit": "3768a8f5a0ccc584fcfbd0c005583840d85720e0", "Url": "https://api.github.com/repos/Java-SNePS/Java-SNePS-3.0", "Date": "2018-05-26T01:12:13Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(TestRunArg.ICS.toString())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((pstr == null) || (pstr.isEmpty())) { pstr = this.ICS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1217/buggy-version/src.main.java.org.opengis.cite.gpkg12.CommonFixture.java", "BodyUseAPI": [], "Fixed commit": "5640f979043672d8cefbd9da0bed5647128d1d0c", "Url": "https://api.github.com/repos/jyutzler/ets-gpkg12", "Date": "2017-11-22T13:12:03Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gridLineSize) == 0) { main.Program.P.noStroke(); }else { main.Program.P.strokeWeight(gridLineSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5050/buggy-version/src.automata.Grid.java", "BodyUseAPI": [], "Fixed commit": "162aeb1bc3e2a9744cb9217ea331b50d0c12d163", "Url": "https://api.github.com/repos/Pilex1/ProcessingGUI", "Date": "2018-02-13T11:14:56Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getTypeForAnnotation(annotationMirror)) == element) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9831/buggy-version/inject.src.main.java.io.micronaut.inject.annotation.AbstractAnnotationMetadataBuilder.java", "BodyUseAPI": [], "Fixed commit": "767547aaf80fca90b95d7511e42856808afa7cb9", "Url": "https://api.github.com/repos/micronaut-projects/micronaut-core", "Date": "2018-06-11T20:08:00Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e instanceof com.intellij.openapi.diagnostic.ControlFlowException) { log.info(\"Exception while calling if active\", e); }else { log.error(\"Error while calling if active\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4836/buggy-version/GitToolBox.src.main.java.zielu.gittoolbox.fetch.AutoFetchExecutor.java", "BodyUseAPI": ["com.intellij.openapi.diagnostic.Logger.info(java.lang.String,java.lang.Exception)", "com.intellij.openapi.diagnostic.Logger.error(java.lang.String,java.lang.Exception)"], "Fixed commit": "2f91622facc50316b1935b6cb36b98d4ba60107c", "Url": "https://api.github.com/repos/zielu/GitToolBox", "Date": "2018-08-27T19:25:30Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (content.isEmpty()) return \"Invalid content.\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1663/buggy-version/backend.src.main.java.star.programmers.annaabi.controllers.CommentController.java", "BodyUseAPI": [], "Fixed commit": "d99f42727bf931d7b478330881de0260438d245c", "Url": "https://api.github.com/repos/Heeler0/Tarkvara_tehnika_annaabi", "Date": "2018-05-14T16:38:12Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["star.programmers.annaabi.controllers.UploadRepository.findById(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(upload.isPresent())) return \"Invalid file id.\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1663/buggy-version/backend.src.main.java.star.programmers.annaabi.controllers.CommentController.java", "BodyUseAPI": [], "Fixed commit": "d99f42727bf931d7b478330881de0260438d245c", "Url": "https://api.github.com/repos/Heeler0/Tarkvara_tehnika_annaabi", "Date": "2018-05-14T16:38:12Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arduinoPort) != null) { s = arduinoPort.readString(); }else { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1310/buggy-version/src.util.ArduinoSerialRead.java", "BodyUseAPI": [], "Fixed commit": "db70a530ce1b1ca6489672013b44492ba24a0b77", "Url": "https://api.github.com/repos/SkylineSpartabots/FRC-2018", "Date": "2018-02-21T04:58:57Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (strUrl.toLowerCase().startsWith(\"https\")) { try { handler = new sun.net.www.protocol.https.Handler(); } catch (java.lang.Exception e) { handler = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5618/buggy-version/brainstorm.src.org.brainstorm.file.BstDownload.java", "BodyUseAPI": [], "Fixed commit": "32a42660a0c3cf48144d21cd9783d4b3e7148ff6", "Url": "https://api.github.com/repos/martcous/bst-java", "Date": "2018-08-21T20:15:09Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numCorresp <= 0) && (numCoeff <= 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8243/buggy-version/src.edu.stanford.rsl.tutorial.mipda.ExerciseGeoU.java", "BodyUseAPI": [], "Fixed commit": "62e7f0b1c15f80d781f75552ae6e1b7438dc5d57", "Url": "https://api.github.com/repos/fau-mipda/CONRAD", "Date": "2018-04-16T00:29:19Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reactBrowserPanel.itemSelection) == null) selectedReaction = selectedRow; else selectedReaction = reactBrowserPanel.itemSelection[selectedRow];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4976/buggy-version/src.main.java.pu.reactor.workspace.gui.ReactionBrowser.java", "BodyUseAPI": [], "Fixed commit": "f0588f0e4e5405bb305abf8404af6d17fc93f8f1", "Url": "https://api.github.com/repos/PUCompChem/JBSMM2", "Date": "2018-02-22T10:16:05Z"},
{"Line": "=>516", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(fc.getSelectedFile().getPath().endsWith(\".png\"))) fc.setSelectedFile(new java.io.File(((fc.getSelectedFile().getPath()) + \".png\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/335/buggy-version/src.main.java.com.github.monster860.fastdmm.FastDMM.java", "BodyUseAPI": ["javax.swing.JFileChooser.setSelectedFile(java.io.File)", "javax.swing.JFileChooser.getSelectedFile()", "java.io.File.getPath()"], "Fixed commit": "c80b810118c873d390ca7a7b4eac9230d6f02dde", "Url": "https://api.github.com/repos/tgstation/FastDMM", "Date": "2018-01-30T01:04:03Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mbds.barcodebattler.util.BarcodeBattlerDatabaseAdapter.getCreatures()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (savedCreatures != null) { for (org.mbds.barcodebattler.data.ICreature savedCreature : savedCreatures) { if (savedCreature.getType().equals(\"SUPERHERO\")) { data.addSuperheroe(savedCreature); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/461/buggy-version/app.src.main.java.org.mbds.barcodebattler.CreaturesPoolActivity.java", "BodyUseAPI": [], "Fixed commit": "1b73f56a1200ef288d620e6f7821e44f70314001", "Url": "https://api.github.com/repos/estellerostan/barcode-battler-android", "Date": "2018-02-11T21:34:34Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((photoUrls.get(getAdapterPosition())) != null) { com.btb.nixorstudentapplication.Sharks_on_cloud.ImageViewver.ImageViewer imageViewer = new com.btb.nixorstudentapplication.Sharks_on_cloud.ImageViewver.ImageViewer(photoUrls, getAdapterPosition()); imageViewer.startActivity(Soc_Main.context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7899/buggy-version/app.src.main.java.com.btb.nixorstudentapplication.Sharks_on_cloud.Adaptors.BucketData_Adaptor.java", "BodyUseAPI": [], "Fixed commit": "25324b931afe64be944a27cb8e95afb3aae79c54", "Url": "https://api.github.com/repos/Talha-Siddiqui3/nsp12app", "Date": "2018-07-17T21:51:42Z"},
{"Line": "=>1073", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (stageIdx != null) { response.setRuleCurIdx(stageIdx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7813/buggy-version/discovery-server.src.main.java.app.metatron.discovery.domain.dataprep.transform.PrepTransformService.java", "BodyUseAPI": ["app.metatron.discovery.domain.dataprep.transform.PrepTransformResponse.setRuleCurIdx(java.lang.Integer)"], "Fixed commit": "6406abc0d898ca43cac4dfbe7b066163999ff411", "Url": "https://api.github.com/repos/metatron-app/metatron-discovery", "Date": "2018-09-14T02:49:45Z"},
{"Line": "=>1106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (JdbcConstants.MYSQL.equals(dbType)) { putChar('\\\\'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1410/buggy-version/src.main.java.com.alibaba.druid.sql.parser.Lexer.java", "BodyUseAPI": [], "Fixed commit": "9e0747a32fafad35e69b32ce87c10abfc31da2d2", "Url": "https://api.github.com/repos/VictorZeng/druid", "Date": "2018-03-10T13:09:27Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["redisTemplate.opsForValue().setIfAbsent(java.lang.String,T)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ifAbsent) { expire(key, time, java.util.concurrent.TimeUnit.SECONDS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7116/buggy-version/src.main.java.com.roger.manager.RedisCacheManager.java", "BodyUseAPI": [], "Fixed commit": "c4dcef0915a7e7cba0922b59a096173dae895e06", "Url": "https://api.github.com/repos/LiHongTai/base-spring-redis", "Date": "2018-09-25T11:48:32Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((den) < 0) { den *= -1; num *= -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6717/buggy-version/RationalNumber.java", "BodyUseAPI": [], "Fixed commit": "1956b9cf3624959a72e00c6018d77217092e554e", "Url": "https://api.github.com/repos/bryanlai00/MKS21X-Numbers", "Date": "2018-10-17T14:06:14Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cmd.getIntAttribute(jsonKey.TRACK_ID.name())) != (party.get_current_track_id())) { party.next_song(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8365/buggy-version/serverModule.Party_thread.java", "BodyUseAPI": ["Party.next_song()"], "Fixed commit": "af5b800346a5d7a1230d0bebd2317872c6cc1ee0", "Url": "https://api.github.com/repos/ViBeatApp/ViBeat", "Date": "2018-05-24T06:48:01Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.getItemInHand(HandTypes.MAIN_HAND).get()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (amount == (stack.getQuantity())) { player.setItemInHand(HandTypes.MAIN_HAND, null); }else { if (amount > (stack.getQuantity())) { player.sendMessage(org.spongepowered.api.text.Text.of(TextColors.RED, \"You can not sell more than what you're holding.\")); return org.spongepowered.api.command.CommandResult.success(); } stack.setQuantity(amount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7516/buggy-version/src.main.java.com.xwaffle.universalmarket.commands.MarketCommand.java", "BodyUseAPI": ["org.spongepowered.api.item.inventory.ItemStack.getQuantity()", "org.spongepowered.api.item.inventory.ItemStack.setQuantity(int)"], "Fixed commit": "5056ba04cbb91fea9fe9c3b117e292ac7c4c7c6c", "Url": "https://api.github.com/repos/Xwaffle1/UniversalMarket", "Date": "2018-02-21T02:44:04Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operandStack.empty()) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8400/buggy-version/src.main.java.org.verapdf.parser.postscript.PSOperator.java", "BodyUseAPI": [], "Fixed commit": "49cb5dd6c4b1411dec73ec69c4b3808e802d2866", "Url": "https://api.github.com/repos/RezviyBelorus/veraPDF-parser", "Date": "2018-02-26T08:14:48Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<org.verapdf.parser.postscript.COSObject>.peek()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((lastOperand.getType()) == (COSObjType.COS_NAME)) && (lastOperand.getString().equals(\"Encoding\"))) { operandStack.pop(); userDict.put(lastOperand.getName(), org.verapdf.parser.postscript.COSName.construct(ASAtom.STANDARD_ENCODING)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8400/buggy-version/src.main.java.org.verapdf.parser.postscript.PSOperator.java", "BodyUseAPI": ["java.util.Map<org.verapdf.as.ASAtom, org.verapdf.parser.postscript.COSObject>.put(lastOperand.getName(),org.verapdf.parser.postscript.COSName.construct(ASAtom.STANDARD_ENCODING))", "org.verapdf.parser.postscript.COSObject.getName()"], "Fixed commit": "49cb5dd6c4b1411dec73ec69c4b3808e802d2866", "Url": "https://api.github.com/repos/RezviyBelorus/veraPDF-parser", "Date": "2018-02-26T08:14:48Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.haniibrahim.seriallogger.SerialLogger.2.saveBuffer()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ret) { setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE); }else { setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9152/buggy-version/de.haniibrahim.seriallogger.SerialLogger.java", "BodyUseAPI": [], "Fixed commit": "98efcfecee440c38394f11148e5bdc391100b554", "Url": "https://api.github.com/repos/haniibrahim/SerialLogger", "Date": "2018-10-23T15:52:00Z"},
{"Line": "=>673", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getStmtLocked) == null) { org.datanucleus.store.rdbms.sql.SQLStatement sqlStmt = getSQLStatementForGet(ownerOP); getStmtUnlocked = sqlStmt.getSQLText().toSQL(); sqlStmt.addExtension(SQLStatement.EXTENSION_LOCK_FOR_UPDATE, true); getStmtLocked = sqlStmt.getSQLText().toSQL(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5953/buggy-version/src.main.java.org.datanucleus.store.rdbms.scostore.JoinMapStore.java", "BodyUseAPI": [], "Fixed commit": "15733b4525960dda8050f64aad916c42e13f39aa", "Url": "https://api.github.com/repos/aihuaxu/datanucleus-rdbms", "Date": "2018-06-11T22:13:18Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isActive) { com.ethanmajidi.javagame.Scenes.Hud.addScore(100); isActive = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2443/buggy-version/core.src.com.ethanmajidi.javagame.Sprites.Coin.java", "BodyUseAPI": [], "Fixed commit": "ebe59bd0f07b93b95610b1e53a6ec34ae63bd905", "Url": "https://api.github.com/repos/EthanMajidi/ICS4U1a201718_FinalProject", "Date": "2018-01-24T02:54:57Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (month_name.equals(cur_month_tv.getText().toString())) { if ((patient) != null) { if ((patient.getDay_map_smoke()) != null) drawSmokeGraphWithInt(patient.getDay_map_smoke()); } }else { java.util.HashMap<java.lang.String, java.lang.Long> smoking_days_value = ((java.util.HashMap<java.lang.String, java.lang.Long>) (dataSnapshot.getValue())); if (smoking_days_value != null) { drawSmokeGraph(smoking_days_value); }else { showToast(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2922/buggy-version/app.src.main.java.com.example.android.quitit.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3db796c82858fc6ecbefd6a09223f23f0ae8b20e", "Url": "https://api.github.com/repos/pulkitgpt27/Quit_it-0.4", "Date": "2018-04-29T08:55:51Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (month_name.equals(cur_month_tv.getText().toString())) { if ((patient) != null) { if ((patient.getDay_map_chew()) != null) drawChewGraphWithInt(patient.getDay_map_smoke()); } }else { java.util.HashMap<java.lang.String, java.lang.Long> chewing_days_value = ((java.util.HashMap<java.lang.String, java.lang.Long>) (dataSnapshot.getValue())); if (chewing_days_value != null) { drawChewGraph(chewing_days_value); }else showToast(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2922/buggy-version/app.src.main.java.com.example.android.quitit.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3db796c82858fc6ecbefd6a09223f23f0ae8b20e", "Url": "https://api.github.com/repos/pulkitgpt27/Quit_it-0.4", "Date": "2018-04-29T08:55:51Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.carolinarollergirls.scoreboard.json.ScoreBoardEvent.getProperty()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((!(prop.equals(ScoreBoard.EVENT_ADD_CLOCK))) && (!(prop.equals(ScoreBoard.EVENT_ADD_TEAM)))) { update(\"ScoreBoard\", prop, v); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8149/buggy-version/src.com.carolinarollergirls.scoreboard.json.ScoreBoardJSONListener.java", "BodyUseAPI": ["com.carolinarollergirls.scoreboard.json.ScoreBoardJSONListener.update(java.lang.String,java.lang.String,java.lang.Object)"], "Fixed commit": "2ff975690cb17531fd308dff6ad4f4441b6a1eea", "Url": "https://api.github.com/repos/official-sounding/scoreboard", "Date": "2018-06-28T01:55:42Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((right) != null) { rightHeight = right.height; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9530/buggy-version/src.eg.edu.alexu.csd.filestructure.avl.cs.Node.java", "BodyUseAPI": [], "Fixed commit": "e1c0ed82ece1d165fc17329d2e69585684d1a89a", "Url": "https://api.github.com/repos/abdelhakeem/cs223-lab02", "Date": "2018-03-20T11:24:10Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((left) != null) { leftHeight = left.height; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9530/buggy-version/src.eg.edu.alexu.csd.filestructure.avl.cs.Node.java", "BodyUseAPI": [], "Fixed commit": "e1c0ed82ece1d165fc17329d2e69585684d1a89a", "Url": "https://api.github.com/repos/abdelhakeem/cs223-lab02", "Date": "2018-03-20T11:24:10Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (otherHalf == (nums[i])) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9474/buggy-version/leetcode.two-sum.java", "BodyUseAPI": [], "Fixed commit": "c9c26adfeb1aa210347bb03b5c6b390043478862", "Url": "https://api.github.com/repos/comcaptain/study", "Date": "2018-10-12T14:26:57Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (input.isEmpty()) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/919/buggy-version/import.src.org.aliPATH.chatroom.api.commands.CommandManager.java", "BodyUseAPI": [], "Fixed commit": "fafb6310fae6576e33c6b9cfc5fef0b81e450746", "Url": "https://api.github.com/repos/Zeale/java-library", "Date": "2018-07-11T07:10:38Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (listOfStations != null) { for (int i = 0; i < (((java.util.ArrayList) (listOfStations)).size()); i++) { listOfMaps.add(getDataID(((java.util.ArrayList) (listOfStations)).get(i).toString())); } java.util.ArrayList<java.util.HashMap> tmp = ((java.util.ArrayList) (listOfMaps.clone())); provinceStations.put(key.toString(), tmp); listOfMaps.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8461/buggy-version/src.main.java.app.data.Data.java", "BodyUseAPI": [], "Fixed commit": "6db9bd83bcb5b6f0553bef24744effbf7754b6db", "Url": "https://api.github.com/repos/SankowskiWojciech/Pollution-App", "Date": "2018-06-17T11:50:05Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timeEffect) > 0) { (timeEffect)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3507/buggy-version/src.physic.entity.Joueur.java", "BodyUseAPI": [], "Fixed commit": "12791959d1f963536cb31241ac89c76bd7c7439c", "Url": "https://api.github.com/repos/TheTisiboth/PLA_2018", "Date": "2018-06-04T14:15:09Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((destination.equalsIgnoreCase(\"lakrum\")) || (destination.equalsIgnoreCase(\"Lakrum\"))) { if ((player.getRace()) == (com.aionemu.gameserver.model.Race.ELYOS)) { admincommands.GoTo.goTo(player, 600200000, 2688.5857F, 487.36588F, 323.3768F, ((byte) (110))); }else if ((player.getRace()) == (com.aionemu.gameserver.model.Race.ASMODIANS)) { admincommands.GoTo.goTo(player, 600200000, 2925.3015F, 2505.124F, 313.80035F, ((byte) (90))); } }else if (destination.equalsIgnoreCase(\"Karamatis 0\")) { admincommands.GoTo.goTo(player, 310010000, 221, 250, 206); }else if (destination.equalsIgnoreCase(\"Karamatis 1\")) { admincommands.GoTo.goTo(player, 310020000, 312, 274, 206); }else if (destination.equalsIgnoreCase(\"Karamatis 2\")) { admincommands.GoTo.goTo(player, 310120000, 221, 250, 206); }else if (destination.equalsIgnoreCase(\"Aerdina\")) { admincommands.GoTo.goTo(player, 310030000, 275, 168, 205); }else if (destination.equalsIgnoreCase(\"Geranaia\")) { admincommands.GoTo.goTo(player, 310040000, 275, 168, 205); }else if ((destination.equalsIgnoreCase(\"Sliver\")) || (destination.equalsIgnoreCase(\"Sliver of Darkness\"))) { admincommands.GoTo.goTo(player, 310070000, 247, 249, 1392); }else if ((destination.equalsIgnoreCase(\"Space\")) || (destination.equalsIgnoreCase(\"Space of Destiny\"))) { admincommands.GoTo.goTo(player, 320070000, 246, 246, 125); }else if (destination.equalsIgnoreCase(\"AtaPATHr 1\")) { admincommands.GoTo.goTo(player, 320010000, 221, 250, 206); }else if (destination.equalsIgnoreCase(\"AtaPATHr 2\")) { admincommands.GoTo.goTo(player, 320020000, 221, 250, 206); }else if (destination.equalsIgnoreCase(\"Bregirun\")) { admincommands.GoTo.goTo(player, 320030000, 275, 168, 205); }else if (destination.equalsIgnoreCase(\"Nidalber\")) { admincommands.GoTo.goTo(player, 320040000, 275, 168, 205); }else if (destination.equalsIgnoreCase(\"Sanctum Arena\")) { admincommands.GoTo.goTo(player, 310080000, 275, 242, 159); }else if (destination.equalsIgnoreCase(\"Triniel Arena\")) { admincommands.GoTo.goTo(player, 320090000, 275, 239, 159); }else if (destination.equalsIgnoreCase(\"Crucible 1-0\")) { admincommands.GoTo.goTo(player, 300300000, 380, 350, 95); }else if (destination.equalsIgnoreCase(\"Crucible 1-1\")) { admincommands.GoTo.goTo(player, 300300000, 346, 350, 96); }else if (destination.equalsIgnoreCase(\"Crucible 5-0\")) { admincommands.GoTo.goTo(player, 300300000, 1265, 821, 359); }else if (destination.equalsIgnoreCase(\"Crucible 5-1\")) { admincommands.GoTo.goTo(player, 300300000, 1256, 797, 359); }else if (destination.equalsIgnoreCase(\"Crucible 6-0\")) { admincommands.GoTo.goTo(player, 300300000, 1596, 150, 129); }else if (destination.equalsIgnoreCase(\"Crucible 6-1\")) { admincommands.GoTo.goTo(player, 300300000, 1628, 155, 126); }else if (destination.equalsIgnoreCase(\"Crucible 7-0\")) { admincommands.GoTo.goTo(player, 300300000, 1813, 797, 470); }else if (destination.equalsIgnoreCase(\"Crucible 7-1\")) { admincommands.GoTo.goTo(player, 300300000, 1785, 797, 470); }else if (destination.equalsIgnoreCase(\"Crucible 8-0\")) { admincommands.GoTo.goTo(player, 300300000, 1776, 1728, 304); }else if (destination.equalsIgnoreCase(\"Crucible 8-1\")) { admincommands.GoTo.goTo(player, 300300000, 1776, 1760, 304); }else if (destination.equalsIgnoreCase(\"Crucible 9-0\")) { admincommands.GoTo.goTo(player, 300300000, 1357, 1748, 320); }else if (destination.equalsIgnoreCase(\"Crucible 9-1\")) { admincommands.GoTo.goTo(player, 300300000, 1334, 1741, 316); }else if (destination.equalsIgnoreCase(\"Crucible 10-0\")) { admincommands.GoTo.goTo(player, 300300000, 1750, 1255, 395); }else if (destination.equalsIgnoreCase(\"Crucible 10-1\")) { admincommands.GoTo.goTo(player, 300300000, 1761, 1280, 395); }else if (destination.equalsIgnoreCase(\"Arena Of Chaos - 1\")) { admincommands.GoTo.goTo(player, 300350000, 1332, 1078, 340); }else if (destination.equalsIgnoreCase(\"Arena Of Chaos - 2\")) { admincommands.GoTo.goTo(player, 300350000, 599, 1854, 227); }else if (destination.equalsIgnoreCase(\"Arena Of Chaos - 3\")) { admincommands.GoTo.goTo(player, 300350000, 663, 265, 512); }else if (destination.equalsIgnoreCase(\"Arena Of Chaos - 4\")) { admincommands.GoTo.goTo(player, 300350000, 1840, 1730, 302); }else if (destination.equalsIgnoreCase(\"Arena Of Chaos - 5\")) { admincommands.GoTo.goTo(player, 300350000, 1932, 1228, 270); }else if (destination.equalsIgnoreCase(\"Arena Of Chaos - 6\")) { admincommands.GoTo.goTo(player, 300350000, 1949, 946, 224); }else if ((destination.equalsIgnoreCase(\"Prison LF\")) || (destination.equalsIgnoreCase(\"Prison Elyos\"))) { admincommands.GoTo.goTo(player, 510010000, 256, 256, 49); }else if ((destination.equalsIgnoreCase(\"Prison DF\")) || (destination.equalsIgnoreCase(\"Prison Asmos\"))) { admincommands.GoTo.goTo(player, 520010000, 256, 256, 49); }else if (destination.equalsIgnoreCase(\"Test Dungeon\")) { admincommands.GoTo.goTo(player, 300020000, 104, 66, 25); }else if (destination.equalsIgnoreCase(\"Test Basic\")) { admincommands.GoTo.goTo(player, 900020000, 144, 136, 20); }else if (destination.equalsIgnoreCase(\"Test Server\")) { admincommands.GoTo.goTo(player, 900030000, 300, 200, 79); }else if (destination.equalsIgnoreCase(\"Test GiantMonster\")) { admincommands.GoTo.goTo(player, 900100000, 196, 187, 20); }else if (destination.equalsIgnoreCase(\"IDAbPro\")) { admincommands.GoTo.goTo(player, 300010000, 270, 200, 206); }else if (destination.equalsIgnoreCase(\"gm\")) { admincommands.GoTo.goTo(player, 210010000, 1703, 1472, 118); }else if (destination.equalsIgnoreCase(\"Pernon\")) { admincommands.GoTo.goTo(player, 710010000, 1069, 1539, 98); }else if (destination.equalsIgnoreCase(\"Pernon Studio\")) { admincommands.GoTo.goTo(player, 710010000, 1197, 2771, 236); }else if (destination.equalsIgnoreCase(\"Oriel\")) { admincommands.GoTo.goTo(player, 700010000, 1261, 1845, 98); }else if (destination.equalsIgnoreCase(\"Oriel Studio\")) { admincommands.GoTo.goTo(player, 700010000, 2569, 1960, 182); }else if (destination.equalsIgnoreCase(\"Protectrice\")) { admincommands.GoTo.goTo(player, 300330000, 250, 246, 124); }else if (destination.equalsIgnoreCase(\"Haramel\")) { admincommands.GoTo.goTo(player, 300200000, 178, 20, 144); }else if ((destination.equalsIgnoreCase(\"Arcanis\")) || (destination.equalsIgnoreCase(\"Sky Temple of Arcanis\"))) { admincommands.GoTo.goTo(player, 320050000, 177, 229, 536); }else if ((destination.equalsIgnoreCase(\"Fire Temple\")) || (destination.equalsIgnoreCase(\"FT\"))) { admincommands.GoTo.goTo(player, 320100000, 148, 456, 141); }else if ((destination.equalsIgnoreCase(\"Kromede\")) || (destination.equalsIgnoreCase(\"Kromede Trial\"))) { admincommands.GoTo.goTo(player, 300230000, 248, 244, 189); }else if ((destination.equalsIgnoreCase(\"Indratu\")) || (destination.equalsIgnoreCase(\"Indratu Fortress\"))) { admincommands.GoTo.goTo(player, 310090000, 562, 335, 1015); }else if ((destination.equalsIgnoreCase(\"Azoturan\")) || (destination.equalsIgnoreCase(\"Azoturan Fortress\"))) { admincommands.GoTo.goTo(player, 310100000, 458, 428, 1039); }else if ((destination.equalsIgnoreCase(\"Bio Lab\")) || (destination.equalsIgnoreCase(\"Aetherogenetics Lab\"))) { admincommands.GoTo.goTo(player, 310050000, 225, 244, 133); }else if (destination.equalsIgnoreCase(\"Dredgion\")) { admincommands.GoTo.goTo(player, 300110000, 414, 193, 431); }else if ((destination.equalsIgnoreCase(\"Chantra\")) || (destination.equalsIgnoreCase(\"Chantra Dredgion\"))) { admincommands.GoTo.goTo(player, 300210000, 414, 193, 431); }else if ((destination.equalsIgnoreCase(\"Terath\")) || (destination.equalsIgnoreCase(\"Terath Dredgion\"))) { admincommands.GoTo.goTo(player, 300440000, 414, 193, 431); }else if ((destination.equalsIgnoreCase(\"Bakarma\")) || (destination.equalsIgnoreCase(\"Bakarma Fortress\"))) { admincommands.GoTo.goTo(player, 320170000, 562, 334, 1015); }else if ((destination.equalsIgnoreCase(\"Taloc\")) || (destination.equalsIgnoreCase(\"Taloc's Hollow\"))) { admincommands.GoTo.goTo(player, 300190000, 192, 219, 1098); }else if ((destination.equalsIgnoreCase(\"Udas Lower\")) || (destination.equalsIgnoreCase(\"Udas Lower Temple\"))) { admincommands.GoTo.goTo(player, 300160000, 1335, 779, 111); }else if (destination.equalsIgnoreCase(\"Esoterrace\")) { admincommands.GoTo.goTo(player, 300250000, 340, 452, 326); }else if (((destination.equalsIgnoreCase(\"Beshmundir\")) || (destination.equalsIgnoreCase(\"BT\"))) || (destination.equalsIgnoreCase(\"Beshmundir Temple\"))) { admincommands.GoTo.goTo(player, 300170000, 1477, 249, 243); }else if ((destination.equalsIgnoreCase(\"refuge\")) || (destination.equalsIgnoreCase(\"Dragon Lord Refuge\"))) { admincommands.GoTo.goTo(player, 300520000, 505, 526, 240); }else if ((destination.equalsIgnoreCase(\"stronghold\")) || (destination.equalsIgnoreCase(\"Tiamat Stronghold\"))) { admincommands.GoTo.goTo(player, 300510000, 1581, 1068, 492); }else if ((destination.equalsIgnoreCase(\"harmonyTraining\")) || (destination.equalsIgnoreCase(\"Harmony Training Grounds\"))) { admincommands.GoTo.goTo(player, 300570000, 500, 371, 211); }else if ((destination.equalsIgnoreCase(\"glory\")) || (destination.equalsIgnoreCase(\"Arena Of Glory\"))) { admincommands.GoTo.goTo(player, 300550000, 500, 371, 211); }else if ((destination.equalsIgnoreCase(\"hell_pass\")) || (destination.equalsIgnoreCase(\"Hell Pass\"))) { admincommands.GoTo.goTo(player, 301630000, 229.00113F, 171.8445F, 164.60031F, ((byte) (20))); }else if ((destination.equalsIgnoreCase(\"weapon_factory\")) || (destination.equalsIgnoreCase(\"Mechanerks Weapons Factory\"))) { admincommands.GoTo.goTo(player, 301640000, 400.3279F, 290.5061F, 198.64015F, ((byte) (60))); }else if ((destination.equalsIgnoreCase(\"ashunatal\")) || (destination.equalsIgnoreCase(\"Ashunatal Dredgion\"))) { admincommands.GoTo.goTo(player, 301650000, 414, 193, 431); }else if ((destination.equalsIgnoreCase(\"tower\")) || (destination.equalsIgnoreCase(\"Tower of Challenge\"))) { admincommands.GoTo.goTo(player, 302400000, 223.03874F, 249.47852F, 241.08308F, ((byte) (0))); }else if ((destination.equalsIgnoreCase(\"narakkalli\")) || (destination.equalsIgnoreCase(\"Narakkalli\"))) { admincommands.GoTo.goTo(player, 302340000, 1317.6039F, 1360.2423F, 494.76074F, ((byte) (75))); }else if ((destination.equalsIgnoreCase(\"neviwind\")) || (destination.equalsIgnoreCase(\"Neviwind Canyon\"))) { admincommands.GoTo.goTo(player, 302350000, 1108.7395F, 746.5648F, 336.33923F, ((byte) (60))); }else if ((destination.equalsIgnoreCase(\"holy\")) || (destination.equalsIgnoreCase(\"Holy Tower\"))) { admincommands.GoTo.goTo(player, 310160000, 76.61565F, 204.50403F, 419.9462F, ((byte) (60))); }else if ((destination.equalsIgnoreCase(\"treasure\")) || (destination.equalsIgnoreCase(\"Treasure Island of Courage\"))) { admincommands.GoTo.goTo(player, 301700000, 1370.3208F, 1381.8193F, 375.19562F, ((byte) (60))); }else if ((destination.equalsIgnoreCase(\"mirash\")) || (destination.equalsIgnoreCase(\"Mirash Sanctum\"))) { admincommands.GoTo.goTo(player, 301720000, 770.9657F, 831.978F, 520.6439F, ((byte) (60))); }else if ((destination.equalsIgnoreCase(\"workshop\")) || (destination.equalsIgnoreCase(\"Prometuns Workshop\"))) { admincommands.GoTo.goTo(player, 302430000, 456.6875F, 805.88556F, 811.7392F, ((byte) (0))); }else if ((destination.equalsIgnoreCase(\"rentus\")) || (destination.equalsIgnoreCase(\"Rentus Base\"))) { admincommands.GoTo.goTo(player, 300280000, 557.61523F, 593.1484F, 154.125F, ((byte) (73))); }else if ((destination.equalsIgnoreCase(\"markana\")) || (destination.equalsIgnoreCase(\"Markana\"))) { admincommands.GoTo.goTo(player, 301520000, 324.51382F, 183.24435F, 1687.2552F, ((byte) (0))); }else if ((destination.equalsIgnoreCase(\"garden\")) || (destination.equalsIgnoreCase(\"Garden of Knowledge\"))) { admincommands.GoTo.goTo(player, 301550000, 1484.535F, 780.51636F, 1035.2672F, ((byte) (60))); }else if ((destination.equalsIgnoreCase(\"garden_bonus\")) || (destination.equalsIgnoreCase(\"Garden of Knowledge (Bonus)\"))) { admincommands.GoTo.goTo(player, 302490000, 1484.535F, 780.51636F, 1035.2672F, ((byte) (60))); }else { com.aionemu.gameserver.utils.PacketSendUtility.sendMessage(player, \"Could not find the specified destination !\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1301/buggy-version/AL-Game.data.scripts.system.handlers.admincommands.GoTo.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "c98afa788502652ed4404e2f60397ca8aa97401e", "Url": "https://api.github.com/repos/AionGermany/aion-germany", "Date": "2018-09-16T13:47:57Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pointsAtStartAndEnd && (i == (numPoints - 1))) { result.add(points.get(((points.size()) - 1))); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3992/buggy-version/src.org.osm2world.core.math.GeometryUtil.java", "BodyUseAPI": [], "Fixed commit": "b4e9fbbf3516fe57b19c9f293c60bf503282e894", "Url": "https://api.github.com/repos/tordanik/OSM2World", "Date": "2018-03-17T09:21:27Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (est == null) { est = new java.util.LinkedHashSet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5811/buggy-version/src.polyglot.ext.jl5.types.inference.LubType_c.java", "BodyUseAPI": [], "Fixed commit": "7ab56d12883b717fc8fb8084e85143b577c055ea", "Url": "https://api.github.com/repos/polyglot-compiler/polyglot", "Date": "2018-10-11T17:04:12Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (userName == null) { try { org.apache.hadoop.security.authentication.server.AuthenticationToken token = getToken(request); userName = token.getUserName(); } catch (org.apache.ranger.security.web.filter.org.apache.hadoop e) { org.apache.ranger.security.web.filter.AltiscaleRangerAuthFilter.LOG.error((\"User authentication is failed!. The user details cannot be fetched from the portal! [Exception]: \" + (e.getMessage()))); sendErrorResponseToRequest(request, response, e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7936/buggy-version/security-admin.src.main.java.org.apache.ranger.security.web.filter.AltiscaleRangerAuthFilter.java", "BodyUseAPI": [], "Fixed commit": "f1a64b8d341b260241406ed73e84853dabe2cc1a", "Url": "https://api.github.com/repos/Altiscale/ranger", "Date": "2018-05-03T16:55:37Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line.isEmpty()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8385/buggy-version/src.main.java.com.therandomlabs.changeloggenerator.IC2Handler.java", "BodyUseAPI": [], "Fixed commit": "180226a94c8b00bc9beecb037b1f9dcd3d991de5", "Url": "https://api.github.com/repos/TheRandomLabs/ChangelogGenerator", "Date": "2018-10-30T04:32:02Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((univFamilyList.size()) == (familyResquestDto.getUnivIds().size())) { family = familyRepository.save(family); univFamilyRepository.saveAll(univFamilyList); return family; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9484/buggy-version/src.main.java.com.example.demo.serviceImpl.FamilyServiceImpl.java", "BodyUseAPI": ["com.example.demo.repository.UnivFamilyRepository.saveAll(java.util.List<com.example.demo.model.UnivFamily>)"], "Fixed commit": "827825bed21b762a1468ca35095b7d37dd1a4419", "Url": "https://api.github.com/repos/Lazybin03/assignment", "Date": "2018-08-14T21:53:12Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.activity.CropActivity.findPoints()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (points != null) { mSelectionImageView.setPoints(points); }else { com.owncloud.android.lib.common.utils.Log_OC.d(com.owncloud.android.ui.activity.CropActivity.TAG, getResources().getString(R.string.no_contour_found)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5017/buggy-version/src.com.owncloud.android.ui.activity.CropActivity.java", "BodyUseAPI": ["com.owncloud.android.ui.QuadrilateralSelectionImageView.setPoints(java.util.List<android.graphics.PointF>)"], "Fixed commit": "2dc1a09117623ce867ae66d00a699e3b2a16fd31", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-03-12T06:43:04Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bouncycastle.openssl.PEMParser.readObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(parsed instanceof org.bouncycastle.openssl.PEMKeyPair)) { throw new org.cloudfoundry.credhub.util.PrivateKeyReader.UnsupportedFormatException(\"format of private key is not supported.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7668/buggy-version/src.main.java.org.cloudfoundry.credhub.util.PrivateKeyReader.java", "BodyUseAPI": [], "Fixed commit": "a5561546c973f4986804f6065e2cea8174139959", "Url": "https://api.github.com/repos/jgf/credhub", "Date": "2018-02-09T17:13:08Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bouncycastle.openssl.PEMParser.readObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(parsed instanceof org.bouncycastle.openssl.PEMKeyPair)) { throw new org.cloudfoundry.credhub.util.PrivateKeyReader.UnsupportedFormatException(\"format of private key is not supported.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7668/buggy-version/src.main.java.org.cloudfoundry.credhub.util.PrivateKeyReader.java", "BodyUseAPI": [], "Fixed commit": "a5561546c973f4986804f6065e2cea8174139959", "Url": "https://api.github.com/repos/jgf/credhub", "Date": "2018-02-09T17:13:08Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.linjw.handyhttpd.httpcore.RequestWaiter.moveDataWithSuffix(java.io.BufferedInputStream,byte[],int,byte[],byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (headerEnd == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9409/buggy-version/libhandyhttpd.src.main.java.me.linjw.handyhttpd.httpcore.RequestWaiter.java", "BodyUseAPI": [], "Fixed commit": "10b89aef1142616b61d5ddc2254a36387ec6f136", "Url": "https://api.github.com/repos/bluesky466/HandyHTTPD", "Date": "2018-07-11T15:04:41Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (variable == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7784/buggy-version/common.src.main.java.org.hotteam67.common.SchemaHandler.java", "BodyUseAPI": [], "Fixed commit": "5533ee177513959088e9cef7b314b6d3370c8a53", "Url": "https://api.github.com/repos/olechiw/Hot67-Bluetooth-Scouter", "Date": "2018-02-01T21:43:02Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (v != null) table.addView(v);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7784/buggy-version/common.src.main.java.org.hotteam67.common.SchemaHandler.java", "BodyUseAPI": ["android.widget.TableLayout.addView(android.view.View)"], "Fixed commit": "5533ee177513959088e9cef7b314b6d3370c8a53", "Url": "https://api.github.com/repos/olechiw/Hot67-Bluetooth-Scouter", "Date": "2018-02-01T21:43:02Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((views.size()) == 0) return new java.util.ArrayList<>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7784/buggy-version/common.src.main.java.org.hotteam67.common.SchemaHandler.java", "BodyUseAPI": [], "Fixed commit": "5533ee177513959088e9cef7b314b6d3370c8a53", "Url": "https://api.github.com/repos/olechiw/Hot67-Bluetooth-Scouter", "Date": "2018-02-01T21:43:02Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (v != null) views.add(org.hotteam67.common.SchemaHandler.GetView(v, context));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7784/buggy-version/common.src.main.java.org.hotteam67.common.SchemaHandler.java", "BodyUseAPI": ["java.util.List<android.view.View>.add(android.view.View)", "org.hotteam67.common.SchemaHandler.GetView(org.hotteam67.common.SchemaVariable,android.content.Context)"], "Fixed commit": "5533ee177513959088e9cef7b314b6d3370c8a53", "Url": "https://api.github.com/repos/olechiw/Hot67-Bluetooth-Scouter", "Date": "2018-02-01T21:43:02Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((simulation.getCurrentGenerationNumber()) == (simulation.getNumberOfIterations())) { simulation.runSimulation(); simulation.pause(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6671/buggy-version/src.UserInterface.Controllers.SimulationController.java", "BodyUseAPI": ["core.WireworldSimulation.runSimulation()", "core.WireworldSimulation.pause()"], "Fixed commit": "bc5e88795f4adb89c1c75e669976fe7099599990", "Url": "https://api.github.com/repos/KamilKwapisz/Wireworld", "Date": "2018-05-16T20:02:20Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["claw.wani.x2t.configuration.Configuration.get().openMP().getSchedulerChunkSize()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (chunkSize > 0) { scheduler = java.lang.String.format(\"%s(%s, %d)\", claw.tatsu.directive.generator.OpenMp.OPENMP_DIST_SCHEDULE, claw.tatsu.directive.generator.OpenMp.OPENMP_SCHEDULE_KIND, chunkSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5940/buggy-version/cx2t.src.claw.tatsu.directive.generator.OpenMp.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String,java.lang.String,int)"], "Fixed commit": "c2f45bfbc4c930b485c44fb2acdf5aee82e530fb", "Url": "https://api.github.com/repos/peclatj/claw-compiler", "Date": "2018-08-07T17:28:50Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.glvz.egais.dao.DaoMem.findIncomeContentBoxTreeIn(com.glvz.egais.dao.IncomeRecContent,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (icb != null) { java.util.List<com.glvz.egais.dao.DaoMem.MarkInBox> resList = new java.util.ArrayList<>(); com.glvz.egais.dao.DaoMem.getDaoMem().getAllIncomeRecMarksByBoxBarcode(resList, incomeRecContent, icb, 1); for (com.glvz.egais.dao.DaoMem.MarkInBox mb : resList) { com.glvz.egais.dao.IncomeRecContentMark ircm = com.glvz.egais.dao.DaoMem.getDaoMem().findIncomeRecContentMarkByMarkScanned(incomeRec, mb.icm.getMark()); if (ircm == null) { result++; } if (ircm != null) { } } }else { result = (barcode == null) ? 0 : 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9794/buggy-version/app.src.main.java.com.glvz.egais.dao.DaoMem.java", "BodyUseAPI": ["com.glvz.egais.dao.DaoMem.getAllIncomeRecMarksByBoxBarcode(java.util.List<com.glvz.egais.dao.DaoMem.MarkInBox>,com.glvz.egais.dao.IncomeRecContent,com.glvz.egais.dao.IncomeContentBoxTreeIn,int)"], "Fixed commit": "1e3adb41f0ba58cfedde49732fb5a1cb2fa3c59c", "Url": "https://api.github.com/repos/pavel-vp/GLVZegais", "Date": "2018-07-27T06:57:57Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (_score_ != 0) masterList.getPatient(index).addScore(scoreRecord);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/503/buggy-version/app.src.main.java.com.example.adamm.gamepad.ResultsActivity.java", "BodyUseAPI": [], "Fixed commit": "5f289e3525b62bbacb490a340264d758b981e414", "Url": "https://api.github.com/repos/adammorrone/GamePAD", "Date": "2018-04-13T14:53:59Z"},
{"Line": "=>820", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mjr.extraplanets.Config.USE_DEFAULT_BOSSES) com.mjr.mjrlegendslib.util.RegisterUtilities.registerTileEntity(com.mjr.extraplanets.tileEntities.dungeonSpawners.TileEntityDungeonSpawnerErisDefault.class, ((com.mjr.extraplanets.Constants.modName) + \"Eris Dungeon Default Spawner\")); else com.mjr.mjrlegendslib.util.RegisterUtilities.registerTileEntity(com.mjr.extraplanets.tileEntities.dungeonSpawners.TileEntityDungeonSpawnerEris.class, ((com.mjr.extraplanets.Constants.modName) + \"Eris Dungeon Spawner\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4964/buggy-version/src.main.java.com.mjr.extraplanets.blocks.ExtraPlanets_Blocks.java", "BodyUseAPI": [], "Fixed commit": "0719d737ddc944aaef7313a4f4e69d039fbcde0f", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-01-24T03:01:51Z"},
{"Line": "=>813", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mjr.extraplanets.Config.USE_DEFAULT_BOSSES) com.mjr.mjrlegendslib.util.RegisterUtilities.registerTileEntity(com.mjr.extraplanets.tileEntities.dungeonSpawners.TileEntityDungeonSpawnerPlutoDefault.class, ((com.mjr.extraplanets.Constants.modName) + \"Pluto Dungeon Default Spawner\")); else com.mjr.mjrlegendslib.util.RegisterUtilities.registerTileEntity(com.mjr.extraplanets.tileEntities.dungeonSpawners.TileEntityDungeonSpawnerPluto.class, ((com.mjr.extraplanets.Constants.modName) + \"Pluto Dungeon Spawner\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4964/buggy-version/src.main.java.com.mjr.extraplanets.blocks.ExtraPlanets_Blocks.java", "BodyUseAPI": [], "Fixed commit": "0719d737ddc944aaef7313a4f4e69d039fbcde0f", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-01-24T03:01:51Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (num < 0) { java.lang.System.out.println(\"Error while parsing input file\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/154/buggy-version/src.InputParser.java", "BodyUseAPI": [], "Fixed commit": "cd1c73c4beac940f8e11ea253892f5ded97d8641", "Url": "https://api.github.com/repos/jickay/CPSC449_jkfso_Java", "Date": "2018-02-06T18:26:42Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i == 2) { validateNum(values[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/154/buggy-version/src.InputParser.java", "BodyUseAPI": ["InputParser.validateNum(java.lang.String)"], "Fixed commit": "cd1c73c4beac940f8e11ea253892f5ded97d8641", "Url": "https://api.github.com/repos/jickay/CPSC449_jkfso_Java", "Date": "2018-02-06T18:26:42Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(skin.support.content.res.SkinCompatUserThemeManager.get().isDrawableEmpty())) { android.graphics.drawable.Drawable drawable = skin.support.content.res.SkinCompatUserThemeManager.get().getDrawable(resId); if (drawable != null) { return drawable; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2088/buggy-version/android-support.skin-support-appcompat.src.main.java.skin.support.content.res.SkinCompatVectorResources.java", "BodyUseAPI": [], "Fixed commit": "bb952adb630643c78b1b955b66af297f17f58de0", "Url": "https://api.github.com/repos/ximsfei/Android-skin-support", "Date": "2018-09-29T14:38:20Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(skin.support.content.res.SkinCompatUserThemeManager.get().isColorEmpty())) { android.content.res.ColorStateList colorStateList = skin.support.content.res.SkinCompatUserThemeManager.get().getColorStateList(resId); if (colorStateList != null) { return new android.graphics.drawable.ColorDrawable(colorStateList.getDefaultColor()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2088/buggy-version/android-support.skin-support-appcompat.src.main.java.skin.support.content.res.SkinCompatVectorResources.java", "BodyUseAPI": [], "Fixed commit": "bb952adb630643c78b1b955b66af297f17f58de0", "Url": "https://api.github.com/repos/ximsfei/Android-skin-support", "Date": "2018-09-29T14:38:20Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(skin.support.content.res.SkinCompatResources.getInstance().isDefaultSkin())) { int targetResId = skin.support.content.res.SkinCompatResources.getInstance().getTargetResId(context, resId); if (targetResId != 0) { return skin.support.content.res.SkinCompatResources.getInstance().getSkinResources().getDrawable(targetResId); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2088/buggy-version/android-support.skin-support-appcompat.src.main.java.skin.support.content.res.SkinCompatVectorResources.java", "BodyUseAPI": [], "Fixed commit": "bb952adb630643c78b1b955b66af297f17f58de0", "Url": "https://api.github.com/repos/ximsfei/Android-skin-support", "Date": "2018-09-29T14:38:20Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["skin.support.content.res.SkinCompatResources.getInstance().getStrategyDrawable(android.content.Context,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (drawable != null) { return drawable; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2088/buggy-version/android-support.skin-support-appcompat.src.main.java.skin.support.content.res.SkinCompatVectorResources.java", "BodyUseAPI": [], "Fixed commit": "bb952adb630643c78b1b955b66af297f17f58de0", "Url": "https://api.github.com/repos/ximsfei/Android-skin-support", "Date": "2018-09-29T14:38:20Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rankings.getLeagueSettings().isSnake()) || (rankings.getLeagueSettings().isAuction())) { factorList.add(Constants.SORT_TIERS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7380/buggy-version/FFRv2.app.src.main.java.com.devingotaswitch.rankings.PlayerSorter.java", "BodyUseAPI": [], "Fixed commit": "d25f5338bb1e1fc563cf6feffee84030f7060c87", "Url": "https://api.github.com/repos/jbailey2010/FFRv2", "Date": "2018-06-17T08:20:32Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((dbStaff) != null) && ((dbEvents) != null)) { for (com.example.cse3310.cateringapp.EventModel event : dbEvents) { events.add(event.getOccasion()); } for (com.example.cse3310.cateringapp.UserModel user : dbStaff) { staff.add(user.getUserFName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4624/buggy-version/app.src.main.java.com.example.cse3310.cateringapp.AssignStaffActivity.java", "BodyUseAPI": [], "Fixed commit": "84eec6a58866527a4c73f99c2072a352b2a4cbef", "Url": "https://api.github.com/repos/kyrelldixon/Catering-App", "Date": "2018-04-30T16:50:59Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (perm.equals(\"\")) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6446/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Util.Misc.PlayerUtils.java", "BodyUseAPI": [], "Fixed commit": "d43f33c4c1051d161b13073dbe176c2613f29151", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2018-01-10T21:37:04Z"},
{"Line": "=>549", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (argument.isEmpty()) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/513/buggy-version/src.main.java.seedu.address.model.IntuitivePromptManager.java", "BodyUseAPI": [], "Fixed commit": "faec2cea4be3fea68a9d1a92788e3daf187c17c9", "Url": "https://api.github.com/repos/CS2103-AY1819S1-W16-3/main", "Date": "2018-10-15T07:13:45Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fossasia.phimpme.gallery.util.PreferenceUtil.getString(getString(R.string.upload_view_choice),getString(R.string.last_first))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (choiceofdisply.equals(getString(R.string.last_first))) { uploadHistoryAdapter.setResults(loadData(getString(R.string.last_first))); }else if (choiceofdisply.equals(getString(R.string.latest_first))) { uploadHistoryAdapter.setResults(loadData(getString(R.string.latest_first))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2723/buggy-version/app.src.main.java.org.fossasia.phimpme.uploadhistory.UploadHistory.java", "BodyUseAPI": ["java.lang.String.equals(getString(R.string.latest_first))"], "Fixed commit": "bf799b27ee4bec8955d8aa1ca51679e1c4ba8d5c", "Url": "https://api.github.com/repos/fossasia/phimpme-android", "Date": "2018-06-29T16:34:01Z"},
{"Line": "=>748", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!(favphotomode)) && (!(allPhotoMode))) && (upoadhis)) { int c = current_image_pos; realm = io.realm.Realm.getDefaultInstance(); realm.executeTransaction(new io.realm.Realm.Transaction() { @java.lang.Override public void execute(io.realm.Realm realm) { io.realm.RealmResults<org.fossasia.phimpme.data.local.UploadHistoryRealmModel> uploadHistoryImagesModels = realm.where(org.fossasia.phimpme.data.local.UploadHistoryRealmModel.class).equalTo(\"pathname\", uploadhistory.get(current_image_pos).getPath()).findAll(); uploadHistoryImagesModels.deleteAllFromRealm(); } }); deletefromuploadhistorylist(uploadhistory.get(current_image_pos).getPath()); size_all = uploadhistory.size(); if ((size_all) > 0) { adapter.notifyDataSetChanged(); getSupportActionBar().setTitle((((((c + 1) + \" \") + (getString(R.string.of))) + \" \") + (size_all))); org.fossasia.phimpme.utilities.SnackBarHandler.show(parentView, getApplicationContext().getString(R.string.photo_deleted_from_fav_msg)); }else { onBackPressed(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2723/buggy-version/app.src.main.java.org.fossasia.phimpme.gallery.activities.SingleMediaActivity.java", "BodyUseAPI": [], "Fixed commit": "bf799b27ee4bec8955d8aa1ca51679e1c4ba8d5c", "Url": "https://api.github.com/repos/fossasia/phimpme-android", "Date": "2018-06-29T16:34:01Z"},
{"Line": "=>596", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gelakinetic.mtgfam.helpers.database.CardDbAdapter.getPrintedPTL(info.mToughness,boolean)", "com.gelakinetic.mtgfam.helpers.database.CardDbAdapter.getPrintedPTL(info.mPower,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(power.isEmpty())) && (!(toughness.isEmpty()))) { holder.mCardPower.setVisibility(View.VISIBLE); holder.mCardSlash.setVisibility(View.VISIBLE); holder.mCardToughness.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3421/buggy-version/mobile.src.main.java.com.gelakinetic.mtgfam.fragments.WishlistFragment.java", "BodyUseAPI": [], "Fixed commit": "38f0704033e03e9da7972c501130f25e2dc70688", "Url": "https://api.github.com/repos/AEFeinstein/mtg-familiar", "Date": "2018-03-12T03:48:08Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.microsoft.frameworklauncher.applicationmaster.SelectionManager.selectNodes(com.microsoft.frameworklauncher.common.model.ResourceDescriptor,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((selectionResult.getNodeHosts().size()) > 0) { java.util.List<com.microsoft.frameworklauncher.common.model.ValueRange> portRanges = selectPorts(selectionResult, optimizedRequestResource); optimizedRequestResource.setPortRanges(portRanges); selectionResult.setOptimizedResource(optimizedRequestResource); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9370/buggy-version/frameworklauncher.src.main.java.com.microsoft.frameworklauncher.applicationmaster.SelectionManager.java", "BodyUseAPI": ["com.microsoft.frameworklauncher.applicationmaster.SelectionResult.setOptimizedResource(com.microsoft.frameworklauncher.common.model.ResourceDescriptor)", "com.microsoft.frameworklauncher.applicationmaster.SelectionManager.selectPorts(com.microsoft.frameworklauncher.applicationmaster.SelectionResult,com.microsoft.frameworklauncher.common.model.ResourceDescriptor)"], "Fixed commit": "17cbbc1d88febce9654ec9de61b6451c7b5dd76a", "Url": "https://api.github.com/repos/Microsoft/pai", "Date": "2018-03-27T03:16:24Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mViewDragHelper) == null) { mViewDragHelper = android.support.v4.widget.ViewDragHelper.create(parent, mDragCallback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9105/buggy-version/vpbs.src.main.java.biz.laenger.android.vpbs.ViewPagerBottomSheetBehavior.java", "BodyUseAPI": [], "Fixed commit": "7cab7a0e39017476ab8197e790b59512773a59f4", "Url": "https://api.github.com/repos/PureDark/ViewPagerBottomSheet", "Date": "2018-03-08T18:40:59Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cacheEntry.getSessionInfoData().getServiceProviderList().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((providerDO != null) && (providerDO.isDoSingleLogout())) { java.util.Set<java.lang.String> sloSupportedIssuers = new java.util.HashSet<java.lang.String>(); for (java.util.Map.Entry<java.lang.String, org.wso2.carbon.identity.core.model.SAMLSSOServiceProviderDO> entry : cacheEntry.getSessionInfoData().getServiceProviderList().entrySet()) { if (entry.getValue().isDoSingleLogout()) { sloSupportedIssuers.add(entry.getKey()); } } for (java.lang.String sloSupportedIssuer : sloSupportedIssuers) { cacheEntry.getSessionInfoData().removeServiceProvider(sloSupportedIssuer); if (org.wso2.carbon.identity.sso.saml.session.SSOSessionPersistenceManager.log.isDebugEnabled()) { org.wso2.carbon.identity.sso.saml.session.SSOSessionPersistenceManager.log.debug((\"Removed SLO supported service provider from session info data with name \" + sloSupportedIssuer)); } } }else { if ((cacheEntry.getSessionInfoData()) != null) { cacheEntry.getSessionInfoData().removeServiceProvider(issuer); if (org.wso2.carbon.identity.sso.saml.session.SSOSessionPersistenceManager.log.isDebugEnabled()) { org.wso2.carbon.identity.sso.saml.session.SSOSessionPersistenceManager.log.debug((\"Removed service provider from session info data with name \" + issuer)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4706/buggy-version/components.org.wso2.carbon.identity.sso.saml.src.main.java.org.wso2.carbon.identity.sso.saml.session.SSOSessionPersistenceManager.java", "BodyUseAPI": [], "Fixed commit": "4388894c22ec31f7c5487e2c1897c9f75aa6ccca", "Url": "https://api.github.com/repos/sachiniWettasinghe/identity-inbound-auth-saml", "Date": "2018-10-12T09:58:39Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (norm < 0.001) { norm = 1.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4190/buggy-version/src.main.java.io.anserini.util.FeatureVector.java", "BodyUseAPI": [], "Fixed commit": "58254fe27625778f75726edf43fda1d8aa0f150b", "Url": "https://api.github.com/repos/Victor0118/Anserini", "Date": "2018-08-02T17:40:32Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.corosus.inv.InvasionManager.isInvasionTonight(net.minecraft.world.World)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!invasionOnThisNight) { storage.dataPlayerInvasionHappenedThisDay = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7889/buggy-version/src.main.java.com.corosus.inv.InvasionManager.java", "BodyUseAPI": [], "Fixed commit": "558152326b8f7c81d703e59bb71e4fe669c854e6", "Url": "https://api.github.com/repos/Corosauce/HostileWorlds_Invasions", "Date": "2018-07-08T18:18:41Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["finding.getSurfaceLocation().getPath()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (dynamicPath != null) { baseEndpointDetector.addSample(dynamicPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8295/buggy-version/threadfix-importers.src.main.java.com.denimgroup.threadfix.service.translator.FullSourceFindingProcessor.java", "BodyUseAPI": ["com.denimgroup.threadfix.framework.engine.BaseEndpointDetector.addSample(java.lang.String)"], "Fixed commit": "38fd07b350428da3d6f2f4758a44c619f9e661f4", "Url": "https://api.github.com/repos/secdec/astam-correlator", "Date": "2018-02-15T16:13:57Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.rawQuery(java.lang.String,java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cursor.getCount()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2705/buggy-version/GoGrad.app.src.main.java.com.example.gograd.ChecklistOpenHelper.java", "BodyUseAPI": [], "Fixed commit": "5c19f7f0f391419e87e66ccf43fc22af19081422", "Url": "https://api.github.com/repos/BenjaminLL/GoGrad", "Date": "2018-07-15T01:01:39Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.O)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7609/buggy-version/navigation.src.main.java.me.listenzz.navigation.AppUtils.java", "BodyUseAPI": [], "Fixed commit": "b0856ca055d9c9d0969d329303f47d1df76642e6", "Url": "https://api.github.com/repos/listenzz/AndroidNavigation", "Date": "2018-10-06T15:57:14Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.databind.ObjectMapper.readValue(java.lang.Object,com.fasterxml.jackson.databind.type.CollectionLikeType)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (items.isEmpty()) { return cb.conjunction(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3590/buggy-version/src.main.java.net.optionfactory.pussyfoot.extjs.ExtjsEnumFilter.java", "BodyUseAPI": [], "Fixed commit": "42cd0586a8f9e3ab436de13db1472e0b59af7e75", "Url": "https://api.github.com/repos/optionfactory/pussyfoot", "Date": "2018-06-04T13:45:22Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(item.isEnabled())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7588/buggy-version/src.main.java.org.mihalis.opal.roundedToolbar.RoundedToolbar.java", "BodyUseAPI": [], "Fixed commit": "0a4f0f2f195a0b4787078ca1ac24bba59e1ccee4", "Url": "https://api.github.com/repos/swtdev/opal", "Date": "2018-01-24T13:56:02Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (teamLogo.equals(\"No logo\")) return \"teamCastle1\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7560/buggy-version/client.core.src.com.mygdx.game.requests.Team.java", "BodyUseAPI": [], "Fixed commit": "3d1d4aa0d53b42e2ccbdfbb614ca29c3e3b79c51", "Url": "https://api.github.com/repos/isd-soft/motivision", "Date": "2018-07-13T13:03:26Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(android.text.TextUtils.isEmpty(width))) && ((width.length()) > 4)) { width = width.substring(0, ((width.length()) - 4)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6946/buggy-version/app.src.main.java.com.imagesoftware.anubhav.vacmet.model.ItemModel.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "7e989b568fcc744173e86bebd0e91c7fed175c20", "Url": "https://api.github.com/repos/jay1493/vacmetOrderStatus", "Date": "2018-02-04T11:50:58Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((serviceMessenger) != null) context.unbindService(mConnection);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/451/buggy-version/src.main.java.org.havenapp.main.sensors.motion.Preview.java", "BodyUseAPI": [], "Fixed commit": "07f1c5f8d730cd35c70eab9203e84369775926ba", "Url": "https://api.github.com/repos/percy-g2/haven", "Date": "2018-01-20T11:26:20Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((camera) != null) stopCamera();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/451/buggy-version/src.main.java.org.havenapp.main.sensors.motion.Preview.java", "BodyUseAPI": [], "Fixed commit": "07f1c5f8d730cd35c70eab9203e84369775926ba", "Url": "https://api.github.com/repos/percy-g2/haven", "Date": "2018-01-20T11:26:20Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (methodKind.equals(\"function\")) formParam.setFpPos(((formParam.getFpPos()) + 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5043/buggy-version/src.rs.ac.bg.etf.pp1.SemanticAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "f74aa863a386e99731addcf02fd0660dc32448f9", "Url": "https://api.github.com/repos/Bodinm95/FAX-PP-MicroJavaCompiler", "Date": "2018-08-23T23:47:41Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (methodKind.equals(\"function\")) formParam.setFpPos(((formParam.getFpPos()) + 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5043/buggy-version/src.rs.ac.bg.etf.pp1.SemanticAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "f74aa863a386e99731addcf02fd0660dc32448f9", "Url": "https://api.github.com/repos/Bodinm95/FAX-PP-MicroJavaCompiler", "Date": "2018-08-23T23:47:41Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (GDstatic.testAds) { GDlogger.gDad.init(GDlogger.mContext, GDlogger.isCordovaPlugin); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8302/buggy-version/Source.GDApi.gdapi.src.main.java.com.gd.analytics.GDbanner.java", "BodyUseAPI": [], "Fixed commit": "ba92e4493faa130f432399bd6aa3d385f02361cf", "Url": "https://api.github.com/repos/GameDistribution/GD-Android-Java", "Date": "2018-01-23T11:30:38Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((taskTerm instanceof org.opennars.inference.CompoundTerm) && (beliefTerm instanceof org.opennars.inference.CompoundTerm)) { org.opennars.inference.RuleTables.compoundAndCompound(((org.opennars.inference.CompoundTerm) (taskTerm)), ((org.opennars.inference.CompoundTerm) (beliefTerm)), tIndex, bIndex, nal); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2463/buggy-version/src.main.java.org.opennars.inference.RuleTables.java", "BodyUseAPI": [], "Fixed commit": "05f8798c7f504d3fb8250f48bf3031604171f05a", "Url": "https://api.github.com/repos/opennars/opennars", "Date": "2018-05-30T17:32:33Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.axelor.apps.base.db.App.getModules()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (modules == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8546/buggy-version/axelor-admin.src.main.java.com.axelor.apps.base.service.app.AppServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "996bbd67bd83cf2d2e6d3a3777537d3ea465160e", "Url": "https://api.github.com/repos/man-axelor/axelor-business-suite", "Date": "2018-05-23T10:36:52Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["contract.getContractAddress().toByteArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isCallConstant(contractAddress)) { thisTxCPULimitInUs = 100000; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7063/buggy-version/src.main.java.org.tron.common.runtime.Runtime.java", "BodyUseAPI": [], "Fixed commit": "7345bd8c437fdf0e874eb67935c92c002e61cfec", "Url": "https://api.github.com/repos/tronprotocol/java-tron", "Date": "2018-08-02T08:33:09Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == myJid) { myJid = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/443/buggy-version/asmack.src.main.java.org.jivesoftware.smackx.message.MessageStorage.java", "BodyUseAPI": [], "Fixed commit": "f898ce4e3ddd539d4aa8d16e4a21b6b3cb2b5e16", "Url": "https://api.github.com/repos/hustpeng/meet", "Date": "2018-09-03T06:42:39Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nodes.get(i).getY()) >= axisElevation) { newNodes.add(nodes.get(i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8949/buggy-version/src.com.structuralengineering.rcbeam.utils.Calculators.java", "BodyUseAPI": ["java.util.List<com.structuralengineering.rcbeam.properties.BeamSectionNode>.add(nodes.get(i))", "java.util.List<com.structuralengineering.rcbeam.properties.BeamSectionNode>.get(int)"], "Fixed commit": "8c6df3bd97d86cb3606725edf22ea1146c9d0f72", "Url": "https://api.github.com/repos/alexiusacademia/RCBeam", "Date": "2018-09-16T08:38:05Z"},
{"Line": "=>5701", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isOneToOneChild()) { return false; }else { throw new edu.ku.brc.specify.tasks.subpane.wb.wbuploader.UploaderException((\"Unsupported situation for \" + (this.toString())), UploaderException.ABORT_ROW); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/304/buggy-version/src.edu.ku.brc.specify.tasks.subpane.wb.wbuploader.UploadTable.java", "BodyUseAPI": [], "Fixed commit": "40dfe05a21c4c8798b23678dc56e207a5d8b9fea", "Url": "https://api.github.com/repos/specify/specify6", "Date": "2018-01-23T16:32:00Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((filters) == null) createRoles();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4299/buggy-version/src.main.com.mrsmartguy.logisticsducts.ducts.attachments.LogisticatorItem.java", "BodyUseAPI": [], "Fixed commit": "0f8985f90525909347d6319af8500254b004a5ab", "Url": "https://api.github.com/repos/Mr-Smartguy/LogisticsDucts", "Date": "2018-06-09T06:25:08Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((filters) == null) createRoles();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4299/buggy-version/src.main.com.mrsmartguy.logisticsducts.ducts.attachments.LogisticatorItem.java", "BodyUseAPI": [], "Fixed commit": "0f8985f90525909347d6319af8500254b004a5ab", "Url": "https://api.github.com/repos/Mr-Smartguy/LogisticsDucts", "Date": "2018-06-09T06:25:08Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((filters) == null) createRoles();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4299/buggy-version/src.main.com.mrsmartguy.logisticsducts.ducts.attachments.LogisticatorItem.java", "BodyUseAPI": [], "Fixed commit": "0f8985f90525909347d6319af8500254b004a5ab", "Url": "https://api.github.com/repos/Mr-Smartguy/LogisticsDucts", "Date": "2018-06-09T06:25:08Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (stroke != null) { strokeThickness = stroke.getLineWidth(); strokeMM = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8649/buggy-version/CodenameOne.src.com.codename1.ui.plaf.RoundRectBorder.java", "BodyUseAPI": ["com.codename1.ui.Stroke.getLineWidth()"], "Fixed commit": "275d36a07c4946af2aaee7e10eb3c6d7bf290c81", "Url": "https://api.github.com/repos/ramsestom/CodenameOne", "Date": "2018-10-11T01:18:28Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((datePickerDialog) == null) { launchCalendarDialog(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/37/buggy-version/app.src.main.java.co.smartreceipts.android.date.DateEditText.java", "BodyUseAPI": [], "Fixed commit": "746145f316d246b00555d74571662839fc69eb74", "Url": "https://api.github.com/repos/wbaumann/SmartReceiptsLibrary", "Date": "2018-08-09T19:41:17Z"},
{"Line": "=>865", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_mode.equals(\"edit\")) { int spinnerPosition = service_adapter.getPosition(_tourPropertyObject.getKategorie()); sp_service.setSelection(spinnerPosition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6916/buggy-version/app.src.main.java.com.example.angelsend.spriegel_project.Touren.TourAddTemplateFragment.java", "BodyUseAPI": [], "Fixed commit": "cc0ece25b7aa10a52b93acdd7f49b0b540e95f0d", "Url": "https://api.github.com/repos/AngelsEnd/Spriegel_Project", "Date": "2018-10-09T18:56:13Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.apache.commons.lang3.tuple.MutablePair<java.lang.Boolean, clearcl.ClearCLImage>>.remove(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (lMutablePair != null) { fastfuse.FastFusionMemoryPool.get().releaseImage(pSlotKey, lMutablePair.getRight()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3217/buggy-version/src.fastfuse.FastFusionEngine.java", "BodyUseAPI": ["org.apache.commons.lang3.tuple.MutablePair<java.lang.Boolean, clearcl.ClearCLImage>.getRight()", "fastfuse.FastFusionMemoryPool.get().releaseImage(java.lang.String,lMutablePair.getRight())"], "Fixed commit": "58e77a0bcb4db33a9301cb0b27e1d0c2dbe50c8c", "Url": "https://api.github.com/repos/ClearControl/fastfuse", "Date": "2018-02-24T18:44:56Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rs.getValue()) >= ((rs.getMin()) + ((rs.getMax()) / 2))) { if (minRectangle.contains(e.getX(), e.getY())) { movingRect1 = true; }else if (maxRectangle.contains(e.getX(), e.getY())) { movingRect2 = true; } }else { if (maxRectangle.contains(e.getX(), e.getY())) { movingRect2 = true; }else if (minRectangle.contains(e.getX(), e.getY())) { movingRect1 = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/783/buggy-version/src.slider.ui.RangeSliderUI.java", "BodyUseAPI": [], "Fixed commit": "d062dd864feef3502029523a24771bf90a6594ae", "Url": "https://api.github.com/repos/gmDefault/iihm-RangeSlider", "Date": "2018-10-02T20:27:02Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ctx == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4561/buggy-version/src.main.java.com.lanxinbase.socket.ChannelHandlerProvider.java", "BodyUseAPI": [], "Fixed commit": "1ee3a2a8f4264f50eee69aa7be2b252230d56008", "Url": "https://api.github.com/repos/AlanRo1986/nettyServer", "Date": "2018-06-04T07:54:37Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameterValues(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (papersRegistered != null) { for (java.lang.String newsValues : papersRegistered) { str = (str + newsValues) + \",\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5180/buggy-version/eclipse-workspace.Login.src.newsreader.RegisterPage.java", "BodyUseAPI": [], "Fixed commit": "a616baa6e02808cbe099ae1edb065eaea6475957", "Url": "https://api.github.com/repos/ganeshprasadj/newsreader", "Date": "2018-04-07T19:51:13Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameterValues(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (matieres != null) { for (java.lang.String mat : matieres) { com.monapp.entity.Matiere matiere = matiereDao.findByPrimaryKey(java.lang.Integer.valueOf(mat)); salle.getMatieresExclues().add(matiere); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3912/buggy-version/src.main.java.com.monapp.controller.SalleController.java", "BodyUseAPI": [], "Fixed commit": "1431e9b4ef3c7725b23d165c245bd0c764fc6fc1", "Url": "https://api.github.com/repos/valeriemontoya90/spring-boot-groupe-scolaire", "Date": "2018-02-20T08:37:45Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((maxPage) > 2) { out.print(createPageLink(((maxPage) - 2))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3799/buggy-version/src.main.java.by.tc.epam.tag.Pagination.java", "BodyUseAPI": ["javax.servlet.jsp.JspWriter.print(java.lang.String)", "by.tc.epam.tag.Pagination.createPageLink(int)"], "Fixed commit": "2170c64d9d6f7d440106c323d69f3cb42ddbb820", "Url": "https://api.github.com/repos/mishaShved/FinalProject", "Date": "2018-04-16T20:00:50Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((maxPage) > 3) { out.print(createPageLink(((maxPage) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3799/buggy-version/src.main.java.by.tc.epam.tag.Pagination.java", "BodyUseAPI": ["javax.servlet.jsp.JspWriter.print(java.lang.String)", "by.tc.epam.tag.Pagination.createPageLink(int)"], "Fixed commit": "2170c64d9d6f7d440106c323d69f3cb42ddbb820", "Url": "https://api.github.com/repos/mishaShved/FinalProject", "Date": "2018-04-16T20:00:50Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPage) <= 2) { if ((maxPage) > 1) { out.print(createPageLink(2)); } if ((maxPage) > 2) { out.print(createPageLink(3)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3799/buggy-version/src.main.java.by.tc.epam.tag.Pagination.java", "BodyUseAPI": [], "Fixed commit": "2170c64d9d6f7d440106c323d69f3cb42ddbb820", "Url": "https://api.github.com/repos/mishaShved/FinalProject", "Date": "2018-04-16T20:00:50Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == part) { return rtnParam(40010, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5635/buggy-version/src.main.java.com.halo.api.UserRestApi.java", "BodyUseAPI": [], "Fixed commit": "cbbeac6eb0fdb35dd05bf91f9e598638ffe15fc0", "Url": "https://api.github.com/repos/MelloChan/halo-server", "Date": "2018-06-17T09:15:00Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["etPass.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((passwd.length()) < 6) { etPass.setError(\"La contrase\u00f1a debe contener 6 caracteres como m\u00ednimo.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1183/buggy-version/app.src.main.java.com.colossus.teletaPATHpp.DriverLoginActivity.java", "BodyUseAPI": [], "Fixed commit": "a6be55e68e5d457272166a0c5413c57dec604b01", "Url": "https://api.github.com/repos/JasonGGa/TeletaxiApp", "Date": "2018-07-02T23:32:34Z"},
{"Line": "=>543", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.bcel.generic.InvokeInstruction.getMethodName(org.apache.bcel.generic.ConstantPoolGen)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((ignoreMethod != null) && (ignoreMethod.contains(invokedMethodName))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4141/buggy-version/tregression.src.main.tregression.empiricalstudy.TrialGenerator0.java", "BodyUseAPI": [], "Fixed commit": "d81e350e1dbc567c7d5347a5c3943549e5a714a4", "Url": "https://api.github.com/repos/llmhyy/tregression", "Date": "2018-04-04T12:46:42Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (filterQueries.isEmpty()) { throw new java.io.IOException(\"Filter is empty, which should never happen, as this allows unfettered searching of our index\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2296/buggy-version/src.main.java.edu.harvard.iq.dataverse.api.Search.java", "BodyUseAPI": [], "Fixed commit": "8896b615c3ddcbef370822577dff54fcc00b229a", "Url": "https://api.github.com/repos/IQSS/dataverse", "Date": "2018-10-10T23:32:42Z"},
{"Line": "=>1066", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ready[player]) == false) fillClickable(returnBack, player);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9202/buggy-version/src.games.gsClever.Logic.MainLogic.java", "BodyUseAPI": ["games.gsClever.Logic.MainLogic.fillClickable(games.gsClever.Logic.Return,int)"], "Fixed commit": "13134d8b25b66e1d01fadd598d7586d724b9267e", "Url": "https://api.github.com/repos/nicoonator/gsclever", "Date": "2018-07-17T12:14:26Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clean) service.deleteAllMeasures();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1114/buggy-version/historian.backend.src.main.java.com.hurence.logisland.historian.rest.v1.api.AdminApiController.java", "BodyUseAPI": [], "Fixed commit": "9be323276e675ac274c9db3788245ab41d9c60f1", "Url": "https://api.github.com/repos/Hurence/logisland.historian", "Date": "2018-07-02T16:54:30Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(equation.isEmpty())) { for (int i = 1; i < (equation.length()); i++) { if (((equation.charAt(i)) == '+') | ((equation.charAt(i)) == '-')) { addTerm(new math.PolyTerm(equation.substring(pre, i), scalarField)); pre = i; } } addTerm(new math.PolyTerm(equation.substring(pre), scalarField)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1556/buggy-version/src.math.Polynomial.java", "BodyUseAPI": [], "Fixed commit": "6115487a8e079e448be213c83a17790cececffef", "Url": "https://api.github.com/repos/ntg7creation/Oop_repos", "Date": "2018-04-23T00:12:22Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Maps.newHashMap()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(tmp.isEmpty())) { boolean isHeader = true; for (java.util.Map.Entry<java.lang.String, java.lang.reflect.Field> entry : tmp.entrySet()) { if (isHeader) { isHeader = false; query.append(\" SET n.\").append(entry.getKey()).append(\" = \"); }else { query.append(\", n.\").append(entry.getKey()).append(\" = \"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7491/buggy-version/neo4j-spring.src.main.java.com.github.andyshao.neo4j.spring.util.dao.CrudDatoClips.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.reflect.Field>.entrySet()"], "Fixed commit": "11d568572210ee81071968e2d6ecf85fe8f6da57", "Url": "https://api.github.com/repos/Andy-Shao/GearEE-Neo4j", "Date": "2018-08-08T05:07:33Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.halirutan.mathematica.lang.psi.impl.SymbolImpl.getContainingFile()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (containingFile != null) { final de.halirutan.mathematica.lang.psi.impl.ResolveResult[] localResult = myResolveCache.resolveWithCaching(this, de.halirutan.mathematica.lang.psi.impl.SymbolImpl.LOCAL_SYMBOL_RESOLVER, true, incompleteCode, containingFile); if ((!(java.util.Arrays.equals(ResolveResult.EMPTY_ARRAY, localResult))) && ((localResult[0]) instanceof de.halirutan.mathematica.lang.resolve.SymbolResolveResult)) { cacheScope(localResult[0]); return localResult; } final de.halirutan.mathematica.lang.psi.impl.ResolveResult[] globalResult = de.halirutan.mathematica.lang.psi.impl.SymbolImpl.GLOBAL_SYMBOL_RESOLVER.resolve(this, containingFile); if ((!(java.util.Arrays.equals(ResolveResult.EMPTY_ARRAY, globalResult))) && ((globalResult[0]) instanceof de.halirutan.mathematica.lang.resolve.SymbolResolveResult)) { cacheScope(globalResult[0]); return globalResult; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1318/buggy-version/src.de.halirutan.mathematica.lang.psi.impl.SymbolImpl.java", "BodyUseAPI": ["de.halirutan.mathematica.lang.resolve.MathematicaGlobalSymbolResolver.resolve(de.halirutan.mathematica.lang.psi.impl.SymbolImpl,de.halirutan.mathematica.lang.psi.impl.PsiFile)", "com.intellij.psi.impl.source.resolve.ResolveCache.resolveWithCaching(de.halirutan.mathematica.lang.psi.impl.SymbolImpl,de.halirutan.mathematica.lang.resolve.MathematicaSymbolResolver,boolean,boolean,de.halirutan.mathematica.lang.psi.impl.PsiFile)"], "Fixed commit": "885d08c3e9c891b563c5a1ef57700871555b93df", "Url": "https://api.github.com/repos/halirutan/Mathematica-IntelliJ-Plugin", "Date": "2018-01-08T11:19:14Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.horcrux.svg.ImageShadowNode.1.getSvgShadowNode()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (shadowNode != null) { shadowNode.markUpdated(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1211/buggy-version/android.src.main.java.com.horcrux.svg.ImageShadowNode.java", "BodyUseAPI": ["com.horcrux.svg.SvgViewShadowNode.markUpdated()"], "Fixed commit": "e334c74c7c47397b587d0826f6188c2220143325", "Url": "https://api.github.com/repos/expo/react-native-svg", "Date": "2018-03-18T21:17:56Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.ratioPlayerPrayRemaining) > 1.0) { this.ratioPlayerPrayRemaining = 1.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8595/buggy-version/runelite-client.src.main.java.net.runelite.client.plugins.hitpointsglow.HitpointsGlowPlugin.java", "BodyUseAPI": [], "Fixed commit": "62e95d90f31737536f834fcbcee2a21c683e479a", "Url": "https://api.github.com/repos/JustinNope/runelite", "Date": "2018-10-15T09:45:21Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.ratioPlayerPrayRemaining) > 1.0) { this.ratioPlayerPrayRemaining = 1.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8595/buggy-version/runelite-client.src.main.java.net.runelite.client.plugins.hitpointsglow.HitpointsGlowPlugin.java", "BodyUseAPI": [], "Fixed commit": "62e95d90f31737536f834fcbcee2a21c683e479a", "Url": "https://api.github.com/repos/JustinNope/runelite", "Date": "2018-10-15T09:45:21Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (meal.isNew()) { mealService.create(meal, userId); }else { mealService.update(meal, userId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4209/buggy-version/src.main.java.ru.javawebinar.topjava.web.JspMealController.java", "BodyUseAPI": ["ru.javawebinar.topjava.service.MealService.update(ru.javawebinar.topjava.model.Meal,int)", "ru.javawebinar.topjava.service.MealService.create(ru.javawebinar.topjava.model.Meal,int)"], "Fixed commit": "e86c48b02c6a8af259470a7d245d39b7e0644bdf", "Url": "https://api.github.com/repos/voronovim/calorie-counter", "Date": "2018-08-07T19:40:04Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dialog) != null) { recreate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9115/buggy-version/app.src.main.java.com.nodir.destiny.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "62f08d543d39ee27f673637f560c46e17ab12394", "Url": "https://api.github.com/repos/Nodirbek3d/Destiny", "Date": "2018-03-09T05:47:59Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cursor.moveToFirst()) { do { titles[cursor.getPosition()] = cursor.getString(RingtoneManager.TITLE_COLUMN_INDEX); } while (cursor.moveToNext() ); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5175/buggy-version/preference-v7-ringtone.src.main.java.com.takisoft.fix.support.v7.preference.RingtonePreferenceDialogFragmentCompat.java", "BodyUseAPI": ["android.database.Cursor.getPosition()", "android.database.Cursor.getString(RingtoneManager.TITLE_COLUMN_INDEX)", "android.database.Cursor.moveToNext()"], "Fixed commit": "092a8d9b244feb00dbac32543df6fa237f90ca49", "Url": "https://api.github.com/repos/pavel-zolotov/Android-Support-Preference-V7-Fix", "Date": "2018-06-28T14:39:34Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((edu.cmu.tetrad.util.StatUtils.correlation(x, y)) < (getDelta())) lr *= -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1840/buggy-version/tetrad-lib.src.main.java.edu.cmu.tetrad.search.Fask_B.java", "BodyUseAPI": [], "Fixed commit": "68f17218eb82dc69448e374e29a5e3024328f867", "Url": "https://api.github.com/repos/cmu-phil/tetrad", "Date": "2018-10-10T18:51:45Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((k.charAt(0)) == '\"') k = k.substring(1, ((k.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2847/buggy-version/jdcloud.src.com.jdcloud.AccessControl.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "a219ae768cd90d3cc0c7bb2598902e2c600b4d73", "Url": "https://api.github.com/repos/skyshore2001/jdcloud-java", "Date": "2018-05-07T15:02:25Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.location.Geocoder.getFromLocation(java.lang.Double,java.lang.Double,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((addresses.size()) != 0) { java.lang.String subAdminArea = addresses.get(0).getSubAdminArea(); updateLocationInfo.updateAdminArea(subAdminArea); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2573/buggy-version/Skurring.app.src.main.java.com.appzelof.skurring.locationHandler.LocationHandler.java", "BodyUseAPI": ["java.util.List<android.location.Address>.get(int)", "addresses.get(0).getSubAdminArea()"], "Fixed commit": "0e4e05388c4b46e5d11f95e265d8250fb6b07b9e", "Url": "https://api.github.com/repos/Appzelof/skurring-bilradio-android", "Date": "2018-10-02T18:11:03Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((res.length()) <= 1) throw new java.io.IOException(((\"Mot '\" + res) + \"' trop court\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7528/buggy-version/src.main.java.fr.DataBase.java", "BodyUseAPI": [], "Fixed commit": "a9f60cf60d43d16166e72d56b75d538485160a2f", "Url": "https://api.github.com/repos/cereales/premierBot", "Date": "2018-08-13T06:14:13Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ah.robox.comms.RemotePrinterDiscovery.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(containsChannel(printerChannels, channel))) { printerChannels.add(channel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6994/buggy-version/robox-comms.src.main.java.org.ah.robox.comms.RemotePrinterDiscovery.java", "BodyUseAPI": ["java.util.List<org.ah.robox.comms.PrinterChannel>.add(org.ah.robox.comms.PrinterChannel)"], "Fixed commit": "aaa76b704a02398a331e64ebd8e0bb87872e9548", "Url": "https://api.github.com/repos/natdan/rbx-toolset", "Date": "2018-01-08T20:55:45Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((restrictedArea.length) > 0) { for (int[] x : restrictedArea) { if (((x[0]) == (coord[0])) && ((x[1]) == (coord[1]))) { return false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6225/buggy-version/PlayerGrid.java", "BodyUseAPI": [], "Fixed commit": "264e12925bb7d19eb51ac9791c2d0ff872eaa4bf", "Url": "https://api.github.com/repos/LarWong/TanofWongSquared", "Date": "2018-01-14T22:51:33Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((checkArea(coord)) == false) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6225/buggy-version/PlayerGrid.java", "BodyUseAPI": [], "Fixed commit": "264e12925bb7d19eb51ac9791c2d0ff872eaa4bf", "Url": "https://api.github.com/repos/LarWong/TanofWongSquared", "Date": "2018-01-14T22:51:33Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (message == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2369/buggy-version/src.raft.Leader.java", "BodyUseAPI": [], "Fixed commit": "c1ea5b8e899fdd1a050170302d208bc3c703e7e0", "Url": "https://api.github.com/repos/chloemccarty/RaftProject", "Date": "2018-04-23T22:58:49Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (message == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2369/buggy-version/src.raft.Candidate.java", "BodyUseAPI": [], "Fixed commit": "c1ea5b8e899fdd1a050170302d208bc3c703e7e0", "Url": "https://api.github.com/repos/chloemccarty/RaftProject", "Date": "2018-04-23T22:58:49Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["NWNX.NWNX_Events.OnExamineObject_GetTarget()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (Event.Module.ExaminationSystem.OnModuleExamine(examiner, examinedObject)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/676/buggy-version/src.main.java.Event.Module.OnExamine.java", "BodyUseAPI": [], "Fixed commit": "25b388acbae98cbec237d6df310fa9024e59554e", "Url": "https://api.github.com/repos/zunath/Freescape_JVM", "Date": "2018-04-28T10:36:40Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.benberi.cadesim.server.model.player.PlayerManager.getPlayerByPosition(position.getX(),position.getY())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (canBumpPlayer(p, claimed, turn, phase)) { bumpPlayer(claimed, p, turn, phase); }else { p.getCollisionStorage().setCollided(turn, phase); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4659/buggy-version/src.com.benberi.cadesim.server.model.player.collision.CollisionCalculator.java", "BodyUseAPI": ["p.getCollisionStorage().setCollided(int,int)", "com.benberi.cadesim.server.model.player.collision.CollisionCalculator.bumpPlayer(com.benberi.cadesim.server.model.player.Player,com.benberi.cadesim.server.model.player.Player,int,int)", "com.benberi.cadesim.server.model.player.Player.getCollisionStorage()"], "Fixed commit": "e96044ccc0b658d3703088e82486cbade3ed5221", "Url": "https://api.github.com/repos/mdjong1/Obsidio-Server", "Date": "2018-01-10T18:46:30Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(playedTiles.containsKey(board.getTile(tempCoordinate)))) && ((board.getTile(tempCoordinate)) != null)) { tempScore += board.getTile(tempCoordinate).getScore(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6828/buggy-version/libgdx.core.src.data.move.Move.java", "BodyUseAPI": ["board.getTile(tempCoordinate).getScore()", "scrabble.Board.getTile(data.Coordinate)"], "Fixed commit": "76e04cdead02232dd172f62b8c09fd3ea385ac85", "Url": "https://api.github.com/repos/ollie-nye/scrabble", "Date": "2018-04-29T18:52:15Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(playedTiles.containsKey(board.getTile(tempCoordinate)))) && ((board.getTile(tempCoordinate)) != null)) { tempScore += board.getTile(tempCoordinate).getScore(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6828/buggy-version/libgdx.core.src.data.move.Move.java", "BodyUseAPI": ["board.getTile(tempCoordinate).getScore()", "scrabble.Board.getTile(data.Coordinate)"], "Fixed commit": "76e04cdead02232dd172f62b8c09fd3ea385ac85", "Url": "https://api.github.com/repos/ollie-nye/scrabble", "Date": "2018-04-29T18:52:15Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.states.ValidState.inspection(java.util.List<model.constraints.ForbiddenConstraint>,repository.PackageRepository)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (fss != null) finals.add(fss);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9401/buggy-version/src.model.Machine.java", "BodyUseAPI": ["java.util.LinkedList<model.states.FinalState>.add(model.states.FinalState)"], "Fixed commit": "638bbb6594c95636ac97c6f832c8d8392e585dd5", "Url": "https://api.github.com/repos/ukc-co663/dependency-solver-RyanTaplin1705", "Date": "2018-03-02T02:16:47Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.sagebionetworks.bridge.rest.RestUtils.isNotBlank(info.getSdkName())) { sb.append(info.getSdkName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8659/buggy-version/rest-client.src.main.java.org.sagebionetworks.bridge.rest.RestUtils.java", "BodyUseAPI": ["org.sagebionetworks.bridge.rest.model.ClientInfo.getSdkName()", "java.lang.StringBuilder.append(info.getSdkName())"], "Fixed commit": "d87c9fba70b9f76f71a64c56f53e476d71131728", "Url": "https://api.github.com/repos/alxdarksage/BridgeJavaSDK", "Date": "2018-03-12T22:49:24Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.sagebionetworks.bridge.rest.RestUtils.isNotBlank(info.getDeviceName())) { sb.append(info.getDeviceName()); sb.append(\"; \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8659/buggy-version/rest-client.src.main.java.org.sagebionetworks.bridge.rest.RestUtils.java", "BodyUseAPI": ["org.sagebionetworks.bridge.rest.model.ClientInfo.getDeviceName()", "java.lang.StringBuilder.append(info.getDeviceName())"], "Fixed commit": "d87c9fba70b9f76f71a64c56f53e476d71131728", "Url": "https://api.github.com/repos/alxdarksage/BridgeJavaSDK", "Date": "2018-03-12T22:49:24Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.sagebionetworks.bridge.rest.RestUtils.isNotBlank(info.getOsVersion())) { sb.append(\"/\"); sb.append(info.getOsVersion()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8659/buggy-version/rest-client.src.main.java.org.sagebionetworks.bridge.rest.RestUtils.java", "BodyUseAPI": ["org.sagebionetworks.bridge.rest.model.ClientInfo.getOsVersion()", "java.lang.StringBuilder.append(info.getOsVersion())"], "Fixed commit": "d87c9fba70b9f76f71a64c56f53e476d71131728", "Url": "https://api.github.com/repos/alxdarksage/BridgeJavaSDK", "Date": "2018-03-12T22:49:24Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((enrollmentProgramInstance.getEvents().size()) > 0) { date = org.hisp.dhis.android.sdk.utils.support.DateUtils.parseDate(enrollmentProgramInstance.getEvents().get(0).getEventDate()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8520/buggy-version/core.src.main.java.org.hisp.dhis.android.sdk.utils.services.ProgramIndicatorService.java", "BodyUseAPI": ["enrollmentProgramInstance.getEvents().get(int)", "org.hisp.dhis.android.sdk.utils.support.DateUtils.parseDate(enrollmentProgramInstance.getEvents().get(0).getEventDate())", "org.hisp.dhis.android.sdk.persistence.models.Enrollment.getEvents()", "enrollmentProgramInstance.getEvents().get(0).getEventDate()"], "Fixed commit": "4f49d23e38daa9490121c24885605536efa4d329", "Url": "https://api.github.com/repos/EyeSeeTea/dhis2-android-sdk", "Date": "2018-02-27T21:28:48Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (task.isSuccessful()) { com.google.firebase.auth.FirebaseUser user = mAuth.getCurrentUser(); }else { android.widget.Toast.makeText(this, \"You are not yet registered, please register and try again!\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7861/buggy-version/app.src.main.java.com.example.ethannesbitt.youcook.Login.java", "BodyUseAPI": [], "Fixed commit": "f8543cf2b4461b62ac7025dd5294c952c342102f", "Url": "https://api.github.com/repos/E-Nesbitt/YouCook", "Date": "2018-02-07T12:04:19Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((apartmentRepository.findOne(apartmentId)) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8304/buggy-version/src.main.java.com.capgemini.service.impl.ApartmentServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "963b114d23bfa657930debb3cf164ba35050d3f8", "Url": "https://api.github.com/repos/kredki/apartments", "Date": "2018-08-24T20:02:01Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.capgemini.domain.ApartmentEntity.getBuilding()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (building != null) { buildingId = building.getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8304/buggy-version/src.main.java.com.capgemini.mappers.ApartmentMapper.java", "BodyUseAPI": ["com.capgemini.domain.BuildingEntity.getId()"], "Fixed commit": "963b114d23bfa657930debb3cf164ba35050d3f8", "Url": "https://api.github.com/repos/kredki/apartments", "Date": "2018-08-24T20:02:01Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.remaining()) != 0) this.checkIndex(this.readIndex);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4267/buggy-version/src.main.java.io.sutil.buffer.BaseBuffer.java", "BodyUseAPI": [], "Fixed commit": "a9ef1117f5cf6b3cf04879cad640491c4afd9157", "Url": "https://api.github.com/repos/mindstorm38/sutil", "Date": "2018-06-10T10:53:53Z"},
{"Line": "=>521", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (columnSize.hasKnownSize()) { estOutputRowWidth += columnSize.getKnownSize(); estBatchHolderValuesRowWidth += columnSize.getKnownSize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5192/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.physical.impl.aggregate.HashAggTemplate.java", "BodyUseAPI": ["RecordBatchSizer.ColumnSize.getKnownSize()", "RecordBatchSizer.ColumnSize.getKnownSize()"], "Fixed commit": "97b17286c4ad9ab3418355d2d435614bdc713fce", "Url": "https://api.github.com/repos/ilooner/drill", "Date": "2018-02-02T19:32:31Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(links.contains(page.attr(\"abs:href\")))) { links.add(page.attr(\"abs:href\")); java.lang.System.out.format(\"Recursion %d %40s [%10s] \\n\", depth, com.gaurabdahal.simplecrawler.SimpleCrawler.trim(page.text(), 35), page.attr(\"abs:href\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3022/buggy-version/src.main.java.com.gaurabdahal.simplecrawler.SimpleCrawler.java", "BodyUseAPI": ["java.io.PrintStream.format(java.lang.String,int,java.lang.String,page.attr(\"abs:href\"))", "org.jsoup.nodes.Element.attr(java.lang.String)", "java.util.HashSet<java.lang.String>.add(page.attr(\"abs:href\"))", "org.jsoup.nodes.Element.text()", "org.jsoup.nodes.Element.attr(java.lang.String)", "com.gaurabdahal.simplecrawler.SimpleCrawler.trim(page.text(),int)"], "Fixed commit": "30537a660ee4a84d5bf241e98e206c9d24c52a3a", "Url": "https://api.github.com/repos/gaurabdahal/simplecrawler", "Date": "2018-09-10T21:06:05Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.state) == 2) this.state = 3;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2530/buggy-version/src.logic.Ghost.java", "BodyUseAPI": [], "Fixed commit": "f0a3208e4248b5ecf0b1f904ab7d01cb8b587533", "Url": "https://api.github.com/repos/MaximeMF/PacMan", "Date": "2018-04-15T04:51:36Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value >= 1) { if ((notehdlr.getNotes(player.getUniqueId())) != null) { if (value > (notehdlr.getNotes(player.getUniqueId()).size())) { sender.sendMessage(\"Invalid number!\"); return false; } value -= 1; notehdlr.removeNote(player.getUniqueId(), value); sender.sendMessage(\"The note has been removed!\"); }else { sender.sendMessage(\"The player's list is already empty!\"); } }else { sender.sendMessage(\"Not a valid number!\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6380/buggy-version/PlayerNote.src.playernote.cmd.RemoveNote.java", "BodyUseAPI": [], "Fixed commit": "729eb09ddba1953265e92f4a17ced5d08c0bfc39", "Url": "https://api.github.com/repos/Gokborg/PlayerNote", "Date": "2018-07-22T23:40:17Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (inputValue != null) { try { librarian.remove_book(java.lang.Integer.parseInt(inputValue)); update_table(); } catch (java.lang.NumberFormatException e) { java.lang.System.out.println(\"ERROR: Book id provided is not valid.\"); javax.swing.JOptionPane.showMessageDialog(this, \"Please enter a valid book id.\", \"Bad Input\", javax.swing.JOptionPane.ERROR_MESSAGE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8034/buggy-version/src.ManageBooksPanel.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "slm.Librarian.remove_book(int)"], "Fixed commit": "2d5969ccd57f83851317356b0f6d72a6334d00a1", "Url": "https://api.github.com/repos/pradishb/simple-library-manager", "Date": "2018-01-09T08:49:28Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.web.client.RestTemplate.exchange(builder.toString(),HttpMethod.GET,io.metro.measurables.HttpEntity,org.springframework.core.ParameterizedTypeReference<org.springframework.hateoas.Resource<java.lang.Object>>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((response != null) && ((response.getStatusCode()) != null)) { hasAuthentication = !(response.getStatusCode().equals(HttpStatus.UNAUTHORIZED)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1179/buggy-version/src.main.java.io.metro.measurables.MeasurableClient.java", "BodyUseAPI": ["io.metro.measurables.ResponseEntity.getStatusCode()", "response.getStatusCode().equals(HttpStatus.UNAUTHORIZED)"], "Fixed commit": "427d2b54ba6d549228670a17382b9c4a112dbe03", "Url": "https://api.github.com/repos/metrolabs/metro-measurables-client", "Date": "2018-05-10T18:33:22Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (result == null) { return retResult; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3634/buggy-version/app.src.main.java.com.sohn.joonsung.araone.machine.TextClassfication.java", "BodyUseAPI": [], "Fixed commit": "0c2e54222ba43e226723f992cd72e24aa5ad6c7d", "Url": "https://api.github.com/repos/GreenWindTaker/MLAPP.AraOne", "Date": "2018-01-09T05:42:13Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { androidx.fragment.app.FragmentTransaction fragmentTransaction = getSupportFragmentManager().beginTransaction(); try { androidx.fragment.app.Fragment homeFragment = net.xcreen.restsms.HomeFragment.class.newInstance(); fragmentTransaction.replace(R.id.main_framelayout, homeFragment).commit(); } catch (java.lang.Exception ex) { ex.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8021/buggy-version/app.src.main.java.net.xcreen.restsms.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d7c54abce2d4e1240fd62e0b5c8c3ececab7d4f2", "Url": "https://api.github.com/repos/Xcreen/RestSMS", "Date": "2018-10-02T13:00:11Z"},
{"Line": "=>1250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.akaza.openclinica.dao.managestudy.StudyEventDefinitionDAO.findByOidAndStudy(java.lang.String,studyBean.getId(),studyBean.getParentStudyId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(studyEventDefintionBean.isTypeCommon())) { org.akaza.openclinica.bean.managestudy.StudyEventBean studyEvent = ((org.akaza.openclinica.bean.managestudy.StudyEventBean) (studyEventDAO.findByStudySubjectIdAndDefinitionIdAndOrdinal(studySubjectBean.getId(), studyEventDefintionBean.getId(), java.lang.Integer.valueOf(studyEventDataBean.getStudyEventRepeatKey())))); if ((studyEvent == null) || ((studyEvent.getId()) == 0)) { if (studyEventDefintionBean.isRepeating()) { mf.applyPattern(respage.getString(\"your_study_event_oid_for_subject_oid\")); java.lang.Object[] arguments = new java.lang.Object[]{ sedOid, oid }; errors.add(mf.format(arguments)); logger.debug((((\"logged an error with se oid \" + sedOid) + \" and subject oid \") + oid)); }else { mf.applyPattern(respage.getString(\"your_study_non_repeating_event_oid_for_subject_oid_repeat_key\")); java.lang.Object[] arguments = new java.lang.Object[]{ studyEventDataBean.getStudyEventRepeatKey(), sedOid, oid }; errors.add(mf.format(arguments)); logger.debug((((((\"logged an error with se oid \" + sedOid) + \" and subject oid \") + oid) + \"and repeat key \") + (studyEventDataBean.getStudyEventRepeatKey()))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9534/buggy-version/web.src.main.java.org.akaza.openclinica.web.crfdata.ImportCRFDataService.java", "BodyUseAPI": ["org.akaza.openclinica.bean.managestudy.StudyEventDefinitionBean.getId()", "org.akaza.openclinica.dao.managestudy.StudyEventDAO.findByStudySubjectIdAndDefinitionIdAndOrdinal(studySubjectBean.getId(),studyEventDefintionBean.getId(),java.lang.Integer)", "org.akaza.openclinica.bean.managestudy.StudyEventDefinitionBean.isRepeating()"], "Fixed commit": "a69f32e1e7be255f8b1585ec70ed231fb1404552", "Url": "https://api.github.com/repos/Taoli2018/OpenClinica", "Date": "2018-10-09T13:18:55Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (friendlyUrl.endsWith(\"*\")) { friendlyUrl = friendlyUrl.substring(0, ((friendlyUrl.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6200/buggy-version/robocode.repository.src.main.java.net.sf.robocode.repository.Repository.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "2994283f7bc90ff52440ee7ffbc72794239c7a35", "Url": "https://api.github.com/repos/robo-code/robocode", "Date": "2018-04-09T20:41:41Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((blog.getAuthor()) == null) { blog.setAuthor(\"Jann Lee\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/716/buggy-version/src.main.java.cn.blog.service.impl.BlogServiceImpl.java", "BodyUseAPI": ["cn.blog.pojo.Blog.setAuthor(java.lang.String)"], "Fixed commit": "a9a1eec5f19de6fb060750e2d8ef631006353302", "Url": "https://api.github.com/repos/liqianggh/blog", "Date": "2018-02-22T15:52:38Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN_MR1)) { setCompoundDrawablesRelativeWithIntrinsicBounds(drawableLeft, drawableTop, drawableRight, drawableBottom); }else { setCompoundDrawablesWithIntrinsicBounds(drawableLeft, drawableTop, drawableRight, drawableBottom); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4736/buggy-version/app.src.main.java.openfoodfacts.github.scrachx.openfood.utils.CustomEditTextView.java", "BodyUseAPI": [], "Fixed commit": "9653a46ac5455f6f6f7ae23bc0c80072a632543f", "Url": "https://api.github.com/repos/sowmya9029/openfoodfacts-androidapp", "Date": "2018-03-11T16:05:30Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (arrayCopy != null) { for (com.ibm.wsspi.collector.manager.SynchronousHandler synchronousHandler : arrayCopy) { synchronousHandler.synchronousWrite(event); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7089/buggy-version/dev.com.ibm.ws.logging.core.src.com.ibm.ws.collector.manager.buffer.BufferManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "85b7f519ea6b7b68ea448f84e6d3dbd8ca057b46", "Url": "https://api.github.com/repos/Yushan-Lin/open-liberty", "Date": "2018-02-08T22:19:44Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.common.cklibrary.utils.JsonUtil.getInstance().json2Obj(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(com.kymjs.common.StringUtils.isEmpty(bean.getData().getFace()))) { com.kymjs.common.PreferenceHelper.write(getApplicationContext(), StringConstants.FILENAME, \"face\", bean.getData().getFace()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6370/buggy-version/SillyChildClient.app.src.main.java.com.sillykid.app.loginregister.LoginActivity.java", "BodyUseAPI": ["com.kymjs.common.PreferenceHelper.write(getApplicationContext(),StringConstants.FILENAME,java.lang.String,bean.getData().getFace())", "bean.getData().getFace()", "com.sillykid.app.entity.loginregister.LoginBean.getData()"], "Fixed commit": "a601f13c9af314819e1d1cf31d8716d8125e052e", "Url": "https://api.github.com/repos/921668753/SillyChildClient2-Android", "Date": "2018-09-20T03:31:50Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.common.cklibrary.utils.JsonUtil.getInstance().json2Obj(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((bean == null) || ((bean.getData()) == null)) { errorMsg(getString(R.string.serverError), 0); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6370/buggy-version/SillyChildClient.app.src.main.java.com.sillykid.app.loginregister.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "a601f13c9af314819e1d1cf31d8716d8125e052e", "Url": "https://api.github.com/repos/921668753/SillyChildClient2-Android", "Date": "2018-09-20T03:31:50Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.common.cklibrary.utils.JsonUtil.getInstance().json2Obj(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(com.kymjs.common.StringUtils.isEmpty(bean.getData().getUsername()))) { com.kymjs.common.PreferenceHelper.write(getApplicationContext(), StringConstants.FILENAME, \"username\", bean.getData().getUsername()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6370/buggy-version/SillyChildClient.app.src.main.java.com.sillykid.app.loginregister.LoginActivity.java", "BodyUseAPI": ["bean.getData().getUsername()", "com.sillykid.app.entity.loginregister.LoginBean.getData()", "com.kymjs.common.PreferenceHelper.write(getApplicationContext(),StringConstants.FILENAME,java.lang.String,bean.getData().getUsername())"], "Fixed commit": "a601f13c9af314819e1d1cf31d8716d8125e052e", "Url": "https://api.github.com/repos/921668753/SillyChildClient2-Android", "Date": "2018-09-20T03:31:50Z"},
{"Line": "=>625", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((aty) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6370/buggy-version/SillyChildClient.app.src.main.java.com.sillykid.app.community.dynamic.DynamicDetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "a601f13c9af314819e1d1cf31d8716d8125e052e", "Url": "https://api.github.com/repos/921668753/SillyChildClient2-Android", "Date": "2018-09-20T03:31:50Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (strings.isEmpty()) { linkedList.addLast(\"\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7963/buggy-version/src.main.java.com.zam.logviewer.terminallines.ListTerminalLines.java", "BodyUseAPI": [], "Fixed commit": "1427f7eff13c81f4fbf837775d22436f2d51ca82", "Url": "https://api.github.com/repos/zamhassam/logviewer", "Date": "2018-09-14T08:17:01Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((placeHolderId) == 0) { placeHolderId = R.drawable.pattern_13; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9501/buggy-version/app.src.main.java.in.ninos.activities.ProfileActivity.java", "BodyUseAPI": [], "Fixed commit": "76e6f9db208351b221b49eba119b9cd017e106e0", "Url": "https://api.github.com/repos/ninosapp/Ninos", "Date": "2018-04-04T11:53:26Z"},
{"Line": "=>629", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (canBeTakenEnPassant != null) { if (canBeTakenEnPassant.name.equals(\"Pawn\")) { this.twoSquareMovedPawn = ((jchess.Pawn) (canBeTakenEnPassant)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8628/buggy-version/jchess.Chessboard.java", "BodyUseAPI": ["canBeTakenEnPassant.name.equals(java.lang.String)"], "Fixed commit": "22f2381479e969146b01bad38c2e98841597e930", "Url": "https://api.github.com/repos/dynastykaiserlord123/JOChess-1", "Date": "2018-01-21T22:47:09Z"},
{"Line": "=>986", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (object instanceof un.unece.uncefact.data.standard.unqualifieddatatype._20.TextType) { for (un.unece.uncefact.data.standard.unqualifieddatatype._20.TextType id : ((java.util.List<un.unece.uncefact.data.standard.unqualifieddatatype._20.TextType>) (collection))) if (org.apache.commons.lang3.StringUtils.isNotEmpty(id.getValue())) { hasOnlyEmptyElements = false; } }else { for (java.lang.Object obj : collection) if (!(allFieldsAreNullOrEmptyList(obj))) { hasOnlyEmptyElements = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7387/buggy-version/service.src.main.java.eu.europa.ec.fisheries.uvms.rules.service.business.AbstractFact.java", "BodyUseAPI": [], "Fixed commit": "6943ae62549dc70788311d58ead5cb204c883613", "Url": "https://api.github.com/repos/UnionVMS/UVMS-RulesModule-APP", "Date": "2018-04-23T09:48:11Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.activity.CropActivity.findPoints()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (points != null) { mSelectionImageView.setPoints(points); }else { com.owncloud.android.lib.common.utils.Log_OC.d(com.owncloud.android.ui.activity.CropActivity.TAG, getResources().getString(R.string.no_contour_found)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9005/buggy-version/src.com.owncloud.android.ui.activity.CropActivity.java", "BodyUseAPI": ["com.owncloud.android.ui.QuadrilateralSelectionImageView.setPoints(java.util.List<android.graphics.PointF>)"], "Fixed commit": "b178bf2e78cbfd9255b2ed2f6a719e8535257c4e", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-03-12T06:43:04Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (joinedList != null) { if (joinedList.isEmpty()) { return new com.gs.collections.impl.list.mutable.FastList(0); } return mapper.mapReturnNullIfIncompleteIndexHit(joinedList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/255/buggy-version/reladomo.src.main.java.com.gs.fw.common.mithra.finder.MappedOperation.java", "BodyUseAPI": ["com.gs.fw.common.mithra.finder.Mapper.mapReturnNullIfIncompleteIndexHit(java.util.List)", "java.util.List.isEmpty()"], "Fixed commit": "45afae61f5a55390c57b2a205d2e82684bd48ef4", "Url": "https://api.github.com/repos/Diffblue-benchmarks/reladomo", "Date": "2018-01-22T12:31:25Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((track.getArtistImage()) != null) { com.bumptech.glide.Glide.with(itemView).load(track.getArtistImage().get(2).getImageUrl()).into(trackImage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8240/buggy-version/app.src.main.java.com.elkcreek.rodneytressler.musicapp.utils.TracksAdapter.java", "BodyUseAPI": ["com.bumptech.glide.Glide.with(itemView).load(track.getArtistImage().get(2).getImageUrl())", "MusicApi.Track.getArtistImage()", "track.getArtistImage().get(2).getImageUrl()", "com.bumptech.glide.Glide.with(itemView).load(track.getArtistImage().get(2).getImageUrl()).into(android.widget.ImageView)", "track.getArtistImage().get(int)"], "Fixed commit": "7dc6f74c9e33219c87c1d5016d6c2dff7e10c946", "Url": "https://api.github.com/repos/Travis40508/MusicApp", "Date": "2018-08-18T18:56:54Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(grids.contains(d))) grids.add(d);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3385/buggy-version/core.src.com.kinglogic.game.Managers.WorldManager.java", "BodyUseAPI": ["java.util.HashSet<com.kinglogic.game.Physics.Grid>.add(com.kinglogic.game.Physics.Grid)"], "Fixed commit": "c7378e39a0ea2ec8d8df271484bd77893213070d", "Url": "https://api.github.com/repos/cking20/SpaceVoxelGame", "Date": "2018-04-07T01:06:21Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.parser.ObjectDeserializer.getClass()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((com.alibaba.fastjson.parser.JavaBeanDeserializer.class.isAssignableFrom(deserClass)) && (deserClass != (com.alibaba.fastjson.parser.JavaBeanDeserializer.class))) && (deserClass != (com.alibaba.fastjson.parser.ThrowableDeserializer.class))) { this.setResolveStatus(com.alibaba.fastjson.parser.DefaultJSONParser.NONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3288/buggy-version/src.main.java.com.alibaba.fastjson.parser.DefaultJSONParser.java", "BodyUseAPI": [], "Fixed commit": "f7d5b7dd4fd4e5f03240c7ed3d6830d6bd31e4d7", "Url": "https://api.github.com/repos/FlakyTestDetection/fastjson", "Date": "2018-01-16T02:53:28Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (packageID.version.value.equals(Names.DEFAULT_VERSION.getValue())) { packageID.version.value = pathList.get(0).toFile().getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7649/buggy-version/compiler.ballerina-lang.src.main.java.org.wso2.ballerinalang.compiler.packaging.converters.PathConverter.java", "BodyUseAPI": [], "Fixed commit": "bfb87f0b363ffba6741326cc3bb3e1cf6cb5c2c8", "Url": "https://api.github.com/repos/NatashaWso2/ballerina", "Date": "2018-06-06T13:07:16Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset.withinBounds()) { setRowPointerValues(); return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/715/buggy-version/processing.src.main.java.io.druid.segment.QueryableIndexIndexableAdapter.java", "BodyUseAPI": [], "Fixed commit": "28ba4b53853d68c50a65807ff9a578ce6c480f38", "Url": "https://api.github.com/repos/metamx/druid", "Date": "2018-02-03T16:50:13Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((wifiSsid == null) || (wifiSsid.isEmpty())) { wifiSsid = \"-\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5307/buggy-version/sensorlisteners.src.main.java.edu.umd.fcmd.sensorlisteners.model.network.NetworkProbeFactory.java", "BodyUseAPI": [], "Fixed commit": "c046e30a682f6b557e750a5a38aedc322f51bf7d", "Url": "https://api.github.com/repos/FraunhoferCESE/madcap", "Date": "2018-03-22T21:06:08Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.eventfinder.www.eventfindermobile.NewAccount.findViewById(R.id.genderRadioGroup)", "android.support.constraint.ConstraintLayout.getChildAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (child != gender) { if ((child.getCheckedRadioButtonId()) == (-1)) { validInput = false; err_text = (err_text) + \"An account type must be selected.\\n\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1548/buggy-version/app.src.main.java.com.eventfinder.www.eventfindermobile.NewAccount.java", "BodyUseAPI": ["android.widget.RadioGroup.getCheckedRadioButtonId()"], "Fixed commit": "50624d5bce8319dd6f4c07e09a5fc4411263d785", "Url": "https://api.github.com/repos/tyler95smith/EventFinderMobile", "Date": "2018-03-02T16:57:45Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getInventory().getType()) != (org.bukkit.event.inventory.InventoryType.HOPPER)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2617/buggy-version/src.pl.plajer.villagedefense3.events.Events.java", "BodyUseAPI": [], "Fixed commit": "51fa0d709449719bb2f984312707e03dd922c487", "Url": "https://api.github.com/repos/Plajer-Lair/Village_Defense", "Date": "2018-05-04T10:30:12Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.massivecraft.factions.listeners.FPlayers.getInstance().getByPlayer(event.getPlayer())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(fme.hasFaction())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9645/buggy-version/src.main.java.com.massivecraft.factions.listeners.FactionsBlockListener.java", "BodyUseAPI": [], "Fixed commit": "1df8faf488823c0d21d015c1676b1bcb2f897126", "Url": "https://api.github.com/repos/utarwyn/SavageFactions", "Date": "2018-05-14T15:59:23Z"},
{"Line": "=>515", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fme.getFaction().getBanner()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (warBanner != null) { org.bukkit.inventory.meta.ItemMeta warmeta = warBanner.getItemMeta(); warmeta.setDisplayName(P.p.color(P.p.getConfig().getString(\"fbanners.Item.Name\"))); warmeta.setLore(P.p.colorList(P.p.getConfig().getStringList(\"fbanners.Item.Lore\"))); warBanner.setItemMeta(warmeta); }else { warBanner = P.p.createItem(Material.BANNER, 1, ((short) (1)), P.p.getConfig().getString(\"fbanners.Item.Name\"), P.p.getConfig().getStringList(\"fbanners.Item.Lore\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9645/buggy-version/src.main.java.com.massivecraft.factions.listeners.FactionsPlayerListener.java", "BodyUseAPI": ["org.bukkit.inventory.ItemStack.getItemMeta()", "org.bukkit.inventory.ItemStack.setItemMeta(org.bukkit.inventory.meta.ItemMeta)"], "Fixed commit": "1df8faf488823c0d21d015c1676b1bcb2f897126", "Url": "https://api.github.com/repos/utarwyn/SavageFactions", "Date": "2018-05-14T15:59:23Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ids == null) || (ids.isEmpty())) { return new java.util.HashSet<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2759/buggy-version/services.messaging.src.main.java.com.github.punchat.messaging.domain.member.MemberFinderImpl.java", "BodyUseAPI": [], "Fixed commit": "573051ac70fb2770821ca22834d74d05021f0cf5", "Url": "https://api.github.com/repos/punchat/punchat", "Date": "2018-06-09T12:32:09Z"},
{"Line": "=>1818", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mode == (net.osmand.plus.activities.MapActivity.ShowQuickSearchMode.CURRENT)) { net.osmand.plus.activities.MapActivity.mapContextMenu.close(); }else { hideContextMenu(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8004/buggy-version/OsmAnd.src.net.osmand.plus.activities.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "dfda09b8b771c0c50786b3440261abe4eeac5134", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2018-02-23T10:17:41Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((str == null) || ((str.length()) == 0)) { str = \"http://www.itssu.ie/wp-content/themes/itsligo_wordpress_2013/img/no_image_available.jpg\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9029/buggy-version/Staging.Online-Learning-Platform-android-app-master.app.src.main.java.com.example.kbasa.teaching.students.MyRecylcerViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "2881dbe3bd0888ff7f55aee3b2a9edd440da9d8f", "Url": "https://api.github.com/repos/derekwang1994/COEN268_Project", "Date": "2018-03-19T06:03:18Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getOperationsService().findGlobalSetting(GlobalSetting.PASSWORD_EXPIRE_DAYS,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(org.apache.commons.lang.StringUtils.isEmpty(expireSetting.getValue()))) { passwordExpiresInDays = java.lang.Integer.parseInt(expireSetting.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2245/buggy-version/metl-ui.src.main.java.org.jumpmind.metl.core.authentication.UserAuthenticationInternal.java", "BodyUseAPI": ["java.lang.Integer.parseInt(expireSetting.getValue())", "org.jumpmind.metl.core.model.GlobalSetting.getValue()"], "Fixed commit": "4baf3cb620a28e188782dcc4ab3b099ed1596918", "Url": "https://api.github.com/repos/JumpMind/metl", "Date": "2018-07-17T14:52:39Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(new java.io.File((((this.getFilesDir()) + \"/\") + \"login.json\")).exists())) { new com.example.marta.blueteeth.JSONDriver(getAssets().open(\"login.json\"), this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/519/buggy-version/app.src.main.java.com.example.marta.blueteeth.HomeScreen.java", "BodyUseAPI": [], "Fixed commit": "1af2501e6334eeada4806a65672df27b19230580", "Url": "https://api.github.com/repos/Martydude15/BlueTeeth", "Date": "2018-04-20T01:13:55Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (e != null) edu.wpi.first.wpilibj.smartdashboard.SmartDashboard.putNumber(e.toString(), (value == null ? 0 : value));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/293/buggy-version/src.main.java.org.ilite.frc.common.util.SystemUtils.java", "BodyUseAPI": ["E.toString()", "edu.wpi.first.wpilibj.smartdashboard.SmartDashboard.putNumber(java.lang.String,double)"], "Fixed commit": "3d0e3e7c1ff6521d4fb5bd6cccde6514799ea833", "Url": "https://api.github.com/repos/iliterobotics/FRC-Robot-2018", "Date": "2018-02-10T14:39:16Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.guysfromlab.parser.entity.PersAcc.getDebtEnd()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (debt == 0) reply += (res.getString(BundleConstants.NO_DEBT)) + '\\n'; else if (debt > 0) reply += ((res.getString(BundleConstants.DEBT_BIG)) + (debt * (-1))) + '\\n'; else if (debt < 0) reply += ((res.getString(BundleConstants.DEBT)) + debt) + '\\n';", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4908/buggy-version/src.com.guysfromlab.command.GetMeterCmd.java", "BodyUseAPI": [], "Fixed commit": "cdfe3bda70494c4f3e3de1767eb26326d9f29784", "Url": "https://api.github.com/repos/GuysFromLab/HomeBot", "Date": "2018-07-19T20:09:27Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (condition instanceof com.heaven7.ve.colorgap.filter.ShotCategoryFilter.ShotCategoryCondition) { key = FLAG_SHOT_CATEGORY; }else { throw new java.lang.IllegalArgumentException((\"unsupport condition = \" + (condition.getClass().getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7652/buggy-version/java.ffmpeg-merge-video.src.main.java.com.heaven7.ve.colorgap.filter.GroupFilter.java", "BodyUseAPI": ["com.heaven7.ve.colorgap.filter.GapColorCondition.getClass()", "condition.getClass().getName()"], "Fixed commit": "3872c1e72d37367b887935bf9bec1c150b4c2a08", "Url": "https://api.github.com/repos/LightSun/research-institute", "Date": "2018-08-08T09:26:50Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (j < count) time = refTime + (j * dt);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9713/buggy-version/JavaCode.CTlib.src.main.java.cycronix.ctlib.CTdata.java", "BodyUseAPI": [], "Fixed commit": "1d9c2eb8d3259ecfdb3e30a73d1fda8c055c7b2e", "Url": "https://api.github.com/repos/jpw-erigo/cloudturbine", "Date": "2018-03-01T04:31:10Z"},
{"Line": "=>639", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.IntBuffer.allocate(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((sourceLength.get(0)) == 0) { return \"No shader source\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7330/buggy-version/graphics-by-opengl-j2se.src.main.java.com.nucleus.opengl.GLES20Wrapper.java", "BodyUseAPI": [], "Fixed commit": "ec02077e63e705e14ee5e1a471d5cdafb681b1ec", "Url": "https://api.github.com/repos/rsahlin/graphics-by-opengl", "Date": "2018-01-07T19:37:56Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mate == null) { int k = 0; }else { int r = 9; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3886/buggy-version/src.main.java.org.broadinstitute.hellbender.tools.walkers.realignmentfilter.FilterAlignmentArtifacts.java", "BodyUseAPI": [], "Fixed commit": "5a0ad1a1bb1e3cab0cbc626b2da0b87e5c2770cf", "Url": "https://api.github.com/repos/broadinstitute/gatk", "Date": "2018-02-25T04:17:41Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.net2plan.internal.AttributeMap.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (val == null) return defaultValue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3464/buggy-version/Net2Plan-Core.src.main.java.com.net2plan.interfaces.networkDesign.NetworkElement.java", "BodyUseAPI": [], "Fixed commit": "78cab9f0d9d83b16046182f39835273f3df40dc3", "Url": "https://api.github.com/repos/girtel/Net2Plan", "Date": "2018-05-25T10:58:47Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.net2plan.internal.AttributeMap.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (val == null) return defaultValue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3464/buggy-version/Net2Plan-Core.src.main.java.com.net2plan.interfaces.networkDesign.NetworkElement.java", "BodyUseAPI": [], "Fixed commit": "78cab9f0d9d83b16046182f39835273f3df40dc3", "Url": "https://api.github.com/repos/girtel/Net2Plan", "Date": "2018-05-25T10:58:47Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (g.equals(\"}\")) { g = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3236/buggy-version/src.main.java.edu.ucar.unidata.rosetta.service.wizard.WizardManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "a3ac40f18b29a08f722f4cc8a04ad63df3495edc", "Url": "https://api.github.com/repos/oxelson/rosetta", "Date": "2018-09-24T10:56:57Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parent.selectedGroupPosition) > 0) { final database.GroupData group = parent.getGroups().get(((parent.selectedGroupPosition) - 1)); notification.NotificationUtils.unregisterGroup(parent, group); java.util.ArrayList<database.RecordData> records = parent.getRecords(); for (database.RecordData record : records) { record.isChecked = false; utils.ObjectCache.getDbInstance(parent.getApplicationContext()).update(record); } notification.NotificationUtils.registerGroup(parent, group); parent.refreshRecords(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/85/buggy-version/app.src.main.java.ru.trjoxuvw.manualrecurrencetasks.MainActivity.java", "BodyUseAPI": ["ru.trjoxuvw.manualrecurrencetasks.MainActivity.getGroups()", "notification.NotificationUtils.registerGroup(ru.trjoxuvw.manualrecurrencetasks.MainActivity,database.GroupData)", "utils.ObjectCache.getDbInstance(parent.getApplicationContext())", "java.util.ArrayList<database.GroupData>.get(int)", "ru.trjoxuvw.manualrecurrencetasks.MainActivity.refreshRecords()", "notification.NotificationUtils.unregisterGroup(ru.trjoxuvw.manualrecurrencetasks.MainActivity,database.GroupData)", "ru.trjoxuvw.manualrecurrencetasks.MainActivity.getApplicationContext()", "utils.ObjectCache.getDbInstance(parent.getApplicationContext()).update(database.RecordData)", "ru.trjoxuvw.manualrecurrencetasks.MainActivity.getRecords()"], "Fixed commit": "c7f931d04742d5daca0d9bc2ba8c0f34a3591123", "Url": "https://api.github.com/repos/bogdanov-d-a/ManualRecurrenceTasks", "Date": "2018-05-26T21:59:06Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (latex.contains(\"subarray\")) { latex = latex.replaceAll(\"subarray\", \"array\"); com.formulasearchengine.mathosphere.pomlp.MathParser.LOG.trace((\" Eval replacement of subarray: \" + latex)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3295/buggy-version/pomlp.src.main.java.com.formulasearchengine.mathosphere.pomlp.MathParser.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "eedab33195c5ea9b0f818b64e25602cbe07a0861", "Url": "https://api.github.com/repos/ag-gipp/mathosphere", "Date": "2017-12-21T04:59:38Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4410/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "8a05073592abf4e551cc48d645fdb54df0f4cc13", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.ballerina.plugins.idea.sdk.BallerinaSdkService.getInstance(project).getSdkHomePath(<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (sdkHomePath != null) { java.lang.System.setProperty(\"ballerina.home\", sdkHomePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5445/buggy-version/tool-plugins.intellij.src.main.java.io.ballerina.plugins.idea.BallerinaExternalAnnotator.java", "BodyUseAPI": ["java.lang.System.setProperty(java.lang.String,java.lang.String)"], "Fixed commit": "124e97ba34656e49d3d1a24206ff5865216a7359", "Url": "https://api.github.com/repos/ballerina-platform/ballerina-lang", "Date": "2018-06-15T08:56:28Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gdsc.core.utils.TextUtils.isNullOrEmpty(path)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3500/buggy-version/src.main.java.gdsc.smlm.ij.plugins.ConfigurationTemplate.java", "BodyUseAPI": [], "Fixed commit": "2318d810db1b57993a9d69a303cd56f11c49f623", "Url": "https://api.github.com/repos/aherbert/gdsc-smlm", "Date": "2018-07-02T13:25:04Z"},
{"Line": "=>713", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file != null) gdsc.smlm.ij.plugins.ConfigurationTemplate.saveLoadedTemplates();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3500/buggy-version/src.main.java.gdsc.smlm.ij.plugins.ConfigurationTemplate.java", "BodyUseAPI": [], "Fixed commit": "2318d810db1b57993a9d69a303cd56f11c49f623", "Url": "https://api.github.com/repos/aherbert/gdsc-smlm", "Date": "2018-07-02T13:25:04Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (newElement != null) { if ((adoptNamespace && (org.apache.commons.lang.StringUtils.isNotEmpty(element.getNamespaceURI()))) && (org.apache.commons.lang.StringUtils.isEmpty(newElement.element.getNamespaceURI()))) { newElement.element.setNamespace(element.getNamespace()); } element.addContent(newElement.element); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9072/buggy-version/core.src.main.java.nl.nn.adapterframework.util.XmlBuilder.java", "BodyUseAPI": ["org.jdom2.Element.getNamespaceURI()", "org.jdom2.Element.setNamespace(element.getNamespace())", "org.jdom2.Element.addContent(org.jdom2.Element)", "org.apache.commons.lang.StringUtils.isEmpty(newElement.element.getNamespaceURI())"], "Fixed commit": "3b008d060308216096183dfdd92d8a8b406fb1d9", "Url": "https://api.github.com/repos/ibissource/iaf", "Date": "2018-04-30T09:58:27Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fragmentView != (com.lailperry.android.blackwellpttrainer.MainActivity.WORKOUTS_FRAGMENT)) { mFragmentManager.beginTransaction().addToBackStack(java.lang.Integer.toString(fragmentView)).replace(R.id.fragment_container, mFragment).commit(); }else { mFragmentManager.beginTransaction().replace(R.id.fragment_container, mFragment).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3658/buggy-version/app.src.main.java.com.lailperry.android.blackwellpttrainer.MainActivity.java", "BodyUseAPI": ["mFragmentManager.beginTransaction().addToBackStack(java.lang.Integer.toString(fragmentView)).replace(R.id.fragment_container,android.support.v4.app.Fragment)", "mFragmentManager.beginTransaction().addToBackStack(java.lang.String)", "mFragmentManager.beginTransaction().addToBackStack(java.lang.Integer.toString(fragmentView)).replace(R.id.fragment_container, mFragment).commit()", "java.lang.Integer.toString(int)"], "Fixed commit": "04709d491b411219c6f8e903dd9e317511d64411", "Url": "https://api.github.com/repos/Lailanater56/capstone", "Date": "2018-02-21T19:13:20Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pathExists()) { return true; }else { myMaze = new Maze(snapshot); java.lang.System.out.println(((\"Undoing: \" + (java.lang.System.lineSeparator())) + (myMaze))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4537/buggy-version/MazeSolver.java", "BodyUseAPI": [], "Fixed commit": "685bb272bc916e805e5ad3825ece235f2fdb31b8", "Url": "https://api.github.com/repos/Rachel-W3/WuWongClan_Wong-R_Wu-J", "Date": "2018-04-13T16:06:56Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bestDistanceAchieved[secondNodeId]) == (java.lang.Integer.MAX_VALUE)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1811/buggy-version/get2018.src.meta.abhay.algorithms.assgn2.EdgeListGraph.java", "BodyUseAPI": [], "Fixed commit": "abf346d3c52c75a08c490de32b886fdb9b9a452e", "Url": "https://api.github.com/repos/meta-abhay-verma/GET2018", "Date": "2018-08-11T08:48:36Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.cloudbees.jenkins.support.impl.HeapUsageHistogram.DISABLED) { return new java.lang.StringBuilder().append('\\n').append(\"Histogram generation is disabled. If you want to enable it, do either:\").append('\\n').append(\"* Add the system property: -Dcom.cloudbees.jenkins.support.impl.HeapUsageHistogram.DISABLED=false\").append('\\n').append(\"* Run from Script Console the line: com.cloudbees.jenkins.support.impl.HeapUsageHistogram.DISABLED=false\").toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8905/buggy-version/src.main.java.com.cloudbees.jenkins.support.impl.HeapUsageHistogram.java", "BodyUseAPI": [], "Fixed commit": "a3ff0c7e985b0ecb9a4460bab94932bc55a17b6a", "Url": "https://api.github.com/repos/duemir/support-core-plugin", "Date": "2018-03-06T09:43:39Z"},
{"Line": "=>1644", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Node.getTextContent()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (accidental.equals(\"flat-flat\")) { accidental = \"doubleflat\"; }else if (accidental.equals(\"double-sharp\")) { accidental = \"doublesharp\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3448/buggy-version/musicowl.src.main.java.de.wwu.music2rdf.converter.MusicXML2RDF.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "ad9901bcc1776b215ceee7df6ca80c3f24a2fb0e", "Url": "https://api.github.com/repos/jimjonesbr/musicowl", "Date": "2018-10-22T14:11:49Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((usersString != null) && (!(usersString.equals(\"null\")))) { java.lang.String[] elements = usersString.substring(1, ((usersString.length()) - 1)).split(\", \"); for (java.lang.String item : elements) { users.add(java.util.UUID.fromString(item)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2445/buggy-version/src.main.java.codeu.model.store.persistence.PersistentDataStore.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.split(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "b9c059f13116651e54a7028ac743950105f2b5d5", "Url": "https://api.github.com/repos/EstebanAO/CodeU-Spring-2018", "Date": "2018-05-10T18:31:24Z"},
{"Line": "=>5680", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getCurrentRecord(seq)) == null) { return needToCreateRecordIfParentChanged(seq); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1289/buggy-version/src.edu.ku.brc.specify.tasks.subpane.wb.wbuploader.UploadTable.java", "BodyUseAPI": ["edu.ku.brc.specify.tasks.subpane.wb.wbuploader.UploadTable.needToCreateRecordIfParentChanged(int)"], "Fixed commit": "4c2d0af6f797f423a1096bad4fee39c2130a8eca", "Url": "https://api.github.com/repos/specify/specify6", "Date": "2018-01-04T21:41:43Z"},
{"Line": "=>5676", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasChildren)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1289/buggy-version/src.edu.ku.brc.specify.tasks.subpane.wb.wbuploader.UploadTable.java", "BodyUseAPI": [], "Fixed commit": "4c2d0af6f797f423a1096bad4fee39c2130a8eca", "Url": "https://api.github.com/repos/specify/specify6", "Date": "2018-01-04T21:41:43Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((root) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9617/buggy-version/06-Binary-Search-Tree.09-Non-Recursion-Preorder-Traverse-in-BST.src.BST.java", "BodyUseAPI": [], "Fixed commit": "886f15771f96fd98b2d6f20900889a74a8f7c2dc", "Url": "https://api.github.com/repos/liuyubobobo/Play-with-Data-Structures", "Date": "2018-04-29T14:01:58Z"},
{"Line": "=>595", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yanxiu.gphone.faceshow.homepage.NaviFragmentFactory.getClassCircleFragment()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (classCircleFragment != null) { showCommentRedDot = false; classCircleFragment.toRefresh(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7152/buggy-version/app.src.main.java.com.yanxiu.gphone.faceshow.homepage.activity.MainActivity.java", "BodyUseAPI": ["com.yanxiu.gphone.faceshow.classcircle.ClassCircleFragment.toRefresh()"], "Fixed commit": "5f46fac91bc04f4a38bac811fe992f4af542561b", "Url": "https://api.github.com/repos/caileiYanxiu/FaceShow_Android", "Date": "2018-08-01T03:32:18Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.polimi_mt_acg.back2school.api.v1.auth.AuthenticationResource.getAuthenticatedUser(request.email,request.password)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (user.getRole().equals(User.Role.STUDENT)) return javax.ws.rs.core.Response.status(Response.Status.UNAUTHORIZED).entity(new com.github.polimi_mt_acg.back2school.api.v1.StatusResponse(Response.Status.UNAUTHORIZED, \"Students cannot login.\")).build();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4662/buggy-version/src.main.java.com.github.polimi_mt_acg.back2school.api.v1.auth.AuthenticationResource.java", "BodyUseAPI": [], "Fixed commit": "69856d46c90846b62dd602b4e624359d2476f29e", "Url": "https://api.github.com/repos/polimi-mt-acg/back2school", "Date": "2018-09-20T14:48:34Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["connection.getCurrentUser().getConversationList()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (convos != null) { for (java.util.Map.Entry<java.lang.String, model.Conversation> entry : convos.entrySet()) { java.lang.String key = entry.getKey(); model.Conversation value = entry.getValue(); if (value.getMemberStatus().containsKey(user)) { dmScreen.setConversationKey(key); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/636/buggy-version/src.application.Home_View_controller.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, model.Conversation>.entrySet()"], "Fixed commit": "3a61fa6244d097947339cf3b21abf60d1b185c94", "Url": "https://api.github.com/repos/JohnPaul44/cen3031project", "Date": "2018-03-27T12:12:51Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (month == (java.util.Calendar.FEBRUARY)) calendar.add(java.util.Calendar.MONTH, (-1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3968/buggy-version/app.src.main.java.com.quantumsit.sportsinc.COACHES.ReportsFragments.CoachReportsAttendanceFragment.java", "BodyUseAPI": [], "Fixed commit": "976a7c570d24a3cbfdd61570ada26a5fd04a0618", "Url": "https://api.github.com/repos/monmon4/Adroid_sportsInc", "Date": "2018-04-30T11:10:05Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jkiss.dbeaver.ui.controls.resultset.spreadsheet.SpreadsheetPresentation.getControl()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((control != null) && (!(control.isDisposed()))) { control.redraw(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3177/buggy-version/plugins.org.jkiss.dbeaver.core.src.org.jkiss.dbeaver.ui.controls.resultset.spreadsheet.SpreadsheetFindReplaceTarget.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Control.redraw()"], "Fixed commit": "6189f9f8e66d99aa4419cf761e9a06ec2b544972", "Url": "https://api.github.com/repos/dbeaver/dbeaver", "Date": "2018-02-02T06:05:23Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (testNode.equals(occurNode)) { return new microbat.recommendation.calculator.TraceTraversingDistanceCalculator.CommonParentInfo(testNode.getInvocationParent(), testNode, testNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1643/buggy-version/microbat.src.main.microbat.recommendation.calculator.TraceTraversingDistanceCalculator.java", "BodyUseAPI": ["microbat.model.trace.TraceNode.getInvocationParent()"], "Fixed commit": "dd956418ee27934517f2a832e9f35a10525d4def", "Url": "https://api.github.com/repos/llmhyy/microbat", "Date": "2018-04-26T13:15:30Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((context.getResources().getConfiguration().orientation) == 1) { orientation = 90; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1696/buggy-version/rtplibrary.src.main.java.com.pedro.rtplibrary.base.Camera2Base.java", "BodyUseAPI": [], "Fixed commit": "5d4995327ce83ef5db64af277be1d7d68d26b008", "Url": "https://api.github.com/repos/pedroSG94/rtmp-rtsp-stream-client-java", "Date": "2018-01-19T14:01:17Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (category != null) profileAttr.setCategoryObj(category);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4157/buggy-version/src.main.java.au.com.localsearch.helper.SearchServiceHelper.java", "BodyUseAPI": ["au.com.localsearch.domain.data.ProfileAttributes.setCategoryObj(au.com.localsearch.domain.Category)"], "Fixed commit": "e64df10b90b5aaae2737159c1602e2ddd81d8429", "Url": "https://api.github.com/repos/sumithub/localsearch-v2", "Date": "2018-03-09T06:30:33Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (mapConfig != null) { initDefaultMaxSizeForOnHeapMaps(mapConfig.getNearCacheConfig()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2578/buggy-version/hazelcast.src.main.java.com.hazelcast.internal.dynamicconfig.DynamicConfigurationAwareConfig.java", "BodyUseAPI": ["com.hazelcast.config.MapConfig.getNearCacheConfig()", "com.hazelcast.internal.dynamicconfig.DynamicConfigurationAwareConfig.initDefaultMaxSizeForOnHeapMaps(mapConfig.getNearCacheConfig())"], "Fixed commit": "42ae3bf38ff6af7413828add69f6caf6a7fb2217", "Url": "https://api.github.com/repos/Mak-Sym/hazelcast", "Date": "2018-01-03T14:35:04Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((headerView) != null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1371/buggy-version/src.main.java.com.taobao.weex.ui.view.refresh.core.WXSwipeLayout.java", "BodyUseAPI": [], "Fixed commit": "e9ef847399d0c523dc7071212f53a96ff47faa8e", "Url": "https://api.github.com/repos/bmfe/WeexSDK", "Date": "2018-01-24T06:51:13Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.guyoliver.guyoliverteam.soccerteamselector.PlayersDatabase.getInstance(this).getPlayersFromDatabase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((playersList.size()) < 1) { android.widget.Toast.makeText(view.getContext(), \"No Players in the list, add players\", Toast.LENGTH_LONG); }else { startActivity(new android.content.Intent(this, com.guyoliver.guyoliverteam.soccerteamselector.SelectPlayersForNextMatch.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6341/buggy-version/soccerTeamSelector.src.main.java.com.guyoliver.guyoliverteam.soccerteamselector.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "17bce9789dffc73e4d6eabfdbcdf3238281121b5", "Url": "https://api.github.com/repos/guyoliver/Soccer_Team_Selector", "Date": "2018-05-06T21:34:11Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((productList.size()) == 0) { myRef.child(\"isProdsEmpty\").setValue(java.lang.Boolean.TRUE.toString()); productList.add(new com.ub.akshay.nitkart.ShoppingItem(\"\", \"\", \"\", \"\", (-1), (-1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4691/buggy-version/app.src.main.java.com.ub.akshay.nitkart.IndividualProductSeller.java", "BodyUseAPI": ["java.util.ArrayList<com.ub.akshay.nitkart.ShoppingItem>.add(com.ub.akshay.nitkart.ShoppingItem)"], "Fixed commit": "6f26621d536c05e811cc1f36ffb59f69c1259a23", "Url": "https://api.github.com/repos/akshayub/NITKart", "Date": "2018-03-22T18:31:36Z"},
{"Line": "=>8", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (from == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3557/buggy-version/src.main.java.com.boraecosystem.explorer.browser.utils.DateUtil.java", "BodyUseAPI": [], "Fixed commit": "30b57862fd3838dd2180c7a3984ccc9b04767bab", "Url": "https://api.github.com/repos/boraecosystem/explorer-api", "Date": "2018-10-31T07:31:55Z"},
{"Line": "=>2178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (task.isFaulted()) { throw task.getError(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8832/buggy-version/Parse.src.main.java.com.parse.ParseObject.java", "BodyUseAPI": ["bolts.Task<java.lang.Void>.getError()"], "Fixed commit": "8b02505c24601955d5e94690797a4581d6683d72", "Url": "https://api.github.com/repos/DanGTZ/Parse-SDK-Android", "Date": "2018-05-28T00:36:11Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { com.example.tonyrobb.groupup.SectionListAdapter adapter = new com.example.tonyrobb.groupup.SectionListAdapter(getActivity(), sectionList, dept, classNum); listViewSections.setAdapter(adapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4279/buggy-version/app.src.main.java.com.example.tonyrobb.groupup.SectionListFragment.java", "BodyUseAPI": [], "Fixed commit": "6b061fb1b44e1dc1fe5774c4f93bc663657bf488", "Url": "https://api.github.com/repos/MobileApps5236/GroupUp", "Date": "2018-03-27T03:24:21Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(strCollection.isEmpty())) { addStrings(strCollection); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7708/buggy-version/matcher.src.main.java.com.BoxOfC.MDAG.MDAG.java", "BodyUseAPI": [], "Fixed commit": "1d7d2ac073fb2f1c1da2f8ad28c125d20057b990", "Url": "https://api.github.com/repos/GlobalNamesArchitecture/gnmatcher", "Date": "2018-07-18T14:12:00Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((crd.y) < 20) crd.y = 20;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8486/buggy-version/src.VGraph.java", "BodyUseAPI": [], "Fixed commit": "e7856a60be730c93b410f5022bd0d21addf3f993", "Url": "https://api.github.com/repos/spasartyom/Practice", "Date": "2018-07-05T15:31:25Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((crd.y) > 440) crd.y = 440;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8486/buggy-version/src.VGraph.java", "BodyUseAPI": [], "Fixed commit": "e7856a60be730c93b410f5022bd0d21addf3f993", "Url": "https://api.github.com/repos/spasartyom/Practice", "Date": "2018-07-05T15:31:25Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((crd.x) > 610) crd.x = 610;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8486/buggy-version/src.VGraph.java", "BodyUseAPI": [], "Fixed commit": "e7856a60be730c93b410f5022bd0d21addf3f993", "Url": "https://api.github.com/repos/spasartyom/Practice", "Date": "2018-07-05T15:31:25Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((crd.x) < 20) crd.x = 20;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8486/buggy-version/src.VGraph.java", "BodyUseAPI": [], "Fixed commit": "e7856a60be730c93b410f5022bd0d21addf3f993", "Url": "https://api.github.com/repos/spasartyom/Practice", "Date": "2018-07-05T15:31:25Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((n.getRightChild()) != null) { java.lang.System.out.println((((n.getValue()) + \" black: \") + (n.getIsBlack()))); traverse(n.getRightChild()); }else { java.lang.System.out.println(n.getValue()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7956/buggy-version/Lab06.src.com.web.RedBlackTree.java", "BodyUseAPI": ["Node.getValue()", "java.io.PrintStream.println(n.getValue())", "Node.getIsBlack()", "RedBlackTree.traverse(n.getRightChild())", "Node.getValue()", "Node.getRightChild()", "java.io.PrintStream.println((((n.getValue()) + \" black: \") + (n.getIsBlack())))"], "Fixed commit": "1a38c1d160feea4c6552073d8cb887bf03443815", "Url": "https://api.github.com/repos/ZachAndrews98/cmpsc250-team7", "Date": "2018-04-10T16:28:06Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Node.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((parent.getParent()) != null) { if (parent.getParent().getRightChild().equals(parent)) { uncle = parent.getParent().getLeftChild(); }else { uncle = parent.getParent().getRightChild(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7956/buggy-version/Lab06.src.com.web.RedBlackTree.java", "BodyUseAPI": ["parent.getParent().getRightChild().equals(Node)", "Node.getParent()", "Node.getParent()", "parent.getParent().getRightChild()", "parent.getParent().getRightChild()", "parent.getParent().getLeftChild()", "Node.getParent()"], "Fixed commit": "1a38c1d160feea4c6552073d8cb887bf03443815", "Url": "https://api.github.com/repos/ZachAndrews98/cmpsc250-team7", "Date": "2018-04-10T16:28:06Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Node.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (((parent.getParent()) != null) && (uncle != null)) { if ((!(uncle.getIsBlack())) && (!(parent.getIsBlack()))) { reColor(n, parent, uncle, parent.getParent()); n = parent.getParent(); }else if (((!(parent.getIsBlack())) && (uncle.getIsBlack())) || ((!(parent.getIsBlack())) && (uncle == null))) { rotate(null); balanced = true; }else { balanced = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7956/buggy-version/Lab06.src.com.web.RedBlackTree.java", "BodyUseAPI": ["Node.getParent()", "Node.getIsBlack()", "Node.getIsBlack()", "Node.getParent()", "Node.getIsBlack()", "Node.getIsBlack()", "Node.getIsBlack()", "RedBlackTree.reColor(Node,Node,Node,parent.getParent())"], "Fixed commit": "1a38c1d160feea4c6552073d8cb887bf03443815", "Url": "https://api.github.com/repos/ZachAndrews98/cmpsc250-team7", "Date": "2018-04-10T16:28:06Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size) == (MAX_SIZE)) { java.lang.System.out.println(\"Reached maximum node size!\"); java.lang.System.out.println(\"Can't add anymore nodes!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7956/buggy-version/Lab06.src.com.web.RedBlackTree.java", "BodyUseAPI": [], "Fixed commit": "1a38c1d160feea4c6552073d8cb887bf03443815", "Url": "https://api.github.com/repos/ZachAndrews98/cmpsc250-team7", "Date": "2018-04-10T16:28:06Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.math3.geometry.euclidean.twod.Vector2D.subtract(org.apache.commons.math3.geometry.euclidean.twod.Vector2D)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((nextDirection.getNorm()) > 0.0) { nextDirection = nextDirection.normalize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2290/buggy-version/src.main.java.ch.ethz.matsim.location_assignment.algorithms.gravity.GravityChainSolver.java", "BodyUseAPI": ["org.apache.commons.math3.geometry.euclidean.twod.Vector2D.normalize()"], "Fixed commit": "b5b11d3acd39bfb22a2f72dfeb3ab15fe711ae08", "Url": "https://api.github.com/repos/matsim-eth/location_assignment", "Date": "2018-10-26T17:12:30Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.math3.geometry.euclidean.twod.Vector2D.subtract(org.apache.commons.math3.geometry.euclidean.twod.Vector2D)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((previousDirection.getNorm()) > 0.0) { previousDirection = previousDirection.normalize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2290/buggy-version/src.main.java.ch.ethz.matsim.location_assignment.algorithms.gravity.GravityChainSolver.java", "BodyUseAPI": ["org.apache.commons.math3.geometry.euclidean.twod.Vector2D.normalize()"], "Fixed commit": "b5b11d3acd39bfb22a2f72dfeb3ab15fe711ae08", "Url": "https://api.github.com/repos/matsim-eth/location_assignment", "Date": "2018-10-26T17:12:30Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (debug) { config.put(\"wordfile\", file.getAbsolutePath()); org.apache.storm.LocalCluster cluster = new org.apache.storm.LocalCluster(); cluster.submitTopology(\"mycluster\", config, builder.createTopology()); java.lang.Thread.sleep(6000); cluster.shutdown(); }else { config.put(\"wordfile\", args[0]); org.apache.storm.StormSubmitter.submitTopology(\"realCount\", config, builder.createTopology()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4899/buggy-version/src.main.java.com.ds.storm.StormMain.java", "BodyUseAPI": [], "Fixed commit": "267843796d938ddb8add82f8e5bb11f9083fe95d", "Url": "https://api.github.com/repos/boydos/storm-demo", "Date": "2018-05-24T08:10:21Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Cart.orderLinesList.size()) <= 0) { parentFragment.bottom_navigation_cart.setVisibility(View.GONE); }else { parentFragment.bottom_navigation_cart.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3823/buggy-version/app.src.main.java.com.android.icecreamapp.adapter.CartAdapter.java", "BodyUseAPI": [], "Fixed commit": "1825979e8dc2c0ff64b03d96260c5032e8344aba", "Url": "https://api.github.com/repos/mocmeo/IceCreamApp", "Date": "2018-07-25T14:11:09Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getSession()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((session.getAttribute(\"gameID\")) != null) { gameID = ((java.lang.Integer) (session.getAttribute(\"gameID\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8106/buggy-version/quiz.src.web.servlets.QuizManagement.java", "BodyUseAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Fixed commit": "9bb9f70acd4fc84b4bf543fc3a0ef3dcc45a1190", "Url": "https://api.github.com/repos/domdadon/THI_Project_Quiz", "Date": "2018-07-03T21:00:26Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getSession()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((session.getAttribute(\"userID\")) != null) { userID = ((java.lang.Integer) (session.getAttribute(\"userID\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8106/buggy-version/quiz.src.web.servlets.QuizManagement.java", "BodyUseAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Fixed commit": "9bb9f70acd4fc84b4bf543fc3a0ef3dcc45a1190", "Url": "https://api.github.com/repos/domdadon/THI_Project_Quiz", "Date": "2018-07-03T21:00:26Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getSession()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((session.getAttribute(\"categoryID\")) != null) { categoryID = ((java.lang.Integer) (session.getAttribute(\"categoryID\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8106/buggy-version/quiz.src.web.servlets.QuizManagement.java", "BodyUseAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Fixed commit": "9bb9f70acd4fc84b4bf543fc3a0ef3dcc45a1190", "Url": "https://api.github.com/repos/domdadon/THI_Project_Quiz", "Date": "2018-07-03T21:00:26Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastGame) != 0) com.kihron.keymod.client.handler.KeyInputEventHandler.addMessage((\"Last Played: \" + (getLastGameTranslateString(lastGame))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8439/buggy-version/src.main.java.com.kihron.keymod.client.handler.KeyInputEventHandler.java", "BodyUseAPI": [], "Fixed commit": "a754dd5476538a46be341267e205c432e39383e9", "Url": "https://api.github.com/repos/Kihron/Keybindings-Mod", "Date": "2018-06-02T21:52:00Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.marklogic.mapreduce.ContentOutputFormat.LOG.isDebugEnabled()) { com.marklogic.mapreduce.ContentOutputFormat.LOG.debug((\"init query: \\n\" + (query.getQuery()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1925/buggy-version/mapreduce.src.main.java.com.marklogic.mapreduce.ContentOutputFormat.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug((\"init query: \\n\" + (query.getQuery())))"], "Fixed commit": "ee590efd2ac949ae5a1c229177c4ef7413a070e8", "Url": "https://api.github.com/repos/marklogic/marklogic-contentpump", "Date": "2018-09-29T18:43:11Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentSelection) != null) { browserPane.getChildren().clear(); loadCinemaSchedule(currentSelection.cinema, currentDate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3499/buggy-version/src.main.java.seedu.address.ui.BrowserPanel.java", "BodyUseAPI": [], "Fixed commit": "fbe07aca3fe20a47d2af64b67acbb67aa1e23ec3", "Url": "https://api.github.com/repos/qwlai/main", "Date": "2018-03-30T08:35:17Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.conf.Configuration.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (inputPathForSparkMode != null) { sparkIOContext.setInputPathForSparkMode(inputPathForSparkMode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7921/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.io.IOContextMap.java", "BodyUseAPI": ["org.apache.hadoop.hive.ql.io.IOContext.setInputPathForSparkMode(java.lang.String)"], "Fixed commit": "e5e4ef54dd35874d160a3d0641ae0bbf1bbf62d4", "Url": "https://api.github.com/repos/kellyzly/hive", "Date": "2018-01-17T09:22:45Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (this.event_parameters)) { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7194/buggy-version/kafka-bigquery-pojo.src.main.java.com.winfred.datamining.kb.entity.web.WebBody.java", "BodyUseAPI": [], "Fixed commit": "d70fb17d7f3963c189568879c6593f7ee0e098c6", "Url": "https://api.github.com/repos/gitofkevin/kafka-bigquery", "Date": "2018-07-28T01:25:58Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((att.getClass()) == (byte[].class)) { propValue = org.gradoop.common.model.impl.properties.PropertyValue.create(java.lang.String.valueOf(att)); }else { propValue = org.gradoop.common.model.impl.properties.PropertyValue.create(att); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6681/buggy-version/gradoop-flink.src.main.java.org.gradoop.flink.io.impl.rdbms.functions.PropertyValueParser.java", "BodyUseAPI": ["org.gradoop.common.model.impl.properties.PropertyValue.create(java.lang.String)", "java.lang.String.valueOf(java.lang.Object)", "org.gradoop.common.model.impl.properties.PropertyValue.create(java.lang.Object)"], "Fixed commit": "8078cfdd3dfedf202da284ca64cbdc15e83a1a4b", "Url": "https://api.github.com/repos/hr73vexy/gradoop", "Date": "2018-09-25T09:08:18Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((tmpString.lastIndexOf('/', ((tmpString.length()) - 1))) != (-1)) { applicationPath = tmpString.substring(0, tmpString.lastIndexOf('/', ((tmpString.length()) - 1))); }else { applicationPath = \"..\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7964/buggy-version/src.main.java.com.microsoft.jenkins.servicefabric.command.SFCommandBuilder.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(char,int)", "java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "1109f0fafafd15703c01f897c2ca40979d222c3f", "Url": "https://api.github.com/repos/jenkinsci/service-fabric-plugin", "Date": "2018-07-09T08:18:36Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.griffin.core.measure.GriffinMeasureOperationImpl.getConnectorNames(org.apache.griffin.core.measure.entity.GriffinMeasure)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((names.size()) == 0) { org.apache.griffin.core.measure.GriffinMeasureOperationImpl.LOGGER.warn(\"Connector names cannot be empty.\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9481/buggy-version/service.src.main.java.org.apache.griffin.core.measure.GriffinMeasureOperationImpl.java", "BodyUseAPI": [], "Fixed commit": "2d15f008a811c28a50dd88c7a2a56908ce8758f5", "Url": "https://api.github.com/repos/ahutsunshine/incubator-griffin", "Date": "2018-01-05T03:13:44Z"},
{"Line": "=>1263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.languagetool.openoffice.Main.testMode)) { org.languagetool.openoffice.XComponent xComponent = getXComponent(); xComponent.addEventListener(this); xComponents.add(xComponent); }else { xComponents.add(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3358/buggy-version/languagetool-office-extension.src.main.java.org.languagetool.openoffice.Main.java", "BodyUseAPI": [], "Fixed commit": "428ce2e94bc13ad0487a6ce220fc9c8384277fa6", "Url": "https://api.github.com/repos/languagetool-org/languagetool", "Date": "2018-02-19T08:22:00Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((gameboard[x][y].getPawn().getColor()) == (currentPlayer.getColor()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8576/buggy-version/ChineseCheckers.src.main.java.server.Game.java", "BodyUseAPI": [], "Fixed commit": "b95fdf811b1d1743886b2b40f7756a27dde75dd0", "Url": "https://api.github.com/repos/M4hler/Chinese-Checkers", "Date": "2018-01-11T13:56:47Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((distance) >= 0) && ((distance) < 99999.5)) { distUnit = \"M\"; }else if ((distance) >= 99999.5) { distUnit = \"KM\"; dist2dp = df.format(((distance) / 100000)); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6698/buggy-version/app.src.main.java.uk.ac.reading.xh025226.stepcounta.MainActivity.java", "BodyUseAPI": ["java.text.DecimalFormat.format(double)"], "Fixed commit": "762345a915d47a917579c31e9115de3c6f0d784a", "Url": "https://api.github.com/repos/ogagaisi/StepCounta", "Date": "2018-02-21T18:43:44Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((methodMappingAnnotation.value().length) > 0) { urlBuilder.append(methodMappingAnnotation.value()[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2316/buggy-version/server.webportal.src.main.java.ru.kolaer.server.webportal.spring.UrlSecurityApplicationContextListener.java", "BodyUseAPI": ["org.springframework.web.bind.annotation.RequestMapping.value()", "java.lang.StringBuilder.append(methodMappingAnnotation.value()[0])"], "Fixed commit": "bc927c29c5ff0af014400e763c984016d3717037", "Url": "https://api.github.com/repos/danilovEY/Kolaer-systems", "Date": "2018-05-10T07:05:01Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((classMappingAnnotation.value().length) > 0) { urlBuilder.append(classMappingAnnotation.value()[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2316/buggy-version/server.webportal.src.main.java.ru.kolaer.server.webportal.spring.UrlSecurityApplicationContextListener.java", "BodyUseAPI": ["java.lang.StringBuilder.append(classMappingAnnotation.value()[0])", "org.springframework.web.bind.annotation.RequestMapping.value()"], "Fixed commit": "bc927c29c5ff0af014400e763c984016d3717037", "Url": "https://api.github.com/repos/danilovEY/Kolaer-systems", "Date": "2018-05-10T07:05:01Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.sandy.recordstore.adapters.AlbumAdapter.getContext()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (context instanceof com.example.sandy.recordstore.activities.albums.AlbumsActivity) { ((com.example.sandy.recordstore.activities.albums.AlbumsActivity) (context)).runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { com.example.sandy.recordstore.models.Artist artist = com.example.sandy.recordstore.App.get().getDB().artistDao().getById(currentAlbum.getArtistId()); artistText.setText(artist.getName()); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2277/buggy-version/app.src.main.java.com.example.sandy.recordstore.adapters.AlbumAdapter.java", "BodyUseAPI": [], "Fixed commit": "52e1cf1ddd1ca1fe0616b34c8fbcf080309281af", "Url": "https://api.github.com/repos/waspyfaeleith/record_store_android_room", "Date": "2018-01-23T14:17:30Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (comparisonString.contains(searchString)) return 10;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/497/buggy-version/src.main.java.com.rohitawate.restaurant.homewindow.HistoryItemController.java", "BodyUseAPI": [], "Fixed commit": "7f3a4e7343207e77f7f1c327e36dc580db4b2def", "Url": "https://api.github.com/repos/RohitAwate/Everest", "Date": "2018-03-17T16:26:30Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((maxTileSpecsToRender != null) && (maxTileSpecsToRender < 0)) { final java.lang.Integer defaultMaxTileSpecsToRender = org.janelia.render.service.util.RenderServerProperties.getProperties().getInteger(\"webService.maxTileSpecsToRender\"); renderBoundingBoxesOnly = (defaultMaxTileSpecsToRender != null) && ((renderParameters.numberOfTileSpecs()) > defaultMaxTileSpecsToRender); if ((renderParameters.numberOfTileSpecs()) < 40) { renderParameters.setAddWarpFieldDebugOverlay(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/227/buggy-version/render-ws.src.main.java.org.janelia.render.service.util.RenderServiceUtil.java", "BodyUseAPI": [], "Fixed commit": "d8391cb689f73121a271c03b16020493f8e54776", "Url": "https://api.github.com/repos/saalfeldlab/render", "Date": "2018-07-24T18:20:02Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.entity.Player.getKiller()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (killer == killed) { pde.setDeathMessage((((org.bukkit.ChatColor.GREEN) + (killed.getName())) + \" commited suicide :(\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/65/buggy-version/src.org.rspeekenbrink.deathmatch.events.EntityDeath.java", "BodyUseAPI": ["org.bukkit.event.entity.PlayerDeathEvent.setDeathMessage((((org.bukkit.ChatColor.GREEN) + (killed.getName())) + \" commited suicide :(\"))", "org.bukkit.entity.Player.getName()"], "Fixed commit": "276796cf9ddcd504ec181532cbe1f2981085a268", "Url": "https://api.github.com/repos/RSpeekenbrink/Deathmatch", "Date": "2018-04-18T19:35:18Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.structurizr.io.json.EncryptedJsonReader.read(java.io.StringReader)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((encryptedWorkspace.getEncryptionStrategy()) != null) { encryptedWorkspace.getEncryptionStrategy().setPassphrase(encryptionStrategy.getPassphrase()); return encryptedWorkspace.getWorkspace(); }else { return new com.structurizr.io.json.JsonReader().read(new java.io.StringReader(json)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/484/buggy-version/structurizr-client.src.com.structurizr.api.StructurizrClient.java", "BodyUseAPI": ["encryptedWorkspace.getEncryptionStrategy().setPassphrase(encryptionStrategy.getPassphrase())", "com.structurizr.encryption.EncryptedWorkspace.getWorkspace()", "com.structurizr.encryption.EncryptedWorkspace.getEncryptionStrategy()"], "Fixed commit": "b3ff05d286b46e4d7d7c3b6f92d4c9f90838ff9f", "Url": "https://api.github.com/repos/mcbeelen/structurizr-java", "Date": "2018-07-08T15:21:50Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (conditionalActive) conditions.add(new org.datavec.api.transform.condition.column.TrivialColumnCondition(colName));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2740/buggy-version/datavec-api.src.main.java.org.datavec.api.transform.reduce.Reducer.java", "BodyUseAPI": [], "Fixed commit": "e18c159b4aa25070645edcda53c8cffcf6792511", "Url": "https://api.github.com/repos/deeplearning4j/DataVec", "Date": "2018-01-23T03:07:14Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.poi.ss.usermodel.Row.getCell(int)", "net.sf.jxls.util.Util.getMergedRegion(org.apache.poi.ss.usermodel.Sheet,oldRow.getRowNum(),oldCell.getColumnIndex())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((oldRow.getRowNum()) == (mergedRegion.getLastRow())) && ((oldCell.getColumnIndex()) == (mergedRegion.getLastColumn()))) { org.apache.poi.ss.util.CellRangeAddress newMergedRegion = new org.apache.poi.ss.util.CellRangeAddress(newRow.getRowNum(), (((newRow.getRowNum()) + (mergedRegion.getLastRow())) - (mergedRegion.getFirstRow())), mergedRegion.getFirstColumn(), mergedRegion.getLastColumn()); if (net.sf.jxls.util.Util.isNewMergedRegion(newMergedRegion, mergedRegions)) { mergedRegions.add(newMergedRegion); sheet.addMergedRegion(newMergedRegion); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6084/buggy-version/src.main.java.net.sf.jxls.util.Util.java", "BodyUseAPI": ["org.apache.poi.ss.util.CellRangeAddress.getLastRow()", "org.apache.poi.ss.util.CellRangeAddress.getFirstRow()", "org.apache.poi.ss.util.CellRangeAddress.getLastColumn()", "org.apache.poi.ss.util.CellRangeAddress.getFirstColumn()"], "Fixed commit": "3edb70fa0506dd9ea6bcae0e9759670b4f10c026", "Url": "https://api.github.com/repos/sanlingdd/jxls-core", "Date": "2018-03-12T02:49:05Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value >= 20) return new coinpurse.BankNote(value, coinpurse.ConsoleDialog.CURRENCY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3809/buggy-version/src.coinpurse.ConsoleDialog.java", "BodyUseAPI": [], "Fixed commit": "fa337e035df3a1400bfcf967558f39c3c834b4ec", "Url": "https://api.github.com/repos/OOP2018/coinpurse-poom201211", "Date": "2018-02-07T13:13:57Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.activity.CropActivity.findPoints()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (points != null) { mSelectionImageView.setPoints(points); }else { com.owncloud.android.lib.common.utils.Log_OC.d(com.owncloud.android.ui.activity.CropActivity.TAG, getResources().getString(R.string.no_contour_found)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6455/buggy-version/src.com.owncloud.android.ui.activity.CropActivity.java", "BodyUseAPI": ["com.owncloud.android.ui.QuadrilateralSelectionImageView.setPoints(java.util.List<android.graphics.PointF>)"], "Fixed commit": "a030da78fa43a18b23b04e944f67d28909044cfa", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-03-12T06:43:04Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.s63d.account.repository.UserRepository.getById(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (user == null) throw repo.notFound(id);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6758/buggy-version/account-service.src.main.java.com.s63d.account.service.UserService.java", "BodyUseAPI": [], "Fixed commit": "c5810543ebb9b32fab5318ecab379558dea31957", "Url": "https://api.github.com/repos/GoosvandenBekerom/er-microservices", "Date": "2018-03-14T08:45:11Z"},
{"Line": "=>1564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((attackerSolEntity.getBukkitLivingEntity()) instanceof org.bukkit.entity.Player) { if (attackerSolEntity.getBukkitLivingEntity().isOp()) { java.lang.System.out.println((((((attackerSolEntity.getName()) + \" chance to proc on hit: \") + procChance) + \" roll: \") + roll)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8458/buggy-version/src.com.solinia.solinia.Models.SoliniaLivingEntity.java", "BodyUseAPI": ["com.solinia.solinia.Interfaces.ISoliniaLivingEntity.getBukkitLivingEntity()", "com.solinia.solinia.Interfaces.ISoliniaLivingEntity.getName()", "java.io.PrintStream.println((((((attackerSolEntity.getName()) + \" chance to proc on hit: \") + procChance) + \" roll: \") + roll))", "attackerSolEntity.getBukkitLivingEntity().isOp()"], "Fixed commit": "21d30dc9782a1b0530511628b3b63bf88b09368e", "Url": "https://api.github.com/repos/mixxit/solinia3-core", "Date": "2018-08-02T18:43:17Z"},
{"Line": "=>736", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node instanceof org.jmlspecs.openjml.JmlBBArrayAccess) { org.jmlspecs.openjml.JmlBBArrayAccess n = ((org.jmlspecs.openjml.JmlBBArrayAccess) (node)); org.jmlspecs.openjml.JmlBBArrayAccess nn = new org.jmlspecs.openjml.JmlBBArrayAccess(copy(n.arraysId), copy(n.indexed), copy(n.index), n.pos, n.type); return nn; }else { return super.visitArrayAccess(node, p).setType(((com.sun.tools.javac.tree.JCTree) (node)).type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/186/buggy-version/OpenJML.src.org.jmlspecs.openjml.JmlTreeCopier.java", "BodyUseAPI": ["com.sun.tools.javac.tree.TreeCopier<java.lang.Void>.visitArrayAccess(com.sun.source.tree.ArrayAccessTree,java.lang.Void)", "com.sun.tools.javac.tree.JCTree.setType(com.sun.tools.javac.code.Type)"], "Fixed commit": "075aab6561fd2d7d10b1a897a3aacfdedf9089b6", "Url": "https://api.github.com/repos/OpenJML/OpenJML", "Date": "2018-02-01T02:46:45Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCancelled()) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1767/buggy-version/app.src.main.java.com.example.gsl.asynctaskloadimage.ImageActivity.java", "BodyUseAPI": [], "Fixed commit": "bce91a36a530e4eb22f449601f9d89ff5e65d3b3", "Url": "https://api.github.com/repos/shenrenhello/AsyncTaskLoadImage", "Date": "2018-02-07T02:10:35Z"},
{"Line": "=>1376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getOrientation()) == (com.alibaba.android.vlayout.VirtualLayoutManager.VERTICAL)) { widthSpec = updateSpecWithExtra(widthSpec, ((lp.leftMargin) + (mDecorInsets.left)), ((lp.rightMargin) + (mDecorInsets.right))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/730/buggy-version/vlayout.src.main.java.com.alibaba.android.vlayout.VirtualLayoutManager.java", "BodyUseAPI": [], "Fixed commit": "b56d1038f06e8ba6ff75edd97ce57fb9cb80c9c3", "Url": "https://api.github.com/repos/alibaba/vlayout", "Date": "2018-01-02T08:17:18Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.nikr.eve.jeveasset.io.local.SettingsReader.read(java.lang.String,java.lang.String,XmlType.DYNAMIC_BACKUP)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!ok) { settings.setSettingsLoadError(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3388/buggy-version/src.main.java.net.nikr.eve.jeveasset.io.local.SettingsReader.java", "BodyUseAPI": [], "Fixed commit": "b82f5da73b887c86742293768a9de923ae6d162e", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2018-08-30T11:36:17Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentState) != null) { java.util.List<de.upb.crc901.proseco.view.core.model.Question> questions = currentState.getQuestions(); if (de.upb.crc901.proseco.view.util.ListUtil.isNotEmpty(questions)) { for (de.upb.crc901.proseco.view.core.model.Question q : questions) { if (org.apache.commons.lang3.StringUtils.isEmpty(q.getAnswer())) { return currentState; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8351/buggy-version/src.de.upb.crc901.proseco.view.core.model.Interview.java", "BodyUseAPI": [], "Fixed commit": "b0b30ba702200559fe4583ef857f5fa04d1f45ea", "Url": "https://api.github.com/repos/fmohr/PROSECO", "Date": "2018-07-21T14:51:57Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((builder.values) != null) { this.values = new java.util.ArrayList(builder.values); java.util.Collections.sort(this.values); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8617/buggy-version/warehouse.query-core.src.main.java.datawave.core.iterators.DatawaveFieldIndexListIteratorJexl.java", "BodyUseAPI": [], "Fixed commit": "4adf30a816f8b6893981a9f5c4b1acac46e174f3", "Url": "https://api.github.com/repos/NationalSecurityAgency/datawave", "Date": "2018-08-14T16:58:47Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sheepy.util.text.Base85.Decoder._decode(byte[],int,int,byte[],int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((result.length) != len) return java.util.Arrays.copyOf(result, len);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1476/buggy-version/java.src.sheepy.util.text.Base85.java", "BodyUseAPI": ["java.util.Arrays.copyOf(byte[],int)"], "Fixed commit": "af242a58621ec64573145763602030da9ec14955", "Url": "https://api.github.com/repos/Sheep-y/Base85", "Date": "2018-07-05T10:43:41Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.soapboxrace.core.dao.ProductDAO.findByProductId(basketItemTrans.getProductId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (productEntity != null) { price = java.lang.Float.sum(price, productEntity.getPrice()); }else { java.lang.System.err.println(((\"product [\" + (basketItemTrans.getProductId())) + \"] not found\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7428/buggy-version/src.main.java.com.soapboxrace.core.bo.CommerceBO.java", "BodyUseAPI": ["java.lang.Float.sum(java.lang.Float,productEntity.getPrice())", "com.soapboxrace.core.jpa.ProductEntity.getPrice()"], "Fixed commit": "2722e4237a2a38ecb77d833597b96b87f0212168", "Url": "https://api.github.com/repos/nilzao/soapbox-race-core", "Date": "2018-03-07T23:11:34Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(CommerceOp.VINYL.equals(commerceOp))) { basketTotalValue = getBasketTotalValue(basketItemTransList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7428/buggy-version/src.main.java.com.soapboxrace.core.bo.CommerceBO.java", "BodyUseAPI": [], "Fixed commit": "2722e4237a2a38ecb77d833597b96b87f0212168", "Url": "https://api.github.com/repos/nilzao/soapbox-race-core", "Date": "2018-03-07T23:11:34Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i > 10) && (i < 20)) { postfix = \"th\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/558/buggy-version/week03.src.Hellos.java", "BodyUseAPI": [], "Fixed commit": "a9d6a4eba14489a0b5f94587722867b83ebde411", "Url": "https://api.github.com/repos/Gogomoe/SUSTC_CS102A_works", "Date": "2018-09-18T01:02:12Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (result != null) android.util.Log.i(\"website content\", result); else android.util.Log.e(\"website content\", \"error\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5186/buggy-version/app.src.main.java.com.example.a1605272.jsondemo.MainActivity.java", "BodyUseAPI": ["android.util.Log.i(java.lang.String,java.lang.String)"], "Fixed commit": "86d92a1fb726039938d06b243fb025c8cb91cd50", "Url": "https://api.github.com/repos/Dipika98/Demojson1", "Date": "2018-10-01T17:12:51Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((action_mode) != null) { action_mode.finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6800/buggy-version/app.src.main.java.com.ontraport.mobileapp.fragments.CollectionFragment.java", "BodyUseAPI": [], "Fixed commit": "ac34207f872822444b85a78b677a98ea9959658c", "Url": "https://api.github.com/repos/00firestar00/Ontraport-Android", "Date": "2018-03-06T06:42:38Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (trial > 99) { a = java.lang.System.currentTimeMillis(); MFDriver.search(arr, ((int) ((1000 * (n - 1)) * (java.lang.Math.random())))); b = java.lang.System.currentTimeMillis(); total += b - a; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9624/buggy-version/MFDriver.java", "BodyUseAPI": [], "Fixed commit": "29baaaaaa8ee0ca4958939bb4758a353b7d2ed4d", "Url": "https://api.github.com/repos/KaitlinWan/May-Tricks", "Date": "2018-02-09T01:32:14Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.darmstadt.tu.crossing.cryptSL.ForbMethod.getRep()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (alternative != null) { crysl.addAll(de.cognicrypt.crysl.reader.CrySLReaderUtils.resolveAggregateToMethodeNames(alternative)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1721/buggy-version/plugins.de.cognicrypt.crysl.handler.src.de.cognicrypt.crysl.reader.CrySLModelReader.java", "BodyUseAPI": ["java.util.List<crypto.rules.CryptSLMethod>.addAll(de.cognicrypt.crysl.reader.CrySLReaderUtils.resolveAggregateToMethodeNames(alternative))", "de.cognicrypt.crysl.reader.CrySLReaderUtils.resolveAggregateToMethodeNames(de.cognicrypt.crysl.reader.Event)"], "Fixed commit": "d7f0cc88062a3d928f4773ac7b6548333fe658a7", "Url": "https://api.github.com/repos/CROSSINGTUD/CogniCrypt", "Date": "2018-08-29T15:11:56Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((input) != null) { editor.putString(\"name\", userName.getText().toString()); editor.putInt(\"id\", java.lang.Integer.parseInt(input.getText().toString())); editor.apply(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8828/buggy-version/app.src.main.java.com.anonymous.attendandsystem.LogIn.java", "BodyUseAPI": [], "Fixed commit": "b11d1d8bdda641009acb9ea785d1662449932357", "Url": "https://api.github.com/repos/MahmoudMabrok/AttendanceSystem", "Date": "2018-03-05T21:21:11Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((batchDimension) != null) { for (; i < (batchDimension.length); i++) { outputShape[i] = batchDimension[i]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9453/buggy-version/nd4j.nd4j-backends.nd4j-api-parent.nd4j-api.src.main.java.org.nd4j.linalg.api.ops.impl.shape.Eye.java", "BodyUseAPI": [], "Fixed commit": "ea8e6b3a5a7c623c95d0077e0da8a29da0a125f6", "Url": "https://api.github.com/repos/deeplearning4j/deeplearning4j", "Date": "2018-07-26T08:49:10Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arg()) != null) { return java.util.Collections.singletonList(sameDiff.onesLike(arg())); }else { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9453/buggy-version/nd4j.nd4j-backends.nd4j-api-parent.nd4j-api.src.main.java.org.nd4j.linalg.api.ops.impl.shape.Eye.java", "BodyUseAPI": [], "Fixed commit": "ea8e6b3a5a7c623c95d0077e0da8a29da0a125f6", "Url": "https://api.github.com/repos/deeplearning4j/deeplearning4j", "Date": "2018-07-26T08:49:10Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (auth.getCurrentUser().isAnonymous()) { createNote.hide(); logged.setText(R.string.logged); }else { linearLayoutManager.scrollToPosition(((firebaseRecyclerAdapter.getItemCount()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9084/buggy-version/app.src.main.java.jack.village.TabNotes.java", "BodyUseAPI": [], "Fixed commit": "da4d84ba62ea825c21771cdf9f77ce96644d120d", "Url": "https://api.github.com/repos/jackrobb/Village", "Date": "2018-02-20T17:16:28Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["newNoteTitle.getText().toString().trim()", "newNoteContent.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((title.isEmpty()) && (content.isEmpty())) { if (exists) { deleteNote(); } super.onBackPressed(); finish(); }else if (title.isEmpty()) { android.widget.Toast.makeText(this, \"Note must have title\", Toast.LENGTH_SHORT).show(); }else { createNote(title, content); super.onBackPressed(); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9084/buggy-version/app.src.main.java.jack.village.NewNoteActivity.java", "BodyUseAPI": ["jack.village.NewNoteActivity.createNote(java.lang.String,java.lang.String)", "java.lang.String.isEmpty()"], "Fixed commit": "da4d84ba62ea825c21771cdf9f77ce96644d120d", "Url": "https://api.github.com/repos/jackrobb/Village", "Date": "2018-02-20T17:16:28Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["database.UserDAO.getHouseholds(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (households == null) { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3411/buggy-version/src.main.java.services.UserService.java", "BodyUseAPI": [], "Fixed commit": "32a14547305c9763299ddab0ac44ac6dc0f256a5", "Url": "https://api.github.com/repos/StamosUltra/HouseholdManager---Group5", "Date": "2018-01-16T11:38:07Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.intari.CustomLogger.CustomLog.isDebug) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3973/buggy-version/library.src.main.java.net.intari.CustomLogger.CustomLog.java", "BodyUseAPI": [], "Fixed commit": "24fda5522a931fcd0d3082ec3645bece599252f4", "Url": "https://api.github.com/repos/intari/CustomLogger", "Date": "2018-07-29T12:39:28Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.intari.CustomLogger.CustomLog.isDebug) { t.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3973/buggy-version/library.src.main.java.net.intari.CustomLogger.CustomLog.java", "BodyUseAPI": [], "Fixed commit": "24fda5522a931fcd0d3082ec3645bece599252f4", "Url": "https://api.github.com/repos/intari/CustomLogger", "Date": "2018-07-29T12:39:28Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.intari.CustomLogger.CustomLog.isDebug) { t.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3973/buggy-version/library.src.main.java.net.intari.CustomLogger.CustomLog.java", "BodyUseAPI": [], "Fixed commit": "24fda5522a931fcd0d3082ec3645bece599252f4", "Url": "https://api.github.com/repos/intari/CustomLogger", "Date": "2018-07-29T12:39:28Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.intari.CustomLogger.CustomLog.isDebug) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3973/buggy-version/library.src.main.java.net.intari.CustomLogger.CustomLog.java", "BodyUseAPI": [], "Fixed commit": "24fda5522a931fcd0d3082ec3645bece599252f4", "Url": "https://api.github.com/repos/intari/CustomLogger", "Date": "2018-07-29T12:39:28Z"},
{"Line": "=>608", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(seed_requests_enabled)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3054/buggy-version/org.parg.azureus.plugins.networks.i2p.I2PHelperNetworkMixer.java", "BodyUseAPI": [], "Fixed commit": "2476911111915f22c300bf072a9b78bc764154aa", "Url": "https://api.github.com/repos/BiglySoftware/BiglyBT-plugin-azneti2phelper", "Date": "2018-02-01T19:17:37Z"},
{"Line": "=>914", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mix_enabled)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3054/buggy-version/org.parg.azureus.plugins.networks.i2p.I2PHelperNetworkMixer.java", "BodyUseAPI": [], "Fixed commit": "2476911111915f22c300bf072a9b78bc764154aa", "Url": "https://api.github.com/repos/BiglySoftware/BiglyBT-plugin-azneti2phelper", "Date": "2018-02-01T19:17:37Z"},
{"Line": "=>905", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(myView.getAndroidView().hasFocus())) { myView.getAndroidView().requestFocus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4742/buggy-version/Ports.Android.src.com.codename1.impl.android.AndroidImplementation.java", "BodyUseAPI": ["myView.getAndroidView().requestFocus()", "com.codename1.impl.android.CodenameOneSurface.getAndroidView()"], "Fixed commit": "b1dd210fecb6cfb18838a940e5d1f9909d7591a0", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2018-01-19T17:08:47Z"},
{"Line": "=>3224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(v.hasFocus())) { v.requestFocus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4742/buggy-version/Ports.Android.src.com.codename1.impl.android.AndroidImplementation.java", "BodyUseAPI": ["android.view.View.requestFocus()"], "Fixed commit": "b1dd210fecb6cfb18838a940e5d1f9909d7591a0", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2018-01-19T17:08:47Z"},
{"Line": "=>3437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(v.hasFocus())) { if (v.isInTouchMode()) { v.requestFocusFromTouch(); }else { v.requestFocus(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4742/buggy-version/Ports.Android.src.com.codename1.impl.android.AndroidImplementation.java", "BodyUseAPI": ["android.view.View.isInTouchMode()", "android.view.View.requestFocusFromTouch()", "android.view.View.requestFocus()"], "Fixed commit": "b1dd210fecb6cfb18838a940e5d1f9909d7591a0", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2018-01-19T17:08:47Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (status) { return new org.jspace.protocol.ServerMessage(ServerMessageType.PUT_RESPONSE, null, status, org.jspace.protocol.ServerMessage.CODE200, org.jspace.protocol.ServerMessage.OK_STATUS, null, clientSession, null); }else { return new org.jspace.protocol.ServerMessage(ServerMessageType.PUT_RESPONSE, null, status, org.jspace.protocol.ServerMessage.CODE400, org.jspace.protocol.ServerMessage.BAD_REQUEST, null, clientSession, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7884/buggy-version/common.src.main.java.org.jspace.protocol.ServerMessage.java", "BodyUseAPI": [], "Fixed commit": "0dd35744ada3dc5cb24e4c501e1397a64f24d495", "Url": "https://api.github.com/repos/pSpaces/jSpace", "Date": "2018-01-17T15:20:38Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (response.isSuccessful()) { java.util.List<java.lang.Object[]> tuples = response.getTuples(); if ((tuples.size()) == 0) { return null; } return tuples.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7884/buggy-version/common.src.main.java.org.jspace.RemoteSpace.java", "BodyUseAPI": ["org.jspace.protocol.ServerMessage.getTuples()"], "Fixed commit": "0dd35744ada3dc5cb24e4c501e1397a64f24d495", "Url": "https://api.github.com/repos/pSpaces/jSpace", "Date": "2018-01-17T15:20:38Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8880/buggy-version/src.spell.Trie.java", "BodyUseAPI": [], "Fixed commit": "3f42533728c0dc87eec5fe2b9b5ed2e6d08314e4", "Url": "https://api.github.com/repos/singseraphim/240lab2", "Date": "2018-09-19T19:48:01Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ordering.length) < otherLength) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6464/buggy-version/src.main.java.io.ebean.migration.MigrationVersion.java", "BodyUseAPI": [], "Fixed commit": "dd63a4cfe8e3c793583fa0ea1a80858982890850", "Url": "https://api.github.com/repos/FOCONIS/ebean-dbmigration", "Date": "2018-04-12T08:18:59Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.alfresco.repo.rendition2.RenditionService2Impl.getRenditionNode(org.alfresco.service.cmr.repository.NodeRef,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (renditionNode != null) { result = nodeService.hasAspect(renditionNode, RenditionModel.ASPECT_RENDITION2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4175/buggy-version/src.main.java.org.alfresco.repo.rendition2.RenditionService2Impl.java", "BodyUseAPI": ["org.alfresco.service.cmr.repository.NodeService.hasAspect(org.alfresco.service.cmr.repository.NodeRef,RenditionModel.ASPECT_RENDITION2)"], "Fixed commit": "a4d8e0ff67eaf4ba0a8ef717d6b7407641b93bff", "Url": "https://api.github.com/repos/Alfresco/alfresco-repository", "Date": "2018-09-15T16:30:56Z"},
{"Line": "=>556", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["to.etc.domui.component.ace.AceEditor.Marker.getCssClass()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == css) css = \"ui-ace-error\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7639/buggy-version/to.etc.domui.src.main.java.to.etc.domui.component.ace.AceEditor.java", "BodyUseAPI": [], "Fixed commit": "02cb4dc8fe4ab132d3813522422f9b1fca90b882", "Url": "https://api.github.com/repos/fjalvingh/domui", "Date": "2018-10-03T20:39:13Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((article.getContent()) != null) { java.lang.String content = article.getContent().replaceAll(\"<p><code>\", \"<pre><code>\").replaceAll(\"</code></p>\", \"</code></pre>\"); article.setContent(content); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1999/buggy-version/src.main.java.cn.liangjiateng.controller.api.ArticleController.java", "BodyUseAPI": ["article.getContent().replaceAll(\"<p><code>\", \"<pre><code>\").replaceAll(java.lang.String,java.lang.String)", "cn.liangjiateng.pojo.DO.Article.setContent(java.lang.String)", "article.getContent().replaceAll(java.lang.String,java.lang.String)", "cn.liangjiateng.pojo.DO.Article.getContent()"], "Fixed commit": "ef9e9a192fe5f05ebd8bf7008233039ae74d3c6d", "Url": "https://api.github.com/repos/toxicaker/blog", "Date": "2018-06-08T01:27:55Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (activated) { deactivateTimer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/9827/buggy-version/app.src.main.java.at.ac.tuwien.mpe.stablematch.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "499f9a6608d9b6796623ceb99ed179def8370227", "Url": "https://api.github.com/repos/bottersb/mpe_s18_stablematch", "Date": "2018-05-17T05:56:46Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.optJSONArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (plugins == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2597/buggy-version/content-resources.src.main.java.flyway.oskari.V1_48_1__remove_statslayerplugin.java", "BodyUseAPI": [], "Fixed commit": "f04f6abe93a9f3913036f6dba886dfccc9811f51", "Url": "https://api.github.com/repos/oskariorg/oskari-server", "Date": "2018-08-23T14:36:43Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.mifos.utils.Network.getConnectivityStatus(this)) != (com.mifos.utils.Network.TYPE_NOT_CONNECTED)) { startDashBoardActivity(); finish(); }else { com.mifos.mifosxdroid.core.util.Toaster.show(clRootview, R.string.error_network_not_available); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5595/buggy-version/mifosng-android.src.main.java.com.mifos.mifosxdroid.passcode.PassCodeActivity.java", "BodyUseAPI": [], "Fixed commit": "ec8dbad159df5e4a7089793e943e679afce7f183", "Url": "https://api.github.com/repos/AkshGautam/android-client", "Date": "2018-02-08T15:10:10Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state.getStatus()) == (baritone.pathing.movement.MovementState.MovementStatus.WAITING)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/1786/buggy-version/src.main.java.baritone.pathing.movement.movements.MovementFall.java", "BodyUseAPI": [], "Fixed commit": "67c5a9caa02fc18b048d8dc419c16fa7b0f721f4", "Url": "https://api.github.com/repos/cabaletta/baritone", "Date": "2018-09-15T16:29:03Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (io.anuke.mindustry.Vars.content.block(map.read(wx, wy, DataPosition.wall)).isMultiblock()) { removeLinked(wx, wy); }else if (link != 0) { removeLinked((wx - ((io.anuke.ucore.util.Bits.getLeftByte(link)) - 8)), (wy - ((io.anuke.ucore.util.Bits.getRightByte(link)) - 8))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/6264/buggy-version/core.src.io.anuke.mindustry.editor.MapEditor.java", "BodyUseAPI": ["io.anuke.mindustry.editor.MapEditor.removeLinked(int,int)", "io.anuke.mindustry.editor.MapEditor.removeLinked((wx - ((io.anuke.ucore.util.Bits.getLeftByte(link)) - 8)),(wy - ((io.anuke.ucore.util.Bits.getRightByte(link)) - 8)))"], "Fixed commit": "6a6e80b6d8ce731d15ae38423ab32a316c9b54fe", "Url": "https://api.github.com/repos/Bombbird2001/Mindustry", "Date": "2018-09-20T22:25:55Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.feeyo.redis.net.front.RedisFrontSession.auth(com.feeyo.redis.net.codec.RedisRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isPass) { requests.remove(0); if (requests.isEmpty()) { return; } }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7739/buggy-version/src.main.java.com.feeyo.redis.net.front.RedisFrontSession.java", "BodyUseAPI": [], "Fixed commit": "587b74748be3bfcb39fc0ca62fd2d958b142aae2", "Url": "https://api.github.com/repos/Block2/feeyo-redisproxy", "Date": "2018-06-04T09:36:51Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["headers.headers().get(HttpHeaderNames.CONTENT_ENCODING)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (contentEncoding != null) { acceptEncoding = contentEncoding; headers.headers().remove(HttpHeaderNames.CONTENT_ENCODING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7475/buggy-version/components.org.wso2.transport.http.netty.src.main.java.org.wso2.transport.http.netty.listener.CustomHttpContentCompressor.java", "BodyUseAPI": [], "Fixed commit": "5dba21c4021c5b2353417ff93891b1ac3f0d41da", "Url": "https://api.github.com/repos/wso2/transport-http", "Date": "2018-03-15T08:18:06Z"},
{"Line": "=>768", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["thredds.catalog.InvCatalog.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (topName.startsWith(\"THREDDS Server Default Catalog : You must change\")) { topName = \"Data Catalog\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2347/buggy-version/JavaSource.gov.noaa.pmel.tmap.addxml.ADDXMLProcessor.java", "BodyUseAPI": [], "Fixed commit": "8741e3d0ab0345a625981ffd4cf1746143f8be4e", "Url": "https://api.github.com/repos/NOAA-PMEL/LAS", "Date": "2018-05-04T01:27:42Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((user.getEmail()) != null) { robust2 = com.example.steffen.rememo.Logic.FirebaseLogic.EncodeString(user.getEmail().toLowerCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/938/buggy-version/app.src.main.java.com.example.steffen.rememo.Activities.EditProfile.java", "BodyUseAPI": ["com.example.steffen.rememo.Logic.FirebaseLogic.EncodeString(user.getEmail().toLowerCase())", "user.getEmail().toLowerCase()", "com.example.steffen.rememo.Logic.User.getEmail()"], "Fixed commit": "c09529dd7d0f1c8662168a8658a457581aa92230", "Url": "https://api.github.com/repos/steffenbirkis/ReMemo", "Date": "2018-04-25T09:38:43Z"},
{"Line": "=>1220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (o instanceof org.netxms.client.objects.TemplateGroup) { java.util.Set<org.netxms.client.objects.AbstractObject> children = ((org.netxms.client.objects.TemplateGroup) (o)).getAllChilds(AbstractObject.OBJECT_TEMPLATE); for (org.netxms.client.objects.AbstractObject child : children) { templates.put(((org.netxms.client.objects.Template) (child)).getObjectId(), ((org.netxms.client.objects.Template) (child))); idList.add(child.getObjectId()); } }else if (o instanceof org.netxms.client.objects.Template) { templates.put(((org.netxms.client.objects.Template) (o)).getObjectId(), ((org.netxms.client.objects.Template) (o))); idList.add(o.getObjectId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4649/buggy-version/src.java.netxms-eclipse.ServerConfig.src.org.netxms.ui.eclipse.serverconfig.views.ExportFileBuilder.java", "BodyUseAPI": ["org.netxms.client.objects.AbstractObject.getObjectId()", "java.util.Set<java.lang.Long>.add(o.getObjectId())"], "Fixed commit": "669fa92ef6e5f35c4de17900cc9649667499bd4a", "Url": "https://api.github.com/repos/netxms/netxms", "Date": "2018-01-18T07:59:31Z"},
{"Line": "=>1212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (o instanceof org.netxms.ui.eclipse.serverconfig.views.TemplateGroup) { java.util.Set<org.netxms.client.objects.AbstractObject> children = ((org.netxms.ui.eclipse.serverconfig.views.TemplateGroup) (o)).getAllChilds(AbstractObject.OBJECT_TEMPLATE); for (org.netxms.client.objects.AbstractObject child : children) { templates.put(((org.netxms.client.objects.Template) (child)).getObjectId(), ((org.netxms.client.objects.Template) (child))); idList.add(child.getObjectId()); } }else if (o instanceof org.netxms.client.objects.Template) { templates.put(((org.netxms.client.objects.Template) (o)).getObjectId(), ((org.netxms.client.objects.Template) (o))); idList.add(o.getObjectId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/4649/buggy-version/webui.webapp.ServerConfig.src.org.netxms.ui.eclipse.serverconfig.views.ExportFileBuilder.java", "BodyUseAPI": ["org.netxms.client.objects.AbstractObject.getObjectId()", "java.util.Set<java.lang.Long>.add(o.getObjectId())"], "Fixed commit": "669fa92ef6e5f35c4de17900cc9649667499bd4a", "Url": "https://api.github.com/repos/netxms/netxms", "Date": "2018-01-18T07:59:31Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.structr.websocket.message.WebSocketMessage.getSortKey()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (sortKey != null) { final org.structr.core.property.PropertyKey sortProperty = org.structr.core.app.StructrApp.key(org.structr.web.entity.dom.DOMNode.class, sortKey); query = org.structr.core.app.StructrApp.getInstance(securityContext).nodeQuery().includeDeletedAndHidden().sort(sortProperty).order(\"desc\".equals(sortOrder)); }else { query = org.structr.core.app.StructrApp.getInstance(securityContext).nodeQuery().includeDeletedAndHidden(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7142/buggy-version/structr-ui.src.main.java.org.structr.websocket.command.ListUnattachedNodesCommand.java", "BodyUseAPI": ["org.structr.core.app.StructrApp.key(java.lang.Class,java.lang.String)"], "Fixed commit": "19d0ab027fa93aa212d67e811e6015986368e16b", "Url": "https://api.github.com/repos/structr/structr", "Date": "2018-02-16T13:35:45Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof edu.uci.qa.tasker.parser.InvalidSyntaxException) { throw ((edu.uci.qa.tasker.parser.InvalidSyntaxException) (e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5701/buggy-version/src.main.java.edu.uci.qa.tasker.parser.ImportLine.java", "BodyUseAPI": [], "Fixed commit": "d7272ec490bfedea763f4e6999bc45ca25098a86", "Url": "https://api.github.com/repos/OITQA/Tasker", "Date": "2018-08-22T20:32:04Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (line.startsWith(\"INFO\")) { log.info(line); }else if (line.startsWith(\"WARN\")) { log.warning(line); }else { log.severe(line); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/3469/buggy-version/spf4j-core.src.main.java.org.spf4j.os.StdOutToStringProcessHandler.java", "BodyUseAPI": ["java.util.logging.Logger.info(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.util.logging.Logger.warning(java.lang.String)", "java.util.logging.Logger.severe(java.lang.String)"], "Fixed commit": "f77908ce2d3fa10282db36b380037808cd13a160", "Url": "https://api.github.com/repos/zolyfarkas/spf4j", "Date": "2018-09-30T15:29:49Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (candidateSupStr.isEmpty()) { return extractedValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5724/buggy-version/src.main.java.onethreeseven.spm.data.SPMFParser.java", "BodyUseAPI": [], "Fixed commit": "7e6435181e3da7020740d259564eb22c249d89a4", "Url": "https://api.github.com/repos/lukehb/137-SPM", "Date": "2017-06-15T04:54:04Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (a == 0) { stack.push(0); return stack; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/841/buggy-version/src.binary.Binary.java", "BodyUseAPI": [], "Fixed commit": "663a10a636c82f581330827d52102d4e835ca1c4", "Url": "https://api.github.com/repos/zhuang002/DMOJ-5-Binary", "Date": "2018-05-11T15:24:57Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((hero.getHp()) < 100) { if ((hero.getHp()) > 80) { hero.setHp((((hero.getHp()) + 100) - (hero.getHp()))); }else { hero.setHp(((hero.getHp()) + (ru.itis.javawarrior.service.impl.ActionServiceImpl.RECOVERY))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/7670/buggy-version/src.main.java.ru.itis.javawarrior.service.impl.ActionServiceImpl.java", "BodyUseAPI": ["ru.itis.javawarrior.service.impl.Hero.setHp(((hero.getHp()) + (ru.itis.javawarrior.service.impl.ActionServiceImpl.RECOVERY)))", "ru.itis.javawarrior.service.impl.Hero.getHp()", "ru.itis.javawarrior.service.impl.Hero.getHp()", "ru.itis.javawarrior.service.impl.Hero.setHp((((hero.getHp()) + 100) - (hero.getHp())))", "ru.itis.javawarrior.service.impl.Hero.getHp()", "ru.itis.javawarrior.service.impl.Hero.getHp()"], "Fixed commit": "b50948f69b722af8f3d51e55e2fa10f17c1df847", "Url": "https://api.github.com/repos/DamirIlyasov/java-warrior", "Date": "2018-05-19T12:15:13Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((permissions.length) != 0) && ((grantResults.length) != 0)) { if ((Manifest.permission.ACCESS_FINE_LOCATION.equals(permissions[0])) && ((grantResults[0]) == (android.content.pm.PackageManager.PERMISSION_GRANTED))) { mapFragment.getMapAsync(this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/8266/buggy-version/app.src.main.java.com.csi5175.mobilecommerce.recogu.MainActivity.java", "BodyUseAPI": ["Manifest.permission.ACCESS_FINE_LOCATION.equals(java.lang.String)"], "Fixed commit": "aa9658f055aa5a55be25b668a95aaf2fffd7d54c", "Url": "https://api.github.com/repos/donnytab/RecogU", "Date": "2018-02-24T04:36:50Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.aion.zero.impl.db.AionBlockStore.getChainBlockByNumber(block.getNumber())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (mainBlock == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2709/buggy-version/modAionImpl.src.org.aion.zero.impl.AionBlockchainImpl.java", "BodyUseAPI": [], "Fixed commit": "b1b3e045ed9603019d3a746c719f3de27a1e3bdf", "Url": "https://api.github.com/repos/aionnetwork/aion", "Date": "2018-03-17T02:51:01Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.aion.zero.impl.db.AionBlockStore.getBlockByHash(info.getBlockHash())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (block == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2709/buggy-version/modAionImpl.src.org.aion.zero.impl.AionBlockchainImpl.java", "BodyUseAPI": [], "Fixed commit": "b1b3e045ed9603019d3a746c719f3de27a1e3bdf", "Url": "https://api.github.com/repos/aionnetwork/aion", "Date": "2018-03-17T02:51:01Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(CustomMediaType.APPLICATION_SCHEMA_REGISTRY_JSON.equalsIgnoreCase(contentType))) { logger.error(\"Content-Type is not set correctly, subject: {}\", subject); acknowledgement = new org.schemarepo.utils.MessageAcknowledgement<java.util.List>(StatusCodes.INVALID_REQUEST.getStatusCode(), org.schemarepo.MessageStrings.CONTENT_TYPE_ERROR, null); }else if (org.apache.commons.lang3.StringUtils.isAnyBlank(subject)) { logger.error(\"Invalid Parameter Passed to function, subject: {}\", subject); acknowledgement = new org.schemarepo.utils.MessageAcknowledgement<java.util.List>(StatusCodes.INVALID_REQUEST.getStatusCode(), StatusCodes.INVALID_REQUEST.getReasonPhrase(), null); }else { org.schemarepo.Subject s = repo.lookup(subject); if (null == s) { logger.error(\"This subject does not exist, suject: {}\", subject); acknowledgement = new org.schemarepo.utils.MessageAcknowledgement<java.util.List>(StatusCodes.NOT_FOUND.getStatusCode(), org.schemarepo.MessageStrings.SUBJECT_DOES_NOT_EXIST_ERROR, null); }else { java.util.List<org.schemarepo.SchemaEntry> sl = new java.util.ArrayList<>(); s.allEntries().forEach(sl::add); acknowledgement = new org.schemarepo.utils.MessageAcknowledgement<java.util.List>(StatusCodes.OK.getStatusCode(), StatusCodes.OK.getReasonPhrase(), sl); logger.info(\"Query all schema in the subject is successful. subject: {}\", subject); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/5470/buggy-version/server.src.main.java.org.schemarepo.server.RESTRepository.java", "BodyUseAPI": [], "Fixed commit": "8751b8b0526501f2ff732dee6fdbe4bcac442488", "Url": "https://api.github.com/repos/chekore/schema-repo", "Date": "2018-09-17T10:47:09Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.maps.GeocodingApi.geocode(geoApiContext, address).await()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((results.length) > 0) { if ((results[0]) != null) { double lat = results[0].geometry.location.lat; double lng = results[0].geometry.location.lng; latLng = new com.google.maps.model.LatLng(lat, lng); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V164/2745/buggy-version/app.src.main.java.cmput301w18t09.orbid.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "7502af3ed9694d36d4621fd8fafd954d7160e854", "Url": "https://api.github.com/repos/CMPUT301W18T09/CDProjektBlue", "Date": "2018-04-05T23:08:44Z"},
{"Line": "=>820", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mjr.extraplanets.Config.USE_DEFAULT_BOSSES) com.mjr.mjrlegendslib.util.RegisterUtilities.registerTileEntity(com.mjr.extraplanets.tileEntities.dungeonSpawners.TileEntityDungeonSpawnerErisDefault.class, ((com.mjr.extraplanets.Constants.modName) + \"Eris Dungeon Default Spawner\")); else com.mjr.mjrlegendslib.util.RegisterUtilities.registerTileEntity(com.mjr.extraplanets.tileEntities.dungeonSpawners.TileEntityDungeonSpawnerEris.class, ((com.mjr.extraplanets.Constants.modName) + \"Eris Dungeon Spawner\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7620/buggy-version/src.main.java.com.mjr.extraplanets.blocks.ExtraPlanets_Blocks.java", "BodyUseAPI": [], "Fixed commit": "6e495414e491ed3277617c434db501fbb9ea2d47", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-01-24T03:01:51Z"},
{"Line": "=>813", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mjr.extraplanets.Config.USE_DEFAULT_BOSSES) com.mjr.mjrlegendslib.util.RegisterUtilities.registerTileEntity(com.mjr.extraplanets.tileEntities.dungeonSpawners.TileEntityDungeonSpawnerPlutoDefault.class, ((com.mjr.extraplanets.Constants.modName) + \"Pluto Dungeon Default Spawner\")); else com.mjr.mjrlegendslib.util.RegisterUtilities.registerTileEntity(com.mjr.extraplanets.tileEntities.dungeonSpawners.TileEntityDungeonSpawnerPluto.class, ((com.mjr.extraplanets.Constants.modName) + \"Pluto Dungeon Spawner\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7620/buggy-version/src.main.java.com.mjr.extraplanets.blocks.ExtraPlanets_Blocks.java", "BodyUseAPI": [], "Fixed commit": "6e495414e491ed3277617c434db501fbb9ea2d47", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-01-24T03:01:51Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, android.util.SparseArray<me.kr328.nevo.decorators.smscaptcha.BaseSmsDecoratorService.ActionClickedListener>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (listeners == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2433/buggy-version/app.src.main.java.me.kr328.nevo.decorators.smscaptcha.BaseSmsDecoratorService.java", "BodyUseAPI": [], "Fixed commit": "d8f851d6ab1089fd515c1be961c654e8f93ca3ae", "Url": "https://api.github.com/repos/Kr328/nevo-decorators-sms-captchas", "Date": "2018-08-30T09:54:03Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MACDs.isEmpty()) || (signals.isEmpty())) { signal(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7468/buggy-version/src.main.java.io.github.unterstein.statistic.MACD.MACD.java", "BodyUseAPI": [], "Fixed commit": "b45413c0e82b2eac187163eff52467c5b85c82e7", "Url": "https://api.github.com/repos/JimmyUA/binance-trader", "Date": "2018-08-01T13:43:04Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.unterstein.statistic.MarketAnalyzer.isMaCDBelowZero()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isMACDBelowZero) { wasMACDOverZero = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7468/buggy-version/src.main.java.io.github.unterstein.botlogic.decision.onetrend.SellDecisionMakerOneTrend.java", "BodyUseAPI": [], "Fixed commit": "b45413c0e82b2eac187163eff52467c5b85c82e7", "Url": "https://api.github.com/repos/JimmyUA/binance-trader", "Date": "2018-08-01T13:43:04Z"},
{"Line": "=>847", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mjr.extraplanets.Config.USE_DEFAULT_BOSSES) com.mjr.mjrlegendslib.util.RegisterUtilities.registerTileEntity(com.mjr.extraplanets.tileEntities.dungeonSpawners.TileEntityDungeonSpawnerErisDefault.class, ((com.mjr.extraplanets.Constants.modName) + \"Eris Dungeon Default Spawner\")); else com.mjr.mjrlegendslib.util.RegisterUtilities.registerTileEntity(com.mjr.extraplanets.tileEntities.dungeonSpawners.TileEntityDungeonSpawnerEris.class, ((com.mjr.extraplanets.Constants.modName) + \"Eris Dungeon Spawner\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9331/buggy-version/src.main.java.com.mjr.extraplanets.blocks.ExtraPlanets_Blocks.java", "BodyUseAPI": [], "Fixed commit": "1770e764030dd0a02ab2202120add19d5b25b676", "Url": "https://api.github.com/repos/CDAGaming/ExtraPlanets", "Date": "2018-01-24T03:01:51Z"},
{"Line": "=>840", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mjr.extraplanets.Config.USE_DEFAULT_BOSSES) com.mjr.mjrlegendslib.util.RegisterUtilities.registerTileEntity(com.mjr.extraplanets.tileEntities.dungeonSpawners.TileEntityDungeonSpawnerPlutoDefault.class, ((com.mjr.extraplanets.Constants.modName) + \"Pluto Dungeon Default Spawner\")); else com.mjr.mjrlegendslib.util.RegisterUtilities.registerTileEntity(com.mjr.extraplanets.tileEntities.dungeonSpawners.TileEntityDungeonSpawnerPluto.class, ((com.mjr.extraplanets.Constants.modName) + \"Pluto Dungeon Spawner\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9331/buggy-version/src.main.java.com.mjr.extraplanets.blocks.ExtraPlanets_Blocks.java", "BodyUseAPI": [], "Fixed commit": "1770e764030dd0a02ab2202120add19d5b25b676", "Url": "https://api.github.com/repos/CDAGaming/ExtraPlanets", "Date": "2018-01-24T03:01:51Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((teamName.contains(\"(\")) == false) { return teamName.replace(' ', '_').toLowerCase(); }else { java.lang.String textBeforeBracket = teamName.substring(0, teamName.indexOf(\"(\")); return textBeforeBracket.trim().replace(' ', '_').toLowerCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6028/buggy-version/app.src.main.java.com.bravelocation.yeltzlandnew.TeamLogoManager.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.toLowerCase()", "java.lang.String.replace(char,char)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "607f7363bf46818c2b4bd10ce3623adfe3b9ef16", "Url": "https://api.github.com/repos/bravelocation/yeltzland-android", "Date": "2018-08-29T13:50:48Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((screen) != null) { screen.reloadWaveInfo(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6199/buggy-version/src.main.java.org.terasology.gooeyDefence.ui.control.ControlScreenSystem.java", "BodyUseAPI": [], "Fixed commit": "e5c7321c2351e4ca732d6cc790b72be615226981", "Url": "https://api.github.com/repos/Terasology/GooeyDefence", "Date": "2018-08-12T09:59:51Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["chess.State.pieceAt(java.util.Vector)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (chess.Util.isKing(toPiece)) { this.kingCaptured = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/614/buggy-version/src.chess.State.java", "BodyUseAPI": [], "Fixed commit": "09194a815c5cc898caf0b8d236572e09b1818d32", "Url": "https://api.github.com/repos/thomascastleman/chess", "Date": "2018-01-01T02:15:39Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((telHomeCubes) > 0) (telHomeCubes)--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7150/buggy-version/app.src.main.java.com.team2658.scouter.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f9f925b4a18730a1cd497ada8351c0c24b9a77ce", "Url": "https://api.github.com/repos/frc-emotion/Android-Scouter", "Date": "2018-04-03T05:24:40Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((telScaleCubes) > 0) (telScaleCubes)--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7150/buggy-version/app.src.main.java.com.team2658.scouter.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f9f925b4a18730a1cd497ada8351c0c24b9a77ce", "Url": "https://api.github.com/repos/frc-emotion/Android-Scouter", "Date": "2018-04-03T05:24:40Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((telDropCubes) > 0) (telDropCubes)--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7150/buggy-version/app.src.main.java.com.team2658.scouter.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f9f925b4a18730a1cd497ada8351c0c24b9a77ce", "Url": "https://api.github.com/repos/frc-emotion/Android-Scouter", "Date": "2018-04-03T05:24:40Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((telEx) > 0) (telEx)--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7150/buggy-version/app.src.main.java.com.team2658.scouter.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f9f925b4a18730a1cd497ada8351c0c24b9a77ce", "Url": "https://api.github.com/repos/frc-emotion/Android-Scouter", "Date": "2018-04-03T05:24:40Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((telOppCubes) > 0) (telOppCubes)--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7150/buggy-version/app.src.main.java.com.team2658.scouter.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f9f925b4a18730a1cd497ada8351c0c24b9a77ce", "Url": "https://api.github.com/repos/frc-emotion/Android-Scouter", "Date": "2018-04-03T05:24:40Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((args.length) > 0) && ((args[0]) != null)) { org.nschmidt.ldparteditor.win32openWith.TryToOpen.File(args[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9625/buggy-version/src.org.nschmidt.ldparteditor.main.LDPartEditor.java", "BodyUseAPI": ["org.nschmidt.ldparteditor.win32openWith.TryToOpen.File(java.lang.String)"], "Fixed commit": "d93c742cef67d43b07f4eccadbac818569d1b035", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2018-01-18T20:28:29Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8542/buggy-version/app.src.main.java.make.up.the.tool.gpio_client.view.fragment.FragmentWithList.java", "BodyUseAPI": [], "Fixed commit": "29fd10980b7bf693bfb1013c785808fc60f63a09", "Url": "https://api.github.com/repos/A-Nosenko/Android-client-for-GPIO", "Date": "2018-05-24T08:53:08Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ju.getActionStatisticsListenerManager().findListener(java.lang.Class)", "com.dml.majiang.player.MajiangPlayer.getGangmoShoupai()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((com.dml.majiang.pai.MajiangPai.isFengpai(gangmoShoupai)) && (juezhangStatisticsListener.ifJuezhang(gangmoShoupai))) { player.addActionCandidate(new com.dml.majiang.player.action.da.MajiangDaAction(player.getId(), gangmoShoupai)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8901/buggy-version/src.main.java.com.anbang.qipai.ruianmajiang.cqrs.c.domain.RuianMajiangMoActionUpdater.java", "BodyUseAPI": ["com.dml.majiang.player.MajiangPlayer.addActionCandidate(com.dml.majiang.player.action.da.MajiangDaAction)"], "Fixed commit": "458a66977241aa0d636d737ef389685274754f36", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_ruianmajiang", "Date": "2018-08-20T05:35:07Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.codecool.klondike.Pile.getTopCard()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (topCard != null) { if (topCard.isFaceDown()) { topCard.flip(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/632/buggy-version/src.com.codecool.klondike.Pile.java", "BodyUseAPI": ["com.codecool.klondike.Card.isFaceDown()", "com.codecool.klondike.Card.flip()"], "Fixed commit": "a565de1e1b86c06725653c104bdd81d2f2ab24cf", "Url": "https://api.github.com/repos/CodecoolBPoop/oop-java-klondike-solitaire-b-b", "Date": "2018-09-04T12:13:02Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.plugins.haxe.haxelib.HaxelibUtil.getLibraryBasePath(com.intellij.openapi.projectRoots.Sdk)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (haxelibRoot == null) { com.intellij.plugins.haxe.haxelib.HaxelibUtil.LOG.debug(\"Haxe libraries base path was not found for current project sdk\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8684/buggy-version/src.common.com.intellij.plugins.haxe.haxelib.HaxelibUtil.java", "BodyUseAPI": [], "Fixed commit": "4fa76116efb9e7fd94999305d920c6f74eed2cbe", "Url": "https://api.github.com/repos/HaxeFoundation/intellij-haxe", "Date": "2018-05-08T07:23:15Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entityData.hasComponent(targetRuleEntity, componentDefinition)) { java.lang.Object requiredComponent = entityData.getComponent(targetRuleEntity, componentDefinition); if (entityData.hasComponent(targetEntity, componentDefinition)) { java.lang.Object targetComponent = entityData.getComponent(targetEntity, componentDefinition); if (!(java.util.Objects.equals(requiredComponent, targetComponent))) { return false; } }else { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/678/buggy-version/main.shared.rules.src.main.java.com.destrostudios.cards.shared.rules.SpellTargetValidator.java", "BodyUseAPI": ["com.destrostudios.cards.shared.entities.EntityData.getComponent(int,com.destrostudios.cards.shared.entities.ComponentDefinition)", "com.destrostudios.cards.shared.entities.EntityData.hasComponent(int,com.destrostudios.cards.shared.entities.ComponentDefinition)", "com.destrostudios.cards.shared.entities.EntityData.getComponent(int,com.destrostudios.cards.shared.entities.ComponentDefinition)"], "Fixed commit": "a343c13aceb0f10d3d1913d8e08e7032106388a6", "Url": "https://api.github.com/repos/destrostudios/cards", "Date": "2018-06-03T10:49:08Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { headlinesFragment = com.example.abhishek.newsapp.ui.headlines.HeadlinesFragment.newInstance(); fragmentManager.beginTransaction().add(R.id.fragment_container, headlinesFragment).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4051/buggy-version/app.src.main.java.com.example.abhishek.newsapp.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1fc02290bca8f0193ec3320afaba70b211ecbc75", "Url": "https://api.github.com/repos/AbhishekChd/NewsApp", "Date": "2018-10-23T00:02:50Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file.getParentFile().mkdirs()) { logActivity(this, (\"Created directory: \" + fullFilePath)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7845/buggy-version/Software.Source.me.metlabnews.Model.Common.Logger.java", "BodyUseAPI": [], "Fixed commit": "9ee9f3bf37ec62a4dd6f63e01004d9a9670f6a98", "Url": "https://api.github.com/repos/InvisibleUSA/METLAB_News", "Date": "2018-04-25T21:37:28Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(this.setupPermissionsHandler())) { plugin.getServer().getLogger().severe(\"Could not connect to permissions plugin. Is it up to date?\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8192/buggy-version/src.me.armar.plugins.autorank.permissions.PermissionsHandler.java", "BodyUseAPI": [], "Fixed commit": "8066d17deb71e1bcde9f6162f57ff0e6ee4d1610", "Url": "https://api.github.com/repos/Staartvin/Autorank-2", "Date": "2018-04-28T14:38:17Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((str == null) || (str.isEmpty())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7577/buggy-version/lab.lab2.XMLParser.java", "BodyUseAPI": [], "Fixed commit": "d0de0ece0684bd0fedd5e7552d5894416aa39112", "Url": "https://api.github.com/repos/JohndeVostok/THU-Distributed-System", "Date": "2018-07-10T13:23:10Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (me.RockinChaos.itemjoin.handlers.ServerHandler.hasCombatUpdate()) { item = me.RockinChaos.itemjoin.handlers.PlayerHandler.getPerfectHandItem(event.getPlayer(), event.getHand().toString()); }else { item = me.RockinChaos.itemjoin.handlers.PlayerHandler.getPerfectHandItem(event.getPlayer(), \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/49/buggy-version/src.me.RockinChaos.itemjoin.listeners.Placement.java", "BodyUseAPI": [], "Fixed commit": "75d4c60f20b46590ea2076270c4d58600f7ae032", "Url": "https://api.github.com/repos/RockinChaos/ItemJoin", "Date": "2018-02-05T06:11:51Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (me.RockinChaos.itemjoin.handlers.ServerHandler.hasCombatUpdate()) { item = me.RockinChaos.itemjoin.handlers.PlayerHandler.getPerfectHandItem(event.getPlayer(), event.getHand().toString()); }else { item = me.RockinChaos.itemjoin.handlers.PlayerHandler.getPerfectHandItem(event.getPlayer(), \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/49/buggy-version/src.me.RockinChaos.itemjoin.listeners.Placement.java", "BodyUseAPI": [], "Fixed commit": "75d4c60f20b46590ea2076270c4d58600f7ae032", "Url": "https://api.github.com/repos/RockinChaos/ItemJoin", "Date": "2018-02-05T06:11:51Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"simple\".equals(subtitles.getMode())) { cmd = java.lang.String.format(\"ffmpeg -i %s -r 4 -vf ass=%s,scale=180:-1 -f gif - |gifsicle --optimize=3 --delay=20 > %s \", videoPath, assPath, gifPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7579/buggy-version/src.main.java.com.lzh.service.GifService.java", "BodyUseAPI": [], "Fixed commit": "0e7306812339cc3c69bbc857394b030e6ddc052e", "Url": "https://api.github.com/repos/li24361/sorryJava", "Date": "2018-03-18T13:36:31Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dataDirectory.exists())) { dataDirectory.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4327/buggy-version/src.controller.Command.SaveCommand.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "671d7ad2823fd7aa48f06a44376845c36b4220e2", "Url": "https://api.github.com/repos/JWaffles/L3_CODE_MRoy_JDurette-Morin_BNacef", "Date": "2018-03-24T04:19:37Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (el instanceof org.scilab.forge.jlatexmath.ReadOnlyAtom) root = new org.scilab.forge.jlatexmath.RowAtom(el); else root = el;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4799/buggy-version/src.org.scilab.forge.jlatexmath.TeXFormula.java", "BodyUseAPI": [], "Fixed commit": "b96ac7d584279801fa21a187a3fe1b9c77533b18", "Url": "https://api.github.com/repos/CBN-Polska/jlatexmath", "Date": "2018-09-05T11:39:48Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (similarNodes.isEmpty()) { ((de.ovgu.cide.fstgen.ast.FSTTerminal) (conflictNode)).setBody(oppositeSideNodeContent); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8490/buggy-version/src.main.java.br.ufpe.cin.mergers.handlers.singlerenaming.MergeMethodsSingleRenamingHandler.java", "BodyUseAPI": [], "Fixed commit": "8eaec08ca920f90bda9d52f5da7296d33b139cb1", "Url": "https://api.github.com/repos/gaabs/jFSTMerge", "Date": "2018-10-20T22:09:51Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (result2 == null) { android.widget.Toast.makeText(_context, \"Error\", Toast.LENGTH_SHORT).show(); }else { result2 = result2.substring(0, ((result2.length()) - 1)); android.util.Log.i(\"isSuccess\", result2); if (result2.equals(\"success\")) { android.util.Log.i(\"isSucess\", \"success\"); android.widget.Toast.makeText(_context, \"Saved\", Toast.LENGTH_SHORT).show(); }else if (result2.equals(\"error\")) { android.util.Log.i(\"isSuccess\", \"Error\"); android.widget.Toast.makeText(_context, \"Error\", Toast.LENGTH_SHORT).show(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8890/buggy-version/app.src.main.java.com.rikenmaharjan.y2yc.utils.Survey.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "91673746c89d083b82d8e8d7de8ce0cf238a80f8", "Url": "https://api.github.com/repos/Rikenm/Y2Yversion2", "Date": "2018-06-07T18:23:24Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState != null) { firstStart = savedInstanceState.getBoolean(com.example.xyzreader.ui.ArticleDetailActivity.FIRST_START); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2368/buggy-version/XYZReader.src.main.java.com.example.xyzreader.ui.ArticleDetailActivity.java", "BodyUseAPI": ["android.os.Bundle.getBoolean(java.lang.String)"], "Fixed commit": "a8af347d74022d96a639fed5379d1cb0d0ffc329", "Url": "https://api.github.com/repos/francescosalamone/xyz-reader-starter-code", "Date": "2018-05-19T08:40:27Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tag == null) || (tag.isEmpty())) { tag = \"default\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4293/buggy-version/src.main.java.com.falled.thunder.controller.MainController.java", "BodyUseAPI": [], "Fixed commit": "6a7d257a030d83030279b3f6d22c3726bc400fcb", "Url": "https://api.github.com/repos/falled10/Thunder", "Date": "2018-08-29T17:59:42Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(addFieldImport(reference))) { scan(reference.getDeclaringType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8823/buggy-version/src.main.java.spoon.reflect.visitor.ImportScannerImpl.java", "BodyUseAPI": ["spoon.reflect.reference.CtFieldReference<T>.getDeclaringType()", "spoon.reflect.visitor.ImportScannerImpl.scan(reference.getDeclaringType())"], "Fixed commit": "8c991cd38fc9071abcc7bb58bdca0e91afcd7d50", "Url": "https://api.github.com/repos/surli/spoon", "Date": "2018-06-29T12:21:08Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(attendingStudents.contains(student))) { attendingStudents.add(student); student.attend(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5159/buggy-version/src.week5.assignment.Course.java", "BodyUseAPI": ["java.util.HashSet<week5.assignment.Student>.add(week5.assignment.Student)", "week5.assignment.Student.attend(week5.assignment.Course)"], "Fixed commit": "b8d2483526030fe0bb8763b9f0e89c92a7f8486e", "Url": "https://api.github.com/repos/NicEastvillage/Uni-OOP", "Date": "2018-03-20T20:08:30Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (attendingCourses.contains(course)) { attendingCourses.remove(course); course.removeStudent(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5159/buggy-version/src.week5.assignment.Student.java", "BodyUseAPI": ["java.util.HashSet<week5.assignment.Course>.remove(week5.assignment.Course)", "week5.assignment.Course.removeStudent(week5.assignment.Student)"], "Fixed commit": "b8d2483526030fe0bb8763b9f0e89c92a7f8486e", "Url": "https://api.github.com/repos/NicEastvillage/Uni-OOP", "Date": "2018-03-20T20:08:30Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dataSet.getDataPoints().size()) > 0) { stepsTextView.setText((\"Steps: \" + (dataSet.getDataPoints().get(0).getValue(Field.FIELD_STEPS)))); }else { stepsTextView.setText(\"No steps!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8722/buggy-version/app.src.main.java.com.example.dmitriisalenko.fitexampleapp.MainActivity.java", "BodyUseAPI": ["dataSet.getDataPoints().get(0).getValue(Field.FIELD_STEPS)", "android.widget.TextView.setText((\"Steps: \" + (dataSet.getDataPoints().get(0).getValue(Field.FIELD_STEPS))))", "com.google.android.gms.fitness.data.DataSet.getDataPoints()", "dataSet.getDataPoints().get(int)"], "Fixed commit": "45eee8182b07a80ca02a7dc8e03c7171e61c5aad", "Url": "https://api.github.com/repos/dmitriys-lits/fitexampleapp", "Date": "2018-10-17T14:00:56Z"},
{"Line": "=>813", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mjr.extraplanets.Config.USE_DEFAULT_BOSSES) com.mjr.mjrlegendslib.util.RegisterUtilities.registerTileEntity(com.mjr.extraplanets.tileEntities.dungeonSpawners.TileEntityDungeonSpawnerPlutoDefault.class, ((com.mjr.extraplanets.Constants.modName) + \"Pluto Dungeon Default Spawner\")); else com.mjr.mjrlegendslib.util.RegisterUtilities.registerTileEntity(com.mjr.extraplanets.tileEntities.dungeonSpawners.TileEntityDungeonSpawnerPluto.class, ((com.mjr.extraplanets.Constants.modName) + \"Pluto Dungeon Spawner\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9472/buggy-version/src.main.java.com.mjr.extraplanets.blocks.ExtraPlanets_Blocks.java", "BodyUseAPI": [], "Fixed commit": "86c6613463c06d8f5cfe05b5012ec340b08f9135", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-01-24T03:01:51Z"},
{"Line": "=>820", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mjr.extraplanets.Config.USE_DEFAULT_BOSSES) com.mjr.mjrlegendslib.util.RegisterUtilities.registerTileEntity(com.mjr.extraplanets.tileEntities.dungeonSpawners.TileEntityDungeonSpawnerErisDefault.class, ((com.mjr.extraplanets.Constants.modName) + \"Eris Dungeon Default Spawner\")); else com.mjr.mjrlegendslib.util.RegisterUtilities.registerTileEntity(com.mjr.extraplanets.tileEntities.dungeonSpawners.TileEntityDungeonSpawnerEris.class, ((com.mjr.extraplanets.Constants.modName) + \"Eris Dungeon Spawner\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9472/buggy-version/src.main.java.com.mjr.extraplanets.blocks.ExtraPlanets_Blocks.java", "BodyUseAPI": [], "Fixed commit": "86c6613463c06d8f5cfe05b5012ec340b08f9135", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-01-24T03:01:51Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.socialportal.socialportal.repositories.CollectiveMemberRepository.getCollectiveMemberByUserAndGroup(com.socialportal.socialportal.models.User,com.socialportal.socialportal.models.Collective)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (collectiveMember == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3717/buggy-version/src.main.java.com.socialportal.socialportal.services.CollectiveManager.java", "BodyUseAPI": [], "Fixed commit": "b2ee430b00dc4b71f2e93d6f2e305d870aa5303e", "Url": "https://api.github.com/repos/Jetoxixoxorix/hatebook", "Date": "2018-05-11T09:29:16Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["camera.CameraChestDetector.checkForChests(org.opencv.core.Mat,camera.getNumOfChestsInRoom(),org.opencv.core.Mat)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((mats.size()) > 0) { chestFound = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5233/buggy-version/src.main.java.handlers.CameraHandler.java", "BodyUseAPI": [], "Fixed commit": "5ce6a6f3b102b1ff3c218eccdc40ae49da5f9056", "Url": "https://api.github.com/repos/egedebruin/Trackscape", "Date": "2018-06-11T11:48:06Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(query.getConnections().isEmpty())) { rawQuery.add(generateRawClause(dragger.bl.RationalQueryGenerator.WHERE, dragger.bl.RationalQueryGenerator.AND, query.getConnections(), this::rawConnection)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1042/buggy-version/src.main.java.dragger.bl.RationalQueryGenerator.java", "BodyUseAPI": ["dragger.bl.RationalQueryGenerator.generateRawClause(java.lang.String,java.lang.String,query.getConnections(),this::rawConnection)", "dragger.entities.Query.getConnections()", "java.util.StringJoiner.add(java.lang.String)"], "Fixed commit": "4f879d90de2dc1578ee8d4978487eb22919f9d35", "Url": "https://api.github.com/repos/OfekRv/DraggerReports", "Date": "2018-09-26T15:11:06Z"},
{"Line": "=>1193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!quiz) visualizerWindow.updateVariable(\"j\", (i - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/672/buggy-version/src.main.Java.Views.VisualizerPanel.java", "BodyUseAPI": [], "Fixed commit": "53e621c43674c98d5e598a1454c5bfd280f5ae7c", "Url": "https://api.github.com/repos/AaronHuemmecke/Sorting-Algorithm-Visualizer", "Date": "2018-07-02T00:19:19Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shouldRegisterAban) { results.registerAbandonment(firstInLine, currentTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5382/buggy-version/src.ed_simulation.ED_Simulation_ReturnToServer.java", "BodyUseAPI": [], "Fixed commit": "d3918deecbae46606756365f596b84eb62652283", "Url": "https://api.github.com/repos/LivePersonInc/ED_Simulation", "Date": "2018-09-17T08:03:44Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (t > ignoreUpToTime) { results.registerExchange((t - (serviceCompletedPatient.getLastArrivalTime()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5382/buggy-version/src.ed_simulation.ED_Simulation_ReturnToServer.java", "BodyUseAPI": ["ed_simulation.TimeDependentSimResults.registerExchange((t - (serviceCompletedPatient.getLastArrivalTime())))"], "Fixed commit": "d3918deecbae46606756365f596b84eb62652283", "Url": "https://api.github.com/repos/LivePersonInc/ED_Simulation", "Date": "2018-09-17T08:03:44Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((psw.length()) > 5) { if (psw.equals(psw2)) { com.cyut.toolbox.toolbox.Backgorundwork backgorundwork = new com.cyut.toolbox.toolbox.Backgorundwork(this); backgorundwork.execute(type, u_email, psw, psw2); }else { view_err.setText(\"\u6aa2\u67e5\u4e00\u4e0b\u5169\u6b21\u8f38\u5165\u7684\u5bc6\u78bc\u9700\u76f8\u540c\u5537\"); } }else { view_err.setText(\"\u5bc6\u78bc\u9700\u8981\u5927\u65bc(\u542b)6\u500b\u5b57\u5537\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7279/buggy-version/app.src.main.java.com.cyut.toolbox.toolbox.changepassword.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "com.cyut.toolbox.toolbox.Backgorundwork.execute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "ea004a4d55f89e68f359edbdd41bf21cffba5d7d", "Url": "https://api.github.com/repos/haru3613/ToolBoxMySQL", "Date": "2018-09-27T14:53:52Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(melody.isEmpty())) { java.util.List<java.util.Map.Entry<PentagramPosition, java.lang.String>> entryList = new java.util.ArrayList<java.util.Map.Entry<PentagramPosition, java.lang.String>>(melody.entrySet()); java.util.Map.Entry<PentagramPosition, java.lang.String> lastEntry = entryList.get(((entryList.size()) - 1)); melody.remove(lastEntry.getKey()); fillMelodyField(); pentagramTable.setValueAt(\"\", lastEntry.getKey().getRow(), lastEntry.getKey().getColumn()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7247/buggy-version/desafios.3.MusicComposer.src.App.java", "BodyUseAPI": ["java.util.Map<PentagramPosition, java.lang.String>.remove(lastEntry.getKey())", "java.util.Map<PentagramPosition, java.lang.String>.entrySet()"], "Fixed commit": "be082baed5edd4bdbbc3a6e5d859dbafbbe9a3e1", "Url": "https://api.github.com/repos/onofricamila/LaboratorioDeSoftware", "Date": "2018-09-17T16:37:47Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getIntent()) == null) { startActivity(new android.content.Intent(this, xyz.imxqd.clickclick.ui.NaviActivity.class)); finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9703/buggy-version/app.src.main.java.xyz.imxqd.clickclick.ui.NoDisplayActivity.java", "BodyUseAPI": [], "Fixed commit": "d02dc274c0b614221d9a3e910138dcbd4eef74f3", "Url": "https://api.github.com/repos/hfutxqd/ClickClick", "Date": "2018-06-04T13:11:09Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (array.getString(i).contains(\"https\")) { java.lang.String url = array.getString(i).replace(\"https\", \"http\"); view.setImageUrl(url); flipperLayout.addFlipperView(view); }else { view.setImageUrl(array.getString(i)); flipperLayout.addFlipperView(view); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2806/buggy-version/app.src.main.java.com.aiprous.medicobox.fragment.HomeFragment.java", "BodyUseAPI": ["org.json.JSONArray.getString(int)", "org.json.JSONArray.getString(int)", "com.aiprous.medicobox.sliderimages.FlipperView.setImageUrl(array.getString(i))", "array.getString(i).replace(java.lang.String,java.lang.String)"], "Fixed commit": "84a619f8a1fa9a1768f21470acc43e28cc8932f1", "Url": "https://api.github.com/repos/punammaitri/MedicoboxAppUser", "Date": "2018-10-30T13:07:55Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((command.getSponsorId()) != null) { e.setSponsor(new com.cognizant.ri.spm.sponsor.Sponsor()); e.getSponsor().setId(command.getSponsorId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/104/buggy-version/participant-management.src.main.java.com.cognizant.ri.spm.participant.enroll.EnrollParticipantInPlanHandler.java", "BodyUseAPI": ["e.getSponsor().setId(command.getSponsorId())", "com.cognizant.ri.spm.participant.enroll.EnrollParticipantInPlanCommand.getSponsorId()"], "Fixed commit": "4e990201820ee020c4604e9b23f6c56d2fe1e580", "Url": "https://api.github.com/repos/DROY271/ipm-ms-ref", "Date": "2018-04-29T17:57:02Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Globals.weight) == 0) _kg.setText(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9201/buggy-version/App.app.src.main.java.co.licorne.licorne.dap_driveafterparty.PersdataActivity.java", "BodyUseAPI": [], "Fixed commit": "dbfeacd25418ab02df5a7fe2c9a769a5b17e7224", "Url": "https://api.github.com/repos/UnicornDeluxe/DAP", "Date": "2018-10-25T15:29:41Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (editable.toString().equals(\"\")) { Globals.weight = 0; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9201/buggy-version/App.app.src.main.java.co.licorne.licorne.dap_driveafterparty.PersdataActivity.java", "BodyUseAPI": [], "Fixed commit": "dbfeacd25418ab02df5a7fe2c9a769a5b17e7224", "Url": "https://api.github.com/repos/UnicornDeluxe/DAP", "Date": "2018-10-25T15:29:41Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (editable.toString().equals(\"\")) { Globals.height = 0; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9201/buggy-version/App.app.src.main.java.co.licorne.licorne.dap_driveafterparty.PersdataActivity.java", "BodyUseAPI": [], "Fixed commit": "dbfeacd25418ab02df5a7fe2c9a769a5b17e7224", "Url": "https://api.github.com/repos/UnicornDeluxe/DAP", "Date": "2018-10-25T15:29:41Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Globals.height) == 0) _cm.setText(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9201/buggy-version/App.app.src.main.java.co.licorne.licorne.dap_driveafterparty.PersdataActivity.java", "BodyUseAPI": [], "Fixed commit": "dbfeacd25418ab02df5a7fe2c9a769a5b17e7224", "Url": "https://api.github.com/repos/UnicornDeluxe/DAP", "Date": "2018-10-25T15:29:41Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["details.getRequest().getCookies()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (cookies != null) { for (javax.servlet.http.Cookie cookie : java.util.Arrays.asList(cookies)) { if (COOKIE_NAME.equals(cookie.getName())) { apiKey = cookie.getValue(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6219/buggy-version/src.main.java.org.venice.beachfront.bfapi.auth.ApiKeyAuthProvider.java", "BodyUseAPI": ["java.util.Arrays.asList(javax.servlet.http.Cookie[])"], "Fixed commit": "73ce3d020db204603a329b82b7184f3eab531be6", "Url": "https://api.github.com/repos/venicegeo/bf-api", "Date": "2018-03-12T15:25:15Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((family.equals(\"null\")) == false) { updateProfileArrays(family); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5447/buggy-version/app.src.main.java.com.example.mikhal.wiseatapp.SearchIngredients.java", "BodyUseAPI": ["com.example.mikhal.wiseatapp.SearchIngredients.updateProfileArrays(java.lang.String)"], "Fixed commit": "f713defad16a417e91aaea63f753ad1c529758d0", "Url": "https://api.github.com/repos/mikhalberns/wisEatNew", "Date": "2018-05-12T12:43:31Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pageCheck == false) { pageCheck = true; javafx.scene.layout.AnchorPane pane = javafx.fxml.FXMLLoader.load(getClass().getResource(\"/design/Main_page_edit_mode.fxml\")); rootPane.getChildren().setAll(pane); }else { pageCheck = false; javafx.scene.layout.AnchorPane pane = javafx.fxml.FXMLLoader.load(getClass().getResource(\"/design/Main_page_2.4.fxml\")); rootPane.getChildren().setAll(pane); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8039/buggy-version/src.main.java.design.FXMLDocumentController.java", "BodyUseAPI": [], "Fixed commit": "6f84012744680935940cb87990b1b9934f88265d", "Url": "https://api.github.com/repos/Projekt-BV/Bildverwaltung", "Date": "2018-08-06T11:16:53Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hu.bme.mit.battle_city.GameLogic.PathFinder.PathFindToTarget(hu.bme.mit.battle_city.GameLogic.GridLocY,hu.bme.mit.battle_city.GameLogic.GridLocX,int,int,gameworld.MapGridArray)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dir2go == (Heading)) { if (CheckForwardCollision(gameworld)) { MoveForward(); } }else if (dir2go != 4) { Rotate(1); }else if (dir2go == 4) GetDamaged();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3196/buggy-version/src.hu.bme.mit.battle_city.GameLogic.AiTank.java", "BodyUseAPI": [], "Fixed commit": "313aa2c38ac7fd09a9395ce5bd3f07cd6b07ab9b", "Url": "https://api.github.com/repos/mpetike/beagyszoft_hf", "Date": "2018-05-20T15:18:03Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selfpos_y == targetpos_y) && (selfpos_x == targetpos_x)) return 4;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3196/buggy-version/src.hu.bme.mit.battle_city.GameLogic.PathFinder.java", "BodyUseAPI": [], "Fixed commit": "313aa2c38ac7fd09a9395ce5bd3f07cd6b07ab9b", "Url": "https://api.github.com/repos/mpetike/beagyszoft_hf", "Date": "2018-05-20T15:18:03Z"},
{"Line": "=>2767", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, picocli.CommandLine.Model.CommandSpec>.remove(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (helpMixin != null) { options.removeAll(helpMixin.options); for (picocli.CommandLine.Model.OptionSpec option : helpMixin.options()) { for (java.lang.String name : option.names) { optionsByNameMap.remove(name); if (((name.length()) == 2) && (name.startsWith(\"-\"))) { posixOptionsByKeyMap.remove(name.charAt(1)); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7692/buggy-version/src.main.java.picocli.CommandLine.java", "BodyUseAPI": ["picocli.CommandLine.Model.CommandSpec.options()", "java.util.List<picocli.CommandLine.Model.OptionSpec>.removeAll(java.util.List<picocli.CommandLine.Model.OptionSpec>)"], "Fixed commit": "1afa75745d12db58b68a3cec99e0d9eaaa585bad", "Url": "https://api.github.com/repos/remkop/picocli", "Date": "2018-03-11T13:26:37Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((v - intRating) >= 0.8) { intRating++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5437/buggy-version/app.src.main.java.antitelegram.devenirchef.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e1388f85048cc334e1748868d145b370f8acd25a", "Url": "https://api.github.com/repos/NoSurprises/DevenirChef", "Date": "2018-02-26T18:00:05Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (term instanceof it.unibz.inf.ontop.spec.mapping.serializer.BNode) { sb.append(((it.unibz.inf.ontop.spec.mapping.serializer.BNode) (term)).getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/669/buggy-version/mapping.sql.core.src.main.java.it.unibz.inf.ontop.spec.mapping.serializer.TargetQueryRenderer.java", "BodyUseAPI": [], "Fixed commit": "6235c576196c82186a6340f86b78c14096fcf1d5", "Url": "https://api.github.com/repos/fanavarro/ontop", "Date": "2018-02-13T10:47:02Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (signed) { b = ~b; bits[0] = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2575/buggy-version/src.main.java.NStagIMG.java", "BodyUseAPI": [], "Fixed commit": "8f2b383f3de4eb67928a5c698293367a607da76d", "Url": "https://api.github.com/repos/nanoandrew4/nsteg", "Date": "2018-06-05T05:41:03Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (start != null) { this.startTime = start.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3580/buggy-version/src.main.java.seedu.address.storage.XmlAdaptedEvent.java", "BodyUseAPI": [], "Fixed commit": "260d1902aa97262cdfc379a2b8ca5a682b2a83ce", "Url": "https://api.github.com/repos/CS2103-AY1819S1-W10-3/main", "Date": "2018-09-30T10:41:27Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (countPads.find()) { int dCode = shape.getdCode(); int count = 0; if (dCode == (java.lang.Integer.parseInt(countPads.group(1)))) { line = scan.next(); while (line.contains(\"D03\")) { count++; line = scan.next(); } shape.setNumbOfApertures(count); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5653/buggy-version/src.controller.Aperture.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.util.regex.Matcher.group(int)"], "Fixed commit": "740e129e82feb55cbb318df1d7d62768e9e28d0c", "Url": "https://api.github.com/repos/DuelPasta/Arte-Five.O", "Date": "2018-05-04T14:03:39Z"},
{"Line": "=>598", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.priority) == null) { this.priority = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3504/buggy-version/QSystem.src.ru.apertum.qsystem.common.model.QCustomer.java", "BodyUseAPI": [], "Fixed commit": "78f8e141b4054649dc7f5a78a50835febcadd1ff", "Url": "https://api.github.com/repos/ChrisDMac/sbc-qsystem", "Date": "2018-04-16T19:25:31Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((realService) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6686/buggy-version/FairyPlugin.src.main.java.com.limpoxe.fairy.core.bridge.PluginShadowService.java", "BodyUseAPI": [], "Fixed commit": "8a82e4403249ed5a64365c3651f1445b7cdbbd7d", "Url": "https://api.github.com/repos/limpoxe/Android-Plugin-Framework", "Date": "2018-08-12T16:47:04Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((a.getFile()) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/502/buggy-version/src.main.java.org.deegree.maven.utils.ZipUtils.java", "BodyUseAPI": [], "Fixed commit": "bcaeca2d5aebca711e7ae1872ceb5db912919d3d", "Url": "https://api.github.com/repos/deegree/deegree-maven-plugin", "Date": "2018-09-12T20:23:31Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((a.getFile()) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/502/buggy-version/src.main.java.org.deegree.maven.WorkspaceInplaceMojo.java", "BodyUseAPI": [], "Fixed commit": "bcaeca2d5aebca711e7ae1872ceb5db912919d3d", "Url": "https://api.github.com/repos/deegree/deegree-maven-plugin", "Date": "2018-09-12T20:23:31Z"},
{"Line": "=>461", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (exception instanceof com.android.internal.telephony.CommandException) { com.android.internal.telephony.CommandException.Error err = ((com.android.internal.telephony.CommandException) (exception)).getCommandError(); if (err == (CommandException.Error.PASSWORD_INCORRECT)) { android.widget.Toast.makeText(getContext(), getPinPasswordErrorMessage(attemptsRemaining), Toast.LENGTH_LONG).show(); }else { if (mToState) { android.widget.Toast.makeText(getContext(), mRes.getString(R.string.sim_pin_enable_failed), Toast.LENGTH_LONG).show(); }else { android.widget.Toast.makeText(getContext(), mRes.getString(R.string.sim_pin_disable_failed), Toast.LENGTH_LONG).show(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2288/buggy-version/src.com.android.settings.IccLockSettings.java", "BodyUseAPI": [], "Fixed commit": "f29392303adece03c4dd573a1ff6d5b33ff92eda", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-packages-apps-Settings", "Date": "2018-10-15T17:08:22Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (start < end) { listResult = listResult.subList(start, end); }else { listResult = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2704/buggy-version/Common.src.main.java.org.voovan.tools.CollectionSearch.java", "BodyUseAPI": ["java.util.List.subList(int,int)"], "Fixed commit": "339737b66e8fa622a519c98ec796583c052ec9c7", "Url": "https://api.github.com/repos/helyho/Voovan", "Date": "2018-02-17T04:51:51Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((col1.size()) == 0) && ((col2.size()) == 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2052/buggy-version/src.main.java.com.purbon.search.fair.utils.DataFrame.java", "BodyUseAPI": [], "Fixed commit": "ccc0b1867f6f9ebb1be5b1bd8789a8492072227a", "Url": "https://api.github.com/repos/tsuehr/fairsearch-elasticsearch-plugin", "Date": "2018-05-17T12:44:26Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.opencil.mapper.RBACUserMapper.getUserByUserId(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (userDetails == null) { throw new org.springframework.security.core.userdetails.UsernameNotFoundException((username + \" was not found.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7601/buggy-version/src.main.java.cn.opencil.service.implementation.MyRBACUserService.java", "BodyUseAPI": [], "Fixed commit": "845f32d807a1a0b75de59c397c8c37199819a07b", "Url": "https://api.github.com/repos/LiuinStein/CILManagement-Server", "Date": "2018-03-23T08:21:05Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((baseUrl != null) && (!(baseUrl.endsWith(\"/\")))) { baseUrl += \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9166/buggy-version/src.main.java.com.atex.gong.plugins.strategies.FixedCSSProcessor.java", "BodyUseAPI": [], "Fixed commit": "b9c044dbd7f52a9c8021802f8a9eade632a5a723", "Url": "https://api.github.com/repos/atex-community-plugins/webresource-compactor", "Date": "2018-01-10T10:58:42Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.kafka.connect.data.Struct.get(org.apache.kafka.connect.data.Field)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (val == null) { if (!(f.schema().isOptional())) { throw new org.apache.kafka.connect.errors.DataException((\"Struct message missing required field \" + (f.name()))); }else { continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7505/buggy-version/kafka-connector.src.main.java.com.google.pubsub.kafka.sink.CloudPubSubSinkTask.java", "BodyUseAPI": [], "Fixed commit": "3133f913c7d8cdd4a268f1d288ad666fd62d0271", "Url": "https://api.github.com/repos/kamalaboulhosn/pubsub", "Date": "2018-06-05T23:29:30Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(o instanceof AST.ArrayType)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2717/buggy-version/src.AST.ArrayType.java", "BodyUseAPI": [], "Fixed commit": "adafedbc35ea72dfbd3cdf7887c31129212864a4", "Url": "https://api.github.com/repos/New-bottle/Compiler", "Date": "2018-05-03T13:59:52Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((checkIfCorrect) == 2) { correct = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1732/buggy-version/app.src.main.java.com.example.android.quiz.CheckboxActivity.java", "BodyUseAPI": [], "Fixed commit": "de0aae3795e971826765cb9c5f6341d33a1868c2", "Url": "https://api.github.com/repos/GretaGri/Android-basics-quiz-app", "Date": "2018-01-23T07:54:59Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getBackground()) == null) { this.setBackground(new android.graphics.drawable.BitmapDrawable(bitmap)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4585/buggy-version/edit.src.main.java.vip.frendy.edit.warp2.CanvasView.java", "BodyUseAPI": [], "Fixed commit": "954087bd3dd034850d48beed1ac06e453dfa6abf", "Url": "https://api.github.com/repos/frendyxzc/KCamera", "Date": "2018-08-09T01:56:23Z"},
{"Line": "=>564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((handler instanceof oscar.oscarLab.ca.all.parsers.PATHL7Handler) && (\"\".equals(((oscar.oscarLab.ca.all.parsers.PATHL7Handler) (handler)).getOBXSubId(j, k)))) { com.lowagie.text.pdf.PdfPTable infoTable = new com.lowagie.text.pdf.PdfPTable(2); infoTable.setWidthPercentage(100); cell.setPhrase(new com.lowagie.text.Phrase(handler.getOBXName(j, k).replaceAll(\"<br\\\\s*/*>\", \" \"), lineFont)); infoTable.addCell(cell); cell.setPhrase(new com.lowagie.text.Phrase(handler.getOBXResult(j, k).replaceAll(\"<br\\\\s*/*>\", \" \"), lineFont)); infoTable.addCell(cell); table.addCell(infoTable); }else { java.lang.String data = handler.getOBXResult(j, k); if (\"\".equals(handler.getOBXResult(j, k))) { data = \"\\n\"; } int colspan = cell.getColspan(); if ((j == 0) && (k == 0)) { cell.setColspan((colspan - 1)); cell.setPhrase(new com.lowagie.text.Phrase(data.replaceAll(\"<br\\\\s*/*>\", \"\\n\"), lineFont)); table.addCell(cell); cell.setColspan(1); int ha = cell.getHorizontalAlignment(); cell.setHorizontalAlignment(PdfPCell.ALIGN_RIGHT); cell.setPhrase(new com.lowagie.text.Phrase(handler.getTimeStamp(j, k), lineFont)); table.addCell(cell); cell.setHorizontalAlignment(ha); }else { cell.setPhrase(new com.lowagie.text.Phrase(data.replaceAll(\"<br\\\\s*/*>\", \"\\n\"), lineFont)); table.addCell(cell); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8544/buggy-version/src.main.java.oscar.oscarLab.ca.all.pageUtil.LabPDFCreator.java", "BodyUseAPI": ["oscar.oscarLab.ca.all.parsers.MessageHandler.getOBXResult(int,int)", "oscar.oscarLab.ca.all.parsers.MessageHandler.getOBXResult(int,int)", "handler.getOBXResult(j, k).replaceAll(java.lang.String,java.lang.String)", "oscar.oscarLab.ca.all.parsers.MessageHandler.getOBXName(int,int)", "com.lowagie.text.pdf.PdfPCell.setPhrase(com.lowagie.text.Phrase)", "java.lang.String.equals(handler.getOBXResult(j, k))", "com.lowagie.text.pdf.PdfPCell.setPhrase(com.lowagie.text.Phrase)", "handler.getOBXName(j, k).replaceAll(java.lang.String,java.lang.String)", "oscar.oscarLab.ca.all.parsers.MessageHandler.getOBXResult(int,int)", "oscar.oscarLab.ca.all.parsers.MessageHandler.getTimeStamp(int,int)", "com.lowagie.text.pdf.PdfPCell.setPhrase(com.lowagie.text.Phrase)"], "Fixed commit": "6d5d31c32ffc5b15cc0d65e473f92a52d3f10f21", "Url": "https://api.github.com/repos/scoophealth/oscar", "Date": "2018-07-11T16:59:32Z"},
{"Line": "=>777", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((predicates.size()) == 1) { if ((predicates.get(0).getToken().equalsIgnoreCase(\"and\")) || (predicates.get(0).getToken().equalsIgnoreCase(\"or\"))) { andOr = predicates.get(0).getToken(); io.rcktapp.rql.Predicate pred = predicates.get(0); predicates = pred.getTerms(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5933/buggy-version/src.main.java.io.rcktapp.api.service.ext.DynamoDbHandler.java", "BodyUseAPI": ["predicates.get(0).getToken().equalsIgnoreCase(java.lang.String)", "predicates.get(0).getToken()", "java.util.List<io.rcktapp.rql.Predicate>.get(int)", "java.util.List<io.rcktapp.rql.Predicate>.get(int)", "java.util.List<io.rcktapp.rql.Predicate>.get(int)", "java.util.List<io.rcktapp.rql.Predicate>.get(int)", "predicates.get(0).getToken()", "predicates.get(0).getToken().equalsIgnoreCase(java.lang.String)", "predicates.get(0).getToken()"], "Fixed commit": "5d220a7561eba3dc33f7c3794b5f5e072ae00b3a", "Url": "https://api.github.com/repos/RocketPartners/rckt_snooze", "Date": "2018-10-31T19:11:38Z"},
{"Line": "=>952", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.beehyv.nmsreporting.controller.UserService.getCurrentUser()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentUser.getAccessLevel().equals(AccessLevel.NATIONAL.getAccessLevel())) { kList.add(new com.beehyv.nmsreporting.controller.Report(ReportType.messageMatrix.getReportName(), ReportType.messageMatrix.getReportType(), \"images/drop-down-2.png\", ReportType.messageMatrix.getServiceType())); kList.add(new com.beehyv.nmsreporting.controller.Report(ReportType.listeningMatrix.getReportName(), ReportType.listeningMatrix.getReportType(), \"images/drop-down-2.png\", ReportType.listeningMatrix.getServiceType())); kList.add(new com.beehyv.nmsreporting.controller.Report(ReportType.kilkariThematicContent.getReportName(), ReportType.kilkariThematicContent.getReportType(), \"images/drop-down-2.png\", ReportType.kilkariThematicContent.getServiceType())); kList.add(new com.beehyv.nmsreporting.controller.Report(ReportType.kilkariRepeatListenerMonthWise.getReportName(), ReportType.kilkariRepeatListenerMonthWise.getReportType(), \"images/drop-down-2.png\", ReportType.kilkariRepeatListenerMonthWise.getServiceType())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9095/buggy-version/NMSReportingSuite.src.main.java.com.beehyv.nmsreporting.controller.UserController.java", "BodyUseAPI": [], "Fixed commit": "ba2e953fb67e89d1f5e0d52d453946f597edbfbb", "Url": "https://api.github.com/repos/motech-implementations/nms-mis", "Date": "2017-12-27T08:17:09Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dk.magenta.datafordeler.core.user.TokenConfigProperties.getTimeSkewInSeconds()", "java.lang.System.currentTimeMillis()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (issueInstant.isAfter((reference + (skewInSec * 1000)))) { throw new dk.magenta.datafordeler.core.exception.InvalidTokenException(\"Token is issued in the future\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6748/buggy-version/src.main.java.dk.magenta.datafordeler.core.user.TokenVerifier.java", "BodyUseAPI": [], "Fixed commit": "246ffc9f739005976e5d79a68dc9533976492be1", "Url": "https://api.github.com/repos/magenta-aps/datafordeler-core", "Date": "2018-01-12T10:23:47Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((startI) & (over)) { playerStack.get(0).toLeft(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7357/buggy-version/src.mapanel.Mapcanvas.java", "BodyUseAPI": [], "Fixed commit": "5904eff04bf91935ce0bb5c89ba903aa8f9654ae", "Url": "https://api.github.com/repos/Moreno97/java-pang2d", "Date": "2018-06-05T16:05:03Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((startI) & (over)) { playerStack.get(0).toRight(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7357/buggy-version/src.mapanel.Mapcanvas.java", "BodyUseAPI": [], "Fixed commit": "5904eff04bf91935ce0bb5c89ba903aa8f9654ae", "Url": "https://api.github.com/repos/Moreno97/java-pang2d", "Date": "2018-06-05T16:05:03Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ListViewAdapter.storeList.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((com.zoho.crm.library.crud.ZCRMRecord) (record.getFieldValue(\"Contact\"))) != null) { contact.setText(((com.zoho.crm.library.crud.ZCRMRecord) (record.getFieldValue(\"Contact\"))).getLookupLabel()); }else { contact.setText(\"---\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1875/buggy-version/app.src.main.java.com.zoho.crm_field_buddy.listActivity.CompletedAppointmentsListActivity.java", "BodyUseAPI": ["com.zoho.crm.library.crud.ZCRMRecord.getFieldValue(java.lang.String)", "((com.zoho.crm.library.crud.ZCRMRecord) (record.getFieldValue(\"Contact\"))).getLookupLabel()", "android.widget.TextView.setText(((com.zoho.crm.library.crud.ZCRMRecord) (record.getFieldValue(\"Contact\"))).getLookupLabel())"], "Fixed commit": "621a8d44144e65fc9a1013323d1fe24a19fb012b", "Url": "https://api.github.com/repos/zoho/Zoho-CRM-Field-Buddy", "Date": "2018-07-12T09:23:24Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (url.contains(\"tel:\")) { callBack.backOnclick(url); return true; }else if (url.contains(\"intent://activity\")) { callBack.backOnclick(url); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1884/buggy-version/SillyChildGuide.Cklibrary.src.main.java.com.common.cklibrary.utils.myview.WebViewLayout1.java", "BodyUseAPI": ["com.common.cklibrary.utils.myview.WebViewLayout1.WebViewCallBack.backOnclick(java.lang.String)", "java.lang.String.contains(java.lang.String)", "com.common.cklibrary.utils.myview.WebViewLayout1.WebViewCallBack.backOnclick(java.lang.String)"], "Fixed commit": "5ed48abccc0e1a2c38c358ef017e80c9aa3edec0", "Url": "https://api.github.com/repos/921668753/SillyChildGuide-Android", "Date": "2018-09-13T12:52:05Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((sname.length()) <= 2) { names.add(NameObfType.SHORT_LETTERS); none = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5707/buggy-version/src.main.java.me.grax.jbytemod.analysis.obfuscation.ObfuscationAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "9fe18480976334f53f350d81fa03067528efb0eb", "Url": "https://api.github.com/repos/GraxCode/JByteMod-Beta", "Date": "2018-01-19T20:23:40Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((robot.driveBase) instanceof trclib.TrcDriveBase3D) { robot.driveBase.drive3D_Cartesian(xDrivePower, yDrivePower, turnPower); }else { robot.driveBase.drive2D_Arcade(yDrivePower, turnPower); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/755/buggy-version/src.common.CmdTimedDrive.java", "BodyUseAPI": ["robot.driveBase.drive3D_Cartesian(double,double,double)", "robot.driveBase.drive2D_Arcade(double,double)"], "Fixed commit": "24e84fb736345444e8f4027df8d31766f065c472", "Url": "https://api.github.com/repos/coolioasjulio/Frc2018FirstPowerUp", "Date": "2018-08-17T23:30:49Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.timetable.kpi.kpishcedule.data.DataHolder.getPreviousGroupMenuItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (prevGroupMenuItem == item) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8554/buggy-version/app.src.main.java.com.timetable.kpi.kpishcedule.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7f86171c8a941274e8a855b16ac60b9fa9cb6339", "Url": "https://api.github.com/repos/dzeko14/scheduler", "Date": "2018-03-12T17:17:34Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vertex.getName()) == null) vertex.setName(getLabel(decomposition));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4294/buggy-version/source.org.yawlfoundation.yawl.editor.ui.properties.CellProperties.java", "BodyUseAPI": ["org.yawlfoundation.yawl.editor.ui.properties.YAWLVertex.setName(java.lang.String)"], "Fixed commit": "becb94d194e86d7be622f4ab49d789f26e0ede61", "Url": "https://api.github.com/repos/yawlfoundation/editor", "Date": "2018-04-06T07:44:57Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ir.hosseinmoghadam.taskmanager.adapters.TaskAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((task.getCompleted()) != null) viewHolder.completed.setChecked(task.getCompleted());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6342/buggy-version/app.src.main.java.ir.hosseinmoghadam.taskmanager.adapters.TaskAdapter.java", "BodyUseAPI": ["ir.hosseinmoghadam.taskmanager.models.Task.getCompleted()", "android.widget.ToggleButton.setChecked(task.getCompleted())"], "Fixed commit": "2b8fcf73c14891b281c24c3e020e721445c0a398", "Url": "https://api.github.com/repos/hosseinmoghaddam/TaskManager", "Date": "2018-04-12T06:11:19Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (forceClose) { outerResponseObserver.onError(t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9760/buggy-version/gax.src.main.java.com.google.api.gax.rpc.ReframingResponseObserver.java", "BodyUseAPI": [], "Fixed commit": "85d62351b1db81670d2bdcb77b5b423b69443dc7", "Url": "https://api.github.com/repos/googleapis/gax-java", "Date": "2018-01-08T15:49:05Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (closed) { action = com.google.api.gax.rpc.ReframingResponseObserver.DeliveryAction.NOOP; }else if ((!(deferError)) && ((error) != null)) { closed = true; closeError = this.error; action = com.google.api.gax.rpc.ReframingResponseObserver.DeliveryAction.CLOSE; }else if (((numPending) > 0) && (reframer.hasFullFrame())) { result = reframer.pop(); if (!(autoFlowControl)) { (numPending)--; } action = com.google.api.gax.rpc.ReframingResponseObserver.DeliveryAction.DELIVER; }else if ((((numPending) > 0) && (!(reframer.hasFullFrame()))) && (!(closeOnDone))) { if (!(awaitingInner)) { action = com.google.api.gax.rpc.ReframingResponseObserver.DeliveryAction.REQUEST_MORE; awaitingInner = true; }else { action = com.google.api.gax.rpc.ReframingResponseObserver.DeliveryAction.AWAIT_MORE_DATA; } }else if ((!(reframer.hasFullFrame())) && (closeOnDone)) { if (((error) == null) && (reframer.hasPartialFrame())) { error = new com.google.api.gax.rpc.IncompleteStreamException(); } closed = true; closeError = error; action = com.google.api.gax.rpc.ReframingResponseObserver.DeliveryAction.CLOSE; }else if ((numPending) == 0) { action = com.google.api.gax.rpc.ReframingResponseObserver.DeliveryAction.FULFILLED; }else { throw new java.lang.IllegalStateException(\"ReframingResponseObserver is in an unexpected state\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9760/buggy-version/gax.src.main.java.com.google.api.gax.rpc.ReframingResponseObserver.java", "BodyUseAPI": [], "Fixed commit": "85d62351b1db81670d2bdcb77b5b423b69443dc7", "Url": "https://api.github.com/repos/googleapis/gax-java", "Date": "2018-01-08T15:49:05Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSupportFragmentManager().findFragmentById(R.id.fl_home_activity_main)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(fragment instanceof appricottsoftware.clarity.fragments.HomeFragment)) { returnToHomeFragment(); }else { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3897/buggy-version/app.src.main.java.appricottsoftware.clarity.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "01a8cacd3b38cdaea3b96e3e5393ebbf0fb87401", "Url": "https://api.github.com/repos/AppricottSoftware/Clarity", "Date": "2018-03-02T23:27:09Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSupportFragmentManager().findFragmentById(R.id.fl_home_activity_main)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (fragment != null) { if (drawerLayout.isDrawerOpen(GravityCompat.START)) { drawerLayout.closeDrawers(); }else if ((suplPanel.getPanelState()) == (SlidingUpPanelLayout.PanelState.EXPANDED)) { suplPanel.setPanelState(SlidingUpPanelLayout.PanelState.COLLAPSED); appricottsoftware.clarity.HomeActivity.playerFragment.closePanel(); }else if (!(fragment instanceof appricottsoftware.clarity.fragments.HomeFragment)) { returnToHomeFragment(); }else { finish(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3897/buggy-version/app.src.main.java.appricottsoftware.clarity.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "01a8cacd3b38cdaea3b96e3e5393ebbf0fb87401", "Url": "https://api.github.com/repos/AppricottSoftware/Clarity", "Date": "2018-03-02T23:27:09Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["_4_Graphs._4_4_ShortestPaths.DirectedEdge.to()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(marked[w])) { edgeTo[w] = e; dfs(G, w); }else if (onStack[w]) { cycle = new _1_Fundamentals._1_3_BagQueuesAndStacks.Stack(); _4_Graphs._4_4_ShortestPaths.DirectedEdge f; for (f = e; (f.from()) != w; f = edgeTo[f.from()]) cycle.push(f); cycle.push(f); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9783/buggy-version/src._4_Graphs._4_2_DirectedGraphs.EdgeWeightedDirectedCycle.java", "BodyUseAPI": ["_4_Graphs._4_2_DirectedGraphs.EdgeWeightedDirectedCycle.dfs(_4_Graphs._4_4_ShortestPaths.EdgeWeightedDigraph,int)"], "Fixed commit": "6faf6975cadc6d9185f9c3c5494ff33c19fe6c68", "Url": "https://api.github.com/repos/PATHoliu-ephemerid/AlgorithmsExercise", "Date": "2018-01-30T16:07:25Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.stanford.nlp.util.CoreMap.get(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((offset == 0) || (offset == ((origText.length()) - 1))) { skipCharacter = true; }else { int prevCodePoint = origText.codePointAt((offset - cpCharCount)); int nextCodePoint = origText.codePointAt((offset + cpCharCount)); if ((!(prevCodePoint == '\\n')) && (!(nextCodePoint == '\\n'))) skipCharacter = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1088/buggy-version/src.edu.stanford.nlp.pipeline.ChineseSegmenterAnnotator.java", "BodyUseAPI": ["java.lang.String.codePointAt(int)", "java.lang.String.codePointAt(int)"], "Fixed commit": "938566d277686175861e43a6970736b6ced4c2e2", "Url": "https://api.github.com/repos/kno10/CoreNLP", "Date": "2018-02-22T22:41:10Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((recipeFragment) != null) && (recipeFragment.isAdded())) { getSupportFragmentManager().putFragment(outState, com.example.lpelczar.bakingapp.MainActivity.ARG_RECIPE_FRAGMENT, recipeFragment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7721/buggy-version/app.src.main.java.com.example.lpelczar.bakingapp.MainActivity.java", "BodyUseAPI": ["getSupportFragmentManager().putFragment(android.os.Bundle,java.lang.String,com.example.lpelczar.bakingapp.fragments.RecipeFragment)"], "Fixed commit": "337cb396558e7092cf38a7fb3e4af928f30f39ea", "Url": "https://api.github.com/repos/lpelczar/P13_Udacity_BakingApp", "Date": "2018-05-13T19:08:17Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getLayoutParams()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((layoutParams.height) != contentHeight) { layoutParams.height = contentHeight; child.setLayoutParams(layoutParams); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3662/buggy-version/coordinatordemo.src.main.java.com.mcxtzhang.coordinatordemo.ir.CsScrollContentBehavior.java", "BodyUseAPI": [], "Fixed commit": "0edfdfd4dafe61f0aa431845e626d0846c2a7a2f", "Url": "https://api.github.com/repos/mcxtzhang/Demos", "Date": "2018-03-28T05:59:02Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (profilesD2 != null) { entityId2 = urlToEntityId2.get(nextLine[1]); }else { entityId2 = urlToEntityId1.get(nextLine[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3536/buggy-version/jedai-core.src.main.java.org.scify.jedai.datareader.groundtruthreader.GtCSVReader.java", "BodyUseAPI": [], "Fixed commit": "1ebcd323a0f7649c5388674603bf4403f1ccc7d6", "Url": "https://api.github.com/repos/scify/JedAIToolkit", "Date": "2018-05-21T12:13:28Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((type) == (io.nuls.api.constant.EntityConstant.TX_TYPE_YELLOW_PUNISH)) || ((type) == (io.nuls.api.constant.EntityConstant.TX_TYPE_RED_PUNISH))) || ((type) == (io.nuls.api.constant.EntityConstant.TX_TYPE_COINBASE))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9867/buggy-version/src.main.java.io.nuls.api.model.Transaction.java", "BodyUseAPI": [], "Fixed commit": "fb7bf673b16b3355a3e85bac84bdffd898632973", "Url": "https://api.github.com/repos/nuls-io/API-server", "Date": "2018-09-27T09:53:29Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((responseHandler.getType()) == null) { return responseEntity; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/53/buggy-version/lib.src.main.java.ir.atitec.signalgo.HttpCore.java", "BodyUseAPI": [], "Fixed commit": "98d3fd8c771e0023297d9a86fca8edec90947974", "Url": "https://api.github.com/repos/hamedgramzi/signalGoClient", "Date": "2018-09-21T07:24:28Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (breakRequest) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3190/buggy-version/src.de.eliaspr.fgscript.FGState.java", "BodyUseAPI": [], "Fixed commit": "aef0274f098bda2ae385f455cf29621808ae095d", "Url": "https://api.github.com/repos/eliaspr/fgScript", "Date": "2018-09-29T22:22:16Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e.getKey().getName().equals(org.aliPATH.chatroom.impl.data.HomeDir.INSTALL_LOCATION_FILE_PATH)) { installLocationEntry = e.getKey(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/507/buggy-version/src.org.aliPATH.chatroom.impl.data.HomeDir.java", "BodyUseAPI": ["java.util.Map.Entry<java.util.jar.JarEntry, java.util.List<java.lang.Integer>>.getKey()"], "Fixed commit": "6ac419bc42f3c364fbf049dcb46b8eccc96ae754", "Url": "https://api.github.com/repos/Zeale/Chat-Room", "Date": "2018-04-01T21:29:08Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size) <= 0) throw new java.lang.Exception();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7039/buggy-version/Sudoku.src.sudoku.SudokuMenu.java", "BodyUseAPI": [], "Fixed commit": "d4712cf4d1c53fd137a256b211072e24bdf253b7", "Url": "https://api.github.com/repos/BratiZ/Sudoku", "Date": "2018-02-13T09:44:47Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getState()) == (TrajectoryGeneration.MotionState.DECELERATING)) { if ((isUpperDecelWheel) == (s.isConcaveUp(x))) { setState(TrajectoryGeneration.MotionState.ACCELERATING); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2595/buggy-version/src.TrajectoryGeneration.java", "BodyUseAPI": [], "Fixed commit": "a8a677895314f72f7f28ba43486b0afdf6c77e95", "Url": "https://api.github.com/repos/TheChadFinders/ChadFinder", "Date": "2018-06-08T06:55:31Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (itf) { mv.visitMethodInsn(kilim.analysis.INVOKEINTERFACE, interfaceName, methodName, fiberDesc, true); }else { mv.visitMethodInsn(kilim.analysis.INVOKEVIRTUAL, interfaceName, methodName, fiberDesc, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1865/buggy-version/src.kilim.analysis.SAMweaver.java", "BodyUseAPI": [], "Fixed commit": "f47643e85e361b2c5e750342aaf9c71f617ef47f", "Url": "https://api.github.com/repos/nqzero/kilim", "Date": "2018-09-27T09:08:16Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (target != null) { target.getImpl().setIsVisibleOnly(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5394/buggy-version/org.modeldriven.alf.src.org.modeldriven.alf.syntax.expressions.impl.SuperInvocationExpressionImpl.java", "BodyUseAPI": ["target.getImpl().setIsVisibleOnly(boolean)", "org.modeldriven.alf.syntax.expressions.impl.QualifiedName.getImpl()"], "Fixed commit": "c52ec60c3a5aac00a3437fb271fe3beaecf81a75", "Url": "https://api.github.com/repos/ModelDriven/Alf-Reference-Implementation", "Date": "2018-01-21T00:20:57Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sunbird.learner.actors.CourseEnrollmentActor.getCourseObjectFromEkStep(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((ekStepContent.get(JsonKey.CHANNEL)) != null) { org.sunbird.learner.util.CourseBatchSchedulerUtil.addHeaderProps(ekstepHeader, JsonKey.CHANNEL_ID, ((java.lang.String) (ekStepContent.get(JsonKey.CHANNEL)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7597/buggy-version/actors.core.src.main.java.org.sunbird.learner.util.CourseBatchSchedulerUtil.java", "BodyUseAPI": ["org.sunbird.learner.util.CourseBatchSchedulerUtil.addHeaderProps(java.util.Map<java.lang.String, java.lang.String>,JsonKey.CHANNEL_ID,java.lang.Object)", "java.util.Map<java.lang.String, java.lang.Object>.get(JsonKey.CHANNEL)"], "Fixed commit": "ea9a3034f0eba93a5cbfa82c6d23cd3ab684d333", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-mw", "Date": "2018-04-19T12:39:54Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (speechText == null) { return repeatedSpeech(SpokenCards.WELCOME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5500/buggy-version/src.main.java.aschworer.astrologer.alexa.handler.responder.Speaker.java", "BodyUseAPI": [], "Fixed commit": "e6cac0a3031ae3473d8438c7f4e67a265fed8cdf", "Url": "https://api.github.com/repos/aschworer/astrologer-alexa", "Date": "2018-06-14T08:04:32Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((filterResults.values) instanceof java.util.ArrayList) { mValues = ((java.util.ArrayList<com.example.navi.m4projectsetupuserstoriesandloginlogout.Models.Shelter>) (filterResults.values)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4105/buggy-version/app.src.main.java.com.example.navi.m4projectsetupuserstoriesandloginlogout.Controllers.ShelterListActivity.java", "BodyUseAPI": [], "Fixed commit": "66ef35475a9a864b870bae6e196623b9a304aafd", "Url": "https://api.github.com/repos/bolbilabs/Shelter-App", "Date": "2018-04-04T18:41:07Z"},
{"Line": "=>514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (files != null) { for (int i = 0; i < (files.length); i++) { if ((files[i].length()) == 0) { files[i].delete(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/458/buggy-version/app.src.main.java.com.androidexperiments.lipflip.utils.FileUtils.java", "BodyUseAPI": ["java.io.File.delete()", "java.io.File.length()"], "Fixed commit": "c46c17fda1330a0215ba4e8647f8676411ab7d47", "Url": "https://api.github.com/repos/UncorkedStudios/lipswap", "Date": "2018-10-23T22:27:58Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JList.getSelectedValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (selectedMessage != null) { new ui.ReadMessageWindow(selectedMessage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/188/buggy-version/ES_BomDiaAcademia.src.ui.InformationPanel.java", "BodyUseAPI": [], "Fixed commit": "9acaa232de190ce693ca11e84816cb60b5f4feed", "Url": "https://api.github.com/repos/radds-iscteiul/ES1-2018-METI-PL-85", "Date": "2018-10-20T14:19:06Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dir.angle(vel)) > ((java.lang.Math.PI) / 2)) backwards = true; else backwards = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6018/buggy-version/src.main.Car.java", "BodyUseAPI": [], "Fixed commit": "2adcf1b0ac3546c9c44e80dc1ca9aeb35bef4782", "Url": "https://api.github.com/repos/StereoBeast/Project0815", "Date": "2018-07-14T17:09:31Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.poi.ss.usermodel.Sheet.getRow(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (row != null) { for (int c = 0, cn = row.getLastCellNum(); c < cn; c++) { org.apache.poi.ss.usermodel.Cell cell = row.getCell(c, Row.MissingCellPolicy.RETURN_BLANK_AS_NULL); if (!firstCell) out.print(','); java.lang.String text = formatter.formatCellValue(cell); out.print(text); firstCell = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4576/buggy-version/src.main.java.FileUploadHandler.java", "BodyUseAPI": ["org.apache.poi.ss.usermodel.Row.getLastCellNum()", "org.apache.poi.ss.usermodel.Row.getCell(int,Row.MissingCellPolicy.RETURN_BLANK_AS_NULL)"], "Fixed commit": "861af82fc5c0026add2a8c8c319e658ceac47f39", "Url": "https://api.github.com/repos/Subhojeet21/convertExcel2csv", "Date": "2018-09-18T19:39:20Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["qp.operators.Operator.getOpType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (optype == (OpType.PROJECT)) { java.lang.System.out.print(\"Project(\"); qp.operators.Debug.PPrint(((qp.operators.Project) (node)).getBase()); java.lang.System.out.print(\")\"); }else if (optype == (OpType.DISTINCT)) { java.lang.System.out.print(\"DISTINCT(\"); qp.operators.Debug.PPrint(((qp.operators.Distinct) (node)).getBase()); java.lang.System.out.print(\")\"); }else if (optype == (OpType.GROUP_BY)) { java.lang.System.out.print(\"Project(\"); qp.operators.Debug.PPrint(((qp.operators.GroupBy) (node)).getBase()); java.lang.System.out.print(\")\"); }else if (optype == (OpType.SCAN)) { java.lang.System.out.print(((qp.operators.Scan) (node)).getTabName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2402/buggy-version/Component.src.qp.operators.Debug.java", "BodyUseAPI": [], "Fixed commit": "3624d7cfb1d0ec8a1aa4bd03f2f05b5799f1b152", "Url": "https://api.github.com/repos/ZhaoDingfan/CS3223Project", "Date": "2018-04-04T00:21:30Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(creditCard.cardNumber))) { this.cardNumber = creditCard.getFormattedCardNumber(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9432/buggy-version/picpay.app.src.main.java.br.com.picpay.picpay.model.Card.java", "BodyUseAPI": ["io.card.payment.CreditCard.getFormattedCardNumber()"], "Fixed commit": "61c0c663f4315ab724a87878e6a6646f9cd6901e", "Url": "https://api.github.com/repos/vcmoraes/trabalhe-conosco-mobile-dev", "Date": "2018-10-09T14:58:14Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.demo.snmpServer.SnmpServerCreater.getServer(java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((t.getDeviceType()) != (com.example.demo.snmpServer.Data.Type.DeviceType.host)) { java.util.Vector<com.example.demo.VariableBinding> vbs = new java.util.Vector<>(); try { vbs = t.getSubTree(Constant.vlanPorts); } catch (java.lang.Exception e) { e.printStackTrace(); } for (int i = 0; i < (vbs.size()); i++) { com.example.demo.Vlan vlan = new com.example.demo.Vlan((i + 1), vbs.elementAt(i).getVariable().toString()); java.util.Vector<java.lang.Integer> ports = vlan.getPorts(); for (int j = 0; j < (ports.size()); j++) { interFaces[((ports.elementAt(j)) - 1)].setVlanIndex((i + 1)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2068/buggy-version/src.main.java.com.example.demo.Controller.java", "BodyUseAPI": ["com.example.demo.snmpServer.SnmpServer.getSubTree(Constant.vlanPorts)"], "Fixed commit": "d4c7c9b6362fb8ed9a09579d9cb018dfe534191c", "Url": "https://api.github.com/repos/xxr5566833/snmpManage", "Date": "2018-07-15T09:33:16Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nodeService.hasAspect(node, RlArchiveModel.ASPECT_PIPELINE_ASPECT)) { se.vgregion.alfresco.mellanarkiv.platform.pipeline.index.publ.impl.qualifier.IndexQualifierWorkerImpl.LOG.error(((\"Node \" + node) + \" is already in another pipeline\")); return new se.vgregion.alfresco.mellanarkiv.platform.pipeline.index.publ.impl.PublicIndexStatusObject(STATUS_PUBLIC_INDEX_QUALIFIER_ERROR_WRONG_STATE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3627/buggy-version/platform-mellanarkiv.src.main.java.se.vgregion.alfresco.mellanarkiv.platform.pipeline.index.publ.impl.qualifier.IndexQualifierWorkerImpl.java", "BodyUseAPI": ["org.apache.log4j.Logger.error(((\"Node \" + node) + \" is already in another pipeline\"))"], "Fixed commit": "b44b43803d883e111fcbaf0abfaeaa7bb9366778", "Url": "https://api.github.com/repos/Vastra-Gotalandsregionen/alfresco-mellanarkiv", "Date": "2018-04-27T12:26:55Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["se.vgregion.alfresco.mellanarkiv.platform.pipeline.destroy.impl.feedback.FeedbackDestroyLogWorkerImpl.getProperty(org.alfresco.service.cmr.repository.NodeRef,RlArchiveModel.PROP_PIPELINE_DESTROY_ACTOR)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((actor == null) || (actor.isEmpty())) { actor = org.alfresco.repo.security.authentication.AuthenticationUtil.getSystemUserName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3627/buggy-version/platform-mellanarkiv.src.main.java.se.vgregion.alfresco.mellanarkiv.platform.pipeline.destroy.impl.feedback.FeedbackDestroyLogWorkerImpl.java", "BodyUseAPI": [], "Fixed commit": "b44b43803d883e111fcbaf0abfaeaa7bb9366778", "Url": "https://api.github.com/repos/Vastra-Gotalandsregionen/alfresco-mellanarkiv", "Date": "2018-04-27T12:26:55Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.app.lib_common.BuildConfig.DEBUG) { com.alibaba.android.arouter.launcher.ARouter.openLog(); com.alibaba.android.arouter.launcher.ARouter.openDebug(); com.alibaba.android.arouter.launcher.ARouter.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/430/buggy-version/lib_common.src.main.java.com.app.lib_common.base.BaseApplication.java", "BodyUseAPI": [], "Fixed commit": "bd3f0452af95fc85e681a32027df6597dbfd77da", "Url": "https://api.github.com/repos/PATHoke9120/SuperArchitecture", "Date": "2018-08-14T01:54:37Z"},
{"Line": "=>616", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.tron.common.runtime.vm.program.Program.convertToTronAddress(getOwnerAddress().getLast20Bytes())", "org.tron.common.runtime.vm.program.Program.convertToTronAddress(msg.getCodeAddress().getLast20Bytes())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (((null != senderAddress) && (null != codeAddress)) && (senderAddress != codeAddress)) { transferValidate(deposit, senderAddress, contextAddress, endowment); deposit.addBalance(senderAddress, (-endowment)); contextBalance = deposit.addBalance(contextAddress, endowment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1064/buggy-version/src.main.java.org.tron.common.runtime.vm.program.Program.java", "BodyUseAPI": ["org.tron.common.storage.Deposit.addBalance(byte[],long)", "org.tron.common.runtime.vm.program.Program.transferValidate(org.tron.common.storage.Deposit,byte[],byte[],long)"], "Fixed commit": "90e7a02df40de72a530f1f9667079fe54b243fe7", "Url": "https://api.github.com/repos/tronprotocol/java-tron", "Date": "2018-08-07T03:46:28Z"},
{"Line": "=>1239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.tron.common.runtime.vm.program.Program.convertToTronAddress(this.getOwnerAddress().getLast20Bytes())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (((null != senderAddress) && (null != contextAddress)) && (senderAddress != contextAddress)) { transfer(deposit, senderAddress, contextAddress, msg.getEndowment().value().longValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1064/buggy-version/src.main.java.org.tron.common.runtime.vm.program.Program.java", "BodyUseAPI": ["org.tron.common.runtime.vm.program.Program.transfer(org.tron.common.storage.Deposit,byte[],byte[],msg.getEndowment().value().longValue())"], "Fixed commit": "90e7a02df40de72a530f1f9667079fe54b243fe7", "Url": "https://api.github.com/repos/tronprotocol/java-tron", "Date": "2018-08-07T03:46:28Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mIdlingResource) != null) mIdlingResource.setIdleState(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3055/buggy-version/app.src.main.java.com.example.ibrahim.bakingapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "46b58fc76d260b9140cd752bb97b56772affef65", "Url": "https://api.github.com/repos/IbrahimYousre/BakingApp", "Date": "2018-04-02T20:15:03Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mIdlingResource) != null) mIdlingResource.setIdleState(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3055/buggy-version/app.src.main.java.com.example.ibrahim.bakingapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "46b58fc76d260b9140cd752bb97b56772affef65", "Url": "https://api.github.com/repos/IbrahimYousre/BakingApp", "Date": "2018-04-02T20:15:03Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mIdlingResource) != null) mIdlingResource.setIdleState(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3055/buggy-version/app.src.main.java.com.example.ibrahim.bakingapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "46b58fc76d260b9140cd752bb97b56772affef65", "Url": "https://api.github.com/repos/IbrahimYousre/BakingApp", "Date": "2018-04-02T20:15:03Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JFileChooser.showOpenDialog(javax.swing.JPanel)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (val == (javax.swing.JFileChooser.APPROVE_OPTION)) { java.lang.String file_name = input_file_chooser.getSelectedFile().getName(); java.lang.String extension = file_name.substring(((file_name.length()) - 4)); if (!(extension.equals(\".txt\"))) { javax.swing.JOptionPane.showMessageDialog(panel, \"ERROR: Please choose a .txt file.\"); return; } format_file_btn.setEnabled(true); input_field.setText(input_file_chooser.getSelectedFile().getPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4779/buggy-version/TextFormatterPanel.java", "BodyUseAPI": [], "Fixed commit": "c4fb8d02fe0307f1cd7bfc1f34c9e651e031b0b4", "Url": "https://api.github.com/repos/lamontano/CSE360_Project", "Date": "2018-03-15T06:46:59Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.support.v4.content.ContextCompat.checkSelfPermission(this, Manifest.permission.CALL_PHONE)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { android.support.v4.app.ActivityCompat.requestPermissions(this, new java.lang.String[]{ Manifest.permission.CALL_PHONE }, com.moesystems.contacts_parcial.ContactInfoActivity.PERMISSIONS_REQUEST_CALL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6462/buggy-version/app.src.main.java.com.moesystems.contacts_parcial.ContactInfoActivity.java", "BodyUseAPI": [], "Fixed commit": "72d14a79b70925b9ed54bf0dfeb29adbf2db5ee1", "Url": "https://api.github.com/repos/Moemeister/Contacts", "Date": "2018-05-06T22:49:01Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (RS.startsWith(\"BURST-\")) { RS = RS.substring(6); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8858/buggy-version/app.src.main.java.com.harrysoft.burstcoinexplorer.burst.entity.BurstAddress.java", "BodyUseAPI": [], "Fixed commit": "1a47d11e3c58c2e30b1478ef92515f4f6587f435", "Url": "https://api.github.com/repos/harry1453/burstcoin-explorer-android", "Date": "2018-05-28T13:08:21Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.app.FragmentActivity.getCurrentFocus()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (focusedView != null) { inputMethodManager.hideSoftInputFromWindow(mFragmentActivity.getCurrentFocus().getWindowToken(), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7409/buggy-version/app.src.main.java.intive.ideabox.viewmodel.AddIdeaViewModel.java", "BodyUseAPI": [], "Fixed commit": "5bed5571deec2f5d74b928c45ca7974d8a504124", "Url": "https://api.github.com/repos/blstream/IdeaBox_Android", "Date": "2018-04-14T17:37:45Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ExternalLibrariesActivator.N4_TYPE_DEFINITIONS_FOLDER_SUPPLIER.get().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (projectDirectory.toString().startsWith(typeDefFolder)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6922/buggy-version/plugins.org.eclipse.n4js.src.org.eclipse.n4js.external.ExternalLibraryUtils.java", "BodyUseAPI": [], "Fixed commit": "7a139fcd208021539152d711fecf9b7b4bc2a89f", "Url": "https://api.github.com/repos/eclipse/n4js", "Date": "2018-07-31T08:03:25Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(newPackageRoot.exists())) { newPackageRoot.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6922/buggy-version/plugins.org.eclipse.n4js.src.org.eclipse.n4js.external.NpmPackageToProjectAdapter.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "7a139fcd208021539152d711fecf9b7b4bc2a89f", "Url": "https://api.github.com/repos/eclipse/n4js", "Date": "2018-07-31T08:03:25Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["packing.generator.Packer.pack(packing.data.Dataset)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (packed != null) { best = packed; }else if (!(dataset.isFixedHeight())) { java.lang.Integer h = heights.higher(height); if (h != null) { rect.setSize(width, h); boundingBoxHeap.add(rect); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4853/buggy-version/packing.src.packing.generator.OptimalBoundingBoxGenerator.java", "BodyUseAPI": [], "Fixed commit": "db6a4aad82ba8cda59aa6566cd7daa3b88f5ca81", "Url": "https://api.github.com/repos/Kaj0Wortel/packing", "Date": "2018-06-13T07:12:53Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/934/buggy-version/src.main.java.com.js.tictactoe.validators.TableSizeValidator.java", "BodyUseAPI": [], "Fixed commit": "2fa7627f6ee0e5c69a3a1f7f301e8158a270501c", "Url": "https://api.github.com/repos/JaroslawSlaby/OX", "Date": "2018-04-26T11:15:30Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/934/buggy-version/src.main.java.com.js.tictactoe.validators.CoordinatesValidator.java", "BodyUseAPI": [], "Fixed commit": "2fa7627f6ee0e5c69a3a1f7f301e8158a270501c", "Url": "https://api.github.com/repos/JaroslawSlaby/OX", "Date": "2018-04-26T11:15:30Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(checkEndRound())) { android.app.AlertDialog alert11 = noti.create(); alert11.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/278/buggy-version/Blackjack.app.src.main.java.com.domain.ryan.blackjack.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "2e3993f95c649fb450263b8c7aafd6efb0c600ab", "Url": "https://api.github.com/repos/Rwhytsell/Android_Classwork", "Date": "2018-03-07T16:05:25Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3382/buggy-version/plugins.de.darwinspl.feature.graphical.editor.src.de.darwinspl.feature.graphical.editor.wizard.DwFeatureModelWizard.java", "BodyUseAPI": [], "Fixed commit": "f7629e73d6f4dc63be409179ae8f57108c087d99", "Url": "https://api.github.com/repos/DarwinSPL/DarwinSPL", "Date": "2018-03-21T08:43:00Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["RequestData.webclient.equals(form.getClient().getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isWeb) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6868/buggy-version/src.main.java.cn.cerc.jmis.page.AppLoginPage.java", "BodyUseAPI": [], "Fixed commit": "dc7bde88f76a402a04a4d075857c55c69707b4da", "Url": "https://api.github.com/repos/cn-cerc/summer-mis", "Date": "2018-09-03T09:42:09Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (TableFactory.REGION_LIST_TABLE.equals(tableName)) { com.synet.tool.rsc.model.Tb1049RegionEntity regionEntity = ((com.synet.tool.rsc.model.Tb1049RegionEntity) (obj)); if ((regionEntity.getF1049Name()) != null) { reloadPrj(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7324/buggy-version/com.synet.tool.rsc.src.com.synet.tool.rsc.ui.table.DevKTableModel.java", "BodyUseAPI": [], "Fixed commit": "cad002d21b23a65ce9d38c56647d77806223bd3b", "Url": "https://api.github.com/repos/ChalmersA/RSC50", "Date": "2018-09-19T16:51:25Z"},
{"Line": "=>3219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["driver.findElement(org.openqa.selenium.By.xpath(((\"//*[@id=\\\"content\\\"]/table/tbody/tr/td[2]/form/table/tbody/tr[\" + x) + \"]/td[1]\"))).getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (invItem.contains(\"Weak Bottled\")) { driver.findElement(org.openqa.selenium.By.xpath(((\"//*[@id=\\\"content\\\"]/table/tbody/tr/td[2]/form/table/tbody/tr[\" + x) + \"]/td[3]/input\"))).click(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8918/buggy-version/NeoDailies.java", "BodyUseAPI": [], "Fixed commit": "5e3dab1f76bf19706ad620fd458a4e03fbdda8e2", "Url": "https://api.github.com/repos/TheLazyGamer/NeoBot", "Date": "2018-08-12T19:01:31Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPopupWindow) != null) mPopupWindow.dismiss();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9491/buggy-version/app.src.main.java.com.andyshon.slots.Activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2a91a16c6c79381ae92c3b609cdad7a27d2f0241", "Url": "https://api.github.com/repos/Andyshon/Slots", "Date": "2018-07-04T11:31:47Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (leftTemporal.getTimezone().getID().equals(rightTemporal.getTimezone().getID())) { if (leftTemporal instanceof org.opencds.cqf.cql.elm.execution.Time) { idx -= 3; } return (leftTemporal.getPartial().getValue(idx)) > (rightTemporal.getPartial().getValue(idx)); }else { return (leftTemporal.getJodaDateTime().toInstant().get(org.opencds.cqf.cql.elm.execution.DateTime.getField(idx))) > (rightTemporal.getJodaDateTime().toInstant().get(org.opencds.cqf.cql.elm.execution.DateTime.getField(idx))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6999/buggy-version/cql-engine.src.main.java.org.opencds.cqf.cql.elm.execution.AfterEvaluator.java", "BodyUseAPI": ["rightTemporal.getJodaDateTime().toInstant()", "leftTemporal.getJodaDateTime().toInstant()", "leftTemporal.getJodaDateTime().toInstant().get(org.opencds.cqf.cql.elm.execution.DateTime.getField(idx))", "rightTemporal.getJodaDateTime().toInstant().get(org.opencds.cqf.cql.elm.execution.DateTime.getField(idx))", "org.opencds.cqf.cql.elm.execution.BaseTemporal.getPartial()", "org.opencds.cqf.cql.elm.execution.BaseTemporal.getJodaDateTime()", "org.opencds.cqf.cql.elm.execution.BaseTemporal.getJodaDateTime()", "rightTemporal.getPartial().getValue(int)", "org.opencds.cqf.cql.elm.execution.BaseTemporal.getPartial()", "leftTemporal.getPartial().getValue(int)"], "Fixed commit": "ac55cfd2ff65c8049a530ac5a65a1999abe3eb41", "Url": "https://api.github.com/repos/DBCG/cql_engine", "Date": "2018-01-16T21:04:26Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (leftTemporal.getTimezone().getID().equals(rightTemporal.getTimezone().getID())) { if (leftTemporal instanceof org.opencds.cqf.cql.elm.execution.Time) { idx -= 3; } return (leftTemporal.getPartial().getValue(idx)) < (rightTemporal.getPartial().getValue(idx)); }else { return (leftTemporal.getJodaDateTime().toInstant().get(org.opencds.cqf.cql.elm.execution.DateTime.getField(idx))) < (rightTemporal.getJodaDateTime().toInstant().get(org.opencds.cqf.cql.elm.execution.DateTime.getField(idx))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6999/buggy-version/cql-engine.src.main.java.org.opencds.cqf.cql.elm.execution.BeforeEvaluator.java", "BodyUseAPI": ["org.opencds.cqf.cql.elm.execution.BaseTemporal.getJodaDateTime()", "leftTemporal.getJodaDateTime().toInstant()", "org.opencds.cqf.cql.elm.execution.BaseTemporal.getJodaDateTime()", "leftTemporal.getPartial().getValue(int)", "rightTemporal.getPartial().getValue(int)", "leftTemporal.getJodaDateTime().toInstant().get(org.opencds.cqf.cql.elm.execution.DateTime.getField(idx))", "rightTemporal.getJodaDateTime().toInstant().get(org.opencds.cqf.cql.elm.execution.DateTime.getField(idx))", "org.opencds.cqf.cql.elm.execution.BaseTemporal.getPartial()", "org.opencds.cqf.cql.elm.execution.BaseTemporal.getPartial()", "rightTemporal.getJodaDateTime().toInstant()"], "Fixed commit": "ac55cfd2ff65c8049a530ac5a65a1999abe3eb41", "Url": "https://api.github.com/repos/DBCG/cql_engine", "Date": "2018-01-16T21:04:26Z"},
{"Line": "=>4288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offhand) { mage.setOffhandWand(this); }else { mage.setActiveWand(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5101/buggy-version/Magic.src.main.java.com.elmakers.mine.bukkit.wand.Wand.java", "BodyUseAPI": [], "Fixed commit": "77e4a3dfeea53a2197577d64f6dd5d7fd426f660", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2018-03-04T01:34:56Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ClassModelBuilder.JAVA_FX.equals(role.getPropertyStyle())) { paramType = role.getOther().getClazz().getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5658/buggy-version/src.main.java.org.fulib.util.Generator4ClassFile.java", "BodyUseAPI": ["role.getOther().getClazz().getName()", "role.getOther().getClazz()", "org.fulib.classmodel.AssocRole.getOther()"], "Fixed commit": "0f62123c4fc213e0301d175f30a4dcdb332fb4fc", "Url": "https://api.github.com/repos/fujaba/fulib", "Date": "2018-10-04T14:58:13Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (token == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4128/buggy-version/src.fr.cirad.tools.mongo.MongoTemplateManager.java", "BodyUseAPI": [], "Fixed commit": "3128afe9a152515a1d0b8e607a08f311c66d929d", "Url": "https://api.github.com/repos/SouthGreenPlatform/mgdb", "Date": "2017-06-08T16:26:53Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hourOfDay >= 22) hourOfDay = 22;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5096/buggy-version/app.src.main.java.com.example.hongyi.afinal.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7a572ec2f3ddcad1de4a7d9f4746322737c44d1c", "Url": "https://api.github.com/repos/pandelaz/final_104360073_104360058", "Date": "2018-01-03T05:23:06Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hourOfDay <= 8) hourOfDay = 8;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5096/buggy-version/app.src.main.java.com.example.hongyi.afinal.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7a572ec2f3ddcad1de4a7d9f4746322737c44d1c", "Url": "https://api.github.com/repos/pandelaz/final_104360073_104360058", "Date": "2018-01-03T05:23:06Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.model.TrainingSession.getTextContent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((textContent.codePointAt(textContentIndex)) == (java.awt.event.KeyEvent.VK_COMMA)) { builtString = builtString + \",\"; commaCount++; }else { builtString = builtString + (java.lang.Character.toString(((char) ((int) (typedCharacterCodes.get((i - commaCount)))))).toLowerCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/457/buggy-version/src.main.java.com.example.service.TrainingSessionEvaluationService.java", "BodyUseAPI": [], "Fixed commit": "eef2008754df12dd4e6f4c7a66453604c5e79df1", "Url": "https://api.github.com/repos/lucaspin/jwt-rest-service", "Date": "2018-07-05T21:40:19Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.hostBaseWorkDir) == null) { org.squonk.execution.runners.OpenShiftRunner.LOG.severe(\"Null hostBaseWorkDir\"); return; }else if ((this.localWorkDir) == null) { org.squonk.execution.runners.OpenShiftRunner.LOG.severe(\"Null localWorkDir\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1912/buggy-version/components.core-services-exec.src.main.groovy.org.squonk.execution.runners.OpenShiftRunner.java", "BodyUseAPI": [], "Fixed commit": "430544deb082f75d1b4bed1201e4be78cb866a50", "Url": "https://api.github.com/repos/InformaticsMatters/squonk", "Date": "2018-09-24T08:40:58Z"},
{"Line": "=>717", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (o instanceof java.util.BitSet) { return o; }else { throw new java.lang.IllegalArgumentException((\"Cannot double objects of type \" + (o.getClass()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3760/buggy-version/yamcs-core.src.main.java.org.yamcs.parameter.ArrayParameterCache.java", "BodyUseAPI": ["java.lang.Object.getClass()"], "Fixed commit": "01f3b8beac7f63b0cd7c6fdbd96e86b071a5b19e", "Url": "https://api.github.com/repos/yamcs/yamcs", "Date": "2018-02-20T14:10:07Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.lang.Enum.class.isAssignableFrom(type)) { this.type = org.tango.attribute.AttributeTangoType.getTypeFromClass(type).getType(); }else { this.type = type; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7458/buggy-version/server.src.main.java.org.tango.server.attribute.AttributeConfiguration.java", "BodyUseAPI": ["org.tango.attribute.AttributeTangoType.getTypeFromClass(java.lang.Class<?>)", "org.tango.attribute.AttributeTangoType.getTypeFromClass(type).getType()"], "Fixed commit": "a5856da6490380b73db579aff52e8f600b7f4e19", "Url": "https://api.github.com/repos/tango-controls/JTango", "Date": "2018-08-01T15:41:45Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (object != null) { content.append(object.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/316/buggy-version/dbpa.src.main.java.com.hauldata.dbpa.file.html.Html.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "e78da8230d802760edf9abff0fea31acd825e52b", "Url": "https://api.github.com/repos/rdesantis/hauldata", "Date": "2018-09-27T03:33:09Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.thoughtworks.go.plugin.access.configrepo.ConfigRepoExtension.resolveExtensionVersion(java.lang.String,com.thoughtworks.go.plugin.access.configrepo.CONFIG_REPO_EXTENSION,java.util.List<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (resolvedExtensionVersion.equals(\"1.0\")) { return new com.thoughtworks.go.plugin.domain.configrepo.Capabilities(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9704/buggy-version/plugin-infra.go-plugin-access.src.main.java.com.thoughtworks.go.plugin.access.configrepo.ConfigRepoExtension.java", "BodyUseAPI": [], "Fixed commit": "3549eae2fce9ad40f2fb24ab4931a2aff8fe4406", "Url": "https://api.github.com/repos/ibnc/gocd", "Date": "2018-10-26T21:47:23Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((process.getType().size()) == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7984/buggy-version/modelchecker.interpreter.src.main.java.mc.compiler.Interpreter.java", "BodyUseAPI": [], "Fixed commit": "fcfe9d6529d416a233b41e8ea6f977f25bfb0c63", "Url": "https://api.github.com/repos/davidstreader/Model-Checker", "Date": "2018-01-30T03:25:58Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7875/buggy-version/app.src.main.java.com.codingblocks.chatter.RoomsFragment.java", "BodyUseAPI": [], "Fixed commit": "125544585bc1820c1279cd0a45c1660a18711460", "Url": "https://api.github.com/repos/aggarwalpulkit596/Chatter", "Date": "2018-05-24T21:15:11Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.almunt.dalidashboard.DALIMember.getUrl()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (url.startsWith(\"//\")) personViewHolder.website.setText((\"Web: \" + (url.substring(2)))); else personViewHolder.website.setText((\"Web: http://mappy.dali.dartmouth.edu/\" + url));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4771/buggy-version/app.src.main.java.com.almunt.dalidashboard.RVAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "android.widget.TextView.setText(java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "8b0db782d3a4d75ad021373f321fb4cd4bc578d3", "Url": "https://api.github.com/repos/AleMunt/DALI-Dashboard-Android-App", "Date": "2018-01-29T03:47:45Z"},
{"Line": "=>609", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (inputModel.getEventType().startsWith(\"class java\")) eventNameSubstring = inputModel.getEventName().substring(0, 1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5603/buggy-version/src.controller.UpdateRecordsInSalesForce.java", "BodyUseAPI": ["model.SalesForceAttendanceModel.getEventName()", "inputModel.getEventName().substring(int,int)"], "Fixed commit": "fd5802425f83904bddb0f923a00709220dcf7b0b", "Url": "https://api.github.com/repos/wavis421/LeagueSalesforceSync", "Date": "2018-09-26T20:16:45Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((minecraftConnection) != null) { minecraftConnection.close(); minecraftConnection = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6428/buggy-version/proxy.src.main.java.com.velocitypowered.proxy.connection.backend.VelocityServerConnection.java", "BodyUseAPI": [], "Fixed commit": "0469aaa03a9c2016e9f8570726089e78924fef30", "Url": "https://api.github.com/repos/VelocityPowered/Velocity", "Date": "2018-09-14T05:00:56Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (b == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3522/buggy-version/cnc.src.main.java.org.cirqoid.cnc.controller.serial.SerialBuffer.java", "BodyUseAPI": [], "Fixed commit": "aa469bff8ca4b0952acb865ea257f6cd12410c0b", "Url": "https://api.github.com/repos/simonsalykov/cirqwizard", "Date": "2018-01-09T13:19:51Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.github.yeriomin.yalpstore.ThemeManager.isAmazonTv(activity)) { activity.setTheme(com.github.yeriomin.yalpstore.ThemeManager.getThemeDark()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5130/buggy-version/app.src.main.java.com.github.yeriomin.yalpstore.ThemeManager.java", "BodyUseAPI": ["android.app.Activity.setTheme(int)"], "Fixed commit": "d7dabcbd1fa2fa32228428034f0ca753bdfda650", "Url": "https://api.github.com/repos/yeriomin/YalpStore", "Date": "2018-01-14T00:39:35Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(existedProblemNames.equals(\"\"))) { existedNames = existedProblemNames.split(\"\\\\*\"); }else { existedNames = new java.lang.String[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8930/buggy-version/app.src.main.java.com.example.deep.paintgame.MainActivity.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "1378434847c1f5f1196712ae090c85a6b6f2f028", "Url": "https://api.github.com/repos/bencq/PaintGame", "Date": "2018-05-27T13:09:06Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event.getCardChoice().stream().anyMatch(magic.model.MagicCard::isInLibrary)) { game.doAction(new magic.model.action.ShuffleLibraryAction(event.getPlayer())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1397/buggy-version/src.magic.model.event.MagicSearchToLocationEvent.java", "BodyUseAPI": ["game.doAction(magic.model.action.ShuffleLibraryAction)", "event.getPlayer()"], "Fixed commit": "e67011ebf177359c1fcc693c3348dc08936a0a58", "Url": "https://api.github.com/repos/Fulmene/magarena", "Date": "2018-02-21T11:42:39Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (card.isInLibrary()) { game.doAction(new magic.model.action.ShuffleLibraryAction(event.getPlayer())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1397/buggy-version/src.magic.model.event.MagicSearchToLocationEvent.java", "BodyUseAPI": [], "Fixed commit": "e67011ebf177359c1fcc693c3348dc08936a0a58", "Url": "https://api.github.com/repos/Fulmene/magarena", "Date": "2018-02-21T11:42:39Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (zeroValCode.equals(InsightsMessageEnum.CURRENTVALZERO.toString())) { msgZeroCode = InsightsMessageEnum.ZEROVALMSG.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7371/buggy-version/PlatformService.src.main.java.com.cognizant.devops.platformservice.insights.service.InsightsInferenceServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "2fbbc4d50c3583574c74286d70428bdaa415b422", "Url": "https://api.github.com/repos/CognizantOneDevOps/Insights", "Date": "2018-01-11T13:42:11Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.JsonObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (jsonElement.isJsonNull()) { resultMap = getResultMap(0L, null); }else { resultMap = getResultMap(jsonElement.getAsLong(), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7371/buggy-version/PlatformInsights.src.main.java.com.cognizant.devops.platforminsights.core.minmax.MinMaxActionImpl.java", "BodyUseAPI": ["com.cognizant.devops.platforminsights.core.minmax.MinMaxActionImpl.getResultMap(jsonElement.getAsLong(),<nulltype>)", "com.google.gson.JsonElement.getAsLong()"], "Fixed commit": "2fbbc4d50c3583574c74286d70428bdaa415b422", "Url": "https://api.github.com/repos/CognizantOneDevOps/Insights", "Date": "2018-01-11T13:42:11Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (graphEntity == null) { graphEntity = getGraph(db, collectionName, fromTo, graphName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/629/buggy-version/src.main.java.com.example.demo.repository.factory.NameBasedArangoDatabaseBuilder.java", "BodyUseAPI": [], "Fixed commit": "6060876f0e5dec5a9799fa9f26f7d1b232b699c3", "Url": "https://api.github.com/repos/danisrichard/Demo-Spring-Arango", "Date": "2018-10-18T06:52:26Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((process) != null) process.destroyForcibly();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2434/buggy-version/src.com.tek.origin.LauncherDisplay.java", "BodyUseAPI": [], "Fixed commit": "97d0eab24f47f23b6e6aaaab219ea741c900442f", "Url": "https://api.github.com/repos/RedstoneTek/OriginCryptoLauncher", "Date": "2018-01-02T04:34:18Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.item) != null) { net.minecraft.item.ItemStack stack = new net.minecraft.item.ItemStack(this.item, this.size, this.meta); stack.setTagCompound(this.nbt); return stack; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6446/buggy-version/src.main.java.nebula.common.stack.BaseStack.java", "BodyUseAPI": [], "Fixed commit": "ebe03001f507abd798fad660ad04ed3d0527903c", "Url": "https://api.github.com/repos/ueyudiud/FLE", "Date": "2018-01-28T13:21:42Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (notifyIfFails) { if ((((smtpConfiguration) == null) || (org.apache.commons.lang.StringUtils.isBlank(failureNotificationSender))) || (org.apache.commons.lang.StringUtils.isBlank(failureNotificationReceiver))) { com.linkedin.thirdeye.anomaly.onboard.DetectionOnBoardJobRunner.LOG.warn(\"SmtpConfiguration, and email sender/recipients cannot be null or empty\"); }else { try { sendFailureEmail(); } catch (org.quartz.JobExecutionException e) { com.linkedin.thirdeye.anomaly.onboard.DetectionOnBoardJobRunner.LOG.warn(\"Unable to send failure emails\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5329/buggy-version/thirdeye.thirdeye-pinot.src.main.java.com.linkedin.thirdeye.anomaly.onboard.DetectionOnBoardJobRunner.java", "BodyUseAPI": [], "Fixed commit": "8b98507bc655fd8a495a94387068f035a7ed0770", "Url": "https://api.github.com/repos/apache/incubator-pinot", "Date": "2018-01-25T00:48:48Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (configuration.containsKey(DefaultDetectionOnboardJob.SMTP_HOST)) { smtpConfiguration = new com.linkedin.thirdeye.anomaly.SmtpConfiguration(); smtpConfiguration.setSmtpHost(configuration.getString(DefaultDetectionOnboardJob.SMTP_HOST)); smtpConfiguration.setSmtpPort(configuration.getInt(DefaultDetectionOnboardJob.SMTP_PORT)); }else { smtpConfiguration = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5329/buggy-version/thirdeye.thirdeye-pinot.src.main.java.com.linkedin.thirdeye.anomaly.onboard.DetectionOnBoardJobRunner.java", "BodyUseAPI": [], "Fixed commit": "8b98507bc655fd8a495a94387068f035a7ed0770", "Url": "https://api.github.com/repos/apache/incubator-pinot", "Date": "2018-01-25T00:48:48Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((task.getWeek()) != null) dto.setWeekid(task.getWeek().getId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2348/buggy-version/src.main.java.model.dto.task.TasksDtoMapper.java", "BodyUseAPI": ["model.dto.task.TaskDtoLazy.setWeekid(task.getWeek().getId())", "model.entities.Task.getWeek()", "task.getWeek().getId()"], "Fixed commit": "2045d9a164226c669a16ac72ceb58b040cdceed0", "Url": "https://api.github.com/repos/lxdi/planner-server", "Date": "2018-04-28T19:34:34Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((task.getMean()) != null) dto.setMeanid(task.getMean().getId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2348/buggy-version/src.main.java.model.dto.task.TasksDtoMapper.java", "BodyUseAPI": ["model.entities.Task.getMean()", "model.dto.task.TaskDtoLazy.setMeanid(task.getMean().getId())", "task.getMean().getId()"], "Fixed commit": "2045d9a164226c669a16ac72ceb58b040cdceed0", "Url": "https://api.github.com/repos/lxdi/planner-server", "Date": "2018-04-28T19:34:34Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<at.hgz.vocabletrainer.License>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((license.getLicenseText().length()) > 100) { android.content.Context context = this; try { java.io.File licensePath = new java.io.File(context.getCacheDir(), \"licenses\"); if (!(licensePath.exists())) { if (!(licensePath.mkdirs())) { throw new java.io.IOException((\"Error creating dir: \" + licensePath)); } } java.lang.String fileName = (license.getModuleName().replace('.', '_')) + \".txt\"; java.io.File licenseFile = new java.io.File(licensePath, fileName); org.apache.commons.io.FileUtils.writeStringToFile(licenseFile, license.getLicenseText()); android.net.Uri contentUri = android.support.v4.content.FileProvider.getUriForFile(context, \"at.hgz.vocabletrainer.fileprovider\", licenseFile); android.content.Intent intent = new android.content.Intent(android.content.Intent.ACTION_VIEW); intent.setDataAndType(contentUri, \"text/plain\"); intent.setFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION); this.startActivity(intent); } catch (java.io.IOException e) { android.util.Log.e(\"VocableTrainer\", (\"Error loading license: \" + (e.getMessage())), e); java.lang.String text = context.getResources().getString(R.string.errorLoadingLicense); android.widget.Toast toast = android.widget.Toast.makeText(getApplicationContext(), text, Toast.LENGTH_SHORT); toast.show(); e.printStackTrace(); } }else { android.content.Intent intent = new android.content.Intent(this, at.hgz.vocabletrainer.LicenseActivity.class); intent.putExtra(\"moduleName\", license.getModuleName()); intent.putExtra(\"licenseText\", license.getLicenseText()); this.startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4852/buggy-version/app.src.main.java.at.hgz.vocabletrainer.AboutActivity.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,license.getModuleName())", "org.apache.commons.io.FileUtils.writeStringToFile(java.io.File,license.getLicenseText())", "at.hgz.vocabletrainer.License.getModuleName()", "at.hgz.vocabletrainer.License.getLicenseText()", "license.getModuleName().replace(char,char)", "at.hgz.vocabletrainer.License.getModuleName()", "android.content.Intent.putExtra(java.lang.String,license.getLicenseText())", "at.hgz.vocabletrainer.License.getLicenseText()"], "Fixed commit": "89d59f11ae8da6dbbdb1430072851564410dfe22", "Url": "https://api.github.com/repos/hgzojer/vocabletrainer", "Date": "2018-10-20T11:38:15Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mchorse.blockbuster.recording.actions.EquipAction.getSlotByIndex(byte)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (slot == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7355/buggy-version/src.main.java.mchorse.blockbuster.recording.actions.EquipAction.java", "BodyUseAPI": [], "Fixed commit": "9e8612ddb6b8e9deb565cc68f563a1f787e2a3ba", "Url": "https://api.github.com/repos/mchorse/blockbuster", "Date": "2018-10-27T07:47:15Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sortBy == (com.example.android.popularmovies.utilities.TMDbUtils.SortBy.RELEASE_DATE)) { java.text.SimpleDateFormat dateFormat = new java.text.SimpleDateFormat(\"yyyy-MM-dd\"); builder.appendQueryParameter(com.example.android.popularmovies.utilities.TMDbUtils.RELEASE_DATE_LTE_PARAM, dateFormat.format(new java.util.Date())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6526/buggy-version/app.src.main.java.com.example.android.popularmovies.utilities.TMDbUtils.java", "BodyUseAPI": [], "Fixed commit": "6416671612189e8ed2617e2c9c3392ba441401fd", "Url": "https://api.github.com/repos/johngboutros/popular-movies-project", "Date": "2018-03-17T22:06:39Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.you.ap.common.helper.CommonUtil.getTokenModelFromToken(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!isphoto) && ((tokenModel.getUserType()) == (com.you.ap.domain.enums.user.UserTypeEnum.Student))) { return studentInfoService.updateIdentifyPhoto(tokenModel.getUserId(), photoPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2874/buggy-version/service.src.main.java.com.you.ap.service.user.imp.PhotoUploadServiceImp.java", "BodyUseAPI": ["com.you.ap.service.user.IStudentInfoService.updateIdentifyPhoto(tokenModel.getUserId(),java.lang.String)", "com.you.ap.domain.model.TokenModel.getUserId()"], "Fixed commit": "58b39ae46a61ad8953a364c553026f4f3e3dcea0", "Url": "https://api.github.com/repos/qq302716723/ap", "Date": "2018-01-12T04:10:48Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hyracks.storage.am.lsm.common.merge.AbstractLevelMergePolicy.getNumLevels()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((numLevels > 1) && ((mergeFinalizingSpeed[(numLevels - 1)][1]) == null)) && ((mergeProcessingSpeed[(numLevels - 1)][1]) != null)) { mergeFinalizingSpeed[(numLevels - 1)] = mergeFinalizingSpeed[(numLevels - 2)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4838/buggy-version/hyracks-fullstack.hyracks.hyracks-storage-am-lsm-common.src.main.java.org.apache.hyracks.storage.am.lsm.common.flowcontrol.LSMSimulateLimitMonitor.java", "BodyUseAPI": [], "Fixed commit": "69abc20b5f4e36e3cf5ca6b6e0678a7cb68f84e4", "Url": "https://api.github.com/repos/luochen01/asterixdb", "Date": "2018-09-08T00:40:39Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (componentRatioEstimator.isEmpty()) { return new org.apache.hyracks.storage.am.lsm.common.flowcontrol.simulator.RandomVariable[]{ org.apache.hyracks.storage.am.lsm.common.flowcontrol.simulator.RandomVariable.of(1, 0, 1, 1) }; }else { return new org.apache.hyracks.storage.am.lsm.common.flowcontrol.simulator.RandomVariable[]{ org.apache.hyracks.storage.am.lsm.common.flowcontrol.simulator.RandomVariable.of(componentRatioEstimator) }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4838/buggy-version/hyracks-fullstack.hyracks.hyracks-storage-am-lsm-common.src.main.java.org.apache.hyracks.storage.am.lsm.common.flowcontrol.LSMSizeTieredMergeUnit.java", "BodyUseAPI": ["org.apache.hyracks.storage.am.lsm.common.flowcontrol.simulator.RandomVariable.of(org.apache.hyracks.storage.am.lsm.common.flowcontrol.estimate.IValueEstimator)"], "Fixed commit": "69abc20b5f4e36e3cf5ca6b6e0678a7cb68f84e4", "Url": "https://api.github.com/repos/luochen01/asterixdb", "Date": "2018-09-08T00:40:39Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((count.getValue()) > (occurrencesThreshold)) { problematicSubsystems.add(((((count.getKey()) + \" \") + (count.getValue())) + \" time(s)\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8760/buggy-version/src.main.java.rcms.utilities.daqexpert.reasoning.logic.failures.fixingSoftErrors.ContinouslySoftError.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)", "java.util.Map.Entry<java.lang.String, java.lang.Integer>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.Integer>.getKey()"], "Fixed commit": "7f78c276767be72c99dcb5527faa7f582f09df28", "Url": "https://api.github.com/repos/andreh12/DAQExpert", "Date": "2018-05-08T12:46:41Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getConfiguration().isSet(\"MySQL.Enabled\")) handleSQL();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6176/buggy-version/src.simplepets.brainsynder.PetCore.java", "BodyUseAPI": [], "Fixed commit": "9de460908961609072d3c2af96e4e03102c5b3c5", "Url": "https://api.github.com/repos/brainsynder-Dev/SimplePets", "Date": "2018-01-15T23:51:48Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (choice == 'e') { foo.player.inventory.showInventory(); java.lang.System.out.println(\"If you would like to select an item to hold, enter the slot number \\nor else hit e again to close inventory.\"); choice = dir.next().charAt(0); if (choice != 'e') { choice -= 48; foo.player.inventory.setItemToCurrent(choice); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6330/buggy-version/DandDGame.src.main.game.Partition.java", "BodyUseAPI": [], "Fixed commit": "a1e0083b8dc452643ec8c53ec808fbba3dd1601d", "Url": "https://api.github.com/repos/Beamryan/350TermProject", "Date": "2018-07-15T08:32:56Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.Objects.nonNull(it.greenvulcano.gvesb.channel.kafka.KafkaChannel.executorService)) { try { if (!(it.greenvulcano.gvesb.channel.kafka.KafkaChannel.executorService.awaitTermination(16, java.util.concurrent.TimeUnit.SECONDS))) { it.greenvulcano.gvesb.channel.kafka.KafkaChannel.executorService.shutdown(); } } catch (java.lang.InterruptedException e) { it.greenvulcano.gvesb.channel.kafka.KafkaChannel.LOG.error(\"Error terminating consumers task\", e); it.greenvulcano.gvesb.channel.kafka.KafkaChannel.executorService.shutdownNow(); } it.greenvulcano.gvesb.channel.kafka.KafkaChannel.executorService = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8641/buggy-version/src.main.java.it.greenvulcano.gvesb.channel.kafka.KafkaChannel.java", "BodyUseAPI": ["java.util.concurrent.ExecutorService.shutdown()", "java.util.concurrent.ExecutorService.shutdownNow()", "java.util.concurrent.ExecutorService.awaitTermination(int,java.util.concurrent.TimeUnit)"], "Fixed commit": "7d427200175af9da9bfb6c5b8f1671e52bb84428", "Url": "https://api.github.com/repos/green-vulcano/gv-adapter-kafka", "Date": "2018-04-03T17:10:28Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tencent.mm.opensdk.openapi.WXAPIFactory.createWXAPI(android.content.Context,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((api.getWXAppSupportAPI()) < (com.tencent.mm.opensdk.constants.Build.PAY_SUPPORTED_SDK_INT)) { android.widget.Toast.makeText(mContext, \"\u60a8\u7684\u5fae\u4fe1\u4e0d\u652f\u6301\u5fae\u4fe1\u652f\u4ed8\u6216\u5fae\u4fe1\u7248\u672c\u8fc7\u4f4e\", Toast.LENGTH_SHORT).show(); return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8124/buggy-version/pay.src.main.java.cn.bluemobi.dylan.pay.WeChatPay.java", "BodyUseAPI": [], "Fixed commit": "6659a3d3d887254c700cccd93b5f8ccc5729285a", "Url": "https://api.github.com/repos/linglongxin24/AndroidFastDevFrame", "Date": "2018-09-17T06:29:25Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((seeds) != null) { if ((seeds.get()) == null) { seeds.set(io.github.pr0methean.betterrandom.util.BinaryUtils.convertLongToBytes(seed).clone()); }else { java.lang.System.arraycopy(seed, 0, seeds.get(), 0, java.lang.Long.BYTES); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3901/buggy-version/betterrandom.src.main.java.io.github.pr0methean.betterrandom.prng.adapter.SplittableRandomAdapter.java", "BodyUseAPI": [], "Fixed commit": "48486f85f311dca7734c6a5b532f5d0fd64e4da0", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2018-08-17T23:52:23Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((buffer.get(currentBestEdge)) != null) { sendPath(((byte) (1)), getSinkAddress(), buffer.get(currentBestEdge)); log(java.util.logging.Level.INFO, ((\"Best Edge: \" + bestEdge) + \", Sending new path\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/443/buggy-version/ctrl.src.main.java.com.github.sdnwiselab.sdnwise.controller.ControllerStatic.java", "BodyUseAPI": ["com.github.sdnwiselab.sdnwise.controller.ControllerStatic.sendPath(int,getSinkAddress(),buffer.get(currentBestEdge))", "java.util.HashMap<java.lang.String, java.util.LinkedList<com.github.sdnwiselab.sdnwise.util.NodeAddress>>.get(java.lang.String)"], "Fixed commit": "817abb5d6531abeeb1f42691c52a9ed6433149a0", "Url": "https://api.github.com/repos/sdnwiselab/sdn-wise-java", "Date": "2018-05-24T20:14:48Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.victium.xelg.notatry.dialog.DamageDialogFragment.getString(R.string.spells_taiga)", "net.victium.xelg.notatry.dialog.DamageDialogFragment.getString(R.string.spells_haze_transylvania)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((spellName.equals(taiga)) || (spellName.equals(hazeTransylvania))) { if ((damageResult.equals(SPV.BLOCK)) && (shieldName.equals(shieldRainbowSphere))) { damageResult = net.victium.xelg.notatry.enums.SPV.BURST; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5548/buggy-version/app.src.main.java.net.victium.xelg.notatry.dialog.DamageDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "cf6eb074ca8554aa1abe890492bd0a7aeefb55fb", "Url": "https://api.github.com/repos/xelgvoras/notatry", "Date": "2018-10-06T10:30:10Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tile.getInventory().getTrueStackInSlot(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((player instanceof net.minecraft.entity.player.EntityPlayerMP) && ((folder.getItem()) == (com.bafomdad.realfilingcabinet.init.RFCItems.dyedFolder))) && ((com.bafomdad.realfilingcabinet.items.ItemFolder.getFileSize(folder)) >= (com.bafomdad.realfilingcabinet.NewConfigRFC.ConfigRFC.folderSizeLimit))) com.bafomdad.realfilingcabinet.helpers.RFCAdvancements.advance(((net.minecraft.entity.player.EntityPlayerMP) (player)), new net.minecraft.util.ResourceLocation(com.bafomdad.realfilingcabinet.RealFilingCabinet.MOD_ID, \"main/limit_reach\"), \"code_triggered\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6675/buggy-version/com.bafomdad.realfilingcabinet.utils.StorageUtils.java", "BodyUseAPI": [], "Fixed commit": "7dbb1821c03fdf567fd0d520af13e1bf521915bb", "Url": "https://api.github.com/repos/bafomdad/realfilingcabinet", "Date": "2018-10-27T15:37:38Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iter == 1) { for (int i = 0; i < 2; i++) { if (((((playr.cardsOnHand.get(i).rank) == \"J\") || ((playr.cardsOnHand.get(i).rank) == \"Q\")) || ((playr.cardsOnHand.get(i).rank) == \"K\")) || ((playr.cardsOnHand.get(i).rank) == \"10\")) { iter++; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7703/buggy-version/src.main.java.core.BlackJack.java", "BodyUseAPI": [], "Fixed commit": "b1fe4ad7b65cbf4361b7bf6e667c8f2afee556d9", "Url": "https://api.github.com/repos/majdalkhany/3004Assignment", "Date": "2018-09-20T08:46:17Z"},
{"Line": "=>707", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.audiveris.omr.sheet.SystemInfo.getClosestStaff(java.awt.Point)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (staff == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5676/buggy-version/src.main.org.audiveris.omr.sheet.SystemInfo.java", "BodyUseAPI": [], "Fixed commit": "74e67a2fe34a2e7bb04a563a868e6ac7af0edd56", "Url": "https://api.github.com/repos/Philtard/audiveris", "Date": "2018-06-26T09:48:46Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["super.columnConfigList.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((columnConfig.isMeta()) || (columnConfig.isForceRemove())) { pos += 1; }else if ((((columnConfig.isNumerical()) && (modelConfig.getNormalizeType().equals(ModelNormalizeConf.NormType.ONEHOT))) && ((columnConfig.getBinBoundary()) != null)) && ((columnConfig.getBinBoundary().size()) > 1)) { pos += (columnConfig.getBinBoundary().size()) + 1; }else if (((columnConfig.isCategorical()) && ((modelConfig.getNormalizeType().equals(ModelNormalizeConf.NormType.ZSCALE_ONEHOT)) || (modelConfig.getNormalizeType().equals(ModelNormalizeConf.NormType.ONEHOT)))) && ((columnConfig.getBinCategory().size()) > 1)) { pos += (columnConfig.getBinCategory().size()) + 1; }else { pos += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/432/buggy-version/src.main.java.ml.shifu.shifu.core.dtrain.nn.NNWorker.java", "BodyUseAPI": ["ml.shifu.shifu.container.obj.ColumnConfig.isNumerical()", "columnConfig.getBinBoundary().size()", "ml.shifu.shifu.container.obj.ColumnConfig.getBinBoundary()", "ml.shifu.shifu.container.obj.ColumnConfig.getBinBoundary()", "ml.shifu.shifu.container.obj.ColumnConfig.getBinCategory()", "ml.shifu.shifu.container.obj.ColumnConfig.getBinCategory()", "columnConfig.getBinCategory().size()", "ml.shifu.shifu.container.obj.ColumnConfig.getBinBoundary()", "columnConfig.getBinBoundary().size()", "ml.shifu.shifu.container.obj.ColumnConfig.isCategorical()", "columnConfig.getBinCategory().size()"], "Fixed commit": "8dcad2f0912f21f437710eb4c01569bdfb1dc81d", "Url": "https://api.github.com/repos/MiniZhuwei/shifu", "Date": "2018-08-20T05:18:31Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["super.columnConfigList.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((columnConfig.isMeta()) || (columnConfig.isForceRemove())) { pos += 1; }else if (((columnConfig != null) && (columnConfig.isNumerical())) && (modelConfig.getNormalizeType().equals(ModelNormalizeConf.NormType.ONEHOT))) { for (int k = 0; k < ((columnConfig.getBinBoundary().size()) + 1); k++) { java.lang.String tval = fields[pos]; float fval = ((tval.length()) == 0) ? 0.0F : ml.shifu.guagua.util.NumberFormatUtils.getFloat(tval, 0.0F); fval = ((java.lang.Float.isNaN(fval)) || (java.lang.Double.isNaN(fval))) ? 0.0F : fval; inputs[(inputsIndex++)] = fval; pos++; } }else if (((columnConfig != null) && (columnConfig.isCategorical())) && ((modelConfig.getNormalizeType().equals(ModelNormalizeConf.NormType.ZSCALE_ONEHOT)) || (modelConfig.getNormalizeType().equals(ModelNormalizeConf.NormType.ONEHOT)))) { for (int k = 0; k < ((columnConfig.getBinCategory().size()) + 1); k++) { java.lang.String tval = fields[pos]; float fval = ((tval.length()) == 0) ? 0.0F : ml.shifu.guagua.util.NumberFormatUtils.getFloat(tval, 0.0F); fval = ((java.lang.Float.isNaN(fval)) || (java.lang.Double.isNaN(fval))) ? 0.0F : fval; inputs[(inputsIndex++)] = fval; pos++; } }else { inputs[(inputsIndex++)] = floatValue; pos++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/432/buggy-version/src.main.java.ml.shifu.shifu.core.dtrain.nn.NNWorker.java", "BodyUseAPI": ["columnConfig.getBinBoundary().size()", "ml.shifu.shifu.container.obj.ColumnConfig.getBinCategory()", "columnConfig.getBinCategory().size()", "ml.shifu.shifu.container.obj.ColumnConfig.isNumerical()", "ml.shifu.shifu.container.obj.ColumnConfig.getBinBoundary()", "ml.shifu.shifu.container.obj.ColumnConfig.isCategorical()"], "Fixed commit": "8dcad2f0912f21f437710eb4c01569bdfb1dc81d", "Url": "https://api.github.com/repos/MiniZhuwei/shifu", "Date": "2018-08-20T05:18:31Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (callback != null) { callback.run(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8573/buggy-version/xdstools2.src.main.java.gov.nist.toolkit.xdstools2.client.Xdstools2.java", "BodyUseAPI": ["gov.nist.toolkit.xdstools2.client.util.SimpleCallback.run()"], "Fixed commit": "1e439af06cf55bca08959643ce9eacdbcd12678c", "Url": "https://api.github.com/repos/usnistgov/iheos-toolkit2", "Date": "2018-08-17T21:54:42Z"},
{"Line": "=>1192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((serverSocket) != null) { try { serverSocket.close(); } catch (java.io.IOException ex) { ex.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5461/buggy-version/src.WisdomInWords.wTeacher.java", "BodyUseAPI": [], "Fixed commit": "c7b9efb262ff05875be4c909adcd5f876c677429", "Url": "https://api.github.com/repos/deLimes/Wisdom-in-words-swing-", "Date": "2018-03-30T07:14:03Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.runa.gpd.util.VariableUtils.getVariableByName(ru.runa.gpd.lang.model.FormNode,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(com.google.common.base.Strings.isNullOrEmpty(parameter.getVariableTypeFilter()))) && (!(ru.runa.gpd.extension.VariableFormatRegistry.isApplicable(variable, parameter.getVariableTypeFilter())))) { if (ru.runa.gpd.extension.VariableFormatRegistry.isAssignableFrom(variable.getJavaClassName(), parameter.getVariableTypeFilter())) { list.add(ru.runa.gpd.lang.ValidationError.createWarning(formNode, ru.runa.gpd.formeditor.resources.Messages.getString(\"validation.variable.invalid.type\", variableName, component.getType().getLabel()))); }else { list.add(ru.runa.gpd.lang.ValidationError.createError(formNode, ru.runa.gpd.formeditor.resources.Messages.getString(\"validation.variable.invalid.type\", variableName, component.getType().getLabel()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1332/buggy-version/plugins.ru.runa.gpd.form.ftl.src.ru.runa.gpd.formeditor.ftl.validation.VariableParameterTypeValidator.java", "BodyUseAPI": ["ru.runa.gpd.extension.VariableFormatRegistry.isAssignableFrom(variable.getJavaClassName(),parameter.getVariableTypeFilter())", "ru.runa.gpd.lang.model.Variable.getJavaClassName()", "ru.runa.gpd.formeditor.ftl.ComponentParameter.getVariableTypeFilter()"], "Fixed commit": "511d3f204b64a2b7c15a1ebaf2fa861d8416a195", "Url": "https://api.github.com/repos/processtech/runawfe-devstudio", "Date": "2018-01-30T08:00:12Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang.StringUtils.isBlank(issueTypeId))) { fieldsInfo = getFields(projectKey, issueTypeId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1705/buggy-version/src.com.ppm.integration.agilesdk.connector.jira.JIRAServiceProvider.java", "BodyUseAPI": ["com.ppm.integration.agilesdk.connector.jira.JIRAServiceProvider.JIRAService.getFields(java.lang.String,java.lang.String)"], "Fixed commit": "d954ef1443d1cc4a1d7329addcb341e31da631bb", "Url": "https://api.github.com/repos/MicroFocus/ppm-jira-connector", "Date": "2018-06-28T08:50:33Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (keys != null) { paras.addAll(keys); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2671/buggy-version/QCloudFoundation.foundation.src.main.java.com.tencent.qcloud.core.auth.COSXmlSignSourceProvider.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.addAll(java.util.Set<java.lang.String>)"], "Fixed commit": "9f2f85b27c2053d625dabfafb9583796960656b4", "Url": "https://api.github.com/repos/tencentyun/qcloud-sdk-android", "Date": "2018-01-17T14:06:10Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (keys != null) { headers.addAll(keys); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2671/buggy-version/QCloudFoundation.foundation.src.main.java.com.tencent.qcloud.core.auth.COSXmlSignSourceProvider.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.addAll(java.util.Set<java.lang.String>)"], "Fixed commit": "9f2f85b27c2053d625dabfafb9583796960656b4", "Url": "https://api.github.com/repos/tencentyun/qcloud-sdk-android", "Date": "2018-01-17T14:06:10Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["T.getItemCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (realAdapterItemCount == 0) { return com.omega_r.libs.omegarecyclerview.sticky_header.StickyHeaderDecoration.NO_HEADER_ID; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7841/buggy-version/omegarecyclerviewlibs.src.main.java.com.omega_r.libs.omegarecyclerview.header.HeaderFooterWrapperAdapter.java", "BodyUseAPI": [], "Fixed commit": "48b00bc77c966a26d0d582808fe805704e920003", "Url": "https://api.github.com/repos/Omega-R/OmegaRecyclerView", "Date": "2018-05-17T09:58:22Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFooterPosition(position)) { return stickyHeaderAdapter.getHeaderId((realAdapterItemCount - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7841/buggy-version/omegarecyclerviewlibs.src.main.java.com.omega_r.libs.omegarecyclerview.header.HeaderFooterWrapperAdapter.java", "BodyUseAPI": [], "Fixed commit": "48b00bc77c966a26d0d582808fe805704e920003", "Url": "https://api.github.com/repos/Omega-R/OmegaRecyclerView", "Date": "2018-05-17T09:58:22Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isHeaderPosition(position)) { return stickyHeaderAdapter.getHeaderId(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7841/buggy-version/omegarecyclerviewlibs.src.main.java.com.omega_r.libs.omegarecyclerview.header.HeaderFooterWrapperAdapter.java", "BodyUseAPI": [], "Fixed commit": "48b00bc77c966a26d0d582808fe805704e920003", "Url": "https://api.github.com/repos/Omega-R/OmegaRecyclerView", "Date": "2018-05-17T09:58:22Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mTimePickerFragment.mOpened) { mTask.setDueDate(date); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4028/buggy-version/app.src.main.java.com.austinhlee.android.app1.SecondActivity.java", "BodyUseAPI": [], "Fixed commit": "db3ff583eb016cf17412afb295baca1ca5c120e5", "Url": "https://api.github.com/repos/AustinHLee2/ReminderApp", "Date": "2018-02-02T01:48:12Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stream.getComponentsString()) != null) stream.setComponents(org.csi.yucca.adminapi.delegate.SolrDelegate.mapper.readValue(stream.getComponentsString(), org.csi.yucca.adminapi.model.ComponentJson[].class));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7165/buggy-version/admin-api.src.main.java.org.csi.yucca.adminapi.delegate.SolrDelegate.java", "BodyUseAPI": ["org.csi.yucca.adminapi.model.DettaglioStream.getComponentsString()", "com.fasterxml.jackson.databind.ObjectMapper.readValue(stream.getComponentsString(),java.lang.Class)", "org.csi.yucca.adminapi.model.DettaglioStream.setComponents(org.csi.yucca.adminapi.delegate.SolrDelegate.mapper.readValue(stream.getComponentsString(), org.csi.yucca.adminapi.model.ComponentJson[].class))"], "Fixed commit": "a156741ceccd6c5730b3350424ec778edd25d341", "Url": "https://api.github.com/repos/csipiemonte/yucca-dataservice", "Date": "2018-03-19T15:18:40Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (configuration.get(\"mapreduce.job.inputformat.class\").endsWith(\"DBInputFormat\")) { checkArgument(((configuration.get(DBConfiguration.INPUT_ORDER_BY_PROPERTY)) != null), ((\"Configuration must contain \\\"\" + (org.apache.hadoop.mapreduce.lib.db.DBConfiguration.INPUT_ORDER_BY_PROPERTY)) + \"\\\" when using DBInputFormat\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/959/buggy-version/sdks.java.io.hadoop-input-format.src.main.java.org.apache.beam.sdk.io.hadoop.inputformat.HadoopInputFormatIO.java", "BodyUseAPI": ["org.apache.beam.sdk.io.hadoop.inputformat.HadoopInputFormatIO.Read<K, V>.checkArgument(((configuration.get(DBConfiguration.INPUT_ORDER_BY_PROPERTY)) != null),((\"Configuration must contain \\\"\" + (org.apache.hadoop.mapreduce.lib.db.DBConfiguration.INPUT_ORDER_BY_PROPERTY)) + \"\\\" when using DBInputFormat\"))", "org.apache.hadoop.conf.Configuration.get(DBConfiguration.INPUT_ORDER_BY_PROPERTY)"], "Fixed commit": "3100d909699e88591483a3709684e2a8bd6e00f8", "Url": "https://api.github.com/repos/jglezt/beam", "Date": "2018-04-18T14:42:24Z"},
{"Line": "=>2800", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Settings.Global.getInt(mPhone.getContext().getContentResolver(),Settings.Global.TETHER_DUN_REQUIRED,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dunRequired == 2) && hasTetherApn) { dunRequired = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3772/buggy-version/src.com.android.phone.PhoneInterfaceManager.java", "BodyUseAPI": [], "Fixed commit": "3238aa2fa77c5d0c2bb58c7c6f43dcc3911b4890", "Url": "https://api.github.com/repos/codeaurora-unofficial/packages-services-Telephony", "Date": "2018-07-30T11:20:12Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((name) == \"\") && ((other.name) == \"\")) { return true; }else if ((this.price) != (other.price)) { return false; }else if ((this.amtChocolate) != (other.amtChocolate)) { return false; }else if ((this.amtCoffee) != (other.amtCoffee)) { return false; }else if ((this.amtMilk) != (other.amtMilk)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5277/buggy-version/CoffeeMaker_JUnit_starter.src.edu.ncsu.csc326.coffeemaker.Recipe.java", "BodyUseAPI": [], "Fixed commit": "04ee552b52d029c609d5231742b02ec0b13577af", "Url": "https://api.github.com/repos/JohnPMurray/352Activity1", "Date": "2018-02-03T23:56:46Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.triggerOnMoveToDiscard) { this.triggerOnMoveToDiscard = false; AbstractDungeon.actionManager.addToBottom(new fruitymod.cards.EmptyDeckShuffleAction()); AbstractDungeon.actionManager.addToBottom(new fruitymod.cards.MakeTempCardInDrawPileAction(com.megacrit.cardcrawl.dungeons.AbstractDungeon.player, com.megacrit.cardcrawl.dungeons.AbstractDungeon.player, new com.megacrit.cardcrawl.cards.status.Dazed(), fruitymod.cards.Brainstorm.DAZED_COUNT, true, true)); AbstractDungeon.actionManager.addToBottom(new fruitymod.cards.ShuffleAction(AbstractDungeon.player.drawPile)); AbstractDungeon.actionManager.addToBottom(new fruitymod.cards.ApplyPowerAction(com.megacrit.cardcrawl.dungeons.AbstractDungeon.player, com.megacrit.cardcrawl.dungeons.AbstractDungeon.player, new com.megacrit.cardcrawl.powers.DrawCardNextTurnPower(com.megacrit.cardcrawl.dungeons.AbstractDungeon.player, this.magicNumber), this.magicNumber)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7395/buggy-version/src.main.java.fruitymod.cards.Brainstorm.java", "BodyUseAPI": [], "Fixed commit": "e266c4a3c233a7d8263b4d5a0e60ef184134a8e0", "Url": "https://api.github.com/repos/csobaistvan/FruityMod-StS", "Date": "2018-03-15T14:32:37Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_tree.children.size()) == 0) { return m_tree.parent; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7886/buggy-version/lispinterpreter.src.main.java.com.cs263.app.Interpreter.java", "BodyUseAPI": [], "Fixed commit": "5557535dea36b142b313e37a26016ae3c244f9d8", "Url": "https://api.github.com/repos/zedtang/online-interactive-shell-for-scheme", "Date": "2018-04-22T04:50:04Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.nukkit.event.entity.EntityDamageEvent.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((player.namedTag.getString(\"team\")) != \"\") { ev.setCancelled(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4984/buggy-version/src.main.java.com.mrcoderboy345.teamplugin.MainClass.java", "BodyUseAPI": [], "Fixed commit": "038a47b125fb8366e6ef696e9d456876d5ac2a03", "Url": "https://api.github.com/repos/MrCoderBoy345/TeamPlugin", "Date": "2018-07-08T17:18:59Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pl.coderslab.dao.UserDao.loadAllUsersByGroupId(java.sql.Connection,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (usersInGroup.isEmpty()) { java.lang.String defaultMsg = \"No users to diplay\"; request.setAttribute(\"defaultMsg\", defaultMsg); }else { request.setAttribute(\"usersInGroup\", usersInGroup); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4147/buggy-version/src.pl.coderslab.controller.GroupMembers.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,java.util.ArrayList<pl.coderslab.model.User>)"], "Fixed commit": "685f8668c2528fafde797811ac2ebff2b63e05db", "Url": "https://api.github.com/repos/ireneuszderucki/workshop_no3", "Date": "2018-02-15T14:44:19Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (thingInstance != null) { response.setBody(uk.co.compendiumdev.thingifier.reporting.JsonThing.asJson(thingInstance)).setLocationHeader((((thingInstance.getEntity().getName()) + \"/\") + (thingInstance.getGUID()))).setHeader(uk.co.compendiumdev.thingifier.api.ApiResponse.GUID_HEADER, thingInstance.getGUID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8278/buggy-version/src.main.java.uk.co.compendiumdev.thingifier.api.ApiResponse.java", "BodyUseAPI": ["uk.co.compendiumdev.thingifier.generic.instances.ThingInstance.getGUID()", "uk.co.compendiumdev.thingifier.api.ApiResponse.setBody(uk.co.compendiumdev.thingifier.reporting.JsonThing.asJson(thingInstance))", "thingInstance.getEntity().getName()", "uk.co.compendiumdev.thingifier.generic.instances.ThingInstance.getEntity()", "uk.co.compendiumdev.thingifier.generic.instances.ThingInstance.getGUID()", "response.setBody(uk.co.compendiumdev.thingifier.reporting.JsonThing.asJson(thingInstance)).setLocationHeader((((thingInstance.getEntity().getName()) + \"/\") + (thingInstance.getGUID()))).setHeader(java.lang.String,thingInstance.getGUID())", "uk.co.compendiumdev.thingifier.api.ApiResponse.setLocationHeader((((thingInstance.getEntity().getName()) + \"/\") + (thingInstance.getGUID())))", "uk.co.compendiumdev.thingifier.reporting.JsonThing.asJson(uk.co.compendiumdev.thingifier.generic.instances.ThingInstance)"], "Fixed commit": "dbb966dccf9e76ed1a6209e138f02b506fd70e8e", "Url": "https://api.github.com/repos/eviltester/thingifier", "Date": "2018-07-17T20:48:05Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hive.ql.plan.mapper.PlanMapper.lookupAll(java.lang.Class,org.apache.hadoop.hive.ql.plan.mapper.OperatorRef)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((v.size()) > 0) { return java.util.Optional.of(v.get(0)); }else { return java.util.Optional.empty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/810/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.plan.mapper.SimpleRuntimeStatsSource.java", "BodyUseAPI": ["java.util.Optional.of(v.get(0))", "java.util.List<org.apache.hadoop.hive.ql.plan.OperatorStats>.get(int)"], "Fixed commit": "997ebfe8da2bda6afa2a5bc46327df7c52b63e78", "Url": "https://api.github.com/repos/kgyrtkirk/hive", "Date": "2018-01-29T12:40:19Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tripleGroup.get(0).subjectType) == (ElementType.VARIABLE)) query.append(((\"s AS \" + (Executor.Utils.removeQuestionMark(tripleGroup.get(0).subject))) + \",\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6771/buggy-version/query.PRoST-query.src.main.java.JoinTree.PtNode.java", "BodyUseAPI": ["JoinTree.PtNode.get(int)", "Executor.Utils.removeQuestionMark(tripleGroup.get(0).subject)", "java.lang.StringBuilder.append(((\"s AS \" + (Executor.Utils.removeQuestionMark(tripleGroup.get(0).subject))) + \",\"))"], "Fixed commit": "e3d6b95b460af35fd99fbf888a4a2f4f44c35c93", "Url": "https://api.github.com/repos/tf-dbis-uni-freiburg/PRoST", "Date": "2018-01-17T18:30:49Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((t.subjectType) == (ElementType.CONSTANT)) { whereConditions.add(((\"s='\" + (t.subject)) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6771/buggy-version/query.PRoST-query.src.main.java.JoinTree.PtNode.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(((\"s='\" + (t.subject)) + \"'\"))"], "Fixed commit": "e3d6b95b460af35fd99fbf888a4a2f4f44c35c93", "Url": "https://api.github.com/repos/tf-dbis-uni-freiburg/PRoST", "Date": "2018-01-17T18:30:49Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(JrcConstant.DISABLE_NAME)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (status == null) { status = java.lang.System.getenv(JrcConstant.DISABLE_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3661/buggy-version/jrc-kit.src.main.java.com.PATHojiezhu.jrc.kit.JrcUtil.java", "BodyUseAPI": [], "Fixed commit": "0d8b5aa85b6c54c8cf46c83bbfa7ff05dd536440", "Url": "https://api.github.com/repos/zxj19951029/jrc", "Date": "2018-02-28T02:47:50Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (format == null) { format = org.apache.jena.riot.Lang.CSV; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2071/buggy-version/robot-core.src.main.java.org.obolibrary.robot.QueryOperation.java", "BodyUseAPI": [], "Fixed commit": "ad3a9dea2679032fc638b1392cfebfaba1c0cd60", "Url": "https://api.github.com/repos/ontodev/robot", "Date": "2018-01-17T13:36:56Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (format == null) { format = org.apache.jena.riot.Lang.TTL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2071/buggy-version/robot-core.src.main.java.org.obolibrary.robot.QueryOperation.java", "BodyUseAPI": [], "Fixed commit": "ad3a9dea2679032fc638b1392cfebfaba1c0cd60", "Url": "https://api.github.com/repos/ontodev/robot", "Date": "2018-01-17T13:36:56Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(countyFips.equals(\"\"))) { countyFips = countyFips.substring(0, 5); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9836/buggy-version/FloraFauna.app.src.main.java.com.asg.florafauna.CountyFinder.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "f59d582b5e65f82cf4fa70ba03389a373b9aa339", "Url": "https://api.github.com/repos/rip1ey/Flora", "Date": "2018-03-10T19:54:37Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (gesture == null) { setString(key, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7158/buggy-version/app.src.main.java.com.benny.openlauncher.util.AppSettings.java", "BodyUseAPI": [], "Fixed commit": "230fbcaa11a3835fe71fabda87d1d774349ff644", "Url": "https://api.github.com/repos/OpenLauncherTeam/openlauncher", "Date": "2018-10-08T10:19:46Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (allDayBefore && (!allDay)) { entry.setEnd(entry.getEnd().plusHours(FullCalendar.DEFAULT_TIMED_EVENT_DURATION)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4581/buggy-version/src.main.java.org.vaadin.stefan.fullcalendar.EntryDropEvent.java", "BodyUseAPI": [], "Fixed commit": "877675eeb62f4f9a22fbfa1b35d68e38d247e6e3", "Url": "https://api.github.com/repos/stefanuebe/vaadin_fullcalendar", "Date": "2018-10-24T09:52:03Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6257/buggy-version/src.com.kr.LeetCode.L20.java", "BodyUseAPI": [], "Fixed commit": "ba0bf98ff2831ab6435c8f1c710852ed2a51cf87", "Url": "https://api.github.com/repos/gurongkang/KRAlgorithm", "Date": "2018-08-27T12:05:04Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.getDelimiter()) != null) || (!(this.getDelimiter().isEmpty()))) { str.append(\"\\t DELIMITER [\").append(getDelimiter()).append(\"]\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4458/buggy-version/src.org.avr.fileread.records.BasicRecord.java", "BodyUseAPI": [], "Fixed commit": "ca39b8b3cc52001b4d012638af0da185e3777156", "Url": "https://api.github.com/repos/Aljamis/FileRead", "Date": "2018-01-10T17:44:03Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ele.getAttribute(\"uid\").isEmpty()) throw new org.avr.fileread.exceptions.LayoutException(\"uid attribute is undefined.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4458/buggy-version/src.org.avr.fileread.dom.Navigator.java", "BodyUseAPI": [], "Fixed commit": "ca39b8b3cc52001b4d012638af0da185e3777156", "Url": "https://api.github.com/repos/Aljamis/FileRead", "Date": "2018-01-10T17:44:03Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.data) != null) { data = new byte[this.data.length]; }else { data = new byte[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5234/buggy-version/jxnet-core.src.main.java.com.ardikars.jxnet.SockAddr.java", "BodyUseAPI": [], "Fixed commit": "6c249ec9c106bbb26c0603aa5b8d59291f16bf67", "Url": "https://api.github.com/repos/jxnet/Jxnet", "Date": "2018-02-07T07:08:25Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (args[1].equals(\"-p\")) { personsOnly = true; }else { io.github.agentsoz.syntheticpop.synthesis.App.usage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8837/buggy-version/populationbuilder.synthesis.src.main.java.io.github.agentsoz.syntheticpop.synthesis.App.java", "BodyUseAPI": [], "Fixed commit": "4614713db2b80874576cf774e41c5a14b9ece4fc", "Url": "https://api.github.com/repos/agentsoz/synthetic-population", "Date": "2018-04-09T10:30:01Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.format.DateFormat.is24HourFormat(getContext())) return hour; else return (getSelectedIndex(2)) == 0 ? hour % 12 : hour + 12;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2778/buggy-version/timedatepickers.src.main.java.me.jfenn.timedatepickers.views.LinearTimePickerView.java", "BodyUseAPI": [], "Fixed commit": "9ed8348e0cac0ae351fc29970bb72316fe0ac3be", "Url": "https://api.github.com/repos/fennifith/TimeDatePicker", "Date": "2018-06-18T18:17:27Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((orderRequest.getAmount()) <= (TradeService.MIN_TRADE_AMOUNT)) { throw new com.jordan.ban.exception.TradeException(\"trade amount is to small\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6299/buggy-version/src.main.java.com.jordan.ban.service.OrderService.java", "BodyUseAPI": [], "Fixed commit": "daef146ce08d4c694e06d8032432e47a34fac1ca", "Url": "https://api.github.com/repos/lijijordan/ban", "Date": "2018-07-19T10:10:57Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.bukkit.Bukkit.getPluginManager().getPlugin(\"ProtocolLib\")) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1822/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Util.Effects.ItemMessage.java", "BodyUseAPI": [], "Fixed commit": "0461dd231b6147e27d856cb2ce9fb5b688590680", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2018-03-10T00:46:03Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (trackPosition != null) { xResidual = (trackPosition.x()) - (stereoHitPositionDetector.x()); yResidual = (trackPosition.y()) - (stereoHitPositionDetector.y()); trackResidualsX.add(xResidual); trackResidualsY.add(((float) (yResidual))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8509/buggy-version/tracking.src.main.java.org.hps.recon.tracking.TrackDataDriver.java", "BodyUseAPI": ["hep.physics.vec.Hep3Vector.y()", "hep.physics.vec.Hep3Vector.x()"], "Fixed commit": "b4dda55701c71e3f49f4c6f161545303b4f7083b", "Url": "https://api.github.com/repos/JeffersonLab/hps-java", "Date": "2018-01-07T03:41:00Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user) != null) { user.reload().addOnCompleteListener(new com.google.android.gms.tasks.OnCompleteListener<java.lang.Void>() { @java.lang.Override public void onComplete(@android.support.annotation.NonNull com.google.android.gms.tasks.Task<java.lang.Void> task) { if (task.isSuccessful()) { if (!(user.isEmailVerified())) { com.google.firebase.auth.FirebaseAuth.getInstance().signOut(); user = com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser(); updateDrawerUserInfo(); } } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5148/buggy-version/app.src.main.java.app.learnkannada.com.learnkannadakannadakali.activities.ChooseCourseActivity.java", "BodyUseAPI": [], "Fixed commit": "1717e6304dfb325572e6c812899d52071e63e6b1", "Url": "https://api.github.com/repos/varunam/LearnKannada_KannadaKali", "Date": "2018-08-20T09:24:05Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ignored) setVisibility(com.digitalanalogy.validationcomponents.GONE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2377/buggy-version/validationcomponents.src.main.java.com.digitalanalogy.validationcomponents.ValidatableView.java", "BodyUseAPI": [], "Fixed commit": "ffc534499068cee2de15b9e29aa5a8e0bde14227", "Url": "https://api.github.com/repos/kwameopareasiedu/android-validation-components", "Date": "2018-10-15T17:37:39Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (txt.getText().toString().equals(\"\")) { fact = 0; }else { num = java.lang.Long.parseLong(txt.getText().toString()); for (i = 1; i <= num; i++) { fact = fact * i; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6723/buggy-version/app.src.main.java.com.example.kawshik.facto.MainActivity.java", "BodyUseAPI": ["txt.getText().toString()", "java.lang.Long.parseLong(txt.getText().toString())", "android.widget.EditText.getText()"], "Fixed commit": "e2799be9c13658fc09fa8d6e334d66f93edbc602", "Url": "https://api.github.com/repos/Kawshik/Facto", "Date": "2018-02-24T08:08:59Z"},
{"Line": "=>750", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (expr instanceof com.alibaba.druid.sql.visitor.SQLMethodInvokeExpr) { com.alibaba.druid.sql.visitor.SQLMethodInvokeExpr methodInvokeExpr = ((com.alibaba.druid.sql.visitor.SQLMethodInvokeExpr) (expr)); java.util.List<com.alibaba.druid.sql.visitor.SQLExpr> arguments = methodInvokeExpr.getParameters(); long nameHash = methodInvokeExpr.methodNameHashCode64(); if (nameHash == (FnvHash.Constants.DATE_FORMAT)) { if ((((arguments.size()) == 2) && ((arguments.get(0)) instanceof com.alibaba.druid.sql.visitor.SQLName)) && ((arguments.get(1)) instanceof com.alibaba.druid.sql.visitor.SQLCharExpr)) { return getColumn(arguments.get(0)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/173/buggy-version/src.main.java.com.alibaba.druid.sql.visitor.SchemaStatVisitor.java", "BodyUseAPI": [], "Fixed commit": "d6812d290e5d4431e1a065212f237ab837b3a765", "Url": "https://api.github.com/repos/qxo/druid", "Date": "2018-03-22T13:53:08Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((query == null) || (query.equals(\"\"))) { return java.util.Optional.empty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1231/buggy-version/src.main.java.com.ecfront.kwe.KeyWordExtract.java", "BodyUseAPI": [], "Fixed commit": "b57ca82661557f44f8c20fb23e8c567f30546bc3", "Url": "https://api.github.com/repos/gudaoxuri/keyword-extract", "Date": "2018-04-19T06:49:17Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Canvas.getHeight()", "Canvas.getWidth()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (LENGTH < WIDTH) { Canvas.length = getHeight(); Canvas.width = ratio * (getHeight()); }else { Canvas.width = getWidth(); Canvas.length = ratio * (getWidth()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8520/buggy-version/src.Canvas.java", "BodyUseAPI": [], "Fixed commit": "c8f71aad31f06c56ad5014ebca929562dd22fcbe", "Url": "https://api.github.com/repos/shagunBose/Mapping-Program", "Date": "2018-04-27T02:33:15Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (r.inside) { result.add(new double[]{ edgeID, r.y, r.x, gpxPoint.getLat(), gpxPoint.getLon(), (gpxPoint.getTime()) / 1000 }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4267/buggy-version/src.main.java.edu.buaa.ACTMapMatching.java", "BodyUseAPI": ["java.util.List<double[]>.add(double[])"], "Fixed commit": "2ba6179abc1e942ea2b52053b508c506e5ce4e11", "Url": "https://api.github.com/repos/songjinghe/map-matching-matlab", "Date": "2018-07-14T03:55:23Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["clearcontrol.core.math.interpolation.LinearInterpolationTable.getFloorRow(double)", "clearcontrol.core.math.interpolation.LinearInterpolationTable.getCeilRow(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((ceilRow == null) && (floorRow != null)) { return floorRow.getY(pColumnIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4678/buggy-version/src.clearcontrol.core.math.interpolation.LinearInterpolationTable.java", "BodyUseAPI": ["clearcontrol.core.math.interpolation.Row.getY(int)"], "Fixed commit": "637d84951ce752287e5e10e1ba62fefbce66c7cc", "Url": "https://api.github.com/repos/ClearControl/clearcontrol", "Date": "2018-04-01T19:45:44Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["clearcontrol.core.math.interpolation.LinearInterpolationTable.getFloorRow(double)", "clearcontrol.core.math.interpolation.LinearInterpolationTable.getCeilRow(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((ceilRow != null) && (floorRow == null)) { return ceilRow.getY(pColumnIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4678/buggy-version/src.clearcontrol.core.math.interpolation.LinearInterpolationTable.java", "BodyUseAPI": ["clearcontrol.core.math.interpolation.Row.getY(int)"], "Fixed commit": "637d84951ce752287e5e10e1ba62fefbce66c7cc", "Url": "https://api.github.com/repos/ClearControl/clearcontrol", "Date": "2018-04-01T19:45:44Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["clearcontrol.core.math.interpolation.LinearInterpolationTable.getFloorRow(double)", "clearcontrol.core.math.interpolation.LinearInterpolationTable.getCeilRow(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((ceilRow == null) && (floorRow == null)) { warning(((\"interpolation of position \" + pX) + \" failed.\")); return pX; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4678/buggy-version/src.clearcontrol.core.math.interpolation.LinearInterpolationTable.java", "BodyUseAPI": [], "Fixed commit": "637d84951ce752287e5e10e1ba62fefbce66c7cc", "Url": "https://api.github.com/repos/ClearControl/clearcontrol", "Date": "2018-04-01T19:45:44Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getContentResolver().query(LocationEntry.CONTENT_URI,java.lang.String[],<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cursor.getCount()) <= 0) { android.widget.Toast.makeText(this, \"Database is empty.\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5934/buggy-version/app.src.main.java.com.example.android.datacollection.DataEntry.java", "BodyUseAPI": [], "Fixed commit": "60e72c230c98afebc627e3554e900fa92137cca1", "Url": "https://api.github.com/repos/khash021/data-collection", "Date": "2018-02-23T07:00:05Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (roomTypes.contains(item.getRoomType().toString())) { if ((reservarepo.findByIdHabitacion(item.getId())) == null) { result.add(new es.upm.miw.dtos.RoomDto(item.getHotelName(), item.getCharacteristics(), item.getPrice(), item.getRoomType(), item.getId())); }else { java.util.List<es.upm.miw.documents.core.Reserva> reservaCollection = reservarepo.findByIdHabitacion(item.getId()); for (es.upm.miw.documents.core.Reserva reserva : reservaCollection) { if ((reserva.getFecha().equals(startDate)) && (reserva.getFechaSalida().equals(endDate))) { if (((reserva.getHora().compareTo(endHour)) > 0) || ((reserva.getHoraSalida().compareTo(startHour)) < 0)) { result.add(new es.upm.miw.dtos.RoomDto(item.getHotelName(), item.getCharacteristics(), item.getPrice(), item.getRoomType(), item.getId())); } }else { result.add(new es.upm.miw.dtos.RoomDto(item.getHotelName(), item.getCharacteristics(), item.getPrice(), item.getRoomType(), item.getId())); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9251/buggy-version/src.main.java.es.upm.miw.controllers.RoomController.java", "BodyUseAPI": ["es.upm.miw.documents.core.Room.getId()", "es.upm.miw.documents.core.Room.getId()", "es.upm.miw.repositories.core.ReservaRepository.findByIdHabitacion(item.getId())", "es.upm.miw.documents.core.Room.getRoomType()", "es.upm.miw.repositories.core.ReservaRepository.findByIdHabitacion(item.getId())", "es.upm.miw.documents.core.Room.getHotelName()", "es.upm.miw.documents.core.Room.getRoomType()", "es.upm.miw.documents.core.Room.getId()", "java.util.ArrayList<es.upm.miw.dtos.RoomDto>.add(es.upm.miw.dtos.RoomDto)", "es.upm.miw.documents.core.Room.getCharacteristics()", "java.util.ArrayList<es.upm.miw.dtos.RoomDto>.add(es.upm.miw.dtos.RoomDto)", "es.upm.miw.documents.core.Room.getPrice()", "es.upm.miw.documents.core.Room.getPrice()", "es.upm.miw.documents.core.Room.getPrice()", "es.upm.miw.documents.core.Room.getHotelName()", "es.upm.miw.documents.core.Room.getRoomType()", "es.upm.miw.documents.core.Room.getCharacteristics()", "es.upm.miw.documents.core.Room.getCharacteristics()", "java.util.ArrayList<es.upm.miw.dtos.RoomDto>.add(es.upm.miw.dtos.RoomDto)", "es.upm.miw.documents.core.Room.getId()", "es.upm.miw.documents.core.Room.getId()", "es.upm.miw.documents.core.Room.getHotelName()"], "Fixed commit": "4926d05e9fc71ca1e1c915fcced228e686be938e", "Url": "https://api.github.com/repos/borja94/practica-mdl-spring", "Date": "2018-05-02T11:30:00Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getPointerData().getCurrentPosition()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (position == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6808/buggy-version/graphics-by-opengl-j2se.src.main.java.com.nucleus.scene.J2SENodeInputListener.java", "BodyUseAPI": [], "Fixed commit": "975783a91573d81b396d3b1e4c033892d4c47b2b", "Url": "https://api.github.com/repos/rsahlin/graphics-by-opengl", "Date": "2018-03-22T09:58:40Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (in.swifiic.plat.app.suta.andi.mgmt.TrackService.ctx.shouldCreateLogFile()) { java.lang.String fileName = in.swifiic.plat.app.suta.andi.mgmt.TrackService.ctx.saveLogs(); if (null != fileName) { handleLogStreamEndAndFileUpload(fileName); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3329/buggy-version/android.plat.suta.app.src.main.java.in.swifiic.plat.app.suta.andi.mgmt.TrackService.java", "BodyUseAPI": ["in.swifiic.plat.app.suta.andi.mgmt.TAContext.saveLogs()"], "Fixed commit": "a38c414b4e39e4f7ed8b4f5cb154fe3c4bfce773", "Url": "https://api.github.com/repos/swifiic/repo", "Date": "2018-04-27T09:59:08Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((split.length) == 2) { AnkiHelperApplication.currentWord.germanWord = (((split[0]) + \" \") + (split[1].substring(0, 1).toUpperCase())) + (split[1].substring(1)); }else { AnkiHelperApplication.currentWord.germanWord = split[0].toUpperCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4963/buggy-version/app.src.main.java.levy.barak.ankihelper.vocabulary_screen.GoogleTranslateFragment.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.toUpperCase()", "java.lang.String.toUpperCase()", "java.lang.String.substring(int,int)"], "Fixed commit": "122380066cfd140e0e0aa75def2e55acb31e9733", "Url": "https://api.github.com/repos/baraklevy20/anki-helper", "Date": "2018-02-09T17:37:03Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.O)) { layout_parms = WindowManager.LayoutParams.TYPE_APPLICATION_OVERLAY; }else { layout_parms = WindowManager.LayoutParams.TYPE_PHONE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1614/buggy-version/app.src.main.java.com.example.mahmoudsalaheldien.checkconnection.FloatingViewService.java", "BodyUseAPI": [], "Fixed commit": "5d8010e28a4de89fd053df984ff2a35a11960737", "Url": "https://api.github.com/repos/mahmoudsalah37/Checkconnection", "Date": "2018-10-10T12:31:53Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.dangernoodle.grt.steps.AddTeamsAndCollaborators.getTeam(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ghTeam == null) { logger.warn(\"failed to find team using slug [{}]\", team); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9854/buggy-version/core.src.main.java.io.dangernoodle.grt.steps.AddTeamsAndCollaborators.java", "BodyUseAPI": [], "Fixed commit": "b60a08f6e41ea08d49e62979b99be764285a202c", "Url": "https://api.github.com/repos/dangernoodle-io/github-repository-tools", "Date": "2018-05-06T01:56:36Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.dangernoodle.grt.steps.AddTeamsAndCollaborators.getUser(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ghUser == null) { logger.warn(\"failed to find user [{}]\", user); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9854/buggy-version/core.src.main.java.io.dangernoodle.grt.steps.AddTeamsAndCollaborators.java", "BodyUseAPI": [], "Fixed commit": "b60a08f6e41ea08d49e62979b99be764285a202c", "Url": "https://api.github.com/repos/dangernoodle-io/github-repository-tools", "Date": "2018-05-06T01:56:36Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.xandy.netspeed.NetService.mHasStartHandel)) { mHandler.postDelayed(mRunnable, 0); com.xandy.netspeed.NetService.mHasStartHandel = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1339/buggy-version/src.com.xandy.netspeed.NetService.java", "BodyUseAPI": [], "Fixed commit": "55551c149c7e42e560d827c4e2d9310fcb57ab1f", "Url": "https://api.github.com/repos/XanderWang/NetSpeed", "Date": "2015-05-05T12:21:15Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getContext()) != null) new fr.gouv.etalab.mastodon.asynctasks.RetrieveNotificationsAsyncTask(getContext(), false, account, null, this).executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8677/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.jobs.NotificationsSyncJob.java", "BodyUseAPI": [], "Fixed commit": "57cd1d8cb484c185b975455e9f60be295268cc1c", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2018-01-07T07:36:22Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getContext()) != null) new fr.gouv.etalab.mastodon.asynctasks.RetrieveHomeTimelineServiceAsyncTask(getContext(), account, max_id, this).executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8677/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.jobs.HomeTimelineSyncJob.java", "BodyUseAPI": [], "Fixed commit": "57cd1d8cb484c185b975455e9f60be295268cc1c", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2018-01-07T07:36:22Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (response.equals(\"Confirm\")) { message = deleteUser(actionUser, targetUser); }else if (response.equals(\"Cancel\")) { message = \"Delete cancelled\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7822/buggy-version/src.com.prenda.servlet.UserModify.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "6d220004c2474b9bc51a0b312254b6fcb760a2c4", "Url": "https://api.github.com/repos/joebertj/prenda", "Date": "2018-03-25T16:19:14Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.servegame.bl4de.Animation.model.Animation.getFrame(this.animation.getStartFrameIndex())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (frameOptional.isPresent()) { startFrameName = frameOptional.get().getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3007/buggy-version/src.main.java.com.servegame.bl4de.Animation.command.animation.InfoAnimation.java", "BodyUseAPI": ["frameOptional.get().getName()", "java.util.Optional<com.servegame.bl4de.Animation.model.Frame>.get()"], "Fixed commit": "b4d5771d94349d5083b9e533ed50f11451d51d58", "Url": "https://api.github.com/repos/TheCahyag/MinecraftAnimation", "Date": "2018-01-09T04:43:15Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(board.isRunning())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8513/buggy-version/src.main.java.com.happergame.controllers.BoardController.java", "BodyUseAPI": [], "Fixed commit": "f8f0217327fdc5fa547c7cde72ae24be19a30245", "Url": "https://api.github.com/repos/sandrt/happergame", "Date": "2018-06-01T20:39:48Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (personToEdit.getType().value.equals(\"Lead\")) { editedPerson = new seedu.address.model.person.Lead(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(), personToEdit.getAddress(), remark, personToEdit.getTags()); }else { editedPerson = new seedu.address.model.person.Contact(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(), personToEdit.getAddress(), remark, personToEdit.getTags()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1755/buggy-version/src.main.java.seedu.address.logic.commands.RemarkCommand.java", "BodyUseAPI": ["seedu.address.model.person.Person.getPhone()", "seedu.address.model.person.Person.getName()", "seedu.address.model.person.Person.getPhone()", "seedu.address.model.person.Person.getEmail()", "seedu.address.model.person.Person.getAddress()", "seedu.address.model.person.Person.getTags()", "seedu.address.model.person.Person.getName()", "seedu.address.model.person.Person.getEmail()", "seedu.address.model.person.Person.getAddress()", "seedu.address.model.person.Person.getTags()"], "Fixed commit": "5d75b0355b6c5d005004bf73117c40d8cf1c76e9", "Url": "https://api.github.com/repos/zhuleyan/main", "Date": "2018-03-27T09:32:06Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i2 == 0) { new com.jhobot.handle.Messages(e.getCHannel()).sendError(\"Cannot use 0!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7209/buggy-version/java.src.com.jhobot.commands.fun.Random.java", "BodyUseAPI": [], "Fixed commit": "8f51bacdd0e137c19059f5f6025e5337aa2c9871", "Url": "https://api.github.com/repos/woahoverflow/Chad", "Date": "2018-09-28T14:05:54Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operand2 == 0) { java.lang.System.out.println(\"Error\"); }else { return operand1 / operand2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6108/buggy-version/app.src.main.java.com.evan.pocketcalcplus.RegexParser.java", "BodyUseAPI": [], "Fixed commit": "306ab612c08888ae00cf382164d232b439767525", "Url": "https://api.github.com/repos/MasterEric/CSI2999-2018WIN-Calculator", "Date": "2018-02-12T22:28:25Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(htPlayer.getPlayer().isOnline())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8178/buggy-version/src.main.java.cz.HackerGamingCZ.HackerTools.teams.TeamManager.java", "BodyUseAPI": [], "Fixed commit": "323ad51e051c451cdc51ec5b799cde2945af32ff", "Url": "https://api.github.com/repos/TomasCZE7/HackerTools", "Date": "2018-07-03T18:14:14Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (foundUser == false) { error.setText(getResources().getString(R.string.invalidlogin)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3787/buggy-version/FinalProject.app.src.main.java.com.bignerdranch.android.finalproject.Login.java", "BodyUseAPI": [], "Fixed commit": "0d7d6f22d58fddc0f8561f2a34aa393708a5538d", "Url": "https://api.github.com/repos/ShaneSharareh/cs645", "Date": "2018-05-09T20:12:20Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(iter.hasNext())) { atEOF = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2861/buggy-version/src.main.java.io.anserini.collection.CarCollection.java", "BodyUseAPI": [], "Fixed commit": "2ad5d920230b813e0571a907ca1ec9c20f3cb52d", "Url": "https://api.github.com/repos/lukuang/Anserini", "Date": "2018-08-23T02:24:50Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (defaultSaveFileLocation.exists()) game.setSaveFileLocation(defaultSaveFileLocation);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6659/buggy-version/src.com.speedsouls.organizer.data.OrganizerManager.java", "BodyUseAPI": ["com.speedsouls.organizer.content.Game.setSaveFileLocation(java.io.File)"], "Fixed commit": "a6d00986041294842004e7df64e9c0eb27579127", "Url": "https://api.github.com/repos/Kahmul/SpeedSouls-Save-Organizer", "Date": "2018-03-03T19:09:32Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.ivg2.foodapp.FoodItemRepository.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((food.getImageURL()) == null) { com.bumptech.glide.Glide.with(context).load(R.drawable.fooditemplaceholder).into(viewHolder.foodImage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2199/buggy-version/app.src.main.java.me.ivg2.foodapp.FridgeGridAdapter.java", "BodyUseAPI": [], "Fixed commit": "197516e77005a31b751604013c1bfc0646affa12", "Url": "https://api.github.com/repos/TheOscars2/FoodApp", "Date": "2018-07-27T17:50:09Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(migrating)) { setReadType(OperationReadType.DATA); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8339/buggy-version/src.main.java.net.spy.memcached.protocol.ascii.BTreeGetBulkOperationImpl.java", "BodyUseAPI": [], "Fixed commit": "149f1776697f9a2ca4662425a5da51f3a61e66ed", "Url": "https://api.github.com/repos/MinWooJin/arcus-java-client", "Date": "2018-04-27T00:12:48Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yermilov.dao.UserDAO.findByEmail(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (user == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9844/buggy-version/src.main.java.com.yermilov.services.LoginService.java", "BodyUseAPI": [], "Fixed commit": "417487f7ed3503d2482a367c45b613f775ddb755", "Url": "https://api.github.com/repos/olexandryermilov/taxiproject", "Date": "2018-01-22T01:02:44Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yermilov.dao.AdminDAO.findByEmail(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (admin == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9844/buggy-version/src.main.java.com.yermilov.admin.service.LoginService.java", "BodyUseAPI": [], "Fixed commit": "417487f7ed3503d2482a367c45b613f775ddb755", "Url": "https://api.github.com/repos/olexandryermilov/taxiproject", "Date": "2018-01-22T01:02:44Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event instanceof com.ibm.ws.logging.data.GenericData) { return com.ibm.ws.logging.collector.CollectorJsonUtils1_1.jsonifyGCEvent((-1), wlpUserDir, serverName, serverHostName, CollectorConstants.GC_EVENT_TYPE, event, tags); }else { return com.ibm.ws.logging.collector.CollectorJsonUtils1_1.jsonifyGCEvent(serverHostName, wlpUserDir, serverName, ((com.ibm.ws.health.center.data.HCGCData) (event)), tags); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5163/buggy-version/dev.com.ibm.ws.logging.src.com.ibm.ws.logging.collector.CollectorJsonUtils1_1.java", "BodyUseAPI": ["com.ibm.ws.logging.collector.CollectorJsonUtils1_1.jsonifyGCEvent(int,java.lang.String,java.lang.String,java.lang.String,CollectorConstants.GC_EVENT_TYPE,java.lang.Object,java.lang.String[])"], "Fixed commit": "1f519550eabfe4a500227905c4087e82b249c3ed", "Url": "https://api.github.com/repos/sebratton/open-liberty", "Date": "2018-01-23T15:24:44Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event instanceof com.ibm.ws.logging.data.GenericData) { return com.ibm.ws.logging.collector.CollectorJsonUtils.jsonifyGCEvent((-1), wlpUserDir, serverName, serverHostName, CollectorConstants.GC_EVENT_TYPE, event, tags); }else { return com.ibm.ws.logging.collector.CollectorJsonUtils.jsonifyGCEvent(serverHostName, wlpUserDir, serverName, ((com.ibm.ws.health.center.data.HCGCData) (event)), tags); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5163/buggy-version/dev.com.ibm.ws.logging.src.com.ibm.ws.logging.collector.CollectorJsonUtils.java", "BodyUseAPI": ["com.ibm.ws.logging.collector.CollectorJsonUtils.jsonifyGCEvent(int,java.lang.String,java.lang.String,java.lang.String,CollectorConstants.GC_EVENT_TYPE,java.lang.Object,java.lang.String[])"], "Fixed commit": "1f519550eabfe4a500227905c4087e82b249c3ed", "Url": "https://api.github.com/repos/sebratton/open-liberty", "Date": "2018-01-23T15:24:44Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (session.getSOURCE().equals(am.main.data.enums.impl.AMS.AM_LOGGER)) { org.apache.logging.log4j.Logger logger = loggers.get(logData.getPHASE()); logger = (logger == null) ? loggers.get(am.main.api.APP_NAME) : logger; logData.logMsg(session.getMessageHandler(), this, (logger != null ? logger : FAILURE_LOGGER)); if (logger == null) throw new java.lang.IllegalStateException(\"Invalid Logger Selected\"); }else { try { jmsManager.get().sendObjMessage(session, AMQ.FILE_LOG, logData); } catch (java.lang.Exception exc) { logData.logMsg(session.getMessageHandler(), this, FAILURE_LOGGER); FAILURE_LOGGER.error(exc); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3399/buggy-version/AM-Resources.src.main.java.am.main.api.AppLogger.java", "BodyUseAPI": ["am.main.session.AppSession.getMessageHandler()", "jmsManager.get().sendObjMessage(am.main.session.AppSession,AMQ.FILE_LOG,am.main.data.dto.logger.AMFunLogData)", "am.main.session.AppSession.getMessageHandler()", "am.main.data.dto.logger.AMFunLogData.logMsg(session.getMessageHandler(),am.main.api.AppLogger,org.apache.logging.log4j.Logger)", "am.main.data.dto.logger.AMFunLogData.logMsg(session.getMessageHandler(),am.main.api.AppLogger,(logger != null ? logger : FAILURE_LOGGER))"], "Fixed commit": "5e2b42b07fd43382cfa5223dd56ddc861e91a88f", "Url": "https://api.github.com/repos/AhmedMater/AM", "Date": "2018-02-13T01:32:34Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((w.run) == true) && ((w.gameOver) == false)) && ((w.gamePaused) == false)) { if ((w.shootTimer) >= (w.player.getWeaponCooldown())) { w.shootBullet(); w.shootTimer = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7805/buggy-version/src.worldwark.KeyboardControls.java", "BodyUseAPI": ["w.player.getWeaponCooldown()", "worldwark.WorldWarK.shootBullet()"], "Fixed commit": "3461bd06c959baf5d3d6a10d857bbb7a892e8a56", "Url": "https://api.github.com/repos/jackisrong/WorldWarK", "Date": "2018-05-26T01:38:56Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((xcor > (Woo.f.size())) || (ycor > (Woo.f.size()))) java.lang.System.out.println(\"\\nThis plot of land does not exist in the world!\"); else if ((Woo.f.getCucumber(xcor, ycor).equals(\"X\")) || (Woo.f.getCucumber(xcor, ycor).equals(\"O\"))) java.lang.System.out.println(\"\\nYou don\\'t have anything planted here!\"); else { Woo.u.setMoney(((Woo.u.getMoney()) + (Woo.f.harvest(xcor, ycor)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5495/buggy-version/Woo.java", "BodyUseAPI": ["Woo.f.getCucumber(xcor, ycor).equals(java.lang.String)", "Farm.harvest(int,int)", "Farm.getCucumber(int,int)", "Woo.f.getCucumber(xcor, ycor).equals(java.lang.String)", "User.setMoney(((Woo.u.getMoney()) + (Woo.f.harvest(xcor, ycor))))", "Farm.getCucumber(int,int)"], "Fixed commit": "e01b876e17ef23c28243d180c6054c66abb95613", "Url": "https://api.github.com/repos/raywu6/LosPepinos", "Date": "2018-01-16T04:08:37Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["zz.interactivecalculatorstage2.maths.Calculation.Block.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((prevBlockValue.equals(\"0\")) && (input.equals(\"0\"))) { input = \"\"; }else if (prevBlockValue.equals(\"0\")) { prevBlockValue = input; input = \"\"; }else if ((prevBlockValue.contains(Func.DECIMAL.getValue())) && (input.equals(Func.DECIMAL.getValue()))) { input = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5078/buggy-version/app.src.main.java.zz.interactivecalculatorstage2.maths.Calculation.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "916186139c05ffc9b019f57630f7789aab1bee28", "Url": "https://api.github.com/repos/ankit-learns/interactive-calculator-stage2", "Date": "2018-02-13T06:37:26Z"},
{"Line": "=>555", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.faces.component.UIComponent.getValueExpression(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (ve != null) { java.lang.Class<?> valType = ve.getType(context.getELContext()); if ((valType != null) && (!(valType.isPrimitive()))) { return context.getApplication().createConverter(valType); }else if ((valType != null) && (value instanceof java.lang.String)) { return context.getApplication().createConverter(valType); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5996/buggy-version/src.main.java.net.bootsfaces.render.CoreRenderer.java", "BodyUseAPI": ["javax.el.ValueExpression.getType(context.getELContext())"], "Fixed commit": "926de371e9984ae87c5e456bed32bc2156b35410", "Url": "https://api.github.com/repos/TheCoder4eu/BootsFaces-OSP", "Date": "2018-07-24T18:43:40Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.caliog.Rolecraft.XMechanics.Utils.Reflect.isBukkitMethod(\"org.bukkit.event.inventory.InventoryClickEvent\", \"getClickedInventory\", new java.lang.Class<?>[0])) { inv = event.getClickedInventory(); }else { inv = event.getInventory(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4770/buggy-version/src.org.caliog.Rolecraft.XMechanics.Listeners.VillagerListener.java", "BodyUseAPI": [], "Fixed commit": "ca8c13edcf10b46cf385e2263f4a514e370c51e4", "Url": "https://api.github.com/repos/caliog/Rolecraft", "Date": "2018-10-19T13:47:29Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index[0]) != 0) output[2] = com.company.Board.pieces[((index[1]) + row)][((index[0]) - 1)];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6869/buggy-version/chess.src.com.company.Board.java", "BodyUseAPI": [], "Fixed commit": "5a2db5f0a1b714ddeb6060c94ee1ffde97201c7b", "Url": "https://api.github.com/repos/PicassoEEA/Chess", "Date": "2018-03-25T15:48:12Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index[0]) != 8) output[0] = com.company.Board.pieces[((index[1]) + row)][((index[0]) + 1)];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6869/buggy-version/chess.src.com.company.Board.java", "BodyUseAPI": [], "Fixed commit": "5a2db5f0a1b714ddeb6060c94ee1ffde97201c7b", "Url": "https://api.github.com/repos/PicassoEEA/Chess", "Date": "2018-03-25T15:48:12Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (extras != null) { viewMap.putExtras(extras); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3748/buggy-version/app.src.main.java.com.example.shivad.myapplication.ShelterActivity.java", "BodyUseAPI": ["android.content.Intent.putExtras(android.os.Bundle)"], "Fixed commit": "45a2e42c8f2de263c053a02ea4ffc4b4c21ebbc9", "Url": "https://api.github.com/repos/joel99/ShelterMe", "Date": "2018-03-27T01:23:25Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((section.get(\"command\")) != null) consoleRunCommand = ((java.util.List<java.util.HashMap<java.lang.String, java.lang.String>>) (section.get(\"commands\"))); else consoleRunCommand = new java.util.ArrayList<>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2444/buggy-version/src.one.lindegaard.MobHunting.rewards.RewardData.java", "BodyUseAPI": ["org.bukkit.configuration.ConfigurationSection.get(java.lang.String)"], "Fixed commit": "bb0b182eb39a16be52ed85dca96a6211e0990ddc", "Url": "https://api.github.com/repos/Rocologo/MobHunting", "Date": "2018-03-04T09:27:03Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type.startsWith(\"sat_\")) && loop) format = \"gif\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/572/buggy-version/app.src.main.java.com.danhasting.radar.fragments.RadarFragment.java", "BodyUseAPI": [], "Fixed commit": "a23a05a705f9f1c67c15247a25f1cfd10140af89", "Url": "https://api.github.com/repos/dh4/WeatherRadar", "Date": "2018-04-20T17:50:15Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((expected.val) != (result.val)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3478/buggy-version/src.main.java.me.ryan.leetcode.Assert.java", "BodyUseAPI": [], "Fixed commit": "731b167b5297bcfc124addee8e21df52816a8f3a", "Url": "https://api.github.com/repos/mogongzi/leetcode-algorithms-answers", "Date": "2018-01-05T05:49:34Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size) == 1) { head = null; }else { head.pre.next = head.next; head.next.pre = head.pre; head = head.next; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5868/buggy-version/src.main.java.com.xinyue.basic.datastructure.linear.CircleLinkedList.java", "BodyUseAPI": [], "Fixed commit": "64b7f2132ee24e88bb6cd3a33c8bd9f6d0c7811d", "Url": "https://api.github.com/repos/ZhangXinyue018/algo-learning", "Date": "2018-01-25T10:22:40Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.harush.zitoon.quoridor.core.logic.BoardPiece.getX()", "com.harush.zitoon.quoridor.core.logic.BoardPiece.getY()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (isValidCoordinate(currentX, currentY)) { for (int i = 0; i < (boardPiece.getLength()); i++) { boardBoxes[(currentX + i)][currentY].setBoardPiece(null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7967/buggy-version/quoridorcore.src.main.java.com.harush.zitoon.quoridor.core.logic.BoardLogic.java", "BodyUseAPI": ["boardBoxes[(currentX + i)][currentY].setBoardPiece(<nulltype>)"], "Fixed commit": "50b4e97cd70f1a0d110e7d3bbc19f25e9b06f66f", "Url": "https://api.github.com/repos/maorharush/Quoridor", "Date": "2018-08-08T14:02:45Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.harush.zitoon.quoridor.core.logic.BoardPiece.getY()", "com.harush.zitoon.quoridor.core.logic.BoardPiece.getX()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isValidCoordinate(currentX, currentY)) { for (int i = 0; i < (boardPiece.getLength()); i++) { boardBoxes[boardPiece.getX()][((boardPiece.getY()) + i)].setBoardPiece(null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7967/buggy-version/quoridorcore.src.main.java.com.harush.zitoon.quoridor.core.logic.BoardLogic.java", "BodyUseAPI": [], "Fixed commit": "50b4e97cd70f1a0d110e7d3bbc19f25e9b06f66f", "Url": "https://api.github.com/repos/maorharush/Quoridor", "Date": "2018-08-08T14:02:45Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clause == null) { return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1107/buggy-version/src.com.yeamy.sql.statement.Clause.java", "BodyUseAPI": [], "Fixed commit": "004ee55f62e2bc99e6066fd9125ee2716d848245", "Url": "https://api.github.com/repos/Yeamy/SqlBuilder", "Date": "2018-06-12T09:36:08Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clause == null) { return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1107/buggy-version/src.com.yeamy.sql.statement.Clause.java", "BodyUseAPI": [], "Fixed commit": "004ee55f62e2bc99e6066fd9125ee2716d848245", "Url": "https://api.github.com/repos/Yeamy/SqlBuilder", "Date": "2018-06-12T09:36:08Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLava.isEmpty()) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6425/buggy-version/src.de.codingair.warpsystem.spigot.api.blocks.listeners.RuleListener.java", "BodyUseAPI": [], "Fixed commit": "781326b7750839410a899ab86a52dfd1a6fe501f", "Url": "https://api.github.com/repos/CodingAir/WarpSystem", "Date": "2018-09-07T14:15:46Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (primaryColumnIndex == (-1)) { primaryColumnIndex = cursor.getColumnIndex(\"COALESCE(isPrimary, ownerAccount = account_name)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4686/buggy-version/src.android.nl.xservices.plugins.accessor.AbstractCalendarAccessor.java", "BodyUseAPI": [], "Fixed commit": "68545063f168daa32af504ae45dc2c87a1b3c970", "Url": "https://api.github.com/repos/NikolaBalaban/Calendar-PhoneGap-Plugin", "Date": "2018-08-27T10:11:58Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.getPlayerName(networkPlayerInfo).equals(net.simplyrin.flawlessnick.FlawlessNick.getInstance().getMinecraft().thePlayer.getName())) { if (net.simplyrin.flawlessnick.FlawlessNick.getInstance().getNickManager().isNick()) { int k = this.mc.fontRendererObj.getStringWidth(net.simplyrin.flawlessnick.FlawlessNick.getInstance().getNickManager().getNickName()); i = java.lang.Math.max(i, k); if ((scoreObjectiveIn != null) && ((scoreObjectiveIn.getRenderType()) != (IScoreObjectiveCriteria.EnumRenderType.HEARTS))) { k = this.mc.fontRendererObj.getStringWidth((\" \" + (scoreboardIn.getValueFromObjective(networkPlayerInfo.getGameProfile().getName(), scoreObjectiveIn).getScorePoints()))); j = java.lang.Math.max(j, k); } }else { int k = this.mc.fontRendererObj.getStringWidth(this.getPlayerName(networkPlayerInfo)); i = java.lang.Math.max(i, k); if ((scoreObjectiveIn != null) && ((scoreObjectiveIn.getRenderType()) != (IScoreObjectiveCriteria.EnumRenderType.HEARTS))) { k = this.mc.fontRendererObj.getStringWidth((\" \" + (scoreboardIn.getValueFromObjective(networkPlayerInfo.getGameProfile().getName(), scoreObjectiveIn).getScorePoints()))); j = java.lang.Math.max(j, k); } } }else { int k = this.mc.fontRendererObj.getStringWidth(this.getPlayerName(networkPlayerInfo)); i = java.lang.Math.max(i, k); if ((scoreObjectiveIn != null) && ((scoreObjectiveIn.getRenderType()) != (IScoreObjectiveCriteria.EnumRenderType.HEARTS))) { k = this.mc.fontRendererObj.getStringWidth((\" \" + (scoreboardIn.getValueFromObjective(networkPlayerInfo.getGameProfile().getName(), scoreObjectiveIn).getScorePoints()))); j = java.lang.Math.max(j, k); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3513/buggy-version/src.main.java.net.simplyrin.flawlessnick.utils.CustomTabOverlay.java", "BodyUseAPI": ["scoreboardIn.getValueFromObjective(networkPlayerInfo.getGameProfile().getName(), scoreObjectiveIn).getScorePoints()", "scoreboardIn.getValueFromObjective(networkPlayerInfo.getGameProfile().getName(), scoreObjectiveIn).getScorePoints()", "net.minecraft.scoreboard.Scoreboard.getValueFromObjective(networkPlayerInfo.getGameProfile().getName(),net.minecraft.scoreboard.ScoreObjective)", "this.mc.fontRendererObj.getStringWidth((\" \" + (scoreboardIn.getValueFromObjective(networkPlayerInfo.getGameProfile().getName(), scoreObjectiveIn).getScorePoints())))", "this.mc.fontRendererObj.getStringWidth(this.getPlayerName(networkPlayerInfo))", "networkPlayerInfo.getGameProfile().getName()", "net.simplyrin.flawlessnick.utils.CustomTabOverlay.getPlayerName(net.minecraft.client.network.NetworkPlayerInfo)", "net.minecraft.client.network.NetworkPlayerInfo.getGameProfile()", "net.simplyrin.flawlessnick.utils.CustomTabOverlay.getPlayerName(net.minecraft.client.network.NetworkPlayerInfo)", "net.minecraft.scoreboard.Scoreboard.getValueFromObjective(networkPlayerInfo.getGameProfile().getName(),net.minecraft.scoreboard.ScoreObjective)", "networkPlayerInfo.getGameProfile().getName()", "networkPlayerInfo.getGameProfile().getName()", "net.minecraft.scoreboard.Scoreboard.getValueFromObjective(networkPlayerInfo.getGameProfile().getName(),net.minecraft.scoreboard.ScoreObjective)", "net.minecraft.client.network.NetworkPlayerInfo.getGameProfile()", "this.mc.fontRendererObj.getStringWidth((\" \" + (scoreboardIn.getValueFromObjective(networkPlayerInfo.getGameProfile().getName(), scoreObjectiveIn).getScorePoints())))", "this.mc.fontRendererObj.getStringWidth((\" \" + (scoreboardIn.getValueFromObjective(networkPlayerInfo.getGameProfile().getName(), scoreObjectiveIn).getScorePoints())))", "net.minecraft.client.network.NetworkPlayerInfo.getGameProfile()", "this.mc.fontRendererObj.getStringWidth(this.getPlayerName(networkPlayerInfo))", "scoreboardIn.getValueFromObjective(networkPlayerInfo.getGameProfile().getName(), scoreObjectiveIn).getScorePoints()"], "Fixed commit": "b49519d2e50033b6e0adbb2d7f7694172b813a57", "Url": "https://api.github.com/repos/FlawlessNick/FlawlessNick", "Date": "2018-04-02T02:57:49Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.marklogic.mapreduce.ContentOutputFormat.LOG.isDebugEnabled()) { com.marklogic.mapreduce.ContentOutputFormat.LOG.debug((\"init query: \\n\" + (query.getQuery()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6759/buggy-version/mapreduce.src.main.java.com.marklogic.mapreduce.ContentOutputFormat.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug((\"init query: \\n\" + (query.getQuery())))"], "Fixed commit": "79f3b3a557764cc19f278125be25bc01ab4bd79a", "Url": "https://api.github.com/repos/marklogic/marklogic-contentpump", "Date": "2018-09-29T18:43:11Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.product.isOpen()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8296/buggy-version/src.io.github.davidg95.JTill.jtill.WasteItem.java", "BodyUseAPI": [], "Fixed commit": "c9a496075176e2ea4dd5068125b0bc515f02bf72", "Url": "https://api.github.com/repos/davidg95/JTill", "Date": "2018-01-15T10:50:45Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.Integer, com.neatnodes.genome.Connection>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(currentConnection.isEnabled())) { e.addAttribute(\"ui.style\", \"visibility-mode: hidden;\"); e.addAttribute(\"ui.style\", \"text-visibility-mode: hidden;\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5974/buggy-version/src.main.java.com.neatnodes.ui.GenomeRenderer.java", "BodyUseAPI": [], "Fixed commit": "31102c369c185270d7621faa168cfad610bd2123", "Url": "https://api.github.com/repos/sj-griffin/neatnodes", "Date": "2018-07-29T02:47:13Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selected) != (-1)) capacity = java.lang.Integer.parseInt(selectedCapacity.getText().toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9025/buggy-version/app.src.main.java.app.haven.haven.CreateNewShelterActivity.java", "BodyUseAPI": [], "Fixed commit": "ab3f450dc0bbb0b6dc0dc35cf1a6fa317b33ef76", "Url": "https://api.github.com/repos/danielgsmith/CS2340", "Date": "2018-02-16T16:36:51Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.formation.projetfinal.entities.User.getFirms()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(firms.isEmpty())) { fr.formation.projetfinal.entities.Firm firm = firms.get(0); finance.setFirm(firm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2149/buggy-version/projetfinal.src.main.java.fr.formation.projetfinal.controllers.RequestFinancesController.java", "BodyUseAPI": ["java.util.List<fr.formation.projetfinal.entities.Firm>.get(int)"], "Fixed commit": "0535d34caacf083f475b582f6c97dc993010195c", "Url": "https://api.github.com/repos/Killianlherondelle/ProjetFinal", "Date": "2018-09-08T09:42:31Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedSubItemList) != null) { for (com.ahe.ahetimesheet.ExpandableListLib.SubItem item : selectedSubItemList) { if ((artist.getId()) == (item.getId())) holder.setChecked(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4971/buggy-version/app.src.main.java.com.ahe.ahetimesheet.ExpandableListLib.MultiCheckGenreAdapter.java", "BodyUseAPI": [], "Fixed commit": "71df8e37a4276b5426cffbd046822085839069fb", "Url": "https://api.github.com/repos/serhatcoskunn/AheTimeSheet", "Date": "2018-07-20T06:00:30Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((x) < 0) x = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9713/buggy-version/app.src.main.java.com.m2dl.nojoke.oneday.entities.Rock.java", "BodyUseAPI": [], "Fixed commit": "b9ab1873757fee74f8babf20c3efca87666d1436", "Url": "https://api.github.com/repos/kladier/onedayAndroid", "Date": "2018-03-16T16:15:17Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x) < 0) x = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9713/buggy-version/app.src.main.java.com.m2dl.nojoke.oneday.entities.Rock.java", "BodyUseAPI": [], "Fixed commit": "b9ab1873757fee74f8babf20c3efca87666d1436", "Url": "https://api.github.com/repos/kladier/onedayAndroid", "Date": "2018-03-16T16:15:17Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((x) < 0) x = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9713/buggy-version/app.src.main.java.com.m2dl.nojoke.oneday.entities.Bitcoin.java", "BodyUseAPI": [], "Fixed commit": "b9ab1873757fee74f8babf20c3efca87666d1436", "Url": "https://api.github.com/repos/kladier/onedayAndroid", "Date": "2018-03-16T16:15:17Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x) < 0) x = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9713/buggy-version/app.src.main.java.com.m2dl.nojoke.oneday.entities.Bitcoin.java", "BodyUseAPI": [], "Fixed commit": "b9ab1873757fee74f8babf20c3efca87666d1436", "Url": "https://api.github.com/repos/kladier/onedayAndroid", "Date": "2018-03-16T16:15:17Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sendToClients) { sendDakiListToClients(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4898/buggy-version/src.main.java.moe.plushie.dakimakuramod.common.dakimakura.DakiManager.java", "BodyUseAPI": [], "Fixed commit": "cc23fc5c9db3df8e14531a37df60e5d5fa7716cb", "Url": "https://api.github.com/repos/RiskyKen/DakimakuraMod", "Date": "2018-02-10T22:55:53Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((distQ != (distanceQuery)) && (!(distanceFunction.equals(distQ.getDistanceFunction())))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9011/buggy-version/elki-index-preprocessed.src.main.java.de.lmu.ifi.dbs.elki.index.preprocessed.knn.AbstractMaterializeKNNPreprocessor.java", "BodyUseAPI": [], "Fixed commit": "89cf214b3aa80f361affaf5087f203a55580c156", "Url": "https://api.github.com/repos/elki-project/elki", "Date": "2018-06-12T14:50:59Z"},
{"Line": "=>565", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.miwarre.ap.Db.connectedPlayerFromDBID(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (area.isPointInArea(player.getPosition())) org.miwarre.ap.Db.onPlayerArea(player, area, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3182/buggy-version/src.org.miwarre.ap.Db.java", "BodyUseAPI": ["org.miwarre.ap.Db.onPlayerArea(net.risingworld.api.objects.Player,org.miwarre.ap.ProtArea,boolean)"], "Fixed commit": "b9e6c04a29a0b8cf6635863e528a7fafd8cd3c45", "Url": "https://api.github.com/repos/mgavioli/RisingWorld-AreaProtection", "Date": "2018-07-17T15:39:01Z"},
{"Line": "=>510", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.miwarre.ap.Db.connectedPlayerFromDBID(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (area.isPointInArea(player.getPosition())) org.miwarre.ap.Db.onPlayerArea(player, area, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3182/buggy-version/src.org.miwarre.ap.Db.java", "BodyUseAPI": ["org.miwarre.ap.Db.onPlayerArea(net.risingworld.api.objects.Player,org.miwarre.ap.ProtArea,boolean)"], "Fixed commit": "b9e6c04a29a0b8cf6635863e528a7fafd8cd3c45", "Url": "https://api.github.com/repos/mgavioli/RisingWorld-AreaProtection", "Date": "2018-07-17T15:39:01Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (endIndex >= (str.length())) { secondNumber = java.lang.Double.parseDouble(str.substring(beginIndex)); }else { secondNumber = java.lang.Double.parseDouble(str.substring(beginIndex, endIndex)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9184/buggy-version/app.src.main.java.com.jessepye.fuzzycalc.MainActivity.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "45ed22890a210ea09a6f7972d1c3357074c625e4", "Url": "https://api.github.com/repos/jessepye/FuzzyCalc", "Date": "2018-10-27T00:11:07Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (secondNumberIsNegative) secondNumber = -secondNumber;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9184/buggy-version/app.src.main.java.com.jessepye.fuzzycalc.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "45ed22890a210ea09a6f7972d1c3357074c625e4", "Url": "https://api.github.com/repos/jessepye/FuzzyCalc", "Date": "2018-10-27T00:11:07Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o1.getHash().equals(o2.getHash())) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7251/buggy-version/protocol-module.protocol.src.main.java.io.nuls.protocol.utils.TransactionTimeComparator.java", "BodyUseAPI": [], "Fixed commit": "be9336bb0d2ed7c82cbe901a70ef05d5ca3a40fa", "Url": "https://api.github.com/repos/nuls-io/nuls", "Date": "2018-07-07T05:17:53Z"},
{"Line": "=>2227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mItems.size()) <= 0) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8029/buggy-version/coverflow.src.main.java.android.support.v4.view.LinkagePager.java", "BodyUseAPI": [], "Fixed commit": "0b0facdab2c99b2dbe2cbf47529b66de17a03179", "Url": "https://api.github.com/repos/Ironthighs/Android-Coverflow", "Date": "2018-06-04T21:02:36Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (material.getProjectPermission())) { if (!(com.bc.pmpheep.back.util.BinaryUtil.getBit(material.getProjectPermission(), 7))) { throw new com.bc.pmpheep.service.exception.CheckedServiceException(com.bc.pmpheep.service.exception.CheckedExceptionBusiness.GROUP, com.bc.pmpheep.service.exception.CheckedExceptionResult.ILLEGAL_PARAM, \"\u8be5\u7528\u6237\u6ca1\u6709\u6b64\u64cd\u4f5c\u6743\u9650\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1350/buggy-version/src.main.java.com.bc.pmpheep.back.service.PmphGroupMemberServiceImpl.java", "BodyUseAPI": ["com.bc.pmpheep.back.po.Material.getProjectPermission()", "com.bc.pmpheep.back.util.BinaryUtil.getBit(material.getProjectPermission(),int)"], "Fixed commit": "0ce41ad929b6c41039d1897432c15fdef91167ff", "Url": "https://api.github.com/repos/BCSquad/pmph", "Date": "2018-03-10T15:31:14Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yumu.hexie.integration.wuye.WuyeUtil.bindHouse(java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"05\".equals(r.getResult())) { throw new com.yumu.hexie.service.exception.BizValidateException(\"\u7528\u6237\u5f53\u524d\u7ed1\u5b9a\u623f\u5c4b\u4e0e\u5df2\u7ed1\u5b9a\u623f\u5c4b\u4e0d\u5c5e\u4e8e\u540c\u4e2a\u5c0f\u533a\uff0c\u6682\u4e0d\u652f\u6301\u6b64\u529f\u80fd\u3002\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3234/buggy-version/common.src.main.java.com.yumu.hexie.service.shequ.impl.WuyeServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "d0506d2cf2f251b58e58af9df7d54f2aa922b87a", "Url": "https://api.github.com/repos/linknabor/liangyou", "Date": "2016-10-19T02:43:51Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Util.Constants.getCurrentPicturePasswordList(ath.password_minimizer.activities.RedirectionWebToAppActivity)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (picturePasswordList != null) { for (model.PicturePassword picturePassword : picturePasswordList) { if ((picturePassword.getPasswordStrength()) == passwordStrength) { currentPicturePassword = picturePassword; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3749/buggy-version/app.src.main.java.ath.password_minimizer.activities.RedirectionWebToAppActivity.java", "BodyUseAPI": [], "Fixed commit": "7d036bfb4c168dfb7cb95a230f432582a89330e5", "Url": "https://api.github.com/repos/neniman/password_minimizer", "Date": "2018-07-16T09:49:09Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPicturePassword) == null) { noPasswordWithAccordingStrengthAction(); }else { Util.Constants.showNewDialogOkButton(this, Constants.REDIRECT_ENTER_PW_DIALOG, Constants.REDIRECT_BUTTON_OK, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3749/buggy-version/app.src.main.java.ath.password_minimizer.activities.RedirectionWebToAppActivity.java", "BodyUseAPI": [], "Fixed commit": "7d036bfb4c168dfb7cb95a230f432582a89330e5", "Url": "https://api.github.com/repos/neniman/password_minimizer", "Date": "2018-07-16T09:49:09Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPicturePassword) == null) { uriWebsite = android.net.Uri.parse(\"http://www.garten-pioniere.de.w017833c.kasserver.com/\"); }else if ((currentPicturePassword.getPasswordStrength()) == (model.PasswordStrength.SIMPLE)) { uriWebsite = android.net.Uri.parse(\"http://www.garten-pioniere.de.w017833c.kasserver.com/\"); }else { uriWebsite = android.net.Uri.parse(\"http://trust-bank.de.w017833c.kasserver.com/\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3749/buggy-version/app.src.main.java.ath.password_minimizer.activities.RedirectionWebToAppActivity.java", "BodyUseAPI": [], "Fixed commit": "7d036bfb4c168dfb7cb95a230f432582a89330e5", "Url": "https://api.github.com/repos/neniman/password_minimizer", "Date": "2018-07-16T09:49:09Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPicturePassword) != null) { setupNumberMatrix(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3749/buggy-version/app.src.main.java.ath.password_minimizer.activities.RedirectionWebToAppActivity.java", "BodyUseAPI": [], "Fixed commit": "7d036bfb4c168dfb7cb95a230f432582a89330e5", "Url": "https://api.github.com/repos/neniman/password_minimizer", "Date": "2018-07-16T09:49:09Z"},
{"Line": "=>487", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pratilipi.recommendations.dao.PratilipiDao.getPratilipiById(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((pratilipi.getWord_count()) != null) { minWordCount = (pratilipi.getWord_count()) - ((pratilipi.getWord_count()) / 2); maxWordCount = (pratilipi.getWord_count()) + ((pratilipi.getWord_count()) / 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/226/buggy-version/src.main.java.com.pratilipi.recommendations.service.PratilipiService.java", "BodyUseAPI": ["com.pratilipi.recommendations.jdo.Pratilipi.getWord_count()", "com.pratilipi.recommendations.jdo.Pratilipi.getWord_count()", "com.pratilipi.recommendations.jdo.Pratilipi.getWord_count()", "com.pratilipi.recommendations.jdo.Pratilipi.getWord_count()"], "Fixed commit": "8506b4531dadfd21fc76deda669a5b09961c66b8", "Url": "https://api.github.com/repos/Pratilipi/ecs-recommendation", "Date": "2018-04-03T11:37:09Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.mc.theWorld.getPlayerEntityByUUID(gameProfile.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (entityPlayer != null) { if (entityPlayer.getName().equals(net.simplyrin.flawlessnick.FlawlessNick.getInstance().getMinecraft().thePlayer.getName())) { if (net.simplyrin.flawlessnick.FlawlessNick.getInstance().getNickManager().isNick()) { this.mc.getTextureManager().bindTexture(net.simplyrin.flawlessnick.FlawlessNick.getInstance().getSkinManager().getSkin(net.simplyrin.flawlessnick.FlawlessNick.getInstance().getNickManager().getNickName())); }else { this.mc.getTextureManager().bindTexture(networkPlayerInfo.getLocationSkin()); } }else { this.mc.getTextureManager().bindTexture(networkPlayerInfo.getLocationSkin()); } }else { this.mc.getTextureManager().bindTexture(networkPlayerInfo.getLocationSkin()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8703/buggy-version/src.main.java.net.simplyrin.flawlessnick.utils.CustomTabOverlay.java", "BodyUseAPI": ["entityPlayer.getName().equals(net.simplyrin.flawlessnick.FlawlessNick.getInstance().getMinecraft().thePlayer.getName())", "net.minecraft.entity.player.EntityPlayer.getName()"], "Fixed commit": "c27d2e959e8f1be2baa5cbb774c19d5914c9bbba", "Url": "https://api.github.com/repos/FlawlessNick/FlawlessNick", "Date": "2018-04-02T09:34:13Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isInCreativeTab(tab)) { for (int counter = 0; counter <= 2; ++counter) { items.add(new net.minecraft.item.ItemStack(this, 1, counter)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8872/buggy-version/src.main.java.com.baublelicious.items.ItemMagicCore.java", "BodyUseAPI": [], "Fixed commit": "d3f3b5d8c35f9274c9e63c45bffe42100d852f4a", "Url": "https://api.github.com/repos/dennisblokland/Baublelicious", "Date": "2018-02-19T16:09:24Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n1Length != n2Length) { isdigValid = false; java.lang.System.out.println(\"Not a valid entry. Numbers only. Use equal amount of digits.\"); }else if ((n1Length > 10) && (n2Length > 10)) { isdigValid = false; java.lang.System.out.println(\"Not a valid entry. Numbers only. Use equal amount of digits.\"); }else if ((usrNum1.matches(\"[0-9]+\")) && (usrNum2.matches(\"[0-9]+\"))) { isdigValid = true; pNum1 = java.lang.Integer.parseInt(usrNum1); pNum2 = java.lang.Integer.parseInt(usrNum2); for (i = 0; i < n1Length; ++i) { r = pNum1 % 10; pNum1 = pNum1 / 10; r2 = pNum2 % 10; pNum2 = pNum2 / 10; sum = r + r2; if (sum != 9) { java.lang.System.out.println(((\"FALSE: digits \" + (i + 1)) + \" do not equal 9.\")); }else { java.lang.System.out.println(((\"TRUE: sum of digits \" + (i + 1)) + \" equal 9.\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/518/buggy-version/LabOnePart1.src.com.FirstLab.AddNumbers.java", "BodyUseAPI": [], "Fixed commit": "178dd4d69d625ccc70825f2446a0d53eb7fb1117", "Url": "https://api.github.com/repos/lkarty/GrandCircus-deliverableOne", "Date": "2018-09-24T14:48:56Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.ex.ValidFormat.isAlphanum(line[0]))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3524/buggy-version/src.com.ex.ValidFormat.java", "BodyUseAPI": [], "Fixed commit": "c7c83552704949d531c4fb0a9a75262b4a6a34f6", "Url": "https://api.github.com/repos/Maxrimus/BankApp", "Date": "2018-02-13T05:33:54Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((line.length) < 2) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3524/buggy-version/src.com.ex.ValidFormat.java", "BodyUseAPI": [], "Fixed commit": "c7c83552704949d531c4fb0a9a75262b4a6a34f6", "Url": "https://api.github.com/repos/Maxrimus/BankApp", "Date": "2018-02-13T05:33:54Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((line.length) < 2) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3524/buggy-version/src.com.ex.ValidFormat.java", "BodyUseAPI": [], "Fixed commit": "c7c83552704949d531c4fb0a9a75262b4a6a34f6", "Url": "https://api.github.com/repos/Maxrimus/BankApp", "Date": "2018-02-13T05:33:54Z"},
{"Line": "=>654", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edu.aku.hassannaqvi.nns_2018.ui.SectionC1Activity.isNA) { edu.aku.hassannaqvi.nns_2018.ui.SectionC1Activity.NAChildsize = MainApp.childNA.size(); }else { edu.aku.hassannaqvi.nns_2018.ui.SectionC1Activity.Childsize = MainApp.childUnder5.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/126/buggy-version/app.src.main.java.edu.aku.hassannaqvi.nns_2018.ui.SectionC1Activity.java", "BodyUseAPI": [], "Fixed commit": "9af97fcfcb6029be28fd56f059b46f901b0ebe9f", "Url": "https://api.github.com/repos/shznaqvi/nns_2018", "Date": "2018-04-03T13:28:14Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (datas)) { size = (datas.size()) + 1; if ((cn.shomes.tfblue.adapter.RecycleFormAdapter2_2.taskPageSize) > (datas.size())) { hideLoadMore(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8533/buggy-version/app.src.main.java.cn.shomes.tfblue.adapter.RecycleFormAdapter2_2.java", "BodyUseAPI": [], "Fixed commit": "7e40bd93a5f2226b8a34c3773693939df1d0136c", "Url": "https://api.github.com/repos/kayoxu/TFBlue", "Date": "2018-10-23T08:09:19Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(lookup.containsKey(s))) { lookup.put(s, lookup.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5763/buggy-version/lecture-graph.myGraph.MyUSymbolGraph.java", "BodyUseAPI": [], "Fixed commit": "3824bd41b75a868d433b0add5067642dce4211cd", "Url": "https://api.github.com/repos/porrige/cs61b_2016s_algorithm4", "Date": "2018-06-01T07:40:32Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((taskIds.size()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/485/buggy-version/app.src.main.java.com.example.android.funkytasks.MainMenuActivity.java", "BodyUseAPI": [], "Fixed commit": "eb8b03ea69a0143a248bbf5876abb1b3bba75827", "Url": "https://api.github.com/repos/CMPUT301W18T20/FunkyTasks", "Date": "2018-03-18T22:49:24Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (action.equals(\"onDeepLink\")) { mHandler.add(callbackContext); consumeEvents(); }else if (action.equals(\"clearPrefs\")) { if ((sharedPreferences) != null) { sharedPreferences.edit().clear().apply(); callbackContext.success(); } }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8566/buggy-version/src.android.org.sunbird.SplashScreen.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "a8d67eb1e38a93078686ad79fd293c7aa1bb205e", "Url": "https://api.github.com/repos/project-sunbird/cordova-plugin-sunbirdsplash", "Date": "2018-05-09T12:18:42Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((((ch == 't') || (ch == 'h')) || (ch == 'a')) || (ch == 'c')) || (ch == 'w')) receiveMessage();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7771/buggy-version/Android-HC05.app.src.main.java.com.example.liebe.android_hc05.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c97c71edde3973a1befa56b9dbe7ba5e8a5b86b0", "Url": "https://api.github.com/repos/LiebeStar/Android-HC05-receiver", "Date": "2018-04-14T13:52:44Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hgvsp == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9736/buggy-version/service.src.main.java.org.cbioportal.genome_nexus.service.annotation.ProteinChangeResolver.java", "BodyUseAPI": [], "Fixed commit": "c07ba97409d3faca284bc884c4064a585bfcb7e2", "Url": "https://api.github.com/repos/onursumer/genome-nexus", "Date": "2018-04-13T17:32:19Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player.hasPermission(\"bungeereports.player\")) { player.openInventory(UserUI.openGUI(player, players, playerList)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4450/buggy-version/src.main.java.ru.frostdelta.bungeereports.pluginMessage.PluginMessage.java", "BodyUseAPI": ["org.bukkit.entity.Player.openInventory(UserUI.openGUI(player, players, playerList))", "ru.frostdelta.bungeereports.gui.UserUI.openGUI(org.bukkit.entity.Player,int,java.lang.String[])"], "Fixed commit": "96a54eda40f1565710759b581d5326d9b38d9b88", "Url": "https://api.github.com/repos/FrostDelta123/BungeeReports", "Date": "2018-08-05T19:58:36Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player.hasPermission(\"bungeereports.player\")) { player.openInventory(UserUI.openGUI(player, players.size(), strings)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4450/buggy-version/src.main.java.ru.frostdelta.bungeereports.NonBungee.java", "BodyUseAPI": ["org.bukkit.entity.Player.openInventory(UserUI.openGUI(player, players.size(), strings))", "ru.frostdelta.bungeereports.gui.UserUI.openGUI(org.bukkit.entity.Player,int,java.lang.String[])"], "Fixed commit": "96a54eda40f1565710759b581d5326d9b38d9b88", "Url": "https://api.github.com/repos/FrostDelta123/BungeeReports", "Date": "2018-08-05T19:58:36Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["practiceList.getSelectionModel().getSelectedItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (name.contains(\"-\")) { name = name.substring(0, name.lastIndexOf(\"-\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2884/buggy-version/src.namesayer.PracticeMenuController.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "d3e272b0d92dfd995a429735d5f4ea06483fe908", "Url": "https://api.github.com/repos/raghavgarg32/Name-Sayer", "Date": "2018-09-23T08:18:15Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((c1.getOwner()) == (permission.getParticipantID())) { shareContact(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2698/buggy-version/src.com.google.gwt.sample.itProjekt.server.db.PermissionMapper.java", "BodyUseAPI": [], "Fixed commit": "6601114fdd764d94f67ce7e9fd316f91bf2f2759", "Url": "https://api.github.com/repos/KatrinZerfass/Rep_ITProjekt_SS18_Gr10", "Date": "2018-07-02T12:46:58Z"},
{"Line": "=>658", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ldps.facade.impl.CustomerFacadeImpl.querySharableResource(fromCustomerModel.getId(),java.lang.Integer,java.lang.Integer,toCustomerModel.getId(),java.util.Date,java.util.Date)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((null != endDate) && ((null == (cusresourceList.get(i).getEndDate())) || (endDate.before(cusresourceList.get(i).getEndDate())))) { cusresourceList.get(i).setEndDate(endDate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3961/buggy-version/src.main.java.com.ldps.facade.impl.CustomerFacadeImpl.java", "BodyUseAPI": ["cusresourceList.get(i).setEndDate(java.util.Date)", "java.util.List<com.ldps.model.CusResourceRelModel>.get(int)"], "Fixed commit": "9db543e60a96b5b70af09feef9b91f95c9264f74", "Url": "https://api.github.com/repos/GaryYuNJ/LD-PermissionSystem", "Date": "2018-07-03T10:45:26Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.springframework.util.StringUtils.isEmpty(startDate)) && (!(org.springframework.util.StringUtils.isEmpty(startTime)))) { startDate = startTime; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3961/buggy-version/src.main.java.com.ldps.controller.CustomerAPPAPIController.java", "BodyUseAPI": [], "Fixed commit": "9db543e60a96b5b70af09feef9b91f95c9264f74", "Url": "https://api.github.com/repos/GaryYuNJ/LD-PermissionSystem", "Date": "2018-07-03T10:45:26Z"},
{"Line": "=>495", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.springframework.util.StringUtils.isEmpty(endDate)) && (!(org.springframework.util.StringUtils.isEmpty(endTime)))) { endDate = endTime; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3961/buggy-version/src.main.java.com.ldps.controller.CustomerAPPAPIController.java", "BodyUseAPI": [], "Fixed commit": "9db543e60a96b5b70af09feef9b91f95c9264f74", "Url": "https://api.github.com/repos/GaryYuNJ/LD-PermissionSystem", "Date": "2018-07-03T10:45:26Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inDirs == null) { logger.debug(\"Original Bin folder does not exist\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2336/buggy-version/src.main.java.fr.inria.astor.core.setup.ProjectRepairFacade.java", "BodyUseAPI": [], "Fixed commit": "20292873862335ed62a8bce73e68a38c345950fe", "Url": "https://api.github.com/repos/SpoonLabs/astor", "Date": "2018-01-25T21:26:51Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (addAnswer) { answerList.add(pAnswer); newPoll.setAnswerList(answerList); req.getSession().setAttribute(\"newPoll\", newPoll); answerStatus = \"Antwort erfolgreich hinzugef\u00fcgt!\"; }else { answerStatus = \"Es k\u00f6nnen nicht 2 Antworten mit den selben Titeln erstell werden\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1080/buggy-version/src.main.java.servlet.NewPollSL.java", "BodyUseAPI": [], "Fixed commit": "ea7116b23cef98722843ad5bd550340a876c15da", "Url": "https://api.github.com/repos/pomchb13/Democracy2", "Date": "2018-03-11T14:17:59Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.jadventure.game.QueueProvider.noisyDebug) { com.jadventure.game.QueueProvider.logger.debug(((\"startMessenger( \" + modeInc) + \" )\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1371/buggy-version/src.main.java.com.jadventure.game.QueueProvider.java", "BodyUseAPI": [], "Fixed commit": "e823fe1a0f1950ff9caee48e3c260deec1542ffc", "Url": "https://api.github.com/repos/Dev-Osmium/JAdventure", "Date": "2018-05-24T22:00:44Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.jadventure.game.QueueProvider.noisyDebug) { com.jadventure.game.QueueProvider.logger.debug(((((\"startMessenger( \" + modeInc) + \" , \") + sockerInc) + \" )\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1371/buggy-version/src.main.java.com.jadventure.game.QueueProvider.java", "BodyUseAPI": [], "Fixed commit": "e823fe1a0f1950ff9caee48e3c260deec1542ffc", "Url": "https://api.github.com/repos/Dev-Osmium/JAdventure", "Date": "2018-05-24T22:00:44Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (input.isEnd()) { token.Separators temp1 = findSeparators(); if (temp1 != null) { if ((temp1.getSep()) == (type.SeparatorsType.SEMICOLON)) { java.lang.System.out.println(input.readCh()); tokens.add(temp1); return; } } throw new exception.SyntaxException(input.getLine(), input.getPosition(), \"End without Semicolon!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1711/buggy-version/Interpreter.src.main.Analysis.java", "BodyUseAPI": ["main.Input.getLine()", "main.Input.getPosition()", "java.io.PrintStream.println(input.readCh())", "main.Input.readCh()"], "Fixed commit": "3f89b78fea0d02e9f0eff3855a0f0bf3a5f884c2", "Url": "https://api.github.com/repos/HarryCheng365/CalculatorLexicalAnalysis", "Date": "2018-10-14T09:09:07Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cachedCounter) == null) { this.cachedCounter = new java.util.concurrent.atomic.AtomicInteger(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4776/buggy-version/rescli.core.src.org.epsilonlabs.rescli.core.session.AbstractSession.java", "BodyUseAPI": [], "Fixed commit": "ce1288deb11d74f46b4a43103e1a40e5d8fbcc6c", "Url": "https://api.github.com/repos/beatrizsanchez/RestMule", "Date": "2018-01-28T15:31:31Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((winClip) != null) { winClip.stop(); winClip.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8054/buggy-version/src.com.ammrat13.javagame.gamescenes.LoseScene.java", "BodyUseAPI": [], "Fixed commit": "a669043b764234806bd114b95e2709d387b9e145", "Url": "https://api.github.com/repos/ammrat13/game-design-java", "Date": "2018-03-06T14:08:11Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((winClip) != null) { winClip.stop(); winClip.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8054/buggy-version/src.com.ammrat13.javagame.gamescenes.WinScene.java", "BodyUseAPI": [], "Fixed commit": "a669043b764234806bd114b95e2709d387b9e145", "Url": "https://api.github.com/repos/ammrat13/game-design-java", "Date": "2018-03-06T14:08:11Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (internalName.contains(\"/\")) { this.packagePath = internalName.substring(0, internalName.lastIndexOf(\"/\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4872/buggy-version/EscapeAnalysis.src.org.classHierarchy.JavaType.java", "BodyUseAPI": [], "Fixed commit": "15dea8896f70616f0932c33b2b3ad993c1c5e793", "Url": "https://api.github.com/repos/verhoofstad/EscapeAnalysis", "Date": "2018-10-08T11:42:39Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stockCalc.getPERatio().equals(null)) || (stockCalc.getPERatio().equals(\"\"))) { pe = null; }else { pe = java.lang.Double.parseDouble(stockCalc.getPERatio()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3452/buggy-version/src.main.java.com.timelessapps.javafxtemplate.app.businesslogic.StockGatherer.java", "BodyUseAPI": ["main.java.com.timelessapps.javafxtemplate.helpers.scraper.NDWrapper.getPERatio()", "java.lang.Double.parseDouble(stockCalc.getPERatio())"], "Fixed commit": "68c9901f1c5777054654a1fa8f4325f68d37129a", "Url": "https://api.github.com/repos/mt9304/stock-analyzer", "Date": "2018-09-28T04:29:04Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((framework.getSecurityTestingObject()) != null) { framework.getSecurityTestingObject().quitZap(); framework.setSecurityTestingObject(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9065/buggy-version/src.main.java.core.listener.java", "BodyUseAPI": ["core.listener.getSecurityTestingObject()", "core.listener.setSecurityTestingObject(<nulltype>)", "framework.getSecurityTestingObject().quitZap()"], "Fixed commit": "3ebc13ad862d860cd94d4b238ffcd907908a03af", "Url": "https://api.github.com/repos/premsvmm/Ducati", "Date": "2018-07-07T12:23:27Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.System.getProperty(\"os.name\").toLowerCase().startsWith(\"win\")) { rep = rep.replace(\"\\\\\", ((((java.io.File.separator) + (java.io.File.separator)) + (java.io.File.separator)) + (java.io.File.separator))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7255/buggy-version/com-github-app.com-github-app-api.src.main.java.com.github.app.api.utils.CmdParase.java", "BodyUseAPI": [], "Fixed commit": "688e5dd0825bcc22d940ebfbe180995c1f46b638", "Url": "https://api.github.com/repos/ioprotocol/com-github-app", "Date": "2018-01-22T02:40:40Z"},
{"Line": "=>2725", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (o instanceof java.lang.Number) return lucee.runtime.op.Caster.toB64(lucee.runtime.op.Caster.toString(((java.lang.Number) (o))), charset, defaultValue); else if (o instanceof lucee.runtime.type.ObjectWrap) { return lucee.runtime.op.Caster.toBase64(((lucee.runtime.type.ObjectWrap) (o)).getEmbededObject(defaultValue), charset, defaultValue); }else if (o == null) { return lucee.runtime.op.Caster.toBase64(\"\", charset, defaultValue); }else { byte[] b = lucee.runtime.op.Caster.toBinary(o, null); if (b != null) return lucee.runtime.op.Caster.toB64(b, defaultValue); else { java.lang.String str = lucee.runtime.op.Caster.toString(o, null); if (str != null) return lucee.runtime.op.Caster.toBase64(str, charset, defaultValue); else return defaultValue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8575/buggy-version/core.src.main.java.lucee.runtime.op.Caster.java", "BodyUseAPI": ["lucee.runtime.op.Caster.toBinary(java.lang.Object,<nulltype>)", "lucee.runtime.op.Caster.toString(java.lang.Object,<nulltype>)"], "Fixed commit": "21b0c454d242c0fd00ea90f317742ff3e8d34c84", "Url": "https://api.github.com/repos/jzuijlek/Lucee", "Date": "2018-04-16T07:28:32Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(messageField.getText().isEmpty())) { messageArea.appendText(((((\"[\" + (currentUser)) + \"] \") + (messageField.getText())) + \"\\n\")); messageField.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1260/buggy-version/src.sample.ControllerThree.java", "BodyUseAPI": ["javafx.scene.control.TextField.clear()", "javafx.scene.control.TextArea.appendText(((((\"[\" + (currentUser)) + \"] \") + (messageField.getText())) + \"\\n\"))", "javafx.scene.control.TextField.getText()"], "Fixed commit": "c313d7dbf578f7c504a725d9f5c59ef2a99abc63", "Url": "https://api.github.com/repos/mmadrus/QueueUP_App", "Date": "2018-04-16T08:08:59Z"},
{"Line": "=>2565", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!hideBorders) { me.ryanhamshire.griefprevention.visual.Visualization visualization = me.ryanhamshire.griefprevention.visual.Visualization.fromClaims(claims, ((playerData.optionClaimCreateMode) == 1 ? height : player.getProperty(org.spongepowered.api.data.property.entity.EyeLocationProperty.class).get().getValue().getFloorY()), player.getLocation(), playerData, null); visualization.apply(player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/221/buggy-version/src.main.java.me.ryanhamshire.griefprevention.listener.PlayerEventHandler.java", "BodyUseAPI": [], "Fixed commit": "1f50df8bb856cd54d91615e129af9bfb411093b2", "Url": "https://api.github.com/repos/Eufranio/GriefPrevention", "Date": "2018-01-08T14:08:21Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((p1) == 0) { gameStarted = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2321/buggy-version/Assignment.src.duo_vs.connect4.Connect4.java", "BodyUseAPI": [], "Fixed commit": "7c299a4f19e745b6d0ed5c10e20b8814f61babee", "Url": "https://api.github.com/repos/C16380531/Duo-vs", "Date": "2018-04-29T21:35:06Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 1) java.lang.System.err.println(\"No neighbors on this router!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9457/buggy-version/src.main.java.socs.network.node.Router.java", "BodyUseAPI": [], "Fixed commit": "6b4a9a642c6ae1e9c88029ea52f73b399dc9325c", "Url": "https://api.github.com/repos/FrankZhang427/SimulateLSRP", "Date": "2018-01-30T19:26:21Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (product.isBought()) buyProductButton.setVisibility(View.GONE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9586/buggy-version/app.src.main.java.com.a_team.studentlife.adapter.Shop.BuyProductActivity.java", "BodyUseAPI": [], "Fixed commit": "181c6f73d51e8c9f8c2343b2399e3c58273768ff", "Url": "https://api.github.com/repos/5ALEKSEY/StudentLife", "Date": "2018-04-11T11:45:59Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (group == null) { student.setStudentGroup(oldGroup); }else { student.setStudentGroup(group); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1925/buggy-version/src.main.java.pl.edu.agh.ki.mwo.web.controllers.StudentController.java", "BodyUseAPI": ["pl.edu.agh.ki.mwo.model.Student.setStudentGroup(pl.edu.agh.ki.mwo.model.StudentGroup)"], "Fixed commit": "cfd305795585ec8ec748bba9cafed527daf4c63d", "Url": "https://api.github.com/repos/MrJot/Dziekanat", "Date": "2018-06-16T22:45:33Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.lwjgl.opengl.GL11.glGetString(GL11.GL_VERSION)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((glVersion == null) || ((glVersion.length()) < 4)) { glVersion = \"0.0.0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3953/buggy-version/src.org.nschmidt.ldparteditor.splash.SplashScreen.java", "BodyUseAPI": [], "Fixed commit": "523be58601e3d391f3034e6d88313a8ea5637618", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2018-01-12T22:45:17Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currency) != (dest.currency)) { java.lang.System.err.println(\"Can't transfer to a different currency!\"); return false; }else if (((status) == (AcctStatus.NO_DEBIT)) || ((status) == (AcctStatus.NO_TRANSACTION))) { java.lang.System.err.println(\"Source account frozen!\"); return false; }else if (((dest.status) == (AcctStatus.NO_CREDIT)) || ((dest.status) == (AcctStatus.NO_TRANSACTION))) { java.lang.System.err.println(\"Destination account frozen!\"); return false; }else if ((balance.compareTo(amount)) < 0) { java.lang.System.err.println(\"Insufficient funds!\"); return false; }else { balance = balance.subtract(amount); dest.balance = dest.balance.add(amount); java.lang.System.out.println((((\"Funds transfer successful!\\nYour balance is \" + (currency)) + \" \") + (balance.setScale(2, java.math.RoundingMode.HALF_UP).toPlainString()))); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1418/buggy-version/src.cbs.Account.java", "BodyUseAPI": ["java.io.PrintStream.println((((\"Funds transfer successful!\\nYour balance is \" + (currency)) + \" \") + (balance.setScale(2, java.math.RoundingMode.HALF_UP).toPlainString())))", "java.math.BigDecimal.add(java.math.BigDecimal)"], "Fixed commit": "be2a776a06cb347e8ca3e134da372d6cfecd5a45", "Url": "https://api.github.com/repos/ccddo/cbs", "Date": "2018-02-25T15:07:38Z"},
{"Line": "=>1403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(batchIdList.isEmpty())) { findBatches.add(org.hibernate.criterion.Restrictions.in(\"id\", batchIdList)); }else { findBatches.add(org.hibernate.criterion.Restrictions.eq(\"orgId\", orgId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4270/buggy-version/src.main.java.com.ut.dph.dao.impl.transactionInDAOImpl.java", "BodyUseAPI": ["org.hibernate.Criteria.add(org.hibernate.criterion.Restrictions.in(\"id\", batchIdList))", "org.hibernate.criterion.Restrictions.in(java.lang.String,java.util.List<java.lang.Integer>)"], "Fixed commit": "824ce77f1cd9f2a6735602e1ce7dea562138df09", "Url": "https://api.github.com/repos/thenhkid/universalTranslator", "Date": "2018-03-04T15:28:36Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentArtist) != null) && ((currentTitle) != null)) { loadLyrics(currentArtist, currentTitle); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2813/buggy-version/app.src.main.java.sexy.lyrics.LyricsViewActivity.java", "BodyUseAPI": [], "Fixed commit": "c4b416a0eb1a404d3cef45689432631ff90bf628", "Url": "https://api.github.com/repos/cvzi/Lyrics", "Date": "2018-09-12T15:33:04Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState != null) { currentArtist = savedInstanceState.getString(\"currentArtist\", null); currentTitle = savedInstanceState.getString(\"currentTitle\", null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2813/buggy-version/app.src.main.java.sexy.lyrics.LyricsViewActivity.java", "BodyUseAPI": ["android.os.Bundle.getString(java.lang.String,<nulltype>)", "android.os.Bundle.getString(java.lang.String,<nulltype>)"], "Fixed commit": "c4b416a0eb1a404d3cef45689432631ff90bf628", "Url": "https://api.github.com/repos/cvzi/Lyrics", "Date": "2018-09-12T15:33:04Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((disableLocalExec) && ((msg.getNodeInfo().getExecutorType()) == (org.smartdata.model.ExecutorType.LOCAL))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5139/buggy-version/smart-engine.src.main.java.org.smartdata.server.engine.cmdlet.CmdletDispatcher.java", "BodyUseAPI": [], "Fixed commit": "fce42455c2796f3da5dc70624720d75d33ccc413", "Url": "https://api.github.com/repos/qiyuangong/SSM", "Date": "2018-01-17T07:04:10Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (face != null) { this.intface_String = face.getName(); }else { this.intface_String = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8476/buggy-version/projects.batfish.src.main.java.org.batfish.symbolic.smt.PredicateLabel.java", "BodyUseAPI": [], "Fixed commit": "6354aa5ceffd78408c953944fb1b6004fa81598f", "Url": "https://api.github.com/repos/colgate-cs-research/batfish", "Date": "2018-06-08T01:57:37Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (msgTx.is664Msg()) { msgTx.setName(msgTx.getPairedMsg().getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4139/buggy-version/src.main.java.dima.model.businesslogic.datamodel.MessagePair.java", "BodyUseAPI": [], "Fixed commit": "8d3255542c4d01265345a2ac2522f68c3b29c0eb", "Url": "https://api.github.com/repos/yind07/afdxTool", "Date": "2018-01-02T12:37:46Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((hours.getValue()) == 0) hours.increment();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3946/buggy-version/ClockDisplay.java", "BodyUseAPI": ["NumberDisplay.increment()"], "Fixed commit": "9a5887433c54869fd28761f783d15e9cac69a66d", "Url": "https://api.github.com/repos/premiumElevator/Clock-Display", "Date": "2018-09-25T01:07:40Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.TreeMap<omero.gateway.model.ROICoordinate, java.util.List<omero.gateway.model.ShapeData>>.get(omero.gateway.model.ROICoordinate)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (allZ != null) res.addAll(allZ);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/199/buggy-version/components.blitz.src.omero.gateway.model.ROIData.java", "BodyUseAPI": ["java.util.List<omero.gateway.model.ShapeData>.addAll(java.util.List<omero.gateway.model.ShapeData>)"], "Fixed commit": "e10930996d6aae17e9f03fd1dea9d1a636becbc0", "Url": "https://api.github.com/repos/snoopycrimecop/openmicroscopy", "Date": "2018-07-05T10:24:46Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.TreeMap<omero.gateway.model.ROICoordinate, java.util.List<omero.gateway.model.ShapeData>>.get(omero.gateway.model.ROICoordinate)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (allT != null) res.addAll(allT);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/199/buggy-version/components.blitz.src.omero.gateway.model.ROIData.java", "BodyUseAPI": ["java.util.List<omero.gateway.model.ShapeData>.addAll(java.util.List<omero.gateway.model.ShapeData>)"], "Fixed commit": "e10930996d6aae17e9f03fd1dea9d1a636becbc0", "Url": "https://api.github.com/repos/snoopycrimecop/openmicroscopy", "Date": "2018-07-05T10:24:46Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (response == null) throw new java.lang.NullPointerException(\"Response is null\"); else return response.getBody().prettyPrint();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/367/buggy-version/src.main.java.com.loadium.jenkins.loadium.util.RestUtil.java", "BodyUseAPI": ["response.getBody().prettyPrint()", "io.restassured.response.Response.getBody()"], "Fixed commit": "26a73eebc5b7772c15861eda172789739ee16016", "Url": "https://api.github.com/repos/jenkinsci/loadium-plugin", "Date": "2018-03-08T11:30:40Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.restassured.RestAssured.given().header(\"Authorization\", (\"bearer \" + (authService.getAuthToken()))).get(((enviromentUtil.getResourceBaseURL()) + url)).then().extract().response()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (response == null) throw new java.lang.NullPointerException(\"Response is null\"); else return response.getBody().prettyPrint();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/367/buggy-version/src.main.java.com.loadium.jenkins.loadium.util.RestUtil.java", "BodyUseAPI": ["response.getBody().prettyPrint()", "io.restassured.response.Response.getBody()"], "Fixed commit": "26a73eebc5b7772c15861eda172789739ee16016", "Url": "https://api.github.com/repos/jenkinsci/loadium-plugin", "Date": "2018-03-08T11:30:40Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["engine.graphics.models.Model3D.isOccuded()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (failedfrustumtest) model.cansee = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/804/buggy-version/src.engine.graphics.rendering.ForwardRenderer.java", "BodyUseAPI": [], "Fixed commit": "559113ba996d98b951d57f743995b05c80e91beb", "Url": "https://api.github.com/repos/leefogg/GLOOP", "Date": "2018-05-28T16:49:04Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((l < (java.lang.Integer.MIN_VALUE)) || (l > (java.lang.Integer.MAX_VALUE))) { throw new java.lang.IllegalArgumentException((l + \" cannot be cast to int without changing its value.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3242/buggy-version/workspace.CC.src.openems-master.edge.src.io.openems.api.scheduler.Scheduler.java", "BodyUseAPI": [], "Fixed commit": "d3d8e23bc34ffcc2da22e43f81ae344c8489e716", "Url": "https://api.github.com/repos/Magproj/ProgettoModelli", "Date": "2018-01-04T11:51:17Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((ex.getCause()) != null) && ((ex.getCause()) instanceof java.sql.SQLInvalidAuthorizationSpecException)) { throw new org.elasticsearch.cli.UserException(org.elasticsearch.cli.ExitCodes.NOPERM, (((\"Cannot establish a secure connection to the server \" + (con.connectionString())) + \" - \") + (ex.getCause().getMessage()))); }else { throw new org.elasticsearch.cli.UserException(org.elasticsearch.cli.ExitCodes.DATA_ERROR, (((\"Cannot communicate with the server \" + (con.connectionString())) + \". This version of CLI only works with Elasticsearch version \") + (Version.CURRENT.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2748/buggy-version/x-pack.plugin.sql.sql-cli.src.main.java.org.elasticsearch.xpack.sql.cli.Cli.java", "BodyUseAPI": ["org.elasticsearch.xpack.sql.client.ClientException.getCause()", "ex.getCause().getMessage()"], "Fixed commit": "20e1b5e2fe3e7319e2c908657e484bb49bbf11d7", "Url": "https://api.github.com/repos/Sue-Gallagher/elasticsearch", "Date": "2018-08-31T10:08:32Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name) != null) { name = name.replace(\" \", \"-\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1542/buggy-version/src.main.java.net.gmsworld.server.struts.DeviceAction.java", "BodyUseAPI": [], "Fixed commit": "f00da0208970c33a544e4aa8405904755f59eeda", "Url": "https://api.github.com/repos/jstakun/landmarks", "Date": "2018-02-06T14:13:01Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name) != null) { name = name.replace(\" \", \"-\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1542/buggy-version/src.main.java.net.gmsworld.server.struts.DeviceAction.java", "BodyUseAPI": [], "Fixed commit": "f00da0208970c33a544e4aa8405904755f59eeda", "Url": "https://api.github.com/repos/jstakun/landmarks", "Date": "2018-02-06T14:13:01Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getResponse()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3939/buggy-version/src.main.java.com.larryTheCoder.panels.Panel.java", "BodyUseAPI": [], "Fixed commit": "66284dc9065609ba78d059427a4ff082da446ee9", "Url": "https://api.github.com/repos/Nukkit-coders/ASkyBlock-Nukkit", "Date": "2018-04-21T07:51:35Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zmdev.goldenbag.service.UserService.findByIndirectManager(com.zmdev.goldenbag.domain.User)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((users.size()) > 0) { assessments = assessmentService.findByUserInAndStatus(users, Assessment.Status.DIRECT_MANAGER_EVALUATED, org.springframework.data.domain.PageRequest.of(page, size, new org.springframework.data.domain.Sort(Sort.Direction.DESC, \"updatedAt\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/704/buggy-version/src.main.java.com.zmdev.goldenbag.web.MeController.java", "BodyUseAPI": ["com.zmdev.goldenbag.service.AssessmentService.findByUserInAndStatus(java.util.List<com.zmdev.goldenbag.domain.User>,Assessment.Status.DIRECT_MANAGER_EVALUATED,org.springframework.data.domain.PageRequest.of(page, size, new org.springframework.data.domain.Sort(Sort.Direction.DESC, \"updatedAt\")))"], "Fixed commit": "18ecc83f47c53971d3d60c0ef46304fbf56da7e7", "Url": "https://api.github.com/repos/ty666/golden-bag-backend", "Date": "2018-08-02T08:52:00Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zmdev.goldenbag.service.UserService.findByDirectManager(com.zmdev.goldenbag.domain.User)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((users.size()) > 0) { assessments = assessmentService.findByUserInAndStatus(users, Assessment.Status.SUBMITTED, org.springframework.data.domain.PageRequest.of(page, size, new org.springframework.data.domain.Sort(Sort.Direction.DESC, \"updatedAt\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/704/buggy-version/src.main.java.com.zmdev.goldenbag.web.MeController.java", "BodyUseAPI": ["com.zmdev.goldenbag.service.AssessmentService.findByUserInAndStatus(java.util.List<com.zmdev.goldenbag.domain.User>,Assessment.Status.SUBMITTED,org.springframework.data.domain.PageRequest.of(page, size, new org.springframework.data.domain.Sort(Sort.Direction.DESC, \"updatedAt\")))"], "Fixed commit": "18ecc83f47c53971d3d60c0ef46304fbf56da7e7", "Url": "https://api.github.com/repos/ty666/golden-bag-backend", "Date": "2018-08-02T08:52:00Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((strs == null) || ((strs.length) == 0)) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3429/buggy-version/string.LongestCommonPrefix.java", "BodyUseAPI": [], "Fixed commit": "cdd25447550557ed602241478f0b06ec4abc9144", "Url": "https://api.github.com/repos/JerryOrange/myleetcode", "Date": "2018-03-07T02:34:06Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cloudmon.webfront.dao.RoleMapper.findPermissionByRoleId(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((existedPermission.size()) > 0) { x += roleMapper.dropPermissionsFromRole(roleId, existedPermission); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3031/buggy-version/src.main.java.com.cloudmon.webfront.service.RoleService.java", "BodyUseAPI": ["com.cloudmon.webfront.dao.RoleMapper.dropPermissionsFromRole(java.lang.Integer,java.util.List<java.lang.Integer>)"], "Fixed commit": "ad6426e780ecaea86a8d0a46bca437f03ccc3b39", "Url": "https://api.github.com/repos/haiyuanhe/cloudwiz-permission", "Date": "2018-06-14T09:55:50Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((argsType != null) && ((argsType.length) > 0)) { for (java.lang.Class<?> clazz : argsType) { config.setArgs(clazz.getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3363/buggy-version/fast-toolkit.src.main.java.com.thankjava.toolkit.core.aop.util.AopScanner.java", "BodyUseAPI": [], "Fixed commit": "9b6d7500e0be3b4e4925337ffd3c7da07d002cb2", "Url": "https://api.github.com/repos/lazy-koala/java-toolkit", "Date": "2018-10-30T11:52:15Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((filepath) != null) && ((filename) != null)) { try { dataOutputStream.write(buffer, 0, r); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4783/buggy-version/app.src.main.java.com.elevoc.app.recorder.AudioRecorderExt.java", "BodyUseAPI": [], "Fixed commit": "476b6019ecf7cc9842080a88f39b29bf436b1b19", "Url": "https://api.github.com/repos/imu-hupeng/RecorderApp", "Date": "2018-02-02T09:15:00Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((filename != null) && (filepath != null)) { java.io.File parentDir = new java.io.File(filepath); if (!(parentDir.exists())) { parentDir.mkdirs(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4783/buggy-version/app.src.main.java.com.elevoc.app.recorder.AudioRecorderExt.java", "BodyUseAPI": [], "Fixed commit": "476b6019ecf7cc9842080a88f39b29bf436b1b19", "Url": "https://api.github.com/repos/imu-hupeng/RecorderApp", "Date": "2018-02-02T09:15:00Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["clipboard.getPrimaryClip().getItemAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (item != null) { cliphistory = item.getText().toString(); }else { cliphistory = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2092/buggy-version/app.src.main.java.com.unbi.kangleiiyek.GlobalActionBarService.java", "BodyUseAPI": ["item.getText().toString()", "ClipData.Item.getText()"], "Fixed commit": "03891ed58123974c0b695479eb36898074fd0012", "Url": "https://api.github.com/repos/ProjectUNBI/KangleiIyek", "Date": "2018-04-29T23:40:22Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs((y - (yStart)))) > 50) dragged = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3854/buggy-version/core.src.com.spacejunk.game.Controller.java", "BodyUseAPI": [], "Fixed commit": "f4410fe34449824d0626eeeaae1bb4fa2ad32fbe", "Url": "https://api.github.com/repos/SalarUW/SpaceJunk", "Date": "2018-03-26T22:43:35Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.optJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (resultObject == null) { resultObject = result.getJSONArray(\"result\").getJSONObject(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9549/buggy-version/src.main.java.DataHandler.java", "BodyUseAPI": [], "Fixed commit": "16c90f1d7ad4de8ae580c6f158b9c52ed8b8b5d9", "Url": "https://api.github.com/repos/Jugendhackt/InstaNote-Server", "Date": "2018-10-20T19:55:26Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)", "java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (byteNumber != ((message.substring(1).length()) + 1)) { java.lang.System.out.println(\"The received frame has an error!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6657/buggy-version/project1_framing.src.Receiver.java", "BodyUseAPI": [], "Fixed commit": "7dd42737bd16a416dfb1cdc36490b6274e19ee7d", "Url": "https://api.github.com/repos/manoonan1/Framing", "Date": "2018-02-07T18:14:41Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file.isDirectory()) { spec += \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8144/buggy-version/src.main.java.maud.model.option.AssetLocations.java", "BodyUseAPI": [], "Fixed commit": "f92bf9eb15dc0fe995a2e88e63bae1a2a5358af7", "Url": "https://api.github.com/repos/stephengold/Maud", "Date": "2018-07-28T20:46:10Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (column.getType().equals(com.odoo.core.orm.fields.types.OFloat.class)) { resRow.put(column.getName(), new java.math.BigDecimal(row.getString(column.getName())).setScale(4, java.math.BigDecimal.ROUND_HALF_UP).floatValue()); }else if ((column.getRelationType()) == (OColumn.RelationType.ManyToOne)) { resRow.put(column.getName(), ((int) (java.lang.Float.parseFloat(((java.lang.String) (com.suez.utils.SuezJsonUtils.formatStringToJSON(row.getString(column.getName())).get(0))))))); resRow.put(((column.getName()) + \"_name\"), com.suez.utils.SuezJsonUtils.formatStringToJSON(row.getString(column.getName())).get(1)); }else { resRow.put(column.getName(), row.getString(column.getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7206/buggy-version/app.src.main.java.com.suez.utils.SuezJsonUtils.java", "BodyUseAPI": ["com.odoo.core.orm.ODataRow.put(column.getName(),float)", "org.json.JSONArray.get(int)", "com.odoo.core.orm.ODataRow.put(((column.getName()) + \"_name\"),com.suez.utils.SuezJsonUtils.formatStringToJSON(row.getString(column.getName())).get(1))", "com.odoo.core.orm.ODataRow.put(column.getName(),row.getString(column.getName()))", "java.math.BigDecimal.floatValue()", "org.json.JSONArray.get(int)", "com.odoo.core.orm.fields.OColumn.getName()", "com.odoo.core.orm.fields.OColumn.getName()", "com.odoo.core.orm.fields.OColumn.getName()", "com.odoo.core.orm.fields.OColumn.getRelationType()", "com.odoo.core.orm.ODataRow.getString(column.getName())", "com.odoo.core.orm.ODataRow.getString(column.getName())", "com.odoo.core.orm.fields.OColumn.getName()", "java.lang.Float.parseFloat(((java.lang.String) (com.suez.utils.SuezJsonUtils.formatStringToJSON(row.getString(column.getName())).get(0))))", "com.suez.utils.SuezJsonUtils.formatStringToJSON(row.getString(column.getName()))", "com.odoo.core.orm.ODataRow.getString(column.getName())", "com.suez.utils.SuezJsonUtils.formatStringToJSON(row.getString(column.getName()))", "com.odoo.core.orm.fields.OColumn.getName()", "com.odoo.core.orm.ODataRow.put(column.getName(),float)", "com.odoo.core.orm.fields.OColumn.getName()", "com.odoo.core.orm.fields.OColumn.getName()", "java.math.BigDecimal.setScale(int,int)", "com.odoo.core.orm.ODataRow.getString(column.getName())", "com.odoo.core.orm.fields.OColumn.getName()"], "Fixed commit": "f805aa5eed1a726a344c5358959b90c7773434fb", "Url": "https://api.github.com/repos/JoJoJoJoJoJoJo/framework", "Date": "2018-08-17T11:49:43Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["element.getEstablishment().getUrl()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (url != null) { dataOutputStream.writeUTF(url); }else { dataOutputStream.writeUTF(\"null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/363/buggy-version/src.ru.javaops.webapp.storage.serializers.DataSerializer.java", "BodyUseAPI": ["java.io.DataOutputStream.writeUTF(java.lang.String)"], "Fixed commit": "e09a23e56cdc6fe251e5e21af69ae2613c2598ff", "Url": "https://api.github.com/repos/mpalii/BaseJava", "Date": "2018-09-23T13:47:14Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.DataInputStream.readUTF()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (url.equals(\"null\")) { url = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/363/buggy-version/src.ru.javaops.webapp.storage.serializers.DataSerializer.java", "BodyUseAPI": [], "Fixed commit": "e09a23e56cdc6fe251e5e21af69ae2613c2598ff", "Url": "https://api.github.com/repos/mpalii/BaseJava", "Date": "2018-09-23T13:47:14Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentAudioVolume) < (audioManager.getStreamMaxVolume(AudioManager.STREAM_ALARM))) { audioManager.setStreamVolume(AudioManager.STREAM_ALARM, audioManager.getStreamMaxVolume(AudioManager.STREAM_ALARM), AudioManager.FLAG_SHOW_UI); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1573/buggy-version/app.src.main.java.com.saveyourride.services.NotificationManager.java", "BodyUseAPI": ["android.media.AudioManager.setStreamVolume(AudioManager.STREAM_ALARM,audioManager.getStreamMaxVolume(AudioManager.STREAM_ALARM),AudioManager.FLAG_SHOW_UI)", "android.media.AudioManager.getStreamMaxVolume(AudioManager.STREAM_ALARM)"], "Fixed commit": "a031813035499bec75da099d2cf74a4b08afd8ef", "Url": "https://api.github.com/repos/pascalpiper/SaveYourRide", "Date": "2018-05-18T20:14:00Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["WebProxyConstant.responseInfoMap.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (responseInfo == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1979/buggy-version/nettyproxy-web.src.main.java.com.jiangnanyouzi.nettyproxy.web.ResponseHtml.java", "BodyUseAPI": [], "Fixed commit": "98cf556a4ecde63d64e0593b18be24ec56a563e5", "Url": "https://api.github.com/repos/jiangnanyouzi/nettyproxy", "Date": "2018-07-18T01:45:50Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ballXSpeed) > 0) paddleSpeed = 20;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5604/buggy-version/src.MainGame.java", "BodyUseAPI": [], "Fixed commit": "c77f67b8a57e1a165eef4f138e2474b85b193fda", "Url": "https://api.github.com/repos/jcole8806/PONG", "Date": "2018-05-08T17:36:59Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((person) != null) { editTextUsername.setText(person.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3300/buggy-version/app.src.main.java.hft.wiinf.de.horario.view.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "770c5d0eb4b2537705dc117c3440d1fc024d9222", "Url": "https://api.github.com/repos/Horario/Horario", "Date": "2018-04-16T17:30:09Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (preferences.getBoolean(\"enable_voice_pref\", false)) { textToSpeech = new android.speech.tts.TextToSpeech(this, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/359/buggy-version/app.src.main.java.ru.alexfitness.sigurclientmonitor.Activity.MonitorActivity.java", "BodyUseAPI": [], "Fixed commit": "4c5dbf4a8ae69524349327f531782f336b6a49ad", "Url": "https://api.github.com/repos/nikewest/SigurClientMonitor", "Date": "2018-07-17T07:53:57Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (dcm != null) { writer.write(dcm); }else { writer.write(new org.dcm4che3.data.Attributes()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6524/buggy-version/dcmrsbroker-core.src.main.java.org.rsna.isn.dcmrsbroker.core.spark.qido.QidoResponse.java", "BodyUseAPI": ["org.dcm4che3.io.SAXWriter.write(org.dcm4che3.data.Attributes)"], "Fixed commit": "f34a89539468be6e634d376b1d31a81d8e0b4c9e", "Url": "https://api.github.com/repos/RSNA/dcmrs-broker", "Date": "2018-01-12T23:54:31Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((res.length()) > 8) { res = res.substring(0, 8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8028/buggy-version/src.StringUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "bcdb861a934a5a7b1f8a121358a29989deba0ea9", "Url": "https://api.github.com/repos/Purdue-CS193/lab-3-kmutyala90", "Date": "2018-09-29T17:02:16Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dblibrary.project.csci230.UniversityDBLibrary.user_saveSchool(user.getUsername(),school.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (savedSchool < 0) { return false; }else { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4412/buggy-version/src.DBController.java", "BodyUseAPI": [], "Fixed commit": "f65ac8ac5b119653c28ce496a6393248f9a49e5c", "Url": "https://api.github.com/repos/ceramictoasters/CMC", "Date": "2018-02-28T20:18:02Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((foundUser.equals(null)) || (!(foundUser.getPassword().equals(trialPassword)))) { return false; }else { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4412/buggy-version/src.DBController.java", "BodyUseAPI": [], "Fixed commit": "f65ac8ac5b119653c28ce496a6393248f9a49e5c", "Url": "https://api.github.com/repos/ceramictoasters/CMC", "Date": "2018-02-28T20:18:02Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dblibrary.project.csci230.UniversityDBLibrary.user_removeSchool(activeUser.getUsername(),userSchool.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (removedSchool < 0) { return false; }else { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4412/buggy-version/src.DBController.java", "BodyUseAPI": [], "Fixed commit": "f65ac8ac5b119653c28ce496a6393248f9a49e5c", "Url": "https://api.github.com/repos/ceramictoasters/CMC", "Date": "2018-02-28T20:18:02Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((temp.length) != 2) { throw new seedu.address.logic.parser.exceptions.ParseException(java.lang.String.format(seedu.address.logic.parser.MESSAGE_INVALID_COMMAND_FORMAT, LoginCommand.MESSAGE_USAGE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9399/buggy-version/src.main.java.seedu.address.logic.parser.LoginCommandParser.java", "BodyUseAPI": [], "Fixed commit": "df62b2042c8c1979c8a6d5e8070af95f20e1871d", "Url": "https://api.github.com/repos/CS2113-AY1819S1-T09-1/main", "Date": "2018-09-25T08:58:42Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentUserModel) != null) { currentUserModel.setUserName(username); currentUserModel.setFirstName(firstname); currentUserModel.setLastName(lastname); currentUserModel.setCountry(country); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6741/buggy-version/app.src.main.java.il.co.moveyorg.movey.ui.auth.editprofile.EditProfilePresenter.java", "BodyUseAPI": [], "Fixed commit": "b1f7488f9082979b6a8807a88721d3332936f851", "Url": "https://api.github.com/repos/moveyapp/android", "Date": "2018-01-07T18:56:30Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(s.equals(\"&\"))) { gnew.setProductions((key + \"\"), (s + \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4979/buggy-version/regular_languagens.src.regular_grammar.RG_Algorithms.java", "BodyUseAPI": ["regular_grammar.RegularGrammar.setProductions(java.lang.String,java.lang.String)"], "Fixed commit": "cac8671de8925e35b7a77521d8a9ff6d3b61f2dd", "Url": "https://api.github.com/repos/acebr1/Regular_languages", "Date": "2018-05-21T00:33:22Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(dateString.equals(\"\"))) { invite.setDate(dateString); date.setText(dateString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1431/buggy-version/app.src.main.java.com.nyc.polymerse.Invites.Invite_Frag.java", "BodyUseAPI": ["com.nyc.polymerse.Invites.Invite_Schema.setDate(java.lang.String)", "android.widget.EditText.setText(java.lang.String)"], "Fixed commit": "3a3c45cbe7d8d9a791687970ce0465b65977015d", "Url": "https://api.github.com/repos/Waynekellman/Capstone_BMWS", "Date": "2018-03-31T18:26:07Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(timeString.equals(\"\"))) { invite.setTime(timeString); time.setText(timeString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1431/buggy-version/app.src.main.java.com.nyc.polymerse.Invites.Invite_Frag.java", "BodyUseAPI": ["com.nyc.polymerse.Invites.Invite_Schema.setTime(java.lang.String)", "android.widget.EditText.setText(java.lang.String)"], "Fixed commit": "3a3c45cbe7d8d9a791687970ce0465b65977015d", "Url": "https://api.github.com/repos/Waynekellman/Capstone_BMWS", "Date": "2018-03-31T18:26:07Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(o instanceof edu.kit.ipd.dbis.org.jgrapht.additions.graph.PropertyGraph)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9292/buggy-version/src.main.java.edu.kit.ipd.dbis.org.jgrapht.additions.graph.PropertyGraph.java", "BodyUseAPI": [], "Fixed commit": "fae4d6ce98142d871d612ddfe09d1e35fdf8f1d9", "Url": "https://api.github.com/repos/DifferentLink/Grape", "Date": "2018-02-10T16:42:33Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (maxCount < 2) { return 2; }else { return maxCount; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6260/buggy-version/Algorithms.Implementation.PickingNumbers.java", "BodyUseAPI": [], "Fixed commit": "751b31f971d33596fdc7eb5e1093baa40715edec", "Url": "https://api.github.com/repos/rowantran/HackerRank", "Date": "2018-06-19T00:52:50Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.PATHofeng.androidlibs.DemoViewHolder.getAdapterPosition()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((adapterPosition >= 0) && (adapterPosition < (items.size()))) { items.remove(adapterPosition); notifyItemRemoved(adapterPosition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1549/buggy-version/app.src.main.java.com.PATHofeng.androidlibs.DemoAdapter.java", "BodyUseAPI": ["com.PATHofeng.androidlibs.DemoAdapter.1.notifyItemRemoved(int)", "java.util.List<java.lang.String>.remove(int)"], "Fixed commit": "3b20fe07b9798ccd39f91edd099082a6a95d9136", "Url": "https://api.github.com/repos/simonebortolin/FlowLayoutManager", "Date": "2018-07-13T12:54:06Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.PATHofeng.androidlibs.DemoViewHolder.getAdapterPosition()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((adapterPosition >= 0) && (adapterPosition < (items.size()))) { java.util.List<java.lang.String> newItems = com.PATHofeng.androidlibs.DemoUtil.listWords(); items.addAll(adapterPosition, newItems); notifyItemRangeInserted(adapterPosition, newItems.size()); return true; }else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1549/buggy-version/app.src.main.java.com.PATHofeng.androidlibs.DemoAdapter.java", "BodyUseAPI": ["java.util.List<java.lang.String>.addAll(int,java.util.List<java.lang.String>)", "com.PATHofeng.androidlibs.DemoAdapter.2.notifyItemRangeInserted(int,int)"], "Fixed commit": "3b20fe07b9798ccd39f91edd099082a6a95d9136", "Url": "https://api.github.com/repos/simonebortolin/FlowLayoutManager", "Date": "2018-07-13T12:54:06Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["editText.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (data.equals(\"\")) { bundle.putString(todo.activity.AddToDoActivity.dataKey, \"Empty Schedule\"); }else { bundle.putString(todo.activity.AddToDoActivity.dataKey, data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1131/buggy-version/app.src.main.java.todo.activity.AddToDoActivity.java", "BodyUseAPI": ["android.os.Bundle.putString(java.lang.String,java.lang.String)"], "Fixed commit": "38f27df2bc1c79ae93391a14619e2320bea91883", "Url": "https://api.github.com/repos/leejp1998/FinalProject2-2", "Date": "2018-05-07T01:09:31Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<ngsep.alignments.KmerAlignment>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(stack.isEmpty())) && ((stack.peek().getKmerNumber()) == (actual.getKmerNumber()))) { stack.pop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2160/buggy-version/src.ngsep.alignments.ReadsAligner.java", "BodyUseAPI": ["java.util.Stack<ngsep.alignments.KmerAlignment>.pop()"], "Fixed commit": "8071c765fa498eee3836bf41e5d0ea4160cb5493", "Url": "https://api.github.com/repos/NGSEP/NGSEPcore", "Date": "2018-05-20T03:35:15Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inputName == null) { java.lang.System.out.print(\"Please enter name: \"); inputName = library.Library.scan.nextLine(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8761/buggy-version/src.library.Library.java", "BodyUseAPI": [], "Fixed commit": "c55a1403b6b9048382acb8c207571df83cbffb18", "Url": "https://api.github.com/repos/Pierrik/OOP-CW2", "Date": "2018-03-13T14:08:27Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inputName == null) { java.lang.System.out.print(\"Please enter name to be searched: \"); inputName = library.Library.scan.nextLine(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8761/buggy-version/src.library.Library.java", "BodyUseAPI": [], "Fixed commit": "c55a1403b6b9048382acb8c207571df83cbffb18", "Url": "https://api.github.com/repos/Pierrik/OOP-CW2", "Date": "2018-03-13T14:08:27Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name == null) { java.lang.System.out.print(\"\\nEnter the book name: \"); name = library.Library.scan.nextLine(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8761/buggy-version/src.library.Library.java", "BodyUseAPI": [], "Fixed commit": "c55a1403b6b9048382acb8c207571df83cbffb18", "Url": "https://api.github.com/repos/Pierrik/OOP-CW2", "Date": "2018-03-13T14:08:27Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inputGiven == false) { java.lang.System.out.print(\"Enter the book name: \"); bookName = library.Library.scan.nextLine(); java.lang.System.out.print(\"Enter the Author's name: \"); newLineInfo = library.Library.scan.nextLine(); java.lang.System.out.print(\"Enter the year published: \"); yearPublished = library.Library.scan.nextLine(); java.lang.System.out.print(\"Enter the number of copies added: \"); copiesNumber = library.Library.scan.nextLine(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8761/buggy-version/src.library.Library.java", "BodyUseAPI": [], "Fixed commit": "c55a1403b6b9048382acb8c207571df83cbffb18", "Url": "https://api.github.com/repos/Pierrik/OOP-CW2", "Date": "2018-03-13T14:08:27Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (test == null) { java.lang.System.out.print(\"yolo\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8761/buggy-version/src.library.Member.java", "BodyUseAPI": [], "Fixed commit": "c55a1403b6b9048382acb8c207571df83cbffb18", "Url": "https://api.github.com/repos/Pierrik/OOP-CW2", "Date": "2018-03-13T14:08:27Z"},
{"Line": "=>611", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name == (CommitmentSchema.CommitmentTable.NAME)) { mCommitmentDatabase.delete(CommitmentSchema.CommitmentTable.NAME, ((CommitmentSchema.CommitmentTable.Cols.ID) + \" = ?\"), new java.lang.String[]{ primarykey }); }else { mReminderDatabase.delete(CommitmentSchema.ReminderTable.NAME, ((CommitmentSchema.ReminderTable.Cols.ID) + \" = ?\"), new java.lang.String[]{ primarykey }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6907/buggy-version/app.src.main.java.com.group18.app.calendar.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "509cedbbadf414bbfed8d994d65da055bdcafc97", "Url": "https://api.github.com/repos/brendancohen/gatorcalendar", "Date": "2018-04-22T18:50:00Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getParameter()) != null) { count += getParameter().length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7768/buggy-version/apiconnector.src.main.java.org.openml.apiconnector.xml.Flow.java", "BodyUseAPI": [], "Fixed commit": "b3e8c6848318d8c306a6ea2312d7d692aa010eb8", "Url": "https://api.github.com/repos/openml/openml-java", "Date": "2018-06-06T05:06:16Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getParameter()) != null) { for (org.openml.apiconnector.xml.Parameter param : getParameter()) { parameters.add(new org.openml.apiconnector.xml.Parameter(null, id, (((name) + \"_\") + (param.getName())), param.getName(), param.getData_type(), param.getDefault_value(), null)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7768/buggy-version/apiconnector.src.main.java.org.openml.apiconnector.xml.Flow.java", "BodyUseAPI": [], "Fixed commit": "b3e8c6848318d8c306a6ea2312d7d692aa010eb8", "Url": "https://api.github.com/repos/openml/openml-java", "Date": "2018-06-06T05:06:16Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.equals(that)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2389/buggy-version/elvaston-aeron.src.main.java.org.elvaston.aeron.metrics.AeronMetric.java", "BodyUseAPI": [], "Fixed commit": "73b5de54863b2dbeb017e9bce800247a547ff5df", "Url": "https://api.github.com/repos/dollin/elvaston", "Date": "2018-06-16T07:02:04Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (esprimaNode.get(\"kind\").asString().equals(\"method\")) { return java.util.Collections.singleton(Stereotype.TYPE_MEMBER); }else { return java.util.Collections.emptySet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/5614/buggy-version/refdiff-js.src.main.java.refdiff.parsers.js.EsprimaNodeHandler.java", "BodyUseAPI": [], "Fixed commit": "25eb1a8a7db17789e1179f28f18b29da9ca45e8b", "Url": "https://api.github.com/repos/aserg-ufmg/RefDiff", "Date": "2018-02-08T00:37:26Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tvPromTime) != null) tvPromTime.setVisibility(View.GONE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4112/buggy-version/app.src.main.java.ru.neosvet.utils.Prom.java", "BodyUseAPI": [], "Fixed commit": "fb1c4d058ff547daad0f12978c4484ede85b18fb", "Url": "https://api.github.com/repos/NeoSvet/VestNewAge", "Date": "2018-06-03T18:54:04Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.esciencecenter.computeservice.rest.model.JobRepository.findOne(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (job.getInternalState().isRemote()) { java.lang.String xenonJobId = job.getXenonId(); if ((xenonJobId != null) && (!(xenonJobId.isEmpty()))) { nl.esciencecenter.xenon.schedulers.Scheduler scheduler = xenonService.getScheduler(); nl.esciencecenter.xenon.schedulers.JobStatus status = scheduler.getJobStatus(xenonJobId); if (status.isRunning()) { status = scheduler.cancelJob(job.getXenonId()); nl.esciencecenter.computeservice.rest.service.tasks.DeleteJobTask.logger.debug((((\"Cancelled job: \" + (job.getId())) + \" new status: \") + status)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/3934/buggy-version/src.main.java.nl.esciencecenter.computeservice.rest.service.tasks.DeleteJobTask.java", "BodyUseAPI": ["nl.esciencecenter.computeservice.rest.model.Job.getXenonId()", "nl.esciencecenter.computeservice.rest.model.Job.getId()", "nl.esciencecenter.xenon.schedulers.Scheduler.cancelJob(job.getXenonId())", "nl.esciencecenter.computeservice.rest.model.Job.getXenonId()", "org.slf4j.Logger.debug((((\"Cancelled job: \" + (job.getId())) + \" new status: \") + status))"], "Fixed commit": "152cfad1147d279f3fbfc5bc5a6841ad9f904d3d", "Url": "https://api.github.com/repos/NLeSC/xenon-flow", "Date": "2018-06-11T09:32:32Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((receivers == null) || ((receivers.size()) == 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8382/buggy-version/AlandTrainingService.src.main.java.com.conedot.aland.training.manager.TrainingManager.java", "BodyUseAPI": [], "Fixed commit": "4c7e05350fea2c03905c3b46ca2f3ea99e2fcdfa", "Url": "https://api.github.com/repos/victorwang0526/AlandTraining", "Date": "2018-07-01T02:30:09Z"},
{"Line": "=>716", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDrawingView) != null) { mDrawingView.setParticles(new java.util.ArrayList<com.plattysoft.leonids.Particle>(mActiveParticles)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/8697/buggy-version/LeonidsLib.src.main.java.com.plattysoft.leonids.ParticleSystem.java", "BodyUseAPI": [], "Fixed commit": "4ae7980d6170dd9b8f58a06775b21a5f18982c1e", "Url": "https://api.github.com/repos/petitpre/Leonids", "Date": "2018-10-30T10:34:03Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((null != (link.attr(\"href\"))) && (!(link.attr(\"href\").contains(\"http\")))) { categoryObj.setWebLink((url + (link.attr(\"href\")))); }else { categoryObj.setWebLink(link.attr(\"href\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9712/buggy-version/plastic.src.main.java.Sample.CategoryBoot.java", "BodyUseAPI": ["Sample.Category.setWebLink((url + (link.attr(\"href\"))))", "Sample.Category.setWebLink(link.attr(\"href\"))", "org.jsoup.nodes.Element.attr(java.lang.String)", "org.jsoup.nodes.Element.attr(java.lang.String)"], "Fixed commit": "511dbaa92311de1c2f4d4512f479c26468a87e28", "Url": "https://api.github.com/repos/rameshwarsingh11/craigslist-categorries", "Date": "2018-05-14T15:14:35Z"},
{"Line": "=>869", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((question.length()) < 3) nextBtn.setVisible(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/1848/buggy-version/Main.java", "BodyUseAPI": [], "Fixed commit": "cda0b707446abd92cbff116e3ef457f27a4011ed", "Url": "https://api.github.com/repos/richyliu/java-game", "Date": "2018-05-02T02:15:12Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nonZeroScores == 0) nonZeroScores = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9143/buggy-version/src.Fusion.CombANZBaseFusion.java", "BodyUseAPI": [], "Fixed commit": "2a2e41a1771d0b96240f4a8bbe18b160bf3cbd4c", "Url": "https://api.github.com/repos/annabonaldo/IRCondorcetFuse", "Date": "2018-01-26T13:30:14Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.Objects.nonNull(messageSender)) { messageSender.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/533/buggy-version/component.src.main.java.org.wso2.extension.siddhi.io.ibmmq.sink.IBMMQSink.java", "BodyUseAPI": ["javax.jms.QueueSender.close()"], "Fixed commit": "240a2e98adf874224c22103032b49aa45d8fcb74", "Url": "https://api.github.com/repos/RukshiW/siddhi-io-ibmmq", "Date": "2018-09-10T08:33:45Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URL.toExternalForm()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (baseUrl.endsWith(\"/\")) { url = baseUrl + path; }else { url = (baseUrl + \"/\") + path; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6053/buggy-version/foundation-service.src.main.java.org.unidal.helper.Scanners.java", "BodyUseAPI": [], "Fixed commit": "57e22afdccac3f3c97c4d9d91c9d84f005545e0a", "Url": "https://api.github.com/repos/unidal/frameworks", "Date": "2018-06-16T05:16:20Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URL.toExternalForm()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (baseUrl.endsWith(\"/\")) { url = baseUrl + path; }else { url = (baseUrl + \"/\") + path; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6053/buggy-version/foundation-service.src.main.java.org.unidal.lookup.container.ComponentModelManager.java", "BodyUseAPI": [], "Fixed commit": "57e22afdccac3f3c97c4d9d91c9d84f005545e0a", "Url": "https://api.github.com/repos/unidal/frameworks", "Date": "2018-06-16T05:16:20Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gwt.event.logical.shared.ValueChangeEvent<org.roda.core.data.v2.ip.IndexedAIP>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.roda.wui.client.common.utils.StringUtils.isNotBlank(aip.getTitle())) { linkText.setText(aip.getTitle()); }else { linkText.setText(org.roda.wui.client.common.dialogs.RepresentationInformationDialogs.messages.noTitleMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7991/buggy-version/roda-ui.roda-wui.src.main.java.org.roda.wui.client.common.dialogs.RepresentationInformationDialogs.java", "BodyUseAPI": ["org.roda.core.data.v2.ip.IndexedAIP.getTitle()", "org.roda.wui.client.common.ValuedLabel.setText(aip.getTitle())"], "Fixed commit": "317bae35a762dd8f96651bb6023194cb13144ac7", "Url": "https://api.github.com/repos/keeps/roda", "Date": "2018-01-09T17:58:48Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (addition < (minHeap.peek())) { maxHeap.add(addition); }else if (addition > (maxHeap.peek())) { minHeap.add(addition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2928/buggy-version/13Medians.RunningMedian.java", "BodyUseAPI": ["MyHeap<java.lang.Double>.add(java.lang.Double)", "MyHeap<java.lang.Double>.add(java.lang.Double)"], "Fixed commit": "3579acaaa917bb89d1ee2872b17b1db5cf4ecd90", "Url": "https://api.github.com/repos/aradu01/MKS22X", "Date": "2018-05-21T00:58:39Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.Map>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (db == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/7794/buggy-version/src.main.java.com.seeyon.apps.nbd.core.db.DataBaseHandler.java", "BodyUseAPI": [], "Fixed commit": "6f4dd6804e4a93278f3927e3d9dacc83c1fa8e0b", "Url": "https://api.github.com/repos/liuwenping1985/mingxi", "Date": "2018-10-28T15:40:04Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((queryTokens.length) == 2) { uniqueIds.add(queryTokens[0]); }else { eppic.db.tools.UploadUniprotInfoToDb.logger.warn(\"Query id {} did not split into 2 tokens at '_' delimiter. Ignoring it.\", queryId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/4384/buggy-version/eppic-dbtools.src.main.java.eppic.db.tools.UploadUniprotInfoToDb.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)"], "Fixed commit": "013a990b0038b0883136f54b46deaa648dd1d6ce", "Url": "https://api.github.com/repos/josemduarte/eppic", "Date": "2018-10-10T01:37:36Z"},
{"Line": "=>974", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count > 500) { result.append(original.substring(current, (current + Offset)).replace(\"\\r\", \"\").replace(\"\\n\", \"\\\\n\")).append(\"\\\" + new String()\\n+\\\"\"); count = 0; }else { result.append(original.substring(current, (current + Offset)).replace(\"\\r\", \"\").replace(\"\\n\", \"\\\\n\")).append(\"\\\"\\n+\\\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/2289/buggy-version/main.plugins.org.talend.core.runtime.src.main.java.org.talend.core.model.utils.NodeUtil.java", "BodyUseAPI": [], "Fixed commit": "3410fb4e76bc31d1213df7ff852d013ff8a1218d", "Url": "https://api.github.com/repos/pyzhou-talend/tcommon-studio-se", "Date": "2018-02-07T02:45:50Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (desiredCoP.containsNaN()) { jacobianToPack.reshape(2, rhoSize); jacobianToPack.zero(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/9616/buggy-version/ihmc-common-walking-control-modules.src.main.java.us.ihmc.commonWalkingControlModules.wrenchDistribution.PlaneContactStateToWrenchMatrixHelper.java", "BodyUseAPI": [], "Fixed commit": "c99b0b0a2e2c5da8f766db2403215c81c7993318", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-open-robotics-software", "Date": "2018-08-23T20:26:49Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerChatEvent.getMessage()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(message.equalsIgnoreCase(\"afa\"))) OldMessage.put(player.getUniqueId(), message);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/6101/buggy-version/src.main.java.com.jaoafa.jaoSuperAchievement.jaoAchievement.Speakjao_afa.java", "BodyUseAPI": ["java.util.Map<java.util.UUID, java.lang.String>.put(player.getUniqueId(),java.lang.String)"], "Fixed commit": "ccd26bef43330902a34930bedf7415413298a67e", "Url": "https://api.github.com/repos/jaoafa/jao-Super-Achievement", "Date": "2018-03-19T18:04:00Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState != null) { mCurrentPhotoFileName = savedInstanceState.getString(vitalypanov.phototracker.RunningTrackShortInfoFragment.SAVED_PARAM_CURRENT_PHOTO_FILE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V165/802/buggy-version/app.src.main.java.vitalypanov.phototracker.RunningTrackShortInfoFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(java.lang.String)"], "Fixed commit": "d83b71d90f6b4be6394f393b2ce672d6e9d08555", "Url": "https://api.github.com/repos/panovvitalik/PhotoTracker", "Date": "2018-03-06T15:05:44Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.mazawrath.beanbot.utilities.StockMarket.getSymbol(args[1])) != null) { if (points.removePoints(author.getIdAsString(), null, server.getIdAsString(), new java.math.BigDecimal(args[2]).setScale(Points.SCALE, Points.ROUNDING_MODE))) { java.math.BigDecimal sharesBought = stockMarket.buyShares(author.getIdAsString(), server.getIdAsString(), args[1].toUpperCase(), new java.math.BigDecimal(args[2]).setScale(Points.SCALE, Points.ROUNDING_MODE)); if ((sharesBought.compareTo(java.math.BigDecimal.ZERO)) > 0) serverTextChannel.sendMessage((((\"Bought \" + sharesBought) + \" shares from \") + (stockMarket.getComapanyName(args[1].toUpperCase())))); else serverTextChannel.sendMessage(\"some error happened and I don't know what it is.\"); }else serverTextChannel.sendMessage(\"You do not have enough beanCoin for this command\"); }else serverTextChannel.sendMessage(\"Symbol not found.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1580/buggy-version/src.main.java.com.mazawrath.beanbot.commands.beanmarket.BeanInvestCommand.java", "BodyUseAPI": ["com.mazawrath.beanbot.utilities.Points.removePoints(author.getIdAsString(),<nulltype>,server.getIdAsString(),java.math.BigDecimal)", "com.mazawrath.beanbot.utilities.StockMarket.getComapanyName(java.lang.String)", "java.math.BigDecimal.setScale(Points.SCALE,Points.ROUNDING_MODE)", "org.javacord.api.entity.channel.ServerTextChannel.sendMessage((((\"Bought \" + sharesBought) + \" shares from \") + (stockMarket.getComapanyName(args[1].toUpperCase()))))", "java.lang.String.toUpperCase()", "com.mazawrath.beanbot.utilities.StockMarket.buyShares(author.getIdAsString(),server.getIdAsString(),java.lang.String,java.math.BigDecimal)", "java.lang.String.toUpperCase()", "java.math.BigDecimal.setScale(Points.SCALE,Points.ROUNDING_MODE)"], "Fixed commit": "10716a9367091a5714e2bd72f28a6fff7b800c6b", "Url": "https://api.github.com/repos/Mazawrath/beanBOT", "Date": "2018-10-19T19:38:02Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((majorParam) == null) { throw new java.lang.IllegalStateException(\"This route takes no major params!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2282/buggy-version/src.main.java.com.mewna.catnip.rest.Routes.java", "BodyUseAPI": [], "Fixed commit": "1663dd462de9094033ef89a71b8636e70af0e643", "Url": "https://api.github.com/repos/natanbc/catnip", "Date": "2018-09-03T01:08:41Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((json.getValue(\"embeds\", null)) == null) && ((json.getValue(\"content\", null)) == null)) { throw new java.lang.IllegalArgumentException(\"Can't build a message with no content and no embeds!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2282/buggy-version/src.main.java.com.mewna.catnip.rest.Rest.java", "BodyUseAPI": [], "Fixed commit": "1663dd462de9094033ef89a71b8636e70af0e643", "Url": "https://api.github.com/repos/natanbc/catnip", "Date": "2018-09-03T01:08:41Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((message.content()) != null) && (!(message.content().isEmpty()))) { json.put(\"content\", message.content()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2282/buggy-version/src.main.java.com.mewna.catnip.rest.Rest.java", "BodyUseAPI": ["io.vertx.core.json.JsonObject.put(java.lang.String,message.content())", "com.mewna.catnip.entity.Message.content()"], "Fixed commit": "1663dd462de9094033ef89a71b8636e70af0e643", "Url": "https://api.github.com/repos/natanbc/catnip", "Date": "2018-09-03T01:08:41Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((message.embeds()) != null) && (!(message.embeds().isEmpty()))) { json.put(\"embeds\", new io.vertx.core.json.JsonArray(message.embeds())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2282/buggy-version/src.main.java.com.mewna.catnip.rest.Rest.java", "BodyUseAPI": ["com.mewna.catnip.entity.Message.embeds()", "io.vertx.core.json.JsonObject.put(java.lang.String,io.vertx.core.json.JsonArray)"], "Fixed commit": "1663dd462de9094033ef89a71b8636e70af0e643", "Url": "https://api.github.com/repos/natanbc/catnip", "Date": "2018-09-03T01:08:41Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stack.getName().length()) > 63) { stack.setName(stack.getName().substring(0, 62)); log.warn(((\"Stackname truncate: \\\"\" + (stack.getName())) + \"\\\"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3323/buggy-version/src.main.java.io.crowdcode.maven.plugins.rancher.RancherApiMojo.java", "BodyUseAPI": ["io.crowdcode.maven.plugins.rancher.RancherApiMojo.warn(((\"Stackname truncate: \\\"\" + (stack.getName())) + \"\\\"\"))", "io.crowdcode.maven.plugins.rancher.Stack.getName()", "io.crowdcode.maven.plugins.rancher.Stack.setName(stack.getName().substring(0, 62))", "stack.getName().substring(int,int)", "io.crowdcode.maven.plugins.rancher.Stack.getName()"], "Fixed commit": "f66db57cdb55f328b52c06787e824c2db9e69ae0", "Url": "https://api.github.com/repos/crowdcode-de/rancher-maven-plugin", "Date": "2018-02-25T21:07:46Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (baos != null) { try { baos.close(); } catch (java.io.IOException ignore) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1597/buggy-version/library.src.main.java.com.vwo.mobile.network.NetworkStringRequest.java", "BodyUseAPI": ["java.io.ByteArrayOutputStream.close()"], "Fixed commit": "dc6719600462583017f67814e90085a59be4e6bb", "Url": "https://api.github.com/repos/wingify/vwo-android", "Date": "2018-04-30T03:56:31Z"},
{"Line": "=>612", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mTask) == null) || ((mTask.getNozzle()) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3659/buggy-version/src.com.industry.printer.BinInfo.java", "BodyUseAPI": [], "Fixed commit": "f5320e02545b988cb203eb33fc33fcf0832b7673", "Url": "https://api.github.com/repos/kevin-zhaotk/Printer", "Date": "2018-09-29T14:03:44Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.kkmofang.app.Heapptr.context()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ctx == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4828/buggy-version/kk-app.src.main.java.cn.kkmofang.app.AsyncCaller.java", "BodyUseAPI": [], "Fixed commit": "fdb7488c9993db0bc557c6780d3d4e9cee29dbf5", "Url": "https://api.github.com/repos/hailongz/kk-app", "Date": "2018-07-23T03:38:46Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currFragment) == 2) { btnHome.performClick(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4468/buggy-version/app.src.main.java.com.example.owner.petbetter.activities.CommActivity.java", "BodyUseAPI": [], "Fixed commit": "139ec579f3806da8d4bbe148e2b223b7d79f7d54", "Url": "https://api.github.com/repos/DwardTiro/PetBetter", "Date": "2018-03-15T08:39:06Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currFragment) == 1) { btnCommunity.performClick(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4468/buggy-version/app.src.main.java.com.example.owner.petbetter.activities.CommActivity.java", "BodyUseAPI": [], "Fixed commit": "139ec579f3806da8d4bbe148e2b223b7d79f7d54", "Url": "https://api.github.com/repos/DwardTiro/PetBetter", "Date": "2018-03-15T08:39:06Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ApplicationShare.skillList.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (skills != null) { skillName[i] = skills[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2588/buggy-version/app.src.main.java.com.fastbooster.android_teamwith.model.MemberSkillVO.java", "BodyUseAPI": [], "Fixed commit": "37a6c36fd9f28c0d6b082ac187ff037b89c15f10", "Url": "https://api.github.com/repos/kyungjunyim/android_teamwith", "Date": "2018-08-27T02:51:54Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.wso2.carbon.identity.oauth.config.OAuthServerConfiguration.getInstance().usePersistedAccessTokenAlias()) { try { accessToken = org.wso2.carbon.identity.oauth.config.OAuthServerConfiguration.getInstance().getIdentityOauthTokenIssuer().getAccessTokenHash(accessToken); } catch (org.apache.oltu.oauth2.common.exception.OAuthSystemException e) { if ((log.isDebugEnabled()) && (org.wso2.carbon.identity.core.util.IdentityUtil.isTokenLoggable(IdentityConstants.IdentityTokens.ACCESS_TOKEN))) { log.debug((\"Error while getting access token hash for token(hashed): \" + (org.apache.commons.codec.digest.DigestUtils.sha256Hex(accessToken)))); } throw new org.wso2.carbon.identity.oauth2.IdentityOAuth2Exception(\"Error while getting access token hash.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9395/buggy-version/components.org.wso2.carbon.identity.oauth.src.main.java.org.wso2.carbon.identity.oauth2.dao.AccessTokenDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "aeac2d49b74ae3c7491032d5bc71c61fdaa48075", "Url": "https://api.github.com/repos/IndunilRathnayake/identity-inbound-auth-oauth", "Date": "2018-02-05T06:40:29Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sp.getSelectedItem()) != null) { if (sp.getSelectedItem().toString().equals(\"\")) { states.put(sp.getId(), false); de.domjos.schooltools.helper.Helper.createToast(this.context, java.lang.String.format(this.context.getString(R.string.message_validation_empty), title)); }else { states.put(sp.getId(), true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9500/buggy-version/src.main.java.de.domjos.schooltools.helper.Validator.java", "BodyUseAPI": ["sp.getSelectedItem().toString()", "android.widget.Spinner.getId()", "java.util.Map<java.lang.Integer, java.lang.Boolean>.put(sp.getId(),boolean)", "android.widget.Spinner.getSelectedItem()", "sp.getSelectedItem().toString().equals(java.lang.String)", "java.util.Map<java.lang.Integer, java.lang.Boolean>.put(sp.getId(),boolean)", "android.widget.Spinner.getId()"], "Fixed commit": "120e3b889d48cb5e3df2e7e2a5d7b07a388e618d", "Url": "https://api.github.com/repos/domjos1994/SchoolTools", "Date": "2018-09-05T17:55:28Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.provider.DocumentsContract.getDocumentId(android.net.Uri)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(id))) { if (id.startsWith(\"raw:\")) { return id.replaceFirst(\"raw:\", \"\"); } try { android.net.Uri contentUri = android.content.ContentUris.withAppendedId(android.net.Uri.parse(\"content://downloads/public_downloads\"), java.lang.Long.valueOf(id)); return com.seafile.seadroid2.util.UriFilePath.getDataColumn(context, contentUri, null, null); } catch (java.lang.NumberFormatException e) { return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5400/buggy-version/app.src.main.java.com.seafile.seadroid2.util.UriFilePath.java", "BodyUseAPI": ["java.lang.String.replaceFirst(java.lang.String,java.lang.String)", "android.content.ContentUris.withAppendedId(android.net.Uri.parse(\"content://downloads/public_downloads\"),java.lang.Long)", "java.lang.Long.valueOf(java.lang.String)", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "3ebc363c4ab037ad6397d8038b65c86e8e09db60", "Url": "https://api.github.com/repos/haiwen/seadroid", "Date": "2018-05-25T07:42:06Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(area4.getText())) { area4.setText(com.gtm.csims.offline.scene.inspection.IncomingTab.DEFAULT_BEGINNING_TEXT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3913/buggy-version/src.com.gtm.csims.offline.scene.inspection.IncomingTab.java", "BodyUseAPI": [], "Fixed commit": "a3045548d65aa3181883a44a214043572fa2145f", "Url": "https://api.github.com/repos/YangYongZhi/csims_offline", "Date": "2018-03-08T12:28:47Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActionBar()) != null) getActionBar().setDisplayHomeAsUpEnabled(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5860/buggy-version/shout.src.main.java.org.whispercomm.shout.ui.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "603f98c1a0c4a30136e09976bc6f3df785b26424", "Url": "https://api.github.com/repos/jackhe-umich/Shout-revised", "Date": "2018-09-02T14:47:21Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mReceiveTimeout) > 0) timeout = java.lang.Math.max(((int) ((mReceiveTimeout) - (java.lang.System.currentTimeMillis()))), 1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5468/buggy-version/app.src.main.java.io.mrarm.irc.dcc.SSDPDiscovery.java", "BodyUseAPI": ["java.lang.Math.max(long,int)"], "Fixed commit": "5adb2126ab65b00d235cb577ae183424babc8ff7", "Url": "https://api.github.com/repos/MCMrARM/revolution-irc", "Date": "2018-08-29T12:12:46Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.landyking.link.beetl.BeetlTool.renderBeetl(com.github.landyking.link.execution.DirectiveMojo,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (com.github.landyking.link.util.Texts.hasText(tmpWhere)) { sql.append((\" where \" + tmpWhere)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3400/buggy-version/link-core.src.main.java.com.github.landyking.link.execution.DbUpdate.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "2582e4e2e4325955208cbbc020abc1fdf527658d", "Url": "https://api.github.com/repos/landyking/link", "Date": "2018-08-20T02:34:08Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mojo.getParser().getSubElement(org.w3c.dom.Element,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (whereEle != null) { java.lang.String tmp = com.github.landyking.link.beetl.BeetlTool.renderBeetl(mojo, whereEle.getTextContent()); if (com.github.landyking.link.util.Texts.hasText(tmp)) { sql.append(\"where \"); sql.append((tmp + \" \")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3400/buggy-version/link-core.src.main.java.com.github.landyking.link.execution.DbSelect.java", "BodyUseAPI": ["com.github.landyking.link.beetl.BeetlTool.renderBeetl(com.github.landyking.link.execution.DirectiveMojo,java.lang.String)", "org.w3c.dom.Element.getTextContent()"], "Fixed commit": "2582e4e2e4325955208cbbc020abc1fdf527658d", "Url": "https://api.github.com/repos/landyking/link", "Date": "2018-08-20T02:34:08Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playerStam) != (playerMaxStam)) playerStam += playerStamRegen;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3616/buggy-version/app.src.main.java.com.drew.teamawesomegame.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "c418e1be1bd4a355f743ad9bfd2d5c4ddc3e55d6", "Url": "https://api.github.com/repos/DrewVanD/TeamAwesomeGame", "Date": "2018-05-17T18:28:37Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userHasBeenChanged) { org.springframework.security.core.context.SecurityContextHolder.clearContext(); return \"<script>alert(\\\"Profil zaktualizowany - zaloguj si\\u0119 za pomoc\\u0105 nowej nazwy u\\u017cytkownika\\\"); window.location = \\\"/profil\\\"</script>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8693/buggy-version/src.main.java.pl.javastart.springsecurity.UserController.java", "BodyUseAPI": [], "Fixed commit": "fa701097ec6bde6fa31f789ace85dd106f366a35", "Url": "https://api.github.com/repos/GITBandit/Zadanie26-01", "Date": "2018-03-02T14:22:14Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((person.getTags().size()) == 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8684/buggy-version/src.main.java.seedu.address.model.person.TagContainsKeywordsPredicate.java", "BodyUseAPI": [], "Fixed commit": "c8772a7ea6e59e28a3bf25bf07a8cd9985745240", "Url": "https://api.github.com/repos/CS2103JAN2018-T11-B2/main", "Date": "2018-04-15T15:58:36Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cafeData.getWeeklyMenu().get(cafeData.indexOfCurrentDay()).size()) > 2) { cafeData.getWeeklyMenu().get(cafeData.indexOfCurrentDay()).remove(2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9136/buggy-version/app.src.main.java.com.example.jc.eatery_android.MenuActivity.java", "BodyUseAPI": ["com.example.jc.eatery_android.Model.CafeteriaModel.indexOfCurrentDay()", "com.example.jc.eatery_android.Model.CafeteriaModel.getWeeklyMenu()", "cafeData.getWeeklyMenu().get(cafeData.indexOfCurrentDay()).remove(int)", "cafeData.getWeeklyMenu().get(cafeData.indexOfCurrentDay())"], "Fixed commit": "f86412234fc30b8977bf8c53ce90afda8ade61ce", "Url": "https://api.github.com/repos/cuappdev/eatery-android", "Date": "2018-04-29T15:00:28Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type == (resource.getType())) { return resource.getAmount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9378/buggy-version/core.src.se.tevej.game.model.components.CostComponent.java", "BodyUseAPI": ["se.tevej.game.model.resource.Resource.getAmount()"], "Fixed commit": "b31391d36928e51e0eabc83a58e844d9700dedbf", "Url": "https://api.github.com/repos/Tevej/DayInGothenburgInTime", "Date": "2018-09-23T19:21:04Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.getSystemService(Context.FINGERPRINT_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fingerprintManager == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4762/buggy-version/passcodeview.src.main.java.com.kevalpatel.passcodeview.Utils.java", "BodyUseAPI": [], "Fixed commit": "119f62cf858009a4dfc141b015f1fde6862c1eed", "Url": "https://api.github.com/repos/praveenb/PasscodeView", "Date": "2018-10-22T14:12:49Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.getSystemService(Context.FINGERPRINT_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fingerprintManager == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4762/buggy-version/passcodeview.src.main.java.com.kevalpatel.passcodeview.Utils.java", "BodyUseAPI": [], "Fixed commit": "119f62cf858009a4dfc141b015f1fde6862c1eed", "Url": "https://api.github.com/repos/praveenb/PasscodeView", "Date": "2018-10-22T14:12:49Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.getSystemService(Context.FINGERPRINT_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fingerprintManager == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4762/buggy-version/passcodeview.src.main.java.com.kevalpatel.passcodeview.FingerPrintAuthHelper.java", "BodyUseAPI": [], "Fixed commit": "119f62cf858009a4dfc141b015f1fde6862c1eed", "Url": "https://api.github.com/repos/praveenb/PasscodeView", "Date": "2018-10-22T14:12:49Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flag == false) { java.lang.System.out.println(\" There are no recipe to be editted.\\n\"); edu.ncsu.csc326.coffeemaker.Main.mainMenu(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1763/buggy-version/CoffeeMaker.CoffeeMaker_JUnit.src.edu.ncsu.csc326.coffeemaker.Main.java", "BodyUseAPI": [], "Fixed commit": "4ffb98ff5c507fb05f592e2d4e7ef5980140ff18", "Url": "https://api.github.com/repos/HatsyRei/CPT341SDA", "Date": "2018-10-13T16:32:16Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bm == null) { preferences.edit().putString(com.example.dell.newsarticlesummarizer.utils.AppPreferences.DP_KEY, \"\").apply(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9297/buggy-version/app.src.main.java.com.example.dell.newsarticlesummarizer.utils.AppPreferences.java", "BodyUseAPI": [], "Fixed commit": "08038f674924bc53410ba8e080bbc6a50c7f7f8b", "Url": "https://api.github.com/repos/AwaisMajeed2536/News-Articles-Summarizer", "Date": "2018-08-30T08:04:58Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (isFuncName(funcName)) func = getVarByName(funcName, start, end); else if ((symbol == null) && ((funcName.charAt(((funcName.length()) - 1))) != '=')) func = parsing.Expression.recursiveCalc(funcName, s, start, end, lineNum);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3932/buggy-version/src.parsing.Expression.java", "BodyUseAPI": ["java.lang.String.length()", "parsing.Expression.recursiveCalc(java.lang.String,java.lang.String,int,int,int)", "parsing.Expression.getVarByName(java.lang.String,int,int)", "java.lang.String.charAt(int)"], "Fixed commit": "5b2ddf286414ddc6711f1f508456319925c68ea2", "Url": "https://api.github.com/repos/Daniel-Liu-c0deb0t/reCall", "Date": "2018-04-12T05:48:26Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.sqrt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((length - jump) - 1) > jump) { while (((arr[(index - 1)]) < k) && (index < length)) { intervalStart = index; index += jump; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4637/buggy-version/SearchingNumber.java", "BodyUseAPI": [], "Fixed commit": "7d1b2f676541ea8db5bffa470365ebe100349071", "Url": "https://api.github.com/repos/imdhemy/geeksforgeeks", "Date": "2018-09-23T19:07:58Z"},
{"Line": "=>1281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sender instanceof org.bukkit.entity.Player) { com.Ben12345rocks.VotingPlugin.Objects.User user = com.Ben12345rocks.VotingPlugin.UserManager.UserManager.getInstance().getVotingPluginUser(((org.bukkit.entity.Player) (sender))); user.sendMessage(com.Ben12345rocks.VotingPlugin.TopVoter.TopVoterHandler.getInstance().topVoterMonthly(page)); org.bukkit.Bukkit.getScheduler().runTask(com.Ben12345rocks.VotingPlugin.Commands.CommandLoader.plugin, new java.lang.Runnable() { @java.lang.Override public void run() { com.Ben12345rocks.VotingPlugin.Commands.Commands.getInstance().sendTopVoterMonthlyScoreBoard(((org.bukkit.entity.Player) (sender)), page); } }); }else { sender.sendMessage(com.Ben12345rocks.VotingPlugin.TopVoter.TopVoterHandler.getInstance().topVoterMonthly(page)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8282/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Commands.CommandLoader.java", "BodyUseAPI": ["org.bukkit.command.CommandSender.sendMessage(com.Ben12345rocks.VotingPlugin.TopVoter.TopVoterHandler.getInstance().topVoterMonthly(page))"], "Fixed commit": "a0f6016dcd7a9188d0608896db217e83c762c544", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2018-09-16T00:06:47Z"},
{"Line": "=>1277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.Ben12345rocks.VotingPlugin.Config.Config.getInstance().getCommandsUseGUITopVoter())) { int page = 1; java.lang.String str = com.Ben12345rocks.VotingPlugin.Config.Config.getInstance().getVoteTopDefault(); if (str.equalsIgnoreCase(\"monthly\")) { if (sender instanceof org.bukkit.entity.Player) { com.Ben12345rocks.VotingPlugin.Objects.User user = com.Ben12345rocks.VotingPlugin.UserManager.UserManager.getInstance().getVotingPluginUser(((org.bukkit.entity.Player) (sender))); user.sendMessage(com.Ben12345rocks.VotingPlugin.TopVoter.TopVoterHandler.getInstance().topVoterMonthly(page)); org.bukkit.Bukkit.getScheduler().runTask(com.Ben12345rocks.VotingPlugin.Commands.CommandLoader.plugin, new java.lang.Runnable() { @java.lang.Override public void run() { com.Ben12345rocks.VotingPlugin.Commands.Commands.getInstance().sendTopVoterMonthlyScoreBoard(((org.bukkit.entity.Player) (sender)), page); } }); }else { sender.sendMessage(com.Ben12345rocks.VotingPlugin.TopVoter.TopVoterHandler.getInstance().topVoterMonthly(page)); } }else if (str.equalsIgnoreCase(\"weekly\")) { if (sender instanceof org.bukkit.entity.Player) { com.Ben12345rocks.VotingPlugin.Objects.User user = com.Ben12345rocks.VotingPlugin.UserManager.UserManager.getInstance().getVotingPluginUser(((org.bukkit.entity.Player) (sender))); user.sendMessage(com.Ben12345rocks.VotingPlugin.TopVoter.TopVoterHandler.getInstance().topVoterWeekly(page)); org.bukkit.Bukkit.getScheduler().runTask(com.Ben12345rocks.VotingPlugin.Commands.CommandLoader.plugin, new java.lang.Runnable() { @java.lang.Override public void run() { com.Ben12345rocks.VotingPlugin.Commands.Commands.getInstance().sendTopVoterWeeklyScoreBoard(((org.bukkit.entity.Player) (sender)), page); } }); }else { sender.sendMessage(com.Ben12345rocks.VotingPlugin.TopVoter.TopVoterHandler.getInstance().topVoterWeekly(page)); } }else if (str.equalsIgnoreCase(\"daily\")) { if (sender instanceof org.bukkit.entity.Player) { com.Ben12345rocks.VotingPlugin.Objects.User user = com.Ben12345rocks.VotingPlugin.UserManager.UserManager.getInstance().getVotingPluginUser(((org.bukkit.entity.Player) (sender))); user.sendMessage(com.Ben12345rocks.VotingPlugin.TopVoter.TopVoterHandler.getInstance().topVoterDaily(page)); org.bukkit.Bukkit.getScheduler().runTask(com.Ben12345rocks.VotingPlugin.Commands.CommandLoader.plugin, new java.lang.Runnable() { @java.lang.Override public void run() { com.Ben12345rocks.VotingPlugin.Commands.Commands.getInstance().sendTopVoterDailyScoreBoard(((org.bukkit.entity.Player) (sender)), page); } }); }else { sender.sendMessage(com.Ben12345rocks.VotingPlugin.TopVoter.TopVoterHandler.getInstance().topVoterDaily(page)); } }else if (str.equalsIgnoreCase(\"all\")) { if (sender instanceof org.bukkit.entity.Player) { com.Ben12345rocks.VotingPlugin.Objects.User user = com.Ben12345rocks.VotingPlugin.UserManager.UserManager.getInstance().getVotingPluginUser(((org.bukkit.entity.Player) (sender))); user.sendMessage(com.Ben12345rocks.VotingPlugin.TopVoter.TopVoterHandler.getInstance().topVoterAllTime(page)); org.bukkit.Bukkit.getScheduler().runTask(com.Ben12345rocks.VotingPlugin.Commands.CommandLoader.plugin, new java.lang.Runnable() { @java.lang.Override public void run() { com.Ben12345rocks.VotingPlugin.Commands.Commands.getInstance().sendTopVoterAllTimeScoreBoard(((org.bukkit.entity.Player) (sender)), page); } }); }else { sender.sendMessage(com.Ben12345rocks.VotingPlugin.TopVoter.TopVoterHandler.getInstance().topVoterAllTime(page)); } } }else if (sender instanceof org.bukkit.entity.Player) { com.Ben12345rocks.VotingPlugin.Commands.GUI.PlayerGUIs.getInstance().openVoteTop(((org.bukkit.entity.Player) (sender)), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8282/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Commands.CommandLoader.java", "BodyUseAPI": [], "Fixed commit": "a0f6016dcd7a9188d0608896db217e83c762c544", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2018-09-16T00:06:47Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (manager != null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6827/buggy-version/components.entities.api.src.main.java.org.phenotips.entities.internal.AbstractPrimaryEntityGroup.java", "BodyUseAPI": [], "Fixed commit": "9e0b709b6163feab5fff3bca0b8347784c74adf2", "Url": "https://api.github.com/repos/phenotips/phenotips", "Date": "2016-09-15T23:56:55Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(java.lang.Character.isLetter(lastToken.charAt(0)))) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1409/buggy-version/languagetool-core.src.main.java.org.languagetool.rules.ParagraphRepeatBeginningRule.java", "BodyUseAPI": [], "Fixed commit": "e136cf39ed1efd2f9143d6a2a269975cc6aa480f", "Url": "https://api.github.com/repos/fabrichter/languagetool", "Date": "2018-09-25T12:10:52Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(java.lang.Character.isLetter(lastToken.charAt(0)))) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1409/buggy-version/languagetool-core.src.main.java.org.languagetool.rules.ParagraphRepeatBeginningRule.java", "BodyUseAPI": [], "Fixed commit": "e136cf39ed1efd2f9143d6a2a269975cc6aa480f", "Url": "https://api.github.com/repos/fabrichter/languagetool", "Date": "2018-09-25T12:10:52Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(auctions.equals(\"\"))) { auctionList = new java.util.ArrayList<>(); com.sec.secureapp.recyclerView.MyRecyclerViewFragment.recyclerView.setVisibility(View.VISIBLE); emptyView.setVisibility(View.GONE); setRecyclerView(); }else { com.sec.secureapp.recyclerView.MyRecyclerViewFragment.recyclerView.setVisibility(View.GONE); emptyView.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2954/buggy-version/SecureApp.app.src.main.java.com.sec.secureapp.recyclerView.MyRecyclerViewFragment.java", "BodyUseAPI": [], "Fixed commit": "101eabd320722ab8d045388c74c9283b8e74dab4", "Url": "https://api.github.com/repos/CryptoCProject/Auchain", "Date": "2018-01-31T21:17:20Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((marker) != null) { shelterMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(marker.getPosition(), 11)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5444/buggy-version/app.src.main.java.com.example.team38.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "10dafab6f6648d6f60ad10948211543cb2fce675", "Url": "https://api.github.com/repos/johnsk95/cs2340_spring2018_team38", "Date": "2018-03-10T22:23:57Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.adafruit.bluefruit.le.connect.app.MainActivity.PeripheralList.filteredPeripherals(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((filteredPeripherals.get(i).getName()) != null) { if (filteredPeripherals.get(i).getName().equals(\"Adafruit Bluefruit LE\")) { mSelectedDeviceData = filteredPeripherals.get(i); android.util.Log.d(com.adafruit.bluefruit.le.connect.app.MainActivity.TAG, filteredPeripherals.get(i).getName().toString()); gloveFound = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/884/buggy-version/Android_Apps.Final_App.app.src.main.java.com.adafruit.bluefruit.le.connect.app.MainActivity.java", "BodyUseAPI": ["com.adafruit.bluefruit.le.connect.app.MainActivity.BluetoothDeviceData.getName()", "com.adafruit.bluefruit.le.connect.app.MainActivity.BluetoothDeviceData.getName()", "java.lang.String.equals(java.lang.String)", "java.util.ArrayList<com.adafruit.bluefruit.le.connect.app.MainActivity.BluetoothDeviceData>.get(int)", "java.util.ArrayList<com.adafruit.bluefruit.le.connect.app.MainActivity.BluetoothDeviceData>.get(int)", "java.lang.String.toString()", "android.util.Log.d(java.lang.String,java.lang.String)", "java.util.ArrayList<com.adafruit.bluefruit.le.connect.app.MainActivity.BluetoothDeviceData>.get(int)"], "Fixed commit": "6fb1a0f8f832a5780cd832e3b9952fdf1dc8ac0d", "Url": "https://api.github.com/repos/Vendetta547/Seminar_Project", "Date": "2018-04-16T17:51:13Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["stanhebben.zenscript.type.IEnvironmentGlobal.getValue(next.getValue(),next.getPosition())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (partial == null) { environment.error(next.getPosition(), (\"could not find type \" + typeName)); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9096/buggy-version/src.main.java.stanhebben.zenscript.type.ZenType.java", "BodyUseAPI": [], "Fixed commit": "051d82f754b8be3153d9986693caefba588cb806", "Url": "https://api.github.com/repos/kindlich/ZenScript", "Date": "2018-10-11T19:06:07Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.james.ultimatewordfinderr.PatternMatcher.MatchWithPlayerPatternTask.generateLetterMap(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (playerLetterMap.containsKey(\"?\")) { if ((playerLetterMap.get(\"?\")) > 0) { playerLetterMap.put(\"?\", ((playerLetterMap.get(\"?\")) - 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/981/buggy-version/app.src.main.java.com.example.james.ultimatewordfinderr.PatternMatcher.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String,int)", "java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Fixed commit": "3629db10453c53ad231120e67dbb1a46d830ee16", "Url": "https://api.github.com/repos/CCninja86/UltimateWordFinder", "Date": "2018-03-17T09:19:16Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((stateList) != null) || ((stateList.size()) > 0)) { stateList.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9472/buggy-version/SillyChildMerchant.app.src.main.java.com.yinglan.scm.mine.mystores.MyStoresActivity.java", "BodyUseAPI": ["java.util.List<GoodsTypeBean.DataBean>.clear()"], "Fixed commit": "65fc8aca820632280e2290821bd90a89ce59a114", "Url": "https://api.github.com/repos/921668753/SillyChildMerchant-Android", "Date": "2018-07-01T13:11:10Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((typeList) != null) || ((typeList.size()) > 0)) { typeList.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9472/buggy-version/SillyChildMerchant.app.src.main.java.com.yinglan.scm.mine.mystores.MyStoresActivity.java", "BodyUseAPI": ["java.util.List<GoodsTypeBean.DataBean>.clear()"], "Fixed commit": "65fc8aca820632280e2290821bd90a89ce59a114", "Url": "https://api.github.com/repos/921668753/SillyChildMerchant-Android", "Date": "2018-07-01T13:11:10Z"},
{"Line": "=>1175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_parms._family) == (hex.glm.GLMModel.GLMParameters.Family.multinomial)) { int P = _dinfo.fullN(); int N = (_dinfo.fullN()) + 1; for (int i = 1; i < (_nclass); ++i) sumExp += java.lang.Math.exp(((nb[((i * N) + P)]) - maxRow)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5267/buggy-version/h2o-algos.src.main.java.hex.glm.GLM.java", "BodyUseAPI": [], "Fixed commit": "4ad2f19f7d4e4fda3f645ca4177484ccda2751a2", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2018-03-01T21:55:45Z"},
{"Line": "=>628", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.usfirst.frc.team6135.robot.Robot.doneRecording) { java.lang.String autoRecordingName; if ((autoRecordingName = edu.wpi.first.wpilibj.smartdashboard.SmartDashboard.getString(\"Auto Recording Save Name\", null)) != null) org.usfirst.frc.team6135.robot.Robot.recordingString = ((org.usfirst.frc.team6135.robot.Robot.CSV_FILE_PREFIX) + autoRecordingName) + \".csv\"; else org.usfirst.frc.team6135.robot.Robot.recordingString = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2973/buggy-version/src.org.usfirst.frc.team6135.robot.Robot.java", "BodyUseAPI": [], "Fixed commit": "8a44802aa34faf8fcc9728c3ce604c2fb1b7a641", "Url": "https://api.github.com/repos/Arctos6135/frc-2018", "Date": "2018-04-10T22:27:36Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i > 1) { mCategory = categoryList.get(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2836/buggy-version/app.src.main.java.com.ahmdkhled.storemanagmentsystem.ui.AddProductActivity.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)"], "Fixed commit": "6f233593ac98addb0d5e76f9c33b6467ef913c8d", "Url": "https://api.github.com/repos/ahmdkhled/store-management-system", "Date": "2018-09-21T16:03:35Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f > (bestYet)) { bestYet = f; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4802/buggy-version/EvoAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "3b62669093215e818ed28fc53430d65aa05f994c", "Url": "https://api.github.com/repos/JMitnik/EvoComp2018", "Date": "2018-10-20T16:27:29Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["repository.dosen.dao.FileDao.getPathPhoto(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (tranFile == null) { fileDto.setNameFile(\"\"); }else { fileDto.setNameFile(tranFile.getNameFile()); fileDto.setIdTranFile(tranFile.getIdTranFile()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5559/buggy-version/src.java.repository.dosen.service.impl.FileServiceImplements.java", "BodyUseAPI": ["repository.dosen.models.TranFile.getNameFile()", "repository.dosen.dto.FileDto.setIdTranFile(tranFile.getIdTranFile())", "repository.dosen.dto.FileDto.setNameFile(tranFile.getNameFile())", "repository.dosen.models.TranFile.getIdTranFile()"], "Fixed commit": "1121a83d763b700deef8d925af61899fef2466d2", "Url": "https://api.github.com/repos/saputra123/Repository-Dosen", "Date": "2018-07-18T10:45:57Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((endPoint.getCeVlans().getCeVlan().size()) > 0) { for (org.opendaylight.yang.gen.v1.urn.mef.yang.mef.types.rev171215.VlanIdType vlanIdType : endPoint.getCeVlans().getCeVlan()) { vlanId = vlanIdType.getValue().toString(); vlanIdList.add(vlanId); } }else { vlanIdList.add(vlanId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8932/buggy-version/legato-api.src.main.java.org.opendaylight.unimgr.mef.legato.util.LegatoUtils.java", "BodyUseAPI": ["endPoint.getCeVlans().getCeVlan()", "org.opendaylight.yang.gen.v1.urn.mef.yang.mef.legato.services.rev171215.mef.services.carrier.ethernet.subscriber.services.evc.end.points.EndPoint.getCeVlans()"], "Fixed commit": "f60a1a734d8c7604614084e6174c57949a62ec72", "Url": "https://api.github.com/repos/santanude/unimgr", "Date": "2018-08-07T09:57:01Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i > 0) { mesPages.add(java.lang.String.valueOf(i)); request.setAttribute(\"mesPages\", mesPages); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2177/buggy-version/src.java.classes.Catalog.java", "BodyUseAPI": ["java.lang.String.valueOf(int)", "java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "e411de9f03bf9761eb278be16a950df2a0641045", "Url": "https://api.github.com/repos/EmilienG/monPremierGit", "Date": "2018-02-25T18:25:13Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) present = true; else present = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8204/buggy-version/app.src.main.java.com.example.vikrant.attendancemanageradmin.teacher.MarkAttendanceActivity.java", "BodyUseAPI": [], "Fixed commit": "1d998851965054f857f4f085e3ed89cfde3ba4d3", "Url": "https://api.github.com/repos/vik7am/Attendance-Manager-Admin", "Date": "2018-03-24T07:15:01Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof java.lang.Byte) { return ((java.lang.Byte) (obj)).intValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2170/buggy-version/hydra.src.main.java.com.github.codegerm.hydra.writer.AvroRecordUtil.java", "BodyUseAPI": [], "Fixed commit": "fb9953d98302c1a336867a0f1bfe87c351356996", "Url": "https://api.github.com/repos/CodeGerm/Hydra", "Date": "2018-01-15T10:50:35Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof byte[]) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2170/buggy-version/hydra.src.main.java.com.github.codegerm.hydra.writer.AvroRecordUtil.java", "BodyUseAPI": [], "Fixed commit": "fb9953d98302c1a336867a0f1bfe87c351356996", "Url": "https://api.github.com/repos/CodeGerm/Hydra", "Date": "2018-01-15T10:50:35Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data == null) || ((data.getCount()) < 1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9558/buggy-version/Pets.app.src.main.java.com.example.android.pets.EditorActivity.java", "BodyUseAPI": [], "Fixed commit": "6b56e858e09b2354827824445d50000c4737226c", "Url": "https://api.github.com/repos/royalbrawler/udacity-Android-Basics", "Date": "2018-02-07T12:10:15Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser().getEmail()) == null) { com.google.firebase.database.FirebaseDatabase.getInstance().getReference().push().setValue(new com.example.karol.chatapk.ChatMessege(inputText.getText().toString(), com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser().getDisplayName())); }else { com.google.firebase.database.FirebaseDatabase.getInstance().getReference().push().setValue(new com.example.karol.chatapk.ChatMessege(inputText.getText().toString(), com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser().getEmail())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/921/buggy-version/app.src.main.java.com.example.karol.chatapk.Main2Activity.java", "BodyUseAPI": [], "Fixed commit": "3811b94886e876d7fb42fcf01f373e16f9f3781b", "Url": "https://api.github.com/repos/cr0nil/ChatApk", "Date": "2018-02-05T19:39:30Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.badlogic.gdx.utils.XmlReader.Element.getChild(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((imageName.getText()) != null) { imageNameString = imageName.getText(); }else { imageNameString = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2535/buggy-version/src.com.hydrozoa.pokemon.worldloader.LTerrainLoader.java", "BodyUseAPI": ["com.badlogic.gdx.utils.XmlReader.Element.getText()"], "Fixed commit": "f46587cd731e30700681d0fc3c885e1015310bd4", "Url": "https://api.github.com/repos/hydrozoa-yt/pokemon", "Date": "2018-05-13T00:05:01Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (header) { headerNames = csvParser.parseNext(); for (int i = 0; i < (headerNames.length); i++) { if ((headerNames[i]) == null) { headerNames[i] = \"C\" + i; } } }else { headerNames = makeColumnNames(types); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7289/buggy-version/core.src.main.java.tech.tablesaw.io.csv.CsvReader.java", "BodyUseAPI": [], "Fixed commit": "fdf04dd83f4dd2ba19805a71949493d12d47cf72", "Url": "https://api.github.com/repos/jtablesaw/tablesaw", "Date": "2018-10-22T18:10:29Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input.interact.getPressed()) game.Game.dialog.showDialog(\"Change successful!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4653/buggy-version/src.game.Game.java", "BodyUseAPI": [], "Fixed commit": "3c15de8a679d061e6d899f1aadb08249a5db5a16", "Url": "https://api.github.com/repos/wang0630/Java-RPG", "Date": "2018-06-10T03:49:33Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((view) != null) view.showSnackBar(\"Yet to set Location\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5269/buggy-version/app.src.main.java.farmerline.com.dev.farmerserviceapp.dashboard.home.analytics.AnalyticsFragmentPresenter.java", "BodyUseAPI": [], "Fixed commit": "a4ddb731972c5effa9b46666974c5183b79508ec", "Url": "https://api.github.com/repos/nayram/FarmerServiceApp", "Date": "2018-09-07T18:16:02Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(im.vector.contacts.ContactsManager.getInstance().didPopulateLocalContacts())) { org.matrix.androidsdk.util.Log.d(im.vector.fragments.ContactFragment.LOG_TAG, \"## initContactsData() : The local contacts are not yet populated\"); mLocalContacts.clear(); }else if (((mContactsSnapshotSession) == (-1)) || ((mContactsSnapshotSession) != (im.vector.contacts.ContactsManager.getInstance().getLocalContactsSnapshotSession()))) { mLocalContacts.clear(); java.util.List<im.vector.adapters.ParticipantAdapterItem> participants = new java.util.ArrayList(getContacts()); for (im.vector.adapters.ParticipantAdapterItem item : participants) { if ((item.mContact) != null) { mLocalContacts.add(item); } } }else { java.util.List<im.vector.adapters.ParticipantAdapterItem> tobeRemoved = new java.util.ArrayList<>(); for (im.vector.adapters.ParticipantAdapterItem item : mLocalContacts) { if ((item.mContact.getContactId()) == \"null\") { tobeRemoved.add(item); } } for (im.vector.adapters.ParticipantAdapterItem item : tobeRemoved) { mLocalContacts.remove(item); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4751/buggy-version/vector.src.main.java.im.vector.fragments.ContactFragment.java", "BodyUseAPI": [], "Fixed commit": "662eeb45959e04b501f787d0a04079410cdbf48f", "Url": "https://api.github.com/repos/dinsic-pim/tchap-android", "Date": "2018-04-03T22:58:23Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.voovan.tools.TString.isNullOrEmpty(classPath)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3589/buggy-version/Common.src.main.java.org.voovan.tools.TEnv.java", "BodyUseAPI": [], "Fixed commit": "bb8532bbfe702e73976569b6bd73241791386d0c", "Url": "https://api.github.com/repos/helyho/Voovan", "Date": "2018-03-21T15:17:14Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yermilov.dao.IDAOFactory.getTaxiDAO()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((taxiDAO.findByCarNumber(taxi.getCarNumber())) == null) { taxiDAO.create(taxi); }else { throw new com.yermilov.exceptions.AddCarException(\"There is already a car with such car number\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8321/buggy-version/src.main.java.com.yermilov.admin.service.AddCarService.java", "BodyUseAPI": ["com.yermilov.dao.TaxiDAO.create(com.yermilov.domain.Taxi)"], "Fixed commit": "8996fd0477bbc35dc83e69668cd4dc304a87c68b", "Url": "https://api.github.com/repos/olexandryermilov/taxiproject", "Date": "2018-01-22T10:54:14Z"},
{"Line": "=>887", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (items.get(itemIndex).isTinting()) com.aurelhubert.ahbottomnavigation.AHHelper.updateDrawableColor(context, items.get(currentItem).getDrawable(context), icon, itemActiveColor, itemInactiveColor, forceTint);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9518/buggy-version/ahbottomnavigation.src.main.java.com.aurelhubert.ahbottomnavigation.AHBottomNavigation.java", "BodyUseAPI": ["items.get(currentItem).getDrawable(android.content.Context)", "com.aurelhubert.ahbottomnavigation.AHHelper.updateDrawableColor(android.content.Context,items.get(currentItem).getDrawable(context),android.widget.ImageView,int,int,boolean)", "java.util.ArrayList<com.aurelhubert.ahbottomnavigation.AHBottomNavigationItem>.get(int)"], "Fixed commit": "40c27721859c9c33ade2ee4c0a7d2534414b3cf5", "Url": "https://api.github.com/repos/resterwolf/ahbottomnavigation", "Date": "2018-07-19T20:48:04Z"},
{"Line": "=>752", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (items.get(itemIndex).isTinting()) com.aurelhubert.ahbottomnavigation.AHHelper.updateDrawableColor(context, items.get(currentItem).getDrawable(context), icon, itemActiveColor, itemInactiveColor, forceTint);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9518/buggy-version/ahbottomnavigation.src.main.java.com.aurelhubert.ahbottomnavigation.AHBottomNavigation.java", "BodyUseAPI": ["items.get(currentItem).getDrawable(android.content.Context)", "com.aurelhubert.ahbottomnavigation.AHHelper.updateDrawableColor(android.content.Context,items.get(currentItem).getDrawable(context),android.widget.ImageView,int,int,boolean)", "java.util.ArrayList<com.aurelhubert.ahbottomnavigation.AHBottomNavigationItem>.get(int)"], "Fixed commit": "40c27721859c9c33ade2ee4c0a7d2534414b3cf5", "Url": "https://api.github.com/repos/resterwolf/ahbottomnavigation", "Date": "2018-07-19T20:48:04Z"},
{"Line": "=>819", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (items.get(itemIndex).isTinting()) com.aurelhubert.ahbottomnavigation.AHHelper.updateDrawableColor(context, items.get(itemIndex).getDrawable(context), icon, itemInactiveColor, itemActiveColor, forceTint);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9518/buggy-version/ahbottomnavigation.src.main.java.com.aurelhubert.ahbottomnavigation.AHBottomNavigation.java", "BodyUseAPI": ["java.util.ArrayList<com.aurelhubert.ahbottomnavigation.AHBottomNavigationItem>.get(int)", "items.get(itemIndex).getDrawable(android.content.Context)", "com.aurelhubert.ahbottomnavigation.AHHelper.updateDrawableColor(android.content.Context,items.get(itemIndex).getDrawable(context),android.widget.ImageView,int,int,boolean)"], "Fixed commit": "40c27721859c9c33ade2ee4c0a7d2534414b3cf5", "Url": "https://api.github.com/repos/resterwolf/ahbottomnavigation", "Date": "2018-07-19T20:48:04Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["abs.ixi.client.core.Platform.getInstance().getChatManager()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (chatManager != null) { chatManager.sendMsgCMAcknowledgedReceipt(chatLine.getMessageId(), new abs.ixi.client.xmpp.JID(chatLine.getPeerBareJid())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3459/buggy-version/app.src.main.java.abs.sf.beach.notification.NotificationGenerator.java", "BodyUseAPI": ["abs.sf.client.android.managers.AndroidChatManager.sendMsgCMAcknowledgedReceipt(chatLine.getMessageId(),abs.ixi.client.xmpp.JID)"], "Fixed commit": "8d7ae7419dfe8b258ff37777a3857712196233c3", "Url": "https://api.github.com/repos/AlterBasics/BEACH_Android", "Date": "2018-03-09T12:59:52Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (predURIString.equals(IriConstants.RDF_TYPE)) { object = func.getTerm(1); }else { object = func.getTerm(2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5368/buggy-version/mapping.sql.r2rml.src.main.java.it.unibz.inf.ontop.spec.mapping.serializer.OBDAMappingTransformer.java", "BodyUseAPI": [], "Fixed commit": "4203808350b31f70f7ce8fa8825c7648cd35751c", "Url": "https://api.github.com/repos/ontop/ontop", "Date": "2018-07-09T10:05:16Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.android.server.hdmi.HdmiCecKeycode.isSupportedKeycode(keyCode))) { android.util.Slog.w(com.android.server.hdmi.HdmiCecLocalDeviceTv.TAG, (\"Unsupported key: \" + keyCode)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5909/buggy-version/services.core.java.com.android.server.hdmi.HdmiCecLocalDeviceTv.java", "BodyUseAPI": ["android.util.Slog.w(java.lang.String,java.lang.String)"], "Fixed commit": "f34e6075cb9cc559da776ba7360505a76f0c404d", "Url": "https://api.github.com/repos/sudosurootdev/frameworks_base", "Date": "2014-08-27T01:59:39Z"},
{"Line": "=>983", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (curOffset < map_entry_end) { map_entry = new org.robolectric.res.android.ResourceTypes.ResTable_map(map.myBuf(), curOffset); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7681/buggy-version/resources.src.main.java.org.robolectric.res.android.CppAssetManager2.java", "BodyUseAPI": [], "Fixed commit": "58168e189ccdbf9b81cfde1d48274467ab031f3d", "Url": "https://api.github.com/repos/robolectric/robolectric", "Date": "2018-10-23T21:37:14Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (method1.equals(method2)) { com.yukthitech.utils.fmarker.FreeMarkerEngine.logger.debug(\"Ignoring duplicate registration of method: {}()\", method1); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2224/buggy-version/yukthi-free-marker.src.main.java.com.yukthitech.utils.fmarker.FreeMarkerEngine.java", "BodyUseAPI": ["org.apache.logging.log4j.Logger.debug(java.lang.String,java.lang.String)"], "Fixed commit": "9777b3ff068b8afd2cd69d878a46808065856f52", "Url": "https://api.github.com/repos/yukthitech/utils", "Date": "2018-06-18T04:53:22Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.android.vlayout.DelegateAdapter.findAdapterByPosition(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (pair == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4146/buggy-version/vlayout.src.main.java.com.alibaba.android.vlayout.DelegateAdapter.java", "BodyUseAPI": [], "Fixed commit": "cee3439730132a1b77a65cdf94c1584040ac679c", "Url": "https://api.github.com/repos/lixi0912/vlayout", "Date": "2018-02-28T03:12:45Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.prembros.chatein.util.NotificationUtil.map) != null) { com.prembros.chatein.util.NotificationUtil.map.clear(); com.prembros.chatein.util.NotificationUtil.map = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1011/buggy-version/app.src.main.java.com.prembros.chatein.util.NotificationUtil.java", "BodyUseAPI": [], "Fixed commit": "5616eb6f1bd5496c91e6b77367c502d0182b30cb", "Url": "https://api.github.com/repos/premacck/Chatein", "Date": "2018-05-07T16:54:46Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.egov.mrs.application.service.workflow.RegistrationWorkflowService.getWorkFlowInitiatorForReissue(org.egov.mrs.domain.entity.ReIssue)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (wfInitiator != null) { approverName = ((wfInitiator.getEmployee().getName()) == null) ? EMPTY : wfInitiator.getEmployee().getName(); nextDesignation = ((wfInitiator.getDesignation().getName()) == null) ? EMPTY : wfInitiator.getDesignation().getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6110/buggy-version/egov.egov-mrsweb.src.main.java.org.egov.mrs.web.controller.application.reissue.UpdateMrgReIssueController.java", "BodyUseAPI": ["org.egov.eis.entity.Assignment.getEmployee()", "org.egov.eis.entity.Assignment.getEmployee()", "wfInitiator.getEmployee().getName()", "wfInitiator.getDesignation().getName()", "org.egov.eis.entity.Assignment.getDesignation()", "wfInitiator.getEmployee().getName()", "org.egov.eis.entity.Assignment.getDesignation()", "wfInitiator.getDesignation().getName()"], "Fixed commit": "26ba31ad3800db71f997b90a23eb0d5e0bd19f02", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2018-06-29T07:16:24Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hour > 24) || (hour < 0)) { throw new seedu.address.logic.commands.exceptions.CommandException(MESSAGE_IO_ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3704/buggy-version/src.main.java.seedu.address.commons.util.IcsUtil.java", "BodyUseAPI": [], "Fixed commit": "36e66b0abba206c26ec88ff5600dbf925441e9ad", "Url": "https://api.github.com/repos/nianfei97/addressbook-level4", "Date": "2018-10-15T02:09:19Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Main.optionStage) != null) { Main.optionStage.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/954/buggy-version/src.cc.zoyn.mogox.Launch.java", "BodyUseAPI": [], "Fixed commit": "df7d5594c44e47c8cbcb74e024f2c9adfc928521", "Url": "https://api.github.com/repos/602723113/mogoX-Launcher", "Date": "2018-04-24T16:40:47Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (model.hasMachine(machineToAdd)) { throw new seedu.address.logic.commands.exceptions.CommandException(seedu.address.logic.commands.machine.AddMachineCommand.MESSAGE_DUPLICATE_MACHINE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5520/buggy-version/src.main.java.seedu.address.logic.commands.machine.AddMachineCommand.java", "BodyUseAPI": [], "Fixed commit": "d4f1dd89d9be9000e9541d11908de5e28fc37c6c", "Url": "https://api.github.com/repos/Psyf/main", "Date": "2018-10-11T11:11:15Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(isCancelled())) && (!isError)) { long runningTime = (java.lang.System.currentTimeMillis()) - startTime; javax.swing.JOptionPane.showMessageDialog(parent, (\"Time: \" + runningTime), \"Success\", javax.swing.JOptionPane.INFORMATION_MESSAGE); noOfFilesTextField.setText(noOfFiles.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3083/buggy-version/src.wct.background.CopiesGenerator.java", "BodyUseAPI": [], "Fixed commit": "1233deda63d5249f97bdcfca2b628f2e009af6b7", "Url": "https://api.github.com/repos/xuanlinhha/WCT", "Date": "2018-01-28T04:37:00Z"},
{"Line": "=>552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scriptId.equals(com.keysight.transactionrecords.MainActivity.scriptId_MyBank)) && (functionName.equals(\"addRemark\"))) { }else { displayResult(output); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4481/buggy-version/app.src.main.java.com.keysight.transactionrecords.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "cf58d576c705411ab692f363c13a95a3b88f07ac", "Url": "https://api.github.com/repos/andesliuyulei/TransactionRecords", "Date": "2018-02-03T02:22:07Z"},
{"Line": "=>512", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(checkIfDelegateReaderSupportsBands())) { delegateFormatParams.add(AbstractGridFormat.BANDS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6496/buggy-version/src.main.src.main.java.org.geoserver.catalog.CoverageViewReader.java", "BodyUseAPI": [], "Fixed commit": "4b0baa6a2d32f2aaeec585d96fa9dac455e16f89", "Url": "https://api.github.com/repos/geosolutions-it/geoserver", "Date": "2018-02-08T18:19:11Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (amount == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1084/buggy-version/src.coinpurse.Purse.java", "BodyUseAPI": [], "Fixed commit": "5468015baa24beb4e07d07a8ecc386ff9629894b", "Url": "https://api.github.com/repos/OOP2018/coinpurse-piyaspark", "Date": "2018-02-16T07:21:03Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((card.getValue1()) != 10) { java.lang.System.out.println(((((((((((((((((((((((((\"|\\t\" + (card.getAttribute1())) + \": \") + (card.getValue1())) + \"\\t\\t|\\n\") + \"|\\t\") + (card.getAttribute2())) + \": \") + (card.getValue2())) + \"\\t|\\n\") + \"|\\t\") + (card.getAttribute3())) + \": \") + (card.getValue3())) + \"\\t|\\n\") + \"|\\t\") + (card.getAttribute4())) + \": \") + (card.getValue4())) + \"\\t|\\n\") + \"|\\t\") + (card.getAttribute5())) + \": \") + (card.getValue5())) + \"\\t|\")); }else java.lang.System.out.println(((((((((((((((((((((((((\"|\\t\" + (card.getAttribute1())) + \": \") + (card.getValue1())) + \"\\t|\\n\") + \"|\\t\") + (card.getAttribute2())) + \": \") + (card.getValue2())) + \"\\t|\\n\") + \"|\\t\") + (card.getAttribute3())) + \": \") + (card.getValue3())) + \"\\t|\\n\") + \"|\\t\") + (card.getAttribute4())) + \": \") + (card.getValue4())) + \"\\t|\\n\") + \"|\\t\") + (card.getAttribute5())) + \": \") + (card.getValue5())) + \"\\t|\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5449/buggy-version/src.commandline.GameView.java", "BodyUseAPI": ["commandline.Card.getAttribute2()", "commandline.Card.getAttribute3()", "commandline.Card.getAttribute3()", "commandline.Card.getAttribute5()", "commandline.Card.getAttribute1()", "commandline.Card.getValue5()", "commandline.Card.getValue3()", "commandline.Card.getValue4()", "commandline.Card.getValue1()", "commandline.Card.getValue2()", "commandline.Card.getAttribute4()", "java.io.PrintStream.println(((((((((((((((((((((((((\"|\\t\" + (card.getAttribute1())) + \": \") + (card.getValue1())) + \"\\t|\\n\") + \"|\\t\") + (card.getAttribute2())) + \": \") + (card.getValue2())) + \"\\t|\\n\") + \"|\\t\") + (card.getAttribute3())) + \": \") + (card.getValue3())) + \"\\t|\\n\") + \"|\\t\") + (card.getAttribute4())) + \": \") + (card.getValue4())) + \"\\t|\\n\") + \"|\\t\") + (card.getAttribute5())) + \": \") + (card.getValue5())) + \"\\t|\"))", "commandline.Card.getValue2()", "commandline.Card.getValue5()", "commandline.Card.getAttribute5()", "commandline.Card.getAttribute2()", "commandline.Card.getValue3()", "commandline.Card.getAttribute1()", "java.io.PrintStream.println(((((((((((((((((((((((((\"|\\t\" + (card.getAttribute1())) + \": \") + (card.getValue1())) + \"\\t\\t|\\n\") + \"|\\t\") + (card.getAttribute2())) + \": \") + (card.getValue2())) + \"\\t|\\n\") + \"|\\t\") + (card.getAttribute3())) + \": \") + (card.getValue3())) + \"\\t|\\n\") + \"|\\t\") + (card.getAttribute4())) + \": \") + (card.getValue4())) + \"\\t|\\n\") + \"|\\t\") + (card.getAttribute5())) + \": \") + (card.getValue5())) + \"\\t|\"))", "commandline.Card.getAttribute4()", "commandline.Card.getValue4()", "commandline.Card.getValue1()"], "Fixed commit": "9655bfe8a61cddc89b60ea11df48c7b50f72809c", "Url": "https://api.github.com/repos/kmcdonald3377/MastersTeamProject", "Date": "2018-02-09T08:46:45Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newTaskButton) == null) { newTaskButton = new nz.co.gregs.minortask.components.AddTaskButton(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6748/buggy-version/src.main.java.nz.co.gregs.minortask.components.tasklists.OpenProjectsList.java", "BodyUseAPI": [], "Fixed commit": "5389648b998831836b97afd1df812592fdcee8eb", "Url": "https://api.github.com/repos/gregorydgraham/MinorTask", "Date": "2018-09-19T00:10:41Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yarolegovich.discretescrollview.DiscreteScrollView.getViewHolder(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (currentHolder != null) { notifyCurrentItemChanged(currentHolder, current); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2191/buggy-version/library.src.main.java.com.yarolegovich.discretescrollview.DiscreteScrollView.java", "BodyUseAPI": ["com.yarolegovich.discretescrollview.DiscreteScrollView.notifyCurrentItemChanged(com.yarolegovich.discretescrollview.ViewHolder,int)"], "Fixed commit": "94c4c25a4337b66abb725cc3c4862d17aed9d03f", "Url": "https://api.github.com/repos/cardinalblue/DiscreteScrollView", "Date": "2017-10-27T07:55:08Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["se.vgregion.alfresco.mellanarkiv.platform.pipeline.ingest.impl.storage.StorageHandlerCheckArchiveVersionWorkerImpl.getProperty(org.alfresco.service.cmr.repository.NodeRef,VgrMaModel.PROP_PUBLIC_INDEX_AVAILABLE_FROM)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (earlierVersionAvailableFrom != null) { if ((!(xmlService.updateValueInFoundNodes(indexXml, revisedAvailableToxPath, se.vgregion.alfresco.mellanarkiv.platform.pipeline.ingest.impl.storage.StorageHandlerCheckArchiveVersionWorkerImpl.DATE_ISO8601_FORMAT.format(date)))) || (!(xmlService.updateValueInFoundNodes(indexXml, revisedAvailableFromxPath, se.vgregion.alfresco.mellanarkiv.platform.pipeline.ingest.impl.storage.StorageHandlerCheckArchiveVersionWorkerImpl.DATE_ISO8601_FORMAT.format(earlierVersionAvailableFrom))))) { se.vgregion.alfresco.mellanarkiv.platform.pipeline.ingest.impl.storage.StorageHandlerCheckArchiveVersionWorkerImpl.LOG.error((\"Error updating revised available dates in index.xml for node: \" + archiveNode)); return new se.vgregion.alfresco.mellanarkiv.platform.pipeline.ingest.impl.IngestStatusObject(STATUS_STORAGE_HANDLER_ERROR_UPDATING_REVISED_DATE); }else { java.util.List<org.alfresco.service.cmr.repository.NodeRef> provXmlNodeRefs = getProvXmlNodeRefs(archiveNode); if ((provXmlNodeRefs == null) || (provXmlNodeRefs.isEmpty())) { return new se.vgregion.alfresco.mellanarkiv.platform.pipeline.ingest.impl.IngestStatusObject(STATUS_STORAGE_HANDLER_ERROR_PROV_MISSING_XML_FILE); } if (archivalFolderNodeRef != archiveNode) { result = updateIndexOfChanges(indexXml, nodeRef, provXmlNodeRefs.get(0), archivalObjectId, archiveNode, date); } } }else { if (!(xmlService.updateValueInFoundNodes(indexXml, revisedAvailableToxPath, se.vgregion.alfresco.mellanarkiv.platform.pipeline.ingest.impl.storage.StorageHandlerCheckArchiveVersionWorkerImpl.DATE_ISO8601_FORMAT.format(date)))) { se.vgregion.alfresco.mellanarkiv.platform.pipeline.ingest.impl.storage.StorageHandlerCheckArchiveVersionWorkerImpl.LOG.error((\"Error updating revised available dates in index.xml for node: \" + archiveNode)); return new se.vgregion.alfresco.mellanarkiv.platform.pipeline.ingest.impl.IngestStatusObject(STATUS_STORAGE_HANDLER_ERROR_UPDATING_REVISED_DATE); }else { java.util.List<org.alfresco.service.cmr.repository.NodeRef> provXmlNodeRefs = getProvXmlNodeRefs(archiveNode); if ((provXmlNodeRefs == null) || (provXmlNodeRefs.isEmpty())) { return new se.vgregion.alfresco.mellanarkiv.platform.pipeline.ingest.impl.IngestStatusObject(STATUS_STORAGE_HANDLER_ERROR_PROV_MISSING_XML_FILE); } if (archivalFolderNodeRef != archiveNode) { result = updateIndexOfChanges(indexXml, nodeRef, provXmlNodeRefs.get(0), archivalObjectId, archiveNode, date); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1441/buggy-version/platform-mellanarkiv.src.main.java.se.vgregion.alfresco.mellanarkiv.platform.pipeline.ingest.impl.storage.StorageHandlerCheckArchiveVersionWorkerImpl.java", "BodyUseAPI": ["java.text.DateFormat.format(java.util.Date)", "se.vgregion.alfresco.mellanarkiv.platform.pipeline.ingest.impl.storage.StorageHandlerCheckArchiveVersionWorkerImpl.updateValueInFoundNodes(org.alfresco.service.cmr.repository.NodeRef,java.lang.String,java.lang.String)"], "Fixed commit": "cbf96b8488582d8aa5e89594de981486d409a2c2", "Url": "https://api.github.com/repos/Vastra-Gotalandsregionen/alfresco-mellanarkiv", "Date": "2018-05-31T09:56:48Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((net.fe.FEMultiplayer.getCurrentStage()) instanceof net.fe.overworldStage.ClientOverworldStage)) return grid[y][x];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6542/buggy-version/src.net.fe.overworldStage.Grid.java", "BodyUseAPI": [], "Fixed commit": "5db276a3f668d386157af00167a3c59c0ca488ca", "Url": "https://api.github.com/repos/eliatlarge/FEMultiPlayer-V2", "Date": "2018-01-14T17:41:12Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((players[i]) != null) { if ((players[i].getCountriesOwned().size()) == 0) { players[i] = null; GameEngine.MainGUI.updateLegend(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7685/buggy-version/MainProject.GameEngine.GameManager.java", "BodyUseAPI": ["players[i].getCountriesOwned().size()", "players[i].getCountriesOwned()"], "Fixed commit": "76f622935fbcbb47ba7ea7f9bd97ad24d9a6019a", "Url": "https://api.github.com/repos/pjmchale/cpsc", "Date": "2018-04-09T17:53:06Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mSearchQuery.equals(event.searchTerm))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7124/buggy-version/WordPress.src.main.java.org.wordpress.android.ui.plugins.PluginBrowserViewModel.java", "BodyUseAPI": [], "Fixed commit": "fc63c300462d8e7a1dc5fd231827f889a3c7ee61", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2018-02-09T04:32:47Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jet.getRunConfiguration()) != null) { if (jet.getRunConfiguration().equals(key)) { try { org.pentaho.di.core.extension.ExtensionPointHandler.callExtensionPoint(job.getLogChannel(), KettleExtensionPoint.JobEntryTransSave.id, new java.lang.Object[]{ job, runConfig.getName() }); } catch (org.pentaho.di.core.exception.KettleException e) { spoonSupplier.get().getLog().logBasic((\"Unable to set run configuration in job \" + (job.getName()))); } jet.setRunConfiguration(runConfig.getName()); if (runConfig instanceof org.pentaho.di.engine.configuration.impl.pentaho.DefaultRunConfiguration) { jet.setRemoteSlaveServerName(((org.pentaho.di.engine.configuration.impl.pentaho.DefaultRunConfiguration) (runConfig)).getServer()); jet.setLoggingRemoteWork(((org.pentaho.di.engine.configuration.impl.pentaho.DefaultRunConfiguration) (runConfig)).isLogRemoteExecutionLocally()); } jet.setChanged(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7398/buggy-version/plugins.engine-configuration.ui.src.main.java.org.pentaho.di.engine.ui.RunConfigurationDelegate.java", "BodyUseAPI": ["jet.getRunConfiguration().equals(java.lang.String)", "org.pentaho.di.job.entries.trans.JobEntryTrans.setRunConfiguration(runConfig.getName())", "org.pentaho.di.job.entries.trans.JobEntryTrans.setLoggingRemoteWork(((org.pentaho.di.engine.configuration.impl.pentaho.DefaultRunConfiguration) (runConfig)).isLogRemoteExecutionLocally())", "org.pentaho.di.job.entries.trans.JobEntryTrans.setChanged()", "org.pentaho.di.job.entries.trans.JobEntryTrans.getRunConfiguration()", "org.pentaho.di.job.entries.trans.JobEntryTrans.setRemoteSlaveServerName(((org.pentaho.di.engine.configuration.impl.pentaho.DefaultRunConfiguration) (runConfig)).getServer())"], "Fixed commit": "0ce8350c5f6a244be9c707c826e1319dad9060f1", "Url": "https://api.github.com/repos/plagoa/pentaho-kettle", "Date": "2018-03-29T16:32:44Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (runConfig instanceof org.pentaho.di.engine.configuration.impl.pentaho.DefaultRunConfiguration) { jet.setRemoteSlaveServerName(((org.pentaho.di.engine.configuration.impl.pentaho.DefaultRunConfiguration) (runConfig)).getServer()); jet.setLoggingRemoteWork(((org.pentaho.di.engine.configuration.impl.pentaho.DefaultRunConfiguration) (runConfig)).isLogRemoteExecutionLocally()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7398/buggy-version/plugins.engine-configuration.ui.src.main.java.org.pentaho.di.engine.ui.RunConfigurationDelegate.java", "BodyUseAPI": [], "Fixed commit": "0ce8350c5f6a244be9c707c826e1319dad9060f1", "Url": "https://api.github.com/repos/plagoa/pentaho-kettle", "Date": "2018-03-29T16:32:44Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.home.chorganizer.repositories.UserRepository.findByEmail(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (u.isPresent()) { return u.get(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9502/buggy-version/src.main.java.com.home.chorganizer.services.UserService.java", "BodyUseAPI": ["java.util.Optional<com.home.chorganizer.models.User>.get()"], "Fixed commit": "3c2f25ac4e72b6822a9a7900fe874ff6d526c2f5", "Url": "https://api.github.com/repos/pawncouncil/choreganizer", "Date": "2018-08-07T22:31:22Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.security.Principal.getName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (email == null) { return \"redirect:/login\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9502/buggy-version/src.main.java.com.home.chorganizer.controllers.UserController.java", "BodyUseAPI": [], "Fixed commit": "3c2f25ac4e72b6822a9a7900fe874ff6d526c2f5", "Url": "https://api.github.com/repos/pawncouncil/choreganizer", "Date": "2018-08-07T22:31:22Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["moe.imvery.utils.xlsx2json.ParsedSheet.getKey(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (key.isEmpty()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5968/buggy-version/src.main.java.moe.imvery.utils.xlsx2json.ExcelParser.java", "BodyUseAPI": [], "Fixed commit": "07c785650671dd264f8d9e18beba8886b983a9cd", "Url": "https://api.github.com/repos/noahzark/Xlsx2Json", "Date": "2018-05-06T22:49:13Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(c.getRole().equals(\"Support\"))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9539/buggy-version/src.main.java.com.overwatch.statistics.graphics.ChartRenderer.java", "BodyUseAPI": [], "Fixed commit": "9f1db30a98b7590f8bdf6aaec73d2f39f9f89711", "Url": "https://api.github.com/repos/TimAndreJacobsen/OverwatchStatAnalyser", "Date": "2018-07-02T20:57:05Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ingredient == null) { return \"null\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5774/buggy-version/src.main.java.mezz.jei.plugins.vanilla.ingredients.FluidStackHelper.java", "BodyUseAPI": [], "Fixed commit": "b0480a68c9ed246804ea141f4ce2fc7b3dd78342", "Url": "https://api.github.com/repos/Greg-21/JustEnoughItems-fork", "Date": "2018-01-02T07:13:38Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getArgs().size()) > 2) { java.lang.String childExpression = \"\"; for (ar.com.profebot.parser.container.TreeNode child : this.getArgs()) { if ((childExpression.length()) != 0) { childExpression += this.getValue(); } childExpression += getNodeExpression(child, false); } return childExpression.replaceAll(\"\\\\+\\\\-\", \"-\"); }else if (((((this.esDivision()) || (this.esProducto())) || (this.esPotencia())) && (ar.com.profebot.resolutor.utils.TreeUtils.isConstant(this.getRightNode()))) && ((this.getRightNode().getIntegerValue()) < 0)) { java.lang.String exp = ((((getNodeExpression(leftNode, false)) + (this.getValue())) + \"(\") + (getNodeExpression(this.getRightNode(), true))) + \")\"; return exp.replaceAll(\"\\\\+\\\\-\", \"-\"); }else { java.lang.String exp = ((getNodeExpression(leftNode, false)) + (this.getValue())) + (getNodeExpression(this.getRightNode(), true)); return exp.replaceAll(\"\\\\+\\\\-\", \"-\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6807/buggy-version/AppMobile.app.src.main.java.ar.com.profebot.parser.container.TreeNode.java", "BodyUseAPI": [], "Fixed commit": "6c9ba2deaf0f70838da651426039fc6ee533384b", "Url": "https://api.github.com/repos/agustinsilva/profebot", "Date": "2018-10-07T21:05:46Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isShare && (imageFile.exists())) { if ((Build.VERSION.SDK_INT) >= 24) { uri = android.support.v4.content.FileProvider.getUriForFile(context.getApplicationContext(), Constants.FILE_PROVIDER_AUTHORITY, imageFile); } return uri; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2371/buggy-version/app.src.main.java.com.codeest.geeknews.util.SystemUtil.java", "BodyUseAPI": ["android.support.v4.content.FileProvider.getUriForFile(context.getApplicationContext(),Constants.FILE_PROVIDER_AUTHORITY,java.io.File)"], "Fixed commit": "9de8c3b50c4c7bba5518c7d9b43b4d80464087d3", "Url": "https://api.github.com/repos/codeestX/GeekNews", "Date": "2018-08-01T11:49:27Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.Object, java.lang.Object>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((name != null) && (name.startsWith(\"redis.\"))) { name = name.substring(6); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1112/buggy-version/src.main.java.org.mybatis.caches.redis.RedisConfigurationBuilder.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "7654730998772b39bf179e289ba75105d5ee1748", "Url": "https://api.github.com/repos/hazendaz/redis-cache", "Date": "2018-01-16T02:30:33Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clonedRepo) != null) { org.cfg4j.source.git.GitConfigurationSource.LOG.debug((\"Closing local repository: \" + (clonedRepoPath))); clonedRepo.close(); new org.cfg4j.utils.FileUtils().deleteDir(clonedRepoPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6580/buggy-version/cfg4j-git.src.main.java.org.cfg4j.source.git.GitConfigurationSource.java", "BodyUseAPI": [], "Fixed commit": "eac3340d3bfb07111f24bc06b14651006f1e29be", "Url": "https://api.github.com/repos/cfg4j/cfg4j", "Date": "2018-09-05T07:53:25Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentState.getState()) != (net.ngeor.t3.models.GameState.WaitingPlayer)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6440/buggy-version/app.src.main.java.net.ngeor.t3.ai.MinimaxNode.java", "BodyUseAPI": [], "Fixed commit": "545eb21f366b3ab8b58d688cb23bd191525ec0ad", "Url": "https://api.github.com/repos/ngeor/android-tictactoe", "Date": "2018-02-10T21:15:39Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["doc.getDocument().toObject(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((temp_user.getLatitude()) == null) || ((temp_user.getLongtitude()) == null)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3782/buggy-version/app.src.main.java.abass.com.firebasepushnotifications.Request.HelpRequest.java", "BodyUseAPI": [], "Fixed commit": "f6e91a2d8010bb0e5ee92f941f747c2af77f9ed5", "Url": "https://api.github.com/repos/EngineerAhmedAbass/FirebasePushNotifications", "Date": "2018-04-19T14:07:45Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getProperty(org.apache.nifi.processors.sendpushnotification.SendPushNotification.CERT_PASSWORD).getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (io.netty.util.internal.StringUtil.isNullOrEmpty(cert_password)) { cert_password = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/428/buggy-version/nifi-sendpushnotification-processors.src.main.java.org.apache.nifi.processors.sendpushnotification.SendPushNotification.java", "BodyUseAPI": [], "Fixed commit": "aac90fc75575dc665ed6738b6fb505d4590837ca", "Url": "https://api.github.com/repos/danshev/nifi-Send-Push-Notification", "Date": "2018-01-14T00:29:16Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ok) reconcileRoles(acc);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3553/buggy-version/server.src.main.java.com.soffid.iam.sync.engine.ReconcileEngine2.java", "BodyUseAPI": [], "Fixed commit": "f2981b5106958c0afc4dd29dead8dd9c366a37d3", "Url": "https://api.github.com/repos/SoffidIAM/syncserver", "Date": "2018-03-07T20:49:36Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasResultSet) { schema = veil.hdp.hive.jdbc.metadata.Schema.builder().session(session).handle(operationHandle).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9743/buggy-version/driver.src.main.java.veil.hdp.hive.jdbc.thrift.ThriftOperation.java", "BodyUseAPI": [], "Fixed commit": "ecc5204d6b3ac1134eabc1b1ea6f8bc860e32115", "Url": "https://api.github.com/repos/timveil/hive-jdbc", "Date": "2018-09-27T22:09:27Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.sodacar.bowling.game.records.Frame>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (10 == (frameBeforeTenth.getFirstRollScore())) { if (10 == (next.getFirstRollScore())) { final com.sodacar.bowling.game.records.Frame nextAndNext = frames.get((i + 2)); totalScore = (totalScore + (next.getFirstRollScore())) + (nextAndNext.getFirstRollScore()); }else { totalScore = (totalScore + (next.getFirstRollScore())) + (next.getSecondRollScore()); } }else { totalScore = totalScore + (next.getFirstRollScore()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/89/buggy-version/records.src.main.java.com.sodacar.bowling.game.records.Game.java", "BodyUseAPI": [], "Fixed commit": "892366576591309dd2b2a41294c0bc457bc81c42", "Url": "https://api.github.com/repos/gaoffee/bowling", "Date": "2018-04-26T13:23:45Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.androbin.collection.PriorityQueue<E>.indexOfInsertion(E)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index < insertIndex) { nodes.move(index, (insertIndex - 1)); }else { nodes.move(index, insertIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9267/buggy-version/src.de.androbin.collection.PriorityQueue.java", "BodyUseAPI": ["de.androbin.collection.CyclicArrayList<E>.move(int,int)", "de.androbin.collection.CyclicArrayList<E>.move(int,int)"], "Fixed commit": "2ce992bfbe544f825fa35d5616a5cf9069813769", "Url": "https://api.github.com/repos/Androbin/Collections", "Date": "2018-03-27T23:26:05Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((cryptoCoin) != \"\") && ((cryptoCoin) != null)) { getCoinData(cryptoCoin); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9124/buggy-version/app.src.main.java.com.kartiksinghal.www.crypfolio.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c4fdb425685c36740128f8a143df223c970f07fc", "Url": "https://api.github.com/repos/kartik34/Crypfolio", "Date": "2018-08-20T17:40:16Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!keepValidating) { throw new mx.nic.lab.rpki.db.exception.ValidationException(validationErrors); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2648/buggy-version/src.main.java.mx.nic.lab.rpki.sqlite.object.SlurmPrefixDbObject.java", "BodyUseAPI": [], "Fixed commit": "c45f82eb050cc60ba75083fa17a2e14d76cefc17", "Url": "https://api.github.com/repos/pcarana/rpki-validator-sqlite-prov", "Date": "2018-10-04T13:18:25Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (expression instanceof com.kalessil.phpStorm.phpInspectionsEA.utils.TernaryExpression) { final com.kalessil.phpStorm.phpInspectionsEA.utils.TernaryExpression ternary = ((com.kalessil.phpStorm.phpInspectionsEA.utils.TernaryExpression) (expression)); if (ternary.isShort()) { final com.intellij.psi.PsiElement left = ternary.getTrueVariant(); final com.intellij.psi.PsiElement right = ternary.getFalseVariant(); if ((left instanceof com.kalessil.phpStorm.phpInspectionsEA.utils.PhpTypedElement) && (right instanceof com.kalessil.phpStorm.phpInspectionsEA.utils.PhpTypedElement)) { final com.jetbrains.php.lang.psi.resolve.types.PhpType leftType = com.kalessil.phpStorm.phpInspectionsEA.utils.OpenapiResolveUtil.resolveType(((com.kalessil.phpStorm.phpInspectionsEA.utils.PhpTypedElement) (left)), project); if (leftType != null) { final com.jetbrains.php.lang.psi.resolve.types.PhpType rightType = com.kalessil.phpStorm.phpInspectionsEA.utils.OpenapiResolveUtil.resolveType(((com.kalessil.phpStorm.phpInspectionsEA.utils.PhpTypedElement) (right)), project); if (rightType != null) { result = new com.jetbrains.php.lang.psi.resolve.types.PhpType().add(leftType.filterNull()).add(rightType); } } } } }else if (expression instanceof com.kalessil.phpStorm.phpInspectionsEA.utils.FunctionReference) { final com.intellij.psi.PsiElement function = com.kalessil.phpStorm.phpInspectionsEA.utils.OpenapiResolveUtil.resolveReference(((com.kalessil.phpStorm.phpInspectionsEA.utils.FunctionReference) (expression))); result = (function instanceof com.kalessil.phpStorm.phpInspectionsEA.utils.Function) ? ((com.kalessil.phpStorm.phpInspectionsEA.utils.Function) (function)).getType().global(project) : new com.jetbrains.php.lang.psi.resolve.types.PhpType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/239/buggy-version/src.main.java.com.kalessil.phpStorm.phpInspectionsEA.utils.OpenapiResolveUtil.java", "BodyUseAPI": [], "Fixed commit": "0d9a1146f1abca3a410e01915c6ea4dca134278a", "Url": "https://api.github.com/repos/kalessil/phpinspectionsea", "Date": "2018-03-15T07:43:02Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (leftType != null) { final com.jetbrains.php.lang.psi.resolve.types.PhpType rightType = com.kalessil.phpStorm.phpInspectionsEA.utils.OpenapiResolveUtil.resolveType(((com.kalessil.phpStorm.phpInspectionsEA.utils.PhpTypedElement) (right)), project); if (rightType != null) { result = new com.jetbrains.php.lang.psi.resolve.types.PhpType().add(leftType.filterNull()).add(rightType); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/239/buggy-version/src.main.java.com.kalessil.phpStorm.phpInspectionsEA.utils.OpenapiResolveUtil.java", "BodyUseAPI": ["new com.jetbrains.php.lang.psi.resolve.types.PhpType().add(leftType.filterNull()).add(com.jetbrains.php.lang.psi.resolve.types.PhpType)", "com.jetbrains.php.lang.psi.resolve.types.PhpType.filterNull()", "com.jetbrains.php.lang.psi.resolve.types.PhpType.add(leftType.filterNull())"], "Fixed commit": "0d9a1146f1abca3a410e01915c6ea4dca134278a", "Url": "https://api.github.com/repos/kalessil/phpinspectionsea", "Date": "2018-03-15T07:43:02Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (relativeUrl.startsWith(\"/\")) { return setRelativeUrl(relativeUrl.substring(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7077/buggy-version/SimpleRest.src.main.java.com.github.wrdlbrnft.simplerest.connection.request.Request.java", "BodyUseAPI": ["java.lang.String.substring(int)", "com.github.wrdlbrnft.simplerest.connection.request.Request.Builder.setRelativeUrl(java.lang.String)"], "Fixed commit": "cc5986b8f2d87147746ac49feddbc5a94977ce1b", "Url": "https://api.github.com/repos/Wrdlbrnft/SimpleRest", "Date": "2018-02-25T20:53:49Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (path.startsWith(\"/\")) { return addPathParameter(path.substring(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7077/buggy-version/SimpleRest.src.main.java.com.github.wrdlbrnft.simplerest.connection.request.Request.java", "BodyUseAPI": ["com.github.wrdlbrnft.simplerest.connection.request.Request.Builder.addPathParameter(java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "cc5986b8f2d87147746ac49feddbc5a94977ce1b", "Url": "https://api.github.com/repos/Wrdlbrnft/SimpleRest", "Date": "2018-02-25T20:53:49Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.Jsoup.parse(rs).title()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"\u9884\u7ea6\u6210\u529f\".equals(title)) { breakView.submitUser(true, rs); }else { breakView.submitUser(false, rs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5386/buggy-version/app.src.main.java.com.shang.cannan.car.maybreak.BreakPresent.java", "BodyUseAPI": [], "Fixed commit": "cc5dd919c3db5c4b86380a486c56dd73785ff6ad", "Url": "https://api.github.com/repos/sgn5200/gycgs", "Date": "2018-05-14T08:08:51Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.stanford.epad.epadws.aim.AimReporter.fillTable(edu.stanford.epad.dtos.EPADAIMList,java.lang.String,java.lang.String[],java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(templateTable.isEmpty())) && (!(templateTable.equals(\"[]\")))) { if ((filled.isEmpty()) || (filled.equals(\"[]\"))) filled = templateTable; else filled = ((filled.substring(0, ((filled.length()) - 1))) + \",\") + (templateTable.substring(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7358/buggy-version/src.main.java.edu.stanford.epad.epadws.aim.AimReporter.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "353ee72cccf61c0c2d1e4936c91b62989170491d", "Url": "https://api.github.com/repos/RubinLab/epad-ws", "Date": "2018-02-02T05:28:58Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (error instanceof crypto.analysis.errors.ImpreciseValueExtractionError) { this.markerGenerator.addMarker(sourceFile, lineNumber, errorMessage, true); }else { this.markerGenerator.addMarker(sourceFile, lineNumber, errorMessage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5052/buggy-version/plugins.de.cognicrypt.staticanalyzer.src.de.cognicrypt.staticanalyzer.results.ResultsCCUIListener.java", "BodyUseAPI": [], "Fixed commit": "a362cc8d601f78398ebcbcf6547509513ed4afc6", "Url": "https://api.github.com/repos/CROSSINGTUD/CogniCrypt", "Date": "2018-07-03T12:16:45Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(fsManager.exists(projectPath))) && (fsManager.exists(mavenArtifact.getArtifactId()))) { try { fsManager.move(mavenArtifact.getArtifactId(), projectPath); } catch (org.eclipse.che.api.core.NotFoundException e) { throw new org.eclipse.che.api.core.ServerException(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8379/buggy-version/plugins.plugin-maven.che-plugin-maven-server.src.main.java.org.eclipse.che.plugin.maven.server.projecttype.handler.ArchetypeGenerationStrategy.java", "BodyUseAPI": ["org.eclipse.che.ide.maven.tools.MavenArtifact.getArtifactId()", "org.eclipse.che.api.fs.server.FsManager.move(mavenArtifact.getArtifactId(),java.lang.String)"], "Fixed commit": "0964c50143d0554e302e46cb6dc07e86429a8f6e", "Url": "https://api.github.com/repos/eclipse/che", "Date": "2018-06-13T12:39:11Z"},
{"Line": "=>796", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (favphotomode) { org.fossasia.phimpme.gallery.util.AlertDialogsHelper.getTextDialog(this, deleteDialog, R.string.remove_from_favourites, R.string.delete_from_favourites_message, null); buttondelete = this.getString(R.string.remove); }else { org.fossasia.phimpme.gallery.util.AlertDialogsHelper.getTextDialog(this, deleteDialog, R.string.delete, R.string.delete_photo_message, null); buttondelete = this.getString(R.string.delete); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5698/buggy-version/app.src.main.java.org.fossasia.phimpme.gallery.activities.SingleMediaActivity.java", "BodyUseAPI": [], "Fixed commit": "330f04aa6183c7255b25f6f263ff8efa7aaa3d25", "Url": "https://api.github.com/repos/sauravvishal8797/phimpme-android", "Date": "2018-03-11T06:29:39Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (device != null) { if (device.getName().equals(\"TEST\")) { android.widget.Toast.makeText(this, (((\"Showing Unpaired Device: \" + (device.getName())) + \" \") + (device.getAddress())), Toast.LENGTH_LONG).show(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4777/buggy-version/app.src.main.java.com.example.marta.blueteeth.TeacherConnectScreen.java", "BodyUseAPI": ["android.bluetooth.BluetoothDevice.getName()", "android.bluetooth.BluetoothDevice.getName()", "android.bluetooth.BluetoothDevice.getAddress()", "device.getName().equals(java.lang.String)", "android.widget.Toast.makeText(this, (((\"Showing Unpaired Device: \" + (device.getName())) + \" \") + (device.getAddress())), Toast.LENGTH_LONG).show()", "android.widget.Toast.makeText(com.example.marta.blueteeth.TeacherConnectScreen,(((\"Showing Unpaired Device: \" + (device.getName())) + \" \") + (device.getAddress())),Toast.LENGTH_LONG)"], "Fixed commit": "34d34e9008c1e68603a9709dc91988a99cd632d5", "Url": "https://api.github.com/repos/Martydude15/BlueTeeth", "Date": "2018-04-21T00:52:44Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((btAdapter) != null) { btAdapter.cancelDiscovery(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4777/buggy-version/app.src.main.java.com.example.marta.blueteeth.TeacherConnectScreen.java", "BodyUseAPI": [], "Fixed commit": "34d34e9008c1e68603a9709dc91988a99cd632d5", "Url": "https://api.github.com/repos/Martydude15/BlueTeeth", "Date": "2018-04-21T00:52:44Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Arrays.copyOf(int[][],int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((i + 2) < (game.length)) { gameScore += ((bowling.CalculatingScore.getFrameScore(game[i])) + (bowling.CalculatingScore.getFrameScore(game[(i + 1)]))) + (game[(i + 2)][0]); }else { gameScore += ((bowling.CalculatingScore.getFrameScore(game[i])) + (bowling.CalculatingScore.getFrameScore(game[(i + 1)]))) + (bonusThrows[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3223/buggy-version/tdd-bowling-lab.src.bowling.CalculatingScore.java", "BodyUseAPI": ["bowling.CalculatingScore.getFrameScore(int[])", "bowling.CalculatingScore.getFrameScore(int[])", "bowling.CalculatingScore.getFrameScore(int[])", "bowling.CalculatingScore.getFrameScore(int[])"], "Fixed commit": "8421dd177ba53c4dbb479105431b847afc0fa4b9", "Url": "https://api.github.com/repos/Nicklas766/tdd-bowling-lab", "Date": "2018-05-23T19:04:13Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (u instanceof laser.cs610.JLookupSwitchStmt) return laser.cs610.UnitType.JLOOKUPSWITCHSTMT;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5578/buggy-version/src.main.java.laser.cs610.UnitType.java", "BodyUseAPI": [], "Fixed commit": "bd91569ae4903cf6a3caaa61e2ad77226e416fcf", "Url": "https://api.github.com/repos/MarceloLaser/csci610_hw1", "Date": "2018-09-05T07:48:29Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (t != null) { java.lang.String reference = t.getRef(); if ((reference != null) && (!(reference.isEmpty()))) { com.ibm.ws.microprofile.openapi.impl.validation.ValidatorUtils.referenceValidatorHelper(reference, t, helper, context, key); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6658/buggy-version/dev.com.ibm.ws.microprofile.openapi.src.com.ibm.ws.microprofile.openapi.impl.validation.HeaderValidator.java", "BodyUseAPI": ["org.eclipse.microprofile.openapi.models.headers.Header.getRef()", "com.ibm.ws.microprofile.openapi.impl.validation.ValidatorUtils.referenceValidatorHelper(java.lang.String,org.eclipse.microprofile.openapi.models.headers.Header,com.ibm.ws.microprofile.openapi.impl.validation.ValidationHelper,com.ibm.ws.microprofile.openapi.utils.OpenAPIModelWalker.Context,java.lang.String)"], "Fixed commit": "730ff5c2e5833ef415fdf313d0f5d84fb9732683", "Url": "https://api.github.com/repos/leochr/open-liberty", "Date": "2018-01-19T16:18:54Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.yanicksenn.heroku.Application.getPersistenceConfig()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (config != null) { java.lang.String entity = javax.json.Json.createObjectBuilder().add(\"dbUrl\", config.getDbUrl()).add(\"dbVendor\", config.getDbVendor()).add(\"username\", config.getUsername()).add(\"password\", config.getPassword()).add(\"host\", config.getHost()).add(\"port\", config.getPort()).add(\"dbName\", config.getDbName()).add(\"jdbcUrl\", config.getJdbcUrl()).build().toString(); return javax.ws.rs.core.Response.ok().entity(entity).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2402/buggy-version/src.main.java.ch.yanicksenn.heroku.blog.BlogResource.java", "BodyUseAPI": ["ch.yanicksenn.heroku.Application.PersistenceConfig.getUsername()", "ch.yanicksenn.heroku.Application.PersistenceConfig.getPort()", "javax.json.Json.createObjectBuilder().add(\"dbUrl\", config.getDbUrl()).add(\"dbVendor\", config.getDbVendor()).add(\"username\", config.getUsername()).add(\"password\", config.getPassword()).add(\"host\", config.getHost()).add(\"port\", config.getPort()).add(\"dbName\", config.getDbName()).add(\"jdbcUrl\", config.getJdbcUrl()).build()", "ch.yanicksenn.heroku.Application.PersistenceConfig.getDbVendor()", "ch.yanicksenn.heroku.Application.PersistenceConfig.getHost()", "javax.json.Json.createObjectBuilder().add(\"dbUrl\", config.getDbUrl()).add(\"dbVendor\", config.getDbVendor()).add(\"username\", config.getUsername()).add(\"password\", config.getPassword()).add(java.lang.String,config.getHost())", "javax.json.Json.createObjectBuilder().add(\"dbUrl\", config.getDbUrl()).add(\"dbVendor\", config.getDbVendor()).add(java.lang.String,config.getUsername())", "ch.yanicksenn.heroku.Application.PersistenceConfig.getPassword()", "javax.json.Json.createObjectBuilder().add(\"dbUrl\", config.getDbUrl()).add(\"dbVendor\", config.getDbVendor()).add(\"username\", config.getUsername()).add(\"password\", config.getPassword()).add(\"host\", config.getHost()).add(java.lang.String,config.getPort())", "ch.yanicksenn.heroku.Application.PersistenceConfig.getDbUrl()", "ch.yanicksenn.heroku.Application.PersistenceConfig.getJdbcUrl()", "javax.json.Json.createObjectBuilder().add(\"dbUrl\", config.getDbUrl()).add(\"dbVendor\", config.getDbVendor()).add(\"username\", config.getUsername()).add(\"password\", config.getPassword()).add(\"host\", config.getHost()).add(\"port\", config.getPort()).add(\"dbName\", config.getDbName()).add(\"jdbcUrl\", config.getJdbcUrl()).build().toString()", "javax.json.Json.createObjectBuilder().add(\"dbUrl\", config.getDbUrl()).add(\"dbVendor\", config.getDbVendor()).add(\"username\", config.getUsername()).add(\"password\", config.getPassword()).add(\"host\", config.getHost()).add(\"port\", config.getPort()).add(\"dbName\", config.getDbName()).add(java.lang.String,config.getJdbcUrl())", "javax.json.Json.createObjectBuilder().add(\"dbUrl\", config.getDbUrl()).add(\"dbVendor\", config.getDbVendor()).add(\"username\", config.getUsername()).add(\"password\", config.getPassword()).add(\"host\", config.getHost()).add(\"port\", config.getPort()).add(java.lang.String,config.getDbName())", "javax.json.Json.createObjectBuilder().add(\"dbUrl\", config.getDbUrl()).add(\"dbVendor\", config.getDbVendor()).add(\"username\", config.getUsername()).add(java.lang.String,config.getPassword())", "javax.json.Json.createObjectBuilder().add(java.lang.String,config.getDbUrl())", "javax.json.Json.createObjectBuilder().add(\"dbUrl\", config.getDbUrl()).add(java.lang.String,config.getDbVendor())", "ch.yanicksenn.heroku.Application.PersistenceConfig.getDbName()"], "Fixed commit": "b87d7f359616a1939b2765a0db4feccff446fa3d", "Url": "https://api.github.com/repos/yanicksenn/heroku-blog", "Date": "2018-04-05T13:55:20Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seedu.learnvocabulary.logic.commands.EditCommand.createEditedWord(seedu.learnvocabulary.model.word.Word,seedu.learnvocabulary.logic.commands.EditCommand.EditWordDescriptor)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(model.hasTag(editedWord.getTags()))) { throw new seedu.learnvocabulary.logic.commands.exceptions.CommandException(seedu.learnvocabulary.logic.commands.EditCommand.MESSAGE_NO_GROUP); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4666/buggy-version/src.main.java.seedu.learnvocabulary.logic.commands.EditCommand.java", "BodyUseAPI": [], "Fixed commit": "02c9dc819301c52aa7eb2020c1e934b8c1d200b9", "Url": "https://api.github.com/repos/CS2103-AY1819S1-T10-3/main", "Date": "2018-10-31T04:43:14Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((careTakers.size()) > 0) { if ((bases.size()) == 0) { buildBase(careTakers.remove(0), p, pgs); } sendWorkersToMine(careTakers, pgs, p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4988/buggy-version/bot.src.bot.counterBot.java", "BodyUseAPI": ["bot.counterBot.buildBase(careTakers.remove(0),rts.Player,rts.PhysicalGameState)", "java.util.List<bot.Unit>.remove(int)", "bot.counterBot.sendWorkersToMine(java.util.List<bot.Unit>,rts.PhysicalGameState,rts.Player)"], "Fixed commit": "9be8f156c326b0481590a075183d472c30cfa2f6", "Url": "https://api.github.com/repos/TristanBarlow/comp250-bot", "Date": "2018-03-19T14:39:38Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.location.Address.getAddressLine(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (addressLine == null) { addressLine = address.getAddressLine(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8371/buggy-version/app.src.main.java.com.example.mac.chartr.objects.Trip.java", "BodyUseAPI": [], "Fixed commit": "4e7d56021fb555ba0021f4860ae5a284d1a98d84", "Url": "https://api.github.com/repos/Chart-r/chartr-android", "Date": "2018-04-22T19:00:03Z"},
{"Line": "=>538", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(b.hasSource())) { b.addAnnot(BeliefBase.TSelf); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/743/buggy-version/src.main.java.jason.asSemantics.Agent.java", "BodyUseAPI": ["jason.asSyntax.Literal.addAnnot(BeliefBase.TSelf)"], "Fixed commit": "e34ad9805a65f238e60a21c8fd267db9aa746e30", "Url": "https://api.github.com/repos/jason-lang/jason", "Date": "2018-07-16T20:12:33Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ic.getImageName().contains(\"#\")) { img.setImageName(ic.getImageName().split(\"#\")[1]); thumb = img.getImageName().replace(\".\", \"_thumbnail.\"); source = img.getImageName(); }else { img.setImageName(ic.getImageName()); thumb = ic.getThumbnailPath(); source = ic.getPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8977/buggy-version/src.main.java.main.java.de.htwsaar.dfs.utils.RestUtils.java", "BodyUseAPI": ["main.java.de.htwsaar.dfs.model.ImageContainer.getThumbnailPath()", "ic.getImageName().split(java.lang.String)", "main.java.de.htwsaar.dfs.model.ImageContainer.getPath()", "main.java.de.htwsaar.dfs.model.ImageContainer.getImageName()", "main.java.de.htwsaar.dfs.model.ImageContainer.getImageName()", "main.java.de.htwsaar.dfs.model.Image.setImageName(ic.getImageName().split(\"#\")[1])", "main.java.de.htwsaar.dfs.model.Image.setImageName(ic.getImageName())"], "Fixed commit": "a7f47ec21489463d657758de77fc563758148b85", "Url": "https://api.github.com/repos/Projekt-DFS/DFS_v2", "Date": "2018-09-05T22:13:48Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(pile.isEmpty())) { LibrairieCarte.Carte val = pile.peek(); if (max != null) { if ((max.compareTo(val)) < 0) { max = val; } }else if ((val.getValeur().getValeur()) >= (ValeurCarte.DIX.getValeur())) { max = val; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9415/buggy-version/src.Carte.Piles.java", "BodyUseAPI": ["pile.peek()"], "Fixed commit": "78d9f00c392f6ef39b3bd5936ec40b31f057ce97", "Url": "https://api.github.com/repos/GuillaumeCailhe/BridgeChinoisServeur", "Date": "2018-05-27T15:50:15Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((typeOfPatientID) != null) result += (typeOfPatientID.hashCode()) * 31;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1470/buggy-version/dcm4che-core.src.main.java.org.dcm4che3.data.IDWithIssuer.java", "BodyUseAPI": [], "Fixed commit": "3e1eac2c34fa5c9f6342460963eacf43401666e3", "Url": "https://api.github.com/repos/nroduit/dcm4che", "Date": "2018-08-29T10:59:16Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(music.exists())) { org.bukkit.Bukkit.broadcastMessage(\"\u627e\u4e0d\u5230\u6a94\u6848\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8740/buggy-version/src.mcmusic.file.MIDIManager.java", "BodyUseAPI": [], "Fixed commit": "8de7e66ad9418b229db9d1d2263f52c4720be539", "Url": "https://api.github.com/repos/MinecraftDawn/MCMusic", "Date": "2018-09-01T02:29:32Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ineedwhite.diancan.dao.dao.OrderDao.selectTheRecentOrdByUserId(userDo.getUser_id())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (orderDo == null) { return resp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6382/buggy-version/diancan-biz.src.main.java.com.ineedwhite.diancan.biz.impl.UserServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "bd75d07421fbfb60dcc0c05c0da1b9cf6ca5eeb0", "Url": "https://api.github.com/repos/Ruan-Xin/diancan", "Date": "2018-03-21T11:52:03Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (area == null) startRound();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9003/buggy-version/src.games.gsClever.Logic.MainLogic.java", "BodyUseAPI": [], "Fixed commit": "66abbe7515f0b05229d871b77de3197c6770d336", "Url": "https://api.github.com/repos/nicoonator/gsclever", "Date": "2018-07-09T17:08:30Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (frag instanceof zhengc.bcit.ca.benehome.Document) { this.setTitle(\"Document Checklist\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6530/buggy-version/app.src.main.java.zhengc.bcit.ca.benehome.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2548e017491dba9a2a29d028ae99835eb26da1c1", "Url": "https://api.github.com/repos/shawnzheng99/beneHome", "Date": "2018-05-17T02:06:26Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((f) instanceof zhengc.bcit.ca.benehome.Document) { super.onBackPressed(); set_title(get_current_fragment()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6530/buggy-version/app.src.main.java.zhengc.bcit.ca.benehome.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2548e017491dba9a2a29d028ae99835eb26da1c1", "Url": "https://api.github.com/repos/shawnzheng99/beneHome", "Date": "2018-05-17T02:06:26Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((res.length()) > 8) { res = res.substring(0, 8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7364/buggy-version/src.StringUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "a2e35c97a056ea039adcdce1ddc70086117f743a", "Url": "https://api.github.com/repos/Purdue-CS193/lab-3-Icnfaun", "Date": "2018-09-26T04:47:51Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) == (hotel.entities.Booking.State.CHECKED_IN)) { charges.add(new hotel.entities.ServiceCharge(serviceType, cosst)); }else if ((state) == (hotel.entities.Booking.State.CHECKED_OUT)) { java.lang.System.out.println(\"User has already checked out!\"); }else { java.lang.System.out.println(\"This is a pending booking!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8048/buggy-version/entities.Booking.java", "BodyUseAPI": [], "Fixed commit": "33654ce2a0b56515d4f0e68db31d4ad9b88feab5", "Url": "https://api.github.com/repos/mihirantfx/539-Assignment4", "Date": "2018-10-04T11:11:55Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (exploding) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6411/buggy-version/core.src.com.dungeon.game.character.Thief.java", "BodyUseAPI": [], "Fixed commit": "85814cd01721a4942634ead8c0918db0db2dde25", "Url": "https://api.github.com/repos/angelusmetal/dungeon", "Date": "2018-03-03T19:22:40Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (exploding) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6411/buggy-version/core.src.com.dungeon.game.character.Assasin.java", "BodyUseAPI": [], "Fixed commit": "85814cd01721a4942634ead8c0918db0db2dde25", "Url": "https://api.github.com/repos/angelusmetal/dungeon", "Date": "2018-03-03T19:22:40Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (exploding) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6411/buggy-version/core.src.com.dungeon.game.character.Witch.java", "BodyUseAPI": [], "Fixed commit": "85814cd01721a4942634ead8c0918db0db2dde25", "Url": "https://api.github.com/repos/angelusmetal/dungeon", "Date": "2018-03-03T19:22:40Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pokemonsList.getResults().get(position).getImage()) != null) { holder.pokemonName.setText(pokemonsList.getResults().get(position).getName()); com.pokemon.pokemons.MainActivity.setImageUrl(holder.pokemonImage, context, android.net.Uri.parse(pokemonsList.getResults().get(position).getImage()), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4749/buggy-version/app.src.main.java.com.pokemon.pokemons.adapters.RecyclerViewAdapter.java", "BodyUseAPI": ["android.net.Uri.parse(pokemonsList.getResults().get(position).getImage())", "pokemonsList.getResults().get(position).getImage()", "com.pokemon.pokemons.MainActivity.setImageUrl(holder.pokemonImage,android.content.Context,android.net.Uri.parse(pokemonsList.getResults().get(position).getImage()),int)", "pokemonsList.getResults().get(int)", "com.pokemon.pokemons.rest.models.PokemonModel.getResults()", "holder.pokemonName.setText(pokemonsList.getResults().get(position).getName())", "com.pokemon.pokemons.rest.models.PokemonModel.getResults()", "pokemonsList.getResults().get(position).getName()", "pokemonsList.getResults().get(int)"], "Fixed commit": "243afc5ac9971601cb8da8ebbe4a0ee022cac244", "Url": "https://api.github.com/repos/Kisiev/testing", "Date": "2018-03-04T15:18:45Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= 26) { imei = tm.getImei().trim(); }else { imei = tm.getDeviceId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8991/buggy-version/android.src.main.java.codes.simen.IMEI.RNImeiModule.java", "BodyUseAPI": [], "Fixed commit": "2a94cb0cbb93909a64c4530a425b2c385b86b5de", "Url": "https://api.github.com/repos/SimenCodes/react-native-imei", "Date": "2018-10-09T03:30:07Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(request instanceof org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper)) { org.springframework.security.core.context.SecurityContextHolder.clearContext(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9608/buggy-version/backend.src.main.java.com.meetup.meetup.security.jwt.JwtAuthFilter.java", "BodyUseAPI": [], "Fixed commit": "b325b814e241919f24b092c7d60e9b66ab3595dc", "Url": "https://api.github.com/repos/ydeineka/meetup", "Date": "2018-04-24T22:43:47Z"},
{"Line": "=>1098", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.nasa.jpf.vm.ClassInfo.getMethod(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (miIfc.getClassInfo().isSubInterfaceOf(mi.getClassInfo())) { miIfc = mi; }else if (mi.getClassInfo().isSubInterfaceOf(miIfc.getClassInfo())) { continue; }else { java.lang.String msg = ((\"Conflicting default methods: \" + (mi.getFullName())) + \", \") + (miIfc.getFullName()); throw new gov.nasa.jpf.vm.ClassChangeException(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5041/buggy-version/src.main.gov.nasa.jpf.vm.ClassInfo.java", "BodyUseAPI": ["gov.nasa.jpf.vm.MethodInfo.getClassInfo()", "gov.nasa.jpf.vm.MethodInfo.getFullName()", "mi.getClassInfo().isSubInterfaceOf(miIfc.getClassInfo())", "gov.nasa.jpf.vm.MethodInfo.getClassInfo()", "gov.nasa.jpf.vm.MethodInfo.getFullName()"], "Fixed commit": "238fc660f3b4189b6d979a2d33be78c0d321d924", "Url": "https://api.github.com/repos/uwplse/jpf-core", "Date": "2018-08-25T00:09:41Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.util.DamageSource.getTrueSource()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (attacker instanceof net.minecraft.entity.EntityLivingBase) { this.respondToAttack(((net.minecraft.entity.EntityLivingBase) (attacker))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/238/buggy-version/src.main.java.org.jurassicraft.server.entity.DinosaurEntity.java", "BodyUseAPI": [], "Fixed commit": "ab2ac9c4662bbbbce39a78aee769e61f4fc50dc6", "Url": "https://api.github.com/repos/JurassiCraftTeam/JurassiCraft2", "Date": "2018-06-12T01:03:23Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args[1]) != null) { if (args[1].startsWith(\"ender\")) { player.openInventory(inventoryPlayer.getEnderChest()); }else { player.openInventory(inventoryPlayer.getInventory()); } }else { player.openInventory(inventoryPlayer.getInventory()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3729/buggy-version/src.main.java.com.frostcraft.admintools.InventoryCommand.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "b1c152abbb3eacd0825343fab3edaa166c5704f5", "Url": "https://api.github.com/repos/Brecert/FrostCraft-AdminTools", "Date": "2018-08-07T18:57:01Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((y) == (floor)) { setDy(((-(height)) / 4)); drawableIdx = (facingRight()) ? 4 : 5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1537/buggy-version/app.src.main.java.com.coryswainston.game.objects.Llama.java", "BodyUseAPI": [], "Fixed commit": "3459a5e4c4909d696b22f9fdfb9668627c3e775c", "Url": "https://api.github.com/repos/coryswainston/llama-lland", "Date": "2018-04-20T07:03:22Z"},
{"Line": "=>549", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(f.isHidden())) { files.add(f.getAbsolutePath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9551/buggy-version/src.main.com.google.code.tvrenamer.view.UIStarter.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "db64cfb88ae702ba95228ccd4b5984b5202d812f", "Url": "https://api.github.com/repos/johnv02139/tvrenamer", "Date": "2011-03-21T20:49:42Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((root.left) != null) curr = root.left; else if ((root.right) != null) curr = root.right;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3202/buggy-version/src.Tree.InorderTreversalNoRecursion.java", "BodyUseAPI": [], "Fixed commit": "cd8a3801fddd91c059a25f7a242ad7276ce272cc", "Url": "https://api.github.com/repos/zhuoruiyang/geeksforgeeks", "Date": "2018-02-07T02:23:05Z"},
{"Line": "=>974", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count > 500) { result.append(original.substring(current, (current + Offset)).replace(\"\\r\", \"\").replace(\"\\n\", \"\\\\n\")).append(\"\\\" + new String()\\n+\\\"\"); count = 0; }else { result.append(original.substring(current, (current + Offset)).replace(\"\\r\", \"\").replace(\"\\n\", \"\\\\n\")).append(\"\\\"\\n+\\\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4440/buggy-version/main.plugins.org.talend.core.runtime.src.main.java.org.talend.core.model.utils.NodeUtil.java", "BodyUseAPI": [], "Fixed commit": "61a15cc033bcae1bf79f929acf003cc8e5ee9757", "Url": "https://api.github.com/repos/pyzhou-talend/tcommon-studio-se", "Date": "2018-02-07T02:45:50Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isBotCommander(e.getMember())) return true; else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8599/buggy-version/RPRandomEventsBot.src.rousche.botrandomevent.commands.Debug.DebugCommand.java", "BodyUseAPI": [], "Fixed commit": "eefb4bced7f2c196c01a7f23d5216cd22b42ac65", "Url": "https://api.github.com/repos/Deadshot09/Bot-RandomEvents", "Date": "2018-06-17T21:12:29Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dataMediaType.isMysql()) { dbcpDs.addConnectionProperty(\"useServerPrepStmts\", \"false\"); dbcpDs.addConnectionProperty(\"rewriteBatchedStatements\", \"true\"); dbcpDs.addConnectionProperty(\"zeroDateTimeBehavior\", \"convertToNull\"); dbcpDs.addConnectionProperty(\"yearIsDateType\", \"false\"); dbcpDs.addConnectionProperty(\"noDatetimeStringSync\", \"true\"); dbcpDs.addConnectionProperty(\"jdbcCompliantTruncation\", \"false\"); if (org.apache.commons.lang.StringUtils.isNotEmpty(encoding)) { if (org.apache.commons.lang.StringUtils.equalsIgnoreCase(encoding, \"utf8mb4\")) { dbcpDs.addConnectionProperty(\"characterEncoding\", \"utf8\"); dbcpDs.setConnectionInitSqls(java.util.Arrays.asList(\"set names utf8mb4\")); }else { dbcpDs.addConnectionProperty(\"characterEncoding\", encoding); } } dbcpDs.setValidationQuery(\"select 1\"); }else { com.alibaba.otter.common.push.datasource.media.MediaPushDataSource.logger.error(\"ERROR ## Unknow database type\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6497/buggy-version/shared.push.src.main.java.com.alibaba.otter.common.push.datasource.media.MediaPushDataSource.java", "BodyUseAPI": [], "Fixed commit": "2727d65231b92fa03b5fa51724d8df4874c81430", "Url": "https://api.github.com/repos/zmyer/otter", "Date": "2018-09-18T02:21:52Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.arm.cmsis.pack.ui.widgets.RteDeviceSelectorWidget.getDeviceTreeItem(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(item.hasChildren())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1285/buggy-version/com.arm.cmsis.pack.ui.src.com.arm.cmsis.pack.ui.widgets.RteDeviceSelectorWidget.java", "BodyUseAPI": [], "Fixed commit": "ad47c159fd31b4af5ca1076e05992a203c970792", "Url": "https://api.github.com/repos/ARM-software/cmsis-pack-eclipse", "Date": "2018-03-09T08:54:18Z"},
{"Line": "=>752", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (proxy != null) proxy.setAvailableLookupTables(getLookupTables(ctx));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7062/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.env.data.OmeroImageServiceImpl.java", "BodyUseAPI": ["org.openmicroscopy.shoola.env.rnd.RenderingControl.setAvailableLookupTables(java.util.Collection<java.lang.String>)"], "Fixed commit": "2f5952d2be973def1c90e39ebdf82483d5dbcf49", "Url": "https://api.github.com/repos/openmicroscopy/openmicroscopy", "Date": "2018-02-07T14:29:08Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (c != null) { java.lang.System.out.println(c.getCustomerPassword()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3350/buggy-version/MembershipManagementMachine.src.jacob_files.LoginInterface.java", "BodyUseAPI": ["java.io.PrintStream.println(c.getCustomerPassword())", "jacob_files.Customer.getCustomerPassword()"], "Fixed commit": "2aa4e0d39480bc98b49cc85290ac728b91ee2190", "Url": "https://api.github.com/repos/TechGenus/CPS406GroupWork", "Date": "2018-04-05T00:15:41Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((world.isTitle()) && (Gdx.input.isKeyJustPressed(Input.Keys.SPACE))) { world.start(); }else if ((world.isGameOver()) && (Gdx.input.isKeyJustPressed(Input.Keys.SPACE))) { world.restart(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7484/buggy-version/jamrun.core.src.com.bacc.helpers.InputHandler.java", "BodyUseAPI": ["com.bacc.gameworld.GameWorld.restart()", "com.bacc.gameworld.GameWorld.isGameOver()", "com.bacc.gameworld.GameWorld.start()"], "Fixed commit": "8bcc843fcafddb291555b87261b0e84a85983d60", "Url": "https://api.github.com/repos/danestrin/BCGameJam2018", "Date": "2018-02-10T15:52:27Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.veertu.plugin.anka.AnkaCloudComputer.getBuilds()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (jobs.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9179/buggy-version/src.main.java.com.veertu.plugin.anka.AnkaCloudComputer.java", "BodyUseAPI": [], "Fixed commit": "93c18d95f15063563490c054e8847a962be9a47c", "Url": "https://api.github.com/repos/jenkinsci/anka-build-plugin", "Date": "2018-08-01T13:26:20Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((colunas.length) > 2) { mensagem.setMensagem(decisaocomatosdefala.nlp.StopWords.removendoCaracter(colunas[2])); mensagens.add(mensagem); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1557/buggy-version/src.main.java.decisaocomatosdefala.util.TicketsHelper.java", "BodyUseAPI": ["decisaocomatosdefala.model.Mensagem.setMensagem(decisaocomatosdefala.nlp.StopWords.removendoCaracter(colunas[2]))", "decisaocomatosdefala.nlp.StopWords.removendoCaracter(java.lang.String)"], "Fixed commit": "cdedcfbdba00ffb9a3b98717483da9213d14777f", "Url": "https://api.github.com/repos/ALICE-UFRJ-PUCRio/speechact", "Date": "2018-04-08T00:16:30Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.media.MediaMetadataCompat.getDescription()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (description == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4929/buggy-version/app.src.main.java.com.erpdevelopment.vbvm.MediaStyleHelper.java", "BodyUseAPI": [], "Fixed commit": "464d474a083bde9d16128cef5edd5f7fa7df75fa", "Url": "https://api.github.com/repos/VBVMI/VerseByVerse-Android", "Date": "2018-10-08T08:12:15Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event.isCancelled()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8524/buggy-version/src.main.java.com.sasha.adorufu.mod.mixins.client.MixinNetworkManager.java", "BodyUseAPI": [], "Fixed commit": "7ad3b50a9967ec45d274e0d6a0a19d8120289b2d", "Url": "https://api.github.com/repos/EmotionalLove/Adorufu_Client", "Date": "2018-10-08T02:20:02Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (plugin.isCheckNameMojang()) { name = player.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6458/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Util.Misc.PlayerUtils.java", "BodyUseAPI": [], "Fixed commit": "63640884e8bd6ddb3ca98e18ce267df3dd09ce71", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2018-01-06T01:59:05Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (plugin.isCheckNameMojang()) { name = player.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6458/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Util.Misc.PlayerUtils.java", "BodyUseAPI": [], "Fixed commit": "63640884e8bd6ddb3ca98e18ce267df3dd09ce71", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2018-01-06T01:59:05Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.equals(java.lang.String.class)) { return value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4377/buggy-version/src.main.java.com.blade.kit.ReflectKit.java", "BodyUseAPI": [], "Fixed commit": "96cc012377869457fe07e09ea1c5de08e8712a0c", "Url": "https://api.github.com/repos/lets-blade/blade", "Date": "2018-04-18T14:59:46Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (previous != null) { previous.next = next; return current.data; }else { head = next; return next.data; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8874/buggy-version/classes.SingleLL.java", "BodyUseAPI": [], "Fixed commit": "12ba0ce5096fc3327c5d113dfdcae95b49dff714", "Url": "https://api.github.com/repos/jschmidtnj/CS284", "Date": "2018-09-17T19:31:33Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parent.getParent()) != null) { parent = parent.getParent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5102/buggy-version/tooling.camel-route-parser.src.main.java.org.apache.camel.parser.helper.CamelJavaTreeParserHelper.java", "BodyUseAPI": ["org.apache.camel.parser.model.CamelNodeDetails.getParent()"], "Fixed commit": "c59276e0c3e95de86e13eafdff54998297c6b3d9", "Url": "https://api.github.com/repos/ppalaga/camel", "Date": "2018-05-05T09:33:16Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parent.getParent()) != null) { parent = parent.getParent(); }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5102/buggy-version/tooling.camel-route-parser.src.main.java.org.apache.camel.parser.helper.CamelJavaTreeParserHelper.java", "BodyUseAPI": ["org.apache.camel.parser.model.CamelNodeDetails.getParent()"], "Fixed commit": "c59276e0c3e95de86e13eafdff54998297c6b3d9", "Url": "https://api.github.com/repos/ppalaga/camel", "Date": "2018-05-05T09:33:16Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.camel.parser.model.CamelNodeDetails.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"choice\".equals(name)) { org.apache.camel.parser.model.CamelNodeDetails output = nodeFactory.copyNode(parent, name, node); parent.addOutput(output); parent = output; }else if ((\"when\".equals(name)) || (\"otherwise\".equals(name))) { while ((!(\"from\".equals(parent.getName()))) && (!(\"choice\".equals(parent.getName())))) { if ((parent.getParent()) != null) { parent = parent.getParent(); }else { break; } } }else { boolean hasOutput = hasOutput(name); if (hasOutput) { org.apache.camel.parser.model.CamelNodeDetails output = nodeFactory.copyNode(parent, name, node); parent.addOutput(output); parent = output; }else { org.apache.camel.parser.model.CamelNodeDetails output = nodeFactory.copyNode(parent, name, node); parent.addOutput(output); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5102/buggy-version/tooling.camel-route-parser.src.main.java.org.apache.camel.parser.helper.CamelJavaTreeParserHelper.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "org.apache.camel.parser.model.CamelNodeDetailsFactory.copyNode(org.apache.camel.parser.model.CamelNodeDetails,java.lang.String,org.apache.camel.parser.model.CamelNodeDetails)", "org.apache.camel.parser.model.CamelNodeDetailsFactory.copyNode(org.apache.camel.parser.model.CamelNodeDetails,java.lang.String,org.apache.camel.parser.model.CamelNodeDetails)", "org.apache.camel.parser.model.CamelNodeDetailsFactory.copyNode(org.apache.camel.parser.model.CamelNodeDetails,java.lang.String,org.apache.camel.parser.model.CamelNodeDetails)", "org.apache.camel.parser.helper.CamelJavaTreeParserHelper.hasOutput(java.lang.String)"], "Fixed commit": "c59276e0c3e95de86e13eafdff54998297c6b3d9", "Url": "https://api.github.com/repos/ppalaga/camel", "Date": "2018-05-05T09:33:16Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hostPort == null) || (com.ctrip.xpipe.utils.StringUtil.isEmpty(hostPort.getHost()))) { return HEALTH_STATE.UNKNOWN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1346/buggy-version/redis.redis-console.src.main.java.com.ctrip.xpipe.redis.console.health.action.AllMonitorCollector.java", "BodyUseAPI": [], "Fixed commit": "01d60ca3466cda2add34dc80a1759a599913356b", "Url": "https://api.github.com/repos/NickNYU/x-pipe", "Date": "2018-02-02T01:08:26Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((orderExcelVO.getAsin().charAt(((orderExcelVO.getAsin().length()) - 1))) == ';') { orderExcelVO.setAsin(orderExcelVO.getAsin().substring(0, ((orderExcelVO.getAsin().length()) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7641/buggy-version/src.main.java.com.order.www.util.ExcelUtil.java", "BodyUseAPI": ["com.order.www.domain.vo.OrderExcelVO.getAsin()", "com.order.www.domain.vo.OrderExcelVO.getAsin()", "orderExcelVO.getAsin().length()", "orderExcelVO.getAsin().substring(int,((orderExcelVO.getAsin().length()) - 1))", "com.order.www.domain.vo.OrderExcelVO.setAsin(orderExcelVO.getAsin().substring(0, ((orderExcelVO.getAsin().length()) - 1)))"], "Fixed commit": "6dac9d1daa8486cfe5a2afe411e9355159c3adcc", "Url": "https://api.github.com/repos/kongtrio/seller_order", "Date": "2017-12-24T13:14:55Z"},
{"Line": "=>529", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((orderItemDB.getAsin().charAt(((orderItemDB.getAsin().length()) - 1))) == ';') { orderItemDB.setAsin(orderItemDB.getAsin().substring(0, ((orderItemDB.getAsin().length()) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7641/buggy-version/src.main.java.com.order.www.service.OrderService.java", "BodyUseAPI": ["com.order.www.service.OrderItemDB.setAsin(orderItemDB.getAsin().substring(0, ((orderItemDB.getAsin().length()) - 1)))", "orderItemDB.getAsin().substring(int,((orderItemDB.getAsin().length()) - 1))", "orderItemDB.getAsin().length()", "com.order.www.service.OrderItemDB.getAsin()", "com.order.www.service.OrderItemDB.getAsin()"], "Fixed commit": "6dac9d1daa8486cfe5a2afe411e9355159c3adcc", "Url": "https://api.github.com/repos/kongtrio/seller_order", "Date": "2017-12-24T13:14:55Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yafred.asn1.model.Type.getBuiltinType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(builtinType.isChoiceType())) { tagList.add(builtinType.getUniversalTag()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7375/buggy-version/generator.src.main.java.com.yafred.asn1.generator.java.Utils.java", "BodyUseAPI": ["com.yafred.asn1.model.Type.getUniversalTag()", "java.util.ArrayList<com.yafred.asn1.model.Tag>.add(builtinType.getUniversalTag())"], "Fixed commit": "bdbb3eb7e055df82a52c00c493c9c1db2bc727f2", "Url": "https://api.github.com/repos/yafred/asn1-tool", "Date": "2018-05-21T05:45:34Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opensourcephysics.cabrillo.tracker.CalibrationStep.getTrack()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (track == null) return p;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8212/buggy-version/src.org.opensourcephysics.cabrillo.tracker.CalibrationStep.java", "BodyUseAPI": [], "Fixed commit": "9743215d40aa2af050379af28e7b23ac6d35f650", "Url": "https://api.github.com/repos/OpenSourcePhysics/tracker", "Date": "2018-05-29T15:47:59Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getStringExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((referrer.startsWith(\"campaigntype=\")) && (referrer.contains(\"campaignid=\"))) { com.kabouzeid.gramophone.App.sIsShowSoundCloudSearch = true; com.kabouzeid.gramophone.util.PreferenceUtil.getInstance(context).setSoudCloudSearch(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8679/buggy-version/app.src.main.java.com.kabouzeid.gramophone.util.InstallReferrerReceiver.java", "BodyUseAPI": [], "Fixed commit": "a7e5f8a00743220f317c1bf2d8cdcea8ee25003d", "Url": "https://api.github.com/repos/LIYANJU2015/MusicDownloader", "Date": "2018-02-02T06:46:49Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"approve\".equals(action)) { model.addObject(\"checkEditPage\", \"A\"); }else { model.addObject(\"checkEditPage\", \"E\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/193/buggy-version/DSPortal.src.main.java.com.kyc.controller.OnboardController.java", "BodyUseAPI": [], "Fixed commit": "90ccc9b1b66abd2998b50f0f50655c5ebf61882a", "Url": "https://api.github.com/repos/kumaresan05it/dsportal", "Date": "2018-05-10T03:38:30Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rhs instanceof com.sun.tools.javac.tree.JCTree.JCAnnotation) { try { @java.lang.SuppressWarnings(\"unchecked\") java.lang.Class<A> innerClass = ((java.lang.Class<A>) (java.lang.Class.forName(rhs.type.toString()))); guesses.add(lombok.javac.handlers.JavacHandlerUtil.createAnnotation(innerClass, ((com.sun.tools.javac.tree.JCTree.JCAnnotation) (rhs)), node)); } catch (java.lang.ClassNotFoundException ex) { guesses.add(calculateGuess(rhs)); } }else { guesses.add(calculateGuess(rhs)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8815/buggy-version/src.core.lombok.javac.handlers.JavacHandlerUtil.java", "BodyUseAPI": ["lombok.javac.handlers.JavacHandlerUtil.calculateGuess(com.sun.tools.javac.tree.JCTree.JCExpression)", "java.util.List<java.lang.Object>.add(calculateGuess(rhs))", "java.lang.Class.forName(java.lang.String)", "lombok.javac.handlers.JavacHandlerUtil.calculateGuess(com.sun.tools.javac.tree.JCTree.JCExpression)", "com.sun.tools.javac.code.Type.toString()", "java.util.List<java.lang.Object>.add(calculateGuess(rhs))"], "Fixed commit": "472d602693bdccde135ff084c44bfebd285a2101", "Url": "https://api.github.com/repos/rzwitserloot/lombok", "Date": "2018-04-23T20:18:57Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Tree.Builder.getBaseNodeBuilder()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((baseNode.getNodesCount()) == 0) { treeBuilder.setWidth(0); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7353/buggy-version/src.main.java.com.github.kornilova_l.flamegraph.plugin.server.trees.TreesSet.java", "BodyUseAPI": [], "Fixed commit": "06d9d2172b15c692c17ab9bb5ddf1b500dcc287f", "Url": "https://api.github.com/repos/kornilova-l/FlameViewer", "Date": "2018-01-18T13:56:15Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null != jsonObject) sink.sendToErrorTopic(jsonObject);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2165/buggy-version/data-pipeline.reverse-search.src.main.java.org.ekstep.ep.samza.task.ReverseSearchStreamTask.java", "BodyUseAPI": ["org.ekstep.ep.samza.task.ReverseSearchSink.sendToErrorTopic(java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "d78246e35c948e67279f8410f42309adb6d639a1", "Url": "https://api.github.com/repos/project-sunbird/sunbird-data-pipeline", "Date": "2018-07-27T10:18:35Z"},
{"Line": "=>451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["SymbolTable.lookup(ctx.ID().getText())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (symbol == null) { if ((symbolTable.parent) != null) { symbol = symbolTable.parent.lookup(ctx.ID().getText()); if (symbol == null) { java.lang.System.out.println(((\"Vari\u00e1vel \" + (ctx.ID())) + \" n\u00e3o declarada.\")); return; } }else { java.lang.System.out.println(((\"Vari\u00e1vel \" + (ctx.ID())) + \" n\u00e3o declarada.\")); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/815/buggy-version/SyntaticAnalyzer.antlr.AMZSemanticListener.java", "BodyUseAPI": [], "Fixed commit": "0a42873680020226487416c835d3e135bd7b089a", "Url": "https://api.github.com/repos/annavicc/INE5426", "Date": "2018-05-25T18:26:32Z"},
{"Line": "=>3703", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jfree.chart.plot.XYPlot.getRenderer(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (renderer == null) { renderer = getRenderer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8654/buggy-version/src.main.java.org.jfree.chart.plot.XYPlot.java", "BodyUseAPI": [], "Fixed commit": "19e0a694cdf312305467d17161f5f62fe68e05b0", "Url": "https://api.github.com/repos/illumon-public/jfreechart", "Date": "2018-09-17T19:07:05Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (afterMatcher.find()) { token = afterMatcher.group(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7453/buggy-version/flyway-core.src.main.java.org.flywaydb.core.internal.database.sqlserver.SQLServerSqlStatementBuilder.java", "BodyUseAPI": ["java.util.regex.Matcher.group(int)"], "Fixed commit": "683578cc844a9115b4d3927cdf44c85bcf8c9340", "Url": "https://api.github.com/repos/flyway/flyway", "Date": "2018-05-17T19:48:27Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.event.UndoableEditEvent.getEdit()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (edit instanceof javax.swing.text.AbstractDocument.DefaultDocumentEvent) { event = ((javax.swing.text.AbstractDocument.DefaultDocumentEvent) (edit)); }else { try { java.lang.Class<?> clazz = java.lang.Class.forName(\"javax.swing.text.AbstractDocument$DefaultDocumentEventUndoableWrapper\"); if (javax.swing.undo.UndoableEdit.class.isAssignableFrom(clazz)) { java.lang.reflect.Field f = clazz.getDeclaredField(\"dde\"); f.setAccessible(true); event = ((javax.swing.text.AbstractDocument.DefaultDocumentEvent) (f.get(edit))); } } catch (java.lang.Exception e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/569/buggy-version/robocode.ui.editor.src.main.java.net.sf.robocode.ui.editor.CompoundUndoManager.java", "BodyUseAPI": ["java.lang.reflect.Field.get(javax.swing.undo.UndoableEdit)"], "Fixed commit": "03f72fd6a6f2affe17c41beb239feed28342650a", "Url": "https://api.github.com/repos/robo-code/robocode", "Date": "2018-10-21T19:37:15Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6492/buggy-version/src.main.java.org.rapla.rest.client.gwt.internal.impl.ser.JavaLangInteger_JsonSerializer.java", "BodyUseAPI": [], "Fixed commit": "87237ec1f26e9c8a371e83a90b773bb9c17439ce", "Url": "https://api.github.com/repos/rapla/restinject", "Date": "2018-02-26T18:24:38Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.nikr.eve.jeveasset.io.local.SettingsReader.read(java.lang.String,java.lang.String,XmlType.DYNAMIC_BACKUP)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!ok) { settings.setSettingsLoadError(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1744/buggy-version/src.main.java.net.nikr.eve.jeveasset.io.local.SettingsReader.java", "BodyUseAPI": [], "Fixed commit": "d07fb176119ecccde8eb0e9ff6e8c05b763a44c0", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2018-08-30T11:36:02Z"},
{"Line": "=>510", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (filename != null) { try (java.io.InputStream propStream = new java.io.FileInputStream(filename)) { props.load(propStream); } }else { java.lang.System.out.println(\"Did not load any properties since the property file is not specified\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6285/buggy-version/clients.src.main.java.org.apache.kafka.common.utils.Utils.java", "BodyUseAPI": [], "Fixed commit": "a1c809221c55e609eab675cbc366f4f2d125b54b", "Url": "https://api.github.com/repos/axbaretto/kafka", "Date": "2018-03-20T01:08:14Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (response == null) { android.widget.Toast.makeText(this, \"No trip available yet. Start a new one!\", Toast.LENGTH_SHORT).show(); }else { android.content.Intent intent = new android.content.Intent(this, com.example.matthias.myapplication.ViewTripActivity.class); intent.putExtra(\"trip\", response); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2413/buggy-version/app.src.main.java.com.example.matthias.myapplication.WelcomeActivity.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,com.example.matthias.myapplication.Entities.Trip)"], "Fixed commit": "0712a0dbdc8dbb30a6f0151237cba8accac425d6", "Url": "https://api.github.com/repos/wi15b171k/MOC_AndroidApp", "Date": "2018-02-26T12:46:51Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (internalTimeout == 0L) { internalTimeout--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6858/buggy-version/common.src.main.java.com.tc.util.concurrent.TCFuture.java", "BodyUseAPI": [], "Fixed commit": "b3d95c248cfac70f2ab8fd6c4207c20dcf2d600b", "Url": "https://api.github.com/repos/chaktatha/terracotta-core", "Date": "2018-02-15T06:38:31Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.wqisland.util.CommonUtils.getTb(java.lang.Integer,questionPO.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tempMap.containsKey(tb)) { map = tempMap.get(tb); userIds = ((java.util.List<java.lang.Integer>) (map.get(\"userIds\"))); questionIds = ((java.util.List<java.lang.Integer>) (map.get(\"questionIds\"))); }else { map = new java.util.HashMap<>(); userIds = new java.util.ArrayList<>(); questionIds = new java.util.ArrayList<>(); map.put(\"tb\", tb); map.put(\"userIds\", userIds); map.put(\"questionIds\", questionIds); tempMap.put(tb, map); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6706/buggy-version/src.main.java.cn.wqisland.service.impl.UserAnswerServiceImpl.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.Object>>.get(java.lang.String)", "java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.Object>>.put(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.String)"], "Fixed commit": "1cf939d7276c5ab25f46015f26cec07a1db4edf3", "Url": "https://api.github.com/repos/nihao17546/wq-island", "Date": "2018-03-25T05:35:46Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["project.DataManager.getPlayerObj(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((player2.getIcon()) != null) { player2.setIcon(project.DataManager.resizeIcon(player2.getIcon(), 99, 92)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3427/buggy-version/4-Gewinnt.src.project.MainWindow.java", "BodyUseAPI": ["project.Player.getIcon()", "project.DataManager.resizeIcon(player2.getIcon(),int,int)", "project.Player.setIcon(project.DataManager.resizeIcon(player2.getIcon(), 99, 92))"], "Fixed commit": "021fe94043c9915e4c7e4dd51d68b169c5b44770", "Url": "https://api.github.com/repos/SebastianMichaelis1997/4Gewinnt", "Date": "2018-08-01T14:38:41Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["project.DataManager.getPlayerObj(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((player1.getIcon()) != null) { player1.setIcon(project.DataManager.resizeIcon(player1.getIcon(), 99, 92)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3427/buggy-version/4-Gewinnt.src.project.MainWindow.java", "BodyUseAPI": ["project.DataManager.resizeIcon(player1.getIcon(),int,int)", "project.Player.getIcon()", "project.Player.setIcon(project.DataManager.resizeIcon(player1.getIcon(), 99, 92))"], "Fixed commit": "021fe94043c9915e4c7e4dd51d68b169c5b44770", "Url": "https://api.github.com/repos/SebastianMichaelis1997/4Gewinnt", "Date": "2018-08-01T14:38:41Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["project.DataManager.getPlayerObj(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((player2.getIcon()) != null) { player2.setIcon(project.DataManager.resizeIcon(player2.getIcon(), 99, 92)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3427/buggy-version/4-Gewinnt.src.project.MainWindow.java", "BodyUseAPI": ["project.DataManager.resizeIcon(player2.getIcon(),int,int)", "project.Player.setIcon(project.DataManager.resizeIcon(player2.getIcon(), 99, 92))", "project.Player.getIcon()"], "Fixed commit": "021fe94043c9915e4c7e4dd51d68b169c5b44770", "Url": "https://api.github.com/repos/SebastianMichaelis1997/4Gewinnt", "Date": "2018-08-01T14:38:41Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (warnOnError) { org.exist.indexing.lucene.AnalyzerConfig.LOG.warn((message + \". Will retry...\")); }else { org.exist.indexing.lucene.AnalyzerConfig.LOG.error(message, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5134/buggy-version/extensions.indexes.lucene.src.org.exist.indexing.lucene.AnalyzerConfig.java", "BodyUseAPI": [], "Fixed commit": "979a3bec931d8bea1aad86e0c8ad9dc3c4ceedde", "Url": "https://api.github.com/repos/duncdrum/exist", "Date": "2018-02-17T16:09:39Z"},
{"Line": "=>972", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.constellio.model.services.users.UserServices.getUserInCollection(userCredential.getUsername(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (user != null) { if (searchServices.hasResults(from(metadataSchemasManager.getSchemaTypes(collection).getSchemaTypes()).where(Schemas.ALL_REFERENCES).isEqualTo(user.getId()))) { com.constellio.model.services.users.UserServices.LOGGER.warn((\"Exception on safePhysicalDeleteUser : \" + username)); throw new com.constellio.model.services.users.UserServicesRuntimeException.UserServicesRuntimeException_CannotSafeDeletePhysically(username); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5881/buggy-version/model.src.com.constellio.model.services.users.UserServices.java", "BodyUseAPI": ["com.constellio.model.services.search.SearchServices.hasResults(from(metadataSchemasManager.getSchemaTypes(collection).getSchemaTypes()).where(Schemas.ALL_REFERENCES).isEqualTo(user.getId()))", "from(metadataSchemasManager.getSchemaTypes(collection).getSchemaTypes()).where(Schemas.ALL_REFERENCES).isEqualTo(user.getId())", "com.constellio.model.entities.records.wrappers.User.getId()"], "Fixed commit": "c67a13acbb0661715f1f36c8444398726cb6a9af", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2018-02-09T04:44:01Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (matcher.find()) { if ((limit > 0) && ((matcher.group(1)) == null)) { sql1 += \"\\nLIMIT \" + limit; } if ((offset > 0) && ((matcher.group(2)) == null)) { sql1 += \"\\nOFFSET \" + offset; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4925/buggy-version/query.src.main.java.org.apache.kylin.query.util.QueryUtil.java", "BodyUseAPI": ["java.util.regex.Matcher.group(int)", "java.util.regex.Matcher.group(int)"], "Fixed commit": "348e73d762e0eee7165c1b70984e0f8d4586eab9", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2018-03-13T00:22:10Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((grid[i][j].getValue()) > 0) { java.lang.System.out.print(grid[i][j].getValue()); }else { java.lang.System.out.print(\"-\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1850/buggy-version/src.SudokuGrid.java", "BodyUseAPI": ["grid[i][j].getValue()", "java.io.PrintStream.print(grid[i][j].getValue())"], "Fixed commit": "1984175daa1d0f028fae41f70cee58a4f2139ef1", "Url": "https://api.github.com/repos/dxzone12/SudokuSolver", "Date": "2018-04-27T13:43:38Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isDead())) { playerSet = getObjectsInRange(100, Characters.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/136/buggy-version/RomeoAndJuliet.Monster.java", "BodyUseAPI": [], "Fixed commit": "dc0b3d238eaddfdc9e9ac179c5a79f19de438426", "Url": "https://api.github.com/repos/aofpcc/Greenfoot", "Date": "2018-02-04T16:01:05Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (m == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/136/buggy-version/RomeoAndJuliet.City.java", "BodyUseAPI": [], "Fixed commit": "dc0b3d238eaddfdc9e9ac179c5a79f19de438426", "Url": "https://api.github.com/repos/aofpcc/Greenfoot", "Date": "2018-02-04T16:01:05Z"},
{"Line": "=>620", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["reference.getNodeId().getParentId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((mid == 0) && (parentId.equals(NodeId.DOCUMENT_NODE))) { mid = getLength(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/702/buggy-version/src.org.exist.dom.persistent.NewArrayNodeSet.java", "BodyUseAPI": [], "Fixed commit": "cf023ae7012c6435c9e1e17e78800035fe898aff", "Url": "https://api.github.com/repos/dizzzz/exist", "Date": "2018-08-11T04:29:17Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(resource.exists())) { errorMessage = errorMessage + \"resource doesn't exists.\"; }else { errorMessage = errorMessage + \"resource isn't readable.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1079/buggy-version/src.main.java.com.fsu.base.federationofsport.storage.StorageService.java", "BodyUseAPI": [], "Fixed commit": "bc924c28644707ae98375c6a8c35c9059b89b492", "Url": "https://api.github.com/repos/janakosar/FSU", "Date": "2018-06-05T17:27:29Z"},
{"Line": "=>898", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.projectkorra.projectkorra.ability.util.ComboManager.getComboAbilities().containsKey(ability.getName())) || (ability instanceof com.projectkorra.projectkorra.ability.ComboAbility)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/174/buggy-version/src.main.java.com.strangeone101.bendinggui.menus.MenuBendingOptions.java", "BodyUseAPI": [], "Fixed commit": "cc1bfce5393f4ca6e0dc3c0d5d7b8f482c85738d", "Url": "https://api.github.com/repos/Simplicitee/BendingGUI", "Date": "2018-10-03T16:10:39Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeUpdate()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (affected < 1) { throw new attendanceautomation.DAL.DALException(\"Unable to save!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5548/buggy-version/src.attendanceautomation.DAL.StudentDBManager.java", "BodyUseAPI": [], "Fixed commit": "2cad0cb362575405fcba1c74523d5d53e868dd82", "Url": "https://api.github.com/repos/NagyDominik/AttendanceAutomation", "Date": "2018-04-05T14:12:01Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeUpdate()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (affected < 1) { throw new attendanceautomation.DAL.DALException(\"Update unsuccessfull!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5548/buggy-version/src.attendanceautomation.DAL.TeacherDBManager.java", "BodyUseAPI": [], "Fixed commit": "2cad0cb362575405fcba1c74523d5d53e868dd82", "Url": "https://api.github.com/repos/NagyDominik/AttendanceAutomation", "Date": "2018-04-05T14:12:01Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mRatingBar.getRating()) == 0) { mRatingBar.setVisibility(View.INVISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5023/buggy-version/app.src.main.java.com.example.vlada.licenta.Views.ExerciseDetailsFragment.java", "BodyUseAPI": ["android.widget.RatingBar.setVisibility(View.INVISIBLE)"], "Fixed commit": "aaead86793570812387a78a5c09cc587c08f4426", "Url": "https://api.github.com/repos/vladandrei51/GymNotes-FRONT", "Date": "2018-06-06T17:09:32Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mod.chiselsandbits.core.ChiselsAndBits.getConfig().requireBagSpace) { if (!(mod.chiselsandbits.items.ItemBitBag.hasBagSpace(who, entityItemState))) { who.addChatMessage(new net.minecraft.util.text.TextComponentTranslation(\"mod.chiselsandbits.result.require_bag_full\")); } }else if (mod.chiselsandbits.core.ChiselsAndBits.getConfig().voidExcessBits) { if (!(mod.chiselsandbits.items.ItemChiseledBit.hasInventorySpace(who, entityItemState))) { who.addChatMessage(new net.minecraft.util.text.TextComponentTranslation(\"mod.chiselsandbits.result.void_excess\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5978/buggy-version/src.main.java.mod.chiselsandbits.network.packets.PacketChisel.java", "BodyUseAPI": [], "Fixed commit": "9af4f2db9aebacd8ea8c449be102f490c62198ca", "Url": "https://api.github.com/repos/daniel-goossens/Chisels-and-Bits", "Date": "2018-01-31T16:42:36Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nowcoder.ch7_BinaryTree.class4.MaxSubtree.postOrder(root.left)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((left[0]) == 0) { res[2] = root.val; }else { res[2] = left[2]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/37/buggy-version/src.nowcoder.ch7_BinaryTree.class4.MaxSubtree.java", "BodyUseAPI": [], "Fixed commit": "43c89f01a2d6096df4230b64c50225e451ca91c3", "Url": "https://api.github.com/repos/Claire7734/CodePractice", "Date": "2018-01-09T07:22:54Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (RebornCore.proxy.ic2Loaded) { reborncore.common.util.IC2ItemCharger.dischargeIc2Item(this, batteryStack); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8079/buggy-version/src.main.java.reborncore.common.powerSystem.TilePowerAcceptor.java", "BodyUseAPI": [], "Fixed commit": "e618f0bfe71b488b4158ada1193a7d08d4232be3", "Url": "https://api.github.com/repos/TechReborn/RebornCore", "Date": "2018-04-12T12:52:43Z"},
{"Line": "=>528", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lombok.launch.ShadowClassLoader.getResource_(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (res == null) { if (!(exclusionListMatch(fileNameOfClass))) try { return super.loadClass(name, resolve); } catch (java.lang.ClassNotFoundException cnfe) { res = getResource_((((((\"secondaryLoading.SCL.\" + (sclSuffix)) + \"/\") + (name.replace(\".\", \"/\"))) + \".SCL.\") + (sclSuffix)), true); if (res == null) throw cnfe; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1722/buggy-version/src.launch.lombok.launch.ShadowClassLoader.java", "BodyUseAPI": [], "Fixed commit": "a195a47337f592eb117f519f7a1a42f0d8f570d1", "Url": "https://api.github.com/repos/rzwitserloot/lombok", "Date": "2018-07-17T20:32:24Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getCondition()) != null) { node.getCondition().accept(this); mwcompiler.symbols.tools.ReturnType cond = returnType; if ((cond.typeSymbol) != (boolTypeSymbol)) { throw new mwcompiler.utility.CompileError(stage, (\"If condition must be a bool type, not \" + (cond.typeSymbol.getName())), node.getStartLocation(), node.getText()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1305/buggy-version/MWCompiler.src.mwcompiler.symbols.tools.TypeCheckAstVisitor.java", "BodyUseAPI": ["mwcompiler.symbols.tools.IfNode.getCondition()", "node.getCondition().accept(mwcompiler.symbols.tools.TypeCheckAstVisitor)", "mwcompiler.symbols.tools.IfNode.getStartLocation()", "mwcompiler.symbols.tools.IfNode.getText()"], "Fixed commit": "a6f614940a96d0afa9e21b3f0770d79b7afb4fa0", "Url": "https://api.github.com/repos/Michaelvll/MWCompiler", "Date": "2018-04-24T16:35:01Z"},
{"Line": "=>543", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!considerAge) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7833/buggy-version/core.src.main.java.org.springframework.security.saml.util.SAMLUtil.java", "BodyUseAPI": [], "Fixed commit": "ccab6aab135046157c1bfbcd52c0fb06f1a9308c", "Url": "https://api.github.com/repos/KZO/spring-security-saml", "Date": "2018-09-05T07:07:26Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.List<com.example.Activity>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (currActivities == null) { plancompleted = false; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9649/buggy-version/app.src.main.java.com.example.fred.uscfit.ProgressActivity.java", "BodyUseAPI": [], "Fixed commit": "598a0fa6b3f7da908b771701f8d4c983746fca2c", "Url": "https://api.github.com/repos/FredPMoon/USCFit", "Date": "2018-10-31T18:31:13Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((res.length()) > 7) { res = res.substring(0, 8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3799/buggy-version/src.StringUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "49c7fa9b634635e3f7bc4b2c970288f612530a7d", "Url": "https://api.github.com/repos/Purdue-CS193/lab-3-peytondwilliams", "Date": "2018-10-02T18:17:38Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.ocelot.betteranimals.compat.ActiveCompatSophisticatedWolves.tailRotateMethod) == null) { com.ocelot.betteranimals.compat.ActiveCompatSophisticatedWolves.tailRotateMethod = com.ocelot.betteranimals.compat.CompatUtils.getMethod(\"func_70920_v\", com.ocelot.betteranimals.compat.ActiveCompatSophisticatedWolves.wolfClass); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9345/buggy-version/src.main.java.com.ocelot.betteranimals.compat.ActiveCompatSophisticatedWolves.java", "BodyUseAPI": [], "Fixed commit": "22b4aa6d82ed4688d851aa6f26575c500d2a891d", "Url": "https://api.github.com/repos/itsmeow/BetterAnimals", "Date": "2018-10-15T01:58:58Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (len > 0) { apdu.setIncomingAndReceive(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2641/buggy-version/applet.src.openpgpcard.OpenPGPApplet.java", "BodyUseAPI": [], "Fixed commit": "a1773570cc09de485fbdd91b93721c79564021ba", "Url": "https://api.github.com/repos/gl-sergei/ykneo-openpgp", "Date": "2018-07-01T19:49:52Z"},
{"Line": "=>796", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (favphotomode) { org.fossasia.phimpme.gallery.util.AlertDialogsHelper.getTextDialog(this, deleteDialog, R.string.remove_from_favourites, R.string.delete_from_favourites_message, null); ButtonDelete = this.getString(R.string.remove); }else { org.fossasia.phimpme.gallery.util.AlertDialogsHelper.getTextDialog(this, deleteDialog, R.string.delete, R.string.delete_photo_message, null); ButtonDelete = this.getString(R.string.delete); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8209/buggy-version/app.src.main.java.org.fossasia.phimpme.gallery.activities.SingleMediaActivity.java", "BodyUseAPI": [], "Fixed commit": "1443d0739ee59ea4dbcc97b60ae00d9ff83f51ba", "Url": "https://api.github.com/repos/raj10071997/phimpme-android", "Date": "2018-03-15T11:53:45Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(step.getVideoURL().isEmpty())) { initializePlayer(savedInstanceState); }else { playerView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4367/buggy-version/app.src.main.java.com.pfohl.bakingapp.bakingapp.StepDetails.StepDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "5d74cf08c33c549e56e1a4df60e66650cd68910c", "Url": "https://api.github.com/repos/randypfohl/BakingApp", "Date": "2018-08-15T14:37:37Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["em.createNativeQuery(by.miner.mono.persistence.repository.CALCULATE_USER_PROFIT_QUERY, by.miner.mono.persistence.repository.USER_PROFIT_MAPPING_NAME).setParameter(\"id\", id).getResultList()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (list.isEmpty()) { by.miner.mono.persistence.model.ApplicationUser user = applicationUserRepository.findOne(id); return new by.miner.mono.dto.UserProfitItem(user.getId(), user.getUsername(), java.math.BigDecimal.ZERO, java.lang.Boolean.FALSE); }else if ((list.size()) > 1) { throw new java.lang.RuntimeException(\"Incorrect SQL result. One record expected.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8762/buggy-version/src.main.java.by.miner.mono.persistence.repository.UserProfitRepositoryImpl.java", "BodyUseAPI": ["java.util.List.size()"], "Fixed commit": "932f844c0fa878061b8ffda40c5526720edae62d", "Url": "https://api.github.com/repos/sleshJdev/icanmining", "Date": "2018-02-14T02:54:05Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((countDownLatch.getCount()) == 1) { gq.shiwenhao.naiverpc.servicegovern.ServiceDiscover.logger.warn(\"The connection list is null. Is waiting connect to server!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3460/buggy-version/src.main.java.gq.shiwenhao.naiverpc.servicegovern.ServiceDiscover.java", "BodyUseAPI": [], "Fixed commit": "6d89374db8bdfbdf1a2ae829c01fc83bd0b42615", "Url": "https://api.github.com/repos/zmxnv1/NaiveRpc", "Date": "2018-07-27T09:18:52Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getHeaders().get(\"x-fc-date\")) != null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/682/buggy-version/src.main.java.com.aliyuncs.fc.request.UpdateFunctionRequest.java", "BodyUseAPI": [], "Fixed commit": "11ec244593f81ec50c2518df9dcba92f361f2cc2", "Url": "https://api.github.com/repos/aliyun/fc-java-sdk", "Date": "2018-05-25T23:17:40Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getHeaders().get(\"x-fc-date\")) != null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/682/buggy-version/src.main.java.com.aliyuncs.fc.request.CreateFunctionRequest.java", "BodyUseAPI": [], "Fixed commit": "11ec244593f81ec50c2518df9dcba92f361f2cc2", "Url": "https://api.github.com/repos/aliyun/fc-java-sdk", "Date": "2018-05-25T23:17:40Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<java.util.Set<org.rebecalang.statespaceanalysis.tctl.StateWrapper>>.pop()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (secondTerm.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8632/buggy-version/src.main.java.org.rebecalang.statespaceanalysis.tctl.TimedRebecaTCTLModelCheckerOnePhase.java", "BodyUseAPI": [], "Fixed commit": "b2b0e236df2f7e3cadee5303eca61096de4de4ef", "Url": "https://api.github.com/repos/rebeca-lang/org.rebecalang.statespaceanalysis", "Date": "2018-10-19T11:29:09Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (parent != null) { fetchPaths.add(bagDataDir.relativize(parent.resolve(fetchItem.getPath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7844/buggy-version/src.main.java.gov.loc.repository.bagit.writer.PayloadWriter.java", "BodyUseAPI": ["java.util.Set<java.nio.file.Path>.add(java.nio.file.Path)", "java.nio.file.Path.resolve(fetchItem.getPath())", "java.nio.file.Path.relativize(java.nio.file.Path)"], "Fixed commit": "95aa05ddfa41d630be385641f0cbabb78f0fe524", "Url": "https://api.github.com/repos/ThomasJejkal/bagit-java", "Date": "2018-01-18T06:36:57Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((reference == null) && ((elem.fixity) != (com.jetbrains.jetpad.vclang.term.Fixity.NONFIX))) && ((elem.expression) instanceof com.jetbrains.jetpad.vclang.term.concrete.Concrete.AppExpression)) && ((((com.jetbrains.jetpad.vclang.term.concrete.Concrete.AppExpression) (elem.expression)).getFunction()) instanceof com.jetbrains.jetpad.vclang.term.concrete.Concrete.ReferenceExpression)) { reference = ((com.jetbrains.jetpad.vclang.term.concrete.Concrete.ReferenceExpression) (((com.jetbrains.jetpad.vclang.term.concrete.Concrete.AppExpression) (elem.expression)).getFunction())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7714/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.naming.BinOpParser.java", "BodyUseAPI": ["((com.jetbrains.jetpad.vclang.term.concrete.Concrete.AppExpression) (elem.expression)).getFunction()"], "Fixed commit": "f2d0da008fcc0046517409e8740400bd3945ff64", "Url": "https://api.github.com/repos/JetBrains/Arend", "Date": "2018-06-27T14:22:31Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((elem.expression) instanceof com.jetbrains.jetpad.vclang.term.concrete.Concrete.AppExpression) { for (com.jetbrains.jetpad.vclang.term.concrete.Concrete.Argument argument : ((com.jetbrains.jetpad.vclang.term.concrete.Concrete.AppExpression) (elem.expression)).getArguments()) { push(argument.expression, argument.isExplicit()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7714/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.naming.BinOpParser.java", "BodyUseAPI": ["((com.jetbrains.jetpad.vclang.term.concrete.Concrete.AppExpression) (elem.expression)).getArguments()"], "Fixed commit": "f2d0da008fcc0046517409e8740400bd3945ff64", "Url": "https://api.github.com/repos/JetBrains/Arend", "Date": "2018-06-27T14:22:31Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((findKeyword(statement, \"no\")) >= 0) || ((findKeyword(statement, \"nah\")) >= 0)) { response = \"Of course not these jokes were written by a 5 year old\"; }else if (((statement.indexOf(\"yes\")) >= 0) || ((statement.indexOf(\"yea\")) >= 0)) { response = \"That's my favorite joke!\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6033/buggy-version/src.DogBot.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "781a9f160cccdfc1029eb5eaf5be69c095ebc877", "Url": "https://api.github.com/repos/cstanilovsky9605/ChatBotStarter", "Date": "2018-10-17T15:11:28Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (uniqueOwners.containsKey(contract.getAcceptorID())) { net.nikr.eve.jeveasset.io.esi.EsiContractItemsGetter.contracts.get(contract.getAcceptorID()).add(contract); net.nikr.eve.jeveasset.io.esi.EsiContractItemsGetter.SIZE.getAndIncrement(); }else if (uniqueOwners.containsKey(contract.getIssuerCorpID())) { net.nikr.eve.jeveasset.io.esi.EsiContractItemsGetter.contracts.get(contract.getIssuerCorpID()).add(contract); net.nikr.eve.jeveasset.io.esi.EsiContractItemsGetter.SIZE.getAndIncrement(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5011/buggy-version/src.main.java.net.nikr.eve.jeveasset.io.esi.EsiContractItemsGetter.java", "BodyUseAPI": ["java.util.Map<java.lang.Long, net.nikr.eve.jeveasset.data.api.accounts.EsiOwner>.containsKey(contract.getIssuerCorpID())", "java.util.Map<java.lang.Long, java.util.List<net.nikr.eve.jeveasset.data.api.my.MyContract>>.get(contract.getAcceptorID())", "net.nikr.eve.jeveasset.io.esi.EsiContractItemsGetter.contracts.get(contract.getIssuerCorpID()).add(net.nikr.eve.jeveasset.data.api.my.MyContract)", "net.nikr.eve.jeveasset.io.esi.EsiContractItemsGetter.contracts.get(contract.getAcceptorID()).add(net.nikr.eve.jeveasset.data.api.my.MyContract)", "java.util.Map<java.lang.Long, java.util.List<net.nikr.eve.jeveasset.data.api.my.MyContract>>.get(contract.getIssuerCorpID())", "net.nikr.eve.jeveasset.data.api.my.MyContract.getIssuerCorpID()", "net.nikr.eve.jeveasset.data.api.my.MyContract.getAcceptorID()", "net.nikr.eve.jeveasset.data.api.my.MyContract.getIssuerCorpID()"], "Fixed commit": "445b1da00fa1aab9ef9243601d6906631c68d08f", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2018-05-26T17:46:54Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((processDescriptionV100.getDataInputs()) != null) { inputDescriptionTypes = processDescriptionV100.getDataInputs().getInputArray(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3322/buggy-version/52n-wps-algorithm.src.main.java.org.n52.wps.server.ProcessDescription.java", "BodyUseAPI": ["processDescriptionV100.getDataInputs().getInputArray()", "net.opengis.wps.x100.ProcessDescriptionType.getDataInputs()"], "Fixed commit": "a97681517ebc9105428192a33db69e3abf75b4ef", "Url": "https://api.github.com/repos/52North/WPS", "Date": "2018-07-10T14:10:35Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((citiesList) != null) { citiesList.setValue(cities); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8205/buggy-version/app.src.main.java.com.example.kiran.gps.CloudService.java", "BodyUseAPI": [], "Fixed commit": "23fce76f9d96da1b6aae02371801d362dfd39693", "Url": "https://api.github.com/repos/Lunarkiran/MyWeather", "Date": "2018-09-11T13:00:09Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.viadee.bpm.vPAV.AbstractRunner.getSequenceFlowList().isEmpty()) { de.viadee.bpm.vPAV.AbstractRunner.addToSequenceFlowList(bpmnElement.getId(), sequenceFlowDef); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4355/buggy-version/src.main.java.de.viadee.bpm.vPAV.processing.checker.OverlapChecker.java", "BodyUseAPI": [], "Fixed commit": "8ce7d7940dc7f4b9023d7f6637140962e67e9fe3", "Url": "https://api.github.com/repos/viadee/vPAV", "Date": "2018-01-16T12:39:34Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (xPersoniumRequestKey != null) { io.personium.core.utils.ResourceUtils.validateXPersoniumRequestKey(xPersoniumRequestKey); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2590/buggy-version/src.main.java.io.personium.core.rs.FacadeResource.java", "BodyUseAPI": ["io.personium.core.utils.ResourceUtils.validateXPersoniumRequestKey(java.lang.String)"], "Fixed commit": "b3304ebd6e04b0138d2171d53e46f8caa020d606", "Url": "https://api.github.com/repos/personium/personium-core", "Date": "2018-02-08T05:38:01Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["util.HibernateUtil.getSessionFactory().openSession()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((owner.getId()) == (util.MethodUtil.getIdAuthByUUID(session, uuidAuth))) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8734/buggy-version/src.main.java.util.MethodUtil.java", "BodyUseAPI": [], "Fixed commit": "2074bfc5a006e977e93ede50c34a4e036b86dabf", "Url": "https://api.github.com/repos/nik1811e/LinkerHS_Diploma_project", "Date": "2018-05-21T21:36:40Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((eml.equals(\"\")) || (pas.equals(\"\"))) { return; }else { mAuth.signInWithEmailAndPassword(eml, pas).addOnCompleteListener(parentActivity, new com.google.android.gms.tasks.OnCompleteListener<com.google.firebase.auth.AuthResult>() { @java.lang.Override public void onComplete(@android.support.annotation.NonNull com.google.android.gms.tasks.Task<com.google.firebase.auth.AuthResult> task) { if (task.isSuccessful()) { com.google.firebase.auth.FirebaseUser user = mAuth.getCurrentUser(); }else { android.widget.Toast.makeText(parentActivity, (\"Authentication failed: \" + (task.getException().getMessage())), Toast.LENGTH_SHORT).show(); arg1Value = 0; } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9727/buggy-version/app.src.main.java.honig.roey.student.roeysigninapp.LoginFragment.java", "BodyUseAPI": ["com.google.firebase.auth.FirebaseAuth.signInWithEmailAndPassword(java.lang.String,java.lang.String)", "mAuth.signInWithEmailAndPassword(eml, pas).addOnCompleteListener(honig.roey.student.roeysigninapp.MainActivity,com.google.android.gms.tasks.OnCompleteListener<com.google.firebase.auth.AuthResult>)"], "Fixed commit": "bfc77294c901f5161ebb9ed583cc4b79344ea00c", "Url": "https://api.github.com/repos/roeyHonig/androidFinalProject", "Date": "2018-05-27T10:07:11Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getGui()) instanceof micdoodle8.mods.galacticraft.core.client.gui.screen.GuiCelestialSelection) { if (net.minecraft.client.settings.GameSettings.isKeyDown(micdoodle8.mods.galacticraft.core.tick.KeyHandlerClient.galaxyMap)) { event.setGui(new com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection(true, null, net.minecraftforge.server.permission.PermissionAPI.hasPermission(com.mjr.mjrlegendslib.util.MCUtilities.getMinecraft().thePlayer, Constants.PERMISSION_CREATE_STATION))); }else { event.setGui(new com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection(false, null, net.minecraftforge.server.permission.PermissionAPI.hasPermission(com.mjr.mjrlegendslib.util.MCUtilities.getMinecraft().thePlayer, Constants.PERMISSION_CREATE_STATION))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1932/buggy-version/src.main.java.com.mjr.extraplanets.client.handlers.MainHandlerClient.java", "BodyUseAPI": ["net.minecraftforge.client.event.GuiOpenEvent.setGui(com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection)", "net.minecraftforge.client.event.GuiOpenEvent.setGui(com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection)"], "Fixed commit": "c0828e449bbf127a0a723bb2b4d7dfa1630e7aed", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-02-02T15:46:42Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["trackmodel.model.Track.getNextBlock(current.getNumber(),previous.getNumber())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (next == (end)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5571/buggy-version/CTC.src.ctc.model.Route.java", "BodyUseAPI": [], "Fixed commit": "950908cfe3ad149fcb378e7dd95ebc5511363226", "Url": "https://api.github.com/repos/michaelplazek/on-track", "Date": "2018-04-24T16:10:53Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (otherCard == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9677/buggy-version/src.main.java.seedu.address.model.deck.Card.java", "BodyUseAPI": [], "Fixed commit": "fc7b5551a781d2987526f1d56a5e62d1d32956b8", "Url": "https://api.github.com/repos/truongthanh2606/Main", "Date": "2018-10-27T12:57:15Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (otherDeck == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9677/buggy-version/src.main.java.seedu.address.model.deck.Deck.java", "BodyUseAPI": [], "Fixed commit": "fc7b5551a781d2987526f1d56a5e62d1d32956b8", "Url": "https://api.github.com/repos/truongthanh2606/Main", "Date": "2018-10-27T12:57:15Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (vendeur != null) { if ((vendeur.getCodeVendeur()) != null) { session.setAttribute(\"vendeur\", vendeur); java.lang.System.out.println(vendeur.isOrga()); }else { request.setAttribute(\"danger\", \"Cet utilisateur est introuvable\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5175/buggy-version/src.servlets.IndexServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpSession.setAttribute(java.lang.String,ENTITIES.VendeurEntity)", "ENTITIES.VendeurEntity.isOrga()", "ENTITIES.VendeurEntity.getCodeVendeur()", "java.io.PrintStream.println(vendeur.isOrga())"], "Fixed commit": "7167a788b73fd42a556a4f39ed97b95c804b3d04", "Url": "https://api.github.com/repos/guillaumepn/vide-dressing", "Date": "2018-06-30T17:08:26Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.twjoin.arvin.chocolabs_exam.db.operation.DramaOperation.getDramaByQueryId(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dramaEntityList.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2030/buggy-version/app.src.main.java.com.twjoin.arvin.chocolabs_exam.DramaInfoActivity.java", "BodyUseAPI": [], "Fixed commit": "0fc2477888c83b7bdfc4f0339d432999257ae7fb", "Url": "https://api.github.com/repos/shenfenglo/CHOCOLABS_EXAM", "Date": "2018-06-28T03:00:13Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["APIMessage.getReplyValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (responseLogin) out.println(Constants.MSG_OK); else out.println(Constants.MSG_CLIENT_ERROR);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6850/buggy-version/src.Server.java", "BodyUseAPI": [], "Fixed commit": "4a0172000550fa81d7351969587fbe03e60285db", "Url": "https://api.github.com/repos/jflcarvalho/SDIS-FEUP", "Date": "2018-05-27T19:57:40Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["APIMessage.getReplyValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (responseRegister) out.println(Constants.MSG_OK); else out.println(Constants.MSG_CLIENT_ERROR);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6850/buggy-version/src.Server.java", "BodyUseAPI": [], "Fixed commit": "4a0172000550fa81d7351969587fbe03e60285db", "Url": "https://api.github.com/repos/jflcarvalho/SDIS-FEUP", "Date": "2018-05-27T19:57:40Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ctx.widgets.component(1188, 6).text().contains(\"Hello. I am in search of a quest.\")) { ctx.input.send(\"2\"); }else if (ctx.widgets.component(1188, 6).text().contains(\"Yeah, okay, here you go.\")) ctx.input.send(\"1\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6105/buggy-version/Flipper.java", "BodyUseAPI": [], "Fixed commit": "2ef92cefe89df47e0933666cbd8939275e36f448", "Url": "https://api.github.com/repos/RedundantsGIT/Git", "Date": "2018-09-03T21:38:13Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (os.toLowerCase().startsWith(\"win\")) { generalCommandLine = new schemely.actions.GeneralCommandLine(\"bash\", \"-c\", (\"source ~/.bashrc; scheme --libdirs \\\\$CHEZSCHEMELIBDIRS --script \" + url)); }else { generalCommandLine = new schemely.actions.GeneralCommandLine(\"bash\", \"-c\", (\"scheme --libdirs $CHEZSCHEMELIBDIRS --script \" + url)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4415/buggy-version/src.schemely.actions.SchemeRun.java", "BodyUseAPI": [], "Fixed commit": "b648bd34585a606b05853d8612e24f8583aa0ae0", "Url": "https://api.github.com/repos/atship/schemely", "Date": "2018-02-26T09:54:41Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (jerseyClient == null) { this.cleaner = new com.netflix.discovery.shared.transport.jersey.ApacheHttpClientConnectionCleaner(this.apacheClient, connectionIdleTimeout); }else { this.cleaner = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7528/buggy-version/eureka-client.src.main.java.com.netflix.discovery.shared.transport.jersey.JerseyEurekaHttpClientFactory.java", "BodyUseAPI": [], "Fixed commit": "d2dc348aebbd395059a0a5e047a17e5f493420e0", "Url": "https://api.github.com/repos/liuliuluk/eureka", "Date": "2018-04-24T23:41:16Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cleaner) != null) { cleaner.shutdown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7528/buggy-version/eureka-client.src.main.java.com.netflix.discovery.shared.transport.jersey.JerseyEurekaHttpClientFactory.java", "BodyUseAPI": [], "Fixed commit": "d2dc348aebbd395059a0a5e047a17e5f493420e0", "Url": "https://api.github.com/repos/liuliuluk/eureka", "Date": "2018-04-24T23:41:16Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (total_time_ms == 0) { app_t = -1; }else { app_t = ((double) (length / (total_time_ms / 1000.0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8967/buggy-version/src.main.java.globesort.GlobeSortClient.java", "BodyUseAPI": [], "Fixed commit": "3ed115268e2fdafe5b99dc6d61f76ab41f9e6430", "Url": "https://api.github.com/repos/j-mcc1993/TestingRepo", "Date": "2018-05-09T01:11:55Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toCharArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.lang.Character.isUpperCase(cs[0])) { cs[0] += 32; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8787/buggy-version/src.com.cn.oddcn.util.BuilderUtil.java", "BodyUseAPI": [], "Fixed commit": "6d1a48bf740d35cacb7594cd9c93491affc29cfe", "Url": "https://api.github.com/repos/OddCN/go-builder-generator-idea-plugin", "Date": "2018-07-02T15:16:06Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.osgl.util.VM.VERSION) < 8) { regex = \"[(\\\\r\\\\n)\\\\n\\\\r]\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1670/buggy-version/src.main.java.act.apidoc.javadoc.JavadocParser.java", "BodyUseAPI": [], "Fixed commit": "5ba0072b1eb0d99833dcd0d5149222aa99b39e06", "Url": "https://api.github.com/repos/actframework/actframework", "Date": "2018-03-27T22:45:34Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((textForWidget.length()) > 200) { textForWidget = (textForWidget.substring(0, 200)) + \"...\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5375/buggy-version/app.src.main.java.pl.smartfan.spacewallz.Utils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "22139bf92db16a48a33c6c949be899e7ea7454c8", "Url": "https://api.github.com/repos/Pantsoffski/NASAWallpaperOfTheDay", "Date": "2018-01-04T16:36:58Z"},
{"Line": "=>672", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lyrics.widget.ManyLyricsView.getLrcLineInfos()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (lrcLineInfos == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/659/buggy-version/audiokit.src.main.java.lyrics.widget.ManyLyricsView.java", "BodyUseAPI": [], "Fixed commit": "6c44dec04919eee3be28186b5490c7c447e2e78a", "Url": "https://api.github.com/repos/neocpp/AudioProject", "Date": "2018-07-26T14:16:15Z"},
{"Line": "=>667", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lyrics.widget.ManyLyricsView.getLyricsReader()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (lyricsReader == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/659/buggy-version/audiokit.src.main.java.lyrics.widget.ManyLyricsView.java", "BodyUseAPI": [], "Fixed commit": "6c44dec04919eee3be28186b5490c7c447e2e78a", "Url": "https://api.github.com/repos/neocpp/AudioProject", "Date": "2018-07-26T14:16:15Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSelected) { l.setBackground(table.getSelectionBackground()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7370/buggy-version/Jg3_009_Geschwindigkeitsmessung.src.VelocityTableRenderer.java", "BodyUseAPI": [], "Fixed commit": "72c2347a30c963573a7eb654e7e8dad2678f1e57", "Url": "https://api.github.com/repos/PickAUsername15/Geschwindigkeitsmessung", "Date": "2018-10-03T10:56:58Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((person) == null) { try { person = hft.wiinf.de.horario.controller.PersonController.getPersonWhoIam(); } catch (java.lang.NullPointerException e) { android.util.Log.d(hft.wiinf.de.horario.view.SettingsActivity.TAG, (\"SettingsActivity:\" + (e.getMessage()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/889/buggy-version/app.src.main.java.hft.wiinf.de.horario.view.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "216f6070e3c035f2e895896dee28d7af5a9f610a", "Url": "https://api.github.com/repos/Horario/Horario", "Date": "2018-04-22T10:52:59Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.actionHandler) != null) { this.actionHandler.onAction(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3847/buggy-version/audiosensei.src.main.java.com.rygelouv.audiosensei.player.AudioSenseiListObserver.java", "BodyUseAPI": [], "Fixed commit": "aa6d623a9bb718cf5073f9a0de94579651b08a18", "Url": "https://api.github.com/repos/rygelouv/android-audio-sensei", "Date": "2018-08-01T19:54:05Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fragment == (homeFragment)) { fragmentTransaction.hide(notificationFragment); fragmentTransaction.hide(accountFragment); }else if (fragment == (notificationFragment)) { fragmentTransaction.hide(homeFragment); fragmentTransaction.hide(accountFragment); }else if (fragment == (accountFragment)) { fragmentTransaction.hide(notificationFragment); fragmentTransaction.hide(homeFragment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5934/buggy-version/app.src.main.java.com.app.photoblog.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a8c8c8fea4c5011b0cff3c21b501a1ec34c09b42", "Url": "https://api.github.com/repos/adikhan14/PhotoBlog", "Date": "2018-04-04T07:46:34Z"},
{"Line": "=>879", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((owner.asynchronousCheckpointExceptionHandler) != null) { owner.asynchronousCheckpointExceptionHandler.checkpointSucceeded(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7868/buggy-version/flink-streaming-java.src.main.java.org.apache.flink.streaming.runtime.tasks.StreamTask.java", "BodyUseAPI": ["org.apache.flink.streaming.runtime.tasks.StreamTask.AsyncCheckpointExceptionHandler.checkpointSucceeded()"], "Fixed commit": "dd9445fde57c6306758f3ab3d779713b2ec40c0c", "Url": "https://api.github.com/repos/yanghua/flink", "Date": "2018-09-04T06:57:55Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs((arrivalTime - now))) < 1.0) { arrivalTime = now + 1.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8309/buggy-version/src.main.java.ch.ethz.matsim.baseline_scenario.transit.simulation.BaselineTransitEngine.java", "BodyUseAPI": [], "Fixed commit": "6c6df31a9425773d2ab4bf995aa351aa65c52f80", "Url": "https://api.github.com/repos/matsim-eth/baseline_scenario", "Date": "2018-03-02T19:32:01Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (mCamera)) { mCamera = com.rustfisher.appcamera.view.CameraPreview.getCameraInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8384/buggy-version/appcamera.src.main.java.com.rustfisher.appcamera.view.CameraPreview.java", "BodyUseAPI": [], "Fixed commit": "c4b899f9698deab27e1c254013d0ff76f7ad7172", "Url": "https://api.github.com/repos/RustFisher/android-CameraRecorder", "Date": "2018-05-21T13:15:03Z"},
{"Line": "=>732", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ctx.expressions()) != null) this.visitExpressions(ctx.expressions());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5876/buggy-version/rainbow.rainbow-stitch.src.main.java.org.sa.rainbow.stitch.visitor.StitchBeginEndVisitor.java", "BodyUseAPI": ["org.sa.rainbow.stitch.visitor.StitchBeginEndVisitor.visitExpressions(ctx.expressions())", "StitchParser.MethodCallContext.expressions()"], "Fixed commit": "aafc95e5a7d7aaf01a7341023f553dad84f73f4e", "Url": "https://api.github.com/repos/gamoreno/rainbow", "Date": "2018-08-16T21:14:24Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(m_model.UNDER_WATER)) { edu.ricm3.game.whaler.Entities.Entity result = m_model.map().tile(this.pos_front()).contain(EntityType.OIL); if (result != null) { edu.ricm3.game.whaler.Entities.Oil will_burn = ((edu.ricm3.game.whaler.Entities.Oil) (result)); will_burn.m_is_burning = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3634/buggy-version/ricm3.game.game.whaler.edu.ricm3.game.whaler.Entities.Player.java", "BodyUseAPI": [], "Fixed commit": "2756bd93967fc68abb8dd13b785a3343b577278b", "Url": "https://api.github.com/repos/hughnatt/projet-pla", "Date": "2018-06-13T14:03:31Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parent.getChildAt(0)) != null) { ((android.widget.TextView) (parent.getChildAt(0))).setTextColor(Color.BLACK); ((android.widget.TextView) (parent.getChildAt(0))).setTextSize(13); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6625/buggy-version/app.src.main.java.vn.com.lacviet.lacviethpsmuseummanagementapp.SearchScreen.NomalSearchActivity.java", "BodyUseAPI": ["android.widget.AdapterView<?>.getChildAt(int)", "android.widget.AdapterView<?>.getChildAt(int)", "((android.widget.TextView) (parent.getChildAt(0))).setTextSize(int)", "((android.widget.TextView) (parent.getChildAt(0))).setTextColor(Color.BLACK)"], "Fixed commit": "371e4947431b6753e37b3ba7acfd535a705e8634", "Url": "https://api.github.com/repos/nguyenhoangphuc96/LacVietHPSMuseumApp", "Date": "2018-07-09T10:31:35Z"},
{"Line": "=>1722", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.authFlg) { if (optionInputs.containsKey(this.tab.getAuth().getGroup())) { java.util.Map<java.lang.String, java.lang.String> inputs = optionInputs.get(this.tab.getAuth().getGroup()); for (java.lang.String key : inputs.keySet()) { java.lang.String value = inputs.get(key); if (optionInputTextMap.containsKey(key)) { org.eclipse.swt.widgets.Text txt = optionInputTextMap.get(key); txt.setText(value); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1974/buggy-version/src.main.java.jp.co.tabocom.teratermstation.ui.EnvTabItem.java", "BodyUseAPI": [], "Fixed commit": "ecc5f28e00eeae5350a64f4b630df74f5e88853d", "Url": "https://api.github.com/repos/turbou/TeratermStation", "Date": "2018-03-29T06:03:34Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.uima.fit.util.JCasUtil.exists(jcas, de.unistuttgart.ims.drama.api.Author.class)) for (de.unistuttgart.ims.drama.api.Author author : org.apache.uima.fit.util.JCasUtil.select(jcas, de.unistuttgart.ims.drama.api.Author.class)) { if (org.apache.uima.fit.util.JCasUtil.exists(jcas, de.unistuttgart.ims.drama.api.Translator.class)) for (de.unistuttgart.ims.drama.api.Translator transl : org.apache.uima.fit.util.JCasUtil.select(jcas, de.unistuttgart.ims.drama.api.Translator.class)) { p.printRecord(drama.getCollectionId(), drama.getDocumentId(), drama.getDocumentTitle(), drama.getLanguage(), author.getName(), author.getPnd(), transl.getName(), transl.getPnd(), drama.getDateWritten(), drama.getDatePrinted(), drama.getDatePremiere(), drama.getDateTranslation()); } else { p.printRecord(drama.getCollectionId(), drama.getDocumentId(), drama.getDocumentTitle(), drama.getLanguage(), author.getName(), author.getPnd(), null, null, drama.getDateWritten(), drama.getDatePrinted(), drama.getDatePremiere(), drama.getDateTranslation()); } } else p.printRecord(drama.getCollectionId(), drama.getDocumentId(), drama.getDocumentTitle(), drama.getLanguage(), \"\", \"\", null, null, drama.getDateWritten(), drama.getDatePrinted(), drama.getDatePremiere(), drama.getDateTranslation());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2435/buggy-version/de.unistuttgart.ims.drama.io.core.src.main.java.de.unistuttgart.quadrama.io.core.CSVVariant.java", "BodyUseAPI": ["org.apache.uima.fit.util.JCasUtil.select(org.apache.uima.jcas.JCas,java.lang.Class)", "org.apache.uima.fit.util.JCasUtil.select(org.apache.uima.jcas.JCas,java.lang.Class)", "org.apache.uima.fit.util.JCasUtil.exists(org.apache.uima.jcas.JCas,java.lang.Class)"], "Fixed commit": "eff2f5e260f90c00dc56ea1dc1258b2aca208118", "Url": "https://api.github.com/repos/quadrama/DramaNLP", "Date": "2018-05-15T12:57:44Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rootView) != null) { android.view.ViewGroup parentViewGroup = ((android.view.ViewGroup) (rootView.getParent())); if (parentViewGroup != null) { parentViewGroup.removeAllViews(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6889/buggy-version/app.src.main.java.vn.danhtran.moviestvshows.fragment.BaseFragment.java", "BodyUseAPI": [], "Fixed commit": "8afe72f05cb75e56571397531a155d92cb89f6ba", "Url": "https://api.github.com/repos/congdanh1608/MoviesTVShows", "Date": "2018-01-29T12:54:34Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (idx >= (data.size())) { data.add(idx, val); }else { data.set(idx, val); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8130/buggy-version/src.firefly.java.edu.caltech.ipac.table.PrimitiveList.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Object>.add(int,java.lang.Object)", "java.util.ArrayList<java.lang.Object>.set(int,java.lang.Object)"], "Fixed commit": "9fe9aee5c909db476a41071bcf8b81d87023841e", "Url": "https://api.github.com/repos/Caltech-IPAC/firefly", "Date": "2018-08-22T21:04:47Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.ItemStack.getAmount()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (amount <= 1) { arrow = net.glowstone.util.InventoryUtil.createEmptyStack(); }else { arrow.setAmount((amount - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8047/buggy-version/src.main.java.net.glowstone.block.itemtype.ItemBow.java", "BodyUseAPI": ["org.bukkit.inventory.ItemStack.setAmount(int)"], "Fixed commit": "939069ad0b0f35ac4ffb22f3b5150d6412ca6412", "Url": "https://api.github.com/repos/Pr0methean/Glowstone", "Date": "2018-01-24T02:03:41Z"},
{"Line": "=>652", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((test != null) && ((test.getMetrics()) != null)) && (test.getMetrics().containsKey(metric))) { testDiffSum += java.lang.Math.pow(((test.getMetrics().get(metric).getMeasure()) - average), 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7760/buggy-version/src.main.java.hudson.plugins.PerfPublisher.projectsAction.PerfPublisherFreestyleProjectAction.java", "BodyUseAPI": ["test.getMetrics().get(metric).getMeasure()", "hudson.plugins.PerfPublisher.Report.Test.getMetrics()", "java.lang.Math.pow(((test.getMetrics().get(metric).getMeasure()) - average),int)", "test.getMetrics().get(java.lang.String)"], "Fixed commit": "c586c1ce0d0b568cddefb025f654fd8b7d580e67", "Url": "https://api.github.com/repos/YouKnowBlom/perfpublisher-plugin", "Date": "2018-05-02T11:45:58Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.openapi.ui.Messages.showInputDialog(gitflow.actions.StartReleaseAction,java.lang.String,java.lang.String,com.intellij.openapi.ui.Messages.getQuestionIcon(),java.lang.String,git4idea.validators.GitNewBranchNameValidator.newInstance(repos))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (releaseName == null) { }else if (releaseName.isEmpty()) { com.intellij.openapi.ui.Messages.showWarningDialog(myProject, \"You must provide a name for the release\", \"Whoops\"); }else { new com.intellij.openapi.progress.Task.Backgroundable(myProject, (\"Starting release \" + releaseName), false) { @java.lang.Override public void run(@org.jetbrains.annotations.NotNull com.intellij.openapi.progress.ProgressIndicator indicator) { git4idea.commands.GitCommandResult result = myGitflow.startRelease(myRepo, releaseName, errorLineHandler); if (result.success()) { java.lang.String startedReleaseMessage = java.lang.String.format(\"A new release '%s%s' was created, based on '%s'\", releasePrefix, releaseName, developBranch); gitflow.ui.NotifyUtil.notifySuccess(myProject, releaseName, startedReleaseMessage); }else { gitflow.ui.NotifyUtil.notifyError(myProject, \"Error\", \"Please have a look at the Version Control console for more details\"); } myRepo.update(); } }.queue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9553/buggy-version/src.gitflow.actions.StartReleaseAction.java", "BodyUseAPI": ["java.lang.String.isEmpty()", "gitflow.actions.StartReleaseAction.1.startRelease(gitflow.actions.StartReleaseAction.1,java.lang.String,gitflow.actions.GitflowErrorsListener)", "gitflow.ui.NotifyUtil.notifySuccess(gitflow.actions.StartReleaseAction.1,java.lang.String,java.lang.String)", "com.intellij.openapi.progress.Task.Backgroundable.queue()", "java.lang.String.format(java.lang.String,gitflow.actions.StartReleaseAction.1,java.lang.String,gitflow.actions.StartReleaseAction.1)"], "Fixed commit": "c2a60bc10141a3bdabfda84b4d2f9504f08b358f", "Url": "https://api.github.com/repos/OpherV/gitflow4idea", "Date": "2018-04-04T21:30:28Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gitflow.GitflowConfigurable.getOptionTextString(gitflow.actions.FinishReleaseAction,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (customTagMessage != null) { tagMessageTemplate = customTagMessage.replace(\"%name%\", releaseName); }else { tagMessageTemplate = defaultTagMessage.replace(\"%name%\", releaseName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9553/buggy-version/src.gitflow.actions.FinishReleaseAction.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "c2a60bc10141a3bdabfda84b4d2f9504f08b358f", "Url": "https://api.github.com/repos/OpherV/gitflow4idea", "Date": "2018-04-04T21:30:28Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gitflow.GitflowConfigurable.getOptionTextString(gitflow.actions.FinishHotfixAction,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (customTagMessage != null) { tagMessageTemplate = customTagMessage.replace(\"%name%\", hotfixName); }else { tagMessageTemplate = defaultTagMessage.replace(\"%name%\", hotfixName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9553/buggy-version/src.gitflow.actions.FinishHotfixAction.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "c2a60bc10141a3bdabfda84b4d2f9504f08b358f", "Url": "https://api.github.com/repos/OpherV/gitflow4idea", "Date": "2018-04-04T21:30:28Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFiles.length) > 0) { mFiles = transformVecOCFilesToFilesArr(com.owncloud.android.utils.FileStorageUtils.sortFolder(transformFilesArrToVecOCFiles(mFiles), FileStorageUtils.mSortOrderUpload, FileStorageUtils.mSortAscendingUpload)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6677/buggy-version/src.com.owncloud.android.ui.adapter.LocalFileListAdapter.java", "BodyUseAPI": [], "Fixed commit": "3568a1131bbe889af63ee7c522571d4cd0d064ba", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2018-10-24T10:24:46Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.nikr.eve.jeveasset.data.settings.Settings.get().getOwners().get(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (name == null) { name = net.nikr.eve.jeveasset.i18n.GuiShared.get().unknownOwner(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7997/buggy-version/src.main.java.net.nikr.eve.jeveasset.gui.shared.menu.JMenuUI.java", "BodyUseAPI": [], "Fixed commit": "57c3acf5593406694eb9f6848c11d4fa2b952a2f", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2018-09-29T11:47:18Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(owners.isEmpty())) { owner = owners.get(0); }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7997/buggy-version/src.main.java.net.nikr.eve.jeveasset.gui.shared.menu.JMenuUI.java", "BodyUseAPI": ["java.util.List<net.nikr.eve.jeveasset.gui.shared.menu.JMenuUI.Owner>.get(int)"], "Fixed commit": "57c3acf5593406694eb9f6848c11d4fa2b952a2f", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2018-09-29T11:47:18Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((parsing.Symbol) (n)).op.equals(\"+\")) { it.remove(); it.previous(); it.remove(); it.next(); }else if (((parsing.Symbol) (n)).op.equals(\"!\")) { it.remove(); it.previous(); it.remove(); java.lang.String str = ((java.lang.String) (it.next())); it.remove(); it.add((\"1^\" + str)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2746/buggy-version/src.parsing.Expression.java", "BodyUseAPI": ["((parsing.Symbol) (n)).op.equals(java.lang.String)"], "Fixed commit": "72e065d81fcfe5e6688228300946f896c93fc393", "Url": "https://api.github.com/repos/Daniel-Liu-c0deb0t/reCall", "Date": "2018-04-09T18:26:31Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.kpfu.itis.group11501.smartmuseum.repository.UserRepository.findOneByLogin(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (user == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6308/buggy-version/src.main.java.ru.kpfu.itis.group11501.smartmuseum.service.impl.UserServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "7445ed3365ff22974aee13f25b22495255618553", "Url": "https://api.github.com/repos/BogdanKFU/Smart-museum", "Date": "2018-05-26T09:05:19Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (chance == 0) return engine.GameRandom.getChance(random, 1.0F);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/147/buggy-version/src.engine.GameRandom.java", "BodyUseAPI": [], "Fixed commit": "2b16326f15870545858cc8b3591cdf4d2973a210", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2018-02-02T16:34:09Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNumeric(lastCharacter)) { screenIdToDisplay = java.lang.Integer.valueOf(lastCharacter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6281/buggy-version/src.main.java.us.ihmc.simulationconstructionset.StandardAllCommandsExecutor.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "7e1907b2ec2bfc586e1afcda37add89db80fa6d3", "Url": "https://api.github.com/repos/ihmcrobotics/simulation-construction-set", "Date": "2018-06-20T17:20:05Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.tairanchina.csp.dew.core.cluster.Cluster._mqSetHeader) != null) { com.tairanchina.csp.dew.core.cluster.Cluster._mqSetHeader.accept(new java.lang.Object[]{ name, header }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8789/buggy-version/modules.cluster-common.src.main.java.com.tairanchina.csp.dew.core.cluster.Cluster.java", "BodyUseAPI": [], "Fixed commit": "855959b0a4e1326bda83282185eb43a5718f25ea", "Url": "https://api.github.com/repos/gudaoxuri/dew", "Date": "2018-08-07T09:17:11Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.tairanchina.csp.dew.core.cluster.Cluster._mqGetHeader) != null) { return com.tairanchina.csp.dew.core.cluster.Cluster._mqGetHeader.apply(name); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8789/buggy-version/modules.cluster-common.src.main.java.com.tairanchina.csp.dew.core.cluster.Cluster.java", "BodyUseAPI": [], "Fixed commit": "855959b0a4e1326bda83282185eb43a5718f25ea", "Url": "https://api.github.com/repos/gudaoxuri/dew", "Date": "2018-08-07T09:17:11Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((marker != null) && ((marker.getMarker()) != null)) { list.add(marker.getMarker().getPrimaryID()); }else { list.add(marker.getTerm()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3138/buggy-version/src.org.jax.mgi.fewi.controller.BatchController.java", "BodyUseAPI": ["mgi.frontend.datamodel.BatchMarkerId.getMarker()", "java.util.ArrayList<java.lang.String>.add(marker.getTerm())", "java.util.ArrayList<java.lang.String>.add(marker.getMarker().getPrimaryID())", "marker.getMarker().getPrimaryID()", "mgi.frontend.datamodel.BatchMarkerId.getTerm()"], "Fixed commit": "f1132c9afbe2762cbbb515d9501bbef65f81f7fc", "Url": "https://api.github.com/repos/mgijax/fewi", "Date": "2018-03-27T12:51:07Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (options != null) { options.apply(settings); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7286/buggy-version/src.main.org.deidentifier.arx.io.CSVDataOutput.java", "BodyUseAPI": ["org.deidentifier.arx.io.CSVOptions.apply(com.univocity.parsers.csv.CsvWriterSettings)"], "Fixed commit": "49dd9577ff91e8fe88aa6ffd5eabe22e9632975d", "Url": "https://api.github.com/repos/eicherj/arx", "Date": "2018-05-23T15:05:16Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pos < 0) || (pos > (size))) throw new java.lang.Exception(\"invalid position\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6603/buggy-version/LinkedList.java", "BodyUseAPI": [], "Fixed commit": "47b8301a1d39f15ebe8025a339acdae680c315ec", "Url": "https://api.github.com/repos/USF-CS245-09-2018/practice-assignment-08-Lelionbear", "Date": "2018-10-28T22:11:49Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fiskinfoo.no.sintef.fiskinfoo.Implementation.User.getActiveLayers()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(layers.contains(getString(R.string.primary_background_map)))) layers.add(getString(R.string.primary_background_map));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7333/buggy-version/app.src.main.java.fiskinfoo.no.sintef.fiskinfoo.Fragments.MapFragment.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(getString(R.string.primary_background_map))"], "Fixed commit": "2aea8309a186e60d2cd18604cd0d673354f14c7a", "Url": "https://api.github.com/repos/PeterHaro/Fiskinfoo", "Date": "2018-06-14T13:07:55Z"},
{"Line": "=>1270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (roundingAlipayDiscount.isSelected()) { params.put(\"reduce\", \"floor\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8098/buggy-version/app.src.main.java.com.shinaier.laundry.snlfactory.offlinecash.ui.activity.OrderPayActivity.java", "BodyUseAPI": [], "Fixed commit": "deae1446c3d7c7abfb84dfe85564f88fd384f4f0", "Url": "https://api.github.com/repos/JiaLuo/snl_factory", "Date": "2018-01-26T11:59:50Z"},
{"Line": "=>1260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (roundingWxpayDiscount.isSelected()) { params.put(\"reduce\", \"floor\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8098/buggy-version/app.src.main.java.com.shinaier.laundry.snlfactory.offlinecash.ui.activity.OrderPayActivity.java", "BodyUseAPI": [], "Fixed commit": "deae1446c3d7c7abfb84dfe85564f88fd384f4f0", "Url": "https://api.github.com/repos/JiaLuo/snl_factory", "Date": "2018-01-26T11:59:50Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.xandy.netspeed.NetService.mHasStartHandel)) { mHandler.postDelayed(mRunnable, 0); com.xandy.netspeed.NetService.mHasStartHandel = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3629/buggy-version/src.com.xandy.netspeed.NetService.java", "BodyUseAPI": [], "Fixed commit": "ab42840ca6d7e192a3d4012c6515cbaa919c6e85", "Url": "https://api.github.com/repos/XanderWang/NetSpeed", "Date": "2015-05-05T12:21:15Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (proxyCallback != null) { proxyCallback.onReceiveValue(((java.lang.String) (o))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7677/buggy-version/platforms.android.src.org.apache.cordova.x5engine.X5WebViewEngine.java", "BodyUseAPI": ["android.webkit.ValueCallback<java.lang.String>.onReceiveValue(java.lang.Object)"], "Fixed commit": "73c4640534f751f26c29b9f632a94729db0ae1d6", "Url": "https://api.github.com/repos/imloama/x5webview-cordova-plugin", "Date": "2018-03-22T02:25:06Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) > (Build.VERSION_CODES.JELLY_BEAN_MR2)) nativeToJsMessageQueue.addBridgeMode(new org.apache.cordova.NativeToJsMessageQueue.EvalBridgeMode(this, cordova));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7677/buggy-version/platforms.android.src.org.apache.cordova.x5engine.X5WebViewEngine.java", "BodyUseAPI": [], "Fixed commit": "73c4640534f751f26c29b9f632a94729db0ae1d6", "Url": "https://api.github.com/repos/imloama/x5webview-cordova-plugin", "Date": "2018-03-22T02:25:06Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((securityExpression == null) && (securityPoliciesService.policiesDefined())) { return getImpossiblePredicate(processInstance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8256/buggy-version/activiti-cloud-services-query.activiti-cloud-services-query-rest.src.main.java.org.activiti.cloud.services.security.SecurityPoliciesApplicationService.java", "BodyUseAPI": [], "Fixed commit": "05c10d3986b0882ec4a0ba79e1af72fde87a111a", "Url": "https://api.github.com/repos/Activiti/activiti-cloud-query-service", "Date": "2018-02-19T12:29:20Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((activeObject) == null) && ((selectedScope.getParentScope()) != null)) { tableModel.setSteps(java.util.Collections.emptyList()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7611/buggy-version/code.src.java.pcgen.gui2.solverview.SolverViewFrame.java", "BodyUseAPI": [], "Fixed commit": "4deb2eeb85cd20ecc246c36190453c9f97e36867", "Url": "https://api.github.com/repos/karianna/pcgen", "Date": "2016-03-30T02:38:05Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((wrapper.getLocalClusterSlaveId()) == 0) || (wrapper.getLocalCluster().isPrimarySubstitute())) { distributeCommitToSlave(localWriteSet, Constants.COMMIT, getGlobalSnapshotId(), kryo, readSetNode, readsSetRelationship, messageContext); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6032/buggy-version/src.main.java.main.java.com.bag.server.GlobalClusterSlave.java", "BodyUseAPI": [], "Fixed commit": "9506ab5049aec326779b731fd96b7f8a3ef5c217", "Url": "https://api.github.com/repos/Raycoms/fireplug", "Date": "2018-05-27T13:41:25Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cTime == null) { cTime = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2033/buggy-version/app.src.main.java.com.example.a96jsa.chronos_app.DatabaseHelper.java", "BodyUseAPI": [], "Fixed commit": "28aef854aec197c997a0bdc830614f37d0b11e35", "Url": "https://api.github.com/repos/96jsalinas/Chronos_app", "Date": "2018-05-02T14:31:26Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((tableDesc.getProperties()) != null) && ((tableDesc.getProperties().getProperty(serdeConstants.SERIALIZATION_CLASS)) != null)) && (\"com.facebook.presto.twitter.hive.thrift.ThriftGenericRow\".equals(tableDesc.getProperties().getProperty(serdeConstants.SERIALIZATION_CLASS)))) clazzName = \"org.apache.hadoop.hive.ql.io.thrift.twitter.ThriftGeneralDeserializer\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9073/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.plan.PartitionDesc.java", "BodyUseAPI": [], "Fixed commit": "63d88ee3f9ef51bdce041b4fbec5a2ace717c78a", "Url": "https://api.github.com/repos/mghosh4/hive", "Date": "2018-10-15T22:36:50Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRecorder) != null) { mRecorder.release(); mRecorder = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8908/buggy-version/app.src.main.java.fr.snoring.anti_snoring.sound.SoundMeter.java", "BodyUseAPI": [], "Fixed commit": "32dee5dafe4d8ec795a1c6de15d359144f5b9444", "Url": "https://api.github.com/repos/krog78/Anti-Snoring-v2", "Date": "2018-02-12T14:36:01Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.TreeSet<de.kah2.libZodiac.Day>.ceiling(de.kah2.libZodiac.Day)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((current == null) || (!(current.getDate().isEqual(start)))) { return start; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6425/buggy-version/src.main.java.de.kah2.libZodiac.Calendar.java", "BodyUseAPI": [], "Fixed commit": "11a144f3c03214c041534e5c78ae908fd2d85e84", "Url": "https://api.github.com/repos/kahles/libZodiac", "Date": "2018-04-09T20:44:45Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["beaux.thomas.base.DatabaseHelper.getsInstance(getApplicationContext()).returnLastEntry(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((ex_array.length) != 0) { Rs[i].setVisibility(View.VISIBLE); Rs[i].setText(ex_array[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/703/buggy-version/app.src.main.java.beaux.thomas.base.ViewActivity.java", "BodyUseAPI": ["Rs[i].setText(java.lang.String)"], "Fixed commit": "f3ae374928440a665339cd6e0543bf2f5884b637", "Url": "https://api.github.com/repos/RestfulLeo23/StatBoX", "Date": "2018-04-05T01:04:05Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jface.viewers.IStructuredSelection.getFirstElement()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (resource != null) { activeProject = resource.getProject(); setWindowTitle(\"Apply Security\"); }else { showWarningMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5318/buggy-version/plugins.org.wso2.developerstudio.eclipse.artifact.bpel.src.org.wso2.developerstudio.eclipse.artifact.bpel.ui.wizard.BPELSecurityWizard.java", "BodyUseAPI": ["org.eclipse.core.resources.IResource.getProject()"], "Fixed commit": "dc1b316fea7ec567c9076586fd7bfa7d70c71b0f", "Url": "https://api.github.com/repos/sohaniwso2/devstudio-tooling-bps", "Date": "2018-06-11T10:07:02Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((batchDimension) != null) { for (; i < (batchDimension.length); i++) { outputShape[i] = batchDimension[i]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/440/buggy-version/nd4j.nd4j-backends.nd4j-api-parent.nd4j-api.src.main.java.org.nd4j.linalg.api.ops.impl.shape.Eye.java", "BodyUseAPI": [], "Fixed commit": "8dc411510f76bbd6128000b84954aafee0fde86a", "Url": "https://api.github.com/repos/deeplearning4j/deeplearning4j", "Date": "2018-07-26T08:49:10Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arg()) != null) { return java.util.Collections.singletonList(sameDiff.onesLike(arg())); }else { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/440/buggy-version/nd4j.nd4j-backends.nd4j-api-parent.nd4j-api.src.main.java.org.nd4j.linalg.api.ops.impl.shape.Eye.java", "BodyUseAPI": [], "Fixed commit": "8dc411510f76bbd6128000b84954aafee0fde86a", "Url": "https://api.github.com/repos/deeplearning4j/deeplearning4j", "Date": "2018-07-26T08:49:10Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((terms.length) < 2) { terms = Mesage.split(\" \u20ac\"); }else if ((terms.length) < 2) { terms = Mesage.split(\" \u20ac\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4663/buggy-version/src.main.java.PageObject.DirectWebShopPageObject.CheckOutPageWS.java", "BodyUseAPI": [], "Fixed commit": "23a50517d0a31a33bcb5bc0f44e1734be007a7d0", "Url": "https://api.github.com/repos/GreenHouseProj/NewSFProject", "Date": "2018-02-21T05:35:02Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.headers().get(\"host\").split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tmp.length) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7815/buggy-version/src.main.java.top.yelinsheng.torhop.handler.DefaultRouterServerHandler.java", "BodyUseAPI": [], "Fixed commit": "cc2e176f35fc1aa03a02259166fdc820e22b0076", "Url": "https://api.github.com/repos/rentseen/torhop", "Date": "2018-03-23T05:59:21Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checker()) { final com.manan.dev.shineymca.Models.Coordinator mCoordinator = new com.manan.dev.shineymca.Models.Coordinator(mCoordName.getText().toString(), mCoordPhone.getText().toString()); com.google.firebase.database.FirebaseDatabase.getInstance().getReference().child(\"Coordinators\").child(com.manan.dev.shineymca.Utility.Methods.getEmailSharedPref(mContext)).addValueEventListener(new com.google.firebase.database.ValueEventListener() { @java.lang.Override public void onDataChange(@android.support.annotation.NonNull com.google.firebase.database.DataSnapshot dataSnapshot) { for (com.google.firebase.database.DataSnapshot postSnapshot : dataSnapshot.getChildren()) { com.manan.dev.shineymca.Models.Coordinator coordinator = postSnapshot.getValue(com.manan.dev.shineymca.Models.Coordinator.class); if (coordinator.getCoordPhone().equals(mCoordPhone.getText().toString())) { alreadyPresent = 1; break; } } if ((alreadyPresent) == 1) { dialog.dismiss(); getDialog().dismiss(); android.widget.Toast.makeText(mContext, \"Same number exists\", Toast.LENGTH_SHORT).show(); }else { com.google.firebase.database.FirebaseDatabase.getInstance().getReference().child(\"Coordinators\").child(com.manan.dev.shineymca.Utility.Methods.getEmailSharedPref(mContext)).push().setValue(mCoordinator).addOnCompleteListener(new com.google.android.gms.tasks.OnCompleteListener<java.lang.Void>() { @java.lang.Override public void onComplete(@android.support.annotation.NonNull com.google.android.gms.tasks.Task<java.lang.Void> task) { if (task.isSuccessful()) { dialog.dismiss(); getDialog().dismiss(); android.widget.Toast.makeText(mContext, \"Coordinator added\", Toast.LENGTH_SHORT).show(); }else { android.widget.Toast.makeText(mContext, \"Unable to add Coordinator. Try again!\", Toast.LENGTH_SHORT).show(); } } }); } } @java.lang.Override public void onCancelled(@android.support.annotation.NonNull com.google.firebase.database.DatabaseError databaseError) { } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8296/buggy-version/app.src.main.java.com.manan.dev.shineymca.AdminZone.AdminFragments.AddCoordinatorFragment.java", "BodyUseAPI": [], "Fixed commit": "f069affa42e292eef11f77eae3ba22c61a4cf2c3", "Url": "https://api.github.com/repos/Manan-YMCA/Shine-YMCA", "Date": "2018-08-22T15:08:43Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((str.length()) > 0) { return str.matches(\"-?\\\\d+(\\\\.\\\\d+)?\"); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5389/buggy-version/src.sig.utils.TextUtils.java", "BodyUseAPI": ["java.lang.String.matches(java.lang.String)"], "Fixed commit": "6dd2145ef996af99776bf75fcc0db4471c8259a5", "Url": "https://api.github.com/repos/sigonasr2/sigIRCv2", "Date": "2018-06-03T04:15:57Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inp == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3339/buggy-version/src.main.java.net.aufdemrand.denizencore.tags.Attribute.java", "BodyUseAPI": [], "Fixed commit": "e3284b879044bd00e2075ed1e11edd49433ea0a1", "Url": "https://api.github.com/repos/DenizenScript/Denizen-Core", "Date": "2018-07-13T00:12:18Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hpc.isMainCommand()) { return hpc; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5974/buggy-version/main.java.io.github.thatsmusic99.headsplus.commands.HeadsPlusCommand.java", "BodyUseAPI": [], "Fixed commit": "e8f6239cf063a9e5ca955b1797491081e2410057", "Url": "https://api.github.com/repos/Thatsmusic99/HeadsPlus", "Date": "2018-06-02T07:31:49Z"},
{"Line": "=>1161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPage) == (numOfPages)) { if ((menuOption) < ((numOfItemsToDisplay) - (((currentPage) - 1) * 10))) { playAudio(clicks); (menuOption)++; }else { menuOption = 0; } }else { if ((menuOption) < 9) { playAudio(clicks); (menuOption)++; }else { menuOption = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2376/buggy-version/src.Menu.java", "BodyUseAPI": [], "Fixed commit": "5459eed753b15836a545511b23c7ed04a486c8dc", "Url": "https://api.github.com/repos/Bupton64/GroupAssignment", "Date": "2018-01-29T10:26:40Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sharpinfo.sir.gestionprojet_v2.action.projet.ProjetCreateActivity.setParam()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (projet.getDescription().isEmpty()) { projet.setDescription(\"No description is available !\"); projetService.create(projet); helper.Dispacher.forward(this, com.sharpinfo.sir.gestionprojet_v2.action.projet.ProjetListActivity.class); finish(); }else { projetService.create(projet); helper.Dispacher.forward(this, com.sharpinfo.sir.gestionprojet_v2.action.projet.ProjetListActivity.class); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5895/buggy-version/app.src.main.java.com.sharpinfo.sir.gestionprojet_v2.action.projet.ProjetCreateActivity.java", "BodyUseAPI": ["service.ProjetService.create(bean.Projet)", "service.ProjetService.create(bean.Projet)", "bean.Projet.setDescription(java.lang.String)"], "Fixed commit": "9177f0e528f48486de3828e1eb3cd4fa474d6bf4", "Url": "https://api.github.com/repos/Chaachai/GestionProjetv2", "Date": "2018-05-23T13:15:09Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stream == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9256/buggy-version/src.main.java.com.hazelcast.gcp.RestClient.java", "BodyUseAPI": [], "Fixed commit": "005cf8d7185cd502db2df9e7ccf865b8cd3f3e98", "Url": "https://api.github.com/repos/leszko/hazelcast-gcp", "Date": "2018-10-05T10:16:55Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) { if (!(android.text.TextUtils.isEmpty(path))) { showToast(((getString(R.string.save_image_Success)) + path)); }else { showToast(getString(R.string.save_image_fail)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5880/buggy-version/app.src.main.java.com.github.runningforlife.photosniffer.ui.fragment.ImageDetailPagerFragment.java", "BodyUseAPI": [], "Fixed commit": "454602268e151db4d0f0f8229ea300d6988ef65f", "Url": "https://api.github.com/repos/runningforlife/PhotoFans", "Date": "2017-12-30T14:23:15Z"},
{"Line": "=>515", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) { if (isOk) { showToast(getString(R.string.set_wallpaper_success)); }else { showToast(getString(R.string.set_wallpaper_fail)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5880/buggy-version/app.src.main.java.com.github.runningforlife.photosniffer.ui.fragment.ImageDetailPagerFragment.java", "BodyUseAPI": [], "Fixed commit": "454602268e151db4d0f0f8229ea300d6988ef65f", "Url": "https://api.github.com/repos/runningforlife/PhotoFans", "Date": "2017-12-30T14:23:15Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.scrats.rent.controller.RoomRenterService.getListByRoomrenter(com.scrats.rent.controller.RoomRenter)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((null != rrlist) && ((rrlist.size()) > 0)) { throw new com.scrats.rent.common.exception.BusinessException(\"\u8bf7\u6c42\u7684\u4fe1\u606f\u6709\u8bef,\u8be5\u7528\u6237\u76ee\u524d\u6b63\u5728\u5165\u4f4f\u8be5\u623f\u95f4\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1215/buggy-version/src.main.java.com.scrats.rent.controller.RoomController.java", "BodyUseAPI": [], "Fixed commit": "f4ad5e5fd2992f6b4030ec0524a1386c297ff78c", "Url": "https://api.github.com/repos/scrat-ryan/rent", "Date": "2018-08-13T10:20:59Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(downCollisionDetect())) { Piece.Piece movingPiece = pieceContainer.getMovingPiece(); movingPiece.setRow(((movingPiece.getRow()) + 1)); updateGridBasedOnPieceCoordinates(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3236/buggy-version/src.UI.UI.java", "BodyUseAPI": [], "Fixed commit": "cf999f92003adbe9746b15b284918657d84a882f", "Url": "https://api.github.com/repos/vamontchik/Tetris", "Date": "2018-07-26T09:17:00Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (which != (lastWhich)) { lastWhich = which; listener.getVibrator().vibrate(30); setText(dc.getChoices()[which]); listener.pushOnce(dc.getIndex(), which, 1); listener.pushStatus(((((dc.getLabel()) + \" <\") + (getText())) + \">\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1130/buggy-version/app.src.main.java.ca.warp7.android.scouting.InputControls.java", "BodyUseAPI": ["ca.warp7.android.scouting.InputControls.ActivityListener.pushOnce(dc.getIndex(),int,int)", "ca.warp7.android.scouting.InputControls.ChoicesButton.1.setText(dc.getChoices()[which])"], "Fixed commit": "b80f7315bb49948b974ecb2a4e935208f142c7c9", "Url": "https://api.github.com/repos/Team865/Android-Scouting-App", "Date": "2018-03-22T03:29:51Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((probeStatResult.getBestStatResult()) != null) controller.setSelectedModel(probeStatResult.getBestStatResult().toString()); else controller.setSelectedModel(probeStatResult.getStatResults().get(0).toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/501/buggy-version/src.com.sciome.bmdexpress2.mvp.view.mainstage.dataview.BMDAnalysisResultsDataView.java", "BodyUseAPI": ["probeStatResult.getStatResults().get(0).toString()", "com.sciome.bmdexpress2.mvp.view.mainstage.CurveFitView.setSelectedModel(probeStatResult.getStatResults().get(0).toString())", "com.sciome.bmdexpress2.mvp.model.stat.ProbeStatResult.getBestStatResult()", "probeStatResult.getStatResults().get(int)", "com.sciome.bmdexpress2.mvp.model.stat.ProbeStatResult.getStatResults()", "probeStatResult.getBestStatResult().toString()", "com.sciome.bmdexpress2.mvp.view.mainstage.CurveFitView.setSelectedModel(probeStatResult.getBestStatResult().toString())"], "Fixed commit": "8c27fafeb40ec8b540759e154b7bd20be210a653", "Url": "https://api.github.com/repos/auerbachs/BMDExpress-2", "Date": "2018-01-05T21:42:40Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((correctAnswers) < 0) { correctAnswers = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3867/buggy-version/app.src.main.java.com.example.android.thegreatwrestlingquiz.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "084c4410d21b5c6c0a923656d4d73e31b345b71d", "Url": "https://api.github.com/repos/Techandmusic/The-Great-Wrestling-Quiz", "Date": "2018-03-16T04:11:52Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.CharSequence.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (v.endsWith(\"\\\\\")) { v = v + \"\\\\\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8145/buggy-version/src.main.groovy.com.devsmart.zookeeper.StringContext.java", "BodyUseAPI": [], "Fixed commit": "4136b98c998861edb5edfbf6583f756f60a711e1", "Url": "https://api.github.com/repos/dinocore1/ZooKeeper", "Date": "2018-05-04T03:39:54Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.fireblade.fireffa.events.PlayerRightClickInteractEvent.getItem()", "eu.fireblade.fireffa.events.PlayerRightClickInteractEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((Var.invocation.contains(p)) && (i.equals(eu.fireblade.fireffa.items.Kits.ItemGen1(Material.STICK, Enchantment.DAMAGE_ALL, 1, \"\ufffdfInvocation Stick\", eu.fireblade.fireffa.items.Kits.LoreCreator(\"\ufffd9Clique Droit - invoque un bouclier pendant 10s\", \"\ufffd945 secondes de r\ufffdcup\ufffdration\"), 1)))) { if (eu.fireblade.fireffa.ability.Invocation.cooldown.contains(p)) { return; }else { p.addPotionEffect(new org.bukkit.potion.PotionEffect(org.bukkit.potion.PotionEffectType.INCREASE_DAMAGE, 10, 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7562/buggy-version/src.eu.fireblade.fireffa.ability.Invocation.java", "BodyUseAPI": ["org.bukkit.entity.Player.addPotionEffect(org.bukkit.potion.PotionEffect)", "java.util.ArrayList<org.bukkit.entity.Player>.contains(org.bukkit.entity.Player)"], "Fixed commit": "ce7a4eb11f3e0aaa27af47f1fe4ad45eea5aa099", "Url": "https://api.github.com/repos/FireBlade-Serv/FireFFA", "Date": "2018-01-03T12:43:16Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jetbrains.mps.smodel.runtime.PropertyConstraintsDescriptor.getValue(org.jetbrains.mps.openapi.model.SNode)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value instanceof java.lang.String) { return type.fromString(((java.lang.String) (value))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9323/buggy-version/core.kernel.source.jetbrains.mps.smodel.SNodeAccessUtilImpl.java", "BodyUseAPI": [], "Fixed commit": "2af77efcc7ed436420ca526eee58527c8660cafd", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2018-10-23T21:58:34Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (positionCarteDansLaMain != (-1)) { mainFX.ajouterCarte(carteADeplacer, positionCarteDansLaMain); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4093/buggy-version/src.bridgechinoisclient.view.ObjetGraphique.PaquetFX.java", "BodyUseAPI": ["bridgechinoisclient.view.ObjetGraphique.MainFX.ajouterCarte(LibrairieCarte.Carte,int)"], "Fixed commit": "ff8ac250b815abe5892f31758b70d98c266a1069", "Url": "https://api.github.com/repos/GuillaumeCailhe/BridgeChinoisClient", "Date": "2018-05-27T13:53:35Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.talend.components.jdbc.runtime.JdbcRuntimeUtils.valid(setting.getDriverClass()))) { throw new java.lang.RuntimeException(\"Driver Class should not be empty, please set it\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3186/buggy-version/components.components-jdbc.components-jdbc-runtime.src.main.java.org.talend.components.jdbc.runtime.JdbcRuntimeUtils.java", "BodyUseAPI": [], "Fixed commit": "2391b60fb830439471dea4889f2e139383aca8fe", "Url": "https://api.github.com/repos/Talend/components", "Date": "2018-03-30T06:26:44Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.talend.components.jdbc.runtime.JdbcRuntimeUtils.valid(setting.getJdbcUrl()))) { throw new java.lang.RuntimeException(\"JDBC URL should not be empty, please set it\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3186/buggy-version/components.components-jdbc.components-jdbc-runtime.src.main.java.org.talend.components.jdbc.runtime.JdbcRuntimeUtils.java", "BodyUseAPI": [], "Fixed commit": "2391b60fb830439471dea4889f2e139383aca8fe", "Url": "https://api.github.com/repos/Talend/components", "Date": "2018-03-30T06:26:44Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (conditionResult) { executionContext.getAuditContainer().markRuleValid(rule.getRuleNumber()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1338/buggy-version/modules.flowable-dmn-engine.src.main.java.org.flowable.dmn.engine.impl.RuleEngineExecutorImpl.java", "BodyUseAPI": [], "Fixed commit": "1f40de2015541463a5745665a9e83e62396122c3", "Url": "https://api.github.com/repos/flowable/flowable-engine", "Date": "2018-03-30T09:01:47Z"},
{"Line": "=>997", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.Arrays.asList(question6).contains(jsonKey)) { jsonKey = jsonKey + \"8\"; col_num = mapping.get(jsonKey); }else if (java.util.Arrays.asList(questions).contains(jsonKey)) { jsonKey = jsonKey + \"91\"; col_num = mapping.get(jsonKey); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5433/buggy-version/json_converter.src.json_converter.JSON_Converter.java", "BodyUseAPI": ["java.util.List<java.lang.String>.contains(java.lang.String)"], "Fixed commit": "aa11abb2eacb3e05d6f8f666cdaa3acba015c017", "Url": "https://api.github.com/repos/valerioscisci/JSON-Converter", "Date": "2018-05-25T15:07:37Z"},
{"Line": "=>1009", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jsonValue.equals(\"\\\"a10\\\"\")) { jsonValue = \"X\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5433/buggy-version/json_converter.src.json_converter.JSON_Converter.java", "BodyUseAPI": [], "Fixed commit": "aa11abb2eacb3e05d6f8f666cdaa3acba015c017", "Url": "https://api.github.com/repos/valerioscisci/JSON-Converter", "Date": "2018-05-25T15:07:37Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((dependency.getSha1()) == null) && ((dependency.getArtifactId()) == null)) { logger.warn(\"Dependency {} was not updated, please try changing flag paket.runPreStep to true, or run 'paket install' manually to fix issue\", dependency.getGroupId()); }else { dependencies.add(dependency); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8566/buggy-version/src.main.java.org.whitesource.agent.dependency.resolver.paket.AbstractPaketDependencyCollector.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String,dependency.getGroupId())", "org.whitesource.agent.api.model.DependencyInfo.getGroupId()", "java.util.Collection<org.whitesource.agent.api.model.DependencyInfo>.add(org.whitesource.agent.api.model.DependencyInfo)"], "Fixed commit": "708139c05553d420e7c86b0f24cc2c7c019ffe83", "Url": "https://api.github.com/repos/whitesource/fs-agent", "Date": "2018-10-23T12:18:46Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((dependency.getSha1()) == null) && ((dependency.getArtifactId()) == null)) { logger.warn(\"Dependency {} was not updated, please try changing flag paket.runPreStep to true, or run 'paket install' manually to fix issue\", dependency.getGroupId()); }else { dependencies.add(childDependency); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8566/buggy-version/src.main.java.org.whitesource.agent.dependency.resolver.paket.AbstractPaketDependencyCollector.java", "BodyUseAPI": ["org.whitesource.agent.api.model.DependencyInfo.getGroupId()", "org.slf4j.Logger.warn(java.lang.String,dependency.getGroupId())"], "Fixed commit": "708139c05553d420e7c86b0f24cc2c7c019ffe83", "Url": "https://api.github.com/repos/whitesource/fs-agent", "Date": "2018-10-23T12:18:46Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.gla.cvr.gluetools.utils.IsoCountry.parseCountry(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (bestCountry == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5239/buggy-version/gluetools-core.src.main.java.uk.ac.gla.cvr.gluetools.core.collation.populating.regex.IsoCountryMatcherConverter.java", "BodyUseAPI": [], "Fixed commit": "d71520192e9d875824424964f7cb72d84230911d", "Url": "https://api.github.com/repos/giffordlabcvr/gluetools", "Date": "2018-09-27T14:23:53Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (answerPacket.getAnswer().equals(Answer.P)) { support.Answer prev = get(answerPacket.hashCode()); if (prev == null) super.put(answerPacket.hashCode(), null); return prev; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4027/buggy-version/Software.Java.iSkipper.src.support.AnswerPacketHashMap.java", "BodyUseAPI": ["support.AnswerPacketHashMap.get(answerPacket.hashCode())", "support.AnswerPacket.hashCode()", "support.AnswerPacket.hashCode()", "java.util.HashMap<java.lang.Integer, support.Answer>.put(answerPacket.hashCode(),<nulltype>)"], "Fixed commit": "459b0ff08695ab0d148324337b1672c1e6902d50", "Url": "https://api.github.com/repos/charlescao460/iSkipper-Software", "Date": "2018-09-04T06:17:44Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.toString().contains(\"src\")) fileLocation = file.toString().substring(4); else fileLocation = file.toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2419/buggy-version/src.CUZoneView.java", "BodyUseAPI": ["java.io.File.toString()", "java.io.File.toString()", "java.lang.String.substring(int)"], "Fixed commit": "fb2f8b7c805da8dff9f11ced4e0f62d7a664a64b", "Url": "https://api.github.com/repos/tdespatie/CUZone", "Date": "2018-04-01T23:42:14Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.analyzer.getEnvironment().getScope()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (compileScope.superGlobals.contains(l.getName())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9617/buggy-version/jphp-core.src.org.develnext.jphp.core.syntax.generators.LambdaGenerator.java", "BodyUseAPI": [], "Fixed commit": "c31cd1255b3664990e80aa8c3508e71d3b38f460", "Url": "https://api.github.com/repos/jphp-group/jphp", "Date": "2018-05-25T16:08:29Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jetbrains.jetpad.vclang.naming.reference.LocatedReferable.textRepresentation()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((name.isEmpty()) || (\"_\".equals(name))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8108/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.naming.resolving.NameResolvingChecker.java", "BodyUseAPI": [], "Fixed commit": "9fa760259d9ae9728392e4ecf387bcf448be5d27", "Url": "https://api.github.com/repos/JetBrains/Arend", "Date": "2018-05-23T12:53:59Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jetbrains.jetpad.vclang.naming.reference.LocatedReferable.textRepresentation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(name.isEmpty())) && (!(\"_\".equals(name)))) { referables.put(name, fieldRef); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8108/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.naming.resolving.NameResolvingChecker.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.jetbrains.jetpad.vclang.naming.reference.LocatedReferable>.put(java.lang.String,com.jetbrains.jetpad.vclang.naming.reference.LocatedReferable)"], "Fixed commit": "9fa760259d9ae9728392e4ecf387bcf448be5d27", "Url": "https://api.github.com/repos/JetBrains/Arend", "Date": "2018-05-23T12:53:59Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (draggableSelectedElement instanceof aefCMS.main.DraggableTreeElementPlus) this.draggableSelectedElement = ((aefCMS.main.DraggableTreeElementPlus) (draggableSelectedElement));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5672/buggy-version/aefCMS_WEB.src.main.java.aefCMS.main.IndexVM.java", "BodyUseAPI": [], "Fixed commit": "76111aa6e0c0e1692b86c55e2cec0bfb433cca70", "Url": "https://api.github.com/repos/TechTalentFactory-AEF/aefCMS", "Date": "2018-08-07T07:20:55Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.thedwoon.propsys.impl.network.NetworkPropertySystem.getPropertyUUID(java.util.Map<java.lang.String, java.lang.Long>,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (uuid == 0) uuid = getPropertyUUID(protectedProperties.get(connection), cluster, name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3842/buggy-version/src.main.java.com.github.thedwoon.propsys.impl.network.NetworkPropertySystem.java", "BodyUseAPI": [], "Fixed commit": "03066bde9524804d0360b02b22ba34b323baff3f", "Url": "https://api.github.com/repos/TheDwoon/PropertySystem", "Date": "2018-02-25T19:45:51Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (result instanceof java.lang.Object[]) { choiceAnswers = com.google.common.collect.ImmutableList.of(result); }else { choiceAnswers = new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7537/buggy-version/researchstack-sdk.src.main.java.org.sagebionetworks.bridge.researchstack.survey.SurveyAnswer.java", "BodyUseAPI": [], "Fixed commit": "1cc910d32759233c5f8d2d95e7b9bff3f3dfb9a5", "Url": "https://api.github.com/repos/Sage-Bionetworks/BridgeAndroidSDK", "Date": "2018-01-06T02:00:12Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!success) { connectFragment(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5709/buggy-version/CPS406Project.app.src.main.java.com.abcd.paulboutot.cps406project.QRActivity.java", "BodyUseAPI": [], "Fixed commit": "210541cd97a716c33a54ea8dd36fe1efb4297209", "Url": "https://api.github.com/repos/PaulBoutot/cps406", "Date": "2018-04-07T00:03:03Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (acct != null) { sdk.signTx(tx, new com.github.ontio.account.Account[][]{ new com.github.ontio.account.Account[]{ acct } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2360/buggy-version/src.main.java.com.github.ontio.smartcontract.NeoVm.java", "BodyUseAPI": ["com.github.ontio.OntSdk.signTx(com.github.ontio.core.transaction.Transaction,com.github.ontio.account.Account[][])"], "Fixed commit": "0e83bcf64f3b28d06a844545e7b621e01ba9c125", "Url": "https://api.github.com/repos/lucas7788/ontology-java-sdk", "Date": "2018-06-15T09:28:06Z"},
{"Line": "=>1147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((decoder1) != null) setupAudioSink(decoder1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2912/buggy-version/src.gui.SourceTab.java", "BodyUseAPI": [], "Fixed commit": "a3aa79f9f4b1c59d8c983735f35c07f6323bb54b", "Url": "https://api.github.com/repos/ac2cz/FoxTelem", "Date": "2018-03-30T17:51:26Z"},
{"Line": "=>1150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sink) != null) { sink.flush(); sink.closeOutput(); sink = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2912/buggy-version/src.gui.SourceTab.java", "BodyUseAPI": [], "Fixed commit": "a3aa79f9f4b1c59d8c983735f35c07f6323bb54b", "Url": "https://api.github.com/repos/ac2cz/FoxTelem", "Date": "2018-03-30T17:51:26Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (default_text != null) { java.lang.String excaped_text = ((java.lang.String) (default_text)).replaceAll(\"\\r\\n\", \"##newline##\"); excaped_text = excaped_text.replaceAll(\"\\t\", \"##tabspace##\"); session.setAttribute(\"mail_default_text\", excaped_text); }else { session.setAttribute(\"mail_default_text\", \"''\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/661/buggy-version/src.main.java.com.aurospaces.neighbourhood.controller.LoginController.java", "BodyUseAPI": [], "Fixed commit": "80c732c805442891d7a4a77a61e0367fb80d6b3a", "Url": "https://api.github.com/repos/kotaiahandraju/Matrimony", "Date": "2018-09-29T16:45:46Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (holder.tvStatus.getText().toString().equals(\"Ongoing\")) { holder.tvStatus.setTextColor(Color.GREEN); holder.tvStatusLight.setBackground(android.support.v4.content.ContextCompat.getDrawable(mainActivity.getBaseContext(), R.drawable.et_stylegreen)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6973/buggy-version/app.src.main.java.com.dz.swept.StakeAdapter.java", "BodyUseAPI": ["holder.tvStatus.setTextColor(Color.GREEN)", "holder.tvStatusLight.setBackground(android.support.v4.content.ContextCompat.getDrawable(mainActivity.getBaseContext(), R.drawable.et_stylegreen))"], "Fixed commit": "ba3c1dd18a43214099b8300f02ba65c3f20d0dcb", "Url": "https://api.github.com/repos/DiiZyy/Swept", "Date": "2018-08-23T04:30:38Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hibernate.Session.beginTransaction()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (tx != null) tx.rollback();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1909/buggy-version/AmericaOnWine.src.main.java.com.revature.americaonwine.data.UserHibernate.java", "BodyUseAPI": ["org.hibernate.Transaction.rollback()"], "Fixed commit": "37f252a7e51131d517ab1449b21704a3c88f489d", "Url": "https://api.github.com/repos/JennGoodman/AmericaOnWine", "Date": "2018-02-12T04:00:22Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (tx != null) tx.rollback();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1909/buggy-version/AmericaOnWine.src.main.java.com.revature.americaonwine.data.UserHibernate.java", "BodyUseAPI": ["org.hibernate.Transaction.rollback()"], "Fixed commit": "37f252a7e51131d517ab1449b21704a3c88f489d", "Url": "https://api.github.com/repos/JennGoodman/AmericaOnWine", "Date": "2018-02-12T04:00:22Z"},
{"Line": "=>550", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nsfemode) && ((tracknames) != null)) { stringRender.drawStringToBuffer(ppu.renderer.colorized, ((\"Song: \" + (tracknames[currentsong])) + \" \"), 0, 160); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7942/buggy-version/BassNES.Core.src.core.mappers.NSFPlayer.java", "BodyUseAPI": [], "Fixed commit": "e669629b1492f1f66b4351cb87608bc6eb5c6f7b", "Url": "https://api.github.com/repos/QuantumSoundings/BassNES", "Date": "2018-04-18T22:02:56Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((objects[i]) instanceof java.lang.String) { str = ((java.lang.String) (objects[i])); }else { str = getObjectMapper().writeValueAsString(objects[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/746/buggy-version/lib.src.main.java.ir.atitec.signalgo.HttpCore.java", "BodyUseAPI": ["getObjectMapper().writeValueAsString(java.lang.Object)"], "Fixed commit": "37a59362129a7d75ade386138bfdee0c09a5aa1b", "Url": "https://api.github.com/repos/hamedgramzi/signalGoClient", "Date": "2018-09-11T06:43:19Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((java.lang.Integer.valueOf(studio.getRow())) < 15) && ((java.lang.Integer.valueOf(studio.getCol())) < 15)) { if (studioMapper.insert(studio)) { cn.motian.model.Studio st = studioService.getByName(studio.getName()); for (int i = 0; i < (java.lang.Integer.valueOf(studio.getRow())); i++) { for (int j = 0; j < (java.lang.Integer.valueOf(studio.getCol())); j++) { cn.motian.model.Seat seat = new cn.motian.model.Seat(st.getUnionId(), i, j, java.lang.String.valueOf(TTMSConst.TTMS_SEAT_STATUS.valueOf(\"USE\").getIndex())); seatService.addSeat(seat); } } return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1536/buggy-version/src.main.java.cn.motian.serveice.impl.StudioServiceImpl.java", "BodyUseAPI": ["cn.motian.model.Studio.getName()", "java.lang.Integer.valueOf(studio.getCol())", "cn.motian.serveice.StudioService.getByName(studio.getName())", "java.lang.Integer.valueOf(studio.getRow())", "cn.motian.model.Studio.getCol()", "cn.motian.mapper.StudioMapper.insert(cn.motian.model.Studio)", "cn.motian.model.Studio.getRow()"], "Fixed commit": "02c18808b9008f8eacf5eb9b92f12a88e430c6fb", "Url": "https://api.github.com/repos/m765885195t/TTMS_WEB", "Date": "2018-06-14T14:33:04Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((page != null) && (page > 0)) { builder.appendQueryParameter(com.example.android.popularmovies.utilities.TMDbUtils.PAGE_PARAM, page.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9419/buggy-version/app.src.main.java.com.example.android.popularmovies.utilities.TMDbUtils.java", "BodyUseAPI": ["Uri.Builder.appendQueryParameter(java.lang.String,java.lang.String)", "java.lang.Integer.toString()"], "Fixed commit": "1375b0474f799f07317b1e8c8b916053f7c71e50", "Url": "https://api.github.com/repos/johngboutros/popular-movies-project", "Date": "2018-03-17T22:40:53Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((page != null) && (page > 0)) { builder.appendQueryParameter(com.example.android.popularmovies.utilities.TMDbUtils.PAGE_PARAM, page.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9419/buggy-version/app.src.main.java.com.example.android.popularmovies.utilities.TMDbUtils.java", "BodyUseAPI": ["Uri.Builder.appendQueryParameter(java.lang.String,java.lang.String)", "java.lang.Integer.toString()"], "Fixed commit": "1375b0474f799f07317b1e8c8b916053f7c71e50", "Url": "https://api.github.com/repos/johngboutros/popular-movies-project", "Date": "2018-03-17T22:40:53Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isMyServiceRunning(com.example.apofe.voicealytics.UploadRecordService.class))) { android.widget.Toast.makeText(getContext(), \"\u0421\u0435\u0440\u0432\u0438\u0441 \u0437\u0430\u043f\u0443\u0449\u0435\u043d.\", Toast.LENGTH_SHORT).show(); startUploadService(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4444/buggy-version/app.src.main.java.com.example.apofe.voicealytics.AudioFragment.java", "BodyUseAPI": [], "Fixed commit": "5f794eeed20d6016b864e05ff8dfe6d854a40789", "Url": "https://api.github.com/repos/DasApp/VoiceAlytics", "Date": "2018-07-12T10:03:35Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fsu.jportal.util.GndUtil.retrieveFromSRU(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (picaRecord == null) { throw new java.lang.IllegalArgumentException(java.lang.String.format(java.util.Locale.ROOT, \"No record found for '%s'\", gnd)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5674/buggy-version/jportal_mcr_module.src.main.java.fsu.jportal.resolver.SRUResolver.java", "BodyUseAPI": [], "Fixed commit": "6f35ccc1ace6484d55a82bfab880c5a9cce92534", "Url": "https://api.github.com/repos/ThULB/jportal", "Date": "2018-07-26T14:16:18Z"},
{"Line": "=>437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cg.bankingapp.service.IBankingService.getChequeBookStatus(user.getAccountId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"dispatched\".equals(serviceStatus)) { mv = new org.springframework.web.servlet.ModelAndView(\"userRequestChequeBookForm\"); mv.addObject(\"check\", \"nDisplay\"); mv.addObject(\"errmsg\", \"Cheque book has been dispatched and it will reach within 3 working days!!!\"); }else if (\"not issued\".equals(serviceStatus)) { mv = new org.springframework.web.servlet.ModelAndView(\"userRequestChequeBookForm\"); mv.addObject(\"check\", \"display\"); }else if (\"open\".equals(serviceStatus)) { mv = new org.springframework.web.servlet.ModelAndView(\"userRequestChequeBookForm\"); mv.addObject(\"check\", \"nDisplay\"); mv.addObject(\"errmsg\", \"Your request is in process!!!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6909/buggy-version/src.main.java.com.cg.bankingapp.controller.BankingController.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "3f9e410ff62c6b8dd1eff05f7b62b12c0e475743", "Url": "https://api.github.com/repos/namanmehta1997/Online-Banking", "Date": "2018-09-06T06:38:46Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.state()) == (io.netty.handler.timeout.IdleState.READER_IDLE)) { ctx.close(); }else if ((event.state()) == (io.netty.handler.timeout.IdleState.WRITER_IDLE)) { heartbeat.getContent().increase(); ctx.writeAndFlush(heartbeat); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3043/buggy-version/jrpc-transport-netty5.src.main.java.com.dinstone.jrpc.transport.netty5.NettyConnector.java", "BodyUseAPI": ["io.netty.handler.timeout.IdleStateEvent.state()"], "Fixed commit": "9685310fd7936f3187f2ea43b4409463a82681e1", "Url": "https://api.github.com/repos/dinstone/jrpc", "Date": "2018-10-10T14:18:25Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["clientBoot.connect(sa).awaitUninterruptibly()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(future.isSuccess())) { throw new java.lang.RuntimeException(future.cause()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3043/buggy-version/jrpc-transport-netty5.src.main.java.com.dinstone.jrpc.transport.netty5.NettyConnector.java", "BodyUseAPI": ["io.netty.channel.ChannelFuture.cause()"], "Fixed commit": "9685310fd7936f3187f2ea43b4409463a82681e1", "Url": "https://api.github.com/repos/dinstone/jrpc", "Date": "2018-10-10T14:18:25Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["clientBoot.connect(sa).awaitUninterruptibly()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(future.isSuccess())) { throw new java.lang.RuntimeException(future.cause()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3043/buggy-version/jrpc-transport-netty4.src.main.java.com.dinstone.jrpc.transport.netty4.NettyConnector.java", "BodyUseAPI": ["io.netty.channel.ChannelFuture.cause()"], "Fixed commit": "9685310fd7936f3187f2ea43b4409463a82681e1", "Url": "https://api.github.com/repos/dinstone/jrpc", "Date": "2018-10-10T14:18:25Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.state()) == (io.netty.handler.timeout.IdleState.READER_IDLE)) { ctx.close(); }else if ((event.state()) == (io.netty.handler.timeout.IdleState.WRITER_IDLE)) { heartbeat.getContent().increase(); ctx.writeAndFlush(heartbeat); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3043/buggy-version/jrpc-transport-netty4.src.main.java.com.dinstone.jrpc.transport.netty4.NettyConnector.java", "BodyUseAPI": ["io.netty.handler.timeout.IdleStateEvent.state()"], "Fixed commit": "9685310fd7936f3187f2ea43b4409463a82681e1", "Url": "https://api.github.com/repos/dinstone/jrpc", "Date": "2018-10-10T14:18:25Z"},
{"Line": "=>897", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((health) < 0) { health = 0; }else if ((health2) < 0) { health2 = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1584/buggy-version/src.TankMazePlayer.java", "BodyUseAPI": [], "Fixed commit": "0ee2e7913010b72dd56344d0b39d1980933a2b32", "Url": "https://api.github.com/repos/Kurt-Tito/CECS-491A-Birdstufz", "Date": "2018-05-09T16:43:20Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(result.toString().startsWith(\"{\"))) && (!(result.toString().startsWith(\"[\")))) throw new java.lang.RuntimeException((\"JsonObject must be started with { or [ \" + (result.toString())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9523/buggy-version/src.main.java.me.dunit.dota.OpenDotaAPIWrapper.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()"], "Fixed commit": "9576680310c3fe00dd5cd6ad6709e76deaee5ff0", "Url": "https://api.github.com/repos/VATALU/OpenDotaAPIWrapper", "Date": "2018-05-20T10:13:02Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((HRVfilter.size()) > 0) { HRVthresh = HRVfilter.get(((int) (0.8 * (HRVfilter.size())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9749/buggy-version/app.src.main.java.com.fridgecow.smartalarm.SleepSummaryData.java", "BodyUseAPI": [], "Fixed commit": "8147100f5da128f6bf1433681474f8cdc91398be", "Url": "https://api.github.com/repos/fridgecow/smartalarm", "Date": "2018-01-08T15:29:34Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.wuyr.catchpiggy.Application.getCurrentPigstyModeLevel(context)) < currentLevel) { com.wuyr.catchpiggy.Application.getSharedPreferences(context).edit().putLong(com.wuyr.catchpiggy.Application.CURRENT_PIGSTY_MODE_LEVEL, currentLevel).apply(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4855/buggy-version/app.src.main.java.com.wuyr.catchpiggy.Application.java", "BodyUseAPI": ["com.wuyr.catchpiggy.Application.getSharedPreferences(context).edit().putLong(com.wuyr.catchpiggy.Application.CURRENT_PIGSTY_MODE_LEVEL, currentLevel).apply()", "android.content.SharedPreferences.edit()", "com.wuyr.catchpiggy.Application.getSharedPreferences(context).edit().putLong(java.lang.String,long)", "com.wuyr.catchpiggy.Application.getSharedPreferences(android.content.Context)"], "Fixed commit": "e097bebe90561a3db422308060fad1eee7fec2dc", "Url": "https://api.github.com/repos/wuyr/CatchPiggy", "Date": "2018-01-18T08:00:58Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.wuyr.catchpiggy.Application.getCurrentClassicModeLevel(context)) < currentLevel) { com.wuyr.catchpiggy.Application.getSharedPreferences(context).edit().putLong(com.wuyr.catchpiggy.Application.CURRENT_CLASSIC_MODE_LEVEL, currentLevel).apply(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4855/buggy-version/app.src.main.java.com.wuyr.catchpiggy.Application.java", "BodyUseAPI": ["com.wuyr.catchpiggy.Application.getSharedPreferences(context).edit().putLong(com.wuyr.catchpiggy.Application.CURRENT_CLASSIC_MODE_LEVEL, currentLevel).apply()", "com.wuyr.catchpiggy.Application.getSharedPreferences(android.content.Context)", "com.wuyr.catchpiggy.Application.getSharedPreferences(context).edit().putLong(java.lang.String,long)", "android.content.SharedPreferences.edit()"], "Fixed commit": "e097bebe90561a3db422308060fad1eee7fec2dc", "Url": "https://api.github.com/repos/wuyr/CatchPiggy", "Date": "2018-01-18T08:00:58Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((jsonInString.length()) > 0) && ((jsonInString.split(\"\\\\s+\").length) == 1)) { return false; }else { gson.fromJson(jsonInString, java.lang.Object.class); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1814/buggy-version/chatbot.src.main.java.chatbot.core.handlers.rivescript.RiveScriptOutputAnalyzer.java", "BodyUseAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Fixed commit": "3e64c29ed5655553b3b6fa5c6e2ad0640d2300a2", "Url": "https://api.github.com/repos/dice-group/sask", "Date": "2018-05-10T12:34:19Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["teamteam.graphing_calculator.MainActivity.extractValue(R.id.maxX)", "teamteam.graphing_calculator.MainActivity.extractValue(R.id.minX)", "teamteam.graphing_calculator.MainActivity.extractValue(R.id.minY)", "teamteam.graphing_calculator.MainActivity.extractValue(R.id.maxY)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((nminx.equals(\"\")) || (nmaxx.equals(\"\"))) || (nminy.equals(\"\"))) || (nmaxy.equals(\"\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9177/buggy-version/app.src.main.java.teamteam.graphing_calculator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "da8e09113c0bc04da6cdbbe23925940960345976", "Url": "https://api.github.com/repos/jherr029/Graphing-Calculator", "Date": "2018-02-22T04:41:19Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jgrapht.alg.spanning.SolutionRepresentation.calculateResultingSpanningTree()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cmst.isCapacacitatedSpanningTree(graph, root, capacity, demands)) { throw new java.lang.IllegalArgumentException(\"This graph does not have a capacitated minimum spanning tree with the given capacity and demands.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4230/buggy-version/jgrapht-core.src.main.java.org.jgrapht.alg.spanning.EsauWilliamsCapacitatedMinimumSpanningTree.java", "BodyUseAPI": [], "Fixed commit": "ec8342d4ea6c65ce921847bce7e26c8e1ab54f9a", "Url": "https://api.github.com/repos/tj-developers/jgrapht", "Date": "2018-08-23T20:21:06Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((optimisationLevel == (OptimisationLevel.level4)) || (optimisationLevel == (OptimisationLevel.level5))) { removeRedundantStores(flattened); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5088/buggy-version/src.Translator.java", "BodyUseAPI": [], "Fixed commit": "74da34e3838e5b2f868c9c193f04309bc3a6f258", "Url": "https://api.github.com/repos/Bruntaz/BinaryCodeTranslation", "Date": "2018-03-22T12:47:48Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parent) == container) { parent = null; themeRenderer = null; }else { throw new java.lang.IllegalStateException(((((this) + \" is not \") + container) + \"'s child.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8072/buggy-version/src.main.java.com.googlecode.lanterna.gui2.AbstractComponent.java", "BodyUseAPI": [], "Fixed commit": "8987f2046dade981492a924469262982d58068a2", "Url": "https://api.github.com/repos/mabe02/lanterna", "Date": "2018-05-19T19:08:04Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((parent) != container) && ((parent) != null)) { parent.removeComponent(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8072/buggy-version/src.main.java.com.googlecode.lanterna.gui2.AbstractComponent.java", "BodyUseAPI": [], "Fixed commit": "8987f2046dade981492a924469262982d58068a2", "Url": "https://api.github.com/repos/mabe02/lanterna", "Date": "2018-05-19T19:08:04Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (target.isDetectable()) visits = target.getVisits(); else visits = new shared.logic.PlayerList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7476/buggy-version/roles.Detective.java", "BodyUseAPI": ["shared.logic.Player.getVisits()"], "Fixed commit": "1648b480416d1a58f8a437b3b51885e101020079", "Url": "https://api.github.com/repos/vossnarrator/TheNarrator", "Date": "2018-01-13T01:12:47Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2726/buggy-version/src.ds.tree.BST.java", "BodyUseAPI": [], "Fixed commit": "e88dd68da389cec761960c575654cc561790e7e8", "Url": "https://api.github.com/repos/bakhodir10/AlgoCS", "Date": "2018-01-09T06:01:39Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wynprice.fireworks.common.util.calculator.MathCalculation.isNextChar(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isPrefixBrace && (!(isNextChar(')')))) { throw new com.wynprice.fireworks.common.util.calculator.MathReaderException.MathReaderSyntaxException(')', ((char) (character))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6095/buggy-version/src.main.java.com.wynprice.fireworks.common.util.calculator.MathCalculation.java", "BodyUseAPI": [], "Fixed commit": "fdab333b4f33d5f5b21f04345f86edb861121952", "Url": "https://api.github.com/repos/Wyn-Price/Fireworks", "Date": "2018-04-27T11:05:37Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["step.expressions.ExpressionHandler.evaluateGroovyExpression(dynamicValue.expression,java.util.Map<java.lang.String, java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (evaluationResult instanceof groovy.lang.GString) { evaluationResult = evaluationResult.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/445/buggy-version/core.src.main.java.step.core.dynamicbeans.DynamicValueResolver.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "7114dbf94c370e4b7c02f00476b6f42c36041ba6", "Url": "https://api.github.com/repos/exense/step", "Date": "2018-02-01T07:19:44Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((currentNewsArticle.getString(\"author\")) == null) { author = \"Author unknown\"; }else { currentNewsArticle.getString(\"author\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8465/buggy-version/app.src.main.java.com.example.android.newsapp.QueryUtils.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "2e1dae9ef4e2477dd43b95860a6f2585595737f7", "Url": "https://api.github.com/repos/ajsherrell/NewsApp", "Date": "2018-08-05T16:06:14Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i >= (paramSize + 1)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3457/buggy-version/src.main.java.top.yeonon.lmserver.controller.LmHttpHandler.java", "BodyUseAPI": [], "Fixed commit": "623c647933ceada1921716fff24ae6b9ba26c20d", "Url": "https://api.github.com/repos/Weiyanyu/LmServer", "Date": "2018-07-20T09:00:34Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getButton()) != (javafx.scene.input.MouseButton.SECONDARY)) { ((javafx.scene.Node) (event.getTarget())).setLayoutX(event.getSceneX()); ((javafx.scene.Node) (event.getTarget())).setLayoutY(event.getSceneY()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3150/buggy-version/src.CarnationCarnage.SetupController.java", "BodyUseAPI": ["javafx.scene.input.MouseEvent.getSceneX()", "((javafx.scene.Node) (event.getTarget())).setLayoutY(event.getSceneY())", "((javafx.scene.Node) (event.getTarget())).setLayoutX(event.getSceneX())", "javafx.scene.input.MouseEvent.getTarget()", "javafx.scene.input.MouseEvent.getSceneY()", "javafx.scene.input.MouseEvent.getTarget()"], "Fixed commit": "3ca61428f7b47dce43e439503d1acfed813c0c65", "Url": "https://api.github.com/repos/Isaac-McClure/Carnation-Carnage", "Date": "2018-08-13T10:50:11Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.activity.CropActivity.findPoints()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (points != null) { mSelectionImageView.setPoints(points); }else { com.owncloud.android.lib.common.utils.Log_OC.d(com.owncloud.android.ui.activity.CropActivity.TAG, getResources().getString(R.string.no_contour_found)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5002/buggy-version/src.com.owncloud.android.ui.activity.CropActivity.java", "BodyUseAPI": ["com.owncloud.android.ui.QuadrilateralSelectionImageView.setPoints(java.util.List<android.graphics.PointF>)"], "Fixed commit": "5f6a858214319cfcfb03ef26a9d06349193a1ec9", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-03-12T06:43:04Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hour == 12) { amOrPm = \"PM\"; }else { amOrPm = \"AM\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1542/buggy-version/app.src.main.java.com.example.augappprototype.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "74510d635fc20aee451221b0b824f89e856e865e", "Url": "https://api.github.com/repos/pao2o/AugApp", "Date": "2018-01-19T17:13:57Z"},
{"Line": "=>1264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.nd4j.linalg.api.ops.performance.PerformanceTracker.getInstance()) != null) { properties.put(Nd4jEnvironment.MEMORY_BANDWIDTH_KEY, org.nd4j.linalg.api.ops.performance.PerformanceTracker.getInstance().getCurrentBandwidth()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9920/buggy-version/nd4j.nd4j-backends.nd4j-backend-impls.nd4j-native.src.main.java.org.nd4j.linalg.cpu.nativecpu.ops.NativeOpExecutioner.java", "BodyUseAPI": [], "Fixed commit": "39ab932d0b757b7135ee919a12dda6e3bd9db551", "Url": "https://api.github.com/repos/deeplearning4j/deeplearning4j", "Date": "2018-07-03T02:31:33Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fields == null) { throw new java.lang.IllegalArgumentException(\"List to store fields in cannot be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6987/buggy-version/src.main.java.com.sangupta.gather.GatherReflect.java", "BodyUseAPI": [], "Fixed commit": "972e4b1a6691076cff145b82d5caf11c5c6631f4", "Url": "https://api.github.com/repos/sangupta/gather", "Date": "2018-01-10T23:42:43Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clazz == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6987/buggy-version/src.main.java.com.sangupta.gather.GatherReflect.java", "BodyUseAPI": [], "Fixed commit": "972e4b1a6691076cff145b82d5caf11c5c6631f4", "Url": "https://api.github.com/repos/sangupta/gather", "Date": "2018-01-10T23:42:43Z"},
{"Line": "=>561", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (player != null) { player.setScoreboard(board); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2866/buggy-version/src.java.net.firecraftmc.shared.classes.FirecraftPlayer.java", "BodyUseAPI": ["org.bukkit.entity.Player.setScoreboard(net.firecraftmc.shared.classes.Scoreboard)"], "Fixed commit": "c4fc2c3ac1fd58201db9da9846cb94a663861781", "Url": "https://api.github.com/repos/Firestar311/FirecraftAPI", "Date": "2018-05-12T06:07:42Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.System.getenv(io.confluent.connect.jdbc.JdbcConnectorMain.HEROKU_ENV_DB_URL)) != null) { prop.put(io.confluent.connect.jdbc.JdbcConnectorMain.CONNECTOR_DB_URL, java.lang.System.getenv(io.confluent.connect.jdbc.JdbcConnectorMain.HEROKU_ENV_DB_URL)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1958/buggy-version/src.main.java.io.confluent.connect.jdbc.JdbcConnectorMain.java", "BodyUseAPI": ["java.util.Properties.put(java.lang.String,java.lang.String)", "java.lang.System.getenv(java.lang.String)"], "Fixed commit": "a973a9639a73cba3193efd0ad312ea0a8bcd3162", "Url": "https://api.github.com/repos/dperez4787/kafka-connect-jdbc", "Date": "2018-01-07T10:59:28Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(gameStarted)) { startGame(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2548/buggy-version/SourceFiles.core.src.com.fourmen.screens.MainMenu.java", "BodyUseAPI": [], "Fixed commit": "6b048460f96fdad4fbdb4c682a2aacce721d0c81", "Url": "https://api.github.com/repos/Jakbquick/Palette", "Date": "2018-06-06T05:35:35Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((v.getZ()) != (touched.getZ())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8121/buggy-version/src.uk.ac.cam.cl.waytotheclinic.MapSearch.java", "BodyUseAPI": [], "Fixed commit": "fd14ec7737d5aba6549005cc692a8136b6fe91e4", "Url": "https://api.github.com/repos/nikihowe/waytotheclinic", "Date": "2018-03-01T20:18:43Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (list.isEmpty()) { org.hibernate.criterion.DetachedCriteria dc = org.hibernate.criterion.DetachedCriteria.forClass(com.seatmanagement.model.Employee.class); dc.add(org.hibernate.criterion.Restrictions.disjunction()); dc.add(org.hibernate.criterion.Restrictions.or(org.hibernate.criterion.Restrictions.like(\"employeeRoll\", request), org.hibernate.criterion.Restrictions.like(\"firstName\", request))); employee = ((com.seatmanagement.model.Employee) (hibernateTemplate.findByCriteria(dc).get(0))); com.seatmanagement.model.Systems system = new com.seatmanagement.model.Systems(); system.setEmployee(employee); list.add(system); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1299/buggy-version/seatmanagement.src.com.seatmanagement.dao.impl.SystemDaoImpl.java", "BodyUseAPI": ["java.util.List<com.seatmanagement.model.Systems>.add(com.seatmanagement.model.Systems)"], "Fixed commit": "76f1131b7a9eadb543f5a93e07b348e6b006c690", "Url": "https://api.github.com/repos/SMIFresher/SeatsManagement", "Date": "2018-10-23T06:52:05Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pendingResult) != null) pendingResult.success(result);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5519/buggy-version/android.src.main.java.com.vitanov.multiimagepicker.MultiImagePickerPlugin.java", "BodyUseAPI": [], "Fixed commit": "2eaf96c11e5a83525ed7ac9bcc99141073f0764c", "Url": "https://api.github.com/repos/otjiushig/multi_image_picker", "Date": "2018-08-19T12:02:36Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pendingResult) != null) pendingResult.success(imagePathList);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5519/buggy-version/android.src.main.java.com.vitanov.multiimagepicker.MultiImagePickerPlugin.java", "BodyUseAPI": [], "Fixed commit": "2eaf96c11e5a83525ed7ac9bcc99141073f0764c", "Url": "https://api.github.com/repos/otjiushig/multi_image_picker", "Date": "2018-08-19T12:02:36Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ClassLoader.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"jar\".equals(configUrl.getProtocol())) { existHome = java.nio.file.Paths.get(new java.net.URI(configUrl.getPath())).getParent().getParent(); org.exist.util.ConfigurationHelper.LOG.warn((config + \" file was found on the classpath, but inside a Jar file! Derived EXIST_HOME from Jar's parent folder: {}\"), existHome); }else { existHome = java.nio.file.Paths.get(configUrl.toURI()).getParent(); org.exist.util.ConfigurationHelper.LOG.debug(\"Got EXIST_HOME from classpath: {}\", existHome.toAbsolutePath().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9343/buggy-version/src.org.exist.util.ConfigurationHelper.java", "BodyUseAPI": ["java.net.URL.toURI()", "java.nio.file.Paths.get(java.net.URI)", "java.nio.file.Path.getParent()", "java.nio.file.Path.getParent()", "java.net.URL.getPath()", "java.nio.file.Path.getParent()", "java.nio.file.Paths.get(java.net.URI)"], "Fixed commit": "8a1ed6189afac3be7eb9b4bbc23de02e449a29c8", "Url": "https://api.github.com/repos/dizzzz/exist", "Date": "2018-07-13T11:42:02Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ex instanceof java.lang.reflect.InvocationTargetException) { ex = ex.getCause(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1491/buggy-version/officefloor.web.officeweb_configuration.src.main.impl.net.officefloor.woof.template.WoofTemplateExtensionLoaderImpl.java", "BodyUseAPI": ["java.lang.Throwable.getCause()"], "Fixed commit": "e3aa74a64a4f7d57f92a0b5f2dfef465f61aa80f", "Url": "https://api.github.com/repos/sagenschneider/OfficeFloor", "Date": "2018-07-05T16:22:26Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (new validEmail.EmailValidator().validateEmail(subscriber.getEmail())) { if (subsciberService.findSubscriberByEmail(subscriber.getEmail())) { return -1; } return subsciberService.addSubsecriber(subscriber.getEmail()).getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6360/buggy-version/wingChunHorfiash.web.src.main.java.com.asad.web.Rest.SubscribeRest.java", "BodyUseAPI": ["com.asad.service.ejb.SubscriberService.addSubsecriber(subscriber.getEmail())", "subsciberService.addSubsecriber(subscriber.getEmail()).getId()", "com.asad.web.Subscriber.getEmail()", "com.asad.service.ejb.SubscriberService.findSubscriberByEmail(subscriber.getEmail())", "com.asad.web.Subscriber.getEmail()"], "Fixed commit": "7a14020edc7738bb76d803132ef50150dc837330", "Url": "https://api.github.com/repos/asadhmeed/webPractice", "Date": "2018-03-13T07:08:23Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, javax.xml.stream.events.StartElement>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (null == fsArray) { annotationMissing = true; }else { javax.xml.stream.events.Attribute attributeByName = fsArray.getAttributeByName(de.julielab.xml.XmiBuilder.fsArrayElements); if (attributeByName == null) throw new java.lang.IllegalStateException(((((((((((\"Programming error: The array feature \" + featureBaseName) + \" should be accessed as FSArray for the element \") + elementName) + \". However, it does not have the \\\"\") + (de.julielab.xml.XmiBuilder.fsArrayElements)) + \"\\\" attribute. The value of the \") + featureBaseName) + \" attribute is \\\"\") + xmiRefId) + \"\\\".\")); java.lang.String elementsString = attributeByName.getValue(); java.lang.String[] elements = elementsString.split(\" \"); for (java.lang.String element : elements) { if (!(seenXmiElements.containsKey(element))) annotationMissing = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2044/buggy-version/jcore-xmi-splitter.src.main.java.de.julielab.xml.XmiBuilder.java", "BodyUseAPI": ["javax.xml.stream.events.StartElement.getAttributeByName(javax.xml.namespace.QName)"], "Fixed commit": "defaed77f446407935a0d94c21d2e2649208e20c", "Url": "https://api.github.com/repos/JULIELab/jcore-dependencies", "Date": "2018-08-03T09:37:25Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cashToSend <= 0.0) { sender.sendMessage(((org.bukkit.ChatColor.RED) + \"You can't send negative money!\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5403/buggy-version/src.main.java.com.brohoof.brohoofeconomy.CommandHandler.java", "BodyUseAPI": [], "Fixed commit": "c35b4643e407ff82ebf2d6f2328aba8bc4f49fab", "Url": "https://api.github.com/repos/EquestriaCubed/BrohoofEconomy", "Date": "2018-02-12T22:43:59Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((java.lang.String) (msg.obj)).split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (countMsg[0].isEmpty()) { android.widget.Toast.makeText(getApplicationContext(), \"\ub4f1\ub85d\ub41c \uac83\uc774 \uc5c6\uc2b5\ub2c8\ub2e4.\", Toast.LENGTH_SHORT).show(); net.nipa0711.photosns.PhotoLook look = ((net.nipa0711.photosns.PhotoLook) (PhotoLook.photoLookActivity)); look.finish(); }else { for (int i = 0; i < (countMsg.length); i++) { if ((i == 0) || ((i % 6) == 0)) { android.graphics.Bitmap thumbnail = stringToBitmap(countMsg[(i + 3)]); android.graphics.drawable.Drawable smallPhoto = new android.graphics.drawable.BitmapDrawable(getResources(), thumbnail); mAdapter.addItem(countMsg[i], smallPhoto, countMsg[(i + 1)], countMsg[(i + 4)], countMsg[(i + 2)], countMsg[(i + 5)]); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6025/buggy-version/app.src.main.java.net.nipa0711.photosns.globalVar.java", "BodyUseAPI": ["net.nipa0711.photosns.ListViewAdapter.addItem(java.lang.String,android.graphics.drawable.Drawable,java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "net.nipa0711.photosns.globalVar.1.stringToBitmap(java.lang.String)"], "Fixed commit": "3d32907bb5e7e07f0dd5b510a955ca03148596c4", "Url": "https://api.github.com/repos/nipa0711/PhotoSNS", "Date": "2018-07-18T07:15:18Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((k == 0) && (charAt == '-')) { d += charAt; }else if ((charAt == '.') && dot) { d += charAt; dot = false; }else if ((charAt >= '0') && (charAt <= '9')) { d += charAt; }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3265/buggy-version/java-tools.OsmAndServer.src.main.java.net.osmand.server.controllers.pub.ApiController.java", "BodyUseAPI": [], "Fixed commit": "743e5717aa63948d17f4c60acbfc41be0927cb0c", "Url": "https://api.github.com/repos/osmandapp/OsmAnd-tools", "Date": "2018-09-13T00:17:58Z"},
{"Line": "=>497", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (code == 0) return true; else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/700/buggy-version/app.src.main.java.com.nuaa.safedriving.NewServices.java", "BodyUseAPI": [], "Fixed commit": "539b200ce9336e2f44b83c73802d507c9bcd57f1", "Url": "https://api.github.com/repos/LogicJake/SafeDrivingAppUser", "Date": "2018-03-17T12:31:23Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataSnapshot.exists()) currentMonthPrayersList = ((java.util.ArrayList<com.example.ahmedhamdy.prayertimes.Prayers>) (dataSnapshot.getValue()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2283/buggy-version/app.src.main.java.com.example.ahmedhamdy.prayertimes.ViewPagerFragment.java", "BodyUseAPI": ["com.google.firebase.database.DataSnapshot.getValue()"], "Fixed commit": "9da328b6f9f654c935c36f68d3cd1c66884c02d4", "Url": "https://api.github.com/repos/ahmedgomaa27/PrayerTimes", "Date": "2018-02-05T15:57:12Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (unalignedIndex >= 0) { result.unalignedLength = unalignedIndex + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4930/buggy-version/main.info.bioinfweb.libralign.core.src.info.bioinfweb.libralign.model.utils.indextranslation.RandomAccessIndexTranslator.java", "BodyUseAPI": [], "Fixed commit": "0b1b91af1bf92f308bfbd9c462875f2fee1f4588", "Url": "https://api.github.com/repos/bioinfweb/LibrAlign", "Date": "2018-02-19T13:16:05Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lib instanceof com.cburch.logisim.file.LoadedLibrary) { com.cburch.logisim.file.LoadedLibrary lib1 = ((com.cburch.logisim.file.LoadedLibrary) (lib)); if ((lib1.getBase()) instanceof com.cburch.logisim.file.LogisimFile) { repair(proj, lib1.getBase()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7954/buggy-version/src.com.cburch.logisim.file.LogisimFileActions.java", "BodyUseAPI": [], "Fixed commit": "a3c5eb8836fb99de1b879257a02d7aac4973b3e7", "Url": "https://api.github.com/repos/reds-heig/logisim-evolution", "Date": "2018-10-20T12:05:54Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((synckey.length()) > 0) { this.synckey = synckey.substring(1); }else { this.synckey = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3974/buggy-version/wechat.src.main.java.io.github.biezhi.wechat.api.WechatApi.java", "BodyUseAPI": ["java.lang.StringBuffer.substring(int)"], "Fixed commit": "30d17d1a7da6c72e93484303fc11938f0f2cdad9", "Url": "https://api.github.com/repos/Jamling/SmartIM", "Date": "2018-04-19T06:48:03Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((varType.dataType.getVarBaseType()) == (org.virtue.config.vartype.constants.BaseVarType.INTEGER)) { player.getDispatcher().sendEvent(org.virtue.network.event.encoder.impl.VarpEventEncoder.class, new org.virtue.network.event.context.impl.out.VarpEventContext(varType.id, getVarValueInt(varType))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8473/buggy-version/src.main.java.org.virtue.game.entity.player.var.VarRepository.java", "BodyUseAPI": ["player.getDispatcher().sendEvent(java.lang.Class,org.virtue.network.event.context.impl.out.VarpEventContext)", "org.virtue.game.entity.player.var.VarRepository.getVarValueInt(org.virtue.config.vartype.VarType)"], "Fixed commit": "ab1b544b0e2e67d72e85be774ab1950f7d69db14", "Url": "https://api.github.com/repos/Sundays211/VirtueRS3", "Date": "2018-07-29T03:38:15Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) getActivity().unregisterReceiver(tickReceiver);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1948/buggy-version/app.src.main.java.com.cristiangarcia.classschedule.TimetableFragment.java", "BodyUseAPI": [], "Fixed commit": "07bdbef1c17375ac14e751504883c83a8f66f2fe", "Url": "https://api.github.com/repos/cristian99garcia/ClassSchedule", "Date": "2018-08-15T23:07:07Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((movieDetailsData.getHomepage()) == null) { tvViewDetails.setVisibility(View.GONE); }else { tvViewDetails.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2128/buggy-version/app.src.main.java.com.example.rakeshrav.magicmovies.ui.movieDetails.MovieDetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "8d28bb7608c8a85e075da111ff9b32e807d06fc9", "Url": "https://api.github.com/repos/RakeshRav/MagicMovies", "Date": "2018-08-13T07:12:09Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.evacipated.cardcrawl.modthespire.Loader.DEBUG) { java.lang.System.out.println(\"Debug mode!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2187/buggy-version/src.main.java.com.evacipated.cardcrawl.modthespire.Loader.java", "BodyUseAPI": [], "Fixed commit": "5ba816e3c1f4c6e808887bcf980087ffabe7a9c9", "Url": "https://api.github.com/repos/kiooeht/ModTheSpire", "Date": "2018-02-23T00:06:28Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (instance == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7151/buggy-version/src.main.java.org.jenkinsci.plugins.pluginusage.analyzer.JobAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "70c18cd27f7c19e181a2c58c55ac7fc326099ae9", "Url": "https://api.github.com/repos/jenkinsci/plugin-usage-plugin", "Date": "2018-04-20T17:30:07Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (instance == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7151/buggy-version/src.main.java.org.jenkinsci.plugins.pluginusage.analyzer.JobCollector.java", "BodyUseAPI": [], "Fixed commit": "70c18cd27f7c19e181a2c58c55ac7fc326099ae9", "Url": "https://api.github.com/repos/jenkinsci/plugin-usage-plugin", "Date": "2018-04-20T17:30:07Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (jenkins == null) { return mapJobsPerPlugin; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7151/buggy-version/src.main.java.org.jenkinsci.plugins.pluginusage.analyzer.JobCollector.java", "BodyUseAPI": [], "Fixed commit": "70c18cd27f7c19e181a2c58c55ac7fc326099ae9", "Url": "https://api.github.com/repos/jenkinsci/plugin-usage-plugin", "Date": "2018-04-20T17:30:07Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getParentFile()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((directory != null) && (!(directory.exists()))) { directory.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5168/buggy-version/src.main.java.ars.invoke.channel.http.StandardHttpRequester.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "c67820a1680d10e52853202169a3c471756f550e", "Url": "https://api.github.com/repos/arsframework/ars-core", "Date": "2018-03-13T08:34:48Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.upb.crc901.services.core.HttpBody.parseBodyIntoMap(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (params.containsKey(de.upb.crc901.services.core.HttpBody.coreography)) { coreo = params.get(de.upb.crc901.services.core.HttpBody.coreography).toString(); }else { coreo = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/915/buggy-version/src.de.upb.crc901.services.core.HttpBody.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "ab334fb71a4c0f65d2ae6a24c51d8113529e8b5c", "Url": "https://api.github.com/repos/aminfa/JASE", "Date": "2018-01-21T18:48:56Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.coreographyField) != null) { encoding.append(((de.upb.crc901.services.core.HttpBody.coreography) + \"=\")); encoding.append(this.coreographyField); encoding.append(((\"&\" + (de.upb.crc901.services.core.HttpBody.currentindex)) + \"=\")); encoding.append(this.currentIndexField); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/915/buggy-version/src.de.upb.crc901.services.core.HttpBody.java", "BodyUseAPI": [], "Fixed commit": "ab334fb71a4c0f65d2ae6a24c51d8113529e8b5c", "Url": "https://api.github.com/repos/aminfa/JASE", "Date": "2018-01-21T18:48:56Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Collection<?>.iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (iterator.hasNext()) { return iterator.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1394/buggy-version/src.main.java.com.mitchellbosecke.pebble.extension.core.FirstFilter.java", "BodyUseAPI": ["java.util.Iterator<?>.next()"], "Fixed commit": "ba55fd1554a0e215103d557910c8b486cb4e7396", "Url": "https://api.github.com/repos/PebbleTemplates/pebble", "Date": "2018-05-10T12:44:15Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ch.cyberduck.core.preferences.PreferencesFactory.get().getBoolean(\"sds.delete.dataroom.enable\")) { final ch.cyberduck.core.Path parent = containerService.getContainer(file.getParent()); if (parent.equals(file)) { return this.containsRole(file, file.attributes().getAcl(), SDSPermissionsFeature.MANAGE_ROLE); } return this.containsRole(file, parent.attributes().getAcl(), SDSPermissionsFeature.MANAGE_ROLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3279/buggy-version/dracoon.src.main.java.ch.cyberduck.core.sds.SDSDeleteFeature.java", "BodyUseAPI": [], "Fixed commit": "c6353d8c3d15e27648c63b4459489c6a5c20a2e7", "Url": "https://api.github.com/repos/iterate-ch/cyberduck", "Date": "2018-07-29T09:38:02Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((robot.driveBase) instanceof trclib.TrcDriveBase3D) { robot.driveBase.drive3D_Cartesian(xDrivePower, yDrivePower, turnPower); }else { robot.driveBase.drive2D_Arcade(yDrivePower, turnPower); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7619/buggy-version/src.common.CmdTimedDrive.java", "BodyUseAPI": ["robot.driveBase.drive3D_Cartesian(double,double,double)", "robot.driveBase.drive2D_Arcade(double,double)"], "Fixed commit": "8374ecee1b6021bd0d5991a25fbd1a01675ddd72", "Url": "https://api.github.com/repos/coolioasjulio/Frc2018FirstPowerUp", "Date": "2018-08-17T23:31:47Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hashTable) != null) { hashTable.updateBatches(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3162/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.physical.impl.join.HashJoinProbeTemplate.java", "BodyUseAPI": [], "Fixed commit": "613f1298320c1b25e724ddf10dc7d7fc48305fb4", "Url": "https://api.github.com/repos/HanumathRao/drill", "Date": "2018-01-21T23:52:29Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (cartDTO == null) { cartDTO = getCartDTOByCookie(request); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7308/buggy-version/src.main.java.com.halo.service.CartService.java", "BodyUseAPI": [], "Fixed commit": "bd1e8749ad1bee59c942586de867766eb2526947", "Url": "https://api.github.com/repos/MelloChan/halo-server", "Date": "2018-06-12T08:55:17Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4956/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "a151a1af3c58d66bb113db103a5a7f1516a82cd3", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (property.equals(\"openurp.webapp\")) { b = properties.get(\"openurp.base\"); }else { b = ((properties.get(\"openurp.base\")) + \"/\") + (org.beangle.commons.lang.Strings.replace(property, \"openurp.\", \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1511/buggy-version/app.src.main.java.org.openurp.app.Urp.java", "BodyUseAPI": ["org.beangle.commons.lang.Strings.replace(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "be9b2d6d3db7afdf33ae050fbd79b524ca1c4274", "Url": "https://api.github.com/repos/openurp/api4j", "Date": "2018-09-03T03:52:23Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { return net.hasor.utils.BeanUtils.getDefaultValue(requiredType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1933/buggy-version/hasor-db.src.main.java.net.hasor.db.jdbc.mapper.AbstractRowMapper.java", "BodyUseAPI": [], "Fixed commit": "48eb747095e87bcdd7a12e156fa55bee3abb3d5f", "Url": "https://api.github.com/repos/zycgit/hasor", "Date": "2018-04-04T11:47:05Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((xyz.appmaker.keralarescue.Tools.Misc.statesList.size()) > 0) return xyz.appmaker.keralarescue.Tools.Misc.statesList;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5622/buggy-version/app.src.main.java.xyz.appmaker.keralarescue.Tools.Misc.java", "BodyUseAPI": [], "Fixed commit": "7c3a03e40c6220d47ab75756cc8eaae4c9068c78", "Url": "https://api.github.com/repos/Appmaker-xyz/KeralaRescueRefugeeDB", "Date": "2018-08-19T06:53:33Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(server.getBind().equals(org.terracotta.config.TCConfigurationParser.WILDCARD_IP))) { server.setHost(server.getBind()); }else { server.setHost(\"%i\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6587/buggy-version/tc-config-parser.src.main.java.org.terracotta.config.TCConfigurationParser.java", "BodyUseAPI": ["org.terracotta.config.Server.setHost(java.lang.String)", "org.terracotta.config.Server.setHost(server.getBind())", "org.terracotta.config.Server.getBind()"], "Fixed commit": "d672a8acfecf43d3dfb68936a0aaecc971012248", "Url": "https://api.github.com/repos/mobasherul/terracotta-configuration", "Date": "2018-08-07T11:34:40Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) { setupFirebaseAuth(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/2564/buggy-version/app.src.main.java.com.brandonlee.instagram.Fragments.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "8488c4c5ab427c94d65491c73781b96c6cc60823", "Url": "https://api.github.com/repos/brandonlee0405/GG_corp", "Date": "2018-03-08T07:55:05Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!bEncontrado) { lAdjuntosByVaciones.remove(oM); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6885/buggy-version/src.com.guardias.ProcesarMedicos.java", "BodyUseAPI": [], "Fixed commit": "445828e978c28068f0f21003684f7513bf22bf29", "Url": "https://api.github.com/repos/dnevado/CalendarDoctors", "Date": "2018-10-27T10:58:37Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof java.lang.Integer) this.node.addAttribute(new soot.jimple.infoflow.android.axml.AXmlAttribute<java.lang.Integer>(tname, resourceId, type, ((java.lang.Integer) (obj)), ns, false)); else if (obj instanceof pxb.android.axml.ValueWrapper) { pxb.android.axml.ValueWrapper wrapper = ((pxb.android.axml.ValueWrapper) (obj)); if ((wrapper.raw) != null) this.node.addAttribute(new soot.jimple.infoflow.android.axml.AXmlAttribute<java.lang.String>(tname, resourceId, type, wrapper.raw, ns, false)); else if ((wrapper.type) == (pxb.android.axml.ValueWrapper.ID)) { this.node.addAttribute(new soot.jimple.infoflow.android.axml.AXmlAttribute<java.lang.Integer>(tname, resourceId, type, wrapper.ref, ns, false)); } }else throw new java.lang.RuntimeException(\"Unsupported value type\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8910/buggy-version/soot-infoflow-android.src.soot.jimple.infoflow.android.axml.parsers.AXML20Parser.java", "BodyUseAPI": [], "Fixed commit": "2bc50f4c78b7a4a4f64a8840396e96448366a53d", "Url": "https://api.github.com/repos/AmrAshraf/FlowDroid", "Date": "2018-03-01T12:45:52Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lc.getID()) != (-1)) res.put(lc.getID(), lc);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8910/buggy-version/soot-infoflow-android.src.soot.jimple.infoflow.android.resources.LayoutFileParser.java", "BodyUseAPI": ["soot.jimple.infoflow.android.resources.controls.LayoutControl.getID()", "java.util.Map<java.lang.Integer, soot.jimple.infoflow.android.resources.controls.LayoutControl>.put(lc.getID(),soot.jimple.infoflow.android.resources.controls.LayoutControl)"], "Fixed commit": "2bc50f4c78b7a4a4f64a8840396e96448366a53d", "Url": "https://api.github.com/repos/AmrAshraf/FlowDroid", "Date": "2018-03-01T12:45:52Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sendesign.btmirror.BluetoothHandler.mmSocket) != null) { sendesign.btmirror.BluetoothHandler.mmSocket.connect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3158/buggy-version/app.src.main.java.sendesign.btmirror.BluetoothHandler.java", "BodyUseAPI": [], "Fixed commit": "d1d52272b7d5fa2b44672052dd9430d517503105", "Url": "https://api.github.com/repos/LucasSpeer/BTMirror-App", "Date": "2018-02-12T05:29:09Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.pastaAtual.equals(\"/\")) { this.printErro(\"N\ufffdo pode voltar da pasta raiz\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5137/buggy-version/src.Sistema.java", "BodyUseAPI": [], "Fixed commit": "758ffad41939bc084d31868a11fc1f2aff27ca41", "Url": "https://api.github.com/repos/andrelmlins/sistema_arquivo", "Date": "2018-07-19T03:58:35Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.user.bakingapp.utils.SharedPreferencesUtils.getRecipeFromPreferences(android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (recipe == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5597/buggy-version/app.src.main.java.com.example.user.bakingapp.utils.SharedPreferencesUtils.java", "BodyUseAPI": [], "Fixed commit": "cc52e19a19131f00065d326bd61368afa11b3c5b", "Url": "https://api.github.com/repos/CannibalChoco/BakingApp", "Date": "2018-06-01T07:00:56Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Automaton.transitionTo(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (t1.equals(\"__\")) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1477/buggy-version/T1.Automaton.java", "BodyUseAPI": [], "Fixed commit": "af72a9af9da26bf0757b5ef9d6642bb49b14f729", "Url": "https://api.github.com/repos/jzatta/INE5421", "Date": "2018-05-19T18:31:10Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Automaton.transitionTo(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (t2.equals(\"__\")) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1477/buggy-version/T1.Automaton.java", "BodyUseAPI": [], "Fixed commit": "af72a9af9da26bf0757b5ef9d6642bb49b14f729", "Url": "https://api.github.com/repos/jzatta/INE5421", "Date": "2018-05-19T18:31:10Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((dayCombo.getSelectionModel().getSelectedItem().toString()) != null) && ((monthCombo.getSelectionModel().getSelectedItem().toString()) != null)) && ((timeCombo.getSelectionModel().getSelectedItem().toString()) != null)) { parentController.setDeliveryTime((((((dayCombo.getSelectionModel().getSelectedItem().toString()) + \" \") + (monthCombo.getSelectionModel().getSelectedItem().toString())) + \" \") + (timeCombo.getSelectionModel().getSelectedItem().toString()))); parentController.toFinalPaymentStep(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9604/buggy-version/src.imat.CheckoutController2.java", "BodyUseAPI": ["timeCombo.getSelectionModel().getSelectedItem()", "javafx.scene.control.ComboBox.getSelectionModel()", "javafx.scene.control.ComboBox.getSelectionModel()", "dayCombo.getSelectionModel().getSelectedItem().toString()", "dayCombo.getSelectionModel().getSelectedItem()", "javafx.scene.control.ComboBox.getSelectionModel()", "timeCombo.getSelectionModel().getSelectedItem().toString()", "monthCombo.getSelectionModel().getSelectedItem().toString()", "imat.IMatController.setDeliveryTime((((((dayCombo.getSelectionModel().getSelectedItem().toString()) + \" \") + (monthCombo.getSelectionModel().getSelectedItem().toString())) + \" \") + (timeCombo.getSelectionModel().getSelectedItem().toString())))", "monthCombo.getSelectionModel().getSelectedItem()"], "Fixed commit": "8d4ea13564902d7b66b187812cba0bf6f9fa1e44", "Url": "https://api.github.com/repos/chalmersFFA/MatApp", "Date": "2018-05-26T00:19:41Z"},
{"Line": "=>2390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (organResource == null) logger().error(\"organResource is null...\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4219/buggy-version/phoenix-knowledge-ui.src.main.java.com.ginkgocap.ywxt.knowledge.controller.KnowledgeController.java", "BodyUseAPI": [], "Fixed commit": "218cef34484fde6498b1292e3c13081405bae754", "Url": "https://api.github.com/repos/ximenfeixue/phoenix-knowledge", "Date": "2018-02-01T11:59:40Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((score.get(i)) == (-1337)) { editText.setText(\"\"); }else { editText.setText((\"\" + (score.get(i)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7629/buggy-version/app.src.main.java.com.example.pavle.maumau.Utils.java", "BodyUseAPI": ["android.widget.EditText.setText(java.lang.String)", "java.util.ArrayList<java.lang.Integer>.get(int)"], "Fixed commit": "328b840de5c2c0e51561f62888a8497000973e7c", "Url": "https://api.github.com/repos/pavlejoksovic/MauMau", "Date": "2018-05-27T14:57:04Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<nominee.Nominee>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i >= max_i) { i = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5117/buggy-version/src.nominator.Nominator.java", "BodyUseAPI": [], "Fixed commit": "878df27cd6018ce5ece1dade6475eb1c70bfa74e", "Url": "https://api.github.com/repos/oksanastarazhok/home-assignment-3", "Date": "2018-01-08T22:01:42Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.trafficpolice.dao.EduRecordDao.calculateCostTime(java.lang.Long,java.lang.String,org.trafficpolice.enumeration.EduType)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((totalCostTime != null) && ((totalCostTime.longValue()) >= (ServiceConsts.EDU_CHECK_LEARN_SECONDS.longValue()))) { eduRecord.setIsCompleted(true); eduRecord.setUpdateTime(new java.util.Date()); eduRecordDao.doUpdate(eduRecord); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5452/buggy-version/traffic-police-service.src.main.java.org.trafficpolice.service.impl.QuestionServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "823b4240a9278a770883cffadcadd09b0e9f5086", "Url": "https://api.github.com/repos/zhangxf/traffic-police", "Date": "2018-08-11T05:05:25Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.trafficpolice.dao.EduRecordDao.calculateCostTime(videoRecord.getUserId(),videoRecord.getBatchNum(),EduType.CHECK)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((totalCostTime != null) && ((totalCostTime.longValue()) >= (ServiceConsts.EDU_CHECK_LEARN_SECONDS.longValue()))) { eduRecord.setIsCompleted(true); eduRecord.setUpdateTime(new java.util.Date()); eduRecordDao.doUpdate(eduRecord); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5452/buggy-version/traffic-police-service.src.main.java.org.trafficpolice.service.impl.VideoServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "823b4240a9278a770883cffadcadd09b0e9f5086", "Url": "https://api.github.com/repos/zhangxf/traffic-police", "Date": "2018-08-11T05:05:25Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((studentsToMerge.get(0).getInetAddress()) != null) && (!(studentsToMerge.get(0).getUniqueID().contentEquals(\"no identifier\")))) && (!(studentsToMerge.get(0).getName().contentEquals(\"no name\")))) { java.lang.System.out.println(\"mergeStudentsOnNameAndIP: the present student is probably more complete. we do nothing.\"); }else if ((((!(studentToMerge.getName().contentEquals(\"no name\"))) && (!(studentsToMerge.get(0).getName().contentEquals(\"no name\")))) && ((studentsToMerge.get(0).getInetAddress()) != null)) && ((studentsToMerge.get(0).getInetAddress().toString().length()) > 0)) { students_vector.remove(studentsToMerge.get(0)); students_vector.add(studentToMerge); }else if ((((((studentsToMerge.get(0).getInetAddress()) == null) && ((studentToMerge.getInetAddress()) == null)) && (studentsToMerge.get(0).getName().contentEquals(studentToMerge.getName()))) && (studentsToMerge.get(0).getUniqueID().contentEquals(studentToMerge.getUniqueID()))) && (studentsToMerge.get(0).getStudentID().equals(studentToMerge.getStudentID()))) { java.lang.System.out.println(\"mergeStudentsOnNameAndIP: merging probably equal objects. we do nothing\"); }else { java.lang.System.out.println(\"mergeStudentsOnNameAndIP: implementation not complete.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3281/buggy-version/src.main.java.koeko.students_management.Classroom.java", "BodyUseAPI": ["studentsToMerge.get(0).getName().contentEquals(studentToMerge.getName())", "studentsToMerge.get(0).getName()", "java.util.ArrayList<koeko.students_management.Student>.get(int)", "java.util.ArrayList<koeko.students_management.Student>.get(int)", "java.util.ArrayList<koeko.students_management.Student>.get(int)", "studentsToMerge.get(0).getInetAddress()", "studentsToMerge.get(0).getName()", "studentsToMerge.get(0).getInetAddress()", "studentsToMerge.get(0).getStudentID()", "studentsToMerge.get(0).getInetAddress()", "studentsToMerge.get(0).getName().contentEquals(java.lang.String)", "studentsToMerge.get(0).getInetAddress().toString()", "java.util.ArrayList<koeko.students_management.Student>.get(int)", "java.util.ArrayList<koeko.students_management.Student>.get(int)", "java.util.ArrayList<koeko.students_management.Student>.get(int)", "studentsToMerge.get(0).getStudentID().equals(studentToMerge.getStudentID())", "java.util.ArrayList<koeko.students_management.Student>.get(int)", "studentsToMerge.get(0).getInetAddress().toString().length()", "java.util.ArrayList<koeko.students_management.Student>.get(int)", "studentsToMerge.get(0).getUniqueID()", "java.util.Vector<koeko.students_management.Student>.remove(studentsToMerge.get(0))", "studentsToMerge.get(0).getUniqueID().contentEquals(studentToMerge.getUniqueID())"], "Fixed commit": "1d87fb4f8775a973120eef4111b25710c4a06217", "Url": "https://api.github.com/repos/maximerchrd/KoekoTeacher", "Date": "2018-05-30T19:41:27Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (method.isSynthetic()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7979/buggy-version/src.main.java.com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader.java", "BodyUseAPI": [], "Fixed commit": "458e6ab1ef029de835249828355d99492b3f9baa", "Url": "https://api.github.com/repos/martinkalina/swagger-maven-plugin", "Date": "2018-08-31T10:27:00Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isResultShown) restart.setVisibility(View.VISIBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/5226/buggy-version/app.src.main.java.com.example.android.miwok.QuizActivity.java", "BodyUseAPI": [], "Fixed commit": "64e35125d60d46e05113c50253642a0be35e3b5a", "Url": "https://api.github.com/repos/LironYA/famous_women", "Date": "2018-01-18T14:17:42Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((url.getContent().length()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/3191/buggy-version/NodeCrawler.src.main.java.com.iflide.crawler.crawler.PagePipeline.java", "BodyUseAPI": [], "Fixed commit": "09b14109adf76975d5415d9cf0773009a192219e", "Url": "https://api.github.com/repos/wzes/WordCrawler", "Date": "2018-09-01T05:00:24Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (qb != null) { request.setAttribute(\"QuestionBean\", qb); dispatcher = request.getRequestDispatcher(quiz); dispatcher.forward(request, response); }else { dispatcher = request.getRequestDispatcher(landing); dispatcher.forward(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4896/buggy-version/quiz.src.web.servlets.QuizManagement.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,web.bean.QuestionBean)"], "Fixed commit": "ea7e9e95a103532473a186b504bcab6a2faae77b", "Url": "https://api.github.com/repos/domdadon/THI_Project_Quiz", "Date": "2018-07-14T10:02:20Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getLeftChild()) != null) { addNode(value, node.getLeftChild()); }else { node.setLeftChild(new com.elliott.algorithms.trees.Node(value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4578/buggy-version/src.main.java.com.elliott.algorithms.trees.BinaryTree.java", "BodyUseAPI": ["com.elliott.algorithms.trees.Node.setLeftChild(com.elliott.algorithms.trees.Node)", "com.elliott.algorithms.trees.BinaryTree.addNode(int,com.elliott.algorithms.trees.Node)", "com.elliott.algorithms.trees.Node.getLeftChild()"], "Fixed commit": "668a0bb8154a334b0354fe1dd8c1c6ef2cf5ae94", "Url": "https://api.github.com/repos/tomelliott88/tom_algorithms", "Date": "2018-07-05T22:20:43Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getRightChild()) != null) { addNode(value, node.getRightChild()); }else { node.setRightChild(new com.elliott.algorithms.trees.Node(value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4578/buggy-version/src.main.java.com.elliott.algorithms.trees.BinaryTree.java", "BodyUseAPI": ["com.elliott.algorithms.trees.BinaryTree.addNode(int,com.elliott.algorithms.trees.Node)", "com.elliott.algorithms.trees.Node.getRightChild()", "com.elliott.algorithms.trees.Node.setRightChild(com.elliott.algorithms.trees.Node)"], "Fixed commit": "668a0bb8154a334b0354fe1dd8c1c6ef2cf5ae94", "Url": "https://api.github.com/repos/tomelliott88/tom_algorithms", "Date": "2018-07-05T22:20:43Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_caller) != null) { _caller.recycle(); _caller = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1982/buggy-version/kk-app.src.main.java.cn.kkmofang.app.Controller.java", "BodyUseAPI": [], "Fixed commit": "c1e7393b43ccc683723d54804c004511efb2daf9", "Url": "https://api.github.com/repos/hailongz/kk-app", "Date": "2018-05-29T10:03:55Z"},
{"Line": "=>1048", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.logixcess.smarttaPATHpplication.Fragments.MapFragment.mOrderList) == null) passengers_count = 0; else passengers_count = com.logixcess.smarttaPATHpplication.Fragments.MapFragment.mOrderList.size();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/7738/buggy-version/app.src.main.java.com.logixcess.smarttaPATHpplication.Fragments.MapFragment.java", "BodyUseAPI": [], "Fixed commit": "42f497ba9b5468f6bc8612cafa59cbe313dd8d32", "Url": "https://api.github.com/repos/Nomanghous/SmartTaxi", "Date": "2018-09-06T10:07:44Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (i == 0) { cmf.initiateSpecialCases(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/6448/buggy-version/src.model.gen.AlgoBackTracker.java", "BodyUseAPI": [], "Fixed commit": "af6dc2b9df914e73fb3afef442d26ddb880bc65d", "Url": "https://api.github.com/repos/FauconFan/Labyrinthe3d", "Date": "2018-04-04T13:30:16Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (colour == 1) { if (((((((scoreHori >= 2) && (scoreVert == 2)) || ((scoreHori >= 2) && (scoreDiag >= 2))) || ((scoreHori >= 2) && (scoreReverse >= 2))) || ((scoreVert >= 2) && (scoreDiag >= 2))) || ((scoreVert >= 2) && (scoreReverse >= 2))) || ((scoreDiag >= 2) && (scoreReverse >= 2))) { return 4 * colour; } }else { if ((((((((-scoreHori) >= 2) && ((-scoreVert) == 2)) || (((-scoreHori) >= 2) && ((-scoreDiag) >= 2))) || (((-scoreHori) >= 2) && ((-scoreReverse) >= 2))) || (((-scoreVert) >= 2) && ((-scoreDiag) >= 2))) || (((-scoreVert) >= 2) && ((-scoreReverse) >= 2))) || (((-scoreDiag) >= 2) && ((-scoreReverse) >= 2))) { return 4 * colour; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8867/buggy-version/src.model.Board.java", "BodyUseAPI": [], "Fixed commit": "d26a8f1c1ab192f7d5ed7404138e0d42c90f567c", "Url": "https://api.github.com/repos/zonggen/gomoku", "Date": "2018-01-29T05:11:51Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.O)) { getContext().startForegroundService(service); }else { getContext().startService(service); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/1052/buggy-version/08-capstone-build.app.src.main.java.fyi.jackson.activejournal.fragment.RecordingFragment.java", "BodyUseAPI": [], "Fixed commit": "a371c12fa8f80da1b45817656f3db30bb2b919d4", "Url": "https://api.github.com/repos/David-Jackson/Android-Nanodegree", "Date": "2018-10-15T19:53:33Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (element instanceof com.nvlad.yii2support.objectfactory.PhpPsiElement) { com.nvlad.yii2support.objectfactory.PhpClass widgetClass = com.nvlad.yii2support.common.ClassUtils.getPhpClassUniversal(methodRef.getProject(), ((com.nvlad.yii2support.objectfactory.PhpPsiElement) (element))); if (widgetClass != null) { return widgetClass; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/4280/buggy-version/src.com.nvlad.yii2support.objectfactory.ObjectFactoryUtils.java", "BodyUseAPI": [], "Fixed commit": "aa33c084ad849a1a89896f63a71b50b22b50f71b", "Url": "https://api.github.com/repos/nvlad/yii2support", "Date": "2018-10-10T12:27:12Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((expression.getName()) != null) { syntheticNonterminalNameGenerator.extend(expression.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9325/buggy-version/src.name.martingeisse.mapag.grammar.canonicalization.ProductionCanonicalizer.java", "BodyUseAPI": ["name.martingeisse.mapag.grammar.canonicalization.Expression.getName()", "name.martingeisse.mapag.grammar.canonicalization.SyntheticNonterminalNameGenerator.extend(expression.getName())"], "Fixed commit": "7d64fc9d22463c8be74a1d0fab641b7c9412f9ad", "Url": "https://api.github.com/repos/MartinGeisse/mapag", "Date": "2018-02-11T12:22:23Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((expression.getName()) != null) { syntheticNonterminalNameGenerator.extend(expression.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9325/buggy-version/src.name.martingeisse.mapag.grammar.canonicalization.ProductionCanonicalizer.java", "BodyUseAPI": ["name.martingeisse.mapag.grammar.canonicalization.Expression.getName()", "name.martingeisse.mapag.grammar.canonicalization.SyntheticNonterminalNameGenerator.extend(expression.getName())"], "Fixed commit": "7d64fc9d22463c8be74a1d0fab641b7c9412f9ad", "Url": "https://api.github.com/repos/MartinGeisse/mapag", "Date": "2018-02-11T12:22:23Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((expression.getName()) != null) { syntheticNonterminalNameGenerator.extend(expression.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9325/buggy-version/src.name.martingeisse.mapag.grammar.canonicalization.ProductionCanonicalizer.java", "BodyUseAPI": ["name.martingeisse.mapag.grammar.canonicalization.SyntheticNonterminalNameGenerator.extend(expression.getName())", "name.martingeisse.mapag.grammar.canonicalization.Expression.getName()"], "Fixed commit": "7d64fc9d22463c8be74a1d0fab641b7c9412f9ad", "Url": "https://api.github.com/repos/MartinGeisse/mapag", "Date": "2018-02-11T12:22:23Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (extension == null) { throw new java.lang.IllegalArgumentException(\"extension cannot be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9325/buggy-version/src.name.martingeisse.mapag.grammar.canonicalization.SyntheticNonterminalNameGenerator.java", "BodyUseAPI": [], "Fixed commit": "7d64fc9d22463c8be74a1d0fab641b7c9412f9ad", "Url": "https://api.github.com/repos/MartinGeisse/mapag", "Date": "2018-02-11T12:22:23Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((o != null) && (!(o.isEmpty()))) { com.andrea.pcstatus.SingletonBatteryStatus.getInstance().setJsonStr(o); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/8926/buggy-version/app.src.main.java.com.andrea.pcstatus.connectionPackage.WiFiController.java", "BodyUseAPI": ["com.andrea.pcstatus.SingletonBatteryStatus.getInstance().setJsonStr(java.lang.String)"], "Fixed commit": "dbbcced9a0ee5703081bb827cdcf1515348482f6", "Url": "https://api.github.com/repos/andrea9293/pcstatus-android-client", "Date": "2018-05-06T16:08:51Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (3 == (dealType)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V166/9548/buggy-version/app.src.main.java.cn.shomes.tfblue.FormActivity.java", "BodyUseAPI": [], "Fixed commit": "fbcee06d4c54014c9093de20d36fbd32c4bf29b2", "Url": "https://api.github.com/repos/kayoxu/TFBlue", "Date": "2018-10-29T07:32:30Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["RealmObjectFlow.realm.where(in.myinnos.surveylib.models.RealmQuestionAnswersModel.class).findAll()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((!(r.get(i).getAnswer().equals(\"\"))) && ((r.get(i).getAnswer()) != null)) && (!(r.get(i).getAnswer().equals(\"Choose Date\")))) { realmQuestionAnswersModel.setQuestion(r.get(i).getQuestion()); realmQuestionAnswersModel.setAnswer(r.get(i).getAnswer()); realmQuestionAnswersModelArrayList.add(realmQuestionAnswersModel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8968/buggy-version/surveylib.src.main.java.in.myinnos.surveylib.fragment.FragmentEnd.java", "BodyUseAPI": ["in.myinnos.surveylib.models.RealmQuestionAnswersModel.setQuestion(r.get(i).getQuestion())", "io.realm.RealmResults<in.myinnos.surveylib.models.RealmQuestionAnswersModel>.get(int)", "io.realm.RealmResults<in.myinnos.surveylib.models.RealmQuestionAnswersModel>.get(int)", "r.get(i).getAnswer()", "in.myinnos.surveylib.models.RealmQuestionAnswersModel.setAnswer(r.get(i).getAnswer())", "r.get(i).getQuestion()"], "Fixed commit": "e09ee8b22ab063846398742c2b76f77f36edc716", "Url": "https://api.github.com/repos/myinnos/FormSurveys", "Date": "2018-08-02T11:28:03Z"},
{"Line": "=>2216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (common.Config.iq) { findSignalPanel.setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6728/buggy-version/src.gui.SourceTab.java", "BodyUseAPI": [], "Fixed commit": "047b61e70622b430d505ac24183826de327f5e6f", "Url": "https://api.github.com/repos/ac2cz/FoxTelem", "Date": "2018-01-19T23:30:59Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (next != (value.length())) { w.write(value, next, (((value.length()) - next) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7630/buggy-version/src.main.java.io.usethesource.vallang.impl.primitive.StringValue.java", "BodyUseAPI": ["java.lang.String.length()", "java.io.Writer.write(java.lang.String,int,int)"], "Fixed commit": "7aeff11edf189f22e74336291e320e2e22338a79", "Url": "https://api.github.com/repos/usethesource/vallang", "Date": "2018-03-25T14:12:45Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBarrageViewBeanList) != null) { mBarrageViewBeanList.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3183/buggy-version/app.src.main.java.com.ywj.barrageviewdemo.BarrageView.java", "BodyUseAPI": [], "Fixed commit": "f094a8a621893f061a107bfec9ad8c9142a2129d", "Url": "https://api.github.com/repos/yanerchuang/BarrageViewDemo", "Date": "2018-08-11T02:45:58Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.ViewFlipper.getDisplayedChild()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((position + 1) >= (org.xwiki.android.sync.auth.AuthenticatorActivity.orderOfFlippers.size())) { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4693/buggy-version/app.src.main.java.org.xwiki.android.sync.auth.AuthenticatorActivity.java", "BodyUseAPI": [], "Fixed commit": "78d195661bf90f4ee6ec96fbfeae05b8dbccbf00", "Url": "https://api.github.com/repos/xwiki-contrib/android-authenticator", "Date": "2018-07-09T11:16:38Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (route == null) { mapView.displayMessage(\"No route selected.\"); ticket.com.tickettoridegames.utility.model.Route routeStub = new ticket.com.tickettoridegames.utility.model.Route(new ticket.com.tickettoridegames.utility.model.City(\"a\"), new ticket.com.tickettoridegames.utility.model.City(\"b\"), length, type); clientModel.getMyActiveGame().claimRoute(clientModel.getMyPlayer().getId(), routeStub); }else { type = route.getType(); length = route.getLength(); clientModel.getMyActiveGame().claimRoute(clientModel.getMyPlayer().getId(), route); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6348/buggy-version/app.src.main.java.ticket.com.tickettoridegames.client.presenter.MapPresenter.java", "BodyUseAPI": ["ticket.com.tickettoridegames.utility.model.Route.getLength()", "clientModel.getMyActiveGame().claimRoute(clientModel.getMyPlayer().getId(),ticket.com.tickettoridegames.utility.model.Route)", "ticket.com.tickettoridegames.utility.model.Route.getType()"], "Fixed commit": "0336a2de5bf3661627a9079d2d5b2bbd98c3939f", "Url": "https://api.github.com/repos/DavidROwen/TicketToRideGame", "Date": "2018-07-26T00:59:54Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (bundle != null) resIntent.putExtras(bundle);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1704/buggy-version/app.src.main.java.com.android.ronoam.taps.GameActivity.java", "BodyUseAPI": ["android.content.Intent.putExtras(android.os.Bundle)"], "Fixed commit": "db6540c48b3311d59be46f9a76840417b9fca8ef", "Url": "https://api.github.com/repos/noamtayri/Taps", "Date": "2018-08-13T12:46:56Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (closed) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7723/buggy-version/freemarker-servlet.src.main.java.org.apache.freemarker.servlet.jsp.TagDirectiveModel.java", "BodyUseAPI": [], "Fixed commit": "bc9edc0e98caf59112ee07bc0d72b6676267fdc4", "Url": "https://api.github.com/repos/apache/freemarker", "Date": "2018-02-04T12:07:22Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vids.size()) == 0) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1258/buggy-version/app.src.main.java.com.hitstreamr.hitstreamrbeta.VideoResultAdapter.java", "BodyUseAPI": [], "Fixed commit": "cbf30f01d27583f0feb0c5454cd8bc0489bec38c", "Url": "https://api.github.com/repos/HitStreamr/BETA-app", "Date": "2018-10-15T19:40:14Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.joget.apps.datalist.service.DataListDecorator.formatColumn(org.joget.apps.datalist.model.DataListColumn,java.lang.Object,java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (text != null) { if (!(MediaTypeEnum.HTML.equals(tableModel.getMedia()))) { text = org.joget.commons.util.StringUtil.stripAllHtmlTag(text, false); text = org.apache.commons.lang.StringEscapeUtils.unescapeHtml(text); }else { if (text.equals(org.joget.commons.util.StringUtil.stripAllHtmlTag(text, false))) { text = org.joget.commons.util.StringUtil.escapeString(text, StringUtil.TYPE_NL2BR, null); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5828/buggy-version/wflow-core.src.main.java.org.joget.apps.datalist.service.DataListDecorator.java", "BodyUseAPI": ["org.joget.commons.util.StringUtil.stripAllHtmlTag(java.lang.String,boolean)"], "Fixed commit": "0c151f31f4e77aa7d6b9f0775ae327f6257c009e", "Url": "https://api.github.com/repos/jogetworkflow/jw-community", "Date": "2018-01-08T04:57:33Z"},
{"Line": "=>424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((calculation.get_personalInfo().getMage()) > 60) { return 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9395/buggy-version/Quotation.src.main.java.org.arpicoinsurance.groupit.main.validation.Validation.java", "BodyUseAPI": [], "Fixed commit": "e37658d4572e464e5fc9b45909eed0fff35924db", "Url": "https://api.github.com/repos/arpicoinsuranceit/Quotation-v1", "Date": "2018-04-18T09:46:58Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (validateInvpSFPO().equals(2)) { return \"Max Age is 60 for get SFPO\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9395/buggy-version/Quotation.src.main.java.org.arpicoinsurance.groupit.main.validation.Validation.java", "BodyUseAPI": [], "Fixed commit": "e37658d4572e464e5fc9b45909eed0fff35924db", "Url": "https://api.github.com/repos/arpicoinsuranceit/Quotation-v1", "Date": "2018-04-18T09:46:58Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.seanblonien.cryptokit.CryptoAsset>.get(holder.getLayoutPosition())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((a.getPrice_usd()) < 0.1) holder.assetPriceUSD.setText(smallDollarFormat.format(a.getPrice_usd())); else holder.assetPriceUSD.setText(dollarFormat.format(a.getPrice_usd()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9044/buggy-version/app.src.main.java.com.seanblonien.cryptokit.RVAdapter.java", "BodyUseAPI": ["java.text.DecimalFormat.format(a.getPrice_usd())", "com.seanblonien.cryptokit.CryptoAsset.getPrice_usd()", "android.widget.TextView.setText(java.lang.String)", "java.text.DecimalFormat.format(a.getPrice_usd())", "com.seanblonien.cryptokit.CryptoAsset.getPrice_usd()", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "55d7b1187a8fe6c26805cba89915faf4e312edac", "Url": "https://api.github.com/repos/sblonien/CryptoKit", "Date": "2018-04-25T21:35:58Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newhealth < 0.5) { p.setHealth(0); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3650/buggy-version/src.de.flori4nk.fakehax.fakehacks.modules.Velocity.java", "BodyUseAPI": [], "Fixed commit": "39c940ecbb69bc3f2b69e44827ae181dde1c5600", "Url": "https://api.github.com/repos/flori4nk/FakeHax", "Date": "2018-04-28T17:10:37Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Locale.getLanguage()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lang.equals(\"es\")) cookieLocaleResolver.setDefaultLocale(new java.util.Locale(\"es_MX\")); else cookieLocaleResolver.setDefaultLocale(new java.util.Locale(\"en_US\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5860/buggy-version/src.main.java.com.app.config.WebConfig.java", "BodyUseAPI": [], "Fixed commit": "c38920f7541f35340e6018dae40ad388b505d921", "Url": "https://api.github.com/repos/David8812/notebookAddress", "Date": "2018-05-08T19:08:01Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (aHPrice == 0) { aHPrice = i.getMostRecentAHPrice(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1582/buggy-version/src.merch.Main.java", "BodyUseAPI": [], "Fixed commit": "19f6c89a06dc5ef9b8de852e1d268480dba3c766", "Url": "https://api.github.com/repos/hutcheson8/Spiral-Knights-Merchandising", "Date": "2018-09-10T03:59:31Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (CloudPlatform.CLOUD_FOUNDRY.isActive(environment)) { java.util.Map<java.lang.String, java.lang.Object> map = new java.util.HashMap<>(); map.put(\"spring.boot.admin.client.auto-deregistration\", true); org.springframework.core.env.MapPropertySource propertySource = new org.springframework.core.env.MapPropertySource(\"cloudConfigPropertySource\", map); environment.getPropertySources().addFirst(propertySource); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7121/buggy-version/spring-boot-admin-client.src.main.java.de.codecentric.boot.admin.client.config.CloudFoundryEnvironmentPostProcessor.java", "BodyUseAPI": ["environment.getPropertySources().addFirst(org.springframework.core.env.MapPropertySource)", "org.springframework.core.env.ConfigurableEnvironment.getPropertySources()"], "Fixed commit": "e6ab7dd2d0c1b381fd67d614d5d6a8f55a2e2810", "Url": "https://api.github.com/repos/tetsushiawano/spring-boot-admin", "Date": "2018-02-28T12:11:58Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (new java.io.File(((file.getPath()) + \".txt\")).exists()) { bar.strainGauges.add(new net.relinc.libraries.application.StrainGaugeOnBar(((file.getPath()) + \".txt\"), dist, specificNameTF.getText())); }else { bar.strainGauges.add(new net.relinc.libraries.application.StrainGaugeOnBar(((file.getPath()) + \".json\"), dist, specificNameTF.getText())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3919/buggy-version/DataProcessor.src.net.relinc.processor.controllers.StrainGaugeController.java", "BodyUseAPI": ["bar.strainGauges.add(net.relinc.libraries.application.StrainGaugeOnBar)", "java.io.File.getPath()", "java.io.File.getPath()", "bar.strainGauges.add(net.relinc.libraries.application.StrainGaugeOnBar)"], "Fixed commit": "910d13fa0c8a6daaac079be3cd8a981c3840b52e", "Url": "https://api.github.com/repos/relinc/SurePulse", "Date": "2018-10-18T03:43:46Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count == 0) { com.creativemd.littletiles.common.utils.grid.LittleGridContext.getMax().set(stack.getTagCompound()); count = ((int) ((value) / (com.creativemd.littletiles.common.utils.grid.LittleGridContext.getMax().minimumTileSize))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8146/buggy-version/src.main.java.com.creativemd.littletiles.common.ingredients.BlockIngredient.java", "BodyUseAPI": [], "Fixed commit": "4ae54056c83387f3b343ec9ffd88f5c5e91f8873", "Url": "https://api.github.com/repos/CreativeMD/LittleTiles", "Date": "2018-06-02T07:49:49Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t >= (rightTimes[((rightTimes.length) - 1)])) return rightMoments[((rightMoments.length) - 1)];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/574/buggy-version/src.robot.pathfinder.TankDriveTrajectory.java", "BodyUseAPI": [], "Fixed commit": "fbe4890eade18a23fb52c8c978a7dae165dd265e", "Url": "https://api.github.com/repos/Arctos6135/RobotPathfinder", "Date": "2018-05-02T02:49:21Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t >= (leftTimes[((leftTimes.length) - 1)])) return leftMoments[((leftMoments.length) - 1)];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/574/buggy-version/src.robot.pathfinder.TankDriveTrajectory.java", "BodyUseAPI": [], "Fixed commit": "fbe4890eade18a23fb52c8c978a7dae165dd265e", "Url": "https://api.github.com/repos/Arctos6135/RobotPathfinder", "Date": "2018-05-02T02:49:21Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((mediaDescriptor != null) && ((mediaDescriptor.equals(\"null\")) || (mediaDescriptor.trim().isEmpty()))) { mediaDescriptor = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1698/buggy-version/src.main.java.kc.ebenezer.rest.UserResource.java", "BodyUseAPI": [], "Fixed commit": "9ab28349e4a842eefa8a2b02313c45e7fc8f6603", "Url": "https://api.github.com/repos/eb3nezer/kidsclub", "Date": "2018-07-13T23:45:34Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (line.startsWith(\" \\t\")) { line = line.replaceFirst(\" \\t\", \"\\t\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5229/buggy-version/modules.util.source-formatter.src.main.java.com.liferay.source.formatter.checks.JSONWhitespaceCheck.java", "BodyUseAPI": ["java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "aa04260d184c1b7924a65d5ab4bb8a7e80959700", "Url": "https://api.github.com/repos/petershin/liferay-portal", "Date": "2018-05-04T19:37:27Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gargoyle.netsquares.model.Game.getCurrentPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (currentPlayer == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7785/buggy-version/src.main.java.gargoyle.netsquares.model.Game.java", "BodyUseAPI": [], "Fixed commit": "6e1b562e4eb0c50052b56ea6b01ea7ce64d2ad9c", "Url": "https://api.github.com/repos/lure0xaos/NetSquares2", "Date": "2018-03-02T15:19:42Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(game.isState(GameState.GAME))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7785/buggy-version/src.main.java.gargoyle.netsquares.ui.NSBoard.java", "BodyUseAPI": [], "Fixed commit": "6e1b562e4eb0c50052b56ea6b01ea7ce64d2ad9c", "Url": "https://api.github.com/repos/lure0xaos/NetSquares2", "Date": "2018-03-02T15:19:42Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!bus) java.lang.System.out.println(\"\\nStudent Search:\"); else java.lang.System.out.println(\"\\nStudent Search With Bus:\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4600/buggy-version/SchoolSearch.java", "BodyUseAPI": [], "Fixed commit": "fb61387a67b3cd8e620c347d79b9c1de94766f70", "Url": "https://api.github.com/repos/JakeVz/CSC365-Lab1", "Date": "2018-09-26T20:30:40Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (numStudents != 0) java.lang.System.out.println((((\"\\nAverage GPA for grade \" + grade) + \" is: \") + (((double) (GPATot)) / numStudents)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4600/buggy-version/SchoolSearch.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "fb61387a67b3cd8e620c347d79b9c1de94766f70", "Url": "https://api.github.com/repos/JakeVz/CSC365-Lab1", "Date": "2018-09-26T20:30:40Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event == null) || ((event.foodValues) == null)) { HealthHungerTweaks.Log.fatal(\"Food values is null! This should not happen! Skipped applying Satiated buff!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7101/buggy-version/src.main.java.net.cerulan.healthhungertweaks.handler.HealthHungerHandler.java", "BodyUseAPI": [], "Fixed commit": "1d78ebc607d1695f34a0fa9680faeb3ab33e5bb8", "Url": "https://api.github.com/repos/CerulanLumina/HealthHungerTweaks", "Date": "2018-05-10T14:03:17Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((garageName) == null) || ((capacity) < 0)) { throw new java.lang.NumberFormatException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4697/buggy-version/src.com.github.DanielAxelsson4.Garage.MVVM.ConsoleGarageHandler.java", "BodyUseAPI": [], "Fixed commit": "4a0bb73e5425d887d5418126f6558eadb1e735bd", "Url": "https://api.github.com/repos/DanielAxelsson4/Garage", "Date": "2018-03-05T12:50:21Z"},
{"Line": "=>849", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isBoss) { stun = GameInfo.STUN_DURATION_BOSS; }else { stun = GameInfo.STUN_DURATION; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5987/buggy-version/core.src.com.appatstudio.snakerpg.Enemy.java", "BodyUseAPI": [], "Fixed commit": "5c8eeddf82c1dd9cf52cd8c81c859ee4dcb90a21", "Url": "https://api.github.com/repos/PatrykSukiennik/SnakeRPG", "Date": "2018-07-23T08:01:49Z"},
{"Line": "=>865", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isBoss) { poison = GameInfo.POISON_DURATION_BOSS; }else { poison = GameInfo.POISON_DURATION; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5987/buggy-version/core.src.com.appatstudio.snakerpg.Enemy.java", "BodyUseAPI": [], "Fixed commit": "5c8eeddf82c1dd9cf52cd8c81c859ee4dcb90a21", "Url": "https://api.github.com/repos/PatrykSukiennik/SnakeRPG", "Date": "2018-07-23T08:01:49Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((Player.robotMemory.get(unit.id()).pathToTarget) != null) && ((Player.robotMemory.get(unit.id()).pathToTarget.size()) == 0)) { Player.robotMemory.get(unit.id()).reachedDest = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1788/buggy-version/niels-java.RangerController.java", "BodyUseAPI": ["bc.Unit.id()", "Player.robotMemory.get(unit.id())"], "Fixed commit": "3855b0def63b0e175d02fadcd2f588f4130e6af3", "Url": "https://api.github.com/repos/patil215/battlecode-2018", "Date": "2018-01-14T22:58:47Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.abs(int)", "java.lang.Math.abs(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ldividend == 0) || (ldividend < ldivisor)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2954/buggy-version/src.main.java.com.chris.offer.Divide.java", "BodyUseAPI": [], "Fixed commit": "37f8df4893968185c5986c78e7719ff726d17e34", "Url": "https://api.github.com/repos/XiaoheXu/hotchpotch", "Date": "2018-08-13T13:10:58Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.abs(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ldivisor == 0) return java.lang.Integer.MAX_VALUE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2954/buggy-version/src.main.java.com.chris.offer.Divide.java", "BodyUseAPI": [], "Fixed commit": "37f8df4893968185c5986c78e7719ff726d17e34", "Url": "https://api.github.com/repos/XiaoheXu/hotchpotch", "Date": "2018-08-13T13:10:58Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.activity.CropActivity.findPoints()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (points != null) { mSelectionImageView.setPoints(points); }else { com.owncloud.android.lib.common.utils.Log_OC.d(com.owncloud.android.ui.activity.CropActivity.TAG, getResources().getString(R.string.no_contour_found)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1860/buggy-version/src.com.owncloud.android.ui.activity.CropActivity.java", "BodyUseAPI": ["com.owncloud.android.ui.QuadrilateralSelectionImageView.setPoints(java.util.List<android.graphics.PointF>)"], "Fixed commit": "9d53d7e2f91e4e5519c9402f17fda1b1d11ec8b9", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-03-12T06:43:04Z"},
{"Line": "=>679", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((msg.qos) != 0) { mTimer.schedule(timeoutTask, io.yunba.java.core.MQTTStack.CALLBACK_TIMEOUT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6227/buggy-version/src.io.yunba.java.core.MQTTStack.java", "BodyUseAPI": [], "Fixed commit": "244331190dc926445414e4695bada321ba940a4b", "Url": "https://api.github.com/repos/yunba/yunba-java-sdk", "Date": "2018-04-02T03:51:31Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (opts.has(\"qos\")) { try { qos = opts.getInt(\"qos\"); } catch (org.codehaus.jettison.json.JSONException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6227/buggy-version/src.io.yunba.java.manager.YunBaManager.java", "BodyUseAPI": ["org.codehaus.jettison.json.JSONObject.getInt(java.lang.String)"], "Fixed commit": "244331190dc926445414e4695bada321ba940a4b", "Url": "https://api.github.com/repos/yunba/yunba-java-sdk", "Date": "2018-04-02T03:51:31Z"},
{"Line": "=>644", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sortBy == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1427/buggy-version/store.src.java.com.zimbra.cs.index.SearchParams.java", "BodyUseAPI": [], "Fixed commit": "1f72f9982084b806e1d574bb086dc2d209459e25", "Url": "https://api.github.com/repos/Zimbra/zm-mailbox", "Date": "2018-09-06T16:33:35Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lane.equals(\"merge_to_left\")) { turn = net.osmand.router.TurnType.C; }else if (lane.equals(\"merge_to_right\")) { turn = net.osmand.router.TurnType.C; }else if ((lane.equals(\"none\")) || (lane.equals(\"through\"))) { turn = net.osmand.router.TurnType.C; }else if (lane.equals(\"slight_right\")) { turn = net.osmand.router.TurnType.TSLR; }else if (lane.equals(\"slight_left\")) { turn = net.osmand.router.TurnType.TSLL; }else if (lane.equals(\"right\")) { turn = net.osmand.router.TurnType.TR; }else if (lane.equals(\"left\")) { turn = net.osmand.router.TurnType.TL; }else if (lane.equals(\"sharp_right\")) { turn = net.osmand.router.TurnType.TSHR; }else if (lane.equals(\"sharp_left\")) { turn = net.osmand.router.TurnType.TSHL; }else if (lane.equals(\"reverse\")) { turn = net.osmand.router.TurnType.TU; }else { turn = net.osmand.router.TurnType.C; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/379/buggy-version/OsmAnd-java.src.net.osmand.router.TurnType.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "402d4f4d60434e339f10f76184577873bfd9d6f6", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2018-05-25T22:02:57Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (friend.getRelationship().get(\"friends\").isEmpty()) friend.getRelationship().remove(\"friends\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/708/buggy-version/MiniNet.src.relations.ChildFriend.java", "BodyUseAPI": ["relations.Person.getRelationship()", "friend.getRelationship().remove(java.lang.String)"], "Fixed commit": "5cf729a2a193b2329be42a8d6ee30437448c3a7a", "Url": "https://api.github.com/repos/rmit-s3673099-YILEI-XU/Assignment2", "Date": "2018-05-15T14:12:20Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (classmate.getRelationship().get(\"classmates\").isEmpty()) classmate.getRelationship().remove(\"classmates\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/708/buggy-version/MiniNet.src.relations.Classmate.java", "BodyUseAPI": ["classmate.getRelationship().remove(java.lang.String)", "relations.Person.getRelationship()"], "Fixed commit": "5cf729a2a193b2329be42a8d6ee30437448c3a7a", "Url": "https://api.github.com/repos/rmit-s3673099-YILEI-XU/Assignment2", "Date": "2018-05-15T14:12:20Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["item.getItemStack().getItemMeta()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(pm.hasColor())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/672/buggy-version/plugin.src.main.java.net.aufdemrand.denizen.objects.properties.item.ItemColor.java", "BodyUseAPI": [], "Fixed commit": "4007e56b2690493ea6f9030d032443e55a61ea4e", "Url": "https://api.github.com/repos/mergu/Denizen", "Date": "2018-06-14T00:07:18Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) { if ((nums[i]) > (nums[(i + 1)])) return i; }else if (i == ((nums.length) - 1)) { if ((nums[i]) > (nums[(i - 1)])) { return i; } }else { if (((nums[i]) > (nums[(i - 1)])) && ((nums[i]) > (nums[(i + 1)]))) { return i; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9413/buggy-version/src.main.java.ink.lichen.leecode.medium.FindPeakElement.java", "BodyUseAPI": [], "Fixed commit": "bb8044e761e9621100bf43c28a87f23bb02eeafd", "Url": "https://api.github.com/repos/lllichen/leecode", "Date": "2018-10-25T02:58:03Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.h2.command.dml.Select.query(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rows.isLazy()) { for (rowCount = 2; rows.next(); rowCount++) { } }else { rowCount = rows.getRowCount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6313/buggy-version/h2.src.main.org.h2.command.dml.MergeUsing.java", "BodyUseAPI": ["org.h2.result.ResultInterface.getRowCount()", "org.h2.result.ResultInterface.next()"], "Fixed commit": "55a5e522b371064a453cdecdc54751565dff2766", "Url": "https://api.github.com/repos/katzyn/h2database", "Date": "2018-05-28T04:47:46Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (meal.isNew()) { controller.create(meal); }else { controller.update(meal, meal.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2962/buggy-version/src.main.java.ru.javawebinar.topjava.web.MealServlet.java", "BodyUseAPI": ["ru.javawebinar.topjava.web.meal.MealRestController.update(ru.javawebinar.topjava.model.Meal,meal.getId())", "ru.javawebinar.topjava.web.meal.MealRestController.create(ru.javawebinar.topjava.model.Meal)", "ru.javawebinar.topjava.model.Meal.getId()"], "Fixed commit": "1afd475873e130c83f05571d83bc9875cdebb307", "Url": "https://api.github.com/repos/Jeck5/topjava", "Date": "2018-03-10T12:37:41Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((mSelectedYear) % 4) == 0) && (((mSelectedYear) % 100) != 0)) || (((mSelectedYear) % 400) == 0)) { getDayData(29); }else { getDayData(28); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/578/buggy-version/mainmodule.src.main.java.com.ubt.mainmodule.user.profile.edit.BirthdaySelectDialog.java", "BodyUseAPI": [], "Fixed commit": "dd1dc69437ba27cef52398994b1217a3d4fc35ab", "Url": "https://api.github.com/repos/smallhorse/EbotEnMainModule", "Date": "2018-07-04T10:02:44Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(event.isCommand())) event.setMessage((\"[TEST]\" + (event.getMessage())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7237/buggy-version/multichat.src.main.java.xyz.olivermartin.multichat.bungee.Events.java", "BodyUseAPI": ["net.md_5.bungee.api.event.ChatEvent.setMessage((\"[TEST]\" + (event.getMessage())))", "net.md_5.bungee.api.event.ChatEvent.getMessage()"], "Fixed commit": "1337af8e491af5fe1c01ba690aa277af3c13d516", "Url": "https://api.github.com/repos/MultiChat/Development", "Date": "2018-09-20T13:46:49Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (input.equals(\"q\")) { bot.announceOfftime(); java.lang.System.exit((-9)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6725/buggy-version/src.main.java.Main.java", "BodyUseAPI": [], "Fixed commit": "0a9fb25960297bcd8af3ab6b69fa2a73b854e250", "Url": "https://api.github.com/repos/Lembox/Lembot", "Date": "2018-07-22T22:10:14Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i != 0) { android.util.Log.d(com.vladnamik.developer.movieinformationviewer.components.fragments.MovieListFragment.LOG_TAG, \"start onListItemClick()\"); view.setSelected(true); onMovieSelected.onMovieSelected(movies.get((i - 1)).getImdbID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2022/buggy-version/app.src.main.java.com.vladnamik.developer.movieinformationviewer.components.fragments.MovieListFragment.java", "BodyUseAPI": ["movies.get((i - 1)).getImdbID()", "java.util.List<com.vladnamik.developer.movieinformationviewer.database.entities.Movie>.get(int)", "com.vladnamik.developer.movieinformationviewer.components.fragments.MovieListFragment.OnMovieSelected.onMovieSelected(movies.get((i - 1)).getImdbID())"], "Fixed commit": "b905b2c95d980d435a4f01646894bf01d87098c6", "Url": "https://api.github.com/repos/VladNamik/MovieInformationViewer", "Date": "2018-07-12T20:15:27Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.scoreboard.ScoreboardManager.getNewScoreboard()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((board.getTeam(\"money\")) == null) { smoney = board.registerNewTeam(\"money\"); }else { smoney = board.getTeam(\"money\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1727/buggy-version/CF-Versicherung.src.me.chrisochs.versicherung.ScoreboardHandler.java", "BodyUseAPI": ["org.bukkit.scoreboard.Scoreboard.getTeam(java.lang.String)", "org.bukkit.scoreboard.Scoreboard.registerNewTeam(java.lang.String)"], "Fixed commit": "06fd9ac510f1c9819abd49c1afe30cceb2cc06e7", "Url": "https://api.github.com/repos/BloodSKreaper/CF-Versicherung", "Date": "2018-01-05T02:48:05Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.sling.api.SlingHttpServletRequest.adaptTo(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(\"Free\".equals(profile.getLevel()))) { javax.jcr.ValueFactory vf = session.getValueFactory(); user.setProperty(\"payment/stripeToken\", vf.createValue(stripeToken)); java.lang.String customerId = stripe.createSubscription(stripeToken, profile); user.setProperty(\"payment/customerId\", vf.createValue(customerId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2634/buggy-version/src.main.java.org.adobecommunity.site.internal.JoinServlet.java", "BodyUseAPI": ["org.adobecommunity.site.StripeIntegration.createSubscription(java.lang.String,org.adobecommunity.site.models.InitialUserProfile)"], "Fixed commit": "b3b9f571378ea9ec3ccd6cacb78030979bcbaad6", "Url": "https://api.github.com/repos/AdobeGlobalCommunity/adobecommunity.org-site", "Date": "2018-07-27T01:29:59Z"},
{"Line": "=>494", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((actualStartingTime) == 0) { message = (\"Hey, there! I'll compete in \" + (name)) + \". Track me on Ridertrack.\"; }else { message = (\"Hey, there! I'm competing in \" + (name)) + \". Track me on Ridertrack.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3294/buggy-version/app.src.main.java.com.mobileapp.ridertrack.RaceActivity.java", "BodyUseAPI": [], "Fixed commit": "3b7aa79c586403d7d55605061330627156c51ae1", "Url": "https://api.github.com/repos/giulialeonardi/ridertrack-mobile", "Date": "2018-05-23T08:10:25Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["saturday.repositories.TopicRolePermissionRepository.findByTopicIdAndTopicRoleIdAndTopicPermissionId(topicRolePermission.getTopic().getId(),topicRolePermission.getTopicRole().getId(),topicRolePermission.getTopicPermission().getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (existingTopicRolePermission != null) { topicRolePermission.setId(existingTopicRolePermission.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6323/buggy-version/src.main.java.saturday.services.TopicRolePermissionServiceImpl.java", "BodyUseAPI": ["saturday.domain.TopicRolePermission.setId(existingTopicRolePermission.getId())", "saturday.domain.TopicRolePermission.getId()"], "Fixed commit": "93d8cf15a0fedb6b1fa6232acc9b4756e46395c8", "Url": "https://api.github.com/repos/zachjustice/saturday", "Date": "2018-06-19T02:18:06Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.executequery.gui.browser.nodes.DatabaseObjectNode.getMetaDataKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (metadatakey != null) return ((getDisplayName()) + \":\") + (getMetaDataKey()); else return getDisplayName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4404/buggy-version/src.org.executequery.gui.browser.nodes.DatabaseObjectNode.java", "BodyUseAPI": [], "Fixed commit": "406a476e730e5f099d567d5ad4e26d7213406386", "Url": "https://api.github.com/repos/red-soft-ru/redexpert", "Date": "2018-03-14T08:28:51Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.tron.explorer.controller.NodeController.Node2Json(org.tron.api.GrpcAPI.Node)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((nodeString == null) || (nodeString.equals(\"\"))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2947/buggy-version/src.main.java.org.tron.explorer.controller.NodeController.java", "BodyUseAPI": [], "Fixed commit": "524e4f6c4e1093ca6a1b3997b50433d5c82477da", "Url": "https://api.github.com/repos/tronprotocol/wallet-cli", "Date": "2018-03-28T03:06:18Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tags.containsKey(argument))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5205/buggy-version/src.main.java.hjeisa.waifubot.BotFunctions.java", "BodyUseAPI": [], "Fixed commit": "a3edc5debd1b36405433f0da9fa39b6904c13797", "Url": "https://api.github.com/repos/isakvik/waifubot", "Date": "2018-01-17T22:43:58Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bean) != null) { robPrice = bean.getRobbingPrice(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1821/buggy-version/app.src.main.java.com.houwei.guaishang.view.OrderBuyDialog.java", "BodyUseAPI": [], "Fixed commit": "afb603f2e7d003081b6ca30e4099d0ca851119c6", "Url": "https://api.github.com/repos/3126004008/guaishang", "Date": "2018-08-22T14:14:48Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.params.length) != (tr.params.length)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5368/buggy-version/src.org.sango_lang.PTypeRefSkel.java", "BodyUseAPI": [], "Fixed commit": "d17fd34b22967f2abb5d3b233c7ef8f7e856f270", "Url": "https://api.github.com/repos/i-akym/sango0", "Date": "2018-08-13T09:25:55Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user.getIdLong()) != 158310004187725824L) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6579/buggy-version/src.main.java.stream.flarebot.flarebotvoting.commands.VoteCommand.java", "BodyUseAPI": [], "Fixed commit": "3483f6b1e36bbda12550472d0d3e308acc4b2e6e", "Url": "https://api.github.com/repos/FlareBot/FlareBot-Voting", "Date": "2018-03-05T19:27:17Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((args != null) && ((args.length) > 0)) { return java.lang.String.format(message, args); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2742/buggy-version/janmayen.src.main.java.org.n52.janmayen.exception.StringInterpolationException.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.Object[])"], "Fixed commit": "551b3f302e0dd2c353cfaa6140772dbbc5f55e73", "Url": "https://api.github.com/repos/52North/arctic-sea", "Date": "2018-01-12T11:52:25Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((message == null) || (message.isEmpty())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2742/buggy-version/janmayen.src.main.java.org.n52.janmayen.exception.StringInterpolationException.java", "BodyUseAPI": [], "Fixed commit": "551b3f302e0dd2c353cfaa6140772dbbc5f55e73", "Url": "https://api.github.com/repos/52North/arctic-sea", "Date": "2018-01-12T11:52:25Z"},
{"Line": "=>3515", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isEnabledPinContentView())) { if ((((mScrollTargetView) != null) && ((mState) == (me.dkzwm.widget.srl.config.Constants.STATE_CONTENT))) && isMovingFooter) { mScrollTargetView.offsetTopAndBottom(change); }else { if ((mTargetView) != null) mTargetView.offsetTopAndBottom(change); if ((((mChangeStateAnimator) != null) && (mChangeStateAnimator.isRunning())) && ((getView(mPreviousState)) != null)) getView(mPreviousState).offsetTopAndBottom(change); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2408/buggy-version/core.src.main.java.me.dkzwm.widget.srl.SmoothRefreshLayout.java", "BodyUseAPI": [], "Fixed commit": "e851aeb8a388223b0547bad60bf4f3ab16c22ff0", "Url": "https://api.github.com/repos/dkzwm/SmoothRefreshLayout", "Date": "2018-05-04T10:19:38Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTargetView) != null) mTargetView.offsetTopAndBottom(change);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2408/buggy-version/ext-horizontal.src.main.java.me.dkzwm.widget.srl.HorizontalSmoothRefreshLayout.java", "BodyUseAPI": [], "Fixed commit": "e851aeb8a388223b0547bad60bf4f3ab16c22ff0", "Url": "https://api.github.com/repos/dkzwm/SmoothRefreshLayout", "Date": "2018-05-04T10:19:38Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isEnabledPinContentView())) { if ((((mScrollTargetView) != null) && ((mState) == (me.dkzwm.widget.srl.config.Constants.STATE_CONTENT))) && isMovingFooter) { mScrollTargetView.offsetLeftAndRight(change); }else { if ((mTargetView) != null) mTargetView.offsetTopAndBottom(change); if ((((mChangeStateAnimator) != null) && (mChangeStateAnimator.isRunning())) && ((getView(mPreviousState)) != null)) getView(mPreviousState).offsetLeftAndRight(change); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2408/buggy-version/ext-horizontal.src.main.java.me.dkzwm.widget.srl.HorizontalSmoothRefreshLayout.java", "BodyUseAPI": [], "Fixed commit": "e851aeb8a388223b0547bad60bf4f3ab16c22ff0", "Url": "https://api.github.com/repos/dkzwm/SmoothRefreshLayout", "Date": "2018-05-04T10:19:38Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.tanyayuferova.franklin.utils.PreferencesUtils.getNotificationEnabled(context)) com.tanyayuferova.franklin.utils.EveryDayReminderUtils.scheduleStartReminderJob(context);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5099/buggy-version/app.src.main.java.com.tanyayuferova.franklin.receivers.TimeChangedReceiver.java", "BodyUseAPI": ["com.tanyayuferova.franklin.utils.EveryDayReminderUtils.scheduleStartReminderJob(android.content.Context)"], "Fixed commit": "3336b1992b9762e3a621d5c831c50119ea0e4a48", "Url": "https://api.github.com/repos/TanyaYu/Franklin", "Date": "2018-05-20T17:01:18Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (input.matches(\"\\\\s*|\\\\r|\\\\t|\\\\n\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2144/buggy-version/src.main.java.com.sap.exercise.parser.InputParser.java", "BodyUseAPI": [], "Fixed commit": "d3740e8989f560011f1ee7e378f9197561a988bc", "Url": "https://api.github.com/repos/radito3/TaskManager", "Date": "2018-09-23T11:12:17Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((update == 1) && (batch == 1)) { updateRequest = request.createPerformUpdateRequest(this.adsIdToCheckProofFor, crpyto.CryptographicDigest.hash(\"test\".getBytes()), batch, true); }else { int adsToUpdate = (prng.nextInt(((adsIds.size()) - 2))) + 2; byte[] adsIdToUpdate = adsIds.get(adsToUpdate); byte[] newValue = crpyto.CryptographicDigest.hash((\"NEW VALUE\" + update).getBytes()); updateRequest = request.createPerformUpdateRequest(adsIdToUpdate, newValue, batch, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1532/buggy-version/src.main.java.org.bverify.ProofMicroBenchmarks.java", "BodyUseAPI": ["client.Request.createPerformUpdateRequest(byte[],crpyto.CryptographicDigest.hash(\"test\".getBytes()),int,boolean)", "java.lang.String.getBytes()", "client.Request.createPerformUpdateRequest(byte[],byte[],int,boolean)", "crpyto.CryptographicDigest.hash(byte[])"], "Fixed commit": "0945d5e34bde64afda9647c67f076bcfb478640b", "Url": "https://api.github.com/repos/b-verify/b_verify-ads-server-benchmark", "Date": "2018-07-17T18:39:12Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getPagerAdapter().getCount()) > 1) { mListener.enableSwipeRefresh((state == (android.support.v4.view.ViewPager.SCROLL_STATE_IDLE))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5761/buggy-version/app.src.main.java.cz.maresmar.sfm.view.menu.CursorPagerFragment.java", "BodyUseAPI": [], "Fixed commit": "a33bff2af46ef95534ffaefbf5cb448fb1fd210d", "Url": "https://api.github.com/repos/mmrmartin/SmartFoodMenu", "Date": "2018-07-13T19:39:31Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((p.getGroupTags()) != null) && ((p.getGroupTags().size()) > 0)) { for (seedu.address.model.tag.Tag t : p.getGroupTags()) { groups.add(t); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6081/buggy-version/src.main.java.seedu.address.model.AddressBook.java", "BodyUseAPI": ["seedu.address.model.person.Person.getGroupTags()"], "Fixed commit": "15be4774ca0d4ce0d36e7ce52f0c337b6dffaa42", "Url": "https://api.github.com/repos/betakuwe/main", "Date": "2018-10-09T17:57:19Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) { enterTransition = holder.getCustomObject(PopupAlertParamsKeys.ENTER_TRANSITION_KEY); exitTransition = holder.getCustomObject(PopupAlertParamsKeys.EXIT_TRANSITION_KEY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5520/buggy-version/library.src.main.java.org.hitogo.alert.popup.PopupAlertParams.java", "BodyUseAPI": [], "Fixed commit": "7b656ce4271656e78260adf8b428fe0d2f0e2f44", "Url": "https://api.github.com/repos/Mordag/hitogo", "Date": "2018-05-10T02:47:26Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.geom.Point2D.getY()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (yPerc < 0) { gridRow = -1; }else if (yPerc >= 100) { gridRow = (grid.getRows()) - 1; }else { gridRow = ((int) ((yPerc / 100) * (grid.getRows()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5120/buggy-version/src.edu.oregonstate.cartography.gui.MainWindow.java", "BodyUseAPI": [], "Fixed commit": "c2298ba451941031230a13c093e8624432a2e3b3", "Url": "https://api.github.com/repos/OSUCartography/PyramidShader", "Date": "2018-02-11T10:35:37Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.geom.Point2D.getX()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (xPerc < 0) { gridCol = -1; }else if (xPerc >= 100) { gridCol = (grid.getCols()) - 1; }else { gridCol = ((int) ((xPerc / 100) * (grid.getCols()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5120/buggy-version/src.edu.oregonstate.cartography.gui.MainWindow.java", "BodyUseAPI": [], "Fixed commit": "c2298ba451941031230a13c093e8624432a2e3b3", "Url": "https://api.github.com/repos/OSUCartography/PyramidShader", "Date": "2018-02-11T10:35:37Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.endeavourhealth.transform.emis.csv.schema.careRecord.Observation.getCodeId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (codeId.isEmpty()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8436/buggy-version/src.eds-queuereader.src.main.java.org.endeavourhealth.queuereader.Main.java", "BodyUseAPI": [], "Fixed commit": "3cd4c77e46242a0437ea9e7849a9c561592379d7", "Url": "https://api.github.com/repos/endeavourhealth/EDS", "Date": "2018-04-06T16:12:50Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.chris.memegenerator.util.FavoritesHandler.favorites) == null) com.example.chris.memegenerator.util.FavoritesHandler.favorites = new java.util.HashSet<>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4449/buggy-version/app.src.main.java.com.example.chris.memegenerator.util.FavoritesHandler.java", "BodyUseAPI": [], "Fixed commit": "7fff10f88b509f3e87f9f4726368d1627798cebe", "Url": "https://api.github.com/repos/adydimena/MemeGenerator", "Date": "2018-01-10T21:59:51Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((medication.isTabSelected()) == 1) selectedCount += 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9145/buggy-version/app.src.main.java.com.rescribe.helpers.notification.NotificationHelper.java", "BodyUseAPI": [], "Fixed commit": "de9b99dfa73a04e7556c9251443c142117d2ceed", "Url": "https://api.github.com/repos/sandeepbahalkar123/myrescribe_repo", "Date": "2018-06-11T13:58:09Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.vorto.repository.api.content.ModelProperty.getMappingReference()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (mappingId != null) { fbm = this.repositoryClient.getContent(fbModelId, org.eclipse.vorto.repository.api.content.FunctionblockModel.class, mappingId).get(); }else { fbm = this.repositoryClient.getContent(fbModelId, org.eclipse.vorto.repository.api.content.FunctionblockModel.class, this.targetPlatformKey).get(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9259/buggy-version/server.repo.repository-mapping.src.main.java.org.eclipse.vorto.service.mapping.spec.MappingSpecificationBuilder.java", "BodyUseAPI": ["org.eclipse.vorto.repository.api.IModelRepository.getContent(org.eclipse.vorto.repository.api.ModelId,java.lang.Class,org.eclipse.vorto.repository.api.ModelId)", "this.repositoryClient.getContent(fbModelId, org.eclipse.vorto.repository.api.content.FunctionblockModel.class, mappingId).get()"], "Fixed commit": "14f53618e6e8056f3d0590e0fc7fa7b88a200862", "Url": "https://api.github.com/repos/bsinno/vorto", "Date": "2018-02-12T09:32:03Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentFunction.returnType.match(new mstar.compile.PrimitiveType(\"void\", globalSymbolTable.getPrimitiveSymbol(\"void\")))) errorRecorder.addRecord(node.location, \"can not return a void value\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/435/buggy-version/src.mstar.compile.SemanticChecker.java", "BodyUseAPI": [], "Fixed commit": "e39be8e3b30fe6429c3fff2e37ef97791374f698", "Url": "https://api.github.com/repos/idy002/mstar-compiler", "Date": "2018-05-02T07:01:19Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, java.util.Map<java.lang.String, java.lang.Double>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((probMap != null) && ((probMap.size()) > 0)) { prob = probMap.get(anchorText); if (null == prob) { prob = 0.0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5270/buggy-version/src.main.java.org.aksw.agdistis.util.IndexCreator.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Double>.get(java.lang.String)"], "Fixed commit": "96f6d57c280448fe806029489770677bcea537c4", "Url": "https://api.github.com/repos/meltwater/AGDISTIS", "Date": "2018-08-17T09:25:55Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((college.paul.john.puvroute.MapRoutes.getRouteList().size()) > 0) { college.paul.john.puvroute.MapRoutes.setDestination(place); }else { android.widget.Toast.makeText(getApplicationContext(), \"No routes found\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6459/buggy-version/app.src.main.java.college.paul.john.puvroute.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "c8ab0bf3fedd72f827750c34094af447796d24d5", "Url": "https://api.github.com/repos/wwwdotphilip/PUVRoute", "Date": "2018-01-25T06:58:47Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arr[i]) == (arr[min_idx])) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7270/buggy-version/src.com.lib.algo.SelectionSort.java", "BodyUseAPI": [], "Fixed commit": "b1db01c2b32e19a290b26e480c999ce5ae44c280", "Url": "https://api.github.com/repos/Tejas07PSK/JaxterLib", "Date": "2018-08-27T15:00:59Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((filenames.size()) == 0) com.chunkserver.ChunkServer.counter = 0; else { java.util.Collections.sort(filenames); com.chunkserver.ChunkServer.counter = filenames.lastElement(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9262/buggy-version/src.com.chunkserver.ChunkServer.java", "BodyUseAPI": [], "Fixed commit": "dad5aa2c9c7a0b54dc85b94c724b08f5b70b779d", "Url": "https://api.github.com/repos/ndpillai/TinyFS", "Date": "2018-03-20T23:08:32Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.epam.organizer.core.BaseBehaviour.getField(com.epam.organizer.core.RevenueParser,com.epam.organizer.core.ZERO.getNumber())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rowLabel.equals(com.epam.organizer.core.RevenueParser.THRESHOLD)) { (revenueRow)++; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3786/buggy-version/src.main.java.com.epam.organizer.core.RevenueParser.java", "BodyUseAPI": [], "Fixed commit": "ca866b867496fcb645a404741cde6da67403bb89", "Url": "https://api.github.com/repos/naz1719/ExcelParser", "Date": "2018-04-17T12:56:48Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((position >= 0) && (position < (mDataList.size()))) { mDataList.get(position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2346/buggy-version/library.src.cn.ieclipse.af.adapter.AfPagerAdapter.java", "BodyUseAPI": ["java.util.List<T>.get(int)"], "Fixed commit": "130e23edb45569d891155e734523149984c5445a", "Url": "https://api.github.com/repos/Jamling/QuickAF", "Date": "2018-01-31T01:44:02Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["D.getDstPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((dstPath != null) && (dstPath.startsWith(\"/\"))) { dstPath = dstPath.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9/buggy-version/src.main.java.com.emc.mongoose.storage.driver.fs.FileStorageDriver.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "2fd91f28c7a16e9c85949ac598eb8b10ab4f7159", "Url": "https://api.github.com/repos/emc-mongoose/mongoose-storage-driver-fs", "Date": "2018-08-06T09:49:38Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["O.getSrcPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (srcPath.startsWith(\"/\")) { srcPath = srcPath.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9/buggy-version/src.main.java.com.emc.mongoose.storage.driver.fs.FsConstants.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "2fd91f28c7a16e9c85949ac598eb8b10ab4f7159", "Url": "https://api.github.com/repos/emc-mongoose/mongoose-storage-driver-fs", "Date": "2018-08-06T09:49:38Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.entity.Player.getTargetBlock(<nulltype>,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((block.getType()) == (org.bukkit.Material.CHEST)) { io.github.bananapuncher714.nbteditor.NBTEditor.setBlockTag(block, \"Notch\", \"Lock\"); player.sendMessage(\"Set lock to 'Notch'\"); }else if ((block.getType()) == (org.bukkit.Material.MOB_SPAWNER)) { io.github.bananapuncher714.nbteditor.NBTEditor.setBlockTag(block, 25.0F, \"SpawnRange\"); player.sendMessage(\"Changed SpawnRange to 25f\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7658/buggy-version/io.github.bananapuncher714.nbteditor.NBTEditorMain.java", "BodyUseAPI": ["io.github.bananapuncher714.nbteditor.NBTEditor.setBlockTag(org.bukkit.block.Block,float,java.lang.String)", "org.bukkit.block.Block.getType()", "io.github.bananapuncher714.nbteditor.NBTEditor.setBlockTag(org.bukkit.block.Block,java.lang.String,java.lang.String)"], "Fixed commit": "1552ae1857a2d809e7d9ce7be91c8fdeb68b7688", "Url": "https://api.github.com/repos/BananaPuncher714/NBTEditor", "Date": "2018-07-28T14:41:27Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.dialog) != null) && (this.dialog.isShowing())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7965/buggy-version/app.src.main.java.se.joscarsson.privify.PassphraseCollector.java", "BodyUseAPI": [], "Fixed commit": "d58663801041d3a92fb2ef4c089a9164e7eb2e01", "Url": "https://api.github.com/repos/joscarsson/privify", "Date": "2018-01-06T16:27:25Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id == null) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7398/buggy-version/src.com.max.dao.DaoFileImpl.java", "BodyUseAPI": [], "Fixed commit": "6f3ab7f2c6a3ec416ff095406759d463a931bbe7", "Url": "https://api.github.com/repos/maxfeldman99/CacheUnitProject", "Date": "2018-09-08T21:37:37Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.housepower.jdbc.misc.SQLLexer.character()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((row > 0) && (nextChar == ',')) nextChar = lexer.character();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8557/buggy-version/src.main.java.com.github.housepower.jdbc.stream.ValuesInputFormat.java", "BodyUseAPI": [], "Fixed commit": "373631a5ec429d6a37dd6bbc3de6b5518bafeb93", "Url": "https://api.github.com/repos/housepower/ClickHouse-Native-JDBC", "Date": "2018-09-28T16:22:18Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) == 0) { this.helpDisplay.printHelp(argRules.values()); for (org.bitteruhe.ArgRule argRule : argRules.values()) { if (!(argRule.isOptional())) { throw new org.bitteruhe.except.MissingArgumentException(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4341/buggy-version/src.main.java.org.bitteruhe.Clargs.java", "BodyUseAPI": [], "Fixed commit": "0356b8aaeaf02aedbc12a159662e4bbcfe937b27", "Url": "https://api.github.com/repos/bitteruhe/clargs", "Date": "2018-09-16T10:59:39Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dStream) != null) { dStream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/198/buggy-version/demopackage.Server1.java", "BodyUseAPI": [], "Fixed commit": "6c680239b01025a4490772ed2148e2a477386d52", "Url": "https://api.github.com/repos/blackteawithmilk/j2se-qq-simulator-demo", "Date": "2018-04-07T04:59:53Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((socket) != null) { socket.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/198/buggy-version/demopackage.Server1.java", "BodyUseAPI": [], "Fixed commit": "6c680239b01025a4490772ed2148e2a477386d52", "Url": "https://api.github.com/repos/blackteawithmilk/j2se-qq-simulator-demo", "Date": "2018-04-07T04:59:53Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entityClass) == (javax.ws.rs.core.MultivaluedMap.class)) { return ((T) (context.getForm().asForm().asMap())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4235/buggy-version/minijax-core.src.main.java.org.minijax.cdi.EntityProvider.java", "BodyUseAPI": [], "Fixed commit": "a077acb1b0207e9753dd512f6b9ee3b66207ac8d", "Url": "https://api.github.com/repos/minijax/minijax", "Date": "2018-04-06T23:14:18Z"},
{"Line": "=>1376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getOrientation()) == (com.alibaba.android.vlayout.VirtualLayoutManager.VERTICAL)) { widthSpec = updateSpecWithExtra(widthSpec, ((lp.leftMargin) + (mDecorInsets.left)), ((lp.rightMargin) + (mDecorInsets.right))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1140/buggy-version/vlayout.src.main.java.com.alibaba.android.vlayout.VirtualLayoutManager.java", "BodyUseAPI": [], "Fixed commit": "9037ec0080f8cb5742c6ab284efd4036b5adc312", "Url": "https://api.github.com/repos/alibaba/vlayout", "Date": "2018-01-02T08:17:18Z"},
{"Line": "=>463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sale.getForeignCurrency()) != null) { payment.setAmount(org.iabako.shared.tools.GenericTools.round(((payment.getAmount()) / (sale.getForeignCurrency().getRate())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/530/buggy-version/src.main.java.org.iabako.client.ui.layout.widget.sale.SaleForm.java", "BodyUseAPI": ["org.iabako.client.ui.layout.widget.sale.Sale.getForeignCurrency()", "org.iabako.shared.tools.GenericTools.round(((payment.getAmount()) / (sale.getForeignCurrency().getRate())))", "sale.getForeignCurrency().getRate()", "org.iabako.client.ui.layout.widget.sale.Payment.setAmount(org.iabako.shared.tools.GenericTools.round(((payment.getAmount()) / (sale.getForeignCurrency().getRate()))))"], "Fixed commit": "a7b25a1bd1104ad6e24949bcfe613b3c7ec0026a", "Url": "https://api.github.com/repos/iabakoproject/iabako", "Date": "2018-08-29T19:12:10Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((wantsToGoUp) && (wantsToGoLeft)) && (!(wantsToGoDown))) && (!(wantsToGoRight))) { rotation = 315; }else if ((((!(wantsToGoUp)) && (wantsToGoLeft)) && (wantsToGoDown)) && (!(wantsToGoRight))) { rotation = 225; }else if ((((!(wantsToGoUp)) && (!(wantsToGoLeft))) && (wantsToGoDown)) && (wantsToGoRight)) { rotation = 135; }else if ((((wantsToGoUp) && (!(wantsToGoLeft))) && (!(wantsToGoDown))) && (wantsToGoRight)) { rotation = 45; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8037/buggy-version/src.logics.entities.MovingEntity.java", "BodyUseAPI": [], "Fixed commit": "fbc573677e66e6f8f30d253f13724512dbd98274", "Url": "https://api.github.com/repos/CapOfCave/tetris-n-run", "Date": "2018-09-19T13:59:35Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isTypeEditedIndex) >= 0) place.setTypeEdited(((cursor.getInt(isTypeEditedIndex)) == 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2487/buggy-version/app.src.main.java.org.tanrabad.survey.repository.persistence.PlaceCursorMapper.java", "BodyUseAPI": [], "Fixed commit": "b56b3258ff159a27020b0ff588fdb97224a110ac", "Url": "https://api.github.com/repos/tanrabad/survey", "Date": "2018-01-31T09:46:53Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (recipeListSize > 0) { final android.os.Bundle ingredientListBundle = recipeBundle.getBundle(com.josemgu91.bakingapp.android.widget.BundleableRecipe.RECIPE_INGREDIENTS); for (int ingredientIndex = 0; ingredientIndex < ingredientListSize; ingredientIndex++) { final android.os.Bundle ingredientBundle = ingredientListBundle.getBundle((\"ingredient\" + ingredientIndex)); final com.josemgu91.bakingapp.adapter.presentation.ui.graphical.widget.GetRecipesWithIngredientsViewModel.Recipe.Ingredient ingredient = new com.josemgu91.bakingapp.adapter.presentation.ui.graphical.widget.GetRecipesWithIngredientsViewModel.Recipe.Ingredient(ingredientBundle.getString(com.josemgu91.bakingapp.android.widget.BundleableRecipe.INGREDIENT_MEASURE_UNIT), ingredientBundle.getString(com.josemgu91.bakingapp.android.widget.BundleableRecipe.INGREDIENT_NAME), ingredientBundle.getDouble(com.josemgu91.bakingapp.android.widget.BundleableRecipe.INGREDIENT_QUANTITY)); ingredientList.add(ingredient); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9783/buggy-version/app.src.main.java.com.josemgu91.bakingapp.android.widget.BundleableRecipe.java", "BodyUseAPI": [], "Fixed commit": "e7afac8ba809c653e70fc41f4141bde5bfd68dad", "Url": "https://api.github.com/repos/josemgu91/BakingApp", "Date": "2018-02-23T22:14:54Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.parkly.DataBase.LicensePlateRepository.findDefault()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (oldLicensePlate != null) { oldLicensePlate.setCurrent(false); licensePlateRepository.updateLicensePlate(oldLicensePlate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1658/buggy-version/app.src.main.java.com.example.parkly.Fragment.CarsFragment.java", "BodyUseAPI": ["com.example.parkly.DataBase.LicensePlateRepository.updateLicensePlate(com.example.parkly.DataBase.Tables.LicensePlate)", "com.example.parkly.DataBase.Tables.LicensePlate.setCurrent(boolean)"], "Fixed commit": "c714d66949ad00f7f1ef716739c839a324089181", "Url": "https://api.github.com/repos/BugHuntersKTU/Parkly", "Date": "2018-03-19T14:16:14Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((licensePlates.size()) == 1) && ((licensePlates.get(0).getCurrent()) == false)) { setDefault(licensePlates.get(0)); }else refreshDefault();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1658/buggy-version/app.src.main.java.com.example.parkly.Fragment.CarsFragment.java", "BodyUseAPI": ["com.example.parkly.Fragment.CarsFragment.3.setDefault(licensePlates.get(0))", "java.util.List<com.example.parkly.DataBase.Tables.LicensePlate>.get(int)"], "Fixed commit": "c714d66949ad00f7f1ef716739c839a324089181", "Url": "https://api.github.com/repos/BugHuntersKTU/Parkly", "Date": "2018-03-19T14:16:14Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.internalAPI) == null) && ((this.internalAPIUrls) == null)) { throw new java.lang.IllegalStateException(\"Synchronization api was not initialized properly (see Scheduler logs for details)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5067/buggy-version/scheduler.scheduler-node.src.main.java.org.ow2.proactive.scheduler.synchronization.SynchronizationWrapper.java", "BodyUseAPI": [], "Fixed commit": "b9b36dad8cfda2f548d3abde688a3e39172b6e96", "Url": "https://api.github.com/repos/pedrovelho/scheduling", "Date": "2018-10-04T12:35:11Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (current instanceof parseTree.nodeTypes.LambdaNode) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/740/buggy-version/pika.src.parseTree.nodeTypes.IdentifierNode.java", "BodyUseAPI": [], "Fixed commit": "8cd5b08047e5edf3eea40149f424d822a48b7a86", "Url": "https://api.github.com/repos/CNKevinFei/Pika", "Date": "2018-03-14T02:45:23Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((child.isTransient()) && (!includeTransient)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1395/buggy-version/src.core.lombok.core.handlers.InclusionExclusionUtils.java", "BodyUseAPI": [], "Fixed commit": "f241ef8c309b90faacabe66431b9deaebfd7087a", "Url": "https://api.github.com/repos/rzwitserloot/lombok", "Date": "2018-06-18T21:46:42Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (recvData.equals(\"\")) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2335/buggy-version/src.main.java.hackathon.Main.java", "BodyUseAPI": [], "Fixed commit": "e93d82dda8f3d7d1c1e68e1c7945fb0adb8509e9", "Url": "https://api.github.com/repos/mflai/SymphonyHackathon", "Date": "2018-06-03T09:56:05Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.isi.wings.portal.classes.users.UsersDB.getUser(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (user == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7080/buggy-version/portal.src.main.java.edu.isi.wings.portal.controllers.UserController.java", "BodyUseAPI": [], "Fixed commit": "de76ba6b1d9870bc1bd79d20f2ed9fd7b00768d3", "Url": "https://api.github.com/repos/KnowledgeCaptureAndDiscovery/wings", "Date": "2018-09-16T11:39:31Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (type.equals(\"Player\")) { Shot shot1 = new Shot(((int) (x)), ((int) (y)), \"Shot\", ((float) ((java.lang.Math.PI) / 2)), screen.getDamage(), 10, handler); shot1.setVelY((-5)); Shot shot2 = new Shot(((int) (x)), ((int) (y)), \"Shot\", 0, screen.getDamage(), 10, handler); shot2.setVelX(5); Shot shot3 = new Shot(((int) (x)), ((int) (y)), \"Shot\", ((float) ((3 * (java.lang.Math.PI)) / 2)), screen.getDamage(), 10, handler); shot3.setVelY(5); Shot shot4 = new Shot(((int) (x)), ((int) (y)), \"Shot\", ((float) (java.lang.Math.PI)), screen.getDamage(), 10, handler); shot4.setVelX((-5)); handler.addObject(shot1); handler.addObject(shot2); handler.addObject(shot3); handler.addObject(shot4); Shot shot5 = new Shot(((int) (x)), ((int) (y)), \"Shot\", (-((float) ((java.lang.Math.PI) / 4))), screen.getDamage(), 10, handler); shot5.setVelX(((float) (5 * (java.lang.Math.cos(((java.lang.Math.PI) / 4)))))); shot5.setVelY(((float) ((-5) * (java.lang.Math.sin(((java.lang.Math.PI) / 4)))))); Shot shot6 = new Shot(((int) (x)), ((int) (y)), \"Shot\", (-((float) ((7 * (java.lang.Math.PI)) / 4))), screen.getDamage(), 10, handler); shot6.setVelX(((float) (5 * (java.lang.Math.cos(((7 * (java.lang.Math.PI)) / 4)))))); shot6.setVelY(((float) ((-5) * (java.lang.Math.sin(((7 * (java.lang.Math.PI)) / 4)))))); Shot shot7 = new Shot(((int) (x)), ((int) (y)), \"Shot\", (-((float) ((5 * (java.lang.Math.PI)) / 4))), screen.getDamage(), 10, handler); shot7.setVelX(((float) (5 * (java.lang.Math.cos(((5 * (java.lang.Math.PI)) / 4)))))); shot7.setVelY(((float) ((-5) * (java.lang.Math.sin(((5 * (java.lang.Math.PI)) / 4)))))); Shot shot8 = new Shot(((int) (x)), ((int) (y)), \"Shot\", (-((float) ((3 * (java.lang.Math.PI)) / 4))), screen.getDamage(), 10, handler); shot8.setVelX(((float) (5 * (java.lang.Math.cos(((3 * (java.lang.Math.PI)) / 4)))))); shot8.setVelY(((float) ((-5) * (java.lang.Math.sin(((3 * (java.lang.Math.PI)) / 4)))))); handler.addObject(shot5); handler.addObject(shot6); handler.addObject(shot7); handler.addObject(shot8); handler.removeObject(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3188/buggy-version/games4jeffpackage.Explosion.java", "BodyUseAPI": [], "Fixed commit": "241a552a794c584473a344881e7133eda61b64ee", "Url": "https://api.github.com/repos/Narwhalish/games4jeff", "Date": "2018-04-20T18:14:54Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (type.equals(\"Enemy\")) { EnemyShot shot1 = new EnemyShot(((int) (x)), ((int) (y)), \"EnemyShot\", ((float) ((java.lang.Math.PI) / 2)), 10, 10, handler); shot1.setVelY((-5)); EnemyShot shot2 = new EnemyShot(((int) (x)), ((int) (y)), \"EnemyShot\", 0, 10, 10, handler); shot2.setVelX(5); EnemyShot shot3 = new EnemyShot(((int) (x)), ((int) (y)), \"EnemyShot\", ((float) ((3 * (java.lang.Math.PI)) / 2)), 10, 10, handler); shot3.setVelY(5); EnemyShot shot4 = new EnemyShot(((int) (x)), ((int) (y)), \"EnemyShot\", ((float) (java.lang.Math.PI)), 10, 10, handler); shot4.setVelX((-5)); handler.addObject(shot1); handler.addObject(shot2); handler.addObject(shot3); handler.addObject(shot4); EnemyShot shot5 = new EnemyShot(((int) (x)), ((int) (y)), \"EnemyShot\", (-((float) ((java.lang.Math.PI) / 4))), 10, 10, handler); shot5.setVelX(((float) (5 * (java.lang.Math.cos(((java.lang.Math.PI) / 4)))))); shot5.setVelY(((float) ((-5) * (java.lang.Math.sin(((java.lang.Math.PI) / 4)))))); EnemyShot shot6 = new EnemyShot(((int) (x)), ((int) (y)), \"EnemyShot\", (-((float) ((7 * (java.lang.Math.PI)) / 4))), 10, 10, handler); shot6.setVelX(((float) (5 * (java.lang.Math.cos(((7 * (java.lang.Math.PI)) / 4)))))); shot6.setVelY(((float) ((-5) * (java.lang.Math.sin(((7 * (java.lang.Math.PI)) / 4)))))); EnemyShot shot7 = new EnemyShot(((int) (x)), ((int) (y)), \"EnemyShot\", (-((float) ((5 * (java.lang.Math.PI)) / 4))), 10, 10, handler); shot7.setVelX(((float) (5 * (java.lang.Math.cos(((5 * (java.lang.Math.PI)) / 4)))))); shot7.setVelY(((float) ((-5) * (java.lang.Math.sin(((5 * (java.lang.Math.PI)) / 4)))))); EnemyShot shot8 = new EnemyShot(((int) (x)), ((int) (y)), \"EnemyShot\", (-((float) ((3 * (java.lang.Math.PI)) / 4))), 10, 10, handler); shot8.setVelX(((float) (5 * (java.lang.Math.cos(((3 * (java.lang.Math.PI)) / 4)))))); shot8.setVelY(((float) ((-5) * (java.lang.Math.sin(((3 * (java.lang.Math.PI)) / 4)))))); handler.addObject(shot5); handler.addObject(shot6); handler.addObject(shot7); handler.addObject(shot8); handler.removeObject(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3188/buggy-version/games4jeffpackage.Explosion.java", "BodyUseAPI": [], "Fixed commit": "241a552a794c584473a344881e7133eda61b64ee", "Url": "https://api.github.com/repos/Narwhalish/games4jeff", "Date": "2018-04-20T18:14:54Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRemote) return new java.util.ArrayList<>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4744/buggy-version/src.main.java.org.jbei.ice.services.rest.PartResource.java", "BodyUseAPI": [], "Fixed commit": "ad0b973dee18d9a7b18e0fe129a9950319005f99", "Url": "https://api.github.com/repos/JBEI/ice", "Date": "2018-07-18T21:04:19Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getParentFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(parent.exists())) && (!(parent.mkdirs()))) { throw new java.io.IOException((\"Cannot create directory \" + (parent.getAbsolutePath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9285/buggy-version/smack-openpgp.src.main.java.org.jivesoftware.smackx.ox.store.filebased.FileBasedOpenPgpTrustStore.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()"], "Fixed commit": "fa559d157b1fde608b0f56ea58d30cf25178940b", "Url": "https://api.github.com/repos/vanitasvitae/Smack", "Date": "2018-07-10T12:37:59Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.simbrain.network.connections.ConnectionStrategy.connectNeurons(networkPanel.getNetwork(),networkPanel.getSourceModelNeurons(),networkPanel.getSelectedModelNeurons())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (synapses.isEmpty()) { javax.swing.JOptionPane.showMessageDialog(null, (\"Chosen connection\" + (\" parameters resulted in no synapses being created.\" + \"\\nTry using different connection parameters.\")), \"Warning: No Connections Created\", javax.swing.JOptionPane.INFORMATION_MESSAGE); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7876/buggy-version/src.org.simbrain.network.gui.dialogs.connect.ConnectionPanel.java", "BodyUseAPI": [], "Fixed commit": "a894a98b65ea08ff06d7e0b4aa49337a6223b18a", "Url": "https://api.github.com/repos/simbrain/simbrain", "Date": "2018-10-03T01:15:32Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.runelite.api.Client.getWidget(WidgetInfo.RESIZABLE_VIEWPORT_BOTTOM_LINE_INTERFACE_CONTAINER)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (bottomLine.isHidden()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1/buggy-version/runelite-client.src.main.java.net.runelite.client.plugins.StatusBars.StatusBarsOverlay.java", "BodyUseAPI": [], "Fixed commit": "eb6e0a3703368acb673bbec6b9d6096ae39dfe27", "Url": "https://api.github.com/repos/Malfuryent/runelite", "Date": "2018-06-18T02:55:44Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((task.action.RValue.baseValue) <= (-99998.0F)) { obj.moveBasic.acc.setAngle((-(task.lastVal))); }else { obj.moveBasic.acc.setAngle(((obj.moveBasic.acc.angle()) - dt)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9159/buggy-version/th902-main.src.cn.s3bit.th902.danmaku.mbg.event.BulletEvents.java", "BodyUseAPI": ["obj.moveBasic.acc.setAngle((-(task.lastVal)))"], "Fixed commit": "8a845e5660a5fe975228daa59256aa59258afe33", "Url": "https://api.github.com/repos/cn-s3bit/TH902", "Date": "2018-04-15T05:06:11Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((task.action.RValue.baseValue) <= (-99998.0F)) { obj.moveBasic.velocity.setAngle((-(task.lastVal))); }else { obj.moveBasic.velocity.setAngle(((obj.moveBasic.velocity.angle()) - dt)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9159/buggy-version/th902-main.src.cn.s3bit.th902.danmaku.mbg.event.BulletEvents.java", "BodyUseAPI": ["obj.moveBasic.velocity.setAngle((-(task.lastVal)))"], "Fixed commit": "8a845e5660a5fe975228daa59256aa59258afe33", "Url": "https://api.github.com/repos/cn-s3bit/TH902", "Date": "2018-04-15T05:06:11Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["txtPricePerPack.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((pricePerPack == null) || (\"\".equals(pricePerPack))) pricePerPack = \"0\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7854/buggy-version/QuitSmokeMobile.app.src.main.java.com.example.william.quitsmokeappclient.RegisterActivity.java", "BodyUseAPI": [], "Fixed commit": "abd07395b5fb83080f4e296df7dbd3522c833403", "Url": "https://api.github.com/repos/WilliamWangShuang/QuitSmoke", "Date": "2018-09-28T08:01:57Z"},
{"Line": "=>455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ec.tstoolkit.information.InformationSet.get(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (group == null) { group = 1; java.lang.String s = info.get(de.bundesbank.transreg.logic.TransRegVar.TransRegVarConverter.GROUPSTATUS, java.lang.String.class); if (s != null) { try { group = java.lang.Integer.parseInt(s.substring(5)); } catch (java.lang.NumberFormatException ignore) { throw new java.lang.IllegalArgumentException(\"Group status cannot be parsed\", ignore); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2231/buggy-version/src.main.java.de.bundesbank.transreg.logic.TransRegVar.java", "BodyUseAPI": [], "Fixed commit": "a3a9317115578cc0f440712ed48b59a0d5fbebf3", "Url": "https://api.github.com/repos/bbkrd/TransReg", "Date": "2018-08-20T09:15:50Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listOfItems) == null) listOfItems = new java.util.ArrayList<textcollage.DrawTextItem>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1056/buggy-version/textcollage.src.textcollage.DrawTextPanel.java", "BodyUseAPI": [], "Fixed commit": "e88d9d7d4c9fa086860796ea19ad4ab01ab85835", "Url": "https://api.github.com/repos/adnane-habib/textcollage", "Date": "2018-03-13T07:05:33Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!goFullScreen) { org.lwjgl.opengl.Display.setResizable(false); org.lwjgl.opengl.Display.setResizable(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6056/buggy-version/src.main.java.com.hancinworld.fw.proxy.ClientProxy.java", "BodyUseAPI": [], "Fixed commit": "1e65eae2fbdb8f76ba5193ffe90cf5b8254b62f5", "Url": "https://api.github.com/repos/comp500/Fullscreen-Windowed-Minecraft", "Date": "2018-07-24T12:34:35Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (valueSet) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5351/buggy-version/org.eclipse.scout.rt.ui.html.src.main.java.org.eclipse.scout.rt.ui.html.json.form.fields.smartfield.JsonSmartField2.java", "BodyUseAPI": [], "Fixed commit": "84c3b670670573d8f6241320b7c2e026549f361f", "Url": "https://api.github.com/repos/eclipse/scout.rt", "Date": "2018-03-14T08:05:05Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result == null) || (!(result.isAuthenticated()))) { throw new org.springframework.security.access.AccessDeniedException(\"User with such username and password has not found.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6639/buggy-version/src.main.java.com.apu.TcpServerForAccessControlMVC.security.CustomAuthenticationProvider.java", "BodyUseAPI": [], "Fixed commit": "973395ba62c372d7c27b251aaf6d63b5ab9adcd5", "Url": "https://api.github.com/repos/anikeec/TcpServerForAccessControlMVC", "Date": "2018-10-30T08:51:23Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (incomingRoute != null) { bundle.putString(\"payload\", getNavigationContext().getPayload()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2013/buggy-version/app.src.main.java.com.walmartlabs.ern.showcase.ElectrodeCoreActivity.java", "BodyUseAPI": [], "Fixed commit": "ce46422cb7b6fc2a612c39aa39a176b0fc548bf9", "Url": "https://api.github.com/repos/ernlabs/ElectrodeNativeAndroidShowCaseApp", "Date": "2018-05-22T21:04:20Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mc.getTo().getAddress()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (to.startsWith(\"/t/\")) { org.wso2.carbon.tenant.dispatcher.MultitenantDispatcher.getService(mc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4553/buggy-version/components.tenant-mgt.org.wso2.carbon.tenant.dispatcher.src.main.java.org.wso2.carbon.tenant.dispatcher.MultitenantDispatcher.java", "BodyUseAPI": [], "Fixed commit": "21afc6117e1edb2e97bc138abee94a54c9d86498", "Url": "https://api.github.com/repos/ThishaniLucas/carbon-multitenancy", "Date": "2018-03-05T16:28:52Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(newPending.isEmpty())) { org.aion.zero.impl.blockchain.AionImpl.inst().broadcastTransactions(newPending); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8737/buggy-version/modAionImpl.src.org.aion.zero.impl.blockchain.AionPendingStateImpl.java", "BodyUseAPI": ["org.aion.zero.impl.blockchain.AionImpl.inst().broadcastTransactions(java.util.List<org.aion.zero.impl.blockchain.AionTransaction>)"], "Fixed commit": "c0e854254257b44eaf81d8ec7743f6d7e07f465e", "Url": "https://api.github.com/repos/aionnetwork/aion", "Date": "2018-04-03T20:14:33Z"},
{"Line": "=>456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (TheDistributedScrabble.DEBUG) java.lang.System.out.println((\"My next peer is \" + b));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5698/buggy-version/TheDistributedScrabble.src.GameState.java", "BodyUseAPI": [], "Fixed commit": "d4a314bfdf50f2a1135d91c7b526969e2af74c42", "Url": "https://api.github.com/repos/MXtreme/TheDistributedScrabble", "Date": "2018-09-20T13:51:48Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((trustStoreCertificate) == null) { this.truststore = createTruststore(((java.lang.String) (configs.get(SslConfigs.SSL_TRUSTSTORE_TYPE_CONFIG))), ((java.lang.String) (configs.get(SslConfigs.SSL_TRUSTSTORE_LOCATION_CONFIG))), ((org.apache.kafka.common.config.types.Password) (configs.get(SslConfigs.SSL_TRUSTSTORE_PASSWORD_CONFIG)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/633/buggy-version/clients.src.main.java.org.apache.kafka.common.security.ssl.SslFactory.java", "BodyUseAPI": [], "Fixed commit": "cbfc9e5f21900fd28f5a08c0ef3a6010004c31a6", "Url": "https://api.github.com/repos/serenawuyajing/kafka", "Date": "2018-10-23T15:53:44Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (keyPassword == null) { keyPassword = ((keystore.keyPassword) != null) ? keystore.keyPassword : keystore.password; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/633/buggy-version/clients.src.main.java.org.apache.kafka.common.security.ssl.SslFactory.java", "BodyUseAPI": [], "Fixed commit": "cbfc9e5f21900fd28f5a08c0ef3a6010004c31a6", "Url": "https://api.github.com/repos/serenawuyajing/kafka", "Date": "2018-10-23T15:53:44Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((keyStoreCertificate) == null) { this.keystore = createKeystore(((java.lang.String) (configs.get(SslConfigs.SSL_KEYSTORE_TYPE_CONFIG))), ((java.lang.String) (configs.get(SslConfigs.SSL_KEYSTORE_LOCATION_CONFIG))), ((org.apache.kafka.common.config.types.Password) (configs.get(SslConfigs.SSL_KEYSTORE_PASSWORD_CONFIG))), ((org.apache.kafka.common.config.types.Password) (configs.get(SslConfigs.SSL_KEY_PASSWORD_CONFIG)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/633/buggy-version/clients.src.main.java.org.apache.kafka.common.security.ssl.SslFactory.java", "BodyUseAPI": [], "Fixed commit": "cbfc9e5f21900fd28f5a08c0ef3a6010004c31a6", "Url": "https://api.github.com/repos/serenawuyajing/kafka", "Date": "2018-10-23T15:53:44Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((b1.blockGroup) != null) || ((b2.blockGroup) != null)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/935/buggy-version/core.src.com.gmail.enzocampanella98.candidatecrush.board.Board.java", "BodyUseAPI": [], "Fixed commit": "1ba776f9b84c57eb448b05cc9d4d25d24009b6ea", "Url": "https://api.github.com/repos/lcampanella98/candidate-crush", "Date": "2018-06-03T04:56:14Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.LOLLIPOP)) { tabStatistic.getBackground().setColorFilter(res.getColor(R.color.globalWhite), PorterDuff.Mode.SRC_IN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3691/buggy-version/app.src.main.java.com.appian.manutdvietnam.app.match.MatchFragment.java", "BodyUseAPI": [], "Fixed commit": "c4a53bbedae9f38e9eb2f3bc0a66335867185fa0", "Url": "https://api.github.com/repos/haipv-ptit/Android_ManUtdVN", "Date": "2018-04-05T06:42:44Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.LOLLIPOP)) { tabLineups.getBackground().setColorFilter(res.getColor(R.color.globalWhite), PorterDuff.Mode.SRC_IN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3691/buggy-version/app.src.main.java.com.appian.manutdvietnam.app.match.MatchFragment.java", "BodyUseAPI": [], "Fixed commit": "c4a53bbedae9f38e9eb2f3bc0a66335867185fa0", "Url": "https://api.github.com/repos/haipv-ptit/Android_ManUtdVN", "Date": "2018-04-05T06:42:44Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == savedInstanceState) getSupportFragmentManager().beginTransaction().replace(R.id.fragmentContainer, intive.ideabox.fragment.IdeaListFragment.newInstance(false)).commit();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1693/buggy-version/app.src.main.java.intive.ideabox.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "64305deb5aa63a99b526eed4ff05a955afacc7e4", "Url": "https://api.github.com/repos/blstream/IdeaBox_Android", "Date": "2018-04-19T19:33:45Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRefreshLayout) != null) { mRefreshLayout.setRefreshing(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4779/buggy-version/app.src.main.java.info.pelleritoudacity.android.rcapstone.ui.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "affc239c4a22b88d81baafc61c44c173a99dd83c", "Url": "https://api.github.com/repos/benepell/Capstone-Project", "Date": "2018-08-03T18:34:45Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang.StringUtils.trim(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.contains(url, \"?\")) { linkId = org.apache.commons.lang.StringUtils.substringBetween(matcher.group(), \"/article/\", \"?\"); }else { linkId = org.apache.commons.lang.StringUtils.substringAfter(matcher.group(), \"/article/\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3227/buggy-version/src.main.java.org.b3log.symphony.service.ShortLinkQueryService.java", "BodyUseAPI": [], "Fixed commit": "69adeecae46e3deb1b7bc052ed7ea77a6675cc3e", "Url": "https://api.github.com/repos/xiongba-me/symphony", "Date": "2018-02-28T14:15:10Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<taller2.ataller2.model.Historia>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((historia.getStringUri()) == null) { historia.setStringUri(historia.getUri().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8/buggy-version/app.src.main.java.taller2.ataller2.adapters.HistoriasListAdapter.java", "BodyUseAPI": ["taller2.ataller2.model.Historia.setStringUri(historia.getUri().toString())", "historia.getUri().toString()", "taller2.ataller2.model.Historia.getUri()"], "Fixed commit": "21ac293c77926e31d7905da01b113ac436020706", "Url": "https://api.github.com/repos/taller2-2c2018/ATALLER2", "Date": "2018-07-11T02:48:46Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((displayName) != null) { return displayName; }else { if ((ID) != null) { return ID; }else { return com.lgsim.engine.graphEditor.util.StringUtil.emptyString(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/838/buggy-version/api.src.main.java.com.lgsim.engine.graphEditor.api.data.impl.VertexImpl.java", "BodyUseAPI": [], "Fixed commit": "2dfb4f55cad0896d53f81d7a01b526909781f063", "Url": "https://api.github.com/repos/lgsimu/graph-editor", "Date": "2018-04-27T03:09:16Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (boardColumnDTO.getCategoryCode().equals(io.choerodon.agile.app.service.impl.BoardColumnServiceImpl.DOING_CODE)) { io.choerodon.agile.infra.dataobject.BoardColumnDO boardColumnDO = new io.choerodon.agile.infra.dataobject.BoardColumnDO(); boardColumnDO.setCategoryCode(io.choerodon.agile.app.service.impl.BoardColumnServiceImpl.DONE_CODE); boardColumnDO.setBoardId(boardColumnDTO.getBoardId()); if (boardColumnMapper.select(boardColumnDO).isEmpty()) { boardColumnDTO.setCategoryCode(io.choerodon.agile.app.service.impl.BoardColumnServiceImpl.DONE_CODE); }else { updateSequence(boardColumnDTO); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4129/buggy-version/src.main.java.io.choerodon.agile.app.service.impl.BoardColumnServiceImpl.java", "BodyUseAPI": ["io.choerodon.agile.api.dto.BoardColumnDTO.getBoardId()", "io.choerodon.agile.app.service.impl.BoardColumnServiceImpl.updateSequence(io.choerodon.agile.api.dto.BoardColumnDTO)", "io.choerodon.agile.infra.dataobject.BoardColumnDO.setBoardId(boardColumnDTO.getBoardId())", "io.choerodon.agile.api.dto.BoardColumnDTO.setCategoryCode(java.lang.String)"], "Fixed commit": "25194ae76ae4b06d1cd2fddd385c81cb59c78830", "Url": "https://api.github.com/repos/choerodon/agile-service", "Date": "2018-06-12T04:05:21Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.head) != null) { this.head.setNextElement(newElement); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9732/buggy-version/src.main.java.objects.auxiliary.CircularLinkedList.java", "BodyUseAPI": [], "Fixed commit": "3f336b72f3a85c99fe03512c52a45ab03af985c1", "Url": "https://api.github.com/repos/TTvanWillegen/StarcraftTournamentManager", "Date": "2018-03-22T21:14:30Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getDataFolder().exists())) { getDataFolder().mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8055/buggy-version/src.main.java.net.LukAd.BedWars.BedWars.java", "BodyUseAPI": [], "Fixed commit": "1a4295cd5d369745a7746e6af385f9b23b04e600", "Url": "https://api.github.com/repos/AdinSk/LukzonAdin", "Date": "2018-09-15T19:16:45Z"},
{"Line": "=>603", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((linhaFinal1[0]) < (linhaFinal1[1])) && ((linhaFinal1[0]) < (linhaFinal1[2]))) && ((linhaFinal1[0]) < (linhaFinal1[3]))) && ((linhaFinal1[0]) < (linhaFinal1[4]))) { maiorNegativo = linhaFinal1[0]; }else { if (((((linhaFinal1[1]) < (linhaFinal1[0])) && ((linhaFinal1[1]) < (linhaFinal1[2]))) && ((linhaFinal1[1]) < (linhaFinal1[3]))) && ((linhaFinal1[1]) < (linhaFinal1[4]))) { maiorNegativo = linhaFinal1[1]; }else { if (((((linhaFinal1[2]) < (linhaFinal1[0])) && ((linhaFinal1[2]) < (linhaFinal1[1]))) && ((linhaFinal1[2]) < (linhaFinal1[3]))) && ((linhaFinal1[2]) < (linhaFinal1[4]))) { maiorNegativo = linhaFinal1[2]; }else { if (((((linhaFinal1[3]) < (linhaFinal1[0])) && ((linhaFinal1[3]) < (linhaFinal1[2]))) && ((linhaFinal1[3]) < (linhaFinal1[1]))) && ((linhaFinal1[3]) < (linhaFinal1[4]))) { maiorNegativo = linhaFinal1[3]; }else { maiorNegativo = linhaFinal1[4]; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8529/buggy-version/src.trabalho.pkg1.pl.Tela1.java", "BodyUseAPI": [], "Fixed commit": "1bc6e8e87ffc2b02a91baecb64d213c2ec1a0638", "Url": "https://api.github.com/repos/jonasmarini/MetodoSimplex", "Date": "2018-06-11T00:19:40Z"},
{"Line": "=>638", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resultadoB2) < (resultadoB3)) { df.setMaximumFractionDigits(2); vetorUsado = 2; for (int i = 0; i <= 4; i++) { if ((linhaFinal1[i]) == (maiorNegativo)) { pivo1 = linhaFinal2[i]; } } for (int i = 0; i <= 5; i++) { vetorPivo[i] = (linhaFinal2[i]) / (pivo1); } }else { df.setMaximumFractionDigits(2); vetorUsado = 3; for (int i = 0; i <= 4; i++) { if ((linhaFinal1[i]) == (maiorNegativo)) { pivo1 = linhaFinal3[i]; } } for (int i = 0; i <= 5; i++) { vetorPivo[i] = (linhaFinal3[i]) / (pivo1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8529/buggy-version/src.trabalho.pkg1.pl.Tela1.java", "BodyUseAPI": [], "Fixed commit": "1bc6e8e87ffc2b02a91baecb64d213c2ec1a0638", "Url": "https://api.github.com/repos/jonasmarini/MetodoSimplex", "Date": "2018-06-11T00:19:40Z"},
{"Line": "=>731", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((linhaFinal1[1]) < 0) || ((linhaFinal1[2]) < 0)) || ((linhaFinal1[3]) < 0)) || ((linhaFinal1[4]) < 0)) { lbResultado.setText(\"N\u00e3o \u00d3tima\"); btCalcular3.setVisible(true); }else { lbResultado.setText(\"\u00d3tima\"); btCalcular3.setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8529/buggy-version/src.trabalho.pkg1.pl.Tela1.java", "BodyUseAPI": [], "Fixed commit": "1bc6e8e87ffc2b02a91baecb64d213c2ec1a0638", "Url": "https://api.github.com/repos/jonasmarini/MetodoSimplex", "Date": "2018-06-11T00:19:40Z"},
{"Line": "=>679", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vetorUsado) == 3) { linhaFinal2[0] = ((vetorPivo[0]) * (opostoLinha2)) + (linhaFinal2[0]); linhaFinal2[1] = ((vetorPivo[1]) * (opostoLinha2)) + (linhaFinal2[1]); linhaFinal2[2] = ((vetorPivo[2]) * (opostoLinha2)) + (linhaFinal2[2]); linhaFinal2[3] = ((vetorPivo[3]) * (opostoLinha2)) + (linhaFinal2[3]); linhaFinal2[4] = ((vetorPivo[4]) * (opostoLinha2)) + (linhaFinal2[4]); linhaFinal2[5] = ((vetorPivo[5]) * (opostoLinha2)) + (linhaFinal2[5]); linhaFinal3[0] = vetorPivo[0]; linhaFinal3[1] = vetorPivo[1]; linhaFinal3[2] = vetorPivo[2]; linhaFinal3[3] = vetorPivo[3]; linhaFinal3[4] = vetorPivo[4]; linhaFinal3[5] = vetorPivo[5]; }else { linhaFinal3[0] = ((vetorPivo[0]) * (opostoLinha3)) + (linhaFinal3[0]); linhaFinal3[1] = ((vetorPivo[1]) * (opostoLinha3)) + (linhaFinal3[1]); linhaFinal3[2] = ((vetorPivo[2]) * (opostoLinha3)) + (linhaFinal3[2]); linhaFinal3[3] = ((vetorPivo[3]) * (opostoLinha3)) + (linhaFinal3[3]); linhaFinal3[4] = ((vetorPivo[4]) * (opostoLinha3)) + (linhaFinal3[4]); linhaFinal3[5] = ((vetorPivo[5]) * (opostoLinha3)) + (linhaFinal3[5]); linhaFinal2[0] = vetorPivo[0]; linhaFinal2[1] = vetorPivo[1]; linhaFinal2[2] = vetorPivo[2]; linhaFinal2[3] = vetorPivo[3]; linhaFinal2[4] = vetorPivo[4]; linhaFinal2[5] = vetorPivo[5]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8529/buggy-version/src.trabalho.pkg1.pl.Tela1.java", "BodyUseAPI": [], "Fixed commit": "1bc6e8e87ffc2b02a91baecb64d213c2ec1a0638", "Url": "https://api.github.com/repos/jonasmarini/MetodoSimplex", "Date": "2018-06-11T00:19:40Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Set<java.lang.String>.add(cls.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isNew) { for (jadx.core.clsp.NClass p : cls.getParents()) { addAncestorsNames(p, result); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6452/buggy-version/jadx-core.src.main.java.jadx.core.clsp.ClspGraph.java", "BodyUseAPI": [], "Fixed commit": "9e9270a8b7b9c32d9018d1492d4ff01125061ae0", "Url": "https://api.github.com/repos/dstmath/jadx", "Date": "2018-05-01T13:29:50Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arr[i]) == (arr[j])) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7761/buggy-version/src.java.com.mounacheikhna.practice.bits.Xor.java", "BodyUseAPI": [], "Fixed commit": "55796dbfc54cf98ec5468e5960469e7354eb09e4", "Url": "https://api.github.com/repos/chemouna/practice", "Date": "2018-09-02T15:12:35Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dataService.getWorkingmodeEnum()) == (WorkingmodeEnum.INDEPENDENT)) dataService.firstLink();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3972/buggy-version/src.main.java.be.uantwerpen.sc.RobotCoreLoop.java", "BodyUseAPI": ["be.uantwerpen.sc.DataService.firstLink()"], "Fixed commit": "154352a0764ca718c17340ef739424f79efa92ef", "Url": "https://api.github.com/repos/SmartCity-UAntwerpen/RobotCore", "Date": "2018-01-19T12:14:00Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numb2 == 0) { java.lang.System.out.println(\"Is it possible to divide by 0?\\nEnter a divider different from 0!\"); numb2 = input.nextInt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/472/buggy-version/loopAssignments.src.loopAssignments.Calculator.java", "BodyUseAPI": [], "Fixed commit": "66e8567eaa58c416d311e02423543f3a1f8fbbb6", "Url": "https://api.github.com/repos/7AdvancedAcademy/java-fundamentals", "Date": "2018-10-24T12:37:20Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jayway.jsonpath.JsonPath.read(java.lang.Object,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (t != null) { results.add(t.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6874/buggy-version/src.main.java.be.ugent.rml.records.JSONRecord.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "f84a79f250826c7006b0a57de0a3659858beaa7c", "Url": "https://api.github.com/repos/RMLio/rmlmapper-java", "Date": "2018-07-16T08:10:27Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((helperWorkspacePointers) == null) { helperWorkspacePointers = new java.util.HashMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2075/buggy-version/deeplearning4j.deeplearning4j-nn.src.main.java.org.deeplearning4j.nn.workspace.LayerWorkspaceMgr.java", "BodyUseAPI": [], "Fixed commit": "4b8b17dcd081ed34c623ff3ff880cd67bc3467dc", "Url": "https://api.github.com/repos/deeplearning4j/deeplearning4j", "Date": "2018-09-05T01:48:40Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.Object>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (one != null) { if (type.isAssignableFrom(one.getClass())) { _return = type.cast(one); }else if (java.util.Map.class.isAssignableFrom(one.getClass())) { _return = type.newInstance(); org.solmix.commons.util.DataUtils.setProperties(((java.util.Map<?, ?>) (one)), _return, false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1656/buggy-version/core.src.main.java.org.solmix.datax.support.DSResponseImpl.java", "BodyUseAPI": ["java.lang.Class<T>.cast(java.lang.Object)", "java.lang.Class.isAssignableFrom(java.lang.Class<? extends java.lang.Object>)", "java.lang.Class<T>.isAssignableFrom(java.lang.Class<? extends java.lang.Object>)", "java.lang.Object.getClass()", "java.lang.Object.getClass()"], "Fixed commit": "36eee7fcd6856011bbd52bf1baae72ca587df330", "Url": "https://api.github.com/repos/solmix/datax", "Date": "2018-04-20T01:47:55Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((metadataHolder) == null) { metadataHolder = populateMetadataHolderFromMetadataStorage(); populateCollectTermHolderFromMetadataStorage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7736/buggy-version/src.main.java.se.uu.ub.cora.bookkeeper.termcollector.DataGroupTermCollectorImp.java", "BodyUseAPI": [], "Fixed commit": "dc12ec72d51d374f250f2733149da41b207e1499", "Url": "https://api.github.com/repos/maddekenn/cora-bookkeeper", "Date": "2018-04-26T11:48:42Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((client.checkExists().forPath(org.apache.bench.LockAndMutateBench.LOCK_PATH)) != null) { client.delete().forPath(org.apache.bench.LockAndMutateBench.LOCK_PATH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/531/buggy-version/src.main.java.org.apache.bench.LockAndMutateBench.java", "BodyUseAPI": ["client.delete().forPath(java.lang.String)", "org.apache.curator.framework.CuratorFramework.delete()"], "Fixed commit": "2d7d21d0941269b750868a7b493df89d76194989", "Url": "https://api.github.com/repos/ilooner/zookeeper-lock-benchmark", "Date": "2018-09-10T19:13:43Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (column.getType().equalsIgnoreCase(\"INTEGER\")) { typeName = \"INT\"; columnSize = \"9\"; }else if (column.getType().equalsIgnoreCase(\"DECIMAL\")) { typeName = \"DECIMAL\"; columnSize = \"38,10\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5916/buggy-version/controller.src.main.java.org.openhds.controller.service.impl.ExtraFormServiceImpl.java", "BodyUseAPI": ["org.openhds.domain.model.ColumnDummy.getType()", "column.getType().equalsIgnoreCase(java.lang.String)"], "Fixed commit": "d1741fde1dd5aecf2800e985497eaaa0b406acef", "Url": "https://api.github.com/repos/OpenHDS/openhds-server", "Date": "2016-07-25T07:34:35Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((request.getParameter(\"evaluacionAlumno\")) != null) && ((request.getParameter(\"evaluacionCurso\")) != null)) { evaluacion = evaluacionHelper(request); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7513/buggy-version/src.java.org.FrontServlet.java", "BodyUseAPI": ["org.FrontServlet.evaluacionHelper(javax.servlet.http.HttpServletRequest)"], "Fixed commit": "8bb8eb4b2bc850f9ec5ddbc095730f7bd12e352c", "Url": "https://api.github.com/repos/YoneMoreno/ArquitecturaSoftwareFrontControllerPractica1", "Date": "2018-03-29T15:24:49Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mimickal.mc.mcdrops.DropTable.nextDrop()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (dropItem != null) { player.dropItem(dropItem, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2852/buggy-version/src.main.java.mimickal.mc.mcdrops.DropTickHandler.java", "BodyUseAPI": ["net.minecraft.entity.player.EntityPlayerMP.dropItem(net.minecraft.item.ItemStack,boolean)"], "Fixed commit": "69be506d1258a2417becca8fed9304c3492c95f6", "Url": "https://api.github.com/repos/Mimickal/MCDrops", "Date": "2018-01-22T00:53:01Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mimickal.mc.mcdrops.DropTable.drops.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2852/buggy-version/src.main.java.mimickal.mc.mcdrops.DropTable.java", "BodyUseAPI": [], "Fixed commit": "69be506d1258a2417becca8fed9304c3492c95f6", "Url": "https://api.github.com/repos/Mimickal/MCDrops", "Date": "2018-01-22T00:53:01Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mimickal.mc.mcdrops.DropTable.drops.isEmpty()) { java.lang.System.out.println(\"WARNING: drops table is empty\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2852/buggy-version/src.main.java.mimickal.mc.mcdrops.DropTable.java", "BodyUseAPI": [], "Fixed commit": "69be506d1258a2417becca8fed9304c3492c95f6", "Url": "https://api.github.com/repos/Mimickal/MCDrops", "Date": "2018-01-22T00:53:01Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.myblog.controller.HttpHelper.getInstance().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(joptsimple.internal.Strings.isNullOrEmpty(content))) { com.myblog.controller.JedisUtil.getInstance().set(\"index\", content); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1086/buggy-version/src.main.java.com.myblog.controller.TimeController.java", "BodyUseAPI": ["com.myblog.controller.JedisUtil.getInstance().set(java.lang.String,java.lang.String)"], "Fixed commit": "f961f4d6f97a3f02a5d1a4822c6585ab69965fe5", "Url": "https://api.github.com/repos/Zephery/newblog", "Date": "2018-05-01T06:56:41Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (unalignedIndexBefore == (info.bioinfweb.libralign.model.utils.indextranslation.IndexRelation.OUT_OF_RANGE)) { unalignedIndexAfter = 0; }else { unalignedIndexAfter = unalignedIndexBefore + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8255/buggy-version/main.src.info.bioinfweb.alignmentcomparator.document.SuperalingedModelIndexTranslator.java", "BodyUseAPI": [], "Fixed commit": "59e9b699856144bd284ff3f63d807d87a22c68e9", "Url": "https://api.github.com/repos/bioinfweb/AlignmentComparator", "Date": "2018-03-06T17:11:42Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!hard) && (!(settings.has(\"base_demo_url\")))) && ((this.settings) != null)) { android.util.Log.d(eu.neosurance.sdk.NSR.TAG, \"already setup\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/721/buggy-version/nsr.src.main.java.eu.neosurance.sdk.NSR.java", "BodyUseAPI": [], "Fixed commit": "428017d471c270edae56b750b9a60346af26b770", "Url": "https://api.github.com/repos/clickntap/android-neosurance-sdk", "Date": "2018-05-08T13:08:47Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (resourceObject != null) { isAuthor = resourceObject.getSession().getUser().equals(com.itba.web.WicketSession.get().getUser()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6917/buggy-version/src.main.java.com.itba.web.page.ErrorSelectionPage.java", "BodyUseAPI": [], "Fixed commit": "ce49331f8d0a9c959ee3e9c48e966e08f2f09956", "Url": "https://api.github.com/repos/gromarion/pf", "Date": "2018-02-12T20:32:43Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(dir.exists())) && (!(dir.mkdirs()))) { java.lang.System.err.println((\"Failed to create extensions directory \" + extensionsDir)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2871/buggy-version/core.server.common.src.main.java.alluxio.cli.extensions.command.InstallCommand.java", "BodyUseAPI": [], "Fixed commit": "fbf833593f38336a13b0ddfb027a63e2880f4a6a", "Url": "https://api.github.com/repos/apc999/alluxio", "Date": "2018-01-03T19:21:16Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((delegate) != null) delegate.processFinish(s);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7981/buggy-version/app.src.main.java.in.avimarine.boatangels.geographical.WeatherHttpClient.java", "BodyUseAPI": [], "Fixed commit": "8b1c4962e9eb86fa1a195a15eee3972d58dabd0d", "Url": "https://api.github.com/repos/AviMarineInnovatons/BoatAngels", "Date": "2018-08-21T19:08:20Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pts.size()) < 2) return 0.0; else return (pts.get(((pts.size()) - 1)).ts) - (pts.get(0).ts);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/352/buggy-version/app.src.main.java.com.malasiot.hellaspath.model.Track.java", "BodyUseAPI": ["java.util.ArrayList<com.malasiot.hellaspath.model.TrackPoint>.get(((pts.size()) - 1))", "java.util.ArrayList<com.malasiot.hellaspath.model.TrackPoint>.get(int)", "java.util.ArrayList<com.malasiot.hellaspath.model.TrackPoint>.size()"], "Fixed commit": "a5ded2ac0c357d26fa3101ac06ffeaeddbb6d2b2", "Url": "https://api.github.com/repos/malasiot/hellaspath_app", "Date": "2018-07-20T12:12:16Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((points) != null) { points.clear(); points = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/352/buggy-version/app.src.main.java.com.malasiot.hellaspath.model.TrackLogDataSource.java", "BodyUseAPI": [], "Fixed commit": "a5ded2ac0c357d26fa3101ac06ffeaeddbb6d2b2", "Url": "https://api.github.com/repos/malasiot/hellaspath_app", "Date": "2018-07-20T12:12:16Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<com.rescribe.model.doctor_connect.ChatDoctor>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((chatDoctor.getPaidStatus()) == (com.rescribe.ui.activities.DoctorConnectActivity.PAID)) { holder.paidStatusTextView.setVisibility(View.VISIBLE); }else { holder.paidStatusTextView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5741/buggy-version/app.src.main.java.com.rescribe.adapters.DoctorConnectAdapter.java", "BodyUseAPI": [], "Fixed commit": "834c7f73fe2dc1e84318cfe36ae06fd6cb9654a4", "Url": "https://api.github.com/repos/sandeepbahalkar123/myrescribe_repo", "Date": "2018-03-23T08:15:16Z"},
{"Line": "=>667", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (caseStudyName.contains(\"treatment plan\")) abbreviation = R.drawable.treatment_plan; else if (caseStudyName.contains(\"surgery\")) abbreviation = R.drawable.surgery; else if (caseStudyName.contains(\"vaccination\")) abbreviation = R.drawable.vaccination; else if (caseStudyName.contains(\"general precaution\")) abbreviation = R.drawable.generalprecautions; else if (caseStudyName.contains(\"pre-operative precaution\")) abbreviation = R.drawable.preoperativeprecautions; else if (caseStudyName.contains(\"post-operative care\")) abbreviation = R.drawable.postoperativecare; else if ((caseStudyName.contains(\"pain score\")) || (caseStudyName.contains(\"pain scale\"))) abbreviation = R.drawable.painscore; else if (caseStudyName.contains(\"exercise\")) abbreviation = R.drawable.exercise; else if (caseStudyName.contains(\"finding\")) abbreviation = R.drawable.finding; else if (caseStudyName.contains(\"allergie\")) abbreviation = R.drawable.allergy; else if (caseStudyName.contains(\"attachment\")) abbreviation = R.drawable.attachment_opd; else if ((caseStudyName.contains(\"systemic examination\")) || (caseStudyName.contains(\"examination\"))) abbreviation = R.drawable.examination; else if ((caseStudyName.contains(\"operative procedure\")) || (caseStudyName.contains(\"procedure\"))) abbreviation = R.drawable.procedure;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5741/buggy-version/app.src.main.java.com.rescribe.util.CommonMethods.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "834c7f73fe2dc1e84318cfe36ae06fd6cb9654a4", "Url": "https://api.github.com/repos/sandeepbahalkar123/myrescribe_repo", "Date": "2018-03-23T08:15:16Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<com.rescribe.model.doctor_connect.ChatDoctor>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((chatDoctor.getPaidStatus()) == (com.rescribe.ui.activities.DoctorConnectActivity.PAID)) { holder.paidStatusTextView.setVisibility(View.VISIBLE); }else { holder.paidStatusTextView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5741/buggy-version/app.src.main.java.com.rescribe.adapters.DoctorSearchByNameAdapter.java", "BodyUseAPI": [], "Fixed commit": "834c7f73fe2dc1e84318cfe36ae06fd6cb9654a4", "Url": "https://api.github.com/repos/sandeepbahalkar123/myrescribe_repo", "Date": "2018-03-23T08:15:16Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pj.magic.model.ScheduledPriceChange.getProduct()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((product.getCompanyListPrice()) != null) { productBeforeUpdate.setCompanyListPrice(product.getCompanyListPrice()); productDao.save(productBeforeUpdate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5924/buggy-version/src.main.java.com.pj.magic.service.impl.ProductServiceImpl.java", "BodyUseAPI": ["com.pj.magic.model.Product.getCompanyListPrice()", "com.pj.magic.model.Product.setCompanyListPrice(product.getCompanyListPrice())"], "Fixed commit": "da478f241cd155a61fbeb3b37fb026e5b523cb65", "Url": "https://api.github.com/repos/pendelhaven3/magic", "Date": "2018-07-15T07:59:44Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!trustUnsafeHttp) restAdapter = createRestAdapter(); else restAdapter = createUnSafeRestAdapter();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4377/buggy-version/library.src.main.java.com.brsatalay.projectbase.library.core.network.RestApiService.java", "BodyUseAPI": [], "Fixed commit": "5485e7791047322d96737577089a69ab6c5d919c", "Url": "https://api.github.com/repos/barisatalay/projectbase", "Date": "2018-07-31T12:40:12Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)", "java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (val.equals(val2)) { java.lang.System.err.print(((\"The property '\" + val) + \"' seems to have an undefined variable\")); break; }else { val = val2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4911/buggy-version/rainbow.rainbow-core.src.main.java.org.sa.rainbow.core.Rainbow.java", "BodyUseAPI": ["java.io.PrintStream.print(java.lang.String)"], "Fixed commit": "d53b58ed692e0f6aa60cf15e11d17bdb112e451a", "Url": "https://api.github.com/repos/cmu-able/rainbow", "Date": "2018-04-18T23:21:23Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edges.isEmpty()) { return new graphql.annotations.connection.DefaultPageInfo(null, null, false, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/559/buggy-version/src.main.java.graphql.annotations.connection.PaginatedDataConnectionFetcher.java", "BodyUseAPI": [], "Fixed commit": "c00e910e83b52964ea1fc1696298d6f610ce4764", "Url": "https://api.github.com/repos/Enigmatis/graphql-java-annotations", "Date": "2018-01-18T21:11:53Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((input.getTblmanufacturers()) == null) || ((input.getTblmanufacturers().getVendor()) == null)) { input.setTblmanufacturers(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1747/buggy-version/src.main.java.com.primetime.controller.TblPoHeaderController.java", "BodyUseAPI": ["com.primetime.entity.TblPoHeader.setTblmanufacturers(<nulltype>)"], "Fixed commit": "1b1a53b5b32fea796f952f060dcec7bd757a6510", "Url": "https://api.github.com/repos/ramanimukesh/backend", "Date": "2018-07-07T23:08:01Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.openapi.project.Project.getBaseDir()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (baseDir != null) { ballerinaExecutor = executor.withParameters(\"run\").withParameters(\"--sourceroot\").withParameters(baseDir.getPath()).withBallerinaPath(org.ballerinalang.plugins.idea.sdk.BallerinaSdkService.getInstance(getConfiguration().getProject()).getSdkHomePath(null)).withParameterString(myConfiguration.getBallerinaToolParams()).withParameters(filePath); }else { ballerinaExecutor = executor.withParameters(\"run\").withBallerinaPath(org.ballerinalang.plugins.idea.sdk.BallerinaSdkService.getInstance(getConfiguration().getProject()).getSdkHomePath(null)).withParameterString(myConfiguration.getBallerinaToolParams()).withParameters(filePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3594/buggy-version/src.main.java.org.ballerinalang.plugins.idea.runconfig.application.BallerinaApplicationRunningState.java", "BodyUseAPI": ["executor.withParameters(\"run\").withParameters(\"--sourceroot\").withParameters(baseDir.getPath()).withBallerinaPath(org.ballerinalang.plugins.idea.sdk.BallerinaSdkService.getInstance(getConfiguration().getProject()).getSdkHomePath(null)).withParameterString(myConfiguration.getBallerinaToolParams()).withParameters(java.lang.String)", "com.intellij.openapi.vfs.VirtualFile.getPath()", "executor.withParameters(\"run\").withParameters(\"--sourceroot\").withParameters(baseDir.getPath())", "executor.withParameters(\"run\").withParameters(\"--sourceroot\").withParameters(baseDir.getPath()).withBallerinaPath(org.ballerinalang.plugins.idea.sdk.BallerinaSdkService.getInstance(getConfiguration().getProject()).getSdkHomePath(null)).withParameterString(myConfiguration.getBallerinaToolParams())", "executor.withParameters(\"run\").withParameters(\"--sourceroot\").withParameters(baseDir.getPath()).withBallerinaPath(org.ballerinalang.plugins.idea.sdk.BallerinaSdkService.getInstance(getConfiguration().getProject()).getSdkHomePath(null))"], "Fixed commit": "e8869a61a6619df973696f4be4639087a5552052", "Url": "https://api.github.com/repos/Shan1024/ballerina-idea-plugin", "Date": "2018-04-23T05:29:26Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.openapi.project.Project.getBaseDir()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (baseDir != null) { filePath = filePath.replace(((baseDir.getPath()) + (java.io.File.separator)), \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3594/buggy-version/src.main.java.org.ballerinalang.plugins.idea.runconfig.application.BallerinaApplicationRunningState.java", "BodyUseAPI": ["com.intellij.openapi.vfs.VirtualFile.getPath()", "java.lang.String.replace(((baseDir.getPath()) + (java.io.File.separator)),java.lang.String)"], "Fixed commit": "e8869a61a6619df973696f4be4639087a5552052", "Url": "https://api.github.com/repos/Shan1024/ballerina-idea-plugin", "Date": "2018-04-23T05:29:26Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((datasetKeys.size()) > 1) { throw new java.lang.IllegalArgumentException(\"Multiple datasetKey parameters are not allowed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7558/buggy-version/checklistbank-ws.src.main.java.org.gbif.checklistbank.ws.resources.SpeciesResource.java", "BodyUseAPI": [], "Fixed commit": "54d0ded415923e9171850daf72dffc961f7d8773", "Url": "https://api.github.com/repos/gbif/checklistbank", "Date": "2018-02-08T10:14:06Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((personToDelete.getCalendarId().compareTo(\"testCalendarId\")) != 0) { seedu.address.logic.DeleteCalendar.execute(personToDelete.getCalendarId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5325/buggy-version/src.main.java.seedu.address.logic.commands.DeleteCommand.java", "BodyUseAPI": ["seedu.address.logic.DeleteCalendar.execute(personToDelete.getCalendarId())", "seedu.address.model.person.Person.getCalendarId()"], "Fixed commit": "f5342ee428057caa2c18425470133155bfe677e1", "Url": "https://api.github.com/repos/CS2103JAN2018-W15-B1/main", "Date": "2018-03-28T03:35:21Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(site1.getPWM().equals(site2.getPWM()))) { if ((PairFinder.PairFinder.order) == 1) { if (pos1 > pos2) { return -1; } } if ((PairFinder.PairFinder.order) == 2) { if (pos2 > pos1) { return -1; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1905/buggy-version/src.PairFinder.PairFinder.java", "BodyUseAPI": [], "Fixed commit": "4210850dcea0a95cb69aa29969ae9cdf11e1bc27", "Url": "https://api.github.com/repos/Turamarth14/UMG_Bioinformatik", "Date": "2018-02-21T14:12:21Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (txtBookSelect.getText().isEmpty()) { javax.swing.JOptionPane.showMessageDialog(null, \"Select a book from the table\"); }else { refreshListOnDelete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8596/buggy-version/src.librarySystemcodes.ReceiveMainDialog.java", "BodyUseAPI": [], "Fixed commit": "0c33599c46b385244324b97d49da2e260b4e4fb0", "Url": "https://api.github.com/repos/timonbabz/library-system1", "Date": "2018-10-26T08:12:47Z"},
{"Line": "=>538", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jme3.scene.Spatial.getMaterial()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((material.getMaterialDef().getMaterialParam(\"UseMaterialColors\")) != null) { material.setBoolean(\"UseMaterialColors\", enabled); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4186/buggy-version/src.toniarts.openkeeper.utils.AssetUtils.java", "BodyUseAPI": ["com.jme3.material.Material.setBoolean(java.lang.String,boolean)"], "Fixed commit": "ec51e7e6bb3c28c44de418611bda2385ab19d9a8", "Url": "https://api.github.com/repos/tonihele/OpenKeeper", "Date": "2018-08-09T19:05:23Z"},
{"Line": "=>1465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getId()) == null) { gov.anl.aps.cdb.portal.model.db.entities.Item itemDerivedFromItem = item.getDerivedFromItem(); if (itemDerivedFromItem != null) { gov.anl.aps.cdb.portal.model.db.entities.UserInfo createdByUser = ((gov.anl.aps.cdb.portal.model.db.entities.UserInfo) (gov.anl.aps.cdb.portal.utilities.SessionUtility.getUser())); java.util.Date createdOnDateTime = new java.util.Date(); item.updateDynamicProperties(createdByUser, createdOnDateTime); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/426/buggy-version/src.java.CdbWebPortal.src.java.gov.anl.aps.cdb.portal.controllers.ItemController.java", "BodyUseAPI": ["gov.anl.aps.cdb.portal.model.db.entities.Item.getDerivedFromItem()", "gov.anl.aps.cdb.portal.model.db.entities.Item.updateDynamicProperties(gov.anl.aps.cdb.portal.model.db.entities.UserInfo,java.util.Date)"], "Fixed commit": "eca4dfe5036152fae706d4e4555ac7f6bb3c7cf9", "Url": "https://api.github.com/repos/iTerminate/Component.DB", "Date": "2018-10-30T18:35:39Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((documents.getId()) == null) asset.setDocuments(new java.util.ArrayList()); else docList.add(documents);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3308/buggy-version/asset.asset-services.src.main.java.org.egov.asset.repository.rowmapper.AssetRowMapper.java", "BodyUseAPI": ["java.util.List<org.egov.asset.model.Document>.add(org.egov.asset.model.Document)"], "Fixed commit": "0cad9ff11a4d51cd9f7f38448920c079d0483a76", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2018-03-06T06:25:19Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.locationSetting.equals(\"CUSTOM\")) { java.lang.String customPercentage = sharedPref.getString(getString(R.string.custom_percentage), getString(R.string.custom_percentage_default)); if (customPercentage.isEmpty()) customPercentage = getString(R.string.custom_percentage_default); l.setCustomPercentage(java.lang.Integer.parseInt(customPercentage)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2854/buggy-version/app.src.main.java.com.gustiaux.canadiansalestaxcalculator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1951f731fb9027bbf0eaf977037beaa9ebc551b4", "Url": "https://api.github.com/repos/teddy-gustiaux/canadian-sales-tax-calculator", "Date": "2018-06-28T23:32:18Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (files[i].isDirectory()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1291/buggy-version/app.src.main.java.lakeeffect.ca.scoutingserverapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ac09151a368217dfb6d999cf3c6f4a4967e40aea", "Url": "https://api.github.com/repos/LakeEffectRobotics/LakeEffectScoutingServerApp", "Date": "2018-03-03T03:19:55Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ruinscraft.powder.PowderHandler.getPowderTask(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(player.hasPermission(\"powder.cancel\"))) && (!(powderTask.getUUIDsIfExist().contains(player.getUniqueId())))) { com.ruinscraft.powder.util.PowderUtil.sendPrefixMessage(player, Message.CANCEL_FAILURE, label, player.getName(), powderTaskName); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1174/buggy-version/src.main.java.com.ruinscraft.powder.PowderCommand.java", "BodyUseAPI": ["org.bukkit.entity.Player.getName()", "com.ruinscraft.powder.util.PowderUtil.sendPrefixMessage(org.bukkit.entity.Player,Message.CANCEL_FAILURE,java.lang.String,player.getName(),java.lang.String)"], "Fixed commit": "ca1c04b4017a48baae0ecd386995dcf81e97a4dc", "Url": "https://api.github.com/repos/Ruinscraft/Powder", "Date": "2018-05-28T17:21:25Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getIntent().getStringExtra(\"NotificationIntent\")) != null) { fragment = com.linka.lockapp.aos.module.pages.home.MainTabBarPageFragment.newInstance(com.linka.lockapp.aos.module.model.LinkaNotificationSettings.get_latest_linka()); }else { switch (com.pixplicity.easyprefs.library.Prefs.getInt(Constants.SHOWING_FRAGMENT, Constants.LAUNCHER_FRAGMENT)) { case com.linka.lockapp.aos.module.helpers.Constants.LAUNCHER_FRAGMENT : fragment = com.linka.lockapp.aos.module.pages.home.MainTabBarPageFragment.newInstance(com.linka.lockapp.aos.module.model.LinkaNotificationSettings.get_latest_linka()); break; case com.linka.lockapp.aos.module.helpers.Constants.SET_NAME_FRAGMENT : fragment = com.linka.lockapp.aos.module.pages.setup.SetupLinka3.newInstance(false); break; case com.linka.lockapp.aos.module.helpers.Constants.SET_PAC_FRAGMENT : this.finish(); startActivity(new android.content.Intent(this, com.linka.lockapp.aos.module.pages.walkthrough.WalkthroughActivity.class)); break; case com.linka.lockapp.aos.module.helpers.Constants.TUTORIAL_FRAGMENT : this.finish(); startActivity(new android.content.Intent(this, com.linka.lockapp.aos.module.pages.walkthrough.WalkthroughActivity.class)); break; case com.linka.lockapp.aos.module.helpers.Constants.DONE_FRAGMENT : this.finish(); startActivity(new android.content.Intent(this, com.linka.lockapp.aos.module.pages.walkthrough.WalkthroughActivity.class)); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1810/buggy-version/app.src.main.java.com.linka.lockapp.aos.AppMainActivity.java", "BodyUseAPI": [], "Fixed commit": "eb9d6a6812d9032b86b4bf8badcafae04e31656c", "Url": "https://api.github.com/repos/gkurghinyan/LINKA-android-app", "Date": "2018-06-13T12:06:14Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.linka.lockapp.aos.module.gcm.myFirebaseMessagingService.getSystemService(com.linka.lockapp.aos.module.gcm.NOTIFICATION_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (notificationManager != null) { notificationManager.notify(1, notification); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1810/buggy-version/app.src.main.java.com.linka.lockapp.aos.module.gcm.myFirebaseMessagingService.java", "BodyUseAPI": ["android.app.NotificationManager.notify(int,android.app.Notification)"], "Fixed commit": "eb9d6a6812d9032b86b4bf8badcafae04e31656c", "Url": "https://api.github.com/repos/gkurghinyan/LINKA-android-app", "Date": "2018-06-13T12:06:14Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jivesoftware.smackx.ox.OpenPgpContact.getTrustedAnnouncedKeys()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (keys != null) { recipientKeys.add(keys); }else { org.jivesoftware.smackx.ox.crypto.PainlessOpenPgpProvider.LOGGER.log(java.util.logging.Level.WARNING, (\"There are no suitable keys for contact \" + (contact.getJid().toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8964/buggy-version/smack-openpgp.src.main.java.org.jivesoftware.smackx.ox.crypto.PainlessOpenPgpProvider.java", "BodyUseAPI": ["java.util.ArrayList<org.bouncycastle.openpgp.PGPPublicKeyRingCollection>.add(org.bouncycastle.openpgp.PGPPublicKeyRingCollection)"], "Fixed commit": "b126f10e495402876899da4bca511c5eaf7e861a", "Url": "https://api.github.com/repos/vanitasvitae/Smack", "Date": "2018-07-25T21:35:10Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jivesoftware.smackx.ox.OpenPgpContact.getTrustedAnnouncedKeys()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (keys != null) { recipientKeys.add(keys); }else { org.jivesoftware.smackx.ox.crypto.PainlessOpenPgpProvider.LOGGER.log(java.util.logging.Level.WARNING, (\"There are no suitable keys for contact \" + (contact.getJid().toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8964/buggy-version/smack-openpgp.src.main.java.org.jivesoftware.smackx.ox.crypto.PainlessOpenPgpProvider.java", "BodyUseAPI": ["java.util.ArrayList<org.bouncycastle.openpgp.PGPPublicKeyRingCollection>.add(org.bouncycastle.openpgp.PGPPublicKeyRingCollection)"], "Fixed commit": "b126f10e495402876899da4bca511c5eaf7e861a", "Url": "https://api.github.com/repos/vanitasvitae/Smack", "Date": "2018-07-25T21:35:10Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["shared.client.ClientModel.getTeams()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (teams != null) { for (int i = 0; i <= 1; i++) { teams[i].removePlayer(msg.player.id); } teamsChanged(model.getTeams()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6310/buggy-version/src.shared.client.AbstractClient.java", "BodyUseAPI": ["teams[i].removePlayer(msg.player.id)"], "Fixed commit": "bfaf0a4228ddee7d58ac1d728d9602abcebd92f4", "Url": "https://api.github.com/repos/mcalzaferri/Schieber", "Date": "2018-04-22T21:28:28Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.n4js.flowgraphs.factories.DelegatingNodeFactory.create(org.eclipse.n4js.flowgraphs.factories.ReentrantASTIterator,NodeNames.THEN,org.eclipse.n4js.n4JS.ConditionalExpression,condExpr.getTrueExpression())", "org.eclipse.n4js.flowgraphs.factories.DelegatingNodeFactory.create(org.eclipse.n4js.flowgraphs.factories.ReentrantASTIterator,NodeNames.ELSE,org.eclipse.n4js.n4JS.ConditionalExpression,condExpr.getFalseExpression())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((thenNode == null) && (elseNode == null)) { cNode.connectInternalSucc(conditionNode, exitNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7519/buggy-version/plugins.org.eclipse.n4js.flowgraphs.src.org.eclipse.n4js.flowgraphs.factories.ConditionalExpressionFactory.java", "BodyUseAPI": [], "Fixed commit": "b1cd086087f8dc87dac83d01d885960e8aa629bd", "Url": "https://api.github.com/repos/eclipse/n4js", "Date": "2018-02-05T17:22:29Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (step < 1) step = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7447/buggy-version/src.nz.ac.aut.SentienceLab.EarthquakeDatasetReader.EarthquakeDatasetReaderForm.java", "BodyUseAPI": [], "Fixed commit": "100fb90fda2ce8c6227aa134ed8a0f6a77b634e1", "Url": "https://api.github.com/repos/stefanmarks/GeosciencesDatasetReader", "Date": "2018-07-25T03:21:39Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (invalidEmailEntered) { throw new java.lang.IllegalArgumentException(); }else { createUser(java.lang.String.valueOf(registerUserName.getText()), java.lang.String.valueOf(registerEmail.getText()), java.lang.String.valueOf(registerPassword.getText())); registerButton.setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View view) { android.content.Intent loginIntent = new android.content.Intent(com.example.slmns.ksustudyroom.RegisterActivity.this, com.example.slmns.ksustudyroom.LogInActivity.class); com.example.slmns.ksustudyroom.RegisterActivity.this.startActivity(loginIntent); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3361/buggy-version/KSUStudyRoom.app.src.main.java.com.example.slmns.ksustudyroom.RegisterActivity.java", "BodyUseAPI": [], "Fixed commit": "0fd7f904d67f02e4ec0f9666994aa72248af9d59", "Url": "https://api.github.com/repos/KSUstudyRoomApp/KSUstudyApp", "Date": "2018-04-04T00:57:45Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.codahale.metrics.SharedMetricRegistries.tryGetDefault()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (systemRegistry == null) { systemRegistry = com.codahale.metrics.SharedMetricRegistries.setDefault(com.erudika.para.metrics.MetricsUtils.SYSTEM_METRICS_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4239/buggy-version/para-server.src.main.java.com.erudika.para.metrics.MetricsUtils.java", "BodyUseAPI": [], "Fixed commit": "3b000cefd89c0c6d51e61f7b067a3fc8d2b097a5", "Url": "https://api.github.com/repos/Erudika/para", "Date": "2018-01-05T00:43:51Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((game.getVote()) != null) { vote = new com.dml.mpgame.game.extend.vote.GameFinishVoteValueObject(game.getVote()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2476/buggy-version/src.main.java.com.dml.mpgame.game.extend.fpmpv.FixedPlayersMultipanAndVotetofinishGameValueObject.java", "BodyUseAPI": [], "Fixed commit": "211f2ad554b50a67b07419d1c085c11c355226ca", "Url": "https://api.github.com/repos/zhengchengdong/mpgame.dml", "Date": "2018-09-18T06:04:47Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (parent != null) { compare = parent.compareTo(e); if (compare > 0) { if ((parent.left.balance) == 0) { indicatorsOfNecessityOfRebalancing.set(((indicatorsOfNecessityOfRebalancing.size()) - 1), false); } }else if (compare < 0) { if ((parent.right.balance) == 0) { indicatorsOfNecessityOfRebalancing.set(((indicatorsOfNecessityOfRebalancing.size()) - 1), false); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2895/buggy-version/src.ru.yaroslavskudarnov.BST.main.AVLTree.java", "BodyUseAPI": ["ru.yaroslavskudarnov.BST.main.AVLTree<E>.AVLTreeNode.compareTo(E)"], "Fixed commit": "7893a8561fbc3860ab911e2c88e386d11ee58434", "Url": "https://api.github.com/repos/YaroslavSkudarnov/search-trees", "Date": "2018-02-13T21:18:45Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((aRoundOff == dRoundOff) && (aRoundOff > hRoundOff)) { mDc.setText(\"X2\"); }else { mDc.setText(\"1X\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5671/buggy-version/app.src.main.java.com.salajim.musab.soccerpredictor.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6621c1f304f51f3446a21768d966df7925ea0850", "Url": "https://api.github.com/repos/Musab36/SoccerPredictor", "Date": "2018-04-19T12:07:07Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hdfs.server.federation.resolver.PathLocation.getSourcePath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (src != null) { if (src.startsWith(path)) { org.apache.hadoop.hdfs.server.federation.resolver.MountTableResolver.LOG.debug(\"Removing {}\", src); it.remove(); } }else { java.lang.String dest = loc.getDefaultLocation().getDest(); if (dest.startsWith(path)) { org.apache.hadoop.hdfs.server.federation.resolver.MountTableResolver.LOG.debug(\"Removing default cache {}\", dest); it.remove(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7181/buggy-version/hadoop-hdfs-project.hadoop-hdfs.src.main.java.org.apache.hadoop.hdfs.server.federation.resolver.MountTableResolver.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,java.lang.String)", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "afe1a3ccd56a12fec900360a8a2855c080728e65", "Url": "https://api.github.com/repos/drosales57/hadoop", "Date": "2018-03-10T01:18:51Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getRoles().size()) > 0) { for (com.grubjack.cinema.model.Role role : user.getRoles()) { statement.setString(1, role.toString()); statement.setInt(2, user.getId()); statement.addBatch(); } statement.executeBatch(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/289/buggy-version/src.main.java.com.grubjack.cinema.dao.impl.UserDaoImpl.java", "BodyUseAPI": ["com.grubjack.cinema.model.User.getId()", "java.sql.PreparedStatement.setInt(int,user.getId())", "com.grubjack.cinema.model.User.getRoles()"], "Fixed commit": "d70370a7fd2e35e0fc1589483e218d7255f8db76", "Url": "https://api.github.com/repos/konovaliuk/urban", "Date": "2018-01-10T10:59:04Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (defaultConfig.exists()) { is = java.util.Arrays.asList(new java.io.FileInputStream(new java.io.File(\"./jenkins.yaml\"))); }else { is = java.util.Collections.EMPTY_LIST; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/594/buggy-version/src.main.java.org.jenkinsci.plugins.casc.ConfigurationAsCode.java", "BodyUseAPI": [], "Fixed commit": "5bdaa856e0971e6d9342825c94b7378b2c756c11", "Url": "https://api.github.com/repos/jenkinsci/configuration-as-code-plugin", "Date": "2018-01-24T09:11:50Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.maxim.visionplayer.MainActivity.findViewById(R.id.navigation)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((navigation.getVisibility()) == (android.view.View.INVISIBLE)) { navigation.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2413/buggy-version/app.src.main.java.com.maxim.visionplayer.MainActivity.java", "BodyUseAPI": ["android.support.design.widget.BottomNavigationView.setVisibility(View.VISIBLE)"], "Fixed commit": "220fd2a234f023dba9c9d059bc8a4a87d0d60e9b", "Url": "https://api.github.com/repos/maxim380/VisionPlayer", "Date": "2018-04-08T14:58:42Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reqQuery.getSqlType()) == (com.tadpole.common.define.core.define.PublicTadpoleDefine.SQL_TYPE.DDL)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9508/buggy-version/com.hangum.tadpole.rdb.core.src.com.hangum.tadpole.rdb.core.editors.main.composite.ResultSetComposite.java", "BodyUseAPI": [], "Fixed commit": "68774e219c5a07dacdb8f69d93192bfca0d38fac", "Url": "https://api.github.com/repos/woowahan-jaehoon/TadpoleForDBTools", "Date": "2018-07-03T02:32:22Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (view == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5950/buggy-version/stratus.src.main.java.com.hp.dsg.stratus.StratusActivity.java", "BodyUseAPI": [], "Fixed commit": "f8b96e725bead289df7458d8c5bb9d7b47c1e006", "Url": "https://api.github.com/repos/pe-pan/stratus-mobile-app", "Date": "2017-10-13T09:57:11Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rawLookup == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.LINE_COMMENT)) && (rawLookup2 == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.LINE_COMMENT))) { if ((next1Element == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.COLON)) && (next3Element == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.COLON))) { return false; } if (latestDoneMarker != null) { return true; } }else if ((rawLookup == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.LINE_COMMENT)) && (rawLookup2 == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.RIGHT_BRACE))) { if ((next1Element == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.COLON)) && (next2Element == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.IDENTIFIER))) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9288/buggy-version/tool-plugins.intellij.src.main.gen.org.ballerinalang.plugins.idea.parser.BallerinaParserUtil.java", "BodyUseAPI": [], "Fixed commit": "44517bf4872030d27a80198f54f3f049627d980c", "Url": "https://api.github.com/repos/NipunaMarcus/ballerina", "Date": "2018-05-21T14:43:32Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["vn.numbala.utils.SharePrefUtils.getInstance(context).read(SharePrefUtils.IDs)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == ids) ids = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3846/buggy-version/app.src.main.java.vn.numbala.receiver.SMSReceiver.java", "BodyUseAPI": [], "Fixed commit": "98f756a92cc1b481f32048439a54aba47e295d63", "Url": "https://api.github.com/repos/chauminhnhut90/Numbala", "Date": "2018-01-08T14:07:40Z"},
{"Line": "=>715", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<com.smartdevicelink.protocol.enums.SessionType, com.smartdevicelink.transport.enums.TransportType>.get(byte)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (transportType != null) { header.setTransportType(transportType); handlePacketToSend(header); }else { if ((serviceType.equals(SessionType.NAV)) && (activeTransports.containsValue(TransportType.USB))) { android.util.Log.d(com.smartdevicelink.protocol.SdlProtocol.TAG, ((\"activeTransports =\" + (activeTransports.values())) + \" Let's try endSession\")); header.setTransportType(TransportType.USB); handlePacketToSend(header); }else { android.util.Log.w(com.smartdevicelink.protocol.SdlProtocol.TAG, \"Not sending end session packet because there is no session on that transport\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7883/buggy-version/sdl_android.src.main.java.com.smartdevicelink.protocol.SdlProtocol.java", "BodyUseAPI": ["com.smartdevicelink.protocol.SdlPacket.setTransportType(com.smartdevicelink.transport.enums.TransportType)"], "Fixed commit": "39205405aa8308998bad734e1eb746447a676e54", "Url": "https://api.github.com/repos/shiniwat/sdl_android-1", "Date": "2018-08-27T12:02:21Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connectedTransports instanceof java.util.List) { for (com.smartdevicelink.transport.utl.TransportRecord record : connectedTransports) { if (record.getType().equals(transportType)) { return transportType; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7883/buggy-version/sdl_android.src.main.java.com.smartdevicelink.protocol.SdlProtocol.java", "BodyUseAPI": [], "Fixed commit": "39205405aa8308998bad734e1eb746447a676e54", "Url": "https://api.github.com/repos/shiniwat/sdl_android-1", "Date": "2018-08-27T12:02:21Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.android.SimpleCalc.MainActivity.getOperandText(android.widget.EditText)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (operandText.isEmpty()) { return 0.0; }else { return java.lang.Double.parseDouble(operandText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5035/buggy-version/app.src.main.java.com.example.android.SimpleCalc.MainActivity.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "637d64d5a74cfa785b76052c87fbd1f0e8b28b02", "Url": "https://api.github.com/repos/chua-d/fundamentals_3", "Date": "2018-04-12T06:47:20Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(primaryTorpedoStore.isEmpty())) && (!(secondaryTorpedoStore.isEmpty()))) { firingSuccess = (primaryTorpedoStore.fire(1)) && (secondaryTorpedoStore.fire(1)); wasPrimaryFiredLast = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9431/buggy-version/ivt-lab-master.src.main.java.hu.bme.mit.spaceship.GT4500.java", "BodyUseAPI": ["hu.bme.mit.spaceship.TorpedoStore.fire(int)", "hu.bme.mit.spaceship.TorpedoStore.fire(int)"], "Fixed commit": "d8f3334a162e5d9caf462fe77449751e036610be", "Url": "https://api.github.com/repos/Hbrndzs/ivt-lab", "Date": "2018-04-13T11:37:24Z"},
{"Line": "=>2733", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cloud.api.ApiDBUtils.findProjectByProjectAccountId(account.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (project != null) { response.setProjectId(project.getUuid()); response.setProjectName(project.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5043/buggy-version/cosmic-core.server.src.main.java.com.cloud.api.ApiResponseHelper.java", "BodyUseAPI": ["com.cloud.api.response.ControlledEntityResponse.setProjectId(project.getUuid())", "com.cloud.projects.Project.getUuid()", "com.cloud.projects.Project.getName()", "com.cloud.api.response.ControlledEntityResponse.setProjectName(project.getName())"], "Fixed commit": "191399bc858c6e576f446a33e158220496cd2e77", "Url": "https://api.github.com/repos/MissionCriticalCloud/cosmic", "Date": "2018-03-28T22:08:59Z"},
{"Line": "=>2782", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cloud.api.ApiDBUtils.findProjectByProjectAccountId(account.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (project != null) { response.setProjectId(project.getUuid()); response.setProjectName(project.getName()); response.setAccountName(account.getAccountName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5043/buggy-version/cosmic-core.server.src.main.java.com.cloud.api.ApiResponseHelper.java", "BodyUseAPI": ["com.cloud.projects.Project.getUuid()", "com.cloud.api.response.ControlledEntityResponse.setProjectName(project.getName())", "com.cloud.projects.Project.getName()", "com.cloud.api.response.ControlledEntityResponse.setProjectId(project.getUuid())"], "Fixed commit": "191399bc858c6e576f446a33e158220496cd2e77", "Url": "https://api.github.com/repos/MissionCriticalCloud/cosmic", "Date": "2018-03-28T22:08:59Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isShowing)) { isShowing = true; showGuideView(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/828/buggy-version/lib.src.main.java.easily.tech.guideview.lib.GuideViewFragment.java", "BodyUseAPI": [], "Fixed commit": "001f8f079019c2ddb8a407ab5b8ec662567550ae", "Url": "https://api.github.com/repos/easilycoder/GuideView", "Date": "2018-05-16T05:36:51Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { ((com.owncloud.android.ui.preview.PreviewImageActivity) (getActivity())).toggleFullScreen(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8502/buggy-version/src.com.owncloud.android.ui.preview.PreviewImageFragment.java", "BodyUseAPI": [], "Fixed commit": "e5b6d699674c586f28d9b53174e7df831039dcdd", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-04-05T07:56:12Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operand instanceof java.math.BigDecimal) { return operand; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/571/buggy-version/cql-engine.src.main.java.org.opencds.cqf.cql.elm.execution.ToDecimalEvaluator.java", "BodyUseAPI": [], "Fixed commit": "161be2735ef901b83ebe1ec32091930d0d9aa50f", "Url": "https://api.github.com/repos/DBCG/cql_engine", "Date": "2018-02-04T18:24:26Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.github.shynixn.ball.bukkit.core.nms.VersionSupport.getServerVersion().isVersionSameOrGreaterThan(VersionSupport.VERSION_1_13_R1)) && (text.equalsIgnoreCase(\"ENTITY_ZOMBIE_ATTACK_DOOR_WOOD\"))) { this.text = \"ENTITY_ZOMBIE_ATTACK_WOODEN_DOOR\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1079/buggy-version/ball-bukkit-core.src.main.java.com.github.shynixn.ball.bukkit.core.logic.persistence.entity.SoundBuilder.java", "BodyUseAPI": [], "Fixed commit": "1977b057c44b5d5605c9698fe8a0ade49e3d72c0", "Url": "https://api.github.com/repos/Shynixn/Ball", "Date": "2018-07-27T13:12:05Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.shynixn.ball.bukkit.core.nms.VersionSupport.getServerVersion()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (versionSupport.isVersionSameOrGreaterThan(VersionSupport.VERSION_1_13_R1)) { switch (this.text) { case \"GHAST_FIREBALL\" : { this.text = \"ENTITY_GHAST_SHOOT\"; break; } case \"NOTE_PLING\" : { this.text = \"BLOCK_NOTE_PLING\"; break; } case \"ZOMBIE_WOOD\" : { this.text = \"ENTITY_ZOMBIE_ATTACK_WOODEN_DOOR\"; break; } case \"none\" : { this.text = \"none\"; break; } default : { if (this.text.contains(\"WALK\")) { this.text = (\"ENTITY_\" + (this.text.toUpperCase().split(\"_\")[0])) + \"_STEP\"; }else if (this.text.contains(\"IDLE\")) { this.text = (\"ENTITY_\" + (this.text.toUpperCase().split(\"_\")[0])) + \"_AMBIENT\"; } } } }else if (versionSupport.isVersionSameOrGreaterThan(VersionSupport.VERSION_1_9_R1)) { switch (this.text) { case \"GHAST_FIREBALL\" : { this.text = \"ENTITY_GHAST_SHOOT\"; break; } case \"NOTE_PLING\" : { this.text = \"BLOCK_NOTE_PLING\"; break; } case \"ZOMBIE_WOOD\" : { this.text = \"ENTITY_ZOMBIE_ATTACK_DOOR_WOOD\"; break; } case \"none\" : { this.text = \"none\"; break; } default : { if (this.text.contains(\"WALK\")) { this.text = (\"ENTITY_\" + (this.text.toUpperCase().split(\"_\")[0])) + \"_STEP\"; }else if (this.text.contains(\"IDLE\")) { this.text = (\"ENTITY_\" + (this.text.toUpperCase().split(\"_\")[0])) + \"_AMBIENT\"; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1079/buggy-version/ball-bukkit-core.src.main.java.com.github.shynixn.ball.bukkit.core.logic.persistence.entity.SoundBuilder.java", "BodyUseAPI": ["com.github.shynixn.ball.bukkit.core.nms.VersionSupport.isVersionSameOrGreaterThan(VersionSupport.VERSION_1_9_R1)"], "Fixed commit": "1977b057c44b5d5605c9698fe8a0ade49e3d72c0", "Url": "https://api.github.com/repos/Shynixn/Ball", "Date": "2018-07-27T13:12:05Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.github.shynixn.ball.bukkit.core.nms.VersionSupport.getServerVersion().isVersionSameOrGreaterThan(VersionSupport.VERSION_1_13_R1)) && (text.equalsIgnoreCase(\"ENTITY_ZOMBIE_ATTACK_DOOR_WOOD\"))) { this.text = \"ENTITY_ZOMBIE_ATTACK_WOODEN_DOOR\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1079/buggy-version/ball-bukkit-core.src.main.java.com.github.shynixn.ball.bukkit.core.logic.persistence.entity.SoundBuilder.java", "BodyUseAPI": [], "Fixed commit": "1977b057c44b5d5605c9698fe8a0ade49e3d72c0", "Url": "https://api.github.com/repos/Shynixn/Ball", "Date": "2018-07-27T13:12:05Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.example.nikkoekasaputra.simplenewsapps.model.News>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((news.getAuthorNews()) == null) { holder.lblAuthorNews.setText(\"Unknown Author\"); }else { holder.lblAuthorNews.setText(news.getAuthorNews()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/443/buggy-version/app.src.main.java.com.example.nikkoekasaputra.simplenewsapps.adapter.NewsAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(news.getAuthorNews())", "com.example.nikkoekasaputra.simplenewsapps.model.News.getAuthorNews()"], "Fixed commit": "ad8f03f2ead1bc8c6bfb36420f409bdb09e45a29", "Url": "https://api.github.com/repos/NikkoES/SimpleNewsApps", "Date": "2018-03-12T16:54:11Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((news.getContentNews()) == null) { i.putExtra(\"contentNews\", \"No Description\"); }else { i.putExtra(\"contentNews\", news.getContentNews()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/443/buggy-version/app.src.main.java.com.example.nikkoekasaputra.simplenewsapps.adapter.NewsAdapter.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,news.getContentNews())", "com.example.nikkoekasaputra.simplenewsapps.model.News.getContentNews()"], "Fixed commit": "ad8f03f2ead1bc8c6bfb36420f409bdb09e45a29", "Url": "https://api.github.com/repos/NikkoES/SimpleNewsApps", "Date": "2018-03-12T16:54:11Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((news.getAuthorNews()) == null) { i.putExtra(\"authorNews\", \"Unknown Author\"); }else { i.putExtra(\"authorNews\", news.getAuthorNews()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/443/buggy-version/app.src.main.java.com.example.nikkoekasaputra.simplenewsapps.adapter.NewsAdapter.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,news.getAuthorNews())", "com.example.nikkoekasaputra.simplenewsapps.model.News.getAuthorNews()"], "Fixed commit": "ad8f03f2ead1bc8c6bfb36420f409bdb09e45a29", "Url": "https://api.github.com/repos/NikkoES/SimpleNewsApps", "Date": "2018-03-12T16:54:11Z"},
{"Line": "=>472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dir == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3804/buggy-version/src.main.java.com.quseit.util.FileHelper.java", "BodyUseAPI": [], "Fixed commit": "47ce80ff2c76fe0479be6a826a10b3084c26bb3a", "Url": "https://api.github.com/repos/QPYPI/qbaselib", "Date": "2018-04-27T14:52:04Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isShow) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2628/buggy-version/zndroid_common.src.main.java.com.zndroid.common.toast.impl.ZToastPlus.java", "BodyUseAPI": [], "Fixed commit": "548e782408066983064142ce1bce8604b36c5f8d", "Url": "https://api.github.com/repos/lzy-h2o2/CommonManager", "Date": "2018-10-16T13:27:36Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["repository.getByEmailId(emailId).orElse(<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (userEntity != null) { return new memory_cards.models.dtos.UserDto(userEntity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8806/buggy-version/src.main.java.memory_cards.services.impl.UserServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "1fc0fcd9aeb98688a264641ad0957efa7b4da541", "Url": "https://api.github.com/repos/ankit-learns/memory-cards", "Date": "2018-09-09T09:58:49Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.activity.CropActivity.findPoints()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (points != null) { mSelectionImageView.setPoints(points); }else { com.owncloud.android.lib.common.utils.Log_OC.d(com.owncloud.android.ui.activity.CropActivity.TAG, getResources().getString(R.string.no_contour_found)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6270/buggy-version/src.com.owncloud.android.ui.activity.CropActivity.java", "BodyUseAPI": ["com.owncloud.android.ui.QuadrilateralSelectionImageView.setPoints(java.util.List<android.graphics.PointF>)"], "Fixed commit": "8e7c3e80527e7c826601cd918a03f4dd4b923260", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-03-12T06:43:04Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ssoResponse.message) == \"\ufffd\ufffd\u00bc\ufffd\ufffd\u02b1\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u00b5\ufffd\u00bc\ufffd\ufffd\") { reInit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3160/buggy-version/src.requests.Requests.java", "BodyUseAPI": [], "Fixed commit": "a342934b865d120af0aae665e683c0795b59d429", "Url": "https://api.github.com/repos/IengY/WHUT_Course", "Date": "2018-03-17T12:44:09Z"},
{"Line": "=>576", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((isLive()) && (position == (player.getDuration()))) { player.seekToDefaultPosition(); }else { player.seekTo(position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7616/buggy-version/playkit.src.main.java.com.kaltura.playkit.player.ExoPlayerWrapper.java", "BodyUseAPI": ["com.google.android.exoplayer2.SimpleExoPlayer.seekTo(long)", "com.google.android.exoplayer2.SimpleExoPlayer.seekToDefaultPosition()"], "Fixed commit": "4f1659d01d1353e585f9d88fd34a0c870c2213f5", "Url": "https://api.github.com/repos/kaltura/playkit-android", "Date": "2018-09-16T09:23:54Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ignoreColInModel) { it.remove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1502/buggy-version/src.main.java.com.github.janglle.mbg.plugins.SoftDeletePlugin.java", "BodyUseAPI": [], "Fixed commit": "230fe6356178e3d41ca2be75930746d2007ee190", "Url": "https://api.github.com/repos/janglle/mybatis-generator-plugin", "Date": "2018-01-31T08:05:59Z"},
{"Line": "=>470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xw.repo.BubbleSeekBar.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (((parent != null) && (parent instanceof android.view.View)) && ((((android.view.View) (parent)).getMeasuredWidth()) > 0)) { mPoint[0] %= ((android.view.View) (parent)).getMeasuredWidth(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6744/buggy-version/bubbleseekbar.src.main.java.com.xw.repo.BubbleSeekBar.java", "BodyUseAPI": ["android.view.ViewParent.getMeasuredWidth()"], "Fixed commit": "bc16b52816970544a4c3c6644bc900c023998916", "Url": "https://api.github.com/repos/woxingPATHo/BubbleSeekBar", "Date": "2018-03-06T02:29:48Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entry.getValue().toString().matches(\"\\\\d+(?:\\\\.\\\\d+)?\")) { if ((java.lang.Integer.parseInt(entry.getValue().toString())) < (java.lang.Integer.parseInt(timestamp_7days))) { sharedPref.edit().remove(entry.getKey()).apply(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5509/buggy-version/app.src.main.java.thijsb.nrcmeestgelezen.MainActivity.java", "BodyUseAPI": ["entry.getValue().toString()", "java.lang.Integer.parseInt(java.lang.String)", "sharedPref.edit().remove(entry.getKey()).apply()", "java.util.Map.Entry<java.lang.String, ?>.getKey()", "java.util.Map.Entry<java.lang.String, ?>.getValue()", "sharedPref.edit().remove(java.lang.String)"], "Fixed commit": "5bdd1350877fc85e81206c592f9c5ea2924cd8c6", "Url": "https://api.github.com/repos/hetisthijs/nrcmeestgelezen", "Date": "2018-08-20T14:59:20Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(com.facebook.drawee.backends.pipeline.Fresco.hasBeenInitialized())) { com.facebook.drawee.backends.pipeline.Fresco.initialize(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8833/buggy-version/app.src.main.java.sse.bupt.cn.translator.adapter.EnglishTextAdapter.java", "BodyUseAPI": [], "Fixed commit": "bd19e930ce9bb93c441244d6ce6cb97cff946f62", "Url": "https://api.github.com/repos/leeshun/translator", "Date": "2018-04-24T04:11:08Z"},
{"Line": "=>534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mAnimateInitialMove) { mIsInitialAnimationRunning = true; }else { mIsInitialAnimationRunning = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8308/buggy-version/library.src.main.java.jp.co.recruit_lifestyle.android.floatingview.FloatingView.java", "BodyUseAPI": [], "Fixed commit": "c1d7eafdb2ec43cd9ccff465759f704ebd836e7f", "Url": "https://api.github.com/repos/ktssolution/FloatingView", "Date": "2018-07-14T03:54:02Z"},
{"Line": "=>639", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newTask.getId()) != null) addTask(th);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7795/buggy-version/server.src.main.java.com.soffid.iam.sync.service.TaskQueueImpl.java", "BodyUseAPI": [], "Fixed commit": "ded797694581cced2bf122ddc627d1040b190896", "Url": "https://api.github.com/repos/SoffidIAM/syncserver", "Date": "2018-07-27T14:09:58Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.nobodyhub.payroll.core.formula.FormulaFactory.Node<T>>.get(curFormula.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (curNode == null) { curNode = new com.nobodyhub.payroll.core.formula.FormulaFactory.Node(curFormula); nodes.put(curFormula.getId(), curNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1566/buggy-version/calc-core.src.main.java.com.nobodyhub.payroll.core.formula.FormulaFactory.java", "BodyUseAPI": [], "Fixed commit": "23cc4aec6c1f0eb039076465a3e6e3a399ffb7d5", "Url": "https://api.github.com/repos/nobodyhub/payroll-system", "Date": "2018-06-03T13:07:25Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.lang.model.element.TypeElement.getSuperclass()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (typeMirror.toString().startsWith(\"java.lang.Enum<\")) { type = com.noober.processor.HelperConfig.SERIALIZABLE; }else if (!(typeMirror.toString().equals(java.lang.Object.class.getCanonicalName()))) { type = com.noober.processor.HelperConfig.getFieldInterface(elementUtils, typeMirror.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3322/buggy-version/savehelper-processor.src.main.java.com.noober.processor.HelperConfig.java", "BodyUseAPI": ["javax.lang.model.type.TypeMirror.toString()", "com.noober.processor.HelperConfig.getFieldInterface(javax.lang.model.util.Elements,java.lang.String)", "java.lang.String.equals(java.lang.String)", "javax.lang.model.type.TypeMirror.toString()"], "Fixed commit": "e01460c6d66f791c8ca958d879a6c6b7ed086a9d", "Url": "https://api.github.com/repos/JavaNoober/AutoSave", "Date": "2018-03-10T05:17:15Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pideriver.a2017tatorscouttracingapp.MatchSetup.readFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(teams.isEmpty())) { return teams.get((((matchNumber - 1) * 6) + group)); }else { return \"File not found. Please enter number manually\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3306/buggy-version/app.src.main.java.com.pideriver.a2017tatorscouttracingapp.MatchSetup.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "2c45819c06ae5348a5f126ee51ae060c8cd94ea2", "Url": "https://api.github.com/repos/Team2122Scouting/TracingApp", "Date": "2018-01-15T02:52:39Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(deck.isEmpty())) s.hands[action.getPlayer()][action.getCard()] = deck.pop(); else s.hands[action.getPlayer()][action.getCard()] = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/649/buggy-version/src.hanabAI.State.java", "BodyUseAPI": ["java.util.Stack<hanabAI.Card>.pop()"], "Fixed commit": "9345bbbc640909bcdc0a4082283972afd4b94f6c", "Url": "https://api.github.com/repos/jordanvr/hanabAI", "Date": "2018-10-18T03:21:11Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isComplete()) { estPctComplete = 1.0; }else if (((fieldCalculationsPerformed) == 0) && ((fieldEstimatedCalculationsRemaining) == 0)) { estPctComplete = 0; }else { estPctComplete = ((double) (fieldCalculationsPerformed)) / (((double) (fieldCalculationsPerformed)) + (fieldEstimatedCalculationsRemaining)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9836/buggy-version/merle-generator.src.org.jdawg.merle.GenerateCoatProgress.java", "BodyUseAPI": [], "Fixed commit": "d0c1015da547c74d5bd21eca4904336fd4e4a9dc", "Url": "https://api.github.com/repos/dschmidt13/merle", "Date": "2018-06-07T17:46:54Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["foundation.core.tool.AESUtil.encrypt(byte[],byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (encryptPassword != null) { return foundation.core.tool.AESUtil.byteToHexString(encryptPassword); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2817/buggy-version/ph-member.ph-member-service.src.main.java.ph.member.service.imp.MemberServiceImpl.java", "BodyUseAPI": ["foundation.core.tool.AESUtil.byteToHexString(byte[])"], "Fixed commit": "ee6c0b6dc87a8f6e0cb0b5978a873a6553fd382d", "Url": "https://api.github.com/repos/GengHaoChen/ph-servitization", "Date": "2018-01-01T14:35:19Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isNotEmpty(memberName)) team.getMembers().add(new objective.taskboard.data.UserTeam(memberName, teamName));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7922/buggy-version/src.main.java.objective.taskboard.controller.TeamController.java", "BodyUseAPI": ["team.getMembers().add(objective.taskboard.data.UserTeam)"], "Fixed commit": "f05585248b13b0903faec8dc368f6edc448234ca", "Url": "https://api.github.com/repos/objective-solutions/taskboard", "Date": "2018-05-04T20:27:34Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["kz.desh.snowballs.server.entity.PlayerEntity.getActionEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((kz.desh.snowballs.server.entity.action.ActionType.FREE) == (actionEntity.getType())) { return createResponse(kz.desh.snowballs.server.commands.ability.FAIL_STATUS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4195/buggy-version/src.main.java.kz.desh.snowballs.server.commands.ability.CancelStudyAbilityCommand.java", "BodyUseAPI": [], "Fixed commit": "0a9f6c89d5ae292d34f5d9c3538cb1d0f1e7f637", "Url": "https://api.github.com/repos/danousman/snowballs", "Date": "2018-10-15T10:00:14Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.Objects.equals(name, \"<init>\")) this.signature.methodSignatures.put(com.github.andyshao.asm.TypeOperation.getMethod(desc, name, this.signature.clazz), signature);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1220/buggy-version/src.main.java.com.github.andyshao.reflect.SignatureDetector.java", "BodyUseAPI": ["java.util.Map<java.lang.reflect.Method, java.lang.String>.put(com.github.andyshao.asm.TypeOperation.getMethod(desc, name, this.signature.clazz),java.lang.String)", "com.github.andyshao.asm.TypeOperation.getMethod(java.lang.String,java.lang.String,java.lang.Class<?>)"], "Fixed commit": "512c2f1c76b51d13a4d4163e2ffd3dae51f3e89e", "Url": "https://api.github.com/repos/Andy-Shao/Gear", "Date": "2018-08-20T05:53:28Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!lazy) { tags = new java.util.ArrayList<>(); tags.addAll(item.getTags()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3978/buggy-version/src.main.java.app.module.dto.WebItem.java", "BodyUseAPI": [], "Fixed commit": "502deaf10766cd516b32fa959a2ca1eac31af8a0", "Url": "https://api.github.com/repos/bodinbill/SimpleApi", "Date": "2018-03-03T10:10:23Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rm.size()) == 0) { javax.swing.JOptionPane.showMessageDialog(this, \"No Route to Display\"); }else { main.java.memoranda.ui.ViewMapDialog dialog = new main.java.memoranda.ui.ViewMapDialog(new javax.swing.JFrame(), true, rm); dialog.setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6257/buggy-version/src.main.java.memoranda.ui.AppFrame.java", "BodyUseAPI": [], "Fixed commit": "582406778bbe53ac953bce6d443b2a1614da952e", "Url": "https://api.github.com/repos/ser316asu-2018/Stahleck", "Date": "2018-04-27T04:27:07Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(routes.isEmpty())) { return routes.get(id); }else { return new main.java.memoranda.route.Route(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6257/buggy-version/src.main.java.memoranda.route.RouteManager.java", "BodyUseAPI": ["java.util.ArrayList<main.java.memoranda.route.Route>.get(int)"], "Fixed commit": "582406778bbe53ac953bce6d443b2a1614da952e", "Url": "https://api.github.com/repos/ser316asu-2018/Stahleck", "Date": "2018-04-27T04:27:07Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.marvin.kuwerdas.song.SongFragment.song) != null) { com.example.marvin.kuwerdas.song.SongFragment.song = s; com.example.marvin.kuwerdas.song.SongFragment.getInstance().notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8865/buggy-version/Kuwerdas.app.src.main.java.com.example.marvin.kuwerdas.db.SongDatabaseUtils.java", "BodyUseAPI": [], "Fixed commit": "9cc9e8c305241938a01bc6f7b53ebf89647774f7", "Url": "https://api.github.com/repos/MarvLpz/Music-App-Essentials", "Date": "2018-09-06T04:04:20Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["node.getNetwork().extractItem(net.minecraft.item.ItemStack,int,Action.PERFORM)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (extracted != null) { net.minecraftforge.items.ItemHandlerHelper.insertItemStacked(handler, extracted, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4248/buggy-version/src.main.java.com.raoulvdberge.refinedstorage.integration.oc.EnvironmentNetwork.java", "BodyUseAPI": ["net.minecraftforge.items.ItemHandlerHelper.insertItemStacked(net.minecraftforge.items.IItemHandler,net.minecraft.item.ItemStack,boolean)"], "Fixed commit": "2f0b7b3ebac635cdb94fbdf062998fe583e67263", "Url": "https://api.github.com/repos/halvors/refinedstorage", "Date": "2018-10-22T17:37:00Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((firstRoute) != null) { addFirstRoute(firstRoute); if ((secondRoute) != null) { addSecondRoute(secondRoute); if ((thirdRoute) != null) { addSecondRoute(thirdRoute); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6850/buggy-version/app.src.main.java.org.septa.android.app.transitview.TransitViewFragment.java", "BodyUseAPI": [], "Fixed commit": "78d527832d8d5f7320a5ad642ccabd573ef79392", "Url": "https://api.github.com/repos/septadev/SEPTA-Android", "Date": "2018-07-20T20:11:35Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isFirst)) { int size = 0; if ((config.get(\"costar.bitmap_size\")) != null) size = java.lang.Integer.parseInt(config.get(\"costar.bitmap_size\").toString()); explorer.newAnalysis(id, sf, ((gov.nasa.jpf.vm.MethodInfo) (refObject)), size); isFirst = true; return new costar.CoStarChoiceGenerator(id, explorer); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9212/buggy-version/src.main.costar.CoStarPerturbator.java", "BodyUseAPI": [], "Fixed commit": "322649057bd9195a5fb50f4dcd3e85ed66892419", "Url": "https://api.github.com/repos/star-finder/jpf-costar", "Date": "2018-06-09T02:13:21Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((l.getGrade()) < 2.56) { (grades[1])++; }else if ((l.getGrade()) < 3.56) { (grades[2])++; }else if ((l.getGrade()) < 4.01) { (grades[3])++; }else if ((l.getGrade()) > 4.0) { (grades[4])++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1145/buggy-version/app.src.main.java.pme.ai.fhe.de.studybuddy.fragments.BarChartFragment.java", "BodyUseAPI": ["pme.ai.fhe.de.studybuddy.model.Lecture.getGrade()", "pme.ai.fhe.de.studybuddy.model.Lecture.getGrade()", "pme.ai.fhe.de.studybuddy.model.Lecture.getGrade()"], "Fixed commit": "8c9ebeef1526fbdd4a44ccf89da38cce23e332c9", "Url": "https://api.github.com/repos/MX-W/StudyBuddy", "Date": "2018-08-02T14:08:03Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cell.findViewById(R.id.patient_detail_writeup).findViewById(R.id.editTextAge)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ageTextView.getText().toString()) == null) { emergency_ref.child(\"/patient_care_report_form/patient_details/age\").setValue(\"N/A\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7122/buggy-version/app.src.main.java.com.southafricaproject.efar.ActivityEFARInfo.java", "BodyUseAPI": [], "Fixed commit": "7ae82549096d4b7244df5389fdc3d16d73210727", "Url": "https://api.github.com/repos/Mackatttack123/efar", "Date": "2018-06-08T22:08:46Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerInteractAtEntityEvent.getHand()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hand == (org.bukkit.inventory.EquipmentSlot.HAND)) { player.getInventory().setItemInMainHand(dolphin_bucket.clone()); }else { player.getInventory().setItemInOffHand(dolphin_bucket.clone()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2369/buggy-version/src.main.java.net.pl3x.bukkit.ridabledolphins.listener.DolphinListener.java", "BodyUseAPI": [], "Fixed commit": "0801736147326c77cdf5ca8a872c6a1a7c409aae", "Url": "https://api.github.com/repos/BillyGalbreath/RidableDolphins", "Date": "2018-07-29T02:52:32Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerInteractAtEntityEvent.getHand()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hand == (org.bukkit.inventory.EquipmentSlot.HAND)) { bucket = player.getInventory().getItemInMainHand(); }else if (hand == (org.bukkit.inventory.EquipmentSlot.OFF_HAND)) { bucket = player.getInventory().getItemInOffHand(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2369/buggy-version/src.main.java.net.pl3x.bukkit.ridabledolphins.listener.DolphinListener.java", "BodyUseAPI": [], "Fixed commit": "0801736147326c77cdf5ca8a872c6a1a7c409aae", "Url": "https://api.github.com/repos/BillyGalbreath/RidableDolphins", "Date": "2018-07-29T02:52:32Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerBucketEmptyEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((player.getGameMode()) != (org.bukkit.GameMode.CREATIVE)) { bucket.setAmount(java.lang.Math.max(0, ((bucket.getAmount()) - 1))); if (hand == (org.bukkit.inventory.EquipmentSlot.HAND)) { player.getInventory().setItemInMainHand(bucket); }else { player.getInventory().setItemInOffHand(bucket); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2369/buggy-version/src.main.java.net.pl3x.bukkit.ridabledolphins.listener.DolphinListener.java", "BodyUseAPI": ["org.bukkit.entity.Player.getInventory()", "org.bukkit.entity.Player.getInventory()", "player.getInventory().setItemInMainHand(org.bukkit.inventory.ItemStack)", "player.getInventory().setItemInOffHand(org.bukkit.inventory.ItemStack)"], "Fixed commit": "0801736147326c77cdf5ca8a872c6a1a7c409aae", "Url": "https://api.github.com/repos/BillyGalbreath/RidableDolphins", "Date": "2018-07-29T02:52:32Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (urlTemplate.contains(\"{$\")) { if (com.ibm.ws.microprofile.openapi.utils.OpenAPIUtils.isDebugEnabled(com.ibm.ws.microprofile.openapi.impl.validation.CallbackValidator.tc)) { com.ibm.websphere.ras.Tr.debug(com.ibm.ws.microprofile.openapi.impl.validation.CallbackValidator.tc, (\"Path contains variables. Skip validation of url: \" + key)); } }else { if (!(com.ibm.ws.microprofile.openapi.impl.validation.ValidatorUtils.isValidURL(buildURL))) { message = com.ibm.websphere.ras.Tr.formatMessage(com.ibm.ws.microprofile.openapi.impl.validation.CallbackValidator.tc, \"callbackInvalidURL\", urlTemplate); helper.addValidationEvent(new com.ibm.ws.microprofile.openapi.impl.validation.OASValidationResult.ValidationEvent(ValidationEvent.Severity.ERROR, context.getLocation(), message)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7836/buggy-version/dev.com.ibm.ws.microprofile.openapi.src.com.ibm.ws.microprofile.openapi.impl.validation.CallbackValidator.java", "BodyUseAPI": ["com.ibm.websphere.ras.Tr.formatMessage(com.ibm.websphere.ras.TraceComponent,java.lang.String,java.lang.String)"], "Fixed commit": "50833aab228e16d2006e62035b1547099b0aa498", "Url": "https://api.github.com/repos/leochr/open-liberty", "Date": "2018-02-16T16:47:45Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (k2 < (val)) return ((val) == k2) || (left.contains(k2)); else return ((val) == k2) || (right.contains(k2));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1231/buggy-version/src5.Sets.java", "BodyUseAPI": ["Sets.contains(int)", "Sets.contains(int)"], "Fixed commit": "90fc1b8a941e9eb4da46e336c215447e42e054d4", "Url": "https://api.github.com/repos/mjdiloreto/Red-Black-Trees", "Date": "2018-02-21T00:38:14Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((formName) != null) for (java.util.Enumeration<java.lang.String> e = data.keys(); e.hasMoreElements();) { java.lang.String nm = e.nextElement(); results.put((((formName) + \".\") + nm), data.get(nm)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6915/buggy-version/makumba.makumba-jsp.src.main.java.org.makumba.forms.responder.FormResponder.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Object>.put((((formName) + \".\") + nm),java.lang.Object)"], "Fixed commit": "eaa355bb4418c737acc92908a82f0ec7ec8035f8", "Url": "https://api.github.com/repos/makumba/makumba", "Date": "2018-05-07T10:47:12Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (EDatabaseTypeName.MSSQL.getDisplayName().equals(info.getDbType())) { createStatament = \"conn.createStatement()\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2138/buggy-version/main.plugins.org.talend.designer.core.src.main.java.org.talend.designer.core.ui.editor.properties.controllers.GuessSchemaProcess.java", "BodyUseAPI": [], "Fixed commit": "c9b73d2c25ee6c95dba7c59381902559a9ea6c41", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2018-10-15T03:08:44Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((match.getGameId()) != gameId) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2351/buggy-version/src.main.java.com.capgemini.jstk.capmates.services.StatsService.java", "BodyUseAPI": [], "Fixed commit": "f17559b5fa701619d1f613cd86adeaf0bb90f92a", "Url": "https://api.github.com/repos/kredki/capmates", "Date": "2018-07-26T20:11:54Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.appengine.api.datastore.Entity.getProperties()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((entityProperties.get(\"fullText\")) instanceof com.google.appengine.api.datastore.Text) { this.fullText = ((com.google.appengine.api.datastore.Text) (entityProperties.get(\"fullText\"))).getValue(); }else if ((entityProperties.get(\"fullText\")) instanceof java.lang.String) { this.fullText = ((java.lang.String) (entityProperties.get(\"fullText\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8659/buggy-version/src.main.java.org.roorkee.rkerestapi.entity.Content.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.lang.Object.getValue()", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "84f88978f730815a88e9481aa5ae3af6c02497f3", "Url": "https://api.github.com/repos/amitrke/rke", "Date": "2018-02-09T16:28:37Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (destFile.exists()) { projectHelper.attachArtifact(project, \"yml\", classifier, destFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4983/buggy-version/plugin.src.main.java.io.fabric8.maven.plugin.mojo.build.BuildMojo.java", "BodyUseAPI": ["org.apache.maven.project.MavenProjectHelper.attachArtifact(io.fabric8.maven.plugin.mojo.build.BuildMojo.2,java.lang.String,java.lang.String,java.io.File)"], "Fixed commit": "bbd6ecf674dcd61a6914e5f9a736932dda11d60a", "Url": "https://api.github.com/repos/nicolaferraro/fabric8-maven-plugin", "Date": "2018-06-18T10:09:33Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x == 0) && (y == ((main.Board.BOARD_SIZE) - 1))) { return !((((board[x][y]) || (board[(x + 1)][y])) || (board[(x + 1)][(y - 1)])) || (board[x][(y - 1)])); }else if ((x == ((main.Board.BOARD_SIZE) - 1)) && (y == 0)) { return !((((board[x][y]) || (board[(x - 1)][y])) || (board[(x - 1)][(y + 1)])) || (board[x][(y + 1)])); }else { return !((((board[x][y]) || (board[(x - 1)][y])) || (board[(x - 1)][(y - 1)])) || (board[x][(y - 1)])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2638/buggy-version/src.main.Board.java", "BodyUseAPI": [], "Fixed commit": "1ad08445548703a9853782492fc299a1b2cb757d", "Url": "https://api.github.com/repos/anuarkaliyev23/tyantask3", "Date": "2018-05-01T16:48:44Z"},
{"Line": "=>601", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.selectedBody.getUnlocalizedName().contains(\"overworld\")) breathable = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7486/buggy-version/src.main.java.com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection.java", "BodyUseAPI": [], "Fixed commit": "952482e69e6a306655334f04dfff011b397bc19e", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-01-03T16:38:33Z"},
{"Line": "=>599", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((temp != null) && (!((this.selectedBody) instanceof micdoodle8.mods.galacticraft.api.galaxies.Satellite))) breathable = ((micdoodle8.mods.galacticraft.api.prefab.world.gen.WorldProviderSpace) (temp)).hasBreathableAtmosphere();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7486/buggy-version/src.main.java.com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection.java", "BodyUseAPI": [], "Fixed commit": "952482e69e6a306655334f04dfff011b397bc19e", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-01-03T16:38:33Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (detail == null) { hoverText = new com.arcaneminecraft.api.BaseComponent[]{ hoverName, hoverUUID }; }else { com.arcaneminecraft.api.BaseComponent hoverDetails = new com.arcaneminecraft.api.TextComponent((\" \" + detail)); hoverDetails.setColor(ChatColor.GRAY); hoverDetails.setItalic(true); hoverText = new com.arcaneminecraft.api.BaseComponent[]{ hoverName, hoverDetails, hoverUUID }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8494/buggy-version/src.main.java.com.arcaneminecraft.api.ArcaneText.java", "BodyUseAPI": [], "Fixed commit": "fd19de8b355686dc8466b51f3b3dc31b422c0bf3", "Url": "https://api.github.com/repos/ArcaneMinecraft/ArcaneAPI", "Date": "2018-06-29T09:15:33Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cataPlot) { chart.getCategoryPlot().setOutlineVisible(false); chart.getCategoryPlot().getRangeAxis().setAxisLineVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2365/buggy-version/src.economysimulation.Methods.java", "BodyUseAPI": [], "Fixed commit": "752fdde1697f1444dbe9bad2d46d8bb15cfd4df5", "Url": "https://api.github.com/repos/MaxGitHubRep/EconomySimulation", "Date": "2018-04-11T14:35:34Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(mDismissOnOutsideTouch)) && ((event.getAction()) == (android.view.MotionEvent.ACTION_OUTSIDE))) { return true; }else if (((event.getAction()) == (android.view.MotionEvent.ACTION_DOWN)) && (mDismissOnInsideTouch)) { dismiss(); return true; }else if ((mModal) && (mDismissOnOutsideTouch)) { mRootView.post(new java.lang.Runnable() { @java.lang.Override public void run() { dismiss(); } }); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/281/buggy-version/library.src.main.java.io.github.douglasjunior.androidSimpleTooltip.SimpleTooltip.java", "BodyUseAPI": ["android.view.MotionEvent.getAction()"], "Fixed commit": "7cb22d5a64196c4478606f267efa60529b18a3a5", "Url": "https://api.github.com/repos/jgavazzisp/android-simple-tooltip", "Date": "2018-03-22T07:36:59Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Matcher.group(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (memoryLookupTable.containsKey(reference)) { throw new java.lang.IllegalArgumentException(((\"reference <\" + reference) + \"> already defined\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6209/buggy-version/src.edu.kit.mima.core.Interpreter.java", "BodyUseAPI": [], "Fixed commit": "c4bd6b545cfae18c733f696d689627bf28e6ef11", "Url": "https://api.github.com/repos/weisJ/Mima", "Date": "2018-06-04T09:44:29Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (category1 == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9258/buggy-version/shopping.src.main.java.com.lyu.shopping.sysmanage.service.impl.Category1ServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "bf1925b6775d7d218e697a14869a77d751fe05bd", "Url": "https://api.github.com/repos/MrQuJL/product-recommendation-system", "Date": "2018-03-07T09:03:08Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((pageParam == null) || ((pageParam.getPageNo()) == null)) || ((pageParam.getPageSize()) == null)) { pageParam = new com.lyu.shopping.common.dto.PageParam(); pageParam.setPageNo(1); pageParam.setPageSize(5); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9258/buggy-version/shopping.src.main.java.com.lyu.shopping.sysmanage.service.impl.Category1ServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "bf1925b6775d7d218e697a14869a77d751fe05bd", "Url": "https://api.github.com/repos/MrQuJL/product-recommendation-system", "Date": "2018-03-07T09:03:08Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.app.Fragment.getTag()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(tag)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9632/buggy-version/rigger.src.main.java.com.jkb.fragment.rigger.helper.FragmentStackManager.java", "BodyUseAPI": [], "Fixed commit": "8b10a9466fc94a849ffc7582d1bdd28bf6c12f2c", "Url": "https://api.github.com/repos/JustKiddingBaby/FragmentRigger", "Date": "2018-08-14T13:31:12Z"},
{"Line": "=>3416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_shallUpdateScrollPos) { renderer.render(\"_listbox$shallUpdateScrollPos\", true); _shallUpdateScrollPos = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/17/buggy-version/zul.src.org.zkoss.zul.Listbox.java", "BodyUseAPI": [], "Fixed commit": "37de16188ffe08ad5a0ada7dbcd1c6d4c0a8ff68", "Url": "https://api.github.com/repos/zkoss/zk", "Date": "2018-08-31T11:12:20Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (logging) logger.info(\"performing Sync at /{}/{}\", srcContainer, object);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/985/buggy-version/dev.cosbench-api.src.com.intel.cosbench.api.storage.NoneStorage.java", "BodyUseAPI": [], "Fixed commit": "de73ff5925ebc7b2e246dd4b6d69f7e7b54c9335", "Url": "https://api.github.com/repos/baixueyu/cosbench", "Date": "2018-10-22T11:31:20Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"admin\".equals(seriesnotifier.Main.mode)) { root = javafx.fxml.FXMLLoader.load(getClass().getResource(\"adminclient.fxml\")); }else if (\"notify\".equals(seriesnotifier.Main.mode)) { seriesnotifier.Controller con = new seriesnotifier.Controller(); con.updateSeries(); java.lang.String usermd5 = con.readFile(\"user.txt\"); usermd5 = usermd5.replace(\"\\n\", \"\"); int userid = con.getUserIdFromMD5(usermd5); java.util.ArrayList<java.lang.String> updatedSeries = con.getAllSeriesToNotifie(userid); java.lang.StringBuilder message = new java.lang.StringBuilder(\"The following Series you are watching have been updated: \"); for (java.lang.String updateserie : updatedSeries) { message.append(\"\\n\").append(updateserie); } if ((updatedSeries.size()) != 0) { displayTray(message.toString()); } con.afterNotifie(userid); java.lang.System.exit(0); return; }else if (\"update\".equals(seriesnotifier.Main.mode)) { seriesnotifier.Controller con = new seriesnotifier.Controller(); con.updateSeries(); java.lang.System.exit(0); return; }else { try { net.jimmc.jshortcut.JShellLink link = new net.jimmc.jshortcut.JShellLink(); java.lang.String filePath = (net.jimmc.jshortcut.JShellLink.getDirectory(\"\")) + (new java.io.File(seriesnotifier.Main.class.getProtectionDomain().getCodeSource().getLocation().toURI()).getPath()); link.setFolder(((java.lang.System.getProperty(\"user.home\")) + \"\\\\AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Startup\")); link.setName(\"SeriesNotifier\"); link.setPath(filePath); link.setArguments(\"notify\"); link.save(); } catch (java.net.URISyntaxException e) { java.lang.System.out.println(e.getMessage()); } root = javafx.fxml.FXMLLoader.load(getClass().getResource(\"client.fxml\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6174/buggy-version/src.seriesnotifier.Main.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "460cf33c7bcf9a2f0df5a03622370b91a21790d6", "Url": "https://api.github.com/repos/timmmmmb/SeriesNotifier", "Date": "2018-10-23T09:18:58Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.spinner.getSelectedItem().toString().equals(\"\u05d6\u05db\u05e8\")) { genderText = \"male\"; }else { genderText = \"female\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7321/buggy-version/android.app.src.main.java.com.app.swimmingcompetitions.swimmingcompetitions.RegisterTempUserActivity.java", "BodyUseAPI": [], "Fixed commit": "dded0592b4c7cc48c5974b55c9a2089992c7d2c2", "Url": "https://api.github.com/repos/amirl1086/SwimmingCompetitions", "Date": "2018-04-12T12:26:32Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((intent.getAction()) == null) || (!(intent.getAction().equals(Intent.ACTION_NEW_OUTGOING_CALL)))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9215/buggy-version/app.src.main.java.com.sakurafish.parrot.callconfirm.receiver.CallReceiver.java", "BodyUseAPI": [], "Fixed commit": "bbb9396e8e144f2d1b090ce649796efe0aea3cea", "Url": "https://api.github.com/repos/sakurabird/Android-ParrotCallConfirm", "Date": "2018-08-15T13:13:21Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((this.first.equals(s.getFirst())) || (this.first.equals(s.getSecond()))) || (this.second.equals(s.getFirst()))) || (this.second.equals(s.getSecond()))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3406/buggy-version/src.Segment.java", "BodyUseAPI": [], "Fixed commit": "af7457fff7f1edb6f98b81aea451309b29223c5e", "Url": "https://api.github.com/repos/jaridekroon/Generator", "Date": "2018-09-12T09:54:39Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.kiezatlas.website.WebsitePlugin.getTopic(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (bildTopic.getTypeUri().equals(\"dm4.files.file\")) { log.info((\"Assigning Bild File Topic \" + (files.getFile(bildTopicId).getPath()))); createBildAssignment(geoObject, username, bildTopicId); }else { log.info(((\"Processing Bild Pfad Assignment (\" + (bildTopic.getSimpleValue())) + \") - Doing Nothing\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4101/buggy-version/src.main.java.de.kiezatlas.website.WebsitePlugin.java", "BodyUseAPI": ["java.util.logging.Logger.info(((\"Processing Bild Pfad Assignment (\" + (bildTopic.getSimpleValue())) + \") - Doing Nothing\"))", "de.deepamehta.core.Topic.getSimpleValue()"], "Fixed commit": "b444c339379aba39c7cc22786cfbe1e2a4eac097", "Url": "https://api.github.com/repos/mukil/dm4-kiezatlas-website", "Date": "2018-09-01T12:52:14Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((excludedIdList.size()) == 0) { excludedIdList.add(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7969/buggy-version/src.main.java.com.alfresco.activiti.analytics.processing.ProcessBatchPreparation.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "fd2d00109be508d1bed8bb916b157f0b4dcc634b", "Url": "https://api.github.com/repos/cijujoseph/activiti-analytics-spring-boot", "Date": "2018-05-24T21:43:24Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"\".equals(query.trim()))) { executeSQL(query); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7286/buggy-version/src.main.java.com.devveri.hive.HiveClient.java", "BodyUseAPI": ["com.devveri.hive.HiveClient.executeSQL(java.lang.String)"], "Fixed commit": "818d3f93ccce202ee760960fa22251c310e50669", "Url": "https://api.github.com/repos/hakanilter/hive-client", "Date": "2018-08-30T14:50:04Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (statusRetrieved.equals(\"pendingDelivery\")) { statusRetrieved = \"Pending Delivery\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9501/buggy-version/src.java.utility.deleteUtility.java", "BodyUseAPI": [], "Fixed commit": "b7c21eabb95f136dc9d663df7dc48c6b9712b7e9", "Url": "https://api.github.com/repos/rizzaliau/LimKeeAdmin", "Date": "2018-09-25T08:18:54Z"},
{"Line": "=>1506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (info.nightscout.androidaps.plugins.TuneProfile.TuneProfile.profile.getUnits().equals(\"mmol\")) toMgDl = 18;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5687/buggy-version/app.src.main.java.info.nightscout.androidaps.plugins.TuneProfile.TuneProfile.java", "BodyUseAPI": [], "Fixed commit": "64ce0c6941c039fe3d6e1236314b88612871f94a", "Url": "https://api.github.com/repos/PoweRGbg/AndroidAPS", "Date": "2018-02-26T16:53:38Z"},
{"Line": "=>1504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (info.nightscout.androidaps.plugins.TuneProfile.TuneProfile.profile.equals(null)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5687/buggy-version/app.src.main.java.info.nightscout.androidaps.plugins.TuneProfile.TuneProfile.java", "BodyUseAPI": [], "Fixed commit": "64ce0c6941c039fe3d6e1236314b88612871f94a", "Url": "https://api.github.com/repos/PoweRGbg/AndroidAPS", "Date": "2018-02-26T16:53:38Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["project.breakout.model.BreakoutModel.getBrickArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (bricks == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9498/buggy-version/src.project.breakout.controller.CollisionController.java", "BodyUseAPI": [], "Fixed commit": "abad6d2de18d5175bb689e4795ed2af64f166810", "Url": "https://api.github.com/repos/TiKo98/BreakoutProject", "Date": "2018-02-25T17:39:27Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(BookID.getText())", "java.lang.Integer.parseInt(PatronID.getText())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (main.java.librinno.model.Librarian.checkOutBook(db.get_information_about_the_user(patron), book)) { javafx.scene.control.Alert error = new javafx.scene.control.Alert(Alert.AlertType.CONFIRMATION); error.setHeaderText(\"Success\"); error.showAndWait(); }else { javafx.scene.control.Alert error = new javafx.scene.control.Alert(Alert.AlertType.ERROR); error.setHeaderText(\"Error\"); error.setContentText(\"There has been a mistake\"); error.showAndWait(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2494/buggy-version/src.main.java.librinno.ui.issue.Issue.java", "BodyUseAPI": [], "Fixed commit": "27caf2ea5148ac80a2fbd341552be537a909ac79", "Url": "https://api.github.com/repos/reconrus/LibraryProject", "Date": "2018-03-05T07:15:28Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.h2.table.RangeTable.getStep(org.h2.engine.Session)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (step == 0L) { throw org.h2.message.DbException.get(ErrorCode.STEP_SIZE_MUST_NOT_BE_ZERO); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7023/buggy-version/h2.src.main.org.h2.table.RangeTable.java", "BodyUseAPI": [], "Fixed commit": "5fcba5424d92cc293462998e2c35cb47e57b0eb8", "Url": "https://api.github.com/repos/h2database/h2database", "Date": "2018-03-18T10:22:09Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.h2.table.RangeTable.getStep(org.h2.engine.Session)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (step > 0) { if (delta < 0) { return 0; } }else if (delta > 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7023/buggy-version/h2.src.main.org.h2.table.RangeTable.java", "BodyUseAPI": [], "Fixed commit": "5fcba5424d92cc293462998e2c35cb47e57b0eb8", "Url": "https://api.github.com/repos/h2database/h2database", "Date": "2018-03-18T10:22:09Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<edu.ttu.krlab.alm.datastruct.sig.SortEntry>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(sort.subsortof(se))) { dependencies.add(sort); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6086/buggy-version/Java-Implementation.src.edu.ttu.krlab.alm.ALMTranslator.java", "BodyUseAPI": ["java.util.Set<edu.ttu.krlab.alm.datastruct.sig.SortEntry>.add(edu.ttu.krlab.alm.datastruct.sig.SortEntry)"], "Fixed commit": "8f1d2c1d5f5ace8a4a984ce4ec63b02c28867708", "Url": "https://api.github.com/repos/Topology/ALM-Compiler", "Date": "2018-02-04T01:12:00Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.ttu.krlab.alm.datastruct.sig.SymbolTable.getTimestepSortEntry()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (timeSteps.getInstances().isEmpty()) { st.setMaxSteps(2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6086/buggy-version/Java-Implementation.src.edu.ttu.krlab.alm.ALMTranslator.java", "BodyUseAPI": [], "Fixed commit": "8f1d2c1d5f5ace8a4a984ce4ec63b02c28867708", "Url": "https://api.github.com/repos/Topology/ALM-Compiler", "Date": "2018-02-04T01:12:00Z"},
{"Line": "=>615", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.example.chatme.chatme.UserSessionUtil.getSession(appContext, \"usertype\").equals(\"Psychologist\")) { try { fireRef = fireDB.getReference(\"online\"); com.google.firebase.database.DatabaseReference userRef = fireRef.child(com.example.chatme.chatme.UserSessionUtil.getSession(appContext, \"userid\")); userRef.removeValue(); } catch (java.lang.Exception e) { android.util.Log.e(\"LogoutException\", e.toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4161/buggy-version/app.src.main.java.com.example.chatme.chatme.ChatBotActivity.java", "BodyUseAPI": ["com.example.chatme.chatme.UserSessionUtil.getSession(android.content.Context,java.lang.String)", "com.google.firebase.database.DatabaseReference.child(com.example.chatme.chatme.UserSessionUtil.getSession(appContext, \"userid\"))"], "Fixed commit": "8aae08e59b5c40925ff1bf7551bb23117fec1f97", "Url": "https://api.github.com/repos/heretohelp2k18/heretohelpapp", "Date": "2018-10-17T11:57:19Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((requestCode == (thhsu.chloe.jeeva.Utils.Constants.FILTER_REQUEST)) && (resultCode == (thhsu.chloe.jeeva.Utils.Constants.RESULT_SUCCESS))) { mPresenter.result(Constants.FILTER_REQUEST, Constants.RESULT_SUCCESS, data); }else { init(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9506/buggy-version/app.src.main.java.thhsu.chloe.jeeva.activities.JeevaActivity.java", "BodyUseAPI": [], "Fixed commit": "3f4c6c01154ba9a35c4794243bd4c6a49e720e35", "Url": "https://api.github.com/repos/chloe722/Jeeva", "Date": "2018-05-10T02:32:57Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((contactCard) != null) { reciever = contactCard.getUser_id(); csr.loadChatMessages(reciever, ((android.widget.LinearLayout) (findViewById(R.id.messages_screen_messages))), ((android.widget.ScrollView) (findViewById(R.id.chat_scroll_view)))); isNewMessage = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4831/buggy-version/app.src.main.java.com.itbstudentapp.MessageScreen.java", "BodyUseAPI": [], "Fixed commit": "c9cd510d0d540319e40bcb609833f191dbeba5cd", "Url": "https://api.github.com/repos/kendok/ITBStudentApp", "Date": "2018-03-27T15:29:20Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.drucks.patrick.myrecipes.Model.Recipe.db) == null) { com.drucks.patrick.myrecipes.Model.Recipe.db = new com.drucks.patrick.myrecipes.Data.DatabaseHandler(context); com.drucks.patrick.myrecipes.Model.Recipe.recyclerViewAdapter = new com.drucks.patrick.myrecipes.UserInterface.RecyclerViewAdapter(context); recyclerView.setAdapter(com.drucks.patrick.myrecipes.Model.Recipe.recyclerViewAdapter); com.drucks.patrick.myrecipes.Model.Recipe.db.getRecipes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8683/buggy-version/app.src.main.java.com.drucks.patrick.myrecipes.Model.Recipe.java", "BodyUseAPI": [], "Fixed commit": "f6179bd40065a5f476ce1d75cda3c43ffa158a18", "Url": "https://api.github.com/repos/Wolf2323/MyRecipes", "Date": "2018-07-06T19:54:14Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((uuid) != null) && (!(uuid.isEmpty()))) { return org.bukkit.Bukkit.getPlayer(java.util.UUID.fromString(uuid)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1000/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Objects.User.java", "BodyUseAPI": ["org.bukkit.Bukkit.getPlayer(java.util.UUID)", "java.util.UUID.fromString(java.lang.String)"], "Fixed commit": "26e3bebec00517414fb926ee44fd8ab946fc1760", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2018-01-14T18:15:04Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["data.Board.checkNextMove(int,int,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (valid) { if (!release) { data.Pawn toSwap = this.grid[posX][posY].getPawn(((this.grid[posX][posY].getNbPawns()) - 1)); }else { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9577/buggy-version/src.data.Board.java", "BodyUseAPI": [], "Fixed commit": "152eaccf222e9b5026891deadd72d05f4a798730", "Url": "https://api.github.com/repos/Deilyora/projetProg2018", "Date": "2018-06-17T22:19:46Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (train.isGoingForward()) { java.lang.System.out.printf(\"About to check block %d%n\", curBlock.getNext()); curBlock = line[curBlock.getNext()]; }else { java.lang.System.out.printf(\"About to check block %d%n\", curBlock.getNext()); curBlock = line[curBlock.getPrev()]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6743/buggy-version/mbo.MboController.java", "BodyUseAPI": [], "Fixed commit": "36520d42b9f091acf0f070bcd70571695931e2c8", "Url": "https://api.github.com/repos/suffolk-northern/main", "Date": "2018-04-12T16:34:46Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parent.getBasedir()) != null) { dir = parent.getBasedir().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5281/buggy-version/alexandria-maven-plugin.src.main.java.com.github.macgregor.alexandria.AlexandriaMojo.java", "BodyUseAPI": ["parent.getBasedir().toString()", "org.apache.maven.project.MavenProject.getBasedir()"], "Fixed commit": "634d4c89ccfeb9e253878e1dd625430b687f8dd8", "Url": "https://api.github.com/repos/macgregor/alexandria", "Date": "2018-09-03T20:39:20Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((dtoProduct != null) && ((dtoProduct.getEntityProduct()) != null)) { product = dtoProduct.getEntityProduct(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2887/buggy-version/app.src.main.java.auction.org.droidflatauction.CreateAdvertStep1.java", "BodyUseAPI": ["auction.org.droidflatauction.DTOProduct.getEntityProduct()"], "Fixed commit": "b6fd9f529fe4df60f76c0b9e2281d749f35e9d5e", "Url": "https://api.github.com/repos/bdlions/DroidFlatAuction", "Date": "2018-03-22T15:39:25Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rarchives.ripme.ripper.rippers.RedditRipper.parseRedditVideoMPD(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (urlToDownload != null) { addURLToDownload(urlToDownload, new java.io.File(savePath)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9327/buggy-version/src.main.java.com.rarchives.ripme.ripper.rippers.RedditRipper.java", "BodyUseAPI": ["com.rarchives.ripme.ripper.rippers.RedditRipper.addURLToDownload(java.net.URL,java.io.File)"], "Fixed commit": "debba69c7f3cf03ecdd4c1b486e8b223614866c2", "Url": "https://api.github.com/repos/RipMeApp/ripme", "Date": "2018-10-28T11:54:49Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(fiskinfoo.no.sintef.fiskinfoo.Implementation.FiskinfoConnectivityManager.isConnectedValidWifi(getBaseContext()))) { toggleNetworkErrorTextView(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5414/buggy-version/app.src.main.java.fiskinfoo.no.sintef.fiskinfoo.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6e5b807be133e98192e1c3ea9054be4079bf6465", "Url": "https://api.github.com/repos/PeterHaro/Fiskinfoo", "Date": "2018-04-16T10:23:17Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"0\".equals(postSnapshot.child(\"status\").getValue().toString())) { batteryID.add(mbatteryid); cycleCount.add(postSnapshot.child(\"cycles\").getValue().toString()); batteryImg.add(R.drawable.batterypool_logo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8830/buggy-version/app.src.main.java.com.example.ashwinshankar.batterypool.BatteryList.java", "BodyUseAPI": ["com.google.firebase.database.DataSnapshot.child(java.lang.String)", "java.util.ArrayList<java.lang.String>.add(postSnapshot.child(\"cycles\").getValue().toString())", "postSnapshot.child(\"cycles\").getValue().toString()", "postSnapshot.child(\"cycles\").getValue()"], "Fixed commit": "ec808fae43de84b2965b8dc91d34563225a5b2cb", "Url": "https://api.github.com/repos/ashwin2990/batterypool", "Date": "2018-07-19T21:52:36Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.DEBUG) { new java.lang.Thread(new java.lang.Runnable() { @java.lang.Override public void run() { android.os.Looper.prepare(); android.widget.Toast.makeText(context, toast, Toast.LENGTH_SHORT).show(); android.os.Looper.loop(); } }).start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6425/buggy-version/android.src.main.java.cn.elift.flutterjpush.ExampleUtil.java", "BodyUseAPI": [], "Fixed commit": "419b937a2f9efd74d00412a74da306caeefb51c5", "Url": "https://api.github.com/repos/cicadabear/flutter-jpush", "Date": "2018-08-13T01:34:48Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["MedicationOrder.MedicationOrderDispenseRequestComponent.getExpectedSupplyDuration()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((duration.getUnit()) != null) { if (!(duration.getUnit().equalsIgnoreCase(\"days\"))) { throw new org.endeavourhealth.core.exceptions.TransformException((((\"Unsupported medication order duration type [\" + (duration.getUnit())) + \"] for \") + (fhir.getId()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1344/buggy-version/src.main.java.org.endeavourhealth.transform.enterprise.transforms.MedicationOrderTransformer.java", "BodyUseAPI": ["org.endeavourhealth.transform.enterprise.transforms.Duration.getUnit()", "org.endeavourhealth.transform.enterprise.transforms.Duration.getUnit()", "duration.getUnit().equalsIgnoreCase(java.lang.String)"], "Fixed commit": "e771a23793faf18776450095f862328a1ae2a58c", "Url": "https://api.github.com/repos/endeavourhealth/Transforms", "Date": "2018-06-14T14:56:44Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["services.interfaces.FileService.downloadFile(java.lang.String,models.classes.User,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lob_file.isDirectory()) { return javax.ws.rs.core.Response.status(204).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6853/buggy-version/src.main.java.rest.resources.FileResource.java", "BodyUseAPI": [], "Fixed commit": "6ab7366474e959796458e1d0e86565f406455953", "Url": "https://api.github.com/repos/weedric/VirtualFileServer", "Date": "2018-03-04T23:10:04Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.identity.oauth.cache.SessionDataCache.getValueFromCache(org.wso2.carbon.identity.oauth.cache.SessionDataCacheKey)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(entry.getQueryString())) { queryString = java.net.URLEncoder.encode(entry.getQueryString(), \"UTF-8\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/521/buggy-version/components.oauth.org.wso2.carbon.identity.oauth.endpoint.src.main.java.org.wso2.carbon.identity.oauth.endpoint.util.EndpointUtil.java", "BodyUseAPI": ["java.net.URLEncoder.encode(entry.getQueryString(),java.lang.String)", "org.wso2.carbon.identity.oauth.cache.SessionDataCacheEntry.getQueryString()"], "Fixed commit": "f7a2cd703614058b4a00925f0e6e10647225c4ca", "Url": "https://api.github.com/repos/GDRDABARERA/carbon-identity", "Date": "2018-02-12T06:39:02Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (str == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9898/buggy-version/src.main.java.com.oracle.cloud.baremetal.jenkins.BaremetalCloudAgentTemplate.java", "BodyUseAPI": [], "Fixed commit": "1f736c7b98ca58f473fcfecc312275430510a189", "Url": "https://api.github.com/repos/oracle/oci-compute-jenkins-plugin", "Date": "2018-04-08T07:59:49Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (script.equals(\"return window.name\")) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2133/buggy-version/marathon-javafx.marathon-javafx-agent.src.main.java.net.sourceforge.marathon.javafxagent.script.JSONScriptRunner.java", "BodyUseAPI": [], "Fixed commit": "f33d6d9c052bacc0c6d6119605ebf9b4cac5b51f", "Url": "https://api.github.com/repos/onlyem91/marathonv5", "Date": "2018-06-28T07:04:25Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Material.getMaterial(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (mat == null) { org.bukkit.Bukkit.getLogger().log(java.util.logging.Level.WARNING, (\"Unknown material: \" + line)); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5779/buggy-version/uSkyBlock-Core.src.main.java.us.talabrek.ultimateskyblock.util.MaterialUtil.java", "BodyUseAPI": [], "Fixed commit": "23eb98e5e303edef19984d615977381d4485af70", "Url": "https://api.github.com/repos/rlf/uSkyBlock", "Date": "2018-08-12T12:54:25Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(news.isEmpty())) kDataService.addMutil(news);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/930/buggy-version/candle-volume-center.src.main.java.com.candle.volume.job.task.GetKDataTask.java", "BodyUseAPI": ["com.candle.volume.service.KDataService.addMutil(java.util.List<com.candle.volume.vo.KDataVo>)"], "Fixed commit": "8a962a2e0f343575fd522e4a4f319262b44de190", "Url": "https://api.github.com/repos/PATHngping/candlevolume", "Date": "2018-10-24T01:17:02Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (settings.getBoolean(\"isFirstRun\", true)) { finishAffinity(); java.lang.System.exit(0); }else { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/887/buggy-version/app.src.main.java.net.xeill.elpuig.thinkitapp.view.LanguageActivity.java", "BodyUseAPI": [], "Fixed commit": "cb87df02a297d61d6e90586be1c0cde8610770cb", "Url": "https://api.github.com/repos/TheJordisc/ThinkItApp", "Date": "2018-02-24T15:16:14Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (settings.getBoolean(\"isFirstRun\", true)) { ab.setDisplayHomeAsUpEnabled(false); }else { musicPlayer.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/887/buggy-version/app.src.main.java.net.xeill.elpuig.thinkitapp.view.LanguageActivity.java", "BodyUseAPI": [], "Fixed commit": "cb87df02a297d61d6e90586be1c0cde8610770cb", "Url": "https://api.github.com/repos/TheJordisc/ThinkItApp", "Date": "2018-02-24T15:16:14Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (settings.getBoolean(\"isFirstRun\", true)) { settings.edit().putBoolean(\"isFirstRun\", false).apply(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/887/buggy-version/app.src.main.java.net.xeill.elpuig.thinkitapp.view.LanguageActivity.java", "BodyUseAPI": ["settings.edit().putBoolean(java.lang.String,boolean)", "settings.edit().putBoolean(\"isFirstRun\", false).apply()", "android.content.SharedPreferences.edit()"], "Fixed commit": "cb87df02a297d61d6e90586be1c0cde8610770cb", "Url": "https://api.github.com/repos/TheJordisc/ThinkItApp", "Date": "2018-02-24T15:16:14Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.insee.rmes.persistance.service.sesame.utils.RepositoryGestion.getResponseAsArray(fr.insee.rmes.persistance.service.sesame.concepts.concepts.ConceptsQueries.altLabel(id, Config.LG1))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((altLabelLg1.length()) != 0) concept.put(\"altLabelLg1\", fr.insee.rmes.utils.JSONUtils.extractFieldToArray(altLabelLg1, \"altLabel\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4926/buggy-version/src.main.java.fr.insee.rmes.persistance.service.sesame.concepts.ConceptsImpl.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,fr.insee.rmes.utils.JSONUtils.extractFieldToArray(altLabelLg1, \"altLabel\"))", "fr.insee.rmes.utils.JSONUtils.extractFieldToArray(org.json.JSONArray,java.lang.String)"], "Fixed commit": "d68387db98fdd73e5832cf932426883437f92987", "Url": "https://api.github.com/repos/InseeFr/Bauhaus-Back-Office", "Date": "2018-06-13T07:10:23Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.insee.rmes.persistance.service.sesame.utils.RepositoryGestion.getResponseAsArray(fr.insee.rmes.persistance.service.sesame.concepts.concepts.ConceptsQueries.altLabel(id, Config.LG2))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((altLabelLg2.length()) != 0) concept.put(\"altLabelLg2\", fr.insee.rmes.utils.JSONUtils.extractFieldToArray(altLabelLg2, \"altLabel\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4926/buggy-version/src.main.java.fr.insee.rmes.persistance.service.sesame.concepts.ConceptsImpl.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,fr.insee.rmes.utils.JSONUtils.extractFieldToArray(altLabelLg2, \"altLabel\"))", "fr.insee.rmes.utils.JSONUtils.extractFieldToArray(org.json.JSONArray,java.lang.String)"], "Fixed commit": "d68387db98fdd73e5832cf932426883437f92987", "Url": "https://api.github.com/repos/InseeFr/Bauhaus-Back-Office", "Date": "2018-06-13T07:10:23Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (profit < 0) { saved1.setText(\"You Lose : \"); saved1.setTextColor(android.graphics.Color.parseColor(\"#FF0000\")); profit1.setTextColor(android.graphics.Color.parseColor(\"#FF0000\")); }else { saved1.setText(\"You Saved : \"); saved1.setTextColor(android.graphics.Color.parseColor(\"#00FF00\")); profit1.setTextColor(android.graphics.Color.parseColor(\"#00FF00\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3860/buggy-version/app.src.main.java.com.example.android.medikart.FragmentOne.java", "BodyUseAPI": [], "Fixed commit": "f68c303221f3f24e46512b0dcbeab12dfbf23287", "Url": "https://api.github.com/repos/harsh-2711/MediKart", "Date": "2018-04-07T22:47:28Z"},
{"Line": "=>1292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.currentGalaxyName.equalsIgnoreCase(\"galaxy.milky_way\"))) this.selectedParent = this.currentGalaxyMainSystem;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9313/buggy-version/src.main.java.com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection.java", "BodyUseAPI": [], "Fixed commit": "ca821b29b232823b6f388d4b04440483dc94b508", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-02-19T00:31:41Z"},
{"Line": "=>604", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (executionStatus) { return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1813/buggy-version/app.services.DatabaseService.java", "BodyUseAPI": [], "Fixed commit": "2d947ac019b835d4b3ee3093624cd47725067084", "Url": "https://api.github.com/repos/Sumit-NCSU/bugle-play-server", "Date": "2018-04-22T03:00:47Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCamera) != null) { mCamera.stopPreview(); mCamera.release(); mCamera = null; holder.removeCallback(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1074/buggy-version/app.src.main.java.com.tistory.black_jin0427.mycamerpreview.main.MyCameraPreview.java", "BodyUseAPI": [], "Fixed commit": "0d5cacc5aac46e2773b32942f06724c5e72f4698", "Url": "https://api.github.com/repos/dlwls5201/MyCameraPreview", "Date": "2018-08-26T05:46:48Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (context.getAppInitializer().isAppVersionChanged()) { copyMissingJSAssets(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8145/buggy-version/OsmAnd.src.net.osmand.plus.resources.ResourceManager.java", "BodyUseAPI": [], "Fixed commit": "65a8abe29cbaca57cb5e9aa2eeff83d8d717433c", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2018-08-11T14:31:52Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (target instanceof java.awt.Container) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7168/buggy-version/src.com.valkryst.VTerminal_Tutorial.action.MoveAction.java", "BodyUseAPI": [], "Fixed commit": "420ad81b7a2de910b781355b9696e509ea82246b", "Url": "https://api.github.com/repos/Valkryst/VTerminal_Tutorial", "Date": "2018-10-12T15:57:34Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((curShape) != null) { if (!(tryMovePiece())) { moving = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6129/buggy-version/Board.java", "BodyUseAPI": [], "Fixed commit": "09387b221dabf2ced5c66c9958d0e3f54204ea67", "Url": "https://api.github.com/repos/Zer0-M/Final-Project", "Date": "2018-01-11T03:33:36Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sample.ApplicationStatistics.getProcessInfo()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (processInfo == null) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6201/buggy-version/src.sample.ApplicationStatistics.java", "BodyUseAPI": [], "Fixed commit": "4c880d8d11c862c627d4a1e59e80c56e0c48f117", "Url": "https://api.github.com/repos/Kamkalet/MonitoringSystemTurbo", "Date": "2018-04-12T06:36:09Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof panda.ioc.IocException) { throw ((panda.ioc.IocException) (e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8979/buggy-version/panda-gear.src.main.java.panda.ioc.impl.DefaultObjectMaker.java", "BodyUseAPI": [], "Fixed commit": "94fc8939f126adbb8cf9615adc31d4c600df3ec4", "Url": "https://api.github.com/repos/pandafw/panda", "Date": "2018-07-14T02:18:08Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mOnRefreshListener) != null) { mOnRefreshListener.onRefreshing(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7657/buggy-version/library.src.main.java.com.github.onlynight.refreshlayout.RefreshLayout.java", "BodyUseAPI": [], "Fixed commit": "6f060a141feff8086d57e40c0195297827314348", "Url": "https://api.github.com/repos/onlynight/RefreshLayout", "Date": "2018-04-18T01:58:05Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.Object>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.util.Objects.isNull(arg)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6045/buggy-version/dubbo-rpc.dubbo-rpc-dubbo.src.main.java.org.apache.dubbo.rpc.protocol.dubbo.telnet.InvokeTelnetHandler.java", "BodyUseAPI": [], "Fixed commit": "ea09070eb2608c3c24eb40c55cb20014a5efbea4", "Url": "https://api.github.com/repos/xujunjie97/incubator-dubbo", "Date": "2018-08-14T01:28:08Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (value != null) { if (value.contains(\"\\n\")) { value = value.replaceAll(\"[\\n\\r]\", \"\\\\\\\\n\"); } if (value.contains(\"\\\"\")) { value = value.replaceAll(\"\\\"\", \"\\\\\\\\\\\"\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/562/buggy-version/dapeng-json.src.main.java.com.github.dapeng.json.JsonWriter.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "c726f78e48a3f81e686cb8aedfa65b6150809387", "Url": "https://api.github.com/repos/dapeng-soa/dapeng-soa", "Date": "2018-03-05T14:11:46Z"},
{"Line": "=>1381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useLongDecimals) { setOrAccumulate(jsonObject, key, java.lang.Long.valueOf(element.getValue())); }else { setOrAccumulate(jsonObject, key, java.lang.Integer.valueOf(element.getValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3461/buggy-version/src.main.java.net.sf.json.xml.XMLSerializer.java", "BodyUseAPI": [], "Fixed commit": "8b363d1dd4c8ac8e9fa5766d9cc249f0a4392106", "Url": "https://api.github.com/repos/dmytro-sylaiev/Json-lib", "Date": "2018-05-25T10:15:35Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.baomidou.mybatisplus.core.toolkit.sql.SqlUtils.DEFAULT_CLASS) == null) { return com.baomidou.mybatisplus.core.parser.SqlInfo.newInstance().setSql(com.baomidou.mybatisplus.core.toolkit.sql.SqlUtils.getOriginalCountSql(originalSql)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9872/buggy-version/mybatis-plus-core.src.main.java.com.baomidou.mybatisplus.core.toolkit.sql.SqlUtils.java", "BodyUseAPI": [], "Fixed commit": "39c66b04f52fbd68179967d1539a498456ce93de", "Url": "https://api.github.com/repos/baomidou/mybatis-plus", "Date": "2018-02-23T13:49:51Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (validRange == false) dateFail = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6485/buggy-version/src.Ross.java", "BodyUseAPI": [], "Fixed commit": "ce18149d81d34c162f0b6ec498e393f672e6ebdc", "Url": "https://api.github.com/repos/robertstepp/reimagined-octo-pancake", "Date": "2018-02-11T18:42:22Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dateFail == true) { javax.swing.JOptionPane.showConfirmDialog(null, \"Incorrect Date Range.\\nPlease ensure correct date range entered.\", \"Error\", javax.swing.JOptionPane.DEFAULT_OPTION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6485/buggy-version/src.Ross.java", "BodyUseAPI": [], "Fixed commit": "ce18149d81d34c162f0b6ec498e393f672e6ebdc", "Url": "https://api.github.com/repos/robertstepp/reimagined-octo-pancake", "Date": "2018-02-11T18:42:22Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isStarted())) deliverResult(mMovies);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1861/buggy-version/app.src.main.java.com.sora_dsktp.movienight.Rest.MovieLoaders.java", "BodyUseAPI": [], "Fixed commit": "17b7fd50e811fc1187049282f45ff0dedd32c0c0", "Url": "https://api.github.com/repos/georkost4/MovieNight", "Date": "2018-04-05T13:13:18Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.matrix.androidsdk.data.RoomMediaMessage.getMimeType(im.vector.activity.MediaPreviewerActivity)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (mimeType.equals(\"image/gif\")) { mPreviewerImageView.setVisibility(View.VISIBLE); mPreviewerVideoView.setVisibility(View.GONE); com.bumptech.glide.Glide.with(this).asGif().load(uri).apply(options).into(mPreviewerImageView); }else if (mimeType.startsWith(\"video\")) { mPreviewerImageView.setVisibility(View.GONE); mPreviewerVideoView.setVisibility(View.VISIBLE); mPreviewerVideoView.setVideoURI(uri); mPreviewerVideoView.seekTo(0); }else { mPreviewerImageView.setVisibility(View.VISIBLE); mPreviewerVideoView.setVisibility(View.GONE); mPreviewerImageView.setImageResource(R.drawable.filetype_attachment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8862/buggy-version/vector.src.main.java.im.vector.activity.MediaPreviewerActivity.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "0fea24848583ebad93c613689aa155be8603e1f9", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2018-09-13T05:23:01Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mediaPlayer.isPlaying()) { mediaPlayer.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5094/buggy-version/Quelea.src.org.quelea.windows.multimedia.VLCWindow.java", "BodyUseAPI": ["uk.co.caprica.vlcj.player.embedded.EmbeddedMediaPlayer.stop()"], "Fixed commit": "bd1c42337be8d6c872776413a849e90300630794", "Url": "https://api.github.com/repos/quelea-projection/Quelea", "Date": "2014-09-28T01:28:31Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i < 26) output += java.lang.String.format(\"%2c \", ((char) (i + 65))); else output += java.lang.String.format(\"%2c \", ((char) (i + 71)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3893/buggy-version/lexical.Trie.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,int)", "java.lang.String.format(java.lang.String,int)"], "Fixed commit": "0fe95f6b1738e96d133954699ea083b09bbbb911", "Url": "https://api.github.com/repos/ktorre/cs411", "Date": "2018-01-23T07:24:08Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((head > 25) && (head < 32)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3893/buggy-version/lexical.Trie.java", "BodyUseAPI": [], "Fixed commit": "0fe95f6b1738e96d133954699ea083b09bbbb911", "Url": "https://api.github.com/repos/ktorre/cs411", "Date": "2018-01-23T07:24:08Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(test.containsWord(\"zebra\"))) test.inputWord(\"zebra\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3893/buggy-version/lexical.Trie.java", "BodyUseAPI": ["Trie.inputWord(java.lang.String)"], "Fixed commit": "0fe95f6b1738e96d133954699ea083b09bbbb911", "Url": "https://api.github.com/repos/ktorre/cs411", "Date": "2018-01-23T07:24:08Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((head > 25) && (head < 32)) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3893/buggy-version/lexical.Trie.java", "BodyUseAPI": [], "Fixed commit": "0fe95f6b1738e96d133954699ea083b09bbbb911", "Url": "https://api.github.com/repos/ktorre/cs411", "Date": "2018-01-23T07:24:08Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (head > 31) head -= 6;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3893/buggy-version/lexical.Trie.java", "BodyUseAPI": [], "Fixed commit": "0fe95f6b1738e96d133954699ea083b09bbbb911", "Url": "https://api.github.com/repos/ktorre/cs411", "Date": "2018-01-23T07:24:08Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (head > 31) head -= 6;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3893/buggy-version/lexical.Trie.java", "BodyUseAPI": [], "Fixed commit": "0fe95f6b1738e96d133954699ea083b09bbbb911", "Url": "https://api.github.com/repos/ktorre/cs411", "Date": "2018-01-23T07:24:08Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == ((int) (value))) return java.lang.String.valueOf(st.pop().intValue()); else { java.text.DecimalFormat decformat = new java.text.DecimalFormat(\"#.#####\"); return java.lang.String.valueOf(decformat.format(st.pop().doubleValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7482/buggy-version/app.src.main.java.com.i1d.icalc.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7f107252469ae2f8d4405c01546100bf622860e3", "Url": "https://api.github.com/repos/i1-D/iCalculator", "Date": "2018-02-05T17:28:51Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(clone)) { ((zed.mopm.api.data.IFolderMenu) (container)).refreshDirectoryEntryList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4740/buggy-version/src.main.java.zed.mopm.gui.lists.FolderList.java", "BodyUseAPI": [], "Fixed commit": "b4ffe569c2311ddbaf7a49fa34b4dad8a2e3bf68", "Url": "https://api.github.com/repos/MinecraftModDevelopmentMods/MOPM", "Date": "2018-07-14T12:17:39Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(clone)) { ((zed.mopm.api.data.IFolderMenu) (container)).refreshDirectoryEntryList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4740/buggy-version/src.main.java.zed.mopm.gui.lists.FolderList.java", "BodyUseAPI": [], "Fixed commit": "b4ffe569c2311ddbaf7a49fa34b4dad8a2e3bf68", "Url": "https://api.github.com/repos/MinecraftModDevelopmentMods/MOPM", "Date": "2018-07-14T12:17:39Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.macrobuddy.FitnessAPIFactory.getFitnessAPI().login(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (loginResult) { return com.macrobuddy.FitnessAPIFactory.getFitnessAPI().getFoods(userName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9700/buggy-version/app.src.main.java.com.macrobuddy.client.MainActivity.Main.LoginFragment.java", "BodyUseAPI": [], "Fixed commit": "b017527b3ab74e9737ca7f273dcdf11eab9db87f", "Url": "https://api.github.com/repos/lukeludlow/macrobuddy", "Date": "2018-09-09T15:57:25Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.opencron.server.job.OpencronRegistry.logger.isInfoEnabled()) { org.opencron.server.job.OpencronRegistry.logger.info(\"[opencron] run destroy now...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5667/buggy-version/opencron-server.src.main.java.org.opencron.server.job.OpencronRegistry.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String)"], "Fixed commit": "f754748f4c4a9d0810cf8b463bc169f3b0b1401b", "Url": "https://api.github.com/repos/wolfboys/JobX-dev", "Date": "2018-01-29T06:00:43Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((containsAgents[a.oldPos]) == a) { containsAgents[a.oldPos] = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4157/buggy-version/src.main.java.world.World.java", "BodyUseAPI": [], "Fixed commit": "25d3bfb3723133197d700bc4b52fe7d834bb4252", "Url": "https://api.github.com/repos/Suduki/Foxibar", "Date": "2018-08-16T14:45:59Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (resourceAsStream != null) { try { resourceAsStream.close(); } catch (java.io.IOException ex) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5165/buggy-version/src.main.java.de.root1.rxtxrebundled.LibLoader.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "5850b49cb88a519fad772d3eeca0ca340c4df5bd", "Url": "https://api.github.com/repos/tuxedo0801/rxtx-rebundled", "Date": "2013-12-11T09:02:38Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.scratiConfig.getPlatformPublicKey()) == null) || (\"\".equals(this.scratiConfig.getPlatformPublicKey().trim()))) { throw new cn.net.clink.scrati.ScratiException(\"400000\", \"\u5e73\u53f0\u65b9\u516c\u94a5\u4e0d\u80fd\u4e3a\u7a7a\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6246/buggy-version/src.main.java.cn.net.clink.scrati.Scrati.java", "BodyUseAPI": [], "Fixed commit": "28dd90bac72fb740b3c852badd08fc95b2297625", "Url": "https://api.github.com/repos/yangyangduo/scrati", "Date": "2018-05-23T05:36:17Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.scratiConfig.getAesKey().length()) != 16) { throw new cn.net.clink.scrati.ScratiException(\"400000\", \"\u5408\u4f5c\u65b9\u52a0\u89e3\u5bc6\u5bc6\u94a5\u957f\u5ea6\u9519\u8bef\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6246/buggy-version/src.main.java.cn.net.clink.scrati.Scrati.java", "BodyUseAPI": [], "Fixed commit": "28dd90bac72fb740b3c852badd08fc95b2297625", "Url": "https://api.github.com/repos/yangyangduo/scrati", "Date": "2018-05-23T05:36:17Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.scratiConfig.getGatewayUrl()) == null) || (\"\".equals(this.scratiConfig.getGatewayUrl().trim()))) { throw new cn.net.clink.scrati.ScratiException(\"400000\", \"\u5e73\u53f0\u63a5\u5165\u5730\u5740\u4e0d\u80fd\u4e3a\u7a7a\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6246/buggy-version/src.main.java.cn.net.clink.scrati.Scrati.java", "BodyUseAPI": [], "Fixed commit": "28dd90bac72fb740b3c852badd08fc95b2297625", "Url": "https://api.github.com/repos/yangyangduo/scrati", "Date": "2018-05-23T05:36:17Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orange.score.module.score.service.impl.ICompanyInfoService.findById(identityInfo.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (companyInfo != null) { record.setCompanyId(companyInfo.getId()); record.setCompanyName(companyInfo.getCompanyName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8054/buggy-version/src.main.java.com.orange.score.module.score.service.impl.ScoreRecordServiceImpl.java", "BodyUseAPI": ["com.orange.score.module.score.service.impl.ScoreRecord.setCompanyId(companyInfo.getId())", "com.orange.score.module.score.service.impl.CompanyInfo.getId()", "com.orange.score.module.score.service.impl.ScoreRecord.setCompanyName(companyInfo.getCompanyName())", "com.orange.score.module.score.service.impl.CompanyInfo.getCompanyName()"], "Fixed commit": "4061e29fd9e35ee3090d248c6268d6324286a65f", "Url": "https://api.github.com/repos/topie/score-server", "Date": "2018-05-14T12:18:33Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (scaleDegrees) { grid[i][j] = new javax.swing.JLabel(matrix.board[i][j].toString(), javax.swing.SwingConstants.CENTER); }else { grid[i][j] = new javax.swing.JLabel(matrix.board[i][j].noteName, javax.swing.SwingConstants.CENTER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1287/buggy-version/src.GUI.java", "BodyUseAPI": [], "Fixed commit": "bb370c6382104f854c82c6668ac9c14068365ff5", "Url": "https://api.github.com/repos/fkryan/SerialMusicMatrixExplorer", "Date": "2018-05-16T06:16:39Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.smart4j.framework.util.StringUtil.isNotEmpty(packageName)) { subPackageName = (packageName + \".\") + subPackageName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8832/buggy-version/smart-framework.src.main.java.org.smart4j.framework.util.ClassUtil.java", "BodyUseAPI": [], "Fixed commit": "614ab2738ed4ac5dbf1e007e1ea203b15f36da22", "Url": "https://api.github.com/repos/permgenspace/java-web-framework", "Date": "2018-03-05T15:12:34Z"},
{"Line": "=>5758", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)", "java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hpos < qpos) { hpos = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4279/buggy-version/uis.src.com.biglybt.plugin.net.buddy.swt.BuddyPluginViewBetaChat.java", "BodyUseAPI": [], "Fixed commit": "cad4a42ee17557ca20de5212d3c683f8150e1194", "Url": "https://api.github.com/repos/BiglySoftware/BiglyBT", "Date": "2018-01-20T19:12:19Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(queryStr)) { link += \"?\" + queryStr; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9471/buggy-version/src.main.java.org.b3log.symphony.service.ShortLinkQueryService.java", "BodyUseAPI": [], "Fixed commit": "3da18121261e4b90bf730a85a94f4c59127106c5", "Url": "https://api.github.com/repos/immpo/symphony", "Date": "2018-06-09T07:30:06Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.ucsb.cs56.projects.games.hangman.HangmanGame.getWrongAttemptsLeft()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (wrongAttemptsLeft > 6) wrongAttemptsLeft = 6;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4610/buggy-version/src.edu.ucsb.cs56.projects.games.hangman.HangmanCLI.java", "BodyUseAPI": [], "Fixed commit": "26bcd349dd193bf0b837c0cf328e24418820235f", "Url": "https://api.github.com/repos/ucsb-cs56-projects/cs56-games-hangman", "Date": "2018-03-13T03:13:36Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (size != (jp.miraiakari.MiraiAkariProperties.ORDER_SIZE)) { jp.miraiakari.service.listener.GoldenCrossOrder.LOGGER.warn(\"unexpected size: {}\", size); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8699/buggy-version/src.main.java.jp.miraiakari.service.listener.GoldenCrossOrder.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String,double)"], "Fixed commit": "576e959c65196467fa2689243af9699d5cb8c596", "Url": "https://api.github.com/repos/hecateball/miraiakari", "Date": "2018-01-14T05:39:52Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (size == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8699/buggy-version/src.main.java.jp.miraiakari.service.listener.GoldenCrossOrder.java", "BodyUseAPI": [], "Fixed commit": "576e959c65196467fa2689243af9699d5cb8c596", "Url": "https://api.github.com/repos/hecateball/miraiakari", "Date": "2018-01-14T05:39:52Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (size == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8699/buggy-version/src.main.java.jp.miraiakari.service.listener.DeadCrossOrder.java", "BodyUseAPI": [], "Fixed commit": "576e959c65196467fa2689243af9699d5cb8c596", "Url": "https://api.github.com/repos/hecateball/miraiakari", "Date": "2018-01-14T05:39:52Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (size != (jp.miraiakari.MiraiAkariProperties.ORDER_SIZE)) { jp.miraiakari.service.listener.DeadCrossOrder.LOGGER.warn(\"unexpected size: {}\", size); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8699/buggy-version/src.main.java.jp.miraiakari.service.listener.DeadCrossOrder.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String,double)"], "Fixed commit": "576e959c65196467fa2689243af9699d5cb8c596", "Url": "https://api.github.com/repos/hecateball/miraiakari", "Date": "2018-01-14T05:39:52Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (prevType == (com.firebirdcss.util.json_tools.mapping.CharType.COLON)) { sb.append(\"</td>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7472/buggy-version/src.main.java.com.firebirdcss.util.json_tools.JsonUtilities.java", "BodyUseAPI": [], "Fixed commit": "1c85730211b069ac8b45672e382a5225c0abc8d5", "Url": "https://api.github.com/repos/birdoffire1549/JsonTools", "Date": "2018-10-16T18:34:32Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (targetToBeat == null) { if ((itemOpenDiff > 0) || (itemCloseDiff > 0)) { closestResult = item; } }else { if (((itemOpenDiff > 0) && (itemOpenDiff < (targetToBeat.intValue()))) || ((itemCloseDiff > 0) && (itemCloseDiff < (targetToBeat.intValue())))) { closestResult = item; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7472/buggy-version/src.main.java.com.firebirdcss.util.json_tools.mapping.MappedItems.java", "BodyUseAPI": ["java.lang.Integer.intValue()", "java.lang.Integer.intValue()"], "Fixed commit": "1c85730211b069ac8b45672e382a5225c0abc8d5", "Url": "https://api.github.com/repos/birdoffire1549/JsonTools", "Date": "2018-10-16T18:34:32Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (closestResult != null) { int resultOpenDiff = (closestResult.getOpenIndex()) - index; int resultCloseDiff = (closestResult.getCloseIndex()) - index; if (resultOpenDiff > 0) { targetToBeat = java.lang.Integer.valueOf(resultOpenDiff); } if ((resultCloseDiff > 0) && ((targetToBeat == null) || (resultCloseDiff < (targetToBeat.intValue())))) { targetToBeat = java.lang.Integer.valueOf(resultCloseDiff); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7472/buggy-version/src.main.java.com.firebirdcss.util.json_tools.mapping.MappedItems.java", "BodyUseAPI": ["com.firebirdcss.util.json_tools.mapping.MappedItem.getCloseIndex()", "com.firebirdcss.util.json_tools.mapping.MappedItem.getOpenIndex()"], "Fixed commit": "1c85730211b069ac8b45672e382a5225c0abc8d5", "Url": "https://api.github.com/repos/birdoffire1549/JsonTools", "Date": "2018-10-16T18:34:32Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (jenkins == null) return new hudson.util.ListBoxModel(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/252/buggy-version/src.main.java.org.jenkinsci.plugins.ParameterizedRemoteTrigger.pipeline.RemoteBuildPipelineStep.java", "BodyUseAPI": [], "Fixed commit": "efcef1079bb1f7058a4b0b5a40d2795088003de2", "Url": "https://api.github.com/repos/sap-production/parameterized-remote-trigger-plugin", "Date": "2018-03-16T11:36:40Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.racoders.racodersproject.fragments.UserMapFragment.myLocation) != null) { com.racoders.racodersproject.fragments.UserMapFragment.loadRouteInfo(key, pointOfInterest); com.racoders.racodersproject.fragments.UserMapFragment.createRoute(new com.google.android.gms.maps.model.LatLng(pointOfInterest.getLatitude(), pointOfInterest.getLongitude())); finish(); }else { android.widget.Toast.makeText(this, \"Wait for your location to load\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4825/buggy-version/app.src.main.java.com.racoders.racodersproject.activities.MarkerDetailsPopUpWindow.java", "BodyUseAPI": [], "Fixed commit": "6cb3007eb899794f3a4507ec5f33b2b51efe8762", "Url": "https://api.github.com/repos/tudyfilp/Racoders", "Date": "2018-09-19T10:06:47Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (_end < 0) _end = textinfo.text.length();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6986/buggy-version/TypeEx.src.main.java.net.icelane.typeex.book.io.TextInfo.java", "BodyUseAPI": [], "Fixed commit": "4601723d70a6392ddabc16f234bbb9acdb64b2f5", "Url": "https://api.github.com/repos/MrX13415/TypeEx", "Date": "2018-08-22T14:08:12Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minidev.json.JSONObject.get(mConfig.getMessageTimestampName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (fieldValue == null) fieldValue = jsonObject.get(mConfig.getFallbackMessageTimestampName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/260/buggy-version/src.main.java.com.pinterest.secor.parser.PatternDateMessageParser.java", "BodyUseAPI": [], "Fixed commit": "d0bdb907cb12a36795f8b2518ac3bd50a2aad2a7", "Url": "https://api.github.com/repos/project-sunbird/secor", "Date": "2018-08-08T11:30:55Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minidev.json.JSONObject.get(mConfig.getMessageTimestampName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (fieldValue == null) fieldValue = jsonObject.get(mConfig.getFallbackMessageTimestampName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/260/buggy-version/src.main.java.com.pinterest.secor.parser.ChannelDateMessageParser.java", "BodyUseAPI": [], "Fixed commit": "d0bdb907cb12a36795f8b2518ac3bd50a2aad2a7", "Url": "https://api.github.com/repos/project-sunbird/secor", "Date": "2018-08-08T11:30:55Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.oth_regensburg.mueller.simon.swimcount.database.entity.User.getStrecke()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (aktuelleStrecke >= 50) { currentUser.addStrecke((-(de.oth_regensburg.mueller.simon.swimcount.activities.MainActivity.DEFAULT_DISTANCE))); }else if (aktuelleStrecke == 0) { return; }else { currentUser.setStrecke(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2101/buggy-version/app.src.main.java.de.oth_regensburg.mueller.simon.swimcount.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ce104d8a293f364d67e3bdde3afd5956041b66a7", "Url": "https://api.github.com/repos/simon376/SwimCountFinal", "Date": "2018-07-02T20:08:14Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((node.getRhs().getType()) instanceof com.evensgn.emcompiler.type.ArrayType) && (!((node.getRhs()) instanceof com.evensgn.emcompiler.frontend.NewExprNode))) { node.getLhs().accept(this); node.getRhs().accept(this); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5408/buggy-version/src.com.evensgn.emcompiler.frontend.StaticUsagePreScanner.java", "BodyUseAPI": ["com.evensgn.emcompiler.frontend.AssignExprNode.getLhs()", "com.evensgn.emcompiler.frontend.AssignExprNode.getRhs()", "node.getRhs().accept(com.evensgn.emcompiler.frontend.StaticUsagePreScanner)", "node.getLhs().accept(com.evensgn.emcompiler.frontend.StaticUsagePreScanner)"], "Fixed commit": "c405e0bd77590e81b65c2a0e4746a4862b69ac28", "Url": "https://api.github.com/repos/Evensgn/EM-Compiler", "Date": "2018-06-07T18:51:03Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.chenxuefei.sevenlauncher.MainActivity.intentFormPackageName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (intent != null) { startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7664/buggy-version/app.src.main.java.com.chenxuefei.sevenlauncher.MainActivity.java", "BodyUseAPI": ["com.chenxuefei.sevenlauncher.MainActivity.startActivity(android.content.Intent)"], "Fixed commit": "1a8f226450ac6f8af2d046b73b28874dcb14028e", "Url": "https://api.github.com/repos/chenxuefei-pp/SevenLauncher", "Date": "2018-02-13T08:57:18Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((pt.x) < 0) || ((pt.x) >= (comparison.getWidth()))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4378/buggy-version/src.jaam.fpm.client.Drawing.java", "BodyUseAPI": [], "Fixed commit": "1ca6a84f8f0e7869b3f366ed866811b180e3a2e7", "Url": "https://api.github.com/repos/Axelwickm/Face-paint-massacre", "Date": "2018-01-27T20:18:04Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((pt.y) < 0) || ((pt.y) >= (comparison.getHeight()))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4378/buggy-version/src.jaam.fpm.client.Drawing.java", "BodyUseAPI": [], "Fixed commit": "1ca6a84f8f0e7869b3f366ed866811b180e3a2e7", "Url": "https://api.github.com/repos/Axelwickm/Face-paint-massacre", "Date": "2018-01-27T20:18:04Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.ovgu.featureide.fm.ui.editors.FeatureConnection.getTarget()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(newModel.isCollapsed())) { final de.ovgu.featureide.fm.ui.editors.featuremodel.operations.ChangeFeatureGroupTypeOperation op = new de.ovgu.featureide.fm.ui.editors.featuremodel.operations.ChangeFeatureGroupTypeOperation(groupType, feature, featureModel); try { org.eclipse.ui.PlatformUI.getWorkbench().getOperationSupport().getOperationHistory().execute(op, null, null); } catch (final org.eclipse.core.commands.ExecutionException e) { de.ovgu.featureide.fm.ui.FMUIPlugin.getDefault().logError(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1953/buggy-version/plugins.de.ovgu.featureide.fm.ui.src.de.ovgu.featureide.fm.ui.editors.featuremodel.editparts.ConnectionEditPart.java", "BodyUseAPI": [], "Fixed commit": "dd02a685e98a987fa6d628b3485fcb02f4b59aca", "Url": "https://api.github.com/repos/Indycate/FeatureIDE", "Date": "2018-09-26T08:38:15Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (timestampObj instanceof java.lang.Integer) { result.timestamp = ((int) (timestampObj)) * 1.0; }else if (timestampObj instanceof java.lang.Double) { result.timestamp = ((double) (timestampObj)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9260/buggy-version/android.app.src.main.java.com.reactnativenavigation.params.parsers.ScreenParamsParser.java", "BodyUseAPI": [], "Fixed commit": "4151a9b75f44923fbbb91ac78b16d8822308188e", "Url": "https://api.github.com/repos/SilverInfinity/react-native-navigation", "Date": "2018-06-29T22:40:16Z"},
{"Line": "=>838", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.joe.holi.ui.fragment.WeatherInfoFragment.getTemperatureDelta(float[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nightTempDelta == 0) { nightTempDelta = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4824/buggy-version/app.src.main.java.com.joe.holi.ui.fragment.WeatherInfoFragment.java", "BodyUseAPI": [], "Fixed commit": "83b6acd32422fd38ddbbd61c76fdec8952bc4930", "Url": "https://api.github.com/repos/joj1989/Holiday", "Date": "2018-07-16T03:31:33Z"},
{"Line": "=>835", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.joe.holi.ui.fragment.WeatherInfoFragment.getTemperatureDelta(float[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dayTempDelta == 0) { dayTempDelta = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4824/buggy-version/app.src.main.java.com.joe.holi.ui.fragment.WeatherInfoFragment.java", "BodyUseAPI": [], "Fixed commit": "83b6acd32422fd38ddbbd61c76fdec8952bc4930", "Url": "https://api.github.com/repos/joj1989/Holiday", "Date": "2018-07-16T03:31:33Z"},
{"Line": "=>437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tictactoe.getBoardSize()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((row <= size) && (row > 0)) && (col <= size)) && (col > 0)) { moveCheck = false; }else { moveCheck = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/217/buggy-version/tictactoe.java", "BodyUseAPI": [], "Fixed commit": "7b2041f9e19af6303d242941eaeaf5fb3a09f9fd", "Url": "https://api.github.com/repos/bhaddad1995/TicTacToe", "Date": "2018-09-30T21:32:50Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result) { emptyView.setVisibility(View.GONE); if ((tripTotalMovementTime) > 0) { tripAverageSpeedView.setText(java.lang.String.format(getString(R.string.frag_trip_history_speed_value), ((((double) (tripTotalTimeableLength)) / ((double) ((tripTotalMovementTime) / 1000))) * 3.6))); } }else { emptyView.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1436/buggy-version/app.src.main.java.im.tny.segvault.disturbances.ui.fragment.top.TripHistoryFragment.java", "BodyUseAPI": [], "Fixed commit": "96e26ea39ed28d2d674f14843a6ef2453af76283", "Url": "https://api.github.com/repos/underlx/underlx", "Date": "2018-03-14T15:14:25Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Long, java.lang.ref.Reference<net.sf.saxon.lib.Resource>>.get(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (ref != null) { res = ref.get(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7943/buggy-version/bagri-xquery.bagri-xquery-saxon.src.main.java.com.bagri.xquery.saxon.ResourceCollectionImpl.java", "BodyUseAPI": ["java.lang.ref.Reference<net.sf.saxon.lib.Resource>.get()"], "Fixed commit": "0b4a3b2fa6eebf9860e1156f668af09b498cec88", "Url": "https://api.github.com/repos/dsukhoroslov/bagri", "Date": "2018-09-05T06:34:16Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(url.contains(\"messages\"))) { android.content.Intent i = new android.content.Intent(this, it.rignanese.leo.slimfacebook.MainActivity.class); i.setData(android.net.Uri.parse(url)); startActivity(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5718/buggy-version/SlimFacebook.app.src.main.java.it.rignanese.leo.slimfacebook.MessagesActivity.java", "BodyUseAPI": ["android.net.Uri.parse(java.lang.String)", "android.content.Intent.setData(android.net.Uri.parse(url))"], "Fixed commit": "618c38785453a32bceac102e382f459b82660cb1", "Url": "https://api.github.com/repos/rignaneseleo/SlimSocial-for-Facebook", "Date": "2018-07-29T21:13:50Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ua.epam.spring.hometask.service.impl.EventService.getById(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (event == null) throw new java.lang.IllegalArgumentException(\"No such event!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8306/buggy-version/src.main.java.ua.epam.spring.hometask.service.impl.BookingFacadeServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "89d0c53850ded29b9472633f7c0500a29b60b169", "Url": "https://api.github.com/repos/Alexey007gold/spring-core-hometask", "Date": "2018-04-24T13:18:48Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((act.getLinkId()) == null) { org.matsim.facilities.ActivityFacility activityFacility = ((act.getFacilityId()) == null) ? null : this.activityFacilities.getFacilities().get(act.getFacilityId()); if ((activityFacility != null) && ((activityFacility.getLinkId()) != null)) { break; }else { needsXY2Links = true; needsReRoute = true; break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8913/buggy-version/matsim.src.main.java.org.matsim.core.population.algorithms.PersonPrepareForSim.java", "BodyUseAPI": ["org.matsim.api.core.v01.population.Activity.getFacilityId()", "org.matsim.api.core.v01.population.Activity.getFacilityId()", "this.activityFacilities.getFacilities().get(act.getFacilityId())"], "Fixed commit": "112a16b59b9001f100bfaebb42ff486fa807d46e", "Url": "https://api.github.com/repos/matsim-org/matsim", "Date": "2018-01-31T10:30:46Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (s != null) originalFileContent += s;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4768/buggy-version/SimpleMerge.src.TextEditorModel.java", "BodyUseAPI": [], "Fixed commit": "3f86ecede76738b434575ab81901d4c944760011", "Url": "https://api.github.com/repos/gfsusan/simple-merge", "Date": "2018-06-05T15:39:35Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((code.charAt(i)) == '[') l--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8143/buggy-version/src.interpreter.java", "BodyUseAPI": [], "Fixed commit": "cade4098a7856d28b0e1387428c9445d28c5e8c5", "Url": "https://api.github.com/repos/anonshail/BrainFry", "Date": "2018-10-18T05:05:40Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((code.charAt(i)) == '[') l++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8143/buggy-version/src.interpreter.java", "BodyUseAPI": [], "Fixed commit": "cade4098a7856d28b0e1387428c9445d28c5e8c5", "Url": "https://api.github.com/repos/anonshail/BrainFry", "Date": "2018-10-18T05:05:40Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.persistence.Query.getResultList()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((profiles == null) || (profiles.isEmpty())) { return null; }else { return profiles.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3457/buggy-version/src.main.java.dao.implementations.ProfileDaoImpl.java", "BodyUseAPI": ["java.util.List<domain.Profile>.get(int)"], "Fixed commit": "45342a2c1a66481c8e1a0bcb47526381305603dc", "Url": "https://api.github.com/repos/Vidovitsch/kwetter", "Date": "2018-04-14T15:26:15Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(ru.runa.wfe.service.delegate.Delegates.getExecutorService().isAdministrator(getUser()))) { throw new ru.runa.wfe.security.AuthorizationException(\"No permission on this page\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3178/buggy-version/wfe-web.src.main.java.ru.runa.af.web.tag.DataSourceListTag.java", "BodyUseAPI": [], "Fixed commit": "6c650fd8fcae4f247115885ed579e6889c7c4aea", "Url": "https://api.github.com/repos/processtech/runawfe-server", "Date": "2018-08-28T10:11:55Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(ru.runa.wfe.service.delegate.Delegates.getExecutorService().isAdministrator(getUser()))) { throw new ru.runa.wfe.security.AuthorizationException(\"No permission on this page\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3178/buggy-version/wfe-web.src.main.java.ru.runa.af.web.tag.DeployDataSourceTag.java", "BodyUseAPI": [], "Fixed commit": "6c650fd8fcae4f247115885ed579e6889c7c4aea", "Url": "https://api.github.com/repos/processtech/runawfe-server", "Date": "2018-08-28T10:11:55Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.ViewGroup.findViewById(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (checkedView != null) ((android.widget.Checkable) (checkedView)).setChecked(checked); else throw new java.lang.NullPointerException(\"It is manadatory for a child to have an id\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6324/buggy-version/src.main.java.io.intelia.checkableviewgroup.CheckableViewGroupImpl.java", "BodyUseAPI": [], "Fixed commit": "fa73e31ec00d605bd4ebe3701da00123acac2014", "Url": "https://api.github.com/repos/KingsMentor/CheckableRadioGroup", "Date": "2018-01-24T07:56:13Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((v.getId()) == (mCheckedId)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6324/buggy-version/src.main.java.io.intelia.checkableviewgroup.CheckableViewGroupImpl.java", "BodyUseAPI": [], "Fixed commit": "fa73e31ec00d605bd4ebe3701da00123acac2014", "Url": "https://api.github.com/repos/KingsMentor/CheckableRadioGroup", "Date": "2018-01-24T07:56:13Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["library.getBookShelfManager().getBookShelf(event.getBlock().getLocation())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (bookShelf != null) library.getBookShelfManager().removeBookShelf(bookShelf);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4454/buggy-version/src.main.java.me.max.library.listeners.BlockPlaceListener.java", "BodyUseAPI": ["library.getBookShelfManager().removeBookShelf(me.max.library.bookshelves.BookShelf)"], "Fixed commit": "3ba9e890e8be6ea2f331cc07d10412c1ee7d003c", "Url": "https://api.github.com/repos/LemmoTresto/Library", "Date": "2018-02-08T14:44:18Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (items == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4454/buggy-version/src.main.java.me.max.library.bookshelves.BookShelfManager.java", "BodyUseAPI": [], "Fixed commit": "3ba9e890e8be6ea2f331cc07d10412c1ee7d003c", "Url": "https://api.github.com/repos/LemmoTresto/Library", "Date": "2018-02-08T14:44:18Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((qName.equals(\"feedburner:origLink\")) && ((track) != null)) { link = true; }else if (qName.equalsIgnoreCase(\"feedburner:origEnclosureLink\")) { location = true; }else if (qName.equals(\"enclosure\")) { track.setTrackDuration(java.lang.Integer.parseInt(attributes.getValue(\"length\"))); }else if ((qName.equals(\"pubDate\")) && ((track) != null)) { date = true; }else if ((qName.equalsIgnoreCase(\"title\")) && ((track) != null)) { title = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1467/buggy-version/src.main.java.com.podcazity.podcastalert.readers.FeedBurner.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "5ae135024fb1e2eacc32042b2137a51863f4ea7f", "Url": "https://api.github.com/repos/droidark/podcastalert", "Date": "2018-08-02T15:40:26Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((qName.equals(\"link\")) && ((track) != null)) { link = true; }else if ((qName.equalsIgnoreCase(\"atom:link\")) && ((track) != null)) { track.setTrackPage(attributes.getValue(\"url\")); link = false; }else if ((qName.equalsIgnoreCase(\"title\")) && ((track) != null)) { title = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1467/buggy-version/src.main.java.com.podcazity.podcastalert.readers.ITunes.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "5ae135024fb1e2eacc32042b2137a51863f4ea7f", "Url": "https://api.github.com/repos/droidark/podcastalert", "Date": "2018-08-02T15:40:26Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isGlobal) { externalReference = createExternalReference(fromExternalReference); }else if (codeScheme == null) { externalReference = createExternalReference(fromExternalReference); }else { throw new fi.vm.yti.codelist.intake.exception.YtiCodeListException(new fi.vm.yti.codelist.common.model.ErrorModel(HttpStatus.INTERNAL_SERVER_ERROR.value(), \"Issue with global non existing ExternalReference!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1831/buggy-version/src.main.java.fi.vm.yti.codelist.intake.parser.ExternalReferenceParser.java", "BodyUseAPI": [], "Fixed commit": "a842fc48e91d1c67450f3fc125afb5de18fc2f65", "Url": "https://api.github.com/repos/VRK-YTI/yti-codelist-content-intake-service", "Date": "2018-03-02T08:58:18Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (ans == null) { return null; }else { return validationService.getStocksHistoryPrice().get(stock.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7013/buggy-version/src.main.java.com.stock.api.service.StockService.java", "BodyUseAPI": [], "Fixed commit": "891a8553c2ac0ff5bbafa625d88719711ad0ed0b", "Url": "https://api.github.com/repos/Yinon-haver/Stock-project", "Date": "2018-05-15T14:48:08Z"},
{"Line": "=>528", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lombok.launch.ShadowClassLoader.getResource_(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (res == null) { if (!(exclusionListMatch(fileNameOfClass))) try { return super.loadClass(name, resolve); } catch (java.lang.ClassNotFoundException cnfe) { res = getResource_((((((\"secondaryLoading.SCL.\" + (sclSuffix)) + \"/\") + (name.replace(\".\", \"/\"))) + \".SCL.\") + (sclSuffix)), true); if (res == null) throw cnfe; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5403/buggy-version/src.launch.lombok.launch.ShadowClassLoader.java", "BodyUseAPI": [], "Fixed commit": "bd4bfcc2619aebdf1d52ccb395a02b6ca8f9d508", "Url": "https://api.github.com/repos/rzwitserloot/lombok", "Date": "2018-07-17T20:32:24Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gang.size()) <= 0) { java.lang.String vict = \"YOU ARE VICTORIOUS!\"; UI.ColorInterface.txtColorRm(\"green\", vict); monster = null; gang = null; return monster; }else { java.lang.System.out.println(\"Do you want to keep fighting?: (Y)es/(N)o?\\n You can also type 1, 2, 3 to use a quick item.\"); java.util.Scanner input = new java.util.Scanner(java.lang.System.in); currCommand = input.next().trim().toUpperCase(); if (currCommand.equals(\"N\")) { enemyFreeAttack(playerOne, monster); if ((playerOne.getHp()) > 0) java.lang.System.out.println(\"You withdraw from combat.\\n What action would you like to take?\"); else { gang = null; input = null; return monster; } gang = null; input = null; return monster; }else if (((currCommand.equals(\"1\")) || (currCommand.equals(\"2\"))) || (currCommand.equals(\"3\"))) { melee.useItem(currCommand, playerOne); } input = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8617/buggy-version/CaveJerk.src.gameMechanics.Combat.java", "BodyUseAPI": [], "Fixed commit": "7c2d0a1c313c0ff277eeed6e3ece1b0dc642949d", "Url": "https://api.github.com/repos/David1platt/caveJerk", "Date": "2018-08-21T00:07:46Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN_MR2)) { intent.putExtra(Intent.EXTRA_ALLOW_MULTIPLE, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/769/buggy-version/WordPress.src.main.java.org.wordpress.android.util.WPMediaUtils.java", "BodyUseAPI": [], "Fixed commit": "4ae40b8362383b4ca1cba9461db861a09dbe26ef", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2018-03-05T13:04:26Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN_MR2)) { intent.putExtra(Intent.EXTRA_ALLOW_MULTIPLE, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/769/buggy-version/WordPress.src.main.java.org.wordpress.android.util.WPMediaUtils.java", "BodyUseAPI": [], "Fixed commit": "4ae40b8362383b4ca1cba9461db861a09dbe26ef", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2018-03-05T13:04:26Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((liveTextViewTTS) != null) { if ((liveTextViewTTS.pitch) != null) { textToSpeech.setPitch(liveTextViewTTS.pitch); } if ((liveTextViewTTS.language) != null) { textToSpeech.setLanguage(liveTextViewTTS.language); } if ((liveTextViewTTS.audioAttributes) != null) { textToSpeech.setAudioAttributes(liveTextViewTTS.audioAttributes); } if ((liveTextViewTTS.speechRate) != null) { textToSpeech.setSpeechRate(liveTextViewTTS.speechRate); } if ((liveTextViewTTS.voice) != null) { textToSpeech.setVoice(liveTextViewTTS.voice); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/862/buggy-version/live-text-view.src.main.java.com.jeffg.live_text_view.LiveTextView.java", "BodyUseAPI": [], "Fixed commit": "801f04ad17cce3336e416c15875e874b8749ae7b", "Url": "https://api.github.com/repos/JeffG05/LiveTextView", "Date": "2018-02-14T07:06:47Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mjr.extraplanets.Config.nuclearBomb) { world.setBlock((x + 3), (y + 2), (z + 3), ExtraPlanets_Blocks.nuclearBomb, 1, 3); world.setBlock((x + 3), (y + 2), (z + 4), ExtraPlanets_Blocks.nuclearBomb, 1, 3); world.setBlock((x + 3), (y + 2), (z + 5), ExtraPlanets_Blocks.nuclearBomb, 1, 3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3487/buggy-version/src.main.java.com.mjr.extraplanets.world.features.WorldGenNuclearPile.java", "BodyUseAPI": [], "Fixed commit": "c29a0d4f718a5a0b10779ca9c24c97d577ad0cdc", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-07-25T00:42:41Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (anObject instanceof com.github.fmarmar.cucumber.tools.report.model.Metadata) { return id.equals(((com.github.fmarmar.cucumber.tools.report.model.Metadata) (anObject)).id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5753/buggy-version/src.main.java.com.github.fmarmar.cucumber.tools.report.model.Metadata.java", "BodyUseAPI": [], "Fixed commit": "9f2542d9017bd5d86939a4c9381c4cc7d66835b4", "Url": "https://api.github.com/repos/fmarmar/cucumber-tools", "Date": "2018-02-22T14:14:04Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((splitString.length) != 4) { throw new seedu.address.logic.parser.exceptions.ParseException(java.lang.String.format(seedu.address.logic.parser.MESSAGE_INVALID_COMMAND_FORMAT, seedu.address.logic.parser.DateTimeParser.MESSAGE_SCHEDULE_PROMPT_FORMAT)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9916/buggy-version/src.main.java.seedu.address.logic.parser.DateTimeParser.java", "BodyUseAPI": [], "Fixed commit": "176b1749a733f55e47e3d076a557646fd38bb3af", "Url": "https://api.github.com/repos/CS2103-AY1819S1-T12-2/main", "Date": "2018-10-26T14:43:15Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.scalecube.services.codec.ServiceMessageDataCodec.decode(io.scalecube.services.api.ServiceMessage,java.lang.Class<?>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(isRequestTypeServiceMessage)) && (!(request.hasData()))) { throw new io.scalecube.services.exceptions.BadRequestException(\"Expected payload in request but got null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5665/buggy-version/services.src.main.java.io.scalecube.services.transport.LocalServiceMessageHandler.java", "BodyUseAPI": [], "Fixed commit": "1a9f9f31c05fdb10f4a0f218829234c4e3cea9c9", "Url": "https://api.github.com/repos/scalecube/scalecube-services", "Date": "2018-05-14T14:48:24Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getValueAt(0, columnIndex)) == null) return java.lang.Object.class;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3550/buggy-version/src.main.java.cn.xjp.plugins.android_act_launcher.rule.ParamItemModel.java", "BodyUseAPI": [], "Fixed commit": "8db3817a862963278158887e58e07197a6551e9f", "Url": "https://api.github.com/repos/xncHung/intelij_activity_launcher_plugin", "Date": "2018-10-10T18:48:15Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (init) { listView.clearChoices(); listView.setItemChecked(0, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1200/buggy-version/app.src.main.java.com.zjp.translateit.fragment.WordbookFragment.java", "BodyUseAPI": [], "Fixed commit": "73c0999ba2cd998ed8420b44914f16f55a3a8b06", "Url": "https://api.github.com/repos/zunpiau/TranslateIt", "Date": "2018-02-08T15:19:22Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (init) { listData(mode); adapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1200/buggy-version/app.src.main.java.com.zjp.translateit.fragment.WordbookFragment.java", "BodyUseAPI": [], "Fixed commit": "73c0999ba2cd998ed8420b44914f16f55a3a8b06", "Url": "https://api.github.com/repos/zunpiau/TranslateIt", "Date": "2018-02-08T15:19:22Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(numberStr.toString().contains(\".\"))) { if ((numberStr.length()) != 0) { numberStr.append(\".\"); }else { numberStr.append(\"0.\"); } resultScreen.setText(numberStr.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5642/buggy-version/src.main.java.Calculator.GUI.java", "BodyUseAPI": ["java.lang.StringBuilder.length()", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.toString()", "javax.swing.JTextField.setText(java.lang.String)"], "Fixed commit": "5fa42bfd3322a968a3efef2ad0d4712693705fcd", "Url": "https://api.github.com/repos/OIDAM98/Calculator_JavaSwing", "Date": "2018-03-26T02:01:11Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.mifos.utils.Network.getConnectivityStatus(this)) != (com.mifos.utils.Network.TYPE_NOT_CONNECTED)) { startDashBoardActivity(); }else { com.mifos.mifosxdroid.core.util.Toaster.show(clRootview, R.string.error_network_not_available); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8657/buggy-version/mifosng-android.src.main.java.com.mifos.mifosxdroid.passcode.PassCodeActivity.java", "BodyUseAPI": [], "Fixed commit": "970fdec424bceead889370eb1274f453b4193468", "Url": "https://api.github.com/repos/AkshGautam/android-client", "Date": "2018-02-08T14:16:55Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((bd.getAsset()) != null) && ((bd.getAsset().getCode()) != null)) bd.setAsset(assetMap.get(bd.getAsset().getCode()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7304/buggy-version/swm.swm-services.src.main.java.org.egov.swm.persistence.repository.CollectionPointJdbcRepository.java", "BodyUseAPI": ["bd.getAsset().getCode()", "org.egov.swm.domain.model.BinDetails.getAsset()", "org.egov.swm.domain.model.BinDetails.setAsset(assetMap.get(bd.getAsset().getCode()))", "java.util.Map<java.lang.String, org.egov.swm.domain.model.Asset>.get(bd.getAsset().getCode())"], "Fixed commit": "6d50dfd38be1b01d18c55d3469d2ec4f960acd75", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2018-02-01T05:17:13Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (board.isWinner(\"X\")) java.lang.System.out.println(\"X wins!\"); else if (board.isWinner(\"O\")) java.lang.System.out.println(\"O wins!\"); else java.lang.System.out.println(\"It's a tie!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1387/buggy-version/src.TicTacGame.java", "BodyUseAPI": ["TicTacBoard.isWinner(java.lang.String)"], "Fixed commit": "868b1a8e2cb8e5fed2045d7ece48fae408cdeee8", "Url": "https://api.github.com/repos/michalakadam/TicTacToe_revisited", "Date": "2018-08-11T05:51:56Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isDetailsView)) { textView.setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { switchToDetailsView(position); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2542/buggy-version/app.src.main.java.fr.corenting.edcompanion.adapters.CommunityGoalsAdapter.java", "BodyUseAPI": [], "Fixed commit": "33b25d9bef2783f687c040528bef57cc0c3e3f29", "Url": "https://api.github.com/repos/corenting/EDCompanion", "Date": "2018-07-21T16:10:53Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(noFile)) { java.io.File outputFile = new java.io.File(\".fieldmapping.xml\"); com.be3short.io.general.FileSystemInteractor.createOutputFile(outputFile, com.be3short.obj.modification.XMLParser.serializeObject(elems)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7719/buggy-version/src.main.java.com.be3short.obj.manipulation.FieldMapper.java", "BodyUseAPI": [], "Fixed commit": "5ca511bbfe1c0def661cf7a28a3a3bf435421678", "Url": "https://api.github.com/repos/be3short/ObjectTools", "Date": "2018-09-08T21:44:21Z"},
{"Line": "=>858", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((extraPath) != null) { de.ovgu.featureide.fm.core.io.manager.FileHandler.save(extraPath, graphicalFeatureModel, de.ovgu.featureide.fm.ui.editors.FeatureDiagramEditor.format); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8897/buggy-version/plugins.de.ovgu.featureide.fm.ui.src.de.ovgu.featureide.fm.ui.editors.FeatureDiagramEditor.java", "BodyUseAPI": [], "Fixed commit": "d27138f35e5019f6a684cdfc88c4c577502ab21f", "Url": "https://api.github.com/repos/alkalinan/FeatureIDE", "Date": "2018-05-02T14:14:11Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playlistInSeconds / 60) > 60) { playlistLengthHours = (playlistInSeconds / 60) / 60; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4446/buggy-version/src.p08_exercises_inheritance.p05_online_radio_database.Main.java", "BodyUseAPI": [], "Fixed commit": "42ef9bbb43be831ab076c7fe4efcb544c6c7244a", "Url": "https://api.github.com/repos/kamenkamen/Java-OOP-Basics", "Date": "2018-03-07T10:27:44Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playlistInSeconds / 60) >= 60) { playlistLengthMinutes = ((playlistInSeconds / 60) / 60) / 60; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4446/buggy-version/src.p08_exercises_inheritance.p05_online_radio_database.Main.java", "BodyUseAPI": [], "Fixed commit": "42ef9bbb43be831ab076c7fe4efcb544c6c7244a", "Url": "https://api.github.com/repos/kamenkamen/Java-OOP-Basics", "Date": "2018-03-07T10:27:44Z"},
{"Line": "=>1381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recyclerView) != null) { recyclerView.post(new java.lang.Runnable() { @java.lang.Override public void run() { recyclerView.scrollToPosition(pos); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1394/buggy-version/app.src.main.java.com.imagesoftware.anubhav.vacmet.OrderStatus.java", "BodyUseAPI": [], "Fixed commit": "dae17ed148caac37282801d903f8bae10e389b52", "Url": "https://api.github.com/repos/jay1493/vacmetOrderStatus", "Date": "2018-01-21T18:59:33Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yumu.hexie.model.distribution.region.MerchantRepository.findMechantByNameLike(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (merchant == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2134/buggy-version/hexiebk.src.main.java.com.yumu.hexie.service.impl.ScheduleServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "e1d0a45d91622accd7ac78edce5987727f465170", "Url": "https://api.github.com/repos/linknabor/liangyou", "Date": "2017-02-23T09:41:47Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (placements.isEmpty()) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9302/buggy-version/src.main.java.com.github.skjolberg.packing.BruteForcePackager.java", "BodyUseAPI": [], "Fixed commit": "588c68addbe3189a010f00856c1932ad303e9c27", "Url": "https://api.github.com/repos/skjolber/3d-bin-container-packing", "Date": "2018-09-08T13:25:44Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (extend != null) { blockHeader.setTempExtend(io.nuls.api.crypto.Hex.decode(extend)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7619/buggy-version/src.main.java.io.nuls.api.utils.RpcTransferUtil.java", "BodyUseAPI": ["io.nuls.api.crypto.Hex.decode(java.lang.String)", "io.nuls.api.entity.BlockHeader.setTempExtend(io.nuls.api.crypto.Hex.decode(extend))"], "Fixed commit": "f02a38864ada68d08ea5aeabae675a9024ee95c3", "Url": "https://api.github.com/repos/nuls-io/API-server", "Date": "2018-09-20T12:40:04Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rs.getType()) != (java.sql.ResultSet.TYPE_FORWARD_ONLY)) { col.defaultValue = rs.getString(\"COLUMN_DEF\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3195/buggy-version/src.main.java.com.iciql.TableInspector.java", "BodyUseAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Fixed commit": "edd6c84bbb8c2530427b8717fd9f142dcf8377e4", "Url": "https://api.github.com/repos/humbertodias/iciql", "Date": "2018-03-17T16:31:04Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.ballerina.plugins.idea.psi.impl.BallerinaPsiImplUtil.resolveTypeToDefinition(io.ballerina.plugins.idea.psi.BallerinaTypeName)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((typeDefinition != null) && ((typeDefinition.getParent()) instanceof io.ballerina.plugins.idea.psi.BallerinaTypeDefinition)) { processTypeDefinition(((io.ballerina.plugins.idea.psi.BallerinaTypeDefinition) (typeDefinition.getParent())), typeDefinition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6781/buggy-version/tool-plugins.intellij.src.main.java.io.ballerina.plugins.idea.psi.scopeprocessors.BallerinaFieldProcessor.java", "BodyUseAPI": ["io.ballerina.plugins.idea.psi.scopeprocessors.BallerinaFieldProcessor.processTypeDefinition(((io.ballerina.plugins.idea.psi.BallerinaTypeDefinition) (typeDefinition.getParent())),com.intellij.psi.PsiElement)", "com.intellij.psi.PsiElement.getParent()"], "Fixed commit": "3951225efdf8263995fbe250b216ff3a57848d64", "Url": "https://api.github.com/repos/lankavitharana/ballerina", "Date": "2018-06-06T12:03:24Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["user.getUser_asset().getAcc_balance()", "trans.getTrans().getPrice()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((ask_price <= quote) && (user_balance >= total_values)) { MUN.MongoDocument.UserTransactionConsolidator new_trans = updateTrans(quote, trans); clientOfficer(\"buy\", quote, new_trans); result = true; }else if ((ask_price > quote) && (user_balance >= (quote * (trans.getTrans().getVolume())))) { MUN.MongoDocument.UserTransactionConsolidator new_trans = updateTrans(quote, trans); clientOfficer(\"buy\", quote, new_trans); result = true; }else { result = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8186/buggy-version/src.main.java.MUN.Service.Broker.java", "BodyUseAPI": ["MUN.Service.Broker.updateTrans(double,MUN.MongoDocument.UserTransactionConsolidator)", "MUN.Service.Broker.clientOfficer(java.lang.String,double,MUN.MongoDocument.UserTransactionConsolidator)", "MUN.Service.Broker.clientOfficer(java.lang.String,double,MUN.MongoDocument.UserTransactionConsolidator)", "MUN.Service.Broker.updateTrans(double,MUN.MongoDocument.UserTransactionConsolidator)"], "Fixed commit": "fbbd251b9b0caf013bfa6e813e0b3a7114a60fea", "Url": "https://api.github.com/repos/BenxinNiu/stockopedia-server", "Date": "2018-03-27T22:04:52Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["umlcreator.data.DataManager.findTopPane(double,double)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (topPane == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1945/buggy-version/src.umlcreator.data.DataManager.java", "BodyUseAPI": [], "Fixed commit": "fed7691cc75e0561c15f251edaa6dbf4b3827392", "Url": "https://api.github.com/repos/VinCramer/UMLCreator", "Date": "2018-05-28T20:21:47Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedPane) != null) { unhighlightPane(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1945/buggy-version/src.umlcreator.data.DataManager.java", "BodyUseAPI": [], "Fixed commit": "fed7691cc75e0561c15f251edaa6dbf4b3827392", "Url": "https://api.github.com/repos/VinCramer/UMLCreator", "Date": "2018-05-28T20:21:47Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((studentName.length()) == 0) { studentName = student.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4406/buggy-version/src.main.java.teammates.logic.api.EmailGenerator.java", "BodyUseAPI": [], "Fixed commit": "484deacdf092380e5e7468b7fc37640aed15397c", "Url": "https://api.github.com/repos/LuLechuan/teammates", "Date": "2018-04-16T08:00:59Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (recognizedGenderCharacter.equals(\"\")) { log.error(\"Impossible to recgonize name: {} to any gender\", nameWithoutPolishCharacters); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/63/buggy-version/src.main.java.root.caradvisor.name.NameUtils.java", "BodyUseAPI": [], "Fixed commit": "f1d3ede8bfd9ccfae152b5f6a15fe15f12b9a64f", "Url": "https://api.github.com/repos/kos672/caradvisor-backend", "Date": "2018-10-14T12:59:58Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index == (list.get(((list.size()) - 1)).size())) { list.get(((list.size()) - 1)).add(value); }else { list.get(((list.size()) - 1)).add(index, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5147/buggy-version/src.main.java.com.ifmo.markina.persistent.list.impl.naive.NaivePersistentList.java", "BodyUseAPI": ["java.util.List<E>.add(int,E)", "java.util.List<java.util.List<E>>.get(int)", "java.util.List<java.util.List<E>>.get(int)", "java.util.List<E>.add(E)", "java.util.List<java.util.List<E>>.size()", "java.util.List<java.util.List<E>>.size()"], "Fixed commit": "55f469283f696841318ad1c7f0fb3e65ded5f3b4", "Url": "https://api.github.com/repos/markina/PersistentList", "Date": "2018-01-15T11:55:40Z"},
{"Line": "=>1598", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mConnectionPending)) unbindService(); else mConnectionHandler = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/3922/buggy-version/app.src.main.java.org.eclipse.paho.android.service.MqttAndroidClient.java", "BodyUseAPI": [], "Fixed commit": "5aa09319588fcc616a0655dfabcc5f38a1e80190", "Url": "https://api.github.com/repos/gauravdingolia/MqttPahoAndroid", "Date": "2018-03-18T17:27:54Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (response.hasError()) { throw new com.transloadit.sdk.exceptions.RequestException((\"Request to Assembly failed: \" + (response.json().getString(\"error\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8038/buggy-version/src.main.java.com.transloadit.sdk.Assembly.java", "BodyUseAPI": ["com.transloadit.sdk.response.AssemblyResponse.json()", "response.json().getString(java.lang.String)"], "Fixed commit": "228bf10d9c4018b725b5095ff2c7779d276d46ca", "Url": "https://api.github.com/repos/transloadit/java-sdk", "Date": "2018-01-18T04:59:55Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstCall) { mapView.setFirstCall(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1710/buggy-version/app.src.main.java.ticket.com.tickettoridegames.client.presenter.MapPresenter.java", "BodyUseAPI": [], "Fixed commit": "8bdbd373d2a5ee0ef012046ae183156a3360cdb4", "Url": "https://api.github.com/repos/DavidROwen/TicketToRideGame", "Date": "2018-08-01T17:54:51Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (nickname.isEmpty()) { this.nickname = \"ANON\"; }else if ((nickname.length()) > 8) { this.nickname = nickname.substring(0, 8); }else { this.nickname = nickname; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7021/buggy-version/MemoryGame.src.main.java.domain.Score.java", "BodyUseAPI": [], "Fixed commit": "021f1a2eea0b07e5b91df82a96f24fa24ac5c036", "Url": "https://api.github.com/repos/massamasa/otm-harjoitustyo", "Date": "2018-04-30T07:48:05Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (aClass == null) { com.lgsim.engine.graphEditor.util.ImplementationUtil.table.put(interfaceType, implType); }else { com.lgsim.engine.graphEditor.util.ImplementationUtil.log.debug(\"danger: repeat register\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4219/buggy-version/util.src.main.java.com.lgsim.engine.graphEditor.util.ImplementationUtil.java", "BodyUseAPI": [], "Fixed commit": "ce7f6ed0710cea60b05d484e79de185cb440b195", "Url": "https://api.github.com/repos/lgsimu/graph-editor", "Date": "2018-04-26T01:48:04Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.module.shr.cdahandler.configuration.CdaHandlerConfiguration.getEpidRoot()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(epidRoot.equals(\"\"))) && (!(epidRoot.isEmpty()))) { java.util.Iterator res = assignedEntity.getId().iterator(); while (res.hasNext()) { org.marc.everest.datatypes.II autId = ((org.marc.everest.datatypes.II) (res.next())); if (autId.getRoot().equals(this.m_configuration.getEpidRoot())) { id = this.m_datatypeUtil.formatIdentifier(autId); } } }else { id = this.m_datatypeUtil.formatIdentifier(assignedEntity.getId().get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2765/buggy-version/api.src.main.java.org.openmrs.module.shr.cdahandler.processor.util.AssignedEntityProcessorUtil.java", "BodyUseAPI": [], "Fixed commit": "75c0ae6616d4ef496792e2d07b0e6983e5569085", "Url": "https://api.github.com/repos/SEDISH/openmrs-module-shr-cdahandler", "Date": "2018-01-18T17:17:09Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.ibatis.cache.decorators.BlockingCache.getLockForKey(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lock.isHeldByCurrentThread()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/6972/buggy-version/src.main.java.org.apache.ibatis.cache.decorators.BlockingCache.java", "BodyUseAPI": [], "Fixed commit": "261d212814c7dd5adc141b9f766ab19def47bedd", "Url": "https://api.github.com/repos/kezhenxu94/mybatis-3", "Date": "2018-09-17T15:41:24Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (trustPolicyDto.getRecalculateScoresWhenUpdated()) { trustCalculationService.scoreBatch(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7940/buggy-version/src.main.java.nimble.trust.web.controller.TrustPolicyController.java", "BodyUseAPI": [], "Fixed commit": "a3ad993506bdf1a626201ade2b91173278a79396", "Url": "https://api.github.com/repos/nimble-platform/trust-scoring-service", "Date": "2018-10-11T14:37:13Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.DataInput.readLong()", "java.io.DataInput.readLong()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((seg == (-1)) && (pos == (-1))) { lsn = null; }else { lsn = new com.orientechnologies.orient.core.storage.impl.local.paginated.wal.OLogSequenceNumber(seg, pos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/658/buggy-version/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OUpdateDatabaseStatusTask.java", "BodyUseAPI": [], "Fixed commit": "28bc1d6b4e9bfc51613bc9575e0ba9b375f6457c", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2018-08-24T10:50:29Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lsn) == null) { out.writeLong((-1)); out.writeLong((-1)); }else { out.writeLong(lsn.getSegment()); out.writeLong(lsn.getPosition()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/658/buggy-version/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OUpdateDatabaseStatusTask.java", "BodyUseAPI": [], "Fixed commit": "28bc1d6b4e9bfc51613bc9575e0ba9b375f6457c", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2018-08-24T10:50:29Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((((((login.equals(\"\")) || (password.equals(\"\"))) || (firstName.equals(\"\"))) || (middleName.equals(\"\"))) || (lastName.equals(\"\"))) || (birthday.equals(\"\"))) || (gender.equals(\"\"))) || (group.equals(\"\"))) { throw new database.exceptions.IllegalObjectStateException(\"\u0417\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u044b \u043d\u0435 \u0432\u0441\u0435 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043f\u043e\u043b\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430 '\u0421\u0442\u0443\u0434\u0435\u043d\u0442'\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/8011/buggy-version/src.main.java.database.objects.Student.java", "BodyUseAPI": [], "Fixed commit": "9337d145fcf62d5a5962ced5311e95fc99136cf6", "Url": "https://api.github.com/repos/NineNationSU/SUServer", "Date": "2018-03-27T13:53:13Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player1_) != null) player1_.jump();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1825/buggy-version/NotMarioGame.src.notmario.MyWorld.java", "BodyUseAPI": [], "Fixed commit": "4bf11559e2078841957a4a21f6babe4693bb81f5", "Url": "https://api.github.com/repos/jbotelho97/NotMario", "Date": "2018-05-01T21:19:15Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player1_) != null) player1_.shoot(dir1_);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/1825/buggy-version/NotMarioGame.src.notmario.MyWorld.java", "BodyUseAPI": [], "Fixed commit": "4bf11559e2078841957a4a21f6babe4693bb81f5", "Url": "https://api.github.com/repos/jbotelho97/NotMario", "Date": "2018-05-01T21:19:15Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.Menu.findItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (existingMenu != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/7481/buggy-version/app.src.main.java.ca.pkay.rcloneexplorer.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "bb0be26f0e2bf6e03b518dea1822b53160791dbd", "Url": "https://api.github.com/repos/kaczmarkiewiczp/rcloneExplorer", "Date": "2018-08-13T22:20:50Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (equalsButtonPressed) { setBeginState(); }else if (proceedToAllClear) { proceedToAllClear = false; mClearButton.setText(R.string.clear); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/9121/buggy-version/app.src.main.java.com.developingdaan.calcyoulater.Calcyoulater.java", "BodyUseAPI": [], "Fixed commit": "58c761300c2759606e5d936260b6c56726b49bf2", "Url": "https://api.github.com/repos/daanschutte/calculator", "Date": "2018-03-11T15:53:15Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (br != null) { try { br.close(); } catch (java.io.IOException e) { e.printStackTrace(); throw new clueGame.BadConfigFormatException(\"IOException: Failed to close file.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/4941/buggy-version/src.clueGame.Board.java", "BodyUseAPI": ["java.io.BufferedReader.close()"], "Fixed commit": "7353b630854e9499d82d06a3d2c567cd0ea99a5e", "Url": "https://api.github.com/repos/cmak2/ClueGame2", "Date": "2018-03-12T04:55:03Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.benmu.framework.extend.adapter.DefaultWXImageAdapter.PLACEHOLDER_DEFAULT.equals(mStrategy.placeHolder)) { mView.showLoading(wh[0], wh[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/5470/buggy-version/src.main.java.com.benmu.framework.extend.adapter.DefaultWXImageAdapter.java", "BodyUseAPI": [], "Fixed commit": "d23675487aa55d32d65114ebdd8d52dd7023a114", "Url": "https://api.github.com/repos/bmfe/WeexErosFramework", "Date": "2018-03-19T10:07:11Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getVersion()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (version == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V167/2304/buggy-version/src.main.java.com.synopsys.arc.jenkinsci.plugins.dynamic_search.views.SimpleSearchView.java", "BodyUseAPI": [], "Fixed commit": "9ec06ed7823076e3db4df9370628c254dc0e9539", "Url": "https://api.github.com/repos/jenkinsci/dynamic-search-view-plugin", "Date": "2018-02-22T13:47:58Z"},
{"Line": "=>988", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((firebaseAuth) == null) { initializeFirebaseAuth(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5105/buggy-version/app.src.main.java.com.imagesoftware.anubhav.vacmet.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "08aa4fe983118379a040e265c2d9b2d40b9ea1d2", "Url": "https://api.github.com/repos/jay1493/vacmetOrderStatus", "Date": "2018-01-13T20:31:40Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["boxresin.library.javahttp.HttpResponse.getBodyEncoding()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (encoding == null) encoding = \"UTF-8\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2209/buggy-version/Library.src.main.java.boxresin.library.javahttp.HttpResponse.java", "BodyUseAPI": [], "Fixed commit": "00b870d78a8023967dd7471fd5a4f1834f4743e1", "Url": "https://api.github.com/repos/BoxResin/JavaHTTP", "Date": "2018-02-04T03:51:37Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((minutes) == 0) { return ((hours) + \":00\") + (amPM); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1713/buggy-version/src.main.java.memoranda.bus.tour.Tour.java", "BodyUseAPI": [], "Fixed commit": "766d795c99889318c09578cdfd392ab1ec38549d", "Url": "https://api.github.com/repos/ser316asu-2018/Cochem", "Date": "2018-04-22T22:54:56Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (canDecreaseSupply()) { setState(state.Apply_RallyPlus1DRM_Rules()); setChanged(); notifyObservers(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5859/buggy-version/Model.Siege_Game.java", "BodyUseAPI": [], "Fixed commit": "a04a4a3f6161591d2ad3410e1fae6c68adedd234", "Url": "https://api.github.com/repos/I3ryI3e/jubilant-umbrella", "Date": "2018-05-26T14:29:25Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.ithappenedandroid.Application.TrackingService.GetEvent(java.util.UUID,java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((thisEvent.GetScale()) != null) { yourScale.setText(thisEvent.GetScale().toString()); }else { yourScale.setText(\"\u0423 \u044d\u0442\u043e\u0433\u043e \u0441\u043e\u0431\u044b\u0442\u0438\u044f \u043d\u0435\u0442 \u0448\u043a\u0430\u043b\u044b\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/228/buggy-version/Android.ItHappenedAndroid.app.src.main.java.com.example.ithappenedandroid.Activities.EventDetailsActivity.java", "BodyUseAPI": ["com.example.ithappenedandroid.Domain.Event.GetScale()", "thisEvent.GetScale().toString()", "android.widget.TextView.setText(thisEvent.GetScale().toString())"], "Fixed commit": "c3371b62d6eda503c51ba81d061f98523582ada5", "Url": "https://api.github.com/repos/LeagueOfDevelopers/ItHappened", "Date": "2018-01-25T09:11:36Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.ithappenedandroid.Application.TrackingService.GetEvent(java.util.UUID,java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((thisEvent.GetComment()) != null) { yourComment.setText(thisEvent.GetComment()); }else { yourComment.setText(\"\u0423 \u044d\u0442\u043e\u0433\u043e \u0441\u043e\u0431\u044b\u0442\u0438\u044f \u043d\u0435\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/228/buggy-version/Android.ItHappenedAndroid.app.src.main.java.com.example.ithappenedandroid.Activities.EventDetailsActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(thisEvent.GetComment())", "com.example.ithappenedandroid.Domain.Event.GetComment()"], "Fixed commit": "c3371b62d6eda503c51ba81d061f98523582ada5", "Url": "https://api.github.com/repos/LeagueOfDevelopers/ItHappened", "Date": "2018-01-25T09:11:36Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.ithappenedandroid.Application.TrackingService.GetEvent(java.util.UUID,java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((thisEvent.GetRating()) != null) { yourRating.setRating(((thisEvent.GetRating().GetRatingValue()) / 2)); }else { yourRating.setRating(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/228/buggy-version/Android.ItHappenedAndroid.app.src.main.java.com.example.ithappenedandroid.Activities.EventDetailsActivity.java", "BodyUseAPI": ["com.example.ithappenedandroid.Domain.Event.GetRating()", "android.widget.RatingBar.setRating(((thisEvent.GetRating().GetRatingValue()) / 2))", "thisEvent.GetRating().GetRatingValue()"], "Fixed commit": "c3371b62d6eda503c51ba81d061f98523582ada5", "Url": "https://api.github.com/repos/LeagueOfDevelopers/ItHappened", "Date": "2018-01-25T09:11:36Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.talend.core.model.process.ProcessUtils.isTestContainer(org.talend.core.model.process.IProcess)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isTestcaseProcess) { org.talend.core.runtime.process.LastGenerationInfo.getInstance().getHighPriorityModuleNeeded().addAll(nodeNeededModules); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6362/buggy-version/main.plugins.org.talend.designer.core.src.main.java.org.talend.designer.core.utils.JavaProcessUtil.java", "BodyUseAPI": [], "Fixed commit": "7c18b0a2bb2b24e7c2214b9cc78a8e215302d8c2", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2018-07-02T02:24:55Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getBaseContext().getSystemService(Context.NOTIFICATION_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (notificationManager != null) { notificationManager.cancel(kanemars.chuffme.CHUFF_ME_NOTIFICATION_ID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9278/buggy-version/app.src.main.java.kanemars.chuffme.MainActivity.java", "BodyUseAPI": ["android.app.NotificationManager.cancel(kanemars.chuffme.CHUFF_ME_NOTIFICATION_ID)"], "Fixed commit": "01c3c824c2eca6108a7a8cc95b511877e4dacb1e", "Url": "https://api.github.com/repos/kanemars/ChuffJava", "Date": "2018-05-15T13:35:36Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pendingIntent) != null) { alarmMgr.cancel(pendingIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9278/buggy-version/app.src.main.java.kanemars.chuffme.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "01c3c824c2eca6108a7a8cc95b511877e4dacb1e", "Url": "https://api.github.com/repos/kanemars/ChuffJava", "Date": "2018-05-15T13:35:36Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((o.state) == null) { o.state = org.mitre.synthea.engine.Generator.DEFAULT_STATE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6014/buggy-version/src.main.java.org.mitre.synthea.engine.Generator.java", "BodyUseAPI": [], "Fixed commit": "f66a80230b5441f8a8cd793c0e949f5d84805598", "Url": "https://api.github.com/repos/pagerinc/synthea", "Date": "2018-06-28T18:32:12Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((Database.isCanRenew(((Patron) (user)), document)) && (typeUser.equals(\"visitingProf\"))) { statement.executeUpdate(((((((((\"UPDATE booking set time = '\" + timestamp1) + \"', is_renew = '\") + 1) + \"', returnTime = '\") + timestamp) + \"' WHERE document_id = '\") + (document.id)) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2043/buggy-version/src.Booking.java", "BodyUseAPI": ["java.sql.Statement.executeUpdate(((((((((\"UPDATE booking set time = '\" + timestamp1) + \"', is_renew = '\") + 1) + \"', returnTime = '\") + timestamp) + \"' WHERE document_id = '\") + (document.id)) + \"'\"))"], "Fixed commit": "4014cfbe4ce00f707e34338bf7b74aede3929e98", "Url": "https://api.github.com/repos/slvt1/LMS-INNO", "Date": "2018-04-01T19:20:59Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.activity.CropActivity.findPoints()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (points != null) { mSelectionImageView.setPoints(points); }else { com.owncloud.android.lib.common.utils.Log_OC.d(com.owncloud.android.ui.activity.CropActivity.TAG, getResources().getString(R.string.no_contour_found)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7150/buggy-version/src.com.owncloud.android.ui.activity.CropActivity.java", "BodyUseAPI": ["com.owncloud.android.ui.QuadrilateralSelectionImageView.setPoints(java.util.List<android.graphics.PointF>)"], "Fixed commit": "8cc5ca16d00979bf18cd6c17e5cf12797166d640", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-03-12T06:43:04Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (enabledTransition != null) { _debug((((\"The guard \" + (enabledTransition.getGuardExpression())) + \" has the biggest difference to boundary as \") + (_distanceToBoundary))); }else { _debug(\"No enabled transition.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7144/buggy-version/ptolemy.domains.continuous.kernel.HybridModalDirector.java", "BodyUseAPI": ["ptolemy.domains.continuous.kernel.HybridModalDirector._debug((((\"The guard \" + (enabledTransition.getGuardExpression())) + \" has the biggest difference to boundary as \") + (_distanceToBoundary)))", "ptolemy.domains.modal.kernel.Transition.getGuardExpression()"], "Fixed commit": "ff63d8b16498f893b7b8849a30fd00a9b978153c", "Url": "https://api.github.com/repos/icyphy/ptII", "Date": "2018-10-05T20:51:44Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!foundActor) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7144/buggy-version/ptolemy.domains.continuous.kernel.HybridModalDirector.java", "BodyUseAPI": [], "Fixed commit": "ff63d8b16498f893b7b8849a30fd00a9b978153c", "Url": "https://api.github.com/repos/icyphy/ptII", "Date": "2018-10-05T20:51:44Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (superblockBattleMap.containsKey(superblockId)) { java.util.HashSet<org.dogethereum.agents.core.Keccak256Hash> superblockBattles = superblockBattleMap.get(superblockId); for (org.dogethereum.agents.core.Keccak256Hash sessionId : superblockBattles) { battleMap.remove(sessionId); } superblockBattleMap.remove(superblockId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3821/buggy-version/src.main.java.org.dogethereum.agents.core.SuperblockBaseClient.java", "BodyUseAPI": ["java.util.HashMap<org.dogethereum.agents.core.Keccak256Hash, java.util.HashSet<org.dogethereum.agents.core.Keccak256Hash>>.remove(org.dogethereum.agents.core.Keccak256Hash)", "java.util.HashMap<org.dogethereum.agents.core.Keccak256Hash, java.util.HashSet<org.dogethereum.agents.core.Keccak256Hash>>.get(org.dogethereum.agents.core.Keccak256Hash)"], "Fixed commit": "6ed01148a43c9c9a336a970c581a9618ce3441ae", "Url": "https://api.github.com/repos/dogethereum/dogethereum-agents", "Date": "2018-08-10T20:59:32Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Status.INSTALLATION_IN_PROGRESS.code().equals(actionOnTenantRequest.getStatus())) tenantMapper.updateTenantStatus(Status.INSTALLATION_IN_PROGRESS.id(), tenantcode); else if (Status.UNINSTALLATION_IN_PROGRESS.code().equals(actionOnTenantRequest.getStatus())) tenantMapper.updateTenantStatus(Status.UNINSTALLATION_IN_PROGRESS.id(), tenantcode);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9575/buggy-version/admin-api.src.main.java.org.csi.yucca.adminapi.service.impl.TenantServiceImpl.java", "BodyUseAPI": ["org.csi.yucca.adminapi.request.ActionRequest.getStatus()", "Status.UNINSTALLATION_IN_PROGRESS.code().equals(actionOnTenantRequest.getStatus())"], "Fixed commit": "322ebe0dcb57f16d64941d108db86358362c1a99", "Url": "https://api.github.com/repos/csipiemonte/yucca-dataservice", "Date": "2018-09-28T14:31:25Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((baseExpr.getType()) instanceof pt.up.fe.specs.clava.ast.type.PointerType) { data.put(MemberExpr.IS_ARROW, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7440/buggy-version/ClavaAst.src.pt.up.fe.specs.clava.context.ClavaFactory.java", "BodyUseAPI": [], "Fixed commit": "f80d45cfe28dc0e65f3076270f2ba5599b008aef", "Url": "https://api.github.com/repos/specs-feup/clava", "Date": "2018-09-20T19:54:41Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ecogPatientAssignmentMessage.getPatientAssignment().getPatientAssignmentStatus()) == (model.fact.PatientAssignmentStatus.NO_ARM_ASSIGNED)) { patient.setCurrentPatientStatus(PatientStatus.PENDING_OFF_STUDY); }else { patient.setCurrentPatientStatus(PatientStatus.PENDING_APPROVAL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3621/buggy-version/src.main.java.processor.EcogPatientAssignmentProcessor.java", "BodyUseAPI": [], "Fixed commit": "57bfd4556bf86f74862e4ca754061928f250d151", "Url": "https://api.github.com/repos/BIAD/nci-adult-match-assignment-delivery-lambda", "Date": "2018-08-01T21:41:48Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.group52.client.actions.XMLParse.getActionFromXML(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(\"view\".equals(action))) throw new java.rmi.ServerException(status);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5555/buggy-version/client.src.com.group52.client.actions.Handler.java", "BodyUseAPI": [], "Fixed commit": "bb63d2d92e4b798cac218710ef5b71375a32c1e1", "Url": "https://api.github.com/repos/group52/TaskManager", "Date": "2018-04-22T17:55:14Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Arrays.copyOfRange(java.lang.String[],int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (idValues[i].equals(\"Unavailable\")) { java.lang.System.out.println((((\"Measurement \" + (idName[i])) + \" is not available for user \") + (userNames.get((numUsers - 1))))); idValues[i] = \"0.0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7121/buggy-version/src.jblockmain.Measurements.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "a37abe4aa827162e85a8a250c1c49f8de59203ca", "Url": "https://api.github.com/repos/aharwood2/JBlockCreator", "Date": "2018-07-06T10:53:26Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((callBack) != null) { callBack.callBack(rawResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1654/buggy-version/zxing.src.com.journeyapps.barcodescanner.CaptureManager.java", "BodyUseAPI": [], "Fixed commit": "325d22cba114474a1a2be545bea14109683df92b", "Url": "https://api.github.com/repos/ruijindp/HG_transport_phone", "Date": "2018-09-19T10:02:07Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (online.bogenliga.application.common.errorhandling.exception.CoreException.logger.isDebugEnabled()) { online.bogenliga.application.common.errorhandling.exception.CoreException.logger.debug(\"{}: {}{}{}\", errorCode.getValue(), message, java.lang.System.lineSeparator(), online.bogenliga.application.common.errorhandling.exception.CoreException.stacktrace2String(cause)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8684/buggy-version/bogenliga.bogenliga-common.src.main.java.online.bogenliga.application.common.errorhandling.exception.CoreException.java", "BodyUseAPI": [], "Fixed commit": "9e94b2e75013a27cce86415d287877f04de0bcf9", "Url": "https://api.github.com/repos/andre-lehnert/mock-backend", "Date": "2018-09-09T21:00:29Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (e != null) { final java.io.ByteArrayOutputStream stream = new java.io.ByteArrayOutputStream(); e.printStackTrace(new java.io.PrintStream(stream)); return new java.lang.String(stream.toByteArray()); }else { return \"[no stacktrace found]\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8684/buggy-version/bogenliga.bogenliga-common.src.main.java.online.bogenliga.application.common.errorhandling.exception.CoreException.java", "BodyUseAPI": ["java.lang.Throwable.printStackTrace(java.io.PrintStream)"], "Fixed commit": "9e94b2e75013a27cce86415d287877f04de0bcf9", "Url": "https://api.github.com/repos/andre-lehnert/mock-backend", "Date": "2018-09-09T21:00:29Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (online.bogenliga.application.common.errorhandling.exception.CoreException.logger.isDebugEnabled()) { online.bogenliga.application.common.errorhandling.exception.CoreException.logger.debug(\"{} with Parameter [{}]: {}\", errorCode.getValue(), java.lang.String.join(\",\", this.parameters), message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8684/buggy-version/bogenliga.bogenliga-common.src.main.java.online.bogenliga.application.common.errorhandling.exception.CoreException.java", "BodyUseAPI": [], "Fixed commit": "9e94b2e75013a27cce86415d287877f04de0bcf9", "Url": "https://api.github.com/repos/andre-lehnert/mock-backend", "Date": "2018-09-09T21:00:29Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dataType.isInstance(datum))) { throw new java.lang.ClassCastException(java.lang.String.format(\"%s is not a %s!\", datum.getClass(), dataType)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5378/buggy-version/src.main.java.xyz.phanta.aqueduct.graph.socket.DuctSocket.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.Class<? extends java.lang.Object>,java.lang.Class<T>)", "java.lang.Object.getClass()"], "Fixed commit": "c0f5d51b734d94f2bac8fe70115b86aebce61065", "Url": "https://api.github.com/repos/phantamanta44/Aqueduct", "Date": "2018-09-18T21:36:44Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((compoundTimeStr.length()) > 0) { ctime = org.jtool.changetracker.operation.ChangeOperation.getTime(compoundTimeStr); }else { ctime = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7069/buggy-version/org.jtool.changetracker.core.src.org.jtool.changetracker.xml.Xml2Operation.java", "BodyUseAPI": [], "Fixed commit": "570985af752d074f163fcae343a95db4fa406a38", "Url": "https://api.github.com/repos/katsuhisamaruyama/ChangeTracker2", "Date": "2017-09-26T13:03:56Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.shrcn.found.ui.util.DialogHelper.selectFile(com.shrcn.found.ui.util.SwtUtil.getDefaultShell(),SWT.OPEN,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.shrcn.found.common.util.StringUtil.isEmpty(path)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9759/buggy-version/com.synet.tool.rsc.src.com.synet.tool.rsc.view.NavigationView.java", "BodyUseAPI": [], "Fixed commit": "9c0566bc2923175c67cf44d07e784a23d24e4e17", "Url": "https://api.github.com/repos/ChalmersA/RSC50", "Date": "2018-09-13T09:16:06Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.shrcn.found.ui.util.DialogHelper.selectFile(com.shrcn.found.ui.util.SwtUtil.getDefaultShell(),SWT.SAVE,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.shrcn.found.common.util.StringUtil.isEmpty(path)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9759/buggy-version/com.synet.tool.rsc.src.com.synet.tool.rsc.view.NavigationView.java", "BodyUseAPI": [], "Fixed commit": "9c0566bc2923175c67cf44d07e784a23d24e4e17", "Url": "https://api.github.com/repos/ChalmersA/RSC50", "Date": "2018-09-13T09:16:06Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(atom.getSymbol().equals(\"H\"))) sdfwriter.write(((((((((((\"MULT \" + ((data.getMolecule().getAtomNumber(atom)) + 1)) + \" \") + (atom.getSymbol())) + \" \") + ((atom.getHybridization()) == (IAtomType.Hybridization.SP2) ? 2 : (atom.getHybridization()) == (IAtomType.Hybridization.SP3) ? 3 : 1)) + \" \") + ((de.unikoeln.chemie.nmr.io.LSDWriter.getHcount(data.getMolecule(), atom)) + (atom.getImplicitHydrogenCount()))) + \" \") + (atom.getFormalCharge())) + \"\\r\\n\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5805/buggy-version/src.lib.de.unikoeln.chemie.nmr.io.LSDWriter.java", "BodyUseAPI": ["data.getMolecule().getAtomNumber(org.openscience.cdk.interfaces.IAtom)", "org.openscience.cdk.interfaces.IAtom.getSymbol()", "org.openscience.cdk.interfaces.IAtom.getFormalCharge()", "de.unikoeln.chemie.nmr.io.LSDWriter.getHcount(data.getMolecule(),org.openscience.cdk.interfaces.IAtom)", "org.openscience.cdk.interfaces.IAtom.getImplicitHydrogenCount()", "org.openscience.cdk.interfaces.IAtom.getHybridization()", "java.io.BufferedWriter.write(((((((((((\"MULT \" + ((data.getMolecule().getAtomNumber(atom)) + 1)) + \" \") + (atom.getSymbol())) + \" \") + ((atom.getHybridization()) == (IAtomType.Hybridization.SP2) ? 2 : (atom.getHybridization()) == (IAtomType.Hybridization.SP3) ? 3 : 1)) + \" \") + ((de.unikoeln.chemie.nmr.io.LSDWriter.getHcount(data.getMolecule(), atom)) + (atom.getImplicitHydrogenCount()))) + \" \") + (atom.getFormalCharge())) + \"\\r\\n\"))", "org.openscience.cdk.interfaces.IAtom.getHybridization()"], "Fixed commit": "97ad0ae9e156abce97a465766b17ecdf6b298d5a", "Url": "https://api.github.com/repos/NMReDATAInitiative/javatools", "Date": "2018-09-03T22:18:24Z"},
{"Line": "=>533", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c.getDescription()) != null) descLength = c.getDescription().length();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4260/buggy-version/HashBot.src.main.java.me.afarrukh.hashbot.utils.EmbedUtils.java", "BodyUseAPI": ["me.afarrukh.hashbot.commands.Command.getDescription()", "c.getDescription().length()"], "Fixed commit": "756bcd939ac1be68c4943cf227156751f103ee7f", "Url": "https://api.github.com/repos/afarrukh125/HashBot", "Date": "2018-07-16T17:02:53Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (contextSequence == null) { if (contextItem == null) { throw new org.exist.xquery.functions.fn.XPathException(this, ErrorCodes.XPDY0002, \"Context item is absent\"); } contextSequence = contextItem.toSequence(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8324/buggy-version/src.org.exist.xquery.functions.fn.FnHasChildren.java", "BodyUseAPI": [], "Fixed commit": "3a25365b524af1689635bbd8b6ba87a89b712980", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2018-02-23T13:28:19Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.enoa.yosart.Oysart.assets()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (assets == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4438/buggy-version/enoa-yosart.src.main.java.io.enoa.yosart.repeater.OysartAccessor.java", "BodyUseAPI": [], "Fixed commit": "ede570d3e37253949c4b815684e28eb17a1b5b9c", "Url": "https://api.github.com/repos/fewensa/enoa", "Date": "2018-09-09T16:34:01Z"},
{"Line": "=>1014", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((holder.getCurrentTile()) == null) return false; else if ((!(this.locked)) || byPassLock) { return holder.getCurrentTile().canReachNeighborTile(com.esbjon.inventories.SquadInventory.shuttleInventory.holder.getCurrentTile()); }else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9463/buggy-version/core.src.com.esbjon.inventories.SquadInventory.java", "BodyUseAPI": ["com.esbjon.inventories.SquadInventory.getCurrentTile()", "holder.getCurrentTile().canReachNeighborTile(com.esbjon.inventories.SquadInventory.shuttleInventory.holder.getCurrentTile())"], "Fixed commit": "401fce3e9e5870f86d8e33c3794fc608b55150c7", "Url": "https://api.github.com/repos/k-o-r-t-o/gdxDune", "Date": "2018-02-07T17:46:09Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((info.getSdkVersion()) != null) { sb.append(\"/\"); sb.append(info.getSdkVersion()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3813/buggy-version/rest-client.src.main.java.org.sagebionetworks.bridge.rest.RestUtils.java", "BodyUseAPI": ["java.lang.StringBuilder.append(info.getSdkVersion())", "org.sagebionetworks.bridge.rest.model.ClientInfo.getSdkVersion()"], "Fixed commit": "c54bf95d9eeaca0d92743f191a4cc561214b5943", "Url": "https://api.github.com/repos/liujoshua/BridgeJavaSDK", "Date": "2018-03-12T22:26:53Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.sagebionetworks.bridge.rest.RestUtils.isNotBlank(info.getOsName())) { sb.append(info.getOsName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3813/buggy-version/rest-client.src.main.java.org.sagebionetworks.bridge.rest.RestUtils.java", "BodyUseAPI": ["java.lang.StringBuilder.append(info.getOsName())", "org.sagebionetworks.bridge.rest.model.ClientInfo.getOsName()"], "Fixed commit": "c54bf95d9eeaca0d92743f191a4cc561214b5943", "Url": "https://api.github.com/repos/liujoshua/BridgeJavaSDK", "Date": "2018-03-12T22:26:53Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.sagebionetworks.bridge.rest.RestUtils.isNotBlank(info.getDeviceName())) { sb.append(info.getDeviceName()); sb.append(\"; \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3813/buggy-version/rest-client.src.main.java.org.sagebionetworks.bridge.rest.RestUtils.java", "BodyUseAPI": ["org.sagebionetworks.bridge.rest.model.ClientInfo.getDeviceName()", "java.lang.StringBuilder.append(info.getDeviceName())"], "Fixed commit": "c54bf95d9eeaca0d92743f191a4cc561214b5943", "Url": "https://api.github.com/repos/liujoshua/BridgeJavaSDK", "Date": "2018-03-12T22:26:53Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (end != 0) { attrSelector += \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4654/buggy-version/src.main.java.com.hulu.ftl.formats.XMLFormat.java", "BodyUseAPI": [], "Fixed commit": "718fd208424f65dfae9903d84dfc0a734138ee4c", "Url": "https://api.github.com/repos/trevorgrayson/ftl", "Date": "2018-10-11T23:18:38Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dialog.isShowing()) { dialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/410/buggy-version/app.src.main.java.com.rodrigordgfs.buscatroco.Fragments.PostoTrocaFragment.java", "BodyUseAPI": ["android.app.ProgressDialog.dismiss()"], "Fixed commit": "49a54d32c6523abd5fc84871f1749792bf3a762e", "Url": "https://api.github.com/repos/rodrigordgfs/Busca-Troco", "Date": "2018-10-02T02:40:36Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nodeIndexes.getMiddleIndex().getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((middleNode.getRight()) != null) { middleNode.getRight().setLeft(node); }else { last = node; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2350/buggy-version/src.main.java.com.harystolho.pe.linkedList.IndexLinkedList.java", "BodyUseAPI": ["com.harystolho.pe.linkedList.IndexLinkedList<E>.Node.setLeft(com.harystolho.pe.linkedList.IndexLinkedList<E>.Node)", "com.harystolho.pe.linkedList.IndexLinkedList<E>.Node.getRight()"], "Fixed commit": "35b2b9cb893b7444923bfbc08890faddc03f6cd7", "Url": "https://api.github.com/repos/Harystolho/PferdEditor", "Date": "2018-08-03T18:52:40Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (x > 0) { createNewLineInTheMiddleOfTheWord(wordAtCursor, x); }else { createNewLineAtTheEndOfTheWord(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2350/buggy-version/src.main.java.com.harystolho.pe.File.java", "BodyUseAPI": ["com.harystolho.pe.File.createNewLineInTheMiddleOfTheWord(com.harystolho.pe.Word,int)"], "Fixed commit": "35b2b9cb893b7444923bfbc08890faddc03f6cd7", "Url": "https://api.github.com/repos/Harystolho/PferdEditor", "Date": "2018-08-03T18:52:40Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isAnimatonRunning)) { final int animationTime = 1000; isAnimatonRunning = true; if (isSearchLayoutFolded) { nameEditText.setText(\"\"); } foldingCell.toggle((!(isSearchLayoutFolded))); isSearchLayoutFolded = !(isSearchLayoutFolded); final android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper()); final java.lang.Runnable r = new java.lang.Runnable() { public void run() { isAnimatonRunning = false; } }; handler.postDelayed(r, animationTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9694/buggy-version/app.src.main.java.anaels.com.cocktailrecipe.SearchActivity.java", "BodyUseAPI": [], "Fixed commit": "18ec69c0b0fbdf8a3d45a23e55cdbf9698463cab", "Url": "https://api.github.com/repos/Anael-S/CocktailRecipe", "Date": "2018-01-07T10:26:03Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((operator.equals(\"\")) && ((rule.charAt(0)) == '-')) { setOperator(main.Rule.toOperator(\"-\")); setOperand(rule.substring(1)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3840/buggy-version/src.main.Rule.java", "BodyUseAPI": [], "Fixed commit": "0304359f99c9d47dbcdf81579723eb32949d778a", "Url": "https://api.github.com/repos/mark-wiemer/calculator-game", "Date": "2018-06-15T00:59:14Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((items.size()) != 0) { T item = items.get(0); items.set(0, items.get(((items.size()) - 1))); items.remove(((items.size()) - 1)); shiftDown(0); return item; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8092/buggy-version/src.main.java.src.PriorityQueue.java", "BodyUseAPI": ["java.util.List<T>.set(int,T)", "java.util.List<T>.get(int)", "java.util.List<T>.get(int)", "java.util.List<T>.size()", "java.util.List<T>.remove(int)", "java.util.List<T>.size()"], "Fixed commit": "3f09cf7fe77e5cbd8173101b0c631f738b51c886", "Url": "https://api.github.com/repos/claudiupop/PriorityQueue", "Date": "2018-09-04T12:29:07Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.royale.compiler.css.ICSSSelectorCondition.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (condString.contains(\"\\\"\")) condString = condString.replace(\"\\\"\", \"\\\\\\\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8105/buggy-version/compiler-jx.src.main.java.org.apache.royale.compiler.internal.driver.js.royale.JSCSSCompilationSession.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "f251ddd34f0225ae6b12582c6d554284513f63af", "Url": "https://api.github.com/repos/apache/royale-compiler", "Date": "2018-03-23T02:04:56Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (colon != (-1)) { condition = s.substring(colon); s = s.substring(0, colon); }else { int brace = s.indexOf(\"[\"); if (brace != (-1)) { condition = s.substring(brace); s = s.substring(0, brace); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8105/buggy-version/compiler-jx.src.main.java.org.apache.royale.compiler.internal.driver.js.royale.JSCSSCompilationSession.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.substring(int,int)"], "Fixed commit": "f251ddd34f0225ae6b12582c6d554284513f63af", "Url": "https://api.github.com/repos/apache/royale-compiler", "Date": "2018-03-23T02:04:56Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { android.net.Uri uri = android.net.Uri.parse((\"package:\" + (getActivity().getPackageName()))); intent.setData(uri); getActivity().startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1545/buggy-version/app.src.main.java.com.dentacoin.dentacare.fragments.DCSignupFragment.java", "BodyUseAPI": [], "Fixed commit": "c31f61dce23c5ed551cf79eb1376fc4743e84bb7", "Url": "https://api.github.com/repos/Dentacoin/aftercare-app-android", "Date": "2017-12-04T08:54:42Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.sdkHelper.fetchCodeForTest(file, project).orElseThrow(CodeFileDoesNotExistException::new)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (codeFile.getPath().equals(file.getPath())) { throw new io.ams340.ideaplugin.tddo.exception.CodeFileDoesNotExistException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2552/buggy-version/src.main.java.io.ams340.ideaplugin.tddo.service.FileService.java", "BodyUseAPI": [], "Fixed commit": "8ff5100c5c5b6fe439792c8f8b8716b7d412df91", "Url": "https://api.github.com/repos/ams340/intellij-plugin-TdDo", "Date": "2018-05-31T12:53:51Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cacheDirectoryFile.exists()) { if (!(cacheDirectoryFile.isDirectory())) { throw new java.lang.RuntimeException(\"Cache directory is a file.\"); } }else { if (!(cacheDirectoryFile.mkdirs())) { throw new java.lang.RuntimeException(\"Create cache directory failed.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8181/buggy-version/MyMusic-Android.app.src.main.java.site.iway.mymusic.net.RPCBaseReq.java", "BodyUseAPI": ["java.io.File.isDirectory()", "java.io.File.mkdirs()"], "Fixed commit": "6ccfac4e37f300dc6123c6c8c784a18093a1f094", "Url": "https://api.github.com/repos/iWay7/MyMusic", "Date": "2018-10-04T09:00:41Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (filePath == \"delete\") { filePath = \"images/default_person.png\"; }else { java.lang.String immm = (java.lang.System.getProperty(\"user.home\")) + \"/Documents/cs2103/debt-tracker/docs/images/weiqing-nic.png\"; filePath = \"/\" + filePath; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/261/buggy-version/src.main.java.seedu.address.model.person.Photo.java", "BodyUseAPI": [], "Fixed commit": "2284bf72160d907a5e73e5333716e0964881ded9", "Url": "https://api.github.com/repos/weiqing-nic/debt-tracker", "Date": "2018-10-28T17:57:53Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (filePath == \"delete\") { this.photoPath = \"images/default_person.png\"; }else { java.nio.file.Files.copy(getImage.toPath(), pictureFinal.toPath(), java.nio.file.StandardCopyOption.REPLACE_EXISTING); this.photoPath = pictureFinal.toPath().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/261/buggy-version/src.main.java.seedu.address.model.person.Photo.java", "BodyUseAPI": [], "Fixed commit": "2284bf72160d907a5e73e5333716e0964881ded9", "Url": "https://api.github.com/repos/weiqing-nic/debt-tracker", "Date": "2018-10-28T17:57:53Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.baomidou.kisso.SSOConfig.getCookieDomain()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (null != domain) { cookie.setDomain(domain); if ((\"\".equals(domain)) || (domain.contains(\"localhost\"))) { logger.warn((\"if you can't login, please enter normal domain. instead:\" + domain)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8733/buggy-version/src.main.java.com.baomidou.kisso.service.KissoServiceSupport.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "org.slf4j.Logger.warn(java.lang.String)", "javax.servlet.http.Cookie.setDomain(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "1575cba5e24f4e93ca7b38381e3ccf72e4441f12", "Url": "https://api.github.com/repos/baomidou/kisso", "Date": "2017-09-12T23:53:12Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(entity instanceof net.minecraft.entity.player.EntityPlayer)) { return (entity.getAlwaysRenderNameTagForRender()) && (entity.hasCustomName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/564/buggy-version/src.main.java.cf.wynntils.modules.utilities.managers.NametagManager.java", "BodyUseAPI": ["net.minecraft.entity.Entity.hasCustomName()", "net.minecraft.entity.Entity.getAlwaysRenderNameTagForRender()"], "Fixed commit": "c0800ff20578b266039fc21395f2eae54928298c", "Url": "https://api.github.com/repos/Wynntils/Wynntils", "Date": "2018-10-28T19:45:49Z"},
{"Line": "=>469", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xw.repo.BubbleSeekBar.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (((parent != null) && (parent instanceof android.view.View)) && ((((android.view.View) (parent)).getMeasuredWidth()) > 0)) { mPoint[0] %= ((android.view.View) (parent)).getMeasuredWidth(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4656/buggy-version/bubbleseekbar.src.main.java.com.xw.repo.BubbleSeekBar.java", "BodyUseAPI": ["android.view.ViewParent.getMeasuredWidth()"], "Fixed commit": "9219b6a17f7adde5b970313511b49c2675b609e6", "Url": "https://api.github.com/repos/woxingPATHo/BubbleSeekBar", "Date": "2018-03-06T02:28:10Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.json.JsonObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (typeFromMessage.contains(\"_\")) { typeFromMessage = typeFromMessage.substring(((typeFromMessage.indexOf('_')) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6617/buggy-version/feinstaubr-web.src.main.java.de.feinstaubr.server.boundary.SensorApi.java", "BodyUseAPI": ["java.lang.String.indexOf(char)", "java.lang.String.substring(int)"], "Fixed commit": "aecad660d4ec0c343480e462d2bcdda152f07675", "Url": "https://api.github.com/repos/albert0815/feinstaubr", "Date": "2018-03-14T20:52:52Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.getName().equals(\"sepdedupe.txt\"))) file.delete();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1568/buggy-version/Chunklevel.ListFile.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "249a1fdca8118e7ada37f04ed1b02d07e4d021be", "Url": "https://api.github.com/repos/sridharan99/Cloud-Deduplication", "Date": "2018-03-14T06:56:44Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.inspur.da.dsw.manage.service.IDataSetService.getDataSet(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == ds) { result.put(\"status\", \"error\"); result.put(\"output\", \"\u6570\u636e\u96c6\u4e0d\u5b58\u5728\"); return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3538/buggy-version/src.main.java.com.inspur.da.dsw.manage.controller.VizPipelineController.java", "BodyUseAPI": [], "Fixed commit": "601651ee297ba845e8364864a7d4b8afcdc03857", "Url": "https://api.github.com/repos/xuande/idsw", "Date": "2018-03-21T01:54:11Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lullabiesFragment.get().isVisible()) { getSupportFragmentManager().beginTransaction().setCustomAnimations(R.animator.flipin, R.animator.flipout).show(swirlsFragment.get()).hide(lullabiesFragment.get()).commit(); }else { getSupportFragmentManager().beginTransaction().setCustomAnimations(R.animator.flipin, R.animator.flipout).show(lullabiesFragment.get()).hide(swirlsFragment.get()).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5287/buggy-version/presentation.src.main.java.childly.lullabies.lulibalse20.view.activity.view.activity.presentation.activity.MainActivity.java", "BodyUseAPI": ["dagger.Lazy<childly.lullabies.lulibalse20.view.activity.view.activity.presentation.fragment.LullabiesFragment>.get()", "getSupportFragmentManager().beginTransaction().setCustomAnimations(R.animator.flipin, R.animator.flipout).show(lullabiesFragment.get()).hide(swirlsFragment.get())", "getSupportFragmentManager().beginTransaction().setCustomAnimations(R.animator.flipin, R.animator.flipout).show(swirlsFragment.get()).hide(lullabiesFragment.get()).commit()", "getSupportFragmentManager().beginTransaction().setCustomAnimations(R.animator.flipin, R.animator.flipout).show(lullabiesFragment.get()).hide(swirlsFragment.get()).commit()", "dagger.Lazy<childly.lullabies.lulibalse20.view.activity.view.activity.presentation.fragment.LullabiesFragment>.get()", "getSupportFragmentManager().beginTransaction().setCustomAnimations(R.animator.flipin, R.animator.flipout).show(lullabiesFragment.get())", "getSupportFragmentManager().beginTransaction().setCustomAnimations(R.animator.flipin, R.animator.flipout).show(swirlsFragment.get()).hide(lullabiesFragment.get())"], "Fixed commit": "b587150fbc0c776f7f959a476dda89a273e0fd30", "Url": "https://api.github.com/repos/pavelupward/Lullabies", "Date": "2018-01-22T19:49:54Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (url.endsWith(\"/\")) { url += key; }else { url += \"/\" + (key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5334/buggy-version/smartqq.src.main.java.com.scienjus.smartqq.QNUploader.java", "BodyUseAPI": [], "Fixed commit": "da51fdd556b5d711b3f8713430ef9762883fd729", "Url": "https://api.github.com/repos/Jamling/SmartIM", "Date": "2018-02-26T05:48:55Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((url.startsWith(\"http://\")) || (url.startsWith(\"https://\"))) { }else { url = \"http://\" + url; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5334/buggy-version/smartqq.src.main.java.com.scienjus.smartqq.QNUploader.java", "BodyUseAPI": [], "Fixed commit": "da51fdd556b5d711b3f8713430ef9762883fd729", "Url": "https://api.github.com/repos/Jamling/SmartIM", "Date": "2018-02-26T05:48:55Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPlayer) != null) { slider.setMax(currentPlayer.getLength()); slider.setValue(currentPlayer.playbackStatus()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3546/buggy-version/src.main.java.net.kyma.player.PlayerManager.java", "BodyUseAPI": [], "Fixed commit": "f297479150f13f1e4ef051004b9aea6f9ef923d2", "Url": "https://api.github.com/repos/khuzzuk/kyma", "Date": "2018-03-22T12:38:11Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (imageUri != null) com.bumptech.glide.Glide.with(itemView).load(android.net.Uri.parse(imageUri)).into(ivAttachment);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3305/buggy-version/kustomersdk.src.main.java.com.kustomer.kustomersdk.ViewHolders.ImageAttachmentViewHolder.java", "BodyUseAPI": ["com.bumptech.glide.Glide.with(itemView).load(android.net.Uri.parse(imageUri)).into(android.widget.ImageView)", "android.net.Uri.parse(java.lang.String)", "com.bumptech.glide.Glide.with(itemView).load(android.net.Uri.parse(imageUri))"], "Fixed commit": "1ff34f0fd16605fa4ee6ee921533cbabbc4baade", "Url": "https://api.github.com/repos/BrainXtech/customer-android", "Date": "2018-05-30T12:59:40Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.mifos.utils.Network.getConnectivityStatus(this)) != (com.mifos.utils.Network.TYPE_NOT_CONNECTED)) { startDashBoardActivity(); finish(); }else { com.mifos.mifosxdroid.core.util.Toaster.show(clRootview, R.string.error_network_not_available); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3872/buggy-version/mifosng-android.src.main.java.com.mifos.mifosxdroid.passcode.PassCodeActivity.java", "BodyUseAPI": [], "Fixed commit": "d5a8332b1d00e5f9f858542f2ac6c3b1156607cb", "Url": "https://api.github.com/repos/AkshGautam/android-client", "Date": "2018-02-08T15:10:10Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<dao.Element>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((element.getAttribute(\"comments\")) == null) { element.setAttribute(\"comments\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5223/buggy-version/src.dao.RecordWriter.java", "BodyUseAPI": ["dao.Element.setAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "420cf9c932ed333fc3b6f1d0e6d5f9c30037a017", "Url": "https://api.github.com/repos/ttrat/CategoryTool", "Date": "2018-10-27T22:17:28Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<dao.Element>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((element.getAttribute(\"biopsy\")) == null) { element.setAttribute(\"biopsy\", \"-1\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5223/buggy-version/src.dao.RecordWriter.java", "BodyUseAPI": ["dao.Element.setAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "420cf9c932ed333fc3b6f1d0e6d5f9c30037a017", "Url": "https://api.github.com/repos/ttrat/CategoryTool", "Date": "2018-10-27T22:17:28Z"},
{"Line": "=>2840", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.bignerdranch.android.mallofhorrorandroid.MainActivity.mUsedItem.get(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mSecondCount).getItemNum()) == 7) { mMessageView.setText(\"The affect of sprint has trigger, the left character has moved to the destination\"); if (com.bignerdranch.android.mallofhorrorandroid.MainActivity.gameBroad.matchRoom(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mUsedItem.get(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mSecondCount).getAfteraffectedRoomNumber()).isFull()) { com.bignerdranch.android.mallofhorrorandroid.MainActivity.gameBroad.matchRoom(4).enter(com.bignerdranch.android.mallofhorrorandroid.MainActivity.gameBroad.matchGameCharacter(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mPlayersUsedItem.get(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mSecondCount), com.bignerdranch.android.mallofhorrorandroid.MainActivity.mUsedItem.get(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mSecondCount).getAffectedGameCharacter().getName())); if ((mMyPlayerID) == (getControlId())) { do { writeRoomIntoFireBase(com.bignerdranch.android.mallofhorrorandroid.MainActivity.gameBroad.matchRoom(4)); } while (!(isNetworkAvailable()) ); } }else { com.bignerdranch.android.mallofhorrorandroid.MainActivity.gameBroad.matchRoom(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mUsedItem.get(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mSecondCount).getAfteraffectedRoomNumber()).enter(com.bignerdranch.android.mallofhorrorandroid.MainActivity.gameBroad.matchGameCharacter(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mPlayersUsedItem.get(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mSecondCount), com.bignerdranch.android.mallofhorrorandroid.MainActivity.mUsedItem.get(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mSecondCount).getAffectedGameCharacter().getName())); if ((mMyPlayerID) == (getControlId())) { do { writeRoomIntoFireBase(com.bignerdranch.android.mallofhorrorandroid.MainActivity.gameBroad.matchRoom(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mUsedItem.get(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mSecondCount).getAfteraffectedRoomNumber())); } while (!(isNetworkAvailable()) ); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2713/buggy-version/app.src.main.java.com.bignerdranch.android.mallofhorrorandroid.MainActivity.java", "BodyUseAPI": ["com.bignerdranch.android.mallofhorrorandroid.MainActivity.mUsedItem.get(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mSecondCount).getAfteraffectedRoomNumber()", "com.bignerdranch.android.mallofhorrorandroid.MainActivity.mUsedItem.get(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mSecondCount).getAffectedGameCharacter().getName()", "com.bignerdranch.android.mallofhorrorandroid.MainActivity.mUsedItem.get(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mSecondCount).getAffectedGameCharacter().getName()", "com.bignerdranch.android.mallofhorrorandroid.MainActivity.60.writeRoomIntoFireBase(com.bignerdranch.android.mallofhorrorandroid.MainActivity.gameBroad.matchRoom(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mUsedItem.get(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mSecondCount).getAfteraffectedRoomNumber()))", "java.util.List<com.bignerdranch.android.mallofhorrorandroid.MallofHorrorModel.Playable.Playable>.get(int)", "com.bignerdranch.android.mallofhorrorandroid.GameBroad.matchRoom(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mUsedItem.get(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mSecondCount).getAfteraffectedRoomNumber())", "java.util.List<com.bignerdranch.android.mallofhorrorandroid.MallofHorrorModel.Item.Item>.get(int)", "com.bignerdranch.android.mallofhorrorandroid.GameBroad.matchRoom(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mUsedItem.get(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mSecondCount).getAfteraffectedRoomNumber())", "com.bignerdranch.android.mallofhorrorandroid.MainActivity.gameBroad.matchRoom(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mUsedItem.get(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mSecondCount).getAfteraffectedRoomNumber()).enter(com.bignerdranch.android.mallofhorrorandroid.MainActivity.gameBroad.matchGameCharacter(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mPlayersUsedItem.get(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mSecondCount), com.bignerdranch.android.mallofhorrorandroid.MainActivity.mUsedItem.get(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mSecondCount).getAffectedGameCharacter().getName()))", "com.bignerdranch.android.mallofhorrorandroid.MainActivity.gameBroad.matchRoom(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mUsedItem.get(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mSecondCount).getAfteraffectedRoomNumber()).isFull()", "com.bignerdranch.android.mallofhorrorandroid.GameBroad.matchRoom(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mUsedItem.get(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mSecondCount).getAfteraffectedRoomNumber())", "java.util.List<com.bignerdranch.android.mallofhorrorandroid.MallofHorrorModel.Item.Item>.get(int)", "com.bignerdranch.android.mallofhorrorandroid.MainActivity.mUsedItem.get(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mSecondCount).getAffectedGameCharacter()", "com.bignerdranch.android.mallofhorrorandroid.MainActivity.mUsedItem.get(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mSecondCount).getAffectedGameCharacter()", "com.bignerdranch.android.mallofhorrorandroid.GameBroad.matchGameCharacter(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mPlayersUsedItem.get(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mSecondCount),com.bignerdranch.android.mallofhorrorandroid.MainActivity.mUsedItem.get(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mSecondCount).getAffectedGameCharacter().getName())", "java.util.List<com.bignerdranch.android.mallofhorrorandroid.MallofHorrorModel.Item.Item>.get(int)", "java.util.List<com.bignerdranch.android.mallofhorrorandroid.MallofHorrorModel.Item.Item>.get(int)", "java.util.List<com.bignerdranch.android.mallofhorrorandroid.MallofHorrorModel.Item.Item>.get(int)", "com.bignerdranch.android.mallofhorrorandroid.MainActivity.mUsedItem.get(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mSecondCount).getAfteraffectedRoomNumber()", "com.bignerdranch.android.mallofhorrorandroid.GameBroad.matchGameCharacter(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mPlayersUsedItem.get(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mSecondCount),com.bignerdranch.android.mallofhorrorandroid.MainActivity.mUsedItem.get(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mSecondCount).getAffectedGameCharacter().getName())", "java.util.List<com.bignerdranch.android.mallofhorrorandroid.MallofHorrorModel.Playable.Playable>.get(int)", "com.bignerdranch.android.mallofhorrorandroid.MainActivity.gameBroad.matchRoom(4).enter(com.bignerdranch.android.mallofhorrorandroid.MainActivity.gameBroad.matchGameCharacter(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mPlayersUsedItem.get(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mSecondCount), com.bignerdranch.android.mallofhorrorandroid.MainActivity.mUsedItem.get(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mSecondCount).getAffectedGameCharacter().getName()))", "com.bignerdranch.android.mallofhorrorandroid.MainActivity.mUsedItem.get(com.bignerdranch.android.mallofhorrorandroid.MainActivity.mSecondCount).getAfteraffectedRoomNumber()"], "Fixed commit": "cf79cb9458548ea7a81d5ce62770b6657304220a", "Url": "https://api.github.com/repos/dexzhu1987/MallofHorrorAndroid", "Date": "2018-03-26T05:14:18Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.GregorianCalendar.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((cal.get(java.util.Calendar.DAY_OF_WEEK)) == (java.util.Calendar.SUNDAY)) cal.add(java.util.Calendar.DATE, 1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8738/buggy-version/src.it.univaq.planner.presentation.AdminController.java", "BodyUseAPI": ["java.util.Calendar.add(int,int)"], "Fixed commit": "5b3911d6f2b0b63608d5d56d4b15429291f0d880", "Url": "https://api.github.com/repos/davideDI/UnivaqOptaPlanner", "Date": "2018-03-11T12:48:18Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((requestCode == (com.owncloud.android.ui.activity.UploadFilesActivity.REQUEST_SCANNED_DOCUMENT_CROP)) && (resultCode == (RESULT_OK))) { android.os.Bundle croppedDocumentData = capturedData.getExtras(); java.lang.String croppedDocumentImagePath = ((java.lang.String) (croppedDocumentData.get(com.owncloud.android.ui.activity.UploadFilesActivity.CROPPED_SCANNED_DOCUMENT_IMAGE_PATH))); new com.owncloud.android.ui.activity.UploadFilesActivity.CheckAvailableSpaceTask(croppedDocumentImagePath).execute(); }else if (((requestCode == (com.owncloud.android.ui.activity.UploadFilesActivity.REQUEST_IMAGE_CAPTURE)) || (requestCode == (com.owncloud.android.ui.activity.UploadFilesActivity.REQUEST_DOCUMENT_SCAN))) && (resultCode == (RESULT_CANCELED))) { if ((image) != null) { image.delete(); com.owncloud.android.lib.common.utils.Log_OC.d(com.owncloud.android.ui.activity.UploadFilesActivity.TAG, \"File deleted\"); } setResult(com.owncloud.android.ui.activity.RESULT_CANCELED); finish(); }else if (resultCode == (RESULT_CANCELED)) { setResult(com.owncloud.android.ui.activity.RESULT_CANCELED); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4330/buggy-version/src.com.owncloud.android.ui.activity.UploadFilesActivity.java", "BodyUseAPI": [], "Fixed commit": "29c883f3328d1cc28357fb8d713add566c047126", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-03-14T05:32:11Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((other.isVarArgs()) != varArgs) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6041/buggy-version/truffle.src.com.oracle.truffle.api.interop.java.src.com.oracle.truffle.api.interop.java.ExecuteMethodNode.java", "BodyUseAPI": [], "Fixed commit": "2aaad8ab2d83226a32f7e64549fa144205d61343", "Url": "https://api.github.com/repos/oracle/graal", "Date": "2018-02-22T15:10:37Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((readyQueue.size()) == 1) { currentProcess.setState(ProcessControlBlock.State.RUNNING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9410/buggy-version/Framework.src.simulator.RRKernel.java", "BodyUseAPI": [], "Fixed commit": "e883ed12a7bcb2fc9edf2923d6563b1284cec0bf", "Url": "https://api.github.com/repos/mmorris44/CSC3002F_Assignment_3", "Date": "2018-05-03T09:50:08Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mTaskItem.getDate()) != null) { mSelectedDate.setTime(mTaskItem.getDate()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1655/buggy-version/app.src.main.java.com.example.marik.maporganizer.fragments.FragmentTaskCreation.java", "BodyUseAPI": ["java.util.Calendar.setTime(mTaskItem.getDate())", "com.example.marik.maporganizer.db.TaskItem.getDate()"], "Fixed commit": "62f60f00daad4afc6826b8453419c1e9cce504ce", "Url": "https://api.github.com/repos/MarikPetros/MapOrganizer", "Date": "2018-08-29T16:53:09Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (date != null) { java.text.DateFormat format = java.text.SimpleDateFormat.getDateTimeInstance(java.text.DateFormat.LONG, java.text.DateFormat.SHORT); return format.format(date); }else { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1655/buggy-version/app.src.main.java.com.example.marik.maporganizer.utils.DateUtil.java", "BodyUseAPI": ["java.text.DateFormat.format(java.util.Date)"], "Fixed commit": "62f60f00daad4afc6826b8453419c1e9cce504ce", "Url": "https://api.github.com/repos/MarikPetros/MapOrganizer", "Date": "2018-08-29T16:53:09Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((operation instanceof com.owncloud.android.operations.CreateFolderOperation) && ((result.getHttpPhrase()) != null)) && ((result.getHttpPhrase().length()) > 0)) { if (((result.getHttpCode()) == 405) && (result.getHttpPhrase().equalsIgnoreCase(f.format(R.string.method_not_allowed)))) { return ((((com.owncloud.android.operations.CreateFolderOperation) (operation)).getNewFolderName()) + \" \") + (f.format(R.string.folder_already_exists)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8091/buggy-version/src.com.owncloud.android.ui.errorhandling.ErrorMessageAdapter.java", "BodyUseAPI": ["com.owncloud.android.lib.common.operations.RemoteOperationResult.getHttpPhrase()", "result.getHttpPhrase().equalsIgnoreCase(java.lang.String)", "com.owncloud.android.lib.common.operations.RemoteOperationResult.getHttpCode()"], "Fixed commit": "7a3f79cc5477ee8e384f4e1613902164f25e909a", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-10-02T05:24:30Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((doctor.getAuthorization().getSuperSet()) == null) || (((doctor.getAuthorization().getSuperSet()) != null) && ((doctor.getAuthorization().getSuperSet()) != 1))) { hql = ((((hql + \" and (r.aid=\") + (doctor.getAid())) + \" or r.addnDoctorId=\") + (doctor.getAid())) + \")\"; sql = ((((sql + \" and (r.aid=\") + (doctor.getAid())) + \" or r.addnDoctorId=\") + (doctor.getAid())) + \")\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/516/buggy-version/hospital-dao.src.main.java.com.hospital.dao.impl.DeliveryDaoImpl.java", "BodyUseAPI": ["com.hospital.dao.impl.Doctor.getAid()", "com.hospital.dao.impl.Doctor.getAid()", "com.hospital.dao.impl.Doctor.getAid()", "com.hospital.dao.impl.Doctor.getAid()"], "Fixed commit": "8b29cd940cbead00f3c3af71bb2555919aca65f3", "Url": "https://api.github.com/repos/lht142934/HospitalSystem", "Date": "2018-03-18T08:54:43Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.max(double,double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (b2 != 0) b = b1 / b2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4754/buggy-version/InformationLoss.java", "BodyUseAPI": [], "Fixed commit": "d0905dabcc9a5271543dc5567050dcc72ee7d45c", "Url": "https://api.github.com/repos/LordHelmchen324/Trajectory_Anonymisation", "Date": "2018-05-08T10:04:39Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.max(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (b1 == 0) sum += a2 / b2; else if (b2 == 0) sum += a1 / b1; else sum += (a1 / b1) + (a2 / b2);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4754/buggy-version/InformationLoss.java", "BodyUseAPI": [], "Fixed commit": "d0905dabcc9a5271543dc5567050dcc72ee7d45c", "Url": "https://api.github.com/repos/LordHelmchen324/Trajectory_Anonymisation", "Date": "2018-05-08T10:04:39Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.max(double,double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (a2 != 0) a = a1 / a2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4754/buggy-version/InformationLoss.java", "BodyUseAPI": [], "Fixed commit": "d0905dabcc9a5271543dc5567050dcc72ee7d45c", "Url": "https://api.github.com/repos/LordHelmchen324/Trajectory_Anonymisation", "Date": "2018-05-08T10:04:39Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.mifos.utils.Network.getConnectivityStatus(this)) != (com.mifos.utils.Network.TYPE_NOT_CONNECTED)) { startDashBoardActivity(); finish(); }else { com.mifos.mifosxdroid.core.util.Toaster.show(clRootview, R.string.error_network_not_available); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9109/buggy-version/mifosng-android.src.main.java.com.mifos.mifosxdroid.passcode.PassCodeActivity.java", "BodyUseAPI": [], "Fixed commit": "ce6b7b161624149b043d0e5de16a5d4cbead3b94", "Url": "https://api.github.com/repos/AkshGautam/android-client", "Date": "2018-02-08T14:16:55Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((cursor.getCount()) > 0) { cursor.moveToFirst(); do { (id)++; arrayList.add(((((((((\"ID: \" + (cursor.getString(0))) + \" \") + (cursor.getString(1))) + \" \") + (cursor.getString(2))) + \" \") + (cursor.getString(3))) + \"\\n\")); } while (cursor.moveToNext() ); cursor.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5846/buggy-version/app.src.main.java.yau.tommy.com.foodsuggestor.DataBaseHelper.java", "BodyUseAPI": [], "Fixed commit": "8de42ea90010a9086ac1de0d6907784e2689b6b3", "Url": "https://api.github.com/repos/wwkb123/FoodSuggestor", "Date": "2018-10-26T03:44:38Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (jsonObject != null) { try { bean = clazz.newInstance(); } catch (java.lang.InstantiationException | java.lang.IllegalAccessException e) { throw new com.sunnysuperman.commons.bean.BeanException((\"Failed to newInstance of \" + clazz), e); } bean = com.sunnysuperman.commons.bean.Bean.fromMap(jsonObject, bean, options, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6318/buggy-version/src.main.java.com.sunnysuperman.commons.bean.Bean.java", "BodyUseAPI": ["com.sunnysuperman.commons.bean.Bean.fromMap(java.util.Map<?, ?>,T,com.sunnysuperman.commons.bean.ParseBeanOptions,<nulltype>)"], "Fixed commit": "e043dda3f75efe05aa83db81cab88c1d54e1664a", "Url": "https://api.github.com/repos/sunnysuperman/ss-commons", "Date": "2018-05-07T04:07:45Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getTrackId()) == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1273/buggy-version/src.android.java.data.AudioTrack.java", "BodyUseAPI": [], "Fixed commit": "c20a853121f17b6e826fb20686141bcb213a2e6a", "Url": "https://api.github.com/repos/Rolamix/cordova-plugin-playlist", "Date": "2018-04-15T07:28:40Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.exists())) { new java.io.FileOutputStream(file).close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8844/buggy-version/openzaly-storage.src.main.java.com.akaxin.site.storage.DataSourceManager.java", "BodyUseAPI": ["java.io.FileOutputStream.close()"], "Fixed commit": "dd267a11f06cae08e2934cd252acac0f38f2eee4", "Url": "https://api.github.com/repos/akaxincom/openzaly", "Date": "2018-06-09T08:31:29Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (BusStationList.get(position).stationNumber.trim().equals(\"\")) { holder.station_layout.setBackgroundColor(android.graphics.Color.parseColor(\"#FFFFFF\")); }else if (BusStationList.get(position).stationNumber.trim().equals(Shared_Pref.beacon_stationNumber)) { holder.station_layout.setBackgroundColor(android.graphics.Color.parseColor(\"#BDBDBD\")); }else { holder.station_layout.setBackgroundColor(android.graphics.Color.parseColor(\"#FFFFFF\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4695/buggy-version/app.src.main.java.com.connection.stopbus.stopbus_user.ActivityBus.java", "BodyUseAPI": ["BusStationList.get(position).stationNumber.trim().equals(Shared_Pref.beacon_stationNumber)", "BusStationList.get(position).stationNumber.trim()", "java.util.List<ApiData.BusStation>.get(int)"], "Fixed commit": "01e37ec511dee9a91c6eca8621c8f34604976a7e", "Url": "https://api.github.com/repos/AJOU-Connection/StopBus_User", "Date": "2018-06-13T03:28:08Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstUpperBound) { b.append(\" extends \"); firstUpperBound = false; }else { b.append(\" & \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3301/buggy-version/org.eclipse.xtext.xbase.src.org.eclipse.xtext.xbase.typesystem.internal.AbstractPendingLinkingCandidate.java", "BodyUseAPI": [], "Fixed commit": "df2236e475529fda12e03c7aef322828f8996c41", "Url": "https://api.github.com/repos/eclipse/xtext-extras", "Date": "2018-06-03T17:33:15Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<ml.qingsu.fuckview.models.BlockModel>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (blockModel == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2483/buggy-version/app.src.main.java.ml.qingsu.fuckview.ui.fragments.OnlineRulesFragment.java", "BodyUseAPI": [], "Fixed commit": "466c0c4602ea6c364bc2fc8bfdac367bfa2744d7", "Url": "https://api.github.com/repos/w568w/fuckView", "Date": "2018-04-21T15:52:03Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (addwippedcream && addchocolate) { price = ((numberOfCoffees) * pricePerCup) + (3 * (numberOfCoffees)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6114/buggy-version/app.src.main.java.com.example.madhavbangaru.justjava.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "33ea7003906d68b24556c050093571917b02a59d", "Url": "https://api.github.com/repos/MadhavBangaru/JustJava", "Date": "2018-03-04T14:13:09Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.profilePicture) == null) { throw new seedu.address.commons.exceptions.IllegalValueException(java.lang.String.format(seedu.address.storage.XmlAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT, seedu.address.model.person.ProfilePicture.class.getSimpleName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8732/buggy-version/src.main.java.seedu.address.storage.XmlAdaptedPerson.java", "BodyUseAPI": [], "Fixed commit": "35151a39a8608309cdd5bccea29315e272570291", "Url": "https://api.github.com/repos/trafalgarandre/main", "Date": "2018-03-13T17:41:16Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (success) { org.owasp.dependencycheck.xml.pom.PomUtils.analyzePOM(dependency, pomFile); }else { org.owasp.dependencycheck.analyzer.CentralAnalyzer.LOGGER.warn((\"Unable to download pom.xml for {} from Central; \" + \"this could result in undetected CPE/CVEs.\"), dependency.getFileName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1115/buggy-version/core.src.main.java.org.owasp.dependencycheck.analyzer.CentralAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "a67f59b0c2f9dea93e7d79a95a1116ec8fb0f425", "Url": "https://api.github.com/repos/DmitriyStoyanov/DependencyCheck", "Date": "2018-08-14T14:38:30Z"},
{"Line": "=>2006", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getClass1mele()) == 0) { SnakeRPG.screenMenu.menuPositionEditionPanelBronze.hide(); SnakeRPG.screenMenu.menuPositionEditionPanelSilver.hide(); SnakeRPG.screenMenu.menuPositionEditionPanelGold.hide(); SnakeRPG.screenMenu.buyingObjectsClassSelect.show(this); }else if ((MenuPositionEditionPanel.focusedObject) != (this)) { Gdx.input.vibrate(50); if ((this.getTier()) != (MenuPositionEditionPanel.focusedObject.getTier())) { SnakeRPG.screenMenu.menuPositionEditionPanelBronze.hideQuick(); SnakeRPG.screenMenu.menuPositionEditionPanelSilver.hideQuick(); SnakeRPG.screenMenu.menuPositionEditionPanelGold.hideQuick(); switch (this.getTier()) { case 1 : SnakeRPG.screenMenu.menuPositionEditionPanelBronze.showQuick(); break; case 2 : SnakeRPG.screenMenu.menuPositionEditionPanelSilver.showQuick(); break; case 3 : SnakeRPG.screenMenu.menuPositionEditionPanelGold.showQuick(); break; } } com.appatstudio.snakerpg.MenuPositionEditionPanel.changeFocusedObject(this); }else { this.editionUnfocued(); SnakeRPG.screenMenu.menuPositionEditionPanelBronze.hide(); SnakeRPG.screenMenu.menuPositionEditionPanelSilver.hide(); SnakeRPG.screenMenu.menuPositionEditionPanelGold.hide(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3000/buggy-version/core.src.com.appatstudio.snakerpg.MenuPosition.java", "BodyUseAPI": [], "Fixed commit": "946a8e72371cbe5ee9e9edec54df7672bc43216c", "Url": "https://api.github.com/repos/PatrykSukiennik/SnakeRPG", "Date": "2018-04-24T14:20:42Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.support.v4.app.ActivityCompat.shouldShowRequestPermissionRationale(this, Manifest.permission.CAMERA)) { }else { android.support.v4.app.ActivityCompat.requestPermissions(this, new java.lang.String[]{ Manifest.permission.CAMERA }, 500); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1799/buggy-version/app.src.main.java.frozenyogurtbuilder.app.OrderShare.java", "BodyUseAPI": [], "Fixed commit": "d528f9612103b6dce0e9c359f0ec94c7aada0b56", "Url": "https://api.github.com/repos/Fasust/FrozenJoghurtBuilder", "Date": "2018-08-14T20:10:14Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (psiJavaFile == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4449/buggy-version/src.main.java.org.nalby.yobatis.idea.navigation.YobatisPsiUtil.java", "BodyUseAPI": [], "Fixed commit": "cbf6201cd7511b5d3c7e8ba3871cc6b29ec9038f", "Url": "https://api.github.com/repos/linbaiye/yobatis-idea", "Date": "2018-10-22T15:21:42Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.getId().startsWith(org.shaolin.uimaster.page.AjaxContextHelper.getAjaxContext().getEntityPrefix())) { uiid = this.getId(); }else { uiid = (org.shaolin.uimaster.page.AjaxContextHelper.getAjaxContext().getEntityPrefix()) + (this.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5127/buggy-version/modules.uipage.src.main.java.org.shaolin.uimaster.page.ajax.Button.java", "BodyUseAPI": [], "Fixed commit": "da72340e99f7a05ef7cdc11ab3fcbd1b3449a4e9", "Url": "https://api.github.com/repos/shaolinwu/uimaster", "Date": "2018-03-01T15:59:38Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((addOrderVO.getCouponPrice()) != 0) { throw new com.ticket.common.exception.OrderException(OEDER_COUPON_ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9095/buggy-version/service.src.main.java.com.ticket.service.impl.OrderServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "612999df752246732d6060513957f450c57403e7", "Url": "https://api.github.com/repos/CLianSampson/ticket_java", "Date": "2018-08-29T04:16:13Z"},
{"Line": "=>561", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (id.startsWith(\"BE.NMBS.\")) { id = id.substring(8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6722/buggy-version/Hyperrail.src.main.java.be.hyperrail.android.irail.db.StationsDb.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "2d35ebc22b6892d5d0fe28b40e788898f538ed1b", "Url": "https://api.github.com/repos/Whaxion/hyperrail-for-android", "Date": "2018-06-05T11:03:26Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (target.getClass().getSimpleName().contains(\"$NullGameObject\")) throw new org.apache.commons.lang3.NotImplementedException(\"Not implemented\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9386/buggy-version/Server.core.src.pl.mmorpg.prototype.server.packetshandling.characteractions.CharacterBoardClickPacketHandler.java", "BodyUseAPI": [], "Fixed commit": "f628751d4995e0113d02489b9e915117a11bb37d", "Url": "https://api.github.com/repos/MMORPG-Prototype/MMORPG_Prototype", "Date": "2018-01-14T13:56:47Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size()) == 0) { lastUse.set(java.lang.System.currentTimeMillis()); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3526/buggy-version/src.KPack.Tree.Bucket.java", "BodyUseAPI": [], "Fixed commit": "08f75e645b7f29765d35030a1884e3a8c16a14d0", "Url": "https://api.github.com/repos/apontini/KademliaFileStorage", "Date": "2018-04-13T13:39:08Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getResponseCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (responseCode == 401) { throw new org.wso2.apimgt.gateway.cli.exception.CLIRuntimeException(\"Invalid user credentials or the user does not have required permissions\"); }else { throw new org.wso2.apimgt.gateway.cli.exception.CLIInternalException((\"Error occurred while creating oAuth application Status code: \" + responseCode)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3735/buggy-version/components.micro-gateway-cli.src.main.java.org.wso2.apimgt.gateway.cli.oauth.OAuthServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "d5854bc179d3697e02e53e368ad9496ccaa085e6", "Url": "https://api.github.com/repos/ruks/product-microgateway", "Date": "2018-07-04T10:14:50Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getResponseCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (responseCode == 401) { throw new org.wso2.apimgt.gateway.cli.exception.CLIRuntimeException(\"Invalid user credentials or the user does not have required permissions\"); }else { throw new java.lang.RuntimeException((\"Error occurred while getting token. Status code: \" + responseCode)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3735/buggy-version/components.micro-gateway-cli.src.main.java.org.wso2.apimgt.gateway.cli.rest.RESTAPIServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "d5854bc179d3697e02e53e368ad9496ccaa085e6", "Url": "https://api.github.com/repos/ruks/product-microgateway", "Date": "2018-07-04T10:14:50Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getResponseCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (responseCode == 401) { throw new org.wso2.apimgt.gateway.cli.exception.CLIRuntimeException(\"Invalid user credentials or the user does not have required permissions\"); }else { throw new java.lang.RuntimeException((\"Error occurred while getting token. Status code: \" + responseCode)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3735/buggy-version/components.micro-gateway-cli.src.main.java.org.wso2.apimgt.gateway.cli.rest.RESTAPIServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "d5854bc179d3697e02e53e368ad9496ccaa085e6", "Url": "https://api.github.com/repos/ruks/product-microgateway", "Date": "2018-07-04T10:14:50Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getResponseCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (responseCode == 401) { throw new org.wso2.apimgt.gateway.cli.exception.CLIRuntimeException(\"Invalid user credentials or the user does not have required permissions\"); }else { throw new org.wso2.apimgt.gateway.cli.exception.CLIInternalException(\"No proper response received for get API request.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3735/buggy-version/components.micro-gateway-cli.src.main.java.org.wso2.apimgt.gateway.cli.rest.RESTAPIServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "d5854bc179d3697e02e53e368ad9496ccaa085e6", "Url": "https://api.github.com/repos/ruks/product-microgateway", "Date": "2018-07-04T10:14:50Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getResponseCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (responseCode == 401) { throw new org.wso2.apimgt.gateway.cli.exception.CLIRuntimeException(\"Invalid user credentials or the user does not have required permissions\"); }else { throw new java.lang.RuntimeException((\"Error occurred while getting token. Status code: \" + responseCode)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3735/buggy-version/components.micro-gateway-cli.src.main.java.org.wso2.apimgt.gateway.cli.rest.RESTAPIServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "d5854bc179d3697e02e53e368ad9496ccaa085e6", "Url": "https://api.github.com/repos/ruks/product-microgateway", "Date": "2018-07-04T10:14:50Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.codecool.krk.singlylinkedlist.SinglyLinkedList<T>.search(T)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(toRemove.equals(this.head))) { while (!(beforeToRemove.getNextNode().equals(toRemove))) { beforeToRemove = beforeToRemove.getNextNode(); } beforeToRemove.setNextNode(toRemove.getNextNode()); }else { this.head = toRemove.getNextNode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8554/buggy-version/src.main.java.com.codecool.krk.singlylinkedlist.SinglyLinkedList.java", "BodyUseAPI": ["beforeToRemove.getNextNode().equals(com.codecool.krk.singlylinkedlist.SinglyNode<T>)", "com.codecool.krk.singlylinkedlist.SinglyNode<T>.setNextNode(toRemove.getNextNode())", "com.codecool.krk.singlylinkedlist.SinglyNode<T>.getNextNode()", "com.codecool.krk.singlylinkedlist.SinglyNode<T>.getNextNode()"], "Fixed commit": "37c097da7297a7911982c811e06f838506e1be82", "Url": "https://api.github.com/repos/LordMara/data-structures", "Date": "2018-02-07T21:06:46Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((name.length()) > 0) && ((name.indexOf(\".\")) != (-1))) { this.extension = name.substring(name.lastIndexOf(\".\"), name.length()); }else { this.extension = \"null\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5012/buggy-version/mediapicker.src.main.java.com.dmcbig.mediapicker.entity.Media.java", "BodyUseAPI": [], "Fixed commit": "154c86f06a479e176729ba68a0972fd7301dc210", "Url": "https://api.github.com/repos/DmcSDK/MediaPickerPoject", "Date": "2018-05-17T09:53:09Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (json == null) { getResponse().setStatus(Status.CLIENT_ERROR_BAD_REQUEST, \"Must provide an internal-ip and external-prefix for a prefix mapping to be added.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9555/buggy-version/floodlight.src.main.java.net.floodlightcontroller.tarn.web.PrefixMappingResource.java", "BodyUseAPI": [], "Fixed commit": "7433ef7bc4d1438f3b2de1ccdc249b6e3d0abc9d", "Url": "https://api.github.com/repos/geddings/TARN", "Date": "2018-02-15T23:07:08Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.kymjs.common.StringUtils.isEmpty(id_number)) { mView.errorMsg(com.common.cklibrary.common.KJActivityStack.create().topActivity().getString(R.string.pleaseidNumber1), 0); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7541/buggy-version/SillyChildClient.app.src.main.java.com.sillykid.app.mine.mywallet.mybankcard.AddBankCardPresenter.java", "BodyUseAPI": [], "Fixed commit": "4db7d42745e1d8a21a1122bfe7b3446cd766ce36", "Url": "https://api.github.com/repos/921668753/SillyChildClient2-Android", "Date": "2018-09-27T01:39:18Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (VersionComparator.NUMERIC_PATTERN.matcher(versionToken).matches()) { subversionNumbers.add(com.g00fy2.versioncompare.VersionComparator.safeParseInt(versionToken)); }else { for (int i = 0; i < (versionToken.length()); i++) { if (!(VersionComparator.NUMERIC_PATTERN.matcher(java.lang.String.valueOf(versionToken.charAt(i))).matches())) { suffixSb = new java.lang.StringBuilder(); if (i > 0) { subversionNumbers.add(com.g00fy2.versioncompare.VersionComparator.safeParseInt(versionToken.substring(0, i))); suffixSb.append(versionToken.substring(i)); }else { suffixSb.append(versionToken); } suffixFound = true; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7471/buggy-version/versioncompare.src.main.java.com.g00fy2.versioncompare.Version.java", "BodyUseAPI": ["java.lang.String.length()", "java.util.List<java.lang.Integer>.add(com.g00fy2.versioncompare.VersionComparator.safeParseInt(versionToken.substring(0, i)))", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.charAt(int)", "com.g00fy2.versioncompare.VersionComparator.safeParseInt(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int)", "java.util.List<java.lang.Integer>.add(com.g00fy2.versioncompare.VersionComparator.safeParseInt(versionToken))", "VersionComparator.NUMERIC_PATTERN.matcher(java.lang.String.valueOf(versionToken.charAt(i))).matches()", "java.lang.StringBuilder.append(java.lang.String)", "com.g00fy2.versioncompare.VersionComparator.safeParseInt(java.lang.String)", "java.lang.String.valueOf(char)", "VersionComparator.NUMERIC_PATTERN.matcher(java.lang.String)"], "Fixed commit": "62675cbea3c0174ed51d85103ab31c02fd96afa6", "Url": "https://api.github.com/repos/G00fY2/version-compare", "Date": "2018-02-13T23:25:53Z"},
{"Line": "=>472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bbox) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9670/buggy-version/blade-engine-spine-plugin.src.main.java.com.bladecoder.engine.spine.SpineRenderer.java", "BodyUseAPI": [], "Fixed commit": "126d2bab7ed61bcfbb4b1619e1100110f7551abb", "Url": "https://api.github.com/repos/bladecoder/bladecoder-adventure-engine", "Date": "2018-09-21T21:50:38Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["treeView.getSelectionModel().getSelectedItem().getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(oldCampaignFile.isSaved())) { io.github.drw.desktop.eventbus.Eventbus.fire(new io.github.drw.desktop.eventbus.events.StatusEvent(StatusEvent.Type.Update, this, ((\"Campaign \" + (oldCampaignFile.getNameTitle())) + \" must be saved before being renamed.\"))); displaySaveFileDialog(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7052/buggy-version/src.io.github.drw.desktop.campaigns.TreeController.java", "BodyUseAPI": ["io.github.drw.desktop.campaigns.CampaignFile.getNameTitle()", "io.github.drw.desktop.eventbus.Eventbus.fire(io.github.drw.desktop.eventbus.events.StatusEvent)"], "Fixed commit": "fe005873f09aeaca0543c5a25081c0a5711d03e1", "Url": "https://api.github.com/repos/dr-wilkinson/desktop", "Date": "2018-09-23T13:06:44Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (yalter.mousetweaks.Main.config.wheelTweak) org.lwjgl.input.Mouse.getDWheel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5257/buggy-version/src.main.java.yalter.mousetweaks.Main.java", "BodyUseAPI": [], "Fixed commit": "14fea1a1cf55bd1e0d8b14a4b85a2f567599d692", "Url": "https://api.github.com/repos/panoskj/MouseTweaks", "Date": "2018-03-25T12:33:24Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!errored) { cu.setImports(imports); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8934/buggy-version/src.main.java.org.walkmod.checkstyle.treewalkers.AvoidStarImport.java", "BodyUseAPI": [], "Fixed commit": "8eb93b0a84f00f1012ab2e55cba2146d9b7dab2e", "Url": "https://api.github.com/repos/walkmod/walkmod-checkstyle-plugin", "Date": "2018-04-01T20:11:20Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((erro.getMessage()) == null) errorm = \"Faldom Network Error ! Please Check Your Connection\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1172/buggy-version/faldom.src.main.java.com.wisdomrider.faldom.Faldom.java", "BodyUseAPI": [], "Fixed commit": "424209bbacf4f24d59bbb4fa84164920bb43546c", "Url": "https://api.github.com/repos/wisdomrider/Faldom", "Date": "2018-03-24T03:55:32Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currencyCode.equals(com.zuchol.converter.service.impl.CurrencyServiceImpl.PLN_CODE)) { return new java.math.BigDecimal(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/15/buggy-version/src.main.java.com.zuchol.converter.service.impl.CurrencyServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "1256eda5243075ac1d7ddd3d3c7c04ad05c65ac8", "Url": "https://api.github.com/repos/zuchol/zadanie_kalkulator_s", "Date": "2018-03-24T14:16:41Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.text.TextUtils.isEmpty(message)) && ((message.trim().length()) > 0)) message = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5067/buggy-version/app.src.main.java.com.udacity.exploreindia.helper.CustomDialog.java", "BodyUseAPI": [], "Fixed commit": "ca8d52edd296dd9636f0a21662a427d713b6582d", "Url": "https://api.github.com/repos/UdacityAndroidDevScholarship/explore-india", "Date": "2018-05-04T14:42:41Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getActivity().getIntent().getIntExtra(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (VEGETAL == 0) webViewHtml += \" iconic-field\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7659/buggy-version/app.src.main.java.ir.rahbod.sinadrug.fragment.FragmentViewDrug.java", "BodyUseAPI": [], "Fixed commit": "017f0121d6fc2cfd31518921ac268984917fd6db", "Url": "https://api.github.com/repos/Rahbod/DrugApp", "Date": "2018-10-18T18:03:19Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.badlogic.gdx.utils.BufferUtils.isUnsafeByteBuffer(buffer)) com.badlogic.gdx.utils.BufferUtils.disposeUnsafeByteBuffer(buffer);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1758/buggy-version/extensions.gdx-freetype.src.com.badlogic.gdx.graphics.g2d.freetype.FreeType.java", "BodyUseAPI": ["com.badlogic.gdx.utils.BufferUtils.disposeUnsafeByteBuffer(java.nio.ByteBuffer)"], "Fixed commit": "162084b6667cfc7986bfdfb80809e8050425ca9d", "Url": "https://api.github.com/repos/PokeMMO/libgdx", "Date": "2018-06-18T05:49:54Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((page != null) && (page > 0)) { builder.appendQueryParameter(com.example.android.popularmovies.utilities.TMDbUtils.PAGE_PARAM, page.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5417/buggy-version/app.src.main.java.com.example.android.popularmovies.utilities.TMDbUtils.java", "BodyUseAPI": ["java.lang.Integer.toString()", "Uri.Builder.appendQueryParameter(java.lang.String,java.lang.String)"], "Fixed commit": "4d85abae6ed0e22a687ad574739cf44fe2d7ad7e", "Url": "https://api.github.com/repos/johngboutros/popular-movies-project", "Date": "2018-03-17T22:40:53Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((page != null) && (page > 0)) { builder.appendQueryParameter(com.example.android.popularmovies.utilities.TMDbUtils.PAGE_PARAM, page.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5417/buggy-version/app.src.main.java.com.example.android.popularmovies.utilities.TMDbUtils.java", "BodyUseAPI": ["java.lang.Integer.toString()", "Uri.Builder.appendQueryParameter(java.lang.String,java.lang.String)"], "Fixed commit": "4d85abae6ed0e22a687ad574739cf44fe2d7ad7e", "Url": "https://api.github.com/repos/johngboutros/popular-movies-project", "Date": "2018-03-17T22:40:53Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (k < (list.size())) java.lang.System.out.println(list.get(k));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5104/buggy-version/src.main.java.com.query.MainClass.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "e96ad18e903fc3ab9644bfe249d33699ed0bfd4a", "Url": "https://api.github.com/repos/nishantgoyal880/databaseEngine", "Date": "2018-02-19T15:10:22Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(micdoodle8.mods.galacticraft.core.util.ConfigManagerCore.disableBiomeTypeRegistrations)) { net.minecraftforge.common.BiomeDictionary.registerBiomeType(this, BiomeDictionary.Type.DRY, BiomeDictionary.Type.DEAD); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7614/buggy-version/src.main.java.micdoodle8.mods.galacticraft.core.world.gen.BiomeGenBaseOrbit.java", "BodyUseAPI": [], "Fixed commit": "7f0090a36298d970d78ac50f4d4b45d90723188e", "Url": "https://api.github.com/repos/CDAGaming/Galacticraft", "Date": "2018-01-08T23:05:18Z"},
{"Line": "=>769", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (add) { uuids.put(name, uuid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6643/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.AdvancedCoreHook.java", "BodyUseAPI": [], "Fixed commit": "fb6253726d2fb2ea392e81dc8bd1cac47bad95b9", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2018-01-07T22:38:56Z"},
{"Line": "=>466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((workStarted) == false) { a[0] = ((int) (x - 1)); }else a[0] = ((int) (x - 2));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1416/buggy-version/app.src.main.java.com.example.sestas_aukstas.ework.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b0f905d94e64c38d38bccafc42ed26570fd806a0", "Url": "https://api.github.com/repos/marvei/Sestas_Aukstas", "Date": "2018-05-22T20:36:20Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPreviousHolder) != null) mPreviousHolder.mExpandable.collapse();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6056/buggy-version/app.src.main.java.com.eineao.instablock.adapters.FiltersAdapter.java", "BodyUseAPI": [], "Fixed commit": "1519bc6fde1e2d051b510949782628804cee8ca2", "Url": "https://api.github.com/repos/OmarEinea/InstaBlock", "Date": "2018-04-22T01:47:18Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tech.mangosoft.autolinkedin.LinkedInContactRepositoryCustomImpl.getAllContactsForAssignment(tech.mangosoft.autolinkedin.Assignment)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (linkedInContact != null) { setAssignmentToContacts(assignmentDB, linkedInContact); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2429/buggy-version/src.main.java.tech.mangosoft.autolinkedin.LinkedInService.java", "BodyUseAPI": ["tech.mangosoft.autolinkedin.LinkedInService.setAssignmentToContacts(tech.mangosoft.autolinkedin.Assignment,java.util.List<tech.mangosoft.autolinkedin.LinkedInContact>)"], "Fixed commit": "b00fa676f0c96c0115722a3002e84990464f5dad", "Url": "https://api.github.com/repos/Ichanskiy/AutolinkedinController", "Date": "2018-09-12T07:26:52Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fields.isEmpty()) { fields = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3678/buggy-version/src.main.java.cn.wws.springjunior.ioc.EnhanceField.java", "BodyUseAPI": [], "Fixed commit": "8ad123f081479d509cb5a810618cae18e1ca1dbf", "Url": "https://api.github.com/repos/MasterSJ/SpringJunior", "Date": "2018-05-16T09:33:16Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((word.length()) != 0) { tokens.add(word.toString()); word.setLength(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/691/buggy-version/standalone_interpreter.src.main.java.com.cs263.app.Tokenizer.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()", "java.util.List<java.lang.String>.add(java.lang.String)", "java.lang.StringBuilder.setLength(int)"], "Fixed commit": "e7b2fc2e813ef942b681ccc87497c2f1153ce300", "Url": "https://api.github.com/repos/zedtang/online-interactive-shell-for-scheme", "Date": "2018-06-03T07:41:59Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value) == null) { buffer.append(\"null\"); }else { buffer.append(value.getClass().getSimpleName()); buffer.append(\" \"); buffer.append(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1968/buggy-version/lisp.src.lisp.cc4.ImplicitCompileResult.java", "BodyUseAPI": [], "Fixed commit": "92c2b4cf3eb6d58f26205a2bc658cee1f62b3d7a", "Url": "https://api.github.com/repos/ChrisE2018/lisp", "Date": "2018-06-08T01:56:08Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diff_k_j < (items[0])) { usableSpace -= diff_k_j; if (usableSpace < neededSpace) { usableSpace += diff_k_j; continue; } swapping = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2402/buggy-version/questions.BinPack.java", "BodyUseAPI": [], "Fixed commit": "f8eedcff083571d0e7bd6443a9a2a353eedb87e7", "Url": "https://api.github.com/repos/sprax/java", "Date": "2018-02-10T03:56:13Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (false) { bins[ins_k] += items[j]; java.util.Arrays.sort(bins); }else { int restore = (bins[ins_k]) + (items[j]); int q = ins_k; for (; q < k; q++) { bins[q] = bins[(q + 1)]; } if (restore != (diff_k_j + (items[j]))) { int temp = diff_k_j + (items[j]); restore += temp - (1 * temp); } bins[q] = diff_k_j + (items[j]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2402/buggy-version/questions.BinPack.java", "BodyUseAPI": [], "Fixed commit": "f8eedcff083571d0e7bd6443a9a2a353eedb87e7", "Url": "https://api.github.com/repos/sprax/java", "Date": "2018-02-10T03:56:13Z"},
{"Line": "=>847", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input.equals(seedu.address.model.IntuitivePromptManager.EDIT_CLEAR_TAGS_COMMAND)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/707/buggy-version/src.main.java.seedu.address.model.IntuitivePromptManager.java", "BodyUseAPI": [], "Fixed commit": "124e43e098effde6895095da4ada4559bd61427a", "Url": "https://api.github.com/repos/nelvintan/main", "Date": "2018-10-22T05:32:34Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((graph[fromIndex]) != null) && ((graph[fromIndex].size()) > 0)) { for (int i = 0; i < ((graph[fromIndex].size()) - 1); i++) { java.lang.System.out.print((((graph[fromIndex].get(i)) + 1) + \", \")); } java.lang.System.out.print(((graph[fromIndex].get(((graph[fromIndex].size()) - 1))) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/993/buggy-version/Project5.DiGraph.java", "BodyUseAPI": ["java.io.PrintStream.print(java.lang.String)", "java.util.LinkedList<java.lang.Integer>.get(int)", "java.io.PrintStream.print(int)", "java.util.LinkedList<java.lang.Integer>.size()", "java.util.LinkedList<java.lang.Integer>.get(int)", "java.util.LinkedList<java.lang.Integer>.size()"], "Fixed commit": "9d20939844a57572e27680bd5f97630ce55b8c2f", "Url": "https://api.github.com/repos/tfahrn/349Projects", "Date": "2018-03-09T16:22:53Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(lob_dir.exists())) || (!(lob_dir.isDirectory()))) { if (lob_dir.delete()) { throw new models.exceptions.UserDirectoryNotCreated(GC_USER_DIRECTORY_NOT_CREATED); } if (!(lob_dir.mkdir())) { throw new models.exceptions.UserDirectoryNotCreated(GC_USER_DIRECTORY_NOT_CREATED); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4666/buggy-version/src.main.java.services.classes.UserServiceImpl.java", "BodyUseAPI": ["java.io.File.delete()", "java.io.File.mkdir()"], "Fixed commit": "1e8e8a9587337a6ba0dc6b1355a87fa950568338", "Url": "https://api.github.com/repos/weedric/VirtualFileServer", "Date": "2018-03-07T23:52:42Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) > 0) { if (args[0].equals(\"dev\")) { game.player.godPower(java.lang.Integer.parseInt(args[1])); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7415/buggy-version/FinalProject.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "Player.godPower(int)"], "Fixed commit": "97c8a1f25fba7b999d371ebd54039b1213eaf78c", "Url": "https://api.github.com/repos/VinnyLin72/FinalProject", "Date": "2018-01-20T20:30:42Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (exBeanDeser != null) { for (java.util.Map.Entry<java.lang.String, java.lang.Object> entry : otherValues.entrySet()) { java.lang.String key = entry.getKey(); java.lang.Object value = entry.getValue(); com.alibaba.fastjson.parser.deserializer.FieldDeserializer fieldDeserializer = exBeanDeser.getFieldDeserializer(key); if (fieldDeserializer != null) { fieldDeserializer.setValue(ex, value); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/69/buggy-version/src.main.java.com.alibaba.fastjson.parser.ThrowableDeserializer.java", "BodyUseAPI": ["com.alibaba.fastjson.parser.JavaBeanDeserializer.getFieldDeserializer(java.lang.String)"], "Fixed commit": "9c48254f4ce376cb8509be8ad77b4bb5c04d0c1b", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2018-01-01T15:12:20Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.dubbo.common.utils.StringUtils.camelToSplitName(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"onthrow\".equals(property)) { int index = value.lastIndexOf(\".\"); java.lang.String throwRef = value.substring(0, index); java.lang.String throwMethod = value.substring((index + 1)); reference = new org.springframework.beans.factory.config.RuntimeBeanReference(throwRef); beanDefinition.getPropertyValues().addPropertyValue(\"onthrowMethod\", throwMethod); }else if (\"oninvoke\".equals(property)) { int index = value.lastIndexOf(\".\"); java.lang.String throwRef = value.substring(0, index); java.lang.String throwMethod = value.substring((index + 1)); reference = new org.springframework.beans.factory.config.RuntimeBeanReference(throwRef); beanDefinition.getPropertyValues().addPropertyValue(\"oninvokeMethod\", throwMethod); }else { if ((\"ref\".equals(property)) && (parserContext.getRegistry().containsBeanDefinition(value))) { org.springframework.beans.factory.config.BeanDefinition refBean = parserContext.getRegistry().getBeanDefinition(value); if (!(refBean.isSingleton())) { throw new java.lang.IllegalStateException(((((((\"The exported service ref \" + value) + \" must be singleton! Please set the \") + value) + \" bean scope to singleton, eg: <bean id=\\\"\") + value) + \"\\\" scope=\\\"singleton\\\" ...>\")); } } reference = new org.springframework.beans.factory.config.RuntimeBeanReference(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2152/buggy-version/dubbo-config.dubbo-config-spring.src.main.java.com.alibaba.dubbo.config.spring.schema.DubboBeanDefinitionParser.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "7af2ad9b76d1a10042768b233a67baaf098b9a2b", "Url": "https://api.github.com/repos/z529192557/dubbo", "Date": "2018-02-05T05:44:15Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (l >= (outputArray.length)) { return outputSet; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8515/buggy-version/src.main.java.edu.kit.ipd.dbis.correlation.Correlation.java", "BodyUseAPI": [], "Fixed commit": "0a1e6ef5b0236b1bba861cd461245f25b21f11de", "Url": "https://api.github.com/repos/DifferentLink/Grape", "Date": "2018-03-06T10:50:39Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((outputArray.length) - l) - 1) < 0) { return outputSet; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8515/buggy-version/src.main.java.edu.kit.ipd.dbis.correlation.Correlation.java", "BodyUseAPI": [], "Fixed commit": "0a1e6ef5b0236b1bba861cd461245f25b21f11de", "Url": "https://api.github.com/repos/DifferentLink/Grape", "Date": "2018-03-06T10:50:39Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(view.getContext()).getString(view.getContext().getString(R.string.prefs_camera_topic_edittext_key),view.getContext().getString(R.string.camera_topic))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (imageTopic.isEmpty()) cameraView.setTopicName(android.preference.PreferenceManager.getDefaultSharedPreferences(getActivity()).getString(\"edittext_camera_topic\", getString(R.string.camera_topic))); else cameraView.setTopicName(imageTopic);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/111/buggy-version/src.android_foo.control_app.src.main.java.com.robotca.ControlApp.Fragments.CameraViewFragment.java", "BodyUseAPI": ["org.ros.android.view.RosImageView<sensor_msgs.CompressedImage>.setTopicName(java.lang.String)"], "Fixed commit": "369a3d04f0553616af4d00abe6412a21a93c3a2e", "Url": "https://api.github.com/repos/iamzhuang/RobotCA", "Date": "2018-08-26T11:37:24Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(view.getContext()).getString(view.getContext().getString(R.string.prefs_camera_topic_edittext_key),view.getContext().getString(R.string.camera_topic))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (imageTopic.isEmpty()) cameraView.setTopicName(android.preference.PreferenceManager.getDefaultSharedPreferences(getActivity()).getString(\"edittext_camera_topic\", getString(R.string.camera_topic))); else cameraView.setTopicName(imageTopic);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/111/buggy-version/src.android_foo.control_app.src.main.java.com.robotca.ControlApp.Fragments.OverviewFragment.java", "BodyUseAPI": ["org.ros.android.view.RosImageView<sensor_msgs.CompressedImage>.setTopicName(java.lang.String)"], "Fixed commit": "369a3d04f0553616af4d00abe6412a21a93c3a2e", "Url": "https://api.github.com/repos/iamzhuang/RobotCA", "Date": "2018-08-26T11:37:24Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parent) instanceof edu.rit.tinyturtle.offlinehomeworkplanner.CourseView) parent.getFragmentParent().openFragment(edu.rit.tinyturtle.offlinehomeworkplanner.CourseView.newInstance(viewHolder.mItem.getCourse())); else parent.openFragment(new edu.rit.tinyturtle.offlinehomeworkplanner.NotesList());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4837/buggy-version/app.src.main.java.edu.rit.tinyturtle.offlinehomeworkplanner.NotesItemRecyclerViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "403eb34481b266667f303760fc7c4fc2bb419edf", "Url": "https://api.github.com/repos/TheGuywithTheHat/offline-homework-planner", "Date": "2018-03-29T16:21:08Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parent) instanceof edu.rit.tinyturtle.offlinehomeworkplanner.CourseView) parent.getFragmentParent().openFragment(edu.rit.tinyturtle.offlinehomeworkplanner.CourseView.newInstance(viewHolder.mItem.getCourse())); else parent.openFragment(edu.rit.tinyturtle.offlinehomeworkplanner.HomeworkList.newInstance(completed));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4837/buggy-version/app.src.main.java.edu.rit.tinyturtle.offlinehomeworkplanner.HomeworkItemRecyclerViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "403eb34481b266667f303760fc7c4fc2bb419edf", "Url": "https://api.github.com/repos/TheGuywithTheHat/offline-homework-planner", "Date": "2018-03-29T16:21:08Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parent) instanceof edu.rit.tinyturtle.offlinehomeworkplanner.CourseView) parent.getFragmentParent().openFragment(edu.rit.tinyturtle.offlinehomeworkplanner.CourseView.newInstance(viewHolder.mItem.getCourse())); else parent.openFragment(edu.rit.tinyturtle.offlinehomeworkplanner.HomeworkList.newInstance(completed));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4837/buggy-version/app.src.main.java.edu.rit.tinyturtle.offlinehomeworkplanner.HomeworkItemRecyclerViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "403eb34481b266667f303760fc7c4fc2bb419edf", "Url": "https://api.github.com/repos/TheGuywithTheHat/offline-homework-planner", "Date": "2018-03-29T16:21:08Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (noeud.getValeur()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1533/buggy-version/src.gaufreempoisonnee.model.Plateau.java", "BodyUseAPI": [], "Fixed commit": "551f1259d3bb8b0464b036b3893cb834f3344749", "Url": "https://api.github.com/repos/GuillaumeCailhe/GaufreEmpoisonnee", "Date": "2018-05-01T12:59:07Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.jroy.happybot.levels.Leveling.toLevel(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (level == 0) { totalExpP = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9874/buggy-version/src.main.java.io.github.jroy.happybot.commands.levels.LevelCommand.java", "BodyUseAPI": [], "Fixed commit": "edfaddaa1af3df683d2a05dbd5989ef2facfc436", "Url": "https://api.github.com/repos/JRoy/happybot", "Date": "2018-07-28T21:15:54Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.sysml.runtime.matrix.data.LibMatrixCuDNN.getSparsePointer(org.apache.sysml.runtime.instructions.gpu.context.GPUContext,org.apache.sysml.runtime.controlprogram.caching.MatrixObject,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((inPointer.nnz) < 0) { throw new org.apache.sysml.runtime.DMLRuntimeException(\"Unknown number of nonzeroes in denseIm2col\"); }else if ((inPointer.nnz) > 0) { getCudaKernels(gCtx).launchKernel(\"sparse_dense_im2col\", org.apache.sysml.runtime.instructions.gpu.context.ExecutionConfig.getConfigForSimpleVectorOperations(toInt(inPointer.nnz)), inPointer.val, inPointer.rowPtr, inPointer.colInd, im2colPointer, inPointer.nnz, N, ((C * H) * W), (H * W), W, R, S, P, Q, (P * Q), (R * S), ((N * P) * Q), stride_h, stride_w, pad_h, pad_w); if (org.apache.sysml.api.DMLScript.FINEGRAINED_STATISTICS) org.apache.sysml.utils.GPUStatistics.maintainCPMiscTimes(instName, GPUInstruction.MISC_TIMER_SPARSE_IM2COL_KERNEL, ((java.lang.System.nanoTime()) - t1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5109/buggy-version/src.main.java.org.apache.sysml.runtime.matrix.data.LibMatrixCuDNN.java", "BodyUseAPI": ["getCudaKernels(gCtx).launchKernel(java.lang.String,org.apache.sysml.runtime.instructions.gpu.context.ExecutionConfig.getConfigForSimpleVectorOperations(toInt(inPointer.nnz)),inPointer.val,inPointer.rowPtr,inPointer.colInd,jcuda.Pointer,inPointer.nnz,long,long,long,long,int,int,int,int,int,int,long,int,int,int,int)", "org.apache.sysml.runtime.matrix.data.LibMatrixCuDNN.toInt(inPointer.nnz)", "org.apache.sysml.runtime.instructions.gpu.context.ExecutionConfig.getConfigForSimpleVectorOperations(toInt(inPointer.nnz))"], "Fixed commit": "c28df12534bc0491231702711a423a46f4cb012a", "Url": "https://api.github.com/repos/niketanpansare/systemml", "Date": "2018-01-18T21:33:06Z"},
{"Line": "=>606", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mMyLocationManager.isLocationAcceptable(location)) { fetchTransitRoute(mJourneyQuery); fetchRouteAlternatives(mJourneyQuery); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2048/buggy-version/sthlmtraveling.src.main.java.com.markupartist.sthlmtraveling.RoutesActivity.java", "BodyUseAPI": [], "Fixed commit": "9a4f98e4c29ca4cdceee41ed0e571623b1146aea", "Url": "https://api.github.com/repos/johannilsson/sthlmtraveling", "Date": "2018-01-08T14:43:55Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["server.receive_packet(java.net.DatagramSocket,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((my_packet.getData()) != null) { outputfile.write(my_packet.getData()); arrival.write(((my_packet.getSeqNum()) + \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4589/buggy-version/server.java", "BodyUseAPI": ["java.io.PrintWriter.write(my_packet.getData())", "packet.getData()", "packet.getSeqNum()", "java.io.PrintWriter.write(((my_packet.getSeqNum()) + \"\\n\"))"], "Fixed commit": "1f78792c9a8c37a4ba5986c6efca694610b861c1", "Url": "https://api.github.com/repos/NguyenJim/programming_assignment_2", "Date": "2018-10-24T23:03:43Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name.equals(\"X\")) return new net.anei.cadpage.parsers.FL.FLLeonCountyParser.MyCrossField();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4976/buggy-version/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.FL.FLLeonCountyParser.java", "BodyUseAPI": [], "Fixed commit": "ee3cacd51336d747cb1ce2acd0ea7c4278b59ef5", "Url": "https://api.github.com/repos/cadpage/cadpage-parsers", "Date": "2018-10-15T01:38:28Z"},
{"Line": "=>1861", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((army1.getState()) == (com.luis.strategy.map.Army.STATE_ON)) || ((army2.getState()) == (com.luis.strategy.map.Army.STATE_ON))) { army1.changeState(Army.STATE_ON); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1803/buggy-version/src.com.luis.strategy.game.GameManager.java", "BodyUseAPI": ["com.luis.strategy.map.Army.changeState(Army.STATE_ON)"], "Fixed commit": "56a78d0e422a70094b81eef87df1a683e87cc0c5", "Url": "https://api.github.com/repos/LuisValdesFrances/Strategy", "Date": "2018-08-15T16:16:33Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((high.getParameterValue((i % (high.getDimension())))) == (low.getParameterValue((i % (low.getDimension()))))) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9324/buggy-version/src.dr.inference.model.TruncatedDistributionLikelihood.java", "BodyUseAPI": [], "Fixed commit": "af706532335e658c6137b960355fae6cfbb66148", "Url": "https://api.github.com/repos/beast-dev/beast-mcmc", "Date": "2017-08-02T00:19:10Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mifos.mifosxdroid.adapters.ClientNameListAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((client.getFullname()) == null) { clientName = ((client.getFirstname()) + \" \") + (client.getLastname()); }else { clientName = client.getFullname(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4196/buggy-version/mifosng-android.src.main.java.com.mifos.mifosxdroid.adapters.ClientNameListAdapter.java", "BodyUseAPI": ["com.mifos.objects.client.Client.getFirstname()", "com.mifos.objects.client.Client.getLastname()", "com.mifos.objects.client.Client.getFullname()"], "Fixed commit": "05f5e650539e8c165fdd3b22739227d9e3241746", "Url": "https://api.github.com/repos/AkshGautam/android-client", "Date": "2018-02-14T19:49:53Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFirst) { gamePanel.appendQuestionTextArea(\"Capital is Incorrect! \"); isFirst = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3736/buggy-version/src.edu.ucsb.cs56.projects.games.states_quiz.QuestionManager.java", "BodyUseAPI": [], "Fixed commit": "c3587c02854826dc2743fe36d7171f07f3aca55f", "Url": "https://api.github.com/repos/jaysonmercurio/cs56-games-states-quiz", "Date": "2018-03-14T07:26:42Z"},
{"Line": "=>1050", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.wso2.ballerinalang.compiler.util.CompilerUtils.isDistributedTransactionsEnabled())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9464/buggy-version/stdlib.ballerina-builtin.src.main.java.org.ballerinalang.nativeimpl.actions.data.sql.actions.SQLDatasourceUtils.java", "BodyUseAPI": [], "Fixed commit": "9a9154b659d63ee079aa9fae473cb3dd1a2eb139", "Url": "https://api.github.com/repos/arukshani/ballerina", "Date": "2018-03-22T06:14:36Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFinished) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7899/buggy-version/src.main.java.google.com.fgeneration.hashcode_2018.logic.AssignDriverLogic.java", "BodyUseAPI": [], "Fixed commit": "62e62aa6b0db5c070b6bc02cbfd11b931bfcdd82", "Url": "https://api.github.com/repos/stefano-ortona/google-hash-code-2018", "Date": "2018-03-01T20:06:02Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (status.getRides().isEmpty()) { google.com.fgeneration.hashcode_2018.logic.AssignDriverLogic.LOGGER.info(\"All rides have been satisfied motherfucker!\"); isFinished = true; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7899/buggy-version/src.main.java.google.com.fgeneration.hashcode_2018.logic.AssignDriverLogic.java", "BodyUseAPI": [], "Fixed commit": "62e62aa6b0db5c070b6bc02cbfd11b931bfcdd82", "Url": "https://api.github.com/repos/stefano-ortona/google-hash-code-2018", "Date": "2018-03-01T20:06:02Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sales.getDiscount()) == null) { insertStatement.setDouble(11, 0); }else { insertStatement.setDouble(11, sales.getDiscount()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7538/buggy-version/han.src.module.sales.dao.SalesDAO.java", "BodyUseAPI": ["module.sales.model.Sales.getDiscount()", "java.sql.PreparedStatement.setDouble(int,sales.getDiscount())"], "Fixed commit": "359514b9a6df833d38e82829acc5672bf2ccc4f1", "Url": "https://api.github.com/repos/tsuwandi/han", "Date": "2018-02-04T16:18:57Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sales.getSurcharge()) == null) { insertStatement.setDouble(10, 0); }else { insertStatement.setDouble(10, sales.getSurcharge()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7538/buggy-version/han.src.module.sales.dao.SalesDAO.java", "BodyUseAPI": ["java.sql.PreparedStatement.setDouble(int,sales.getSurcharge())", "module.sales.model.Sales.getSurcharge()"], "Fixed commit": "359514b9a6df833d38e82829acc5672bf2ccc4f1", "Url": "https://api.github.com/repos/tsuwandi/han", "Date": "2018-02-04T16:18:57Z"},
{"Line": "=>935", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((txtDiscount.getText().isEmpty()) == false) { sales.setDiscount(java.lang.Double.valueOf(txtDiscount.getText())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7538/buggy-version/han.src.module.sales.ui.SalesCreatePanel.java", "BodyUseAPI": ["java.lang.Double.valueOf(txtDiscount.getText())", "module.sales.model.Sales.setDiscount(java.lang.Double)", "main.component.NumberField.getText()"], "Fixed commit": "359514b9a6df833d38e82829acc5672bf2ccc4f1", "Url": "https://api.github.com/repos/tsuwandi/han", "Date": "2018-02-04T16:18:57Z"},
{"Line": "=>931", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((txtSurcharge.getText().isEmpty()) == false) { java.lang.System.out.println((\"aaa = \" + (txtSurcharge.getText()))); sales.setSurcharge(java.lang.Double.valueOf(txtSurcharge.getText())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7538/buggy-version/han.src.module.sales.ui.SalesCreatePanel.java", "BodyUseAPI": ["java.io.PrintStream.println((\"aaa = \" + (txtSurcharge.getText())))", "java.lang.Double.valueOf(txtSurcharge.getText())", "main.component.NumberField.getText()", "module.sales.model.Sales.setSurcharge(java.lang.Double)", "main.component.NumberField.getText()"], "Fixed commit": "359514b9a6df833d38e82829acc5672bf2ccc4f1", "Url": "https://api.github.com/repos/tsuwandi/han", "Date": "2018-02-04T16:18:57Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (org != null) { if ((org.getName()) != null) { sb.append(org.getName()).append(\", \"); } if ((org.getMail()) != null) { sb.append(org.getMail()).append(\", \"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3453/buggy-version/src.main.java.uk.ac.ebi.pride.utilities.data.controller.tools.utils.DataConversionUtil.java", "BodyUseAPI": ["uk.ac.ebi.pride.utilities.data.controller.tools.utils.Organization.getName()", "uk.ac.ebi.pride.utilities.data.controller.tools.utils.Organization.getMail()", "java.lang.StringBuilder.append(org.getName())", "uk.ac.ebi.pride.utilities.data.controller.tools.utils.Organization.getMail()", "java.lang.StringBuilder.append(java.lang.String)", "uk.ac.ebi.pride.utilities.data.controller.tools.utils.Organization.getName()", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(org.getMail())"], "Fixed commit": "ab6ae7e400060748929f5a6ccf6975dedf5c399d", "Url": "https://api.github.com/repos/PRIDE-Utilities/ms-data-core-api", "Date": "2018-05-16T10:11:40Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles(java.io.FilenameFilter)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (files == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7816/buggy-version/src.main.java.ru.endlesscode.badger.utils.FileUtils.java", "BodyUseAPI": [], "Fixed commit": "5479df9d623a75b3ccc79aa86c43d815b315672a", "Url": "https://api.github.com/repos/osipxd/Badger", "Date": "2018-03-25T00:49:07Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.matt.flashcards.FlashcardActivity.currentDeck.getCurrentCard().isFavorite()) { favoriteItem.setIcon(R.drawable.ic_star_white_48dp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4368/buggy-version/mobile.src.main.java.com.matt.flashcards.FlashcardActivity.java", "BodyUseAPI": [], "Fixed commit": "74b4d54b1a4f832d6846023bb4c58688943cd353", "Url": "https://api.github.com/repos/mattrusso9037/Flashcards", "Date": "2018-04-01T19:07:26Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["steps.get(stepNum).getValue().getKey()", "steps.get(stepNum).getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((f.getEdgeBetween(s)) != null) f.getEdgeBetween(s).addAttribute(\"ui.class\", \"edgemark\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9779/buggy-version/graph.src.Algorithm.java", "BodyUseAPI": ["org.graphstream.graph.Node.getEdgeBetween(org.graphstream.graph.Node)", "f.getEdgeBetween(s).addAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "0687c9b57f2417ac1b8a46c5af2b838ad4083665", "Url": "https://api.github.com/repos/Inoretsu/java-practice", "Date": "2018-07-09T05:00:17Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["steps.get(stepNum).getValue().getKey()", "steps.get(stepNum).getValue().getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((s.getEdgeBetween(th)) != null) s.getEdgeBetween(th).removeAttribute(\"ui.class\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9779/buggy-version/graph.src.Algorithm.java", "BodyUseAPI": ["org.graphstream.graph.Node.getEdgeBetween(org.graphstream.graph.Node)", "s.getEdgeBetween(th).removeAttribute(java.lang.String)"], "Fixed commit": "0687c9b57f2417ac1b8a46c5af2b838ad4083665", "Url": "https://api.github.com/repos/Inoretsu/java-practice", "Date": "2018-07-09T05:00:17Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["steps.get(stepNum).getValue().getKey()", "steps.get(stepNum).getValue().getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((s.getEdgeBetween(th)) != null) s.getEdgeBetween(th).addAttribute(\"ui.class\", \"edgemark\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9779/buggy-version/graph.src.Algorithm.java", "BodyUseAPI": ["org.graphstream.graph.Node.getEdgeBetween(org.graphstream.graph.Node)", "s.getEdgeBetween(th).addAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "0687c9b57f2417ac1b8a46c5af2b838ad4083665", "Url": "https://api.github.com/repos/Inoretsu/java-practice", "Date": "2018-07-09T05:00:17Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["steps.get(stepNum).getKey()", "steps.get(stepNum).getValue().getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((f.getEdgeBetween(s)) != null) f.getEdgeBetween(s).removeAttribute(\"ui.class\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9779/buggy-version/graph.src.Algorithm.java", "BodyUseAPI": ["f.getEdgeBetween(s).removeAttribute(java.lang.String)", "org.graphstream.graph.Node.getEdgeBetween(org.graphstream.graph.Node)"], "Fixed commit": "0687c9b57f2417ac1b8a46c5af2b838ad4083665", "Url": "https://api.github.com/repos/Inoretsu/java-practice", "Date": "2018-07-09T05:00:17Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (readers == null) { throw new org.zalando.nakadi.exceptions.runtime.SubscriptionValidationException(\"Reader cannot be null!!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1233/buggy-version/src.main.java.org.zalando.nakadi.domain.SubscriptionAuthorization.java", "BodyUseAPI": [], "Fixed commit": "a06a092ee1cf7857e3b06efcf090a5f8d8f0983c", "Url": "https://api.github.com/repos/zalando/nakadi", "Date": "2018-09-20T12:15:46Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (admins == null) { throw new org.zalando.nakadi.exceptions.runtime.SubscriptionValidationException(\"Admin cannot be null!!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1233/buggy-version/src.main.java.org.zalando.nakadi.domain.SubscriptionAuthorization.java", "BodyUseAPI": [], "Fixed commit": "a06a092ee1cf7857e3b06efcf090a5f8d8f0983c", "Url": "https://api.github.com/repos/zalando/nakadi", "Date": "2018-09-20T12:15:46Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (score.getParts().get(i).getMeasures().get(j).getNotes().get(k).isChord()) { voiceObject = nodeURI.replace(\"OBJECT\", (((((\"MOV\" + movementCounter) + \"_\") + partID) + \"_VOICE_\") + tmpVoice)); voice.setId(tmpVoice); }else { voiceObject = nodeURI.replace(\"OBJECT\", ((((\"MOV\" + movementCounter) + \"_\") + partID) + \"_VOICE_1\")); voice.setId(\"1\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8918/buggy-version/musicowl.src.main.java.de.wwu.music2rdf.converter.MusicXML2RDF.java", "BodyUseAPI": [], "Fixed commit": "bcd4bc86a77ba68fd07cf77e107339ca0dec5cb7", "Url": "https://api.github.com/repos/jimjonesbr/musicowl", "Date": "2018-08-13T17:11:06Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Math.abs(((java.lang.Math.round(degrees)) - degrees))) <= 1.0E-12) degrees = java.lang.Math.round(degrees);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2873/buggy-version/trunk.src.main.java.org.osgeo.proj4j.units.AngleFormat.java", "BodyUseAPI": ["java.lang.Math.round(double)"], "Fixed commit": "d770d36d1962771250f1916343e99ffb324cffd8", "Url": "https://api.github.com/repos/jgyorfi/proj4j", "Date": "2018-09-14T03:25:36Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Environment.getExternalStoragePublicDirectory(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(dir.isDirectory())) { dir.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9491/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.vuforia.ImageFTC.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "f16b77ff341125f6b1391dc4c49538460e05e565", "Url": "https://api.github.com/repos/FIRST-4030/FTC-2018", "Date": "2018-10-23T00:46:56Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(nl.inl.blacklab.index.PluginManager.isInitialized)) throw new java.lang.UnsupportedOperationException(\"Plugin system is not initialized, place a top-level key \\\"plugins\\\" with per-plugin configuration in your blacklab config to use plugins.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7549/buggy-version/core.src.main.java.nl.inl.blacklab.index.PluginManager.java", "BodyUseAPI": [], "Fixed commit": "2f5e5a66ac027e8a78508267583a22577113eb3c", "Url": "https://api.github.com/repos/INL/BlackLab", "Date": "2018-05-08T09:59:43Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(nl.inl.blacklab.index.PluginManager.isInitialized)) throw new java.lang.UnsupportedOperationException(\"Plugin system is not initialized, place a top-level key \\\"plugins\\\" with per-plugin configuration in your blacklab config to use plugins.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7549/buggy-version/core.src.main.java.nl.inl.blacklab.index.PluginManager.java", "BodyUseAPI": [], "Fixed commit": "2f5e5a66ac027e8a78508267583a22577113eb3c", "Url": "https://api.github.com/repos/INL/BlackLab", "Date": "2018-05-08T09:59:43Z"},
{"Line": "=>2399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((inAppNotification.getCustomExtras()) != null) { kvs = com.clevertap.android.sdk.Utils.convertJSONObjectToHashMap(inAppNotification.getCustomExtras()); }else { kvs = new java.util.HashMap<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5101/buggy-version/clevertap-android-sdk.src.main.java.com.clevertap.android.sdk.CleverTapAPI.java", "BodyUseAPI": ["com.clevertap.android.sdk.CTInAppNotification.getCustomExtras()", "com.clevertap.android.sdk.Utils.convertJSONObjectToHashMap(inAppNotification.getCustomExtras())"], "Fixed commit": "7e2e1acd9dfe665404c38ed05eb078950a38c8b7", "Url": "https://api.github.com/repos/CleverTap/clevertap-android-sdk", "Date": "2018-10-31T10:30:33Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["snowblossom.miner.SnowMerkleProof.readWord(long,java.nio.ByteBuffer,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!gotData) { snowblossom.miner.PoolMiner.logger.log(java.util.logging.Level.SEVERE, (\"readWord returned false on pass \" + pass)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5738/buggy-version/miner.src.PoolMiner.java", "BodyUseAPI": [], "Fixed commit": "32f57dc3a957ae0d8ea60c1deb84e523eeba93c6", "Url": "https://api.github.com/repos/snowblossomcoin/snowblossom", "Date": "2018-06-17T17:07:26Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((w.run) == true) { w.launchBomb(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1629/buggy-version/src.worldwark.KeyboardControls.java", "BodyUseAPI": ["worldwark.WorldWarK.launchBomb()"], "Fixed commit": "01af947ed3cf71082e6664abf409949fcac8398c", "Url": "https://api.github.com/repos/jackisrong/WorldWarK", "Date": "2018-05-28T15:34:50Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getButton()) == (java.awt.event.MouseEvent.BUTTON3)) { if ((w.run) == true) { w.launchBomb(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1629/buggy-version/src.worldwark.MouseControls.java", "BodyUseAPI": [], "Fixed commit": "01af947ed3cf71082e6664abf409949fcac8398c", "Url": "https://api.github.com/repos/jackisrong/WorldWarK", "Date": "2018-05-28T15:34:50Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRangeSeekBarView) != null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5914/buggy-version/app.src.main.java.com.iknow.android.widget.VideoTrimmerView.java", "BodyUseAPI": [], "Fixed commit": "1f237881bc32f03f6c71207c52684a73f2acc2ec", "Url": "https://api.github.com/repos/iknow4/Android-Video-Trimmer", "Date": "2018-08-05T03:13:59Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (dalTaskContext != null) { keys = dalTaskContext.getIdentityFields(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5773/buggy-version/dal-client.src.main.java.com.ctrip.platform.dal.dao.client.DalDirectClient.java", "BodyUseAPI": ["com.ctrip.platform.dal.dao.task.DalTaskContext.getIdentityFields()"], "Fixed commit": "6e8788316a293ef3ef9159c0a137c7178aa848c8", "Url": "https://api.github.com/repos/ctripcorp/dal", "Date": "2018-10-12T12:56:50Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["co.cask.cdap.proto.provisioner.ProvisionerInfo.getProperties()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (provisionerProperties != null) { for (co.cask.cdap.proto.provisioner.ProvisionerPropertyValue value : provisionerProperties) { properties.put(value.getName(), value.getValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/457/buggy-version/cdap-app-fabric.src.main.java.co.cask.cdap.gateway.handlers.ProfileHttpHandler.java", "BodyUseAPI": [], "Fixed commit": "2b774ce967baa976312b75e5354410bfeef9c8f0", "Url": "https://api.github.com/repos/caskdata/cdap", "Date": "2018-04-24T16:16:37Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["co.cask.cdap.proto.profile.ProfileCreateRequest.getProvisioner()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((provisionerInfo == null) || ((provisionerInfo.getName()) == null)) { throw new co.cask.cdap.common.BadRequestException((\"Missing provisioner information in the json file. \" + \"A profile must be associated with a provisioner.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/457/buggy-version/cdap-app-fabric.src.main.java.co.cask.cdap.gateway.handlers.ProfileHttpHandler.java", "BodyUseAPI": [], "Fixed commit": "2b774ce967baa976312b75e5354410bfeef9c8f0", "Url": "https://api.github.com/repos/caskdata/cdap", "Date": "2018-04-24T16:16:37Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seedu.address.logic.LogicManager.isSensitive(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isPasswordSenstive) { logger.info(((\"----------------[USER COMMAND][\" + commandText) + \"]\")); }else { logger.info((\"----------------[USER COMMAND][\" + (\"password ********\" + \"]\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8553/buggy-version/src.main.java.seedu.address.logic.LogicManager.java", "BodyUseAPI": [], "Fixed commit": "683054eb0adc8fa7d9cb04e8b75c9caff0f824e4", "Url": "https://api.github.com/repos/Limminghong/main", "Date": "2018-10-11T09:04:17Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seedu.address.logic.LogicManager.isSensitive(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isPasswordSenstive) { history.add(commandText); }else { history.add(\"password *******\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8553/buggy-version/src.main.java.seedu.address.logic.LogicManager.java", "BodyUseAPI": [], "Fixed commit": "683054eb0adc8fa7d9cb04e8b75c9caff0f824e4", "Url": "https://api.github.com/repos/Limminghong/main", "Date": "2018-10-11T09:04:17Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pos >= (this.size())) { this.addLast(e); }else { ADwk2.DLList.Node node = head; for (int i = 0; i < pos; i++) { node = node.getNext(); if (node == (tail)) { break; } } if (node == (head)) { this.addFirst(e); }else { new_node.setNext(node); new_node.setPrevious(node.getPrevious()); node.getPrevious().setNext(new_node); node.setPrevious(new_node); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5087/buggy-version/src.ADwk2.impl5.java", "BodyUseAPI": [], "Fixed commit": "97f81fc09f48575c724debf056a3cf8d1d8afbdc", "Url": "https://api.github.com/repos/avanderlinden/java-test-project", "Date": "2018-02-25T17:08:22Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((webView.getParent()) != null) ((android.view.ViewGroup) (webView.getParent())).removeView(webView);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1632/buggy-version/turbolinks.src.main.java.com.basecamp.turbolinks.TurbolinksView.java", "BodyUseAPI": ["((android.view.ViewGroup) (webView.getParent())).removeView(android.webkit.WebView)", "android.webkit.WebView.getParent()"], "Fixed commit": "5e3ea7cbe71e3ab569516d7d683f52e62c0dcfdd", "Url": "https://api.github.com/repos/lilcodelab/turbolinks-android", "Date": "2018-01-31T12:37:33Z"},
{"Line": "=>451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Enumeration<?>.nextElement()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((skip != null) && (skip.equals(strKey))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6497/buggy-version/src.main.java.com.abilists.core.controller.AbstractBaseController.java", "BodyUseAPI": [], "Fixed commit": "ce8685c39c5b4657bab82f9e89b1f8fee067e884", "Url": "https://api.github.com/repos/njoonk/abilists_core", "Date": "2018-10-15T15:13:12Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!knowsTeam) { for (shared.logic.Team t : p.getTeams()) { if (t.knowsTeam()) { knowsTeam = true; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6950/buggy-version/src.nnode.StateObject.java", "BodyUseAPI": [], "Fixed commit": "d4b327475733e56853b983335f803010766e45d2", "Url": "https://api.github.com/repos/vossnarrator/NarratorNode", "Date": "2018-02-13T02:27:20Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((remainingSeconds) > 0) { remainingSeconds += 5; textAlarmTimer.setText((((remainingSeconds) + \" \") + (getString(R.string.wake_up_session_countdown)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6336/buggy-version/src.main.java.co.oriens.bluelight.NovelAlarmActivity.java", "BodyUseAPI": ["android.widget.TextView.setText((((remainingSeconds) + \" \") + (getString(R.string.wake_up_session_countdown))))"], "Fixed commit": "049d12e737b3888b67acacfec6c1d3d6a78f6dd7", "Url": "https://api.github.com/repos/DoguD/Artificial-Sun-Android-App", "Date": "2017-09-15T06:26:00Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file.isDirectory()) { throw new org.dizitart.no2.exceptions.NitriteIOException(errorMessage(((filePath) + \" is a directory, must be a file\"), org.dizitart.no2.NIOE_PATH_IS_DIRECTORY)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5908/buggy-version/nitrite.src.main.java.org.dizitart.no2.NitriteBuilder.java", "BodyUseAPI": [], "Fixed commit": "96a73ebdfbcbf1d1894124ca4531663860c86c56", "Url": "https://api.github.com/repos/dizitart/nitrite-database", "Date": "2018-10-03T18:20:48Z"},
{"Line": "=>1153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shouldDirectUserToContinueQuickStart) { setPromptedQuickStartTask(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5740/buggy-version/WordPress.src.main.java.org.wordpress.android.ui.main.MySiteFragment.java", "BodyUseAPI": [], "Fixed commit": "0b5722deef84778bb6d1b03c4a6cabfc84ccf36c", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2018-08-16T10:26:37Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((getOption(com.xmlcalabash.library.XSLT._output_base_uri)) == null) && (document != null)) { com.xmlcalabash.util.TreeWriter fixbase = new com.xmlcalabash.util.TreeWriter(runtime); fixbase.startDocument(document.getBaseURI()); fixbase.addSubtree(xformed); fixbase.endDocument(); xformed = fixbase.getResult(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7981/buggy-version/src.main.java.com.xmlcalabash.library.XSLT.java", "BodyUseAPI": ["com.xmlcalabash.util.TreeWriter.startDocument(document.getBaseURI())", "net.sf.saxon.s9api.XdmNode.getBaseURI()"], "Fixed commit": "cd6af7a92160bc1c71242558bb09097213cf65a8", "Url": "https://api.github.com/repos/ndw/xmlcalabash1", "Date": "2018-03-06T13:18:39Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dateChanged) { if (((newMonth == (-1)) || (newDay == (-1))) || (newYear == (-1))) { throw new java.lang.IllegalArgumentException(\"attempted to update the date without valid params, check EventsFragment.java\"); } values.put(EventContract.EventEntry.COL_EVENT_MONTH, java.lang.Integer.toString(newMonth)); values.put(EventContract.EventEntry.COL_EVENT_DAY, java.lang.Integer.toString(newDay)); values.put(EventContract.EventEntry.COL_EVENT_YEAR, java.lang.Integer.toString(newYear)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9698/buggy-version/app.src.main.java.com.example.swugger.EventsFragment.java", "BodyUseAPI": [], "Fixed commit": "bd63d7c4e35fa9cb843e9eb177e50a6e2de9aeca", "Url": "https://api.github.com/repos/dvscheng/AIO-android", "Date": "2018-08-08T04:44:40Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timeChanged) { if ((newHour == (-1)) || (newMinute == (-1))) { throw new java.lang.IllegalArgumentException(\"attempted to update the time without valid params (they're -1), check EventsFragment.java\"); } values.put(EventContract.EventEntry.COL_EVENT_HOUR, java.lang.Integer.toString(newHour)); values.put(EventContract.EventEntry.COL_EVENT_MINUTE, java.lang.Integer.toString(newMinute)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9698/buggy-version/app.src.main.java.com.example.swugger.EventsFragment.java", "BodyUseAPI": [], "Fixed commit": "bd63d7c4e35fa9cb843e9eb177e50a6e2de9aeca", "Url": "https://api.github.com/repos/dvscheng/AIO-android", "Date": "2018-08-08T04:44:40Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.update(EventContract.EventEntry.TABLE_NAME,android.content.ContentValues,java.lang.String,java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rowsUpdated != 1) { throw new java.lang.SecurityException((((((((((((((((((((((\"we somehow updated more than one row.. \\n\" + \"name: \") + (origEvent.getName())) + \"\\n\") + \"notes: \") + (origEvent.getNotes())) + \"\\n\") + \"month: \") + (java.lang.Integer.toString(origEvent.getMonth()))) + \"\\n\") + \"day: \") + (java.lang.Integer.toString(origEvent.getDay()))) + \"\\n\") + \"year: \") + (java.lang.Integer.toString(origEvent.getYear()))) + \"\\n\") + \"hour: \") + (java.lang.Integer.toString(origEvent.getHour()))) + \"\\n\") + \"minute: \") + (java.lang.Integer.toString(origEvent.getMinute()))) + \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9698/buggy-version/app.src.main.java.com.example.swugger.EventsFragment.java", "BodyUseAPI": [], "Fixed commit": "bd63d7c4e35fa9cb843e9eb177e50a6e2de9aeca", "Url": "https://api.github.com/repos/dvscheng/AIO-android", "Date": "2018-08-08T04:44:40Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timeChanged()) { newHour = mTimePicker.getCurrentHour(); newMinute = mTimePicker.getCurrentMinute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9698/buggy-version/app.src.main.java.com.example.swugger.Events_EditEventDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "bd63d7c4e35fa9cb843e9eb177e50a6e2de9aeca", "Url": "https://api.github.com/repos/dvscheng/AIO-android", "Date": "2018-08-08T04:44:40Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dateChanged()) { newMonth = mDatePicker.getMonth(); newDay = mDatePicker.getDayOfMonth(); newYear = mDatePicker.getYear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9698/buggy-version/app.src.main.java.com.example.swugger.Events_EditEventDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "bd63d7c4e35fa9cb843e9eb177e50a6e2de9aeca", "Url": "https://api.github.com/repos/dvscheng/AIO-android", "Date": "2018-08-08T04:44:40Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDark) renderLight = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/441/buggy-version/core.src.com.unlucky.map.GameMap.java", "BodyUseAPI": [], "Fixed commit": "6f5b7a1f84a770bbe87fc38fc6225d7cd3990f69", "Url": "https://api.github.com/repos/mingli1/Unlucky", "Date": "2018-02-27T19:51:17Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDark) renderLight = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/441/buggy-version/core.src.com.unlucky.map.GameMap.java", "BodyUseAPI": [], "Fixed commit": "6f5b7a1f84a770bbe87fc38fc6225d7cd3990f69", "Url": "https://api.github.com/repos/mingli1/Unlucky", "Date": "2018-02-27T19:51:17Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((att.contains(\"(\")) && (att.contains(\")\"))) { if (!(usedTables.contains(att.substring(((att.indexOf(\"(\")) + 1), att.indexOf(\")\")).split(\"\\\\.\")[0].trim()))) { usedTables.add(att.substring(((att.indexOf(\"(\")) + 1), ((att.indexOf(\")\")) - 1)).split(\"\\\\.\")[0].trim()); } }else { if (!(usedTables.contains(att.split(\"\\\\.\")[0]))) { usedTables.add(att.split(\"\\\\.\")[0]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9179/buggy-version/src.main.java.supersql.extendclass.QueryBuffer.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.trim()", "java.util.ArrayList<java.lang.String>.add(java.lang.String)", "java.util.ArrayList<java.lang.String>.contains(java.lang.String)", "java.util.ArrayList<java.lang.String>.add(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.util.ArrayList<java.lang.String>.contains(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "3605e816b783ca1ca07bd3bf84108e259614dcd0", "Url": "https://api.github.com/repos/ToyamaLab/NewSSQL", "Date": "2018-10-01T09:56:59Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JFileChooser.showOpenDialog(view.MainView)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (option == (javax.swing.JFileChooser.CANCEL_OPTION)) { tabs = view.getTabsPanel().getTabs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7542/buggy-version/src.main.java.helpers.FileService.java", "BodyUseAPI": [], "Fixed commit": "dfef4f677fbed679a106cf3d051658015311c870", "Url": "https://api.github.com/repos/iwiwiwi88/CopyPasteIwi", "Date": "2018-01-04T14:21:39Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["view.getNewButtonPanel().getNewButtonFrase().getText()", "view.getNewButtonPanel().getNewButtonName().getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(name.equals(\"\"))) & (!(frase.equals(\"\")))) { view.CopyButton button = new view.CopyButton(name, frase); view.getTabsPanel().addButtonToTheTab(button, copyListener); }else { javax.swing.JOptionPane.showMessageDialog(view, \"Both fields ('New Button's Text' and 'Text To Be Copied') should contain text!\", \"Add A New Button - Warning\", javax.swing.JOptionPane.WARNING_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7542/buggy-version/src.main.java.controller.MainController.java", "BodyUseAPI": [], "Fixed commit": "dfef4f677fbed679a106cf3d051658015311c870", "Url": "https://api.github.com/repos/iwiwiwi88/CopyPasteIwi", "Date": "2018-01-04T14:21:39Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((activeSession != null) && (sessionId != null)) && ((activeSession.getExternalKey()) != null)) { if (sessionId.equals(activeSession.getExternalKey().getKey())) { refreshTimeout(activeSession); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3107/buggy-version/hub-extensions.extension-proxy.src.main.java.io.sterodium.extensions.hub.proxy.session.SeleniumSessions.java", "BodyUseAPI": ["org.openqa.grid.internal.TestSession.getExternalKey()", "io.sterodium.extensions.hub.proxy.session.SeleniumSessions.refreshTimeout(org.openqa.grid.internal.TestSession)", "java.lang.String.equals(activeSession.getExternalKey().getKey())", "activeSession.getExternalKey().getKey()"], "Fixed commit": "2a6dd27521bf283b83ce48336cc947e1225cd2a8", "Url": "https://api.github.com/repos/sjethvani/selenium-grid-extensions", "Date": "2018-02-15T13:04:11Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mCalendarView.getFlagGiftImgAlpha()) < 1.0F) { mPaint.setAlpha(((int) ((mCalendarView.getFlagGiftImgAlpha()) * 255.0F))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5833/buggy-version/calendar.src.main.java.org.butter.calendar.calendar.month.MonthView.java", "BodyUseAPI": ["android.graphics.Paint.setAlpha(((int) ((mCalendarView.getFlagGiftImgAlpha()) * 255.0F)))", "org.butter.calendar.calendar.month.MonthCalendarView.getFlagGiftImgAlpha()"], "Fixed commit": "db956e250d99efd41654775095185686e9f7b1ab", "Url": "https://api.github.com/repos/ButterRhopa/IThomeCheckInCalendar", "Date": "2018-03-09T02:02:50Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((myUid) == 123) { java.lang.System.out.println((\"\\nNEW NODE: \" + (myUid))); java.lang.System.out.println((\"Message Round: \" + (pmsg.round))); java.lang.System.out.println(\"Neighbors: \"); rcvdFromNbr.keySet().forEach(( node) -> java.lang.System.out.print((node + \" \"))); java.lang.System.out.println((\"\\nSender: \" + (pmsg.senderUID))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5940/buggy-version/src.dc_project1.Peleg.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "383d398a9e236e6d6914095ff3b66731e0ad070f", "Url": "https://api.github.com/repos/shuklak13/DC_Project1", "Date": "2018-02-10T22:05:09Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iDs.isEmpty()) { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7081/buggy-version/src.main.java.net.nikr.eve.jeveasset.io.evekit.EveKitLocationsGetter.java", "BodyUseAPI": [], "Fixed commit": "7c8059d850a98f9634e1d1f1827d8fc57dbe1eec", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2018-09-18T17:57:28Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["T.getAttachment()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (attachments == null) { return entity; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/559/buggy-version/attachment.src.main.java.com.yonyou.iuap.baseservice.attachment.service.GenericAtService.java", "BodyUseAPI": [], "Fixed commit": "e5f61d887d3725e7c7997d07ff9b27f04ba8d8ca", "Url": "https://api.github.com/repos/yonyou-iuap/iuap-pap-baseservice", "Date": "2018-07-30T06:52:58Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((((x < 0) || (x >= (casual.canvas.bl.Recognizer.MAT_LENGTH))) || (y < 0)) || (y >= (casual.canvas.bl.Recognizer.MAT_LENGTH))) { casual.canvas.util.LoggerUtil.getLogger().warning(new java.lang.Exception(\"Point out of range\")); this.x = 0; this.y = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4447/buggy-version/src.main.java.casual.canvas.bl.Recognizer.java", "BodyUseAPI": [], "Fixed commit": "add65f641bb7baccd6e64895fa482146543cafd2", "Url": "https://api.github.com/repos/Miaomz/Canvas", "Date": "2018-09-18T08:55:07Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.equals(\"\")) || (data.equals(\"\\n\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1905/buggy-version/app.src.main.java.lakeeffect.ca.scoutingserverapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1f45b2026e2bf7d2d7d185d107ae79c746464823", "Url": "https://api.github.com/repos/ajayyy/LakeEffectScoutingServerApp", "Date": "2018-04-07T20:07:40Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (data.endsWith(\"\\n\")) { data = data.substring(0, ((data.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1905/buggy-version/app.src.main.java.lakeeffect.ca.scoutingserverapp.MainActivity.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "1f45b2026e2bf7d2d7d185d107ae79c746464823", "Url": "https://api.github.com/repos/ajayyy/LakeEffectScoutingServerApp", "Date": "2018-04-07T20:07:40Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((prefix == null) || (prefix.isEmpty())) { qname = new org.exist.dom.QName(javax.xml.XMLConstants.XMLNS_ATTRIBUTE, uri); }else { qname = new org.exist.dom.QName(prefix, uri, javax.xml.XMLConstants.XMLNS_ATTRIBUTE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9104/buggy-version/src.org.exist.dom.memtree.MemTreeBuilder.java", "BodyUseAPI": [], "Fixed commit": "a2c21206ec6933fd15899be39605d7c74f285ce6", "Url": "https://api.github.com/repos/eXist-db/exist", "Date": "2017-11-29T01:56:39Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arrayType) instanceof org.ballerinalang.model.types.BTupleType) { sj = new java.util.StringJoiner(\", \", \"(\", \")\"); }else { sj = new java.util.StringJoiner(\", \", \"[\", \"]\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5723/buggy-version/bvm.ballerina-core.src.main.java.org.ballerinalang.model.values.BRefValueArray.java", "BodyUseAPI": [], "Fixed commit": "d3d926f0190e8471a5be279784f922a9219fe3ea", "Url": "https://api.github.com/repos/nadeeshaan/ballerina", "Date": "2018-05-08T11:29:59Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((waitTime) < (slowdownConstant)) { java.lang.System.out.println(\"Playback faster than framerate. Increasing wait.\"); waitTime = slowdownConstant; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8786/buggy-version/TBbard.src.bard.Notes.java", "BodyUseAPI": [], "Fixed commit": "561194b8e71529633099ab1cf22a1df78ce76a94", "Url": "https://api.github.com/repos/isalin/TBbard", "Date": "2018-06-01T15:02:42Z"},
{"Line": "=>1098", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.nasa.jpf.vm.ClassInfo.getMethod(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (miIfc.getClassInfo().isSubInterfaceOf(mi.getClassInfo())) { miIfc = mi; }else if (mi.getClassInfo().isSubInterfaceOf(miIfc.getClassInfo())) { continue; }else { java.lang.String msg = ((\"Conflicting default methods: \" + (mi.getFullName())) + \", \") + (miIfc.getFullName()); throw new gov.nasa.jpf.vm.ClassChangeException(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7371/buggy-version/src.main.gov.nasa.jpf.vm.ClassInfo.java", "BodyUseAPI": ["mi.getClassInfo().isSubInterfaceOf(miIfc.getClassInfo())", "gov.nasa.jpf.vm.MethodInfo.getFullName()", "gov.nasa.jpf.vm.MethodInfo.getClassInfo()", "gov.nasa.jpf.vm.MethodInfo.getFullName()", "gov.nasa.jpf.vm.MethodInfo.getClassInfo()"], "Fixed commit": "b41a555f32d1258276680dd52094ed439ad6192b", "Url": "https://api.github.com/repos/uwplse/jpf-core", "Date": "2018-08-25T00:09:41Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offset > (stops.size())) || (offset < 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1117/buggy-version/SwarzedzkiBus.app.src.main.java.com.wblachowski.swarzedzkibus.adapters.FavouritesAdapter.java", "BodyUseAPI": [], "Fixed commit": "c1433ed98f595558d031dc744dfd344854af3f4f", "Url": "https://api.github.com/repos/wblachowski/SwarzedzkiBusV2", "Date": "2018-03-27T17:35:09Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentGroup) != null) mDatabase.child(\"currentGroup\").push().setValue(currentGroup);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9100/buggy-version/app.src.main.java.com.smdproject.smdproject.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "097bb642b383f651c6e7a0526a7ed7aa6d70c015", "Url": "https://api.github.com/repos/abdullahkamran/SMDProject", "Date": "2018-04-27T05:27:19Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentGroup) == null) currentGroup = new database.Group();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9100/buggy-version/app.src.main.java.com.smdproject.smdproject.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "097bb642b383f651c6e7a0526a7ed7aa6d70c015", "Url": "https://api.github.com/repos/abdullahkamran/SMDProject", "Date": "2018-04-27T05:27:19Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.softwaresunleashed.dog.debugregs.base_classes.RegFacade.getRegisterInstance(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (debugRegisters instanceof com.softwaresunleashed.dog.debugregs.implementation.Dummy_DebugRegisters) { debugRegisters.setRegister_name(regName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8527/buggy-version/app.src.main.java.com.softwaresunleashed.dog.activities.MainActivity.java", "BodyUseAPI": ["com.softwaresunleashed.dog.debugregs.base_classes.DebugRegisters.setRegister_name(java.lang.String)"], "Fixed commit": "443740c6539c32766f4f733f86af6282e4289695", "Url": "https://api.github.com/repos/softwaresunleashed/dog", "Date": "2018-05-28T04:37:10Z"},
{"Line": "=>506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentCues) != null) { listener.onCues(currentCues); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9273/buggy-version/library.core.src.main.java.com.google.android.exoplayer2.SimpleExoPlayer.java", "BodyUseAPI": [], "Fixed commit": "2c55f5893826aae396c7b48bcf36d3de5c7cb286", "Url": "https://api.github.com/repos/google/ExoPlayer", "Date": "2018-05-14T16:50:44Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((values.size()) > 0) { mDatabase.update(baseObj.getTableName(), values, \"id = ?\", new java.lang.String[]{ java.lang.String.valueOf(baseObj.getBaseObjId()) }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8896/buggy-version/litepal.src.main.java.org.litepal.crud.SaveHandler.java", "BodyUseAPI": ["org.litepal.crud.SaveHandler.update(baseObj.getTableName(),android.content.ContentValues,java.lang.String,java.lang.String[])"], "Fixed commit": "2ed78589286f5c700ba70b07a4eefc73fe5e5a01", "Url": "https://api.github.com/repos/LitePalFramework/LitePal", "Date": "2018-01-19T09:06:50Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rear) == (-1)) { rear = (maxSize) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3776/buggy-version/Homework.Homework02.DeQueue.java", "BodyUseAPI": [], "Fixed commit": "e6b68a512181c6e270ecd3bfcb7840674c02ee77", "Url": "https://api.github.com/repos/AbellHype/CMSI281", "Date": "2018-10-22T20:49:04Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rear) == (-1)) rear = (maxSize) - 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3776/buggy-version/Homework.Homework02.DeQueue.java", "BodyUseAPI": [], "Fixed commit": "e6b68a512181c6e270ecd3bfcb7840674c02ee77", "Url": "https://api.github.com/repos/AbellHype/CMSI281", "Date": "2018-10-22T20:49:04Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((edu.aku.hassannaqvi.nns_2018.core.MainApp.nuCount) == 1) { edu.aku.hassannaqvi.nns_2018.core.MainApp.B6Flag = true; edu.aku.hassannaqvi.nns_2018.core.MainApp.B2B6Flag = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3421/buggy-version/app.src.main.java.edu.aku.hassannaqvi.nns_2018.ui.SectionB6Activity.java", "BodyUseAPI": [], "Fixed commit": "4900b69dfdc5cf27586e9cd2cb6a0a52d37f1ff7", "Url": "https://api.github.com/repos/shznaqvi/nns_2018", "Date": "2018-03-30T06:34:15Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nameSpace) == null) { return ((getFQNOfUnit()) + \":\") + (method); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2579/buggy-version/src.main.java.de.ugoe.cs.comfort.data.models.PythonMethod.java", "BodyUseAPI": [], "Fixed commit": "3a282e42896e73d246e5701ec32a1203944359d4", "Url": "https://api.github.com/repos/comfort-framework/comfort", "Date": "2018-05-28T15:10:07Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (file_path.equals(\"groups\")) me.jul1an_k.tablist.bukkit.Tablist.getPlugin(me.jul1an_k.tablist.bukkit.Tablist.class).saveResource(((\"Prefixes-And-Suffixes/\" + file_path) + \".yml\"), true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5567/buggy-version/src.main.java.me.jul1an_k.tablist.bukkit.config.ConfigFile.java", "BodyUseAPI": [], "Fixed commit": "9fdc309489424bfe581a9bc1aa910fa59664eb53", "Url": "https://api.github.com/repos/DevJul1an/sTablist", "Date": "2018-03-10T16:30:59Z"},
{"Line": "=>725", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (cbds != null) { children.addAll(cbds); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4064/buggy-version/src.main.java.com.ajsg2.minimaljava.parse.Parser.java", "BodyUseAPI": ["java.util.List<com.ajsg2.minimaljava.parse.Node>.addAll(java.util.List<com.ajsg2.minimaljava.parse.Node>)"], "Fixed commit": "d9c0cd3a020bc27552a0d64805bccfb984aa42c4", "Url": "https://api.github.com/repos/adamgemmell/minimaljava", "Date": "2018-02-26T16:42:31Z"},
{"Line": "=>779", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (cbd == null) RESULT = new java.util.LinkedList<com.ajsg2.minimaljava.parse.Node>(); else RESULT = new java.util.LinkedList<com.ajsg2.minimaljava.parse.Node>(java.util.Arrays.asList(cbd));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4064/buggy-version/src.main.java.com.ajsg2.minimaljava.parse.Parser.java", "BodyUseAPI": ["java.util.Arrays.asList(com.ajsg2.minimaljava.parse.Node)"], "Fixed commit": "d9c0cd3a020bc27552a0d64805bccfb984aa42c4", "Url": "https://api.github.com/repos/adamgemmell/minimaljava", "Date": "2018-02-26T16:42:31Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((context.getData()) != null) { context.getClient().dispatchSink().next(context.getData()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/569/buggy-version/gateway.src.main.java.discord4j.gateway.PayloadHandlers.java", "BodyUseAPI": ["context.getClient().dispatchSink()", "discord4j.gateway.PayloadContext<discord4j.gateway.json.dispatch.Dispatch>.getClient()", "context.getClient().dispatchSink().next(context.getData())", "discord4j.gateway.PayloadContext<discord4j.gateway.json.dispatch.Dispatch>.getData()"], "Fixed commit": "30bef14964782a036edf85744d835ce3f2082cd5", "Url": "https://api.github.com/repos/Discord4J/Discord4J", "Date": "2018-07-24T05:23:13Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.web.context.request.ServletWebRequest.getResponse()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (response == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9666/buggy-version/spar-wings-monolith.src.main.java.jp.xet.sparwings.spring.web.error.handler.RestExceptionHandler.java", "BodyUseAPI": [], "Fixed commit": "6d3f7e0eea377dce987ef0a5177c0c3ef7cf7d09", "Url": "https://api.github.com/repos/wreulicke/spar-wings", "Date": "2018-03-18T13:17:51Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (locale == null) { locale = java.util.Locale.getDefault(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9666/buggy-version/spar-wings-monolith.src.main.java.jp.xet.sparwings.spring.web.error.handler.DefaultRestErrorResolver.java", "BodyUseAPI": [], "Fixed commit": "6d3f7e0eea377dce987ef0a5177c0c3ef7cf7d09", "Url": "https://api.github.com/repos/wreulicke/spar-wings", "Date": "2018-03-18T13:17:51Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (type == null) { type = cell.getCellTypeEnum(); }else if (!(cell.getCellTypeEnum().equals(type))) { try { final java.lang.String scv = cell.getStringCellValue(); type = CellType.STRING; if (scv != null) length = java.lang.Math.max(scv.length(), length); } catch (java.lang.Exception e) { } }else { switch (cell.getCellTypeEnum()) { case STRING : type = CellType.STRING; final java.lang.String stringCellValue = cell.getStringCellValue(); if (stringCellValue != null) length = java.lang.Math.max(stringCellValue.length(), length); break; case NUMERIC : type = CellType.NUMERIC; length = java.lang.Math.max(length, java.lang.String.valueOf(cell.getNumericCellValue()).length()); break; case BOOLEAN : type = CellType.BOOLEAN; length = java.lang.Math.max(length, 5); break; case BLANK : type = CellType.BLANK; length = java.lang.Math.max(length, 0); break; case ERROR : type = CellType.ERROR; length = java.lang.Math.max(length, 5); break; case FORMULA : try { final java.lang.String scv = cell.getStringCellValue(); type = CellType.STRING; if (scv != null) length = java.lang.Math.max(scv.length(), length); } catch (java.lang.Exception e) { try { length = java.lang.Math.max(length, java.lang.String.valueOf(cell.getNumericCellValue()).length()); type = CellType.NUMERIC; } catch (java.lang.Exception e2) { type = CellType.ERROR; length = java.lang.Math.max(length, 5); } } break; case _NONE : type = CellType.BLANK; length = java.lang.Math.max(length, 0); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1744/buggy-version/src.main.java.com.github.ograndebe.x2d.MetadataRetriever.java", "BodyUseAPI": ["cell.getCellTypeEnum().equals(com.github.ograndebe.x2d.CellType)"], "Fixed commit": "5a6ebbdcf3f74d5cca1c79e42a599d1b1059c029", "Url": "https://api.github.com/repos/ograndebe/x2d", "Date": "2018-03-20T14:18:01Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((collectionPoint.getBinDetails()) != null) for (org.egov.swm.domain.model.BinDetails bd : collectionPoint.getBinDetails()) { if (((bd.getAsset()) != null) && ((bd.getAsset().getCode()) != null)) bd.setAsset(assetMap.get(bd.getAsset().getCode())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3822/buggy-version/swm.swm-services.src.main.java.org.egov.swm.persistence.repository.CollectionPointJdbcRepository.java", "BodyUseAPI": ["org.egov.swm.domain.model.CollectionPoint.getBinDetails()"], "Fixed commit": "12ee90aecf771df2a45a7e80e696356a34569424", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2018-02-01T05:33:55Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPreviousPosition) != (getAdapterPosition())) { mStackEntities.get(mPreviousPosition).setSelected(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3427/buggy-version/app.src.main.java.com.enhan.sabina.speedy.study.ChooseStackAdapter.java", "BodyUseAPI": [], "Fixed commit": "c61dbb378048b0cdee661651300ec8093afd2732", "Url": "https://api.github.com/repos/sabinachang/Speedy", "Date": "2018-10-24T09:39:02Z"},
{"Line": "=>4472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jmri.enginedriver.throttle.IS_ESU_MCII) { android.util.Log.d(\"Engine_Driver\", \"ESU_MCII: Move knob request for EStop\"); setEsuThrottleKnobPosition(whichVolume, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9064/buggy-version/src.jmri.enginedriver.throttle.java", "BodyUseAPI": [], "Fixed commit": "6011f2de983f0b798426dc008edeb7140c46b1fc", "Url": "https://api.github.com/repos/JMRI/EngineDriver", "Date": "2018-02-22T09:02:47Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["il.ac.tau.cs.mansur.kollmann.clusterchat.BluetoothService.ConnectedThread.sendHandshake()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!sendHS) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/283/buggy-version/app.src.main.java.il.ac.tau.cs.mansur.kollmann.clusterchat.BluetoothService.java", "BodyUseAPI": [], "Fixed commit": "4b142c8e9cc9ec965fca3b9dc02dbb13cf879362", "Url": "https://api.github.com/repos/alonkol/ClusterChat", "Date": "2018-04-18T13:27:56Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.identity.oauth2.model.RefreshTokenValidationDataDO.getValidityPeriodInMillis()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (refreshValidity < 0) { return false; }else { return (org.wso2.carbon.identity.oauth2.util.OAuth2Util.getTimeToExpire(issuedTime, refreshValidity)) < (org.wso2.carbon.identity.oauth2.token.handlers.grant.RefreshGrantHandler.ALLOWED_MINIMUM_VALIDITY_PERIOD); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1570/buggy-version/components.org.wso2.carbon.identity.oauth.src.main.java.org.wso2.carbon.identity.oauth2.token.handlers.grant.RefreshGrantHandler.java", "BodyUseAPI": ["org.wso2.carbon.identity.oauth2.util.OAuth2Util.getTimeToExpire(long,long)"], "Fixed commit": "6c33e7474db8797e724b7a7506806c91fc2b9310", "Url": "https://api.github.com/repos/madawas/identity-inbound-auth-oauth", "Date": "2018-04-11T06:30:22Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pendingNotifIntent) != null) am.cancel(pendingNotifIntent);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2532/buggy-version/app.src.main.java.de.haw_landshut.hawmobile.news.NewsOverview.java", "BodyUseAPI": [], "Fixed commit": "a8a4150d1039352f8d739bebe18570405533c461", "Url": "https://api.github.com/repos/SL315/HAWMobile", "Date": "2018-02-14T20:30:32Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(bRun)) { bRun = true; BeginPlay(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5866/buggy-version/app.src.main.java.my.neomer.tapper.GameSurface.java", "BodyUseAPI": [], "Fixed commit": "0a9446e173113d612142de8070dea0a9c56b22de", "Url": "https://api.github.com/repos/Neomer/Android_Tapper", "Date": "2018-08-16T13:08:42Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((es.jocasolo.game.common.GameManager.getScreen()) instanceof es.jocasolo.game.screens.ScreenWorld) { final float manaValue = ((es.jocasolo.game.screens.ScreenWorld) (es.jocasolo.game.common.GameManager.getScreen())).getHud().getManaBar().getValue(); if (((handler.allowStopTime) && (!(handler.pause))) && (manaValue > (es.jocasolo.game.constants.CommonConstants.BAR_MAGIC_TIME_CONSUMITION))) { es.jocasolo.game.common.GameManager.getInstance().getPlayer().setAllowDrag(false); handler.stopTime = true; handler.stopTimeDelay(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9175/buggy-version/core.src.es.jocasolo.game.input.InputPlayer.java", "BodyUseAPI": [], "Fixed commit": "1b7c823858338cc5f22d48a78be4e1bdf1dfa917", "Url": "https://api.github.com/repos/jocasolo/project-tfg", "Date": "2018-10-14T19:12:05Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNetworkAvailable()) { com.example.android.funkytasks.ElasticSearchController.GetTask getTask = new com.example.android.funkytasks.ElasticSearchController.GetTask(); getTask.execute(id); try { task = getTask.get(); android.util.Log.e(\"Task title\", task.getTitle()); } catch (java.lang.Exception e) { android.util.Log.e(\"ERROR\", \"not working get task\"); } }else { com.example.android.funkytasks.LocalRequestedTaskController localController = new com.example.android.funkytasks.LocalRequestedTaskController(getApplicationContext(), username); tasks = localController.loadRequestedTask(); for (com.example.android.funkytasks.Task eachTask : tasks) { if (eachTask.getId().equals(id)) { task = eachTask; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1123/buggy-version/app.src.main.java.com.example.android.funkytasks.EditDashboardRequestedTask.java", "BodyUseAPI": [], "Fixed commit": "3da99128a0c11f59c1b57aaa719004a36b788078", "Url": "https://api.github.com/repos/CMPUT301W18T20/FunkyTasks", "Date": "2018-04-09T06:25:34Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(writinggroupsproject.main.dataCheck(\"groupName\", \"Books\", bGroup))) { java.lang.System.out.print(\"Enter valid writing group\"); }else { validGroup = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5121/buggy-version/src.writinggroupsproject.main.java", "BodyUseAPI": [], "Fixed commit": "c28450cca8a006cbbc299f21bdfb7b5a94ba425a", "Url": "https://api.github.com/repos/ricardoalcaraz/WritingGroupsDatabaseProject", "Date": "2018-03-19T23:55:40Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(game_over)) { for (int i : game_state) { if (i == 2) { tie = false; break; } } if (tie) { android.widget.Toast.makeText(this, \"Tie!\", Toast.LENGTH_SHORT).show(); game_over = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7703/buggy-version/app.src.main.java.com.yongcheng.tictactoe.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b232e31c5880008503e45d6e4201d8a5a4f0d169", "Url": "https://api.github.com/repos/yongchengzhu/TicTacToe-App", "Date": "2018-07-09T04:14:54Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isExpression && (existingChild instanceof org.ballerinalang.net.uri.parser.Expression)) { return existingChild; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1053/buggy-version/stdlib.ballerina-http.src.main.java.org.ballerinalang.net.uri.parser.Node.java", "BodyUseAPI": [], "Fixed commit": "e6fc6d68d349c13c8580046e5a44b61e3ace5025", "Url": "https://api.github.com/repos/grainier/ballerina", "Date": "2018-03-28T17:44:25Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.example.ahmed_tarek.graduationapplication.RegularOrderLab.get(context).reminderExists(time))) com.example.ahmed_tarek.graduationapplication.receivers.BootUpReceiver.alarmInit(context, time);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6349/buggy-version/app.src.main.java.com.example.ahmed_tarek.graduationapplication.receivers.BootUpReceiver.java", "BodyUseAPI": ["com.example.ahmed_tarek.graduationapplication.receivers.BootUpReceiver.alarmInit(android.content.Context,long)"], "Fixed commit": "40784243f0b48554b8a4eb9a4ac844335af37309", "Url": "https://api.github.com/repos/AhmedTarek-Fahiem/GraduationApplication", "Date": "2018-01-05T11:32:34Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.example.ahmed_tarek.graduationapplication.RegularOrderLab.get(context).getTimeStamps()) != null) for (long timeStamp : com.example.ahmed_tarek.graduationapplication.RegularOrderLab.get(context).getTimeStamps()) com.example.ahmed_tarek.graduationapplication.receivers.BootUpReceiver.alarmInit(context, timeStamp);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6349/buggy-version/app.src.main.java.com.example.ahmed_tarek.graduationapplication.receivers.BootUpReceiver.java", "BodyUseAPI": ["com.example.ahmed_tarek.graduationapplication.RegularOrderLab.get(android.content.Context)", "com.example.ahmed_tarek.graduationapplication.receivers.BootUpReceiver.alarmInit(android.content.Context,long)", "com.example.ahmed_tarek.graduationapplication.RegularOrderLab.get(context).getTimeStamps()"], "Fixed commit": "40784243f0b48554b8a4eb9a4ac844335af37309", "Url": "https://api.github.com/repos/AhmedTarek-Fahiem/GraduationApplication", "Date": "2018-01-05T11:32:34Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(Claw.sliderOut)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3610/buggy-version/src.main.java.frc.team7308.robot.subsystems.Lift.java", "BodyUseAPI": [], "Fixed commit": "dc8f73f20f503a47cb7fe7fe00ad5aca8695b943", "Url": "https://api.github.com/repos/frc7308/robot2018-rewritten", "Date": "2018-09-18T19:05:15Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.defano.wyldcard.WyldCard.getInstance().getFocusedCard()", "com.defano.wyldcard.awt.MouseManager.getInstance().getMouseLoc(com.defano.wyldcard.runtime.context.ExecutionContext)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (focusedCard.getBounds().contains(mouseLoc)) { importedPart.getPartModel().setKnownProperty(new com.defano.wyldcard.runtime.context.ExecutionContext(), PartModel.PROP_LOC, new com.defano.hypertalk.ast.model.Value(mouseLoc)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2479/buggy-version/src.main.java.com.defano.wyldcard.parts.clipboard.CardPartTransferHandler.java", "BodyUseAPI": ["importedPart.getPartModel().setKnownProperty(com.defano.wyldcard.runtime.context.ExecutionContext,PartModel.PROP_LOC,com.defano.hypertalk.ast.model.Value)"], "Fixed commit": "c281795d9f5a78af17d1e9652e7c4b244c94ec65", "Url": "https://api.github.com/repos/defano/wyldcard", "Date": "2018-07-21T19:47:24Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (false == (cn.hutool.core.util.ModifierUtil.isStatic(field))) { this.propMap.put(field.getName(), createProp(field)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1152/buggy-version/hutool-core.src.main.java.cn.hutool.core.bean.BeanDesc.java", "BodyUseAPI": ["java.util.Map<java.lang.String, cn.hutool.core.bean.BeanDesc.PropDesc>.put(java.lang.String,cn.hutool.core.bean.BeanDesc.PropDesc)", "cn.hutool.core.bean.BeanDesc.createProp(java.lang.reflect.Field)", "java.lang.reflect.Field.getName()"], "Fixed commit": "176d2b90122011f8752be4735306397f58ba89ee", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2018-03-15T03:21:38Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(f.exists())) { f.createNewFile(); save(path); }else tasks = ((java.util.ArrayList<model.Task>) (ois.readObject()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1671/buggy-version/src.model.TaskList.java", "BodyUseAPI": ["java.io.File.createNewFile()"], "Fixed commit": "204c7b1407340b42dd71887f59c204738a89cbcc", "Url": "https://api.github.com/repos/BeastyBuffalos/Tskmgr2.0", "Date": "2018-04-02T17:18:03Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Tag.CONCATENATION.equalsText(ch.getTag())) { if ((loadInto.getDescription()) == null) { loadInto.setDescription(parseStringWithCustomFacts(ch)); }else { loadInto.getDescription().setValue(((loadInto.getDescription().getValue()) + (ch.getValue()))); } }else if (Tag.CONTINUATION.equalsText(ch.getTag())) { if ((loadInto.getDescription()) == null) { loadInto.setDescription(parseStringWithCustomFacts(ch)); }else { loadInto.getDescription().setValue((((loadInto.getDescription().getValue()) + \"\\n\") + (ch.getValue()))); } }else { unknownTag(ch, loadInto); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3964/buggy-version/src.main.java.org.gedcom4j.parser.IndividualAttributeParser.java", "BodyUseAPI": ["Tag.CONTINUATION.equalsText(ch.getTag())", "org.gedcom4j.parser.IndividualAttributeParser.parseStringWithCustomFacts(org.gedcom4j.model.StringTree)", "org.gedcom4j.model.StringTree.getTag()", "org.gedcom4j.parser.IndividualAttributeParser.setDescription(parseStringWithCustomFacts(ch))", "org.gedcom4j.model.StringTree.getValue()", "org.gedcom4j.parser.IndividualAttributeParser.unknownTag(org.gedcom4j.model.StringTree,org.gedcom4j.parser.IndividualAttributeParser)", "org.gedcom4j.model.StringTree.getValue()", "org.gedcom4j.parser.IndividualAttributeParser.setDescription(parseStringWithCustomFacts(ch))", "org.gedcom4j.parser.IndividualAttributeParser.parseStringWithCustomFacts(org.gedcom4j.model.StringTree)", "loadInto.getDescription().setValue(((loadInto.getDescription().getValue()) + (ch.getValue())))", "loadInto.getDescription().setValue((((loadInto.getDescription().getValue()) + \"\\n\") + (ch.getValue())))"], "Fixed commit": "82f16dfcfd5fe51c021d34f40530f27395d9a8b6", "Url": "https://api.github.com/repos/frizbog/gedcom4j", "Date": "2018-04-27T14:18:48Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sbn.getTag()) != null) { if ((((sbn.getId()) == 1) && ((sbn.getNotification().tickerText) == null)) && (sbn.getTag().equals(\"GroupSummary_MissedCall\"))) { show(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4561/buggy-version/app.src.main.java.com.notification.indication.NotificationMonitorService.java", "BodyUseAPI": ["android.service.notification.StatusBarNotification.getId()", "android.service.notification.StatusBarNotification.getNotification()", "sbn.getTag().equals(java.lang.String)", "android.service.notification.StatusBarNotification.getTag()"], "Fixed commit": "2396d81c016c4c2bd92de4fde8648ac24ecc4be5", "Url": "https://api.github.com/repos/mohit008/Notification-Indicator", "Date": "2018-07-13T07:03:15Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof java.math.BigInteger) { return java.lang.Long.valueOf(((java.math.BigInteger) (obj)).longValue()); }else if (obj instanceof java.lang.Float) { return java.lang.Double.valueOf(((java.lang.Float) (obj)).doubleValue()); }else if (obj instanceof java.sql.Timestamp) { return app.metatron.discovery.domain.dataprep.teddy.Util.sqlTimestampToJodaDateTime(((java.sql.Timestamp) (obj))); }else if (obj instanceof java.sql.Date) { long millis = ((java.sql.Date) (obj)).getTime(); return app.metatron.discovery.domain.dataprep.teddy.Util.sqlTimestampToJodaDateTime(new java.sql.Timestamp(millis)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8767/buggy-version/discovery-server.src.main.java.app.metatron.discovery.domain.dataprep.teddy.ColumnType.java", "BodyUseAPI": [], "Fixed commit": "e299dc332a373a3fa7c5e86a43a2137019b09449", "Url": "https://api.github.com/repos/metatron-app/metatron-discovery", "Date": "2018-10-11T08:56:36Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((request.getParameter(org.egov.egf.web.controller.expensebill.UpdateExpenseBillController.APPROVAL_DESIGNATION)) != null) && (!(request.getParameter(org.egov.egf.web.controller.expensebill.UpdateExpenseBillController.APPROVAL_DESIGNATION).isEmpty()))) apporverDesignation = java.lang.String.valueOf(request.getParameter(org.egov.egf.web.controller.expensebill.UpdateExpenseBillController.APPROVAL_DESIGNATION));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5103/buggy-version/egov.egov-egfweb.src.main.java.org.egov.egf.web.controller.expensebill.UpdateExpenseBillController.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "java.lang.String.valueOf(request.getParameter(org.egov.egf.web.controller.expensebill.UpdateExpenseBillController.APPROVAL_DESIGNATION))"], "Fixed commit": "b04a93cde3a959b6be7e8fcf69ff3f5c9ca3ff4a", "Url": "https://api.github.com/repos/egovernments/egov-coexistence", "Date": "2018-09-21T14:35:24Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.ep.config.Configuration.isDebug()) { java.lang.System.out.println((\"DEBUG:EAPA:loaderPath:\" + (url.toURI().getPath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2846/buggy-version/agent.src.main.java.com.ep.inst.FilterClassTransformer.java", "BodyUseAPI": [], "Fixed commit": "ea46539c9a927db49ebcbc11dfeb98a791ed45f6", "Url": "https://api.github.com/repos/ganludong112233/eapa", "Date": "2018-06-29T10:47:51Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.firmail.exception.type.CloudExceptionType.getByCode(data.getStatus())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (type != null) switch (type) { case CLOUD_NO_PERMISSION_EXCEPTION : throw new com.firmail.exception.NoPermissionException(type); case CLOUD_PARAMS_ERROR_EXCEPTION : throw new com.firmail.exception.ParamsErrorException(type); case CLOUD_PARAMS_INVALID_EXCEPTION : throw new com.firmail.exception.ParamsInvalidException(type); case CLOUD_SYSTEM_EXCEPTION : throw new java.lang.RuntimeException(data.getMessage()); default : break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4141/buggy-version/ois-server-demo.src.main.java.com.firmail.cloud.aspect.CloudAspect.java", "BodyUseAPI": [], "Fixed commit": "3cfcbcd8cb03d3989bf051b495945d0e1f8d8584", "Url": "https://api.github.com/repos/xxzhky/ois-mock", "Date": "2018-09-10T00:42:00Z"},
{"Line": "=>611", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mjr.extraplanets.Config.CANNED_FOOD) com.mjr.extraplanets.items.ExtraPlanets_Items.registerItem(com.mjr.extraplanets.items.ExtraPlanets_Items.CANNED_FOOD, com.mjr.extraplanets.items.ExtraPlanets_Items.CANNED_FOOD.getUnlocalizedName().substring(5));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/824/buggy-version/src.main.java.com.mjr.extraplanets.items.ExtraPlanets_Items.java", "BodyUseAPI": [], "Fixed commit": "e86ce83fc0bc8c0a3e1e33bedcd49aaf6f288a00", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-03-06T03:07:44Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.minecraft.util.JsonUtils.getString(json, \"value\").equals(\"canned_food\")) { if (com.mjr.extraplanets.Config.CANNED_FOOD) return () -> true; else return () -> false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/824/buggy-version/src.main.java.com.mjr.extraplanets.recipes.RecipeEnabledCondition.java", "BodyUseAPI": [], "Fixed commit": "e86ce83fc0bc8c0a3e1e33bedcd49aaf6f288a00", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-03-06T03:07:44Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((0 <= (model.getScore())) && ((model.getScore()) <= 1000)) { timer.setDelay(800); }else if ((1000 <= (model.getScore())) && ((model.getScore()) <= 2000)) { timer.setDelay(600); }else if ((2000 <= (model.getScore())) && ((model.getScore()) <= 3000)) { timer.setDelay(500); }else if ((3000 <= (model.getScore())) && ((model.getScore()) <= 3500)) { timer.setDelay(300); }else if (3500 <= (model.getScore())) { timer.setDelay(200); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2470/buggy-version/src.controller.TetrisController.java", "BodyUseAPI": ["controller.TetrisModel.getScore()", "controller.TetrisModel.getScore()", "controller.TetrisModel.getScore()", "controller.TetrisModel.getScore()", "controller.TetrisModel.getScore()", "controller.TetrisModel.getScore()", "controller.TetrisModel.getScore()"], "Fixed commit": "03e99a53feaf4cd17ded7851dd75501b0a4de60d", "Url": "https://api.github.com/repos/alcatrazzz806/tetris-war", "Date": "2018-01-06T14:05:55Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["raft.core.RaftNode.getRaftServer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((raftServer.getServerState()) == (RaftServer.NodeState.LEADER)) { logger.info(((\"ServerId=\" + (raftServer.getServerId())) + \"have been leader!\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7732/buggy-version/cheetah-raft.src.main.java.raft.core.RaftCore.java", "BodyUseAPI": ["raft.core.server.RaftServer.getServerId()", "org.apache.log4j.Logger.info(((\"ServerId=\" + (raftServer.getServerId())) + \"have been leader!\"))"], "Fixed commit": "f148f0fbadc1c33dfc4fc5f886e2f62b2aac382d", "Url": "https://api.github.com/repos/Ruan-Xin/cheetah", "Date": "2018-04-18T13:08:27Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cur.equals(one)) { oneClickable = true; }else if (cur.equals(two)) { twoClickable = true; }else if (cur.equals(three)) { threeClickable = true; }else if (cur.equals(four)) { fourClickable = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4376/buggy-version/app.src.main.java.com.example.kzh88.four_numbers_game.MainActivity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "f9674c5ac2f23dc9adc06b98a6fb755b2a6b8ed5", "Url": "https://api.github.com/repos/Adamkzh/four_numbers_game", "Date": "2018-03-01T08:54:08Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.config().get(DelphiPlugin.CODECOVERAGE_REPORT_KEY)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (coverageReport.isPresent()) { org.sonar.plugins.delphi.codecoverage.DelphiCodeCoverageParser coverageParser = new org.sonar.plugins.delphi.codecoverage.delphicodecoveragetool.DelphiCodeCoverageToolParser(new java.io.File(coverageReport.get()), delphiProjectHelper); coverageParser.parse(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2885/buggy-version/src.main.java.org.sonar.plugins.delphi.DelphiSensor.java", "BodyUseAPI": ["java.util.Optional<java.lang.String>.get()"], "Fixed commit": "43b6968cad006e3ecca85ea0891c1a465954b696", "Url": "https://api.github.com/repos/ekot1/SonarDelphi", "Date": "2018-03-04T21:41:00Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (windowMode.equals(net.bible.android.control.link.LinkControl.WINDOW_MODE_THIS)) { if (document == null) { document = defaultDocument; } windowControl.getActiveWindow().setSynchronised(false); currentPageManager.setCurrentDocumentAndKey(document, key); }else if (checkIfOpenLinksInDedicatedWindow()) { if (document == null) { windowControl.showLinkUsingDefaultBible(key); }else { windowControl.showLink(document, key); } }else { if (document == null) { document = defaultDocument; } currentPageManager.setCurrentDocumentAndKey(document, key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1645/buggy-version/and-bible.app.src.main.java.net.bible.android.control.link.LinkControl.java", "BodyUseAPI": [], "Fixed commit": "56dc5904df89daf0dbc65300c096250f6469eb2e", "Url": "https://api.github.com/repos/tuomas2/and-bible", "Date": "2018-05-01T19:18:33Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getAllUrls().getClass()) == (java.util.LinkedList.class)) { java.util.LinkedList<java.lang.String> newList = ((java.util.LinkedList) (getAllUrls())); for (java.lang.String l : newList) { toQuerry.add(l); } }else if ((getAllUrls().getClass()) == (java.util.ArrayList.class)) { toQuerry = ((java.util.ArrayList) (getAllUrls())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5725/buggy-version/src.main.java.Crawler.java", "BodyUseAPI": [], "Fixed commit": "3eeda3b73561617668c1d15b84e7efeeb03bb20e", "Url": "https://api.github.com/repos/StefanTod/tci-final", "Date": "2018-06-18T05:57:50Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null != list) { element = ((org.w3c.dom.Element) (list.item(0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8831/buggy-version/src.main.java.com.longyg.backend.adaptation.pm.PmbCommonParser.java", "BodyUseAPI": ["org.w3c.dom.NodeList.item(int)"], "Fixed commit": "beb3e98613cfccc9b754a08c01cbcba144103963", "Url": "https://api.github.com/repos/longyg/ars-server", "Date": "2018-05-07T09:27:24Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (null == element) { throw new java.lang.Exception(\"Invalid pmb.common adaptation\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8831/buggy-version/src.main.java.com.longyg.backend.adaptation.pm.PmbCommonParser.java", "BodyUseAPI": [], "Fixed commit": "beb3e98613cfccc9b754a08c01cbcba144103963", "Url": "https://api.github.com/repos/longyg/ars-server", "Date": "2018-05-07T09:27:24Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (null == element) { throw new java.lang.Exception(\"Invalid man.common adaptation\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8831/buggy-version/src.main.java.com.longyg.backend.adaptation.fm.ManCommonParser.java", "BodyUseAPI": [], "Fixed commit": "beb3e98613cfccc9b754a08c01cbcba144103963", "Url": "https://api.github.com/repos/longyg/ars-server", "Date": "2018-05-07T09:27:24Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Document.getElementsByTagName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == list) { list = doc.getElementsByTagName(\"base:Adaptation\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8831/buggy-version/src.main.java.com.longyg.backend.adaptation.fm.ManCommonParser.java", "BodyUseAPI": [], "Fixed commit": "beb3e98613cfccc9b754a08c01cbcba144103963", "Url": "https://api.github.com/repos/longyg/ars-server", "Date": "2018-05-07T09:27:24Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null != list) { element = ((org.w3c.dom.Element) (list.item(0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8831/buggy-version/src.main.java.com.longyg.backend.adaptation.fm.ManCommonParser.java", "BodyUseAPI": ["org.w3c.dom.NodeList.item(int)"], "Fixed commit": "beb3e98613cfccc9b754a08c01cbcba144103963", "Url": "https://api.github.com/repos/longyg/ars-server", "Date": "2018-05-07T09:27:24Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o instanceof java.lang.Byte[]) { java.lang.Byte[] source = ((java.lang.Byte[]) (o)); byte[] bytes = new byte[source.length]; for (int i = 0; i < (source.length); i++) { if ((source[i]) == null) { throw new java.lang.NullPointerException(\"source array may not contain nulls\"); } bytes[i] = source[i]; } return org.apache.commons.codec.binary.Base64.encodeBase64String(bytes); }else { return org.apache.commons.codec.binary.Base64.encodeBase64String(((byte[]) (o))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/365/buggy-version/src.main.java.microsoft.exchange.webservices.data.misc.IFunctions.java", "BodyUseAPI": [], "Fixed commit": "932eaf37bf58d569ec1cd1c9c971050a2c494289", "Url": "https://api.github.com/repos/yasoonOfficial/ews-java-api", "Date": "2018-05-03T09:46:57Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (username == null) { throw new org.neusoft.neubbs.exception.ParamsErrorException(org.neusoft.neubbs.constant.api.ApiMessage.PARAM_ERROR).log(LogWarnEnum.VS2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7909/buggy-version/src.main.java.org.neusoft.neubbs.service.impl.ValidationServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "b6f1c1251b45d5907e261746220c6e6575ff7a27", "Url": "https://api.github.com/repos/nuitcoder/neubbs", "Date": "2018-02-15T09:01:26Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (terminDatum.isAfter(java.time.LocalDate.now())) { model.setDatum(terminDatum); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5098/buggy-version/src.fachlogik.Controller.java", "BodyUseAPI": ["fachlogik.FahrschulModel.setDatum(java.time.LocalDate)"], "Fixed commit": "e05a0f57338e6d5524010e62e100c1d7479ac480", "Url": "https://api.github.com/repos/BatPat/SWT-B---Gruppe13", "Date": "2018-05-19T14:56:53Z"},
{"Line": "=>642", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kuyun.upms.rpc.service.impl.UpmsApiServiceImpl.getRole(upmsUserCompany.getCompanyId(),RoleEnum.CUSTOMER_TICKETCREATE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (role != null) { assignCustomerRole(upmsUser, role); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9496/buggy-version/kuyun-upms.kuyun-upms-rpc-service.src.main.java.com.kuyun.upms.rpc.service.impl.UpmsApiServiceImpl.java", "BodyUseAPI": ["com.kuyun.upms.rpc.service.impl.UpmsApiServiceImpl.assignCustomerRole(com.kuyun.upms.rpc.service.impl.UpmsUser,com.kuyun.upms.rpc.service.impl.UpmsRole)"], "Fixed commit": "146dc519ce97d76e52beb57ae7d216d010242738", "Url": "https://api.github.com/repos/bobshi2005/kuyun", "Date": "2018-06-04T01:04:43Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.engining.pcx.cc.infrastructure.shared.model.CactSubAcct.getEndDayBal()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((account.paymentMethod) == (net.engining.pcx.cc.param.model.enums.PaymentMethod.PSV)) || ((account.paymentMethod) == (net.engining.pcx.cc.param.model.enums.PaymentMethod.PSZ))) && ((inteBaseAmount.compareTo(java.math.BigDecimal.ZERO)) != 0)) { inteBaseAmount = cactAccount.getTotalLoanPrincipalAmt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/912/buggy-version/cc-batch-component.src.main.java.net.engining.pcx.cc.batch.cc1800.Cc1800P22InterestReceivable.java", "BodyUseAPI": [], "Fixed commit": "2797ac53a1f36679a1f61abf6a779bfc13207fab", "Url": "https://api.github.com/repos/crazythinking/cac", "Date": "2018-10-11T03:07:47Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((cactSubAcct.getStmtHist()) == 0) && (\"LBAL\".equals(cactSubAcct.getSubAcctType()))) && (((account.paymentMethod) == (net.engining.pcx.cc.param.model.enums.PaymentMethod.PSV)) || ((account.paymentMethod) == (net.engining.pcx.cc.param.model.enums.PaymentMethod.PSZ)))) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/912/buggy-version/cc-batch-component.src.main.java.net.engining.pcx.cc.batch.cc1800.Cc1800P22InterestReceivable.java", "BodyUseAPI": [], "Fixed commit": "2797ac53a1f36679a1f61abf6a779bfc13207fab", "Url": "https://api.github.com/repos/crazythinking/cac", "Date": "2018-10-11T03:07:47Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((candidateCheese.getCheeseId()) == id) theCheese = candidateCheese;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6259/buggy-version/src.main.java.org.launchcode.cheesemvc.models.CheeseData.java", "BodyUseAPI": [], "Fixed commit": "801f8639c5597de8f62fb32a62c88054e3459fc2", "Url": "https://api.github.com/repos/krgirard33/cheesemvc-java", "Date": "2018-06-05T00:48:43Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cryptocurrency.liam.symbilityintersectcodechallenge.SplashActivity.getSupportActionBar()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (actionBar != null) actionBar.hide();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7575/buggy-version/app.src.main.java.com.cryptocurrency.liam.symbilityintersectcodechallenge.SplashActivity.java", "BodyUseAPI": ["android.support.v7.app.ActionBar.hide()"], "Fixed commit": "182fb5e0d350b30a408368b12c1de76e2b54e24c", "Url": "https://api.github.com/repos/LiamLuUW/SymbilityIntersect-CodeChallenge1", "Date": "2018-02-07T00:34:34Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((menu.getKey()) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4248/buggy-version/ins-services.svc-service-wechat.src.main.java.cn.com.yikangbao.service.wechat.localMenu.impl.LocalWechatMenuServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "39ecf2ec64432a0249bde11cb9883923f37be6c7", "Url": "https://api.github.com/repos/juyecys/ykb-web", "Date": "2018-03-19T08:40:12Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getActivity().isFinishing()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7454/buggy-version/raveandroid.src.main.java.com.flutterwave.raveandroid.card.CardFragment.java", "BodyUseAPI": [], "Fixed commit": "7369426b2d7d13fb68a3b6cc7638435cd2640f2e", "Url": "https://api.github.com/repos/Flutterwave/rave-android", "Date": "2018-03-05T16:58:03Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getActivity().isFinishing()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7454/buggy-version/raveandroid.src.main.java.com.flutterwave.raveandroid.account.AccountFragment.java", "BodyUseAPI": [], "Fixed commit": "7369426b2d7d13fb68a3b6cc7638435cd2640f2e", "Url": "https://api.github.com/repos/Flutterwave/rave-android", "Date": "2018-03-05T16:58:03Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((session.getAttribute(\"account\")) == null) { returnString = \"redirect:/user/connexion\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4863/buggy-version/src.main.java.com.tact.eshop.controller.CustomerController.java", "BodyUseAPI": [], "Fixed commit": "565147d62000de6749c02fad02b348f53368880d", "Url": "https://api.github.com/repos/Laufreyd/eShop", "Date": "2018-01-03T01:33:31Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cur == null) { empi.Application.linkedList = null; return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5636/buggy-version/src.main.java.empi.controllers.MainController.java", "BodyUseAPI": [], "Fixed commit": "b437b67fa82689d7dbcacff3cf350c105616942e", "Url": "https://api.github.com/repos/zefiber/springdockerk8s", "Date": "2018-05-15T19:39:03Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (login != null) { cz.softinel.sis.role.RoleHelper.prepareUserPermissions(login.getUser()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5551/buggy-version/src.main.java.cz.softinel.sis.login.blo.LoginLogicImpl.java", "BodyUseAPI": ["cz.softinel.sis.role.RoleHelper.prepareUserPermissions(login.getUser())", "cz.softinel.sis.login.Login.getUser()"], "Fixed commit": "b037520d809864735288072597a6c20d1a170b01", "Url": "https://api.github.com/repos/retra/retra-system", "Date": "2018-05-19T14:25:16Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (value != null) { append(key, op, value.toString()); }else { append(key, op, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1734/buggy-version/bugu-mongo-core.src.main.java.com.bugull.mongo.BuguQuery.java", "BodyUseAPI": ["java.lang.Object.toString()", "com.bugull.mongo.BuguQuery<T>.append(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "c26cada8fb634edfd897e37a0ed1f771ff6a75fc", "Url": "https://api.github.com/repos/xbwen/bugu-mongo", "Date": "2018-01-15T11:38:57Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (endKey != startKey) packet.setEndKey(endKey);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6284/buggy-version/xap-core.xap-datagrid.src.main.java.com.gigaspaces.internal.cluster.node.impl.packets.BatchReplicatedDataPacket.java", "BodyUseAPI": ["com.gigaspaces.internal.cluster.node.impl.backlog.globalorder.GlobalOrderDiscardedReplicationPacket.setEndKey(long)"], "Fixed commit": "05600481bbc84f158e911e862b1eb43a6923286f", "Url": "https://api.github.com/repos/xap/xap", "Date": "2018-09-02T08:48:43Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Bukkit.getPlayer(resident1.getName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (player1 == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3149/buggy-version/src.main.java.com.danielrharris.townywars.listeners.EnemyWalkWWar.java", "BodyUseAPI": [], "Fixed commit": "d0e638b17726fcc46d1891066ce25f401a602e57", "Url": "https://api.github.com/repos/MikeStavrs/TownyWarsMCC", "Date": "2018-03-14T20:55:17Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["st.malike.message.summary.service.MessageService.messageSummary(java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (messageSummary != null) { jSONResponse.setCount(messageSummary.size()); }else { jSONResponse.setCount(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5151/buggy-version/message-summary.src.main.java.st.malike.message.summary.http.SummaryController.java", "BodyUseAPI": ["st.malike.message.summary.util.JSONResponse.setCount(int)", "java.util.List<java.util.Map>.size()"], "Fixed commit": "9abbd4618f9d6788710fc23b8cd42597c17e08d1", "Url": "https://api.github.com/repos/malike/centralized-configuration-mangement", "Date": "2018-07-23T23:42:12Z"},
{"Line": "=>813", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (piece.isValid()) { com.turn.ttorrent.common.protocol.PeerMessage have = PeerMessage.HaveMessage.craft(piece.getIndex()); for (com.turn.ttorrent.client.peer.SharingPeer remote : getConnectedPeers()) { if (remote.getTorrent().getHexInfoHash().equals(torrentHash)) remote.send(have); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5527/buggy-version/src.main.java.com.turn.ttorrent.client.Client.java", "BodyUseAPI": ["PeerMessage.HaveMessage.craft(piece.getIndex())", "com.turn.ttorrent.client.Piece.getIndex()"], "Fixed commit": "bc94e79dad4b7b7838a36bcda938a65c2351e8b0", "Url": "https://api.github.com/repos/JetBrains/ttorrent-lib", "Date": "2018-01-24T15:05:06Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result) { final com.kalessil.phpStorm.phpInspectionsEA.utils.AssignmentExpression assignment = ((com.kalessil.phpStorm.phpInspectionsEA.utils.AssignmentExpression) (expression)); final com.intellij.psi.PsiElement container = assignment.getVariable(); final com.intellij.psi.PsiElement value = assignment.getValue(); if ((container != null) && (value != null)) { com.intellij.psi.PsiElement current = container; while ((current != null) && (current != value)) { if (result = (current.getNode().getElementType()) == (com.jetbrains.php.lang.lexer.PhpTokenTypes.opASGN)) { break; } current = current.getNextSibling(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4524/buggy-version/src.main.java.com.kalessil.phpStorm.phpInspectionsEA.utils.OpenapiTypesUtil.java", "BodyUseAPI": [], "Fixed commit": "10c44a4e9e0f5b20f58521fdc18ed7066582e05d", "Url": "https://api.github.com/repos/kalessil/phpinspectionsea", "Date": "2018-04-28T17:56:04Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (content.equals(\"null\")) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1223/buggy-version/app.src.main.java.org.communiquons.android.comunic.client.data.models.Post.java", "BodyUseAPI": [], "Fixed commit": "8d4164b18187f3cb5c59bfddece3fa9afe7736ec", "Url": "https://api.github.com/repos/pierre42100/ComunicAndroid", "Date": "2018-05-02T17:13:58Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((content) == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1223/buggy-version/app.src.main.java.org.communiquons.android.comunic.client.data.models.Post.java", "BodyUseAPI": [], "Fixed commit": "8d4164b18187f3cb5c59bfddece3fa9afe7736ec", "Url": "https://api.github.com/repos/pierre42100/ComunicAndroid", "Date": "2018-05-02T17:13:58Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i >= (task.cluster3.getBitSet().words.length)) gpuRunner.tripartitions3[currentGPU][(((((speciesWordLength) - i) - 1) * ((int) (phylonet.coalescent.TurnTaskToScores.workGroupSize))) + (tripCounter))] = 0; else gpuRunner.tripartitions3[currentGPU][(((((speciesWordLength) - i) - 1) * ((int) (phylonet.coalescent.TurnTaskToScores.workGroupSize))) + (tripCounter))] = task.cluster3.getBitSet().words[i];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7917/buggy-version/main.phylonet.coalescent.TurnTaskToScores.java", "BodyUseAPI": ["task.cluster3.getBitSet()"], "Fixed commit": "b7e3e6550be276542dc76bb6a6776114bcd32b23", "Url": "https://api.github.com/repos/smirarab/ASTRAL", "Date": "2018-03-30T03:03:53Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i >= (task.cluster1.getBitSet().words.length)) gpuRunner.tripartitions1[currentGPU][(((((speciesWordLength) - i) - 1) * ((int) (phylonet.coalescent.TurnTaskToScores.workGroupSize))) + (tripCounter))] = 0; else gpuRunner.tripartitions1[currentGPU][(((((speciesWordLength) - i) - 1) * ((int) (phylonet.coalescent.TurnTaskToScores.workGroupSize))) + (tripCounter))] = task.cluster1.getBitSet().words[i];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7917/buggy-version/main.phylonet.coalescent.TurnTaskToScores.java", "BodyUseAPI": ["task.cluster1.getBitSet()"], "Fixed commit": "b7e3e6550be276542dc76bb6a6776114bcd32b23", "Url": "https://api.github.com/repos/smirarab/ASTRAL", "Date": "2018-03-30T03:03:53Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i >= (task.cluster2.getBitSet().words.length)) gpuRunner.tripartitions2[currentGPU][(((((speciesWordLength) - i) - 1) * ((int) (phylonet.coalescent.TurnTaskToScores.workGroupSize))) + (tripCounter))] = 0; else gpuRunner.tripartitions2[currentGPU][(((((speciesWordLength) - i) - 1) * ((int) (phylonet.coalescent.TurnTaskToScores.workGroupSize))) + (tripCounter))] = task.cluster2.getBitSet().words[i];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7917/buggy-version/main.phylonet.coalescent.TurnTaskToScores.java", "BodyUseAPI": ["task.cluster2.getBitSet()"], "Fixed commit": "b7e3e6550be276542dc76bb6a6776114bcd32b23", "Url": "https://api.github.com/repos/smirarab/ASTRAL", "Date": "2018-03-30T03:03:53Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (allFavMovies != null) mData.addAll(allFavMovies);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4119/buggy-version/app.src.main.java.com.example.popmovapp.MainActivity.java", "BodyUseAPI": ["java.util.ArrayList<com.example.popmovapp.MovieEntry>.addAll(java.util.ArrayList<com.example.popmovapp.MovieEntry>)"], "Fixed commit": "2decc2abc03b1969ee0ccf28111f1621d3631c9b", "Url": "https://api.github.com/repos/Xiad32/PopMovApp", "Date": "2018-08-04T17:45:17Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(testMode)) for (int x = 0; x < (de.robmroi.fourWins.Service.rows); x++) fields.fields[x][0].setText(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7539/buggy-version/src.de.robmroi.fourWins.Service.java", "BodyUseAPI": [], "Fixed commit": "f8f1c2cb71436ed5ca7d67f591adf5ac5e9277ab", "Url": "https://api.github.com/repos/rfeoi/4-Gewinnt", "Date": "2018-07-30T16:06:10Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!readDependencies) { if (wsdlReader instanceof com.ibm.wsdl.xml.WSDLReaderImpl) { ((com.ibm.wsdl.xml.WSDLReaderImpl) (wsdlReader)).setIgnoreSchemaContent(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2620/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.utils.APIMWSDLReader.java", "BodyUseAPI": [], "Fixed commit": "e38f3c483fa88432a8a2af159732fda50ef33f6a", "Url": "https://api.github.com/repos/malinthaprasan/carbon-apimgt", "Date": "2018-06-15T13:00:53Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ch = nextChar()) == '>') { ch = nextChar(); return mkToken(it.cnr.istc.core.Lexer.Symbol.IMPLICATION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7157/buggy-version/src.core.classes.it.cnr.istc.core.Lexer.java", "BodyUseAPI": [], "Fixed commit": "3b9670f7de0bb8616f63b3fc69ab154f79f5a7d8", "Url": "https://api.github.com/repos/riccardodebenedictis/Betelgeuse", "Date": "2018-01-16T10:50:22Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(playerIn.isCreative())) { heldItem.shrink(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4267/buggy-version/src.main.java.com.mrcrayfish.furniture.blocks.BlockCouch.java", "BodyUseAPI": [], "Fixed commit": "9e0ca6c6e12be663432ea76dbcaaca0b31e0cf48", "Url": "https://api.github.com/repos/BlueAgent/MrCrayfishFurnitureMod", "Date": "2018-04-27T22:51:18Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(playerIn.isCreative())) { heldItem.shrink(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4267/buggy-version/src.main.java.com.mrcrayfish.furniture.blocks.BlockCouch.java", "BodyUseAPI": [], "Fixed commit": "9e0ca6c6e12be663432ea76dbcaaca0b31e0cf48", "Url": "https://api.github.com/repos/BlueAgent/MrCrayfishFurnitureMod", "Date": "2018-04-27T22:51:18Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mConnection) != null) { mConnection.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8318/buggy-version/download.src.main.java.com.caij.download.CallExecuteObservable.java", "BodyUseAPI": [], "Fixed commit": "15876ed1f588aa6829a7e23ea819fdd9b1e89b75", "Url": "https://api.github.com/repos/Caij/RxDownload", "Date": "2018-06-13T03:02:39Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list != null) com.example.fabiandrees.list.ExpandableListDataPump.categoryList = list; else com.example.fabiandrees.list.ExpandableListDataPump.categoryList = new java.util.ArrayList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2845/buggy-version/app.src.main.java.com.example.fabiandrees.list.ExpandableListDataPump.java", "BodyUseAPI": [], "Fixed commit": "f7e9c5a57d7c0d0d59ea50296e673179ee648b57", "Url": "https://api.github.com/repos/TheGreyDust/Flashcards", "Date": "2018-07-09T20:58:36Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.fabiandrees.list.ExpandableListDataPump.getData()) == null) com.example.fabiandrees.list.ExpandableListDataPump.setCategoryList(com.example.fabiandrees.util.PersistenceManager.open(getFilesDir()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2845/buggy-version/app.src.main.java.com.example.fabiandrees.screens.CardAdministration.java", "BodyUseAPI": [], "Fixed commit": "f7e9c5a57d7c0d0d59ea50296e673179ee648b57", "Url": "https://api.github.com/repos/TheGreyDust/Flashcards", "Date": "2018-07-09T20:58:36Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.entity.Item.getItemStack()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (ru.main.InventoryHelper.hasEnchants(stack)) { ru.enchants.EnchantmentManager.enchantItemAsTreasure(stack, 75, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6380/buggy-version/src.ru.main.Handler.java", "BodyUseAPI": ["ru.enchants.EnchantmentManager.enchantItemAsTreasure(org.bukkit.inventory.ItemStack,int,int)"], "Fixed commit": "dc3c2e86246a49fa6b5a587ec309aab8b14da85a", "Url": "https://api.github.com/repos/GreenBudgie/LitePlugin", "Date": "2018-03-26T19:45:49Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((position) == (contentLength)) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6859/buggy-version/src.main.java.htsjdk.samtools.seekablestream.SeekableHTTPStream.java", "BodyUseAPI": [], "Fixed commit": "68980c51f0cff051eaea97d5f0f8e5312a870f20", "Url": "https://api.github.com/repos/dtitov/ega-htsjdk", "Date": "2018-09-27T09:47:47Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (channel.getId().equals(groupChannel.getId())) { final io.chatcamp.sdk.Message m = message; final io.chatcamp.app.ConversationMessage conversationMessage = new io.chatcamp.app.ConversationMessage(m); messageMessagesListAdapter.addToStart(conversationMessage, true); android.widget.Toast.makeText(getApplicationContext(), m.getText(), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5110/buggy-version/app.src.main.java.io.chatcamp.app.ConversationActivity.java", "BodyUseAPI": [], "Fixed commit": "ac59daa6c2232569e5ed897e371bf30d5e5c69fd", "Url": "https://api.github.com/repos/ChatCamp/ChatCamp-Android-Example", "Date": "2018-03-12T11:25:58Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.zimbra.qa.selenium.framework.util.ConfigProperties.getStringProperty(\"browser\").contains(\"msedge\")) { locator = \"css=input#ZmGrantRightsDialog_name\"; }else { locator = \"css=textarea#ZmGrantRightsDialog_name\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/339/buggy-version/src.java.com.zimbra.qa.selenium.projects.ajax.pages.DialogDelegate.java", "BodyUseAPI": [], "Fixed commit": "ef1fc1c2f6ba87760a4ac1e0dfebdd84c74c97b0", "Url": "https://api.github.com/repos/Zimbra/zm-selenium", "Date": "2018-03-13T11:15:31Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.optJSONArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (authors != null) { for (int j = 0; j < (authors.length()); j++) { java.lang.String author = authors.getString(j); authorNames.append(author); if (j != ((authors.length()) - 1)) { authorNames.append(\", \"); } } }else { authorNames.append(\"N/A\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8353/buggy-version/app.src.main.java.com.nickwelna.booklisting.QueryUtils.java", "BodyUseAPI": ["org.json.JSONArray.length()", "org.json.JSONArray.getString(int)", "org.json.JSONArray.length()"], "Fixed commit": "309cb99cd54e5d704978263a4ff23fd6aaf82c27", "Url": "https://api.github.com/repos/welnanick/Book-Listing", "Date": "2018-01-18T19:04:25Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((controller.getLocationSelector()) == null) && (getElm().isOccupied())) && ((getElm().getOccupyingUnit()) instanceof model.unit.building.StartOfTurnEffectBuilding)) { model.unit.building.StartOfTurnEffectBuilding building = ((model.unit.building.StartOfTurnEffectBuilding) (getElm().getOccupyingUnit())); java.util.List<model.board.Tile> cloud = building.getEffect().cloud.translate(getElm().getPoint()).toTileSet(game.board); g2d.setColor(view.gui.panel.GamePanel.SUMMON_COLOR); g2d.setStroke(new java.awt.BasicStroke(2)); view.gui.image.ImageIndex.trace(cloud, this, g2d); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/982/buggy-version/src.view.gui.panel.GamePanel.java", "BodyUseAPI": [], "Fixed commit": "40eb6a72d4e0fb2bdaa4c789433628889431511b", "Url": "https://api.github.com/repos/Mshnik/Fina", "Date": "2018-09-03T03:40:43Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!hasValidArguments) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8628/buggy-version/src.main.java.com.bean00.helpers.ArgParser.java", "BodyUseAPI": [], "Fixed commit": "6d6166ee641d2e8f12880395f35479f0cc4d7a34", "Url": "https://api.github.com/repos/bean00/http-server", "Date": "2018-02-15T17:47:24Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.util.UUID, java.util.Set<java.lang.Object>>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (valueSet != null) { for (java.lang.Object value : valueSet) { normalizedPropertyValues.put(propertyTypeId, com.openlattice.postgres.JsonDeserializer.validateFormatAndNormalize(dataType, propertyTypeId, value)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3084/buggy-version/src.main.java.com.openlattice.postgres.JsonDeserializer.java", "BodyUseAPI": [], "Fixed commit": "23475ac44975d12abc64c5ca0aef1a6b1ba3bebb", "Url": "https://api.github.com/repos/openlattice/conductor-client", "Date": "2018-08-16T01:53:41Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(world.isRemote)) { net.minecraftforge.common.util.BlockSnapshot blockSnapshot = net.minecraftforge.common.util.BlockSnapshot.getBlockSnapshot(world, voidPos); if (net.minecraftforge.event.ForgeEventFactory.onPlayerBlockPlace(player, blockSnapshot, EnumFacing.UP, EnumHand.MAIN_HAND).isCanceled()) { return false; } net.minecraftforge.event.world.BlockEvent.BreakEvent e = new net.minecraftforge.event.world.BlockEvent.BreakEvent(world, voidPos, currentBlock, player); if (MinecraftForge.EVENT_BUS.post(e)) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2081/buggy-version/src.main.java.com.direwolf20.buildinggadgets.items.DestructionTool.java", "BodyUseAPI": ["net.minecraftforge.common.util.BlockSnapshot.getBlockSnapshot(net.minecraft.world.World,net.minecraft.util.math.BlockPos)"], "Fixed commit": "c549beee50a2107659dc1f827bd27bfe98689260", "Url": "https://api.github.com/repos/Direwolf20-MC/BuildingGadgets", "Date": "2018-10-29T23:22:56Z"},
{"Line": "=>1344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node != null) { if ((node.tag) == (tt.tagLayer)) { lexer.badLayout |= org.w3c.tidy.Report.USING_LAYER; }else if ((node.tag) == (tt.tagSpacer)) { lexer.badLayout |= org.w3c.tidy.Report.USING_SPACER; }else if ((node.tag) == (tt.tagNobr)) { lexer.badLayout |= org.w3c.tidy.Report.USING_NOBR; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5758/buggy-version/src.main.java.org.w3c.tidy.Report.java", "BodyUseAPI": [], "Fixed commit": "a176c7be330f71a4a8333e6fec6dcc2c8e3381b0", "Url": "https://api.github.com/repos/jtidy/jtidy", "Date": "2018-02-25T05:08:55Z"},
{"Line": "=>750", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (lexer != null) { lexer.errout.println(e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5758/buggy-version/src.main.java.org.w3c.tidy.Report.java", "BodyUseAPI": ["lexer.errout.println(java.lang.String)"], "Fixed commit": "a176c7be330f71a4a8333e6fec6dcc2c8e3381b0", "Url": "https://api.github.com/repos/jtidy/jtidy", "Date": "2018-02-25T05:08:55Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((temp.length()) > (currentMax.length())) currentMax = temp.toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6086/buggy-version/src.leetcode.LongestNonRepeatingSubstring_3.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()"], "Fixed commit": "c98e8694c95575e60ace4d5859c9a1f5ea0423ea", "Url": "https://api.github.com/repos/nanofaroque/Life-coding", "Date": "2018-10-18T21:34:29Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lva_addToPrevention) { fileTree.classes.TreeSingleton.getInstance().getDuplicateOperationsPrevention().putCreated(iob_command.gob_file.toPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2625/buggy-version/src.main.java.threads.classes.FileManagerThreadControl.java", "BodyUseAPI": [], "Fixed commit": "b4d469163ef08fa7998dd02506f38fec198b0d98", "Url": "https://api.github.com/repos/Alexander-Lukacs/VFS_GUI", "Date": "2018-03-13T13:44:16Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(contestantRatingMapModel.rating.equals(null))) { validateRatings.add(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7649/buggy-version/sacijudge.app.src.main.java.com.ijudge.sacijudge.views.CriteriaRecyclerViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "7b45fe332a5863cb44460297384c521e9542d933", "Url": "https://api.github.com/repos/CHEEPEE/SacIjudge", "Date": "2018-10-08T13:51:04Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (listValueObj.has(\"name\")) { value = listValueObj.getString(\"name\"); }else if (listValueObj.has(\"value\")) { value = listValueObj.getString(\"value\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7766/buggy-version/src.com.ppm.integration.agilesdk.connector.jira.model.JIRAFieldInfo.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.has(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "6c2d3bdb63fb29c41728ce450865e3848b2d3406", "Url": "https://api.github.com/repos/MicroFocus/ppm-jira-connector", "Date": "2018-09-07T07:49:45Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((commentRepository.findOne(c1).getResponses()) != null) { if (commentRepository.findOne(c1).getResponses().contains(idComment)) { com.conferencias.tfg.domain.Comment aux = commentRepository.findOne(c1); java.util.List<java.lang.String> responses = aux.getResponses(); responses.remove(c1); commentRepository.save(aux); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9641/buggy-version/src.main.java.com.conferencias.tfg.controller.Comments.java", "BodyUseAPI": ["com.conferencias.tfg.repository.CommentRepository.findOne(java.lang.String)", "commentRepository.findOne(c1).getResponses().contains(java.lang.String)", "commentRepository.findOne(c1).getResponses()", "com.conferencias.tfg.repository.CommentRepository.findOne(java.lang.String)", "java.util.List<java.lang.String>.remove(java.lang.String)", "com.conferencias.tfg.repository.CommentRepository.save(com.conferencias.tfg.domain.Comment)"], "Fixed commit": "0694d2f052e551b8c68475d31caa47861c96c9b3", "Url": "https://api.github.com/repos/Congresy/BackendAPI", "Date": "2018-08-31T13:12:44Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.toRadians(Robot.gyro.getYaw())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (robotAngle < 0) { robotAngle += 2 * (java.lang.Math.PI); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/536/buggy-version/src.main.java.org.team1540.robot2018.motion.FollowProfile.java", "BodyUseAPI": [], "Fixed commit": "ddaa71a9f7893f04248b0c6cee67bd6b8ad4ff35", "Url": "https://api.github.com/repos/flamingchickens1540/pandora-titan-2018", "Date": "2018-03-16T23:18:54Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<android.hardware.usb.UsbDevice>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (device.getManufacturerName().contains(\"arduino\")) customTable.addProduct(device.getVendorId(), device.getProductId(), com.hoho.android.usbserial.driver.CdcAcmSerialDriver.class);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1023/buggy-version/app.src.main.java.com.general.mediaplayer.blossom.UsbSerialActivity.java", "BodyUseAPI": ["android.hardware.usb.UsbDevice.getVendorId()", "com.hoho.android.usbserial.driver.ProbeTable.addProduct(device.getVendorId(),device.getProductId(),java.lang.Class)", "android.hardware.usb.UsbDevice.getProductId()"], "Fixed commit": "96b5e4acd6b464ed4ee149a38b34bfa7a4777bed", "Url": "https://api.github.com/repos/codeatena/Blossom", "Date": "2018-02-21T15:33:14Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.altenerding.biber.pinkie.business.team.entity.Team.getImage()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (image != null) { em.merge(image); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6430/buggy-version/src.main.java.de.altenerding.biber.pinkie.business.team.control.TeamProcessor.java", "BodyUseAPI": ["javax.persistence.EntityManager.merge(de.altenerding.biber.pinkie.business.file.entity.Image)"], "Fixed commit": "19c2ed8fe7debebe6dc537f6de40e8e04d53f3ef", "Url": "https://api.github.com/repos/AlexanderPraegla/Pinkie", "Date": "2018-05-10T17:03:28Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((amount.signum()) < 0) { return account.getMoney(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8366/buggy-version/src.main.java.com.revolut.interview.Bank.java", "BodyUseAPI": [], "Fixed commit": "75b74e29ff28083fcc5d2ab545ab6f304113dcfe", "Url": "https://api.github.com/repos/QIvan/revolut", "Date": "2018-01-11T20:53:58Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userRepository.findByUsername(newUser.getUsername())) != null) { return com.jyt.demo.jwtdemo.Package.ResultVOUtil.error(104, \"USER NAME EXISTS\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4851/buggy-version/backend.src.main.java.com.jyt.demo.jwtdemo.controller.UserController.java", "BodyUseAPI": [], "Fixed commit": "dc483952b778bba60e7ac70b9657446ab6df36cb", "Url": "https://api.github.com/repos/Hanxxx/jwt-demo-java", "Date": "2018-09-05T02:07:05Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((intermediateTable_) != null) && ((intermediateTable_.getModel()) != null)) && ((intermediateTable_.getModel()) instanceof edu.vt.beacon.editor.simulation.IntermediateTableModel)) { java.lang.Object[][] oldData = ((edu.vt.beacon.editor.simulation.IntermediateTableModel) (intermediateTable_.getModel())).getData(); int n = oldData.length; for (int i = 0; i < n; i++) { if (!(oldData[i][2].equals('x'))) { preExistingSettings.put(((java.lang.String) (oldData[i][0])), ((java.lang.Boolean) (oldData[i][2]))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7603/buggy-version/Beacon.src.edu.vt.beacon.editor.simulation.SimulationPanel.java", "BodyUseAPI": ["edu.vt.beacon.editor.simulation.IntermediateTable.getModel()", "((edu.vt.beacon.editor.simulation.IntermediateTableModel) (intermediateTable_.getModel())).getData()"], "Fixed commit": "3d458a329600d5d4cbf75ea7ab0a6393604f81dc", "Url": "https://api.github.com/repos/marakeby/beacon", "Date": "2018-05-02T13:26:51Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (preExistingSettings.containsKey(data[i][0])) data[i][2] = preExistingSettings.get(data[i][0]); else data[i][2] = 'x';", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7603/buggy-version/Beacon.src.edu.vt.beacon.editor.simulation.SimulationPanel.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Boolean>.get(java.lang.Object)"], "Fixed commit": "3d458a329600d5d4cbf75ea7ab0a6393604f81dc", "Url": "https://api.github.com/repos/marakeby/beacon", "Date": "2018-05-02T13:26:51Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.FileInputStream.skip(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (acutalOff != offset) { java.lang.System.out.println(\"bad offset from client\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7287/buggy-version/Slave.vfs.func.Slave.java", "BodyUseAPI": [], "Fixed commit": "89c28ea3114b19e1ba9a86852db11ce282cb16f6", "Url": "https://api.github.com/repos/luoPATHodan/vfs", "Date": "2018-01-09T04:20:44Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.bcel.classfile.AnnotationEntry.getAnnotationType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type.equals(edu.umd.cs.findbugs.ba.CheckReturnAnnotationDatabase.CHECK_RETURN_NULL_ERRORPRONE.getClassName())) { return edu.umd.cs.findbugs.ba.CheckReturnValueAnnotation.createFor(When.ALWAYS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4102/buggy-version/spotbugs.src.main.java.edu.umd.cs.findbugs.ba.CheckReturnAnnotationDatabase.java", "BodyUseAPI": [], "Fixed commit": "e0e189519404bc27fd039d74be50edbc0655ad8c", "Url": "https://api.github.com/repos/spotbugs/spotbugs", "Date": "2018-03-21T09:55:41Z"},
{"Line": "=>769", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.max(dcpInfo.getMaxChargeCurrent(), dcpInfo.getMaxDischargeCurrent())) <= 100) { smartHallSensor.setModel(properties.getProperty(\"excel.hallSensor.model100\")); }else { smartHallSensor.setModel(properties.getProperty(\"excel.hallSensor.model\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4675/buggy-version/config-manager.config-service.src.main.java.com.amos.service.ConfigServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "85c37c088a52bca251a2f3ead33d2109af32d654", "Url": "https://api.github.com/repos/amos-chen/ConfigSystem", "Date": "2018-02-24T08:35:25Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDisable) { disableNum = 1; }else { disableNum = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9025/buggy-version/app.src.main.java.com.orangesunshine.moritwitter.TweetDataBase.java", "BodyUseAPI": [], "Fixed commit": "52087bd2d322a726651754b8dc953a55939a6bcf", "Url": "https://api.github.com/repos/hayato1234/MoriTwitter", "Date": "2018-02-08T20:11:37Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.status) == (Status.STARTING)) { internalInit(); this.isAlive = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3719/buggy-version/src.main.java.io.github.diaco.actor.AbstractActor.java", "BodyUseAPI": [], "Fixed commit": "072878850e6bf1f35c00ee84f1d6c1d673266f5f", "Url": "https://api.github.com/repos/hamidreza-s/Diaco", "Date": "2018-01-14T18:00:56Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.comphenix.protocol.ProtocolManager.createPacket(PacketType.Play.Server.CHAT)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((container.getBytes().size()) > 0) { container.getBytes().write(0, ((byte) (2))); }else if ((container.getEnumModifier(EnumWrappers.ChatType.class, 0).size()) > 0) { container.getEnumModifier(EnumWrappers.ChatType.class, 0).write(0, EnumWrappers.ChatType.GAME_INFO); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2694/buggy-version/udplib-common.src.main.java.team.unstudio.udpl.util.ActionBar.java", "BodyUseAPI": ["com.comphenix.protocol.events.PacketContainer.getBytes()", "com.comphenix.protocol.events.PacketContainer.getEnumModifier(java.lang.Class,int)", "container.getEnumModifier(EnumWrappers.ChatType.class, 0).write(int,EnumWrappers.ChatType.GAME_INFO)", "com.comphenix.protocol.events.PacketContainer.getEnumModifier(java.lang.Class,int)", "container.getBytes().write(int,int)", "container.getEnumModifier(EnumWrappers.ChatType.class, 0).size()"], "Fixed commit": "b48e3fb701b3b1be8d3878ae70345d1f4b304b25", "Url": "https://api.github.com/repos/UnknownStudio/UDPLib", "Date": "2018-06-01T07:13:45Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((cache.length) != 2) reason = \"No reason.\"; else { if (cache[1].replace(\" \", \"\").isEmpty()) reason = \"No reason.\"; else reason = cache[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9522/buggy-version/src.main.java.io.github.lunarwatcher.java.haileybot.commands.mod.utils.ModUtils.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.isEmpty()"], "Fixed commit": "ff9542a453d7a1bcc5555bd9273c3078cdc0c6cd", "Url": "https://api.github.com/repos/LunarWatcher/Hailey", "Date": "2018-09-28T15:05:53Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.Map<java.lang.String, hl.jsoncrud.DBColMeta>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (mapCrudDBCols == null) mapCrudDBCols = new java.util.HashMap<java.lang.String, hl.jsoncrud.DBColMeta>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9154/buggy-version/src.hl.jsoncrud.CRUDMgr.java", "BodyUseAPI": [], "Fixed commit": "a41b5d898e94229d614537ddbb5087f2d2990f3d", "Url": "https://api.github.com/repos/huilam/jsoncrud", "Date": "2018-05-16T05:32:21Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (mapCrudJsonCol == null) return aDataJson;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9154/buggy-version/src.hl.jsoncrud.CRUDMgr.java", "BodyUseAPI": [], "Fixed commit": "a41b5d898e94229d614537ddbb5087f2d2990f3d", "Url": "https://api.github.com/repos/huilam/jsoncrud", "Date": "2018-05-16T05:32:21Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.vladnamik.developer.movieinformationviewer.database.entities.MoviePoster.isValidUrl(Poster)) { if (Poster.contains(\"http:\")) { Poster = Poster.replace(\"http:\", \"https:\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5895/buggy-version/app.src.main.java.com.vladnamik.developer.movieinformationviewer.database.entities.Movie.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "9278451028abc114ad3cf28648c031db634f293a", "Url": "https://api.github.com/repos/VladNamik/MovieInformationViewer", "Date": "2018-07-22T18:18:58Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((int) (e.getData())) != 0) { if ((((int) (e.getData())) - 1) < (stateList.size())) { stateList.set((((int) (e.getData())) - 1), ((e.getVisibility()) == (e.getVisibility().VISIBLE))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5920/buggy-version/src.java.heps.db.param_list.jsf.bean.DataMB.java", "BodyUseAPI": ["org.primefaces.event.ToggleEvent.getData()", "org.primefaces.event.ToggleEvent.getVisibility()", "org.primefaces.event.ToggleEvent.getVisibility()", "java.util.List<java.lang.Boolean>.set(int,((e.getVisibility()) == (e.getVisibility().VISIBLE)))", "org.primefaces.event.ToggleEvent.getData()"], "Fixed commit": "718e74334cb1df441e05ae9ed7f670c8e058b6d0", "Url": "https://api.github.com/repos/AcceleratorDatabase/heps-db-param_list", "Date": "2018-03-13T06:21:17Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.othr.has44540.logic.services.auth.service.SessionServiceException_Exception.getFaultInfo()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (serviceException == null) { throw new de.othr.has44540.logic.services.exceptions.OAuthException(\"Unknown OAuth Exception\", \"Fault info of exception was not accessible\", de.othr.has44540.logic.services.exceptions.OAuthCause.UNKNOWN_ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9054/buggy-version/src.main.java.de.othr.has44540.logic.services.auth.service.AbstractAuthService.java", "BodyUseAPI": [], "Fixed commit": "20e57501af0bb0dc30ea36da142f559f686cb9e8", "Url": "https://api.github.com/repos/Valor-mmm/Payinator", "Date": "2018-01-13T14:34:42Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getSerializable(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((date.get(java.util.Calendar.DAY_OF_WEEK)) == (java.util.Calendar.WEDNESDAY)) foodSubtext.setText(getResources().getString(R.string.standard_foods_w)); else if (((date.get(java.util.Calendar.DAY_OF_WEEK)) == (java.util.Calendar.SATURDAY)) || (((date.get(java.util.Calendar.DAY_OF_MONTH)) == 15) && ((date.get(java.util.Calendar.MONTH)) == 5))) foodSubtext.setText(getResources().getString(R.string.standard_foods_s)); else if ((date.get(java.util.Calendar.DAY_OF_WEEK)) == (java.util.Calendar.THURSDAY)) foodSubtext.setText(getResources().getString(R.string.standard_foods_t)); else if ((date.get(java.util.Calendar.DAY_OF_WEEK)) == (java.util.Calendar.FRIDAY)) foodSubtext.setText(getResources().getString(R.string.standard_foods_f));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9642/buggy-version/app.src.main.java.com.lucazanrosso.anguriara.DayFragment.java", "BodyUseAPI": ["java.util.Calendar.get(int)", "java.util.Calendar.get(int)", "java.util.Calendar.get(int)", "java.util.Calendar.get(int)", "java.util.Calendar.get(int)"], "Fixed commit": "0150277192019631d69285172e0d36736d7bb35a", "Url": "https://api.github.com/repos/lucazanrosso/Anguriara", "Date": "2018-06-17T20:01:42Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((polyLinePath) != null) { polyLinePath.remove(); polyLinePath = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4408/buggy-version/WiFiSearcher.app.src.main.java.com.example.embroa.wifisearcher.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "a27b3be825f04b95c2487ff66ca5ae55c2cbf95e", "Url": "https://api.github.com/repos/HelixReactor/INF8405", "Date": "2018-04-19T14:33:30Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (isChecked) { super.tiles.getTileAt(0, 0).setCharacter(checkedBoxChar); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6642/buggy-version/src.com.valkryst.VTerminal.component.CheckBox.java", "BodyUseAPI": [], "Fixed commit": "31a06dfca95ee4fb681a2fbd155cb648ab7170c9", "Url": "https://api.github.com/repos/Valkryst/VTerminal", "Date": "2018-02-26T16:17:28Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((channelPool) != null) { channelPool.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7354/buggy-version/src.main.java.com.github.xfslove.smssp.client.Sgip12Client.java", "BodyUseAPI": [], "Fixed commit": "958f6737c3d0f68425829038489183b8051382ee", "Url": "https://api.github.com/repos/xfslove/smssp", "Date": "2018-09-21T03:14:25Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((channelPool) != null) { channelPool.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7354/buggy-version/src.main.java.com.github.xfslove.smssp.client.Cmpp20Client.java", "BodyUseAPI": [], "Fixed commit": "958f6737c3d0f68425829038489183b8051382ee", "Url": "https://api.github.com/repos/xfslove/smssp", "Date": "2018-09-21T03:14:25Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.bluetooth.BluetoothGatt.getServices()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((list == null) || ((list.size()) < 1)) { gatt.discoverServices(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4326/buggy-version/app.src.main.java.com.miittech.you.ble.BleClient.java", "BodyUseAPI": [], "Fixed commit": "a846c577e64aaf062dfc179395a62c96e32ffe3c", "Url": "https://api.github.com/repos/luyanian/Miittech", "Date": "2018-06-01T07:13:04Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (frameCount == keyFrameCount) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1268/buggy-version/videoprocessor.src.main.java.com.hw.videoprocessor.VideoUtil.java", "BodyUseAPI": [], "Fixed commit": "d8b1b3dfc4347eda190b246145aa7ee9d4e3cb6c", "Url": "https://api.github.com/repos/yellowcath/VideoProcessor", "Date": "2018-04-16T02:07:58Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s >= 0) && (s < (shieldBoosters.size()))) return shieldBoosters.remove(s); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6429/buggy-version/deepspace.src.deepspace.Hangar.java", "BodyUseAPI": ["java.util.ArrayList<deepspace.ShieldBooster>.remove(int)"], "Fixed commit": "4a9589f50d32f6f7ca0e567985c9f9ab6f017c68", "Url": "https://api.github.com/repos/antoniogamiz/PDOO-Java", "Date": "2018-03-28T08:28:25Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["row.getCell(2).toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (value.endsWith(\".0\")) { value = value.substring(0, ((value.length()) - 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/768/buggy-version/src.main.java.com.wisrc.excel.ParseETLXLSXTemplate.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "29479599471156b5e8f0ad883a4e84c8360e6f99", "Url": "https://api.github.com/repos/hzwy23/autoetl", "Date": "2018-01-07T14:23:56Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["row.getCell(1).toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (name.endsWith(\".0\")) { name = name.substring(0, ((name.length()) - 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/768/buggy-version/src.main.java.com.wisrc.excel.ParseETLXLSXTemplate.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "29479599471156b5e8f0ad883a4e84c8360e6f99", "Url": "https://api.github.com/repos/hzwy23/autoetl", "Date": "2018-01-07T14:23:56Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["row.getCell(1).toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (key.endsWith(\".0\")) { key = key.substring(0, ((key.length()) - 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/768/buggy-version/src.main.java.com.wisrc.excel.ParseETLXLSXTemplate.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "29479599471156b5e8f0ad883a4e84c8360e6f99", "Url": "https://api.github.com/repos/hzwy23/autoetl", "Date": "2018-01-07T14:23:56Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connector) != null) connector.autoInvokeAsync(methodName, responseHandler, params);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2021/buggy-version/lib.src.main.java.ir.atitec.signalgo.SignalGoCore.java", "BodyUseAPI": [], "Fixed commit": "b5d29c0260a18c859e62b51899295bcab8101c8e", "Url": "https://api.github.com/repos/hamedgramzi/signalGoClient", "Date": "2018-02-17T05:20:20Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(readInput.hasNextLine())) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/460/buggy-version/src.com.company.Quiz.java", "BodyUseAPI": [], "Fixed commit": "4cc3184d71d7482e1cef2f777518d929aa9f995f", "Url": "https://api.github.com/repos/Nalepsky/Java-tcp-survey", "Date": "2018-01-07T03:20:25Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.uark.uarkregisterapp.models.api.services.EmployeeService.performPutRequest(this.buildPath(new edu.uark.uarkregisterapp.models.api.interfaces.PathElementInterface[]{ edu.uark.uarkregisterapp.models.api.enums.EmployeeApiMethod.CREATE_EMPLOYEE }, StringUtils.EMPTY),org.json.JSONObject)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (response.isValidResponse()) { response = this.readEmployeeDetailsFromResponse(response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7657/buggy-version/app.src.main.java.edu.uark.uarkregisterapp.models.api.services.EmployeeService.java", "BodyUseAPI": ["edu.uark.uarkregisterapp.models.api.services.EmployeeService.readEmployeeDetailsFromResponse(edu.uark.uarkregisterapp.models.api.ApiResponse<edu.uark.uarkregisterapp.models.api.Employee>)"], "Fixed commit": "2bf669f41d76c3afef66d160901e2e43f64c8cb8", "Url": "https://api.github.com/repos/getoffmylawncsce3513/RegisterClient", "Date": "2018-04-05T22:48:54Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (bookId != null) { com.google.firebase.storage.StorageReference ref = com.google.firebase.storage.FirebaseStorage.getInstance().getReference().child(Book.FIREBASE_STORAGE_BOOKS_FOLDER).child(bookId).child(Book.FIREBASE_STORAGE_IMAGE_NAME); if (ref != null) { it.polito.mad.mad2018.utils.GlideApp.with(getContext()).load(ref).into(this); } }else { it.polito.mad.mad2018.utils.GlideApp.with(getContext()).load(R.drawable.default_book_preview).into(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8333/buggy-version/app.src.main.java.it.polito.mad.mad2018.views.BookImageView.java", "BodyUseAPI": ["com.google.firebase.storage.FirebaseStorage.getInstance().getReference().child(Book.FIREBASE_STORAGE_BOOKS_FOLDER).child(bookId).child(Book.FIREBASE_STORAGE_IMAGE_NAME)", "com.google.firebase.storage.FirebaseStorage.getInstance().getReference().child(Book.FIREBASE_STORAGE_BOOKS_FOLDER).child(java.lang.String)"], "Fixed commit": "554e2e3f6b1e8062b59238ae6a950896fd7ab77c", "Url": "https://api.github.com/repos/MobileApplicationDevelopment2018/MAD_Lab03", "Date": "2018-04-24T00:29:48Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loader.isVisible()) { viewer.setImage(null); repaint(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1748/buggy-version/src.main.java.jatoo.imager.JaTooImagerViewer.java", "BodyUseAPI": [], "Fixed commit": "0536616be1359afdef988de72db9df314790d08c", "Url": "https://api.github.com/repos/cristian-sulea/jatoo-imager", "Date": "2018-01-22T13:52:36Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rotating) textPos.y = ((dummyPosition.y) + ((getRectangle().getHeight()) / 2)) + ((textBounds.height()) / 2); else textPos.y = (getRectangle().getCenterPoint().y) + ((textBounds.height()) / 2);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4791/buggy-version/app.src.main.java.zelongames.kortspel.InfoItems.InfoItemBase.java", "BodyUseAPI": [], "Fixed commit": "ff1dab3895af83a13414238262b0c24a84aa2c0d", "Url": "https://api.github.com/repos/ZelonGames/Kortspel", "Date": "2018-02-20T23:07:29Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (webSocketClient.isOpen()) { webSocketClient.send(editText.getText().toString()); editText.setText(\"\"); }else { showToast(\"Connect is shut!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6197/buggy-version/WebSocketClint.app.src.main.java.com.PATHs.demo.websocket.MainActivity.java", "BodyUseAPI": ["com.PATHs.demo.websocket.util.WebSocketClient.send(editText.getText().toString())"], "Fixed commit": "180efd4ae27bd5b00f29ba805fff40565090dfed", "Url": "https://api.github.com/repos/PATHschina/WebSocketDemo", "Date": "2018-03-14T06:53:32Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(editText.getText().toString())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6197/buggy-version/WebSocketClint.app.src.main.java.com.PATHs.demo.websocket.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "180efd4ae27bd5b00f29ba805fff40565090dfed", "Url": "https://api.github.com/repos/PATHschina/WebSocketDemo", "Date": "2018-03-14T06:53:32Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (food.getCustom()) { this.custom = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8046/buggy-version/src.model.Food.java", "BodyUseAPI": [], "Fixed commit": "d1eb87fbad0694e5c01f33fb195f85308d42e72f", "Url": "https://api.github.com/repos/rk16449/CaloriesTracker", "Date": "2018-08-29T19:51:56Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (food.getTemplate()) { this.template = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8046/buggy-version/src.model.Food.java", "BodyUseAPI": [], "Fixed commit": "d1eb87fbad0694e5c01f33fb195f85308d42e72f", "Url": "https://api.github.com/repos/rk16449/CaloriesTracker", "Date": "2018-08-29T19:51:56Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hour == 12) { ampm = \"PM\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6528/buggy-version/app.src.main.java.com.example.robertwais.pickupgames.CreateEventActivity.java", "BodyUseAPI": [], "Fixed commit": "7139ee11a7074ab8aeda32c963fd026681d95686", "Url": "https://api.github.com/repos/RobertWais/PickUpGames", "Date": "2018-04-26T05:32:43Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["info.faceland.strife.storage.JsonDataStorage.checkResetAndSetLevels(org.bukkit.configuration.ConfigurationSection,info.faceland.strife.data.ChampionSaveData,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hadReset) { saveData.setUnusedStatPoints(saveData.getHighestReachedLevel()); }else { saveData.setUnusedStatPoints(section.getInt(\"unused-stat-points\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4845/buggy-version/src.main.java.info.faceland.strife.storage.JsonDataStorage.java", "BodyUseAPI": [], "Fixed commit": "071cdd0e02d3c4068210db6c0b1f58cc4c39fd22", "Url": "https://api.github.com/repos/TealCube/strife", "Date": "2018-05-19T04:28:33Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["commentNotifyAdapter.getData(position).getPublicPostBean()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (bean == null) { bean = commentNotifyAdapter.getData(position).getPublicCommentBean().getPost(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4155/buggy-version/chat.src.main.java.com.example.chat.mvp.commentnotify.CommentNotifyActivity.java", "BodyUseAPI": [], "Fixed commit": "7d2e38828f13f3857e43553d487cbae03eaad582", "Url": "https://api.github.com/repos/HelloChenJinJun/NewFastFrame", "Date": "2018-07-29T03:55:34Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (groupName != null) { grantedAuths.add(createAuthority(groupName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7621/buggy-version/src.main.java.de.kreth.clubhelperbackend.config.ClubhelperAuthenticationProvider.java", "BodyUseAPI": ["de.kreth.clubhelperbackend.config.ClubhelperAuthenticationProvider.createAuthority(java.lang.String)", "java.util.List<org.springframework.security.core.GrantedAuthority>.add(org.springframework.security.core.GrantedAuthority)"], "Fixed commit": "12edc4087176bc1ebd5bd805036f0b48a26754b5", "Url": "https://api.github.com/repos/markuskreth/ClubhelperRestServer", "Date": "2018-08-25T10:32:51Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getClient()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4806/buggy-version/app.src.main.java.com.yazhi1992.moon.util.PushManager.java", "BodyUseAPI": [], "Fixed commit": "a913085e7994d4435624037237bff88776ac8175", "Url": "https://api.github.com/repos/yazhi1992/Moon", "Date": "2018-02-06T17:00:40Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (selbutton > ((cinq.length) - 1)) viewmode = 0; else BasketTracker.main.addStat(((viewmode) - 1), cinq[selbutton], action);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8460/buggy-version/src.fr.xtof.basketball.Surface.java", "BodyUseAPI": ["BasketTracker.main.addStat(int,java.lang.String,int)"], "Fixed commit": "69f6bf84207c232468c99a7e72296955e3b9eaf6", "Url": "https://api.github.com/repos/cerisara/basketball", "Date": "2018-04-15T17:05:01Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((canvas) == null) canvas = ((fr.xtof.basketball.Surface) (findViewById(R.id.surfaces)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8460/buggy-version/src.fr.xtof.basketball.BasketTracker.java", "BodyUseAPI": [], "Fixed commit": "69f6bf84207c232468c99a7e72296955e3b9eaf6", "Url": "https://api.github.com/repos/cerisara/basketball", "Date": "2018-04-15T17:05:01Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o instanceof com.rns.web.billapp.service.bo.domain.BillLocation) { com.rns.web.billapp.service.bo.domain.BillLocation loc = ((com.rns.web.billapp.service.bo.domain.BillLocation) (o)); stringList.add(loc.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6338/buggy-version/Bill.app.src.main.java.util.Utility.java", "BodyUseAPI": [], "Fixed commit": "46f0e280b04e20d4c67802e8fbde9f31dfe46264", "Url": "https://api.github.com/repos/Rohit1110/bill", "Date": "2018-06-05T08:05:35Z"},
{"Line": "=>655", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((splitArgs.length) > 2) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6470/buggy-version/src.seedu.addressbook.AddressBook.java", "BodyUseAPI": [], "Fixed commit": "ffcd4980e5407ffec55d1e8b8f8977e1dd43d101", "Url": "https://api.github.com/repos/KokJianYu/addressbook-level1", "Date": "2018-08-28T14:39:47Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (type.equals(\"wsv\")) { dsString = java.lang.String.format(\"%s;ws:%s:%d:%d:1800:1000:UTC\", name, host, port, (timeout * 1000)); }else if (type.equals(\"sls\")) { dsString = java.lang.String.format(\"%s;sls:%s:%d\", name, host, port); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4444/buggy-version/src.main.java.gov.usgs.volcanoes.pensive.WaveSource.java", "BodyUseAPI": [], "Fixed commit": "3286edb7e650b8e5f3974b85908cd7814c6177fb", "Url": "https://api.github.com/repos/tparker-usgs/pensive", "Date": "2018-03-22T15:03:35Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastToTouch) == racket) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3378/buggy-version/src.me.zinno.pong.Ball.java", "BodyUseAPI": [], "Fixed commit": "eb53747740c9e1b9862289f7100694e1a2329d5f", "Url": "https://api.github.com/repos/z3ht/Pong", "Date": "2018-04-20T23:11:28Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (activePictureNum == 0) { activePictureNum = (images.size()) - 1; }else { activePictureNum--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6050/buggy-version/ServerSideAssignment7.src.java.nasa.NasaServlet.java", "BodyUseAPI": [], "Fixed commit": "b4dcd3d1fa76557e72328190e426a4344e6af0a6", "Url": "https://api.github.com/repos/Owen-Krueger/ServerSideAssignment7NASA", "Date": "2018-03-09T16:36:59Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.hasSession(session))) { bookingLines.put(((bookingLines.size()) + 1), new model.Booking.Pair(session, seats)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5247/buggy-version/src.model.Booking.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, model.Booking.Pair<model.Session, java.lang.Integer>>.put(((bookingLines.size()) + 1),model.Booking.Pair)"], "Fixed commit": "9d545b454e0dc0046d0900f496f25770fe6e02c8", "Url": "https://api.github.com/repos/cschnierer/sepm-assignment-2", "Date": "2018-05-09T12:08:40Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<fr.inria.astor.core.stats.Stats.GeneralStatEnum, java.lang.Object>.get(fr.inria.astor.core.stats.Stats.GeneralStatEnum)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (vStat instanceof fr.inria.main.AstorOutputStatus) value = parser.parse(((\"\\\"\" + vStat) + \"\\\"\")); else value = parser.parse(vStat.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7806/buggy-version/src.main.java.fr.inria.astor.core.output.PatchJSONStandarOutput.java", "BodyUseAPI": ["java.lang.Object.toString()", "org.json.simple.parser.JSONParser.parse(java.lang.String)", "org.json.simple.parser.JSONParser.parse(java.lang.String)"], "Fixed commit": "24f66cb670c13983d9ec50f5baa7772ed744daf3", "Url": "https://api.github.com/repos/SpoonLabs/astor", "Date": "2018-05-15T10:11:33Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dryadandnaiad.sethlans.services.queue.BlenderProjectDatabaseService.getByProjectUUID(renderQueueItem.getProject_uuid())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((blenderProject.getRemainingQueueSize()) < 0) { blenderProject.setRemainingQueueSize(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3260/buggy-version/src.main.java.com.dryadandnaiad.sethlans.services.queue.QueueProcessActions.java", "BodyUseAPI": ["com.dryadandnaiad.sethlans.domains.database.blender.BlenderProject.setRemainingQueueSize(int)"], "Fixed commit": "1ffcb69320d43802fcf3ec469e76ad9e004e3f60", "Url": "https://api.github.com/repos/dryad-naiad-software/sethlans", "Date": "2018-06-10T19:46:05Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mWeightEditText.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(sWeight))) { iWeight = java.lang.Integer.parseInt(sWeight); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4309/buggy-version/app.src.main.java.com.example.android.pets.EditorActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "0d51d403763ee1d4748a478cd2aae9effd350308", "Url": "https://api.github.com/repos/GlaDdos/Pets", "Date": "2018-07-14T19:51:16Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.ignite.IgniteCluster.disableWal(tbl.cacheName())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!res) throw new org.apache.ignite.internal.processors.query.IgniteSQLException((\"Logging already disabled for table: \" + (cmd0.tableName())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4631/buggy-version/modules.indexing.src.main.java.org.apache.ignite.internal.processors.query.h2.ddl.DdlStatementsProcessor.java", "BodyUseAPI": [], "Fixed commit": "80736ccd7e13b0d3438d2ffed25fed989edaf204", "Url": "https://api.github.com/repos/gridgain/apache-ignite", "Date": "2018-01-26T08:20:06Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.ignite.IgniteCluster.enableWal(tbl.cacheName())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!res) throw new org.apache.ignite.internal.processors.query.IgniteSQLException((\"Logging already enabled for table: \" + (cmd0.tableName())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4631/buggy-version/modules.indexing.src.main.java.org.apache.ignite.internal.processors.query.h2.ddl.DdlStatementsProcessor.java", "BodyUseAPI": [], "Fixed commit": "80736ccd7e13b0d3438d2ffed25fed989edaf204", "Url": "https://api.github.com/repos/gridgain/apache-ignite", "Date": "2018-01-26T08:20:06Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (groupLevel == 0) { retVal = arabicHundreds.get(hundreds); }else { retVal = arabicAppendedTwos.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5640/buggy-version/src.com.company.ArabicTools.java", "BodyUseAPI": [], "Fixed commit": "c3d851c8c842a7a5f958064a60e29a016ef5166c", "Url": "https://api.github.com/repos/nxme/NumberToArabicWords", "Date": "2018-03-14T11:08:46Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mExoPlayer) != null) { positionExoPlayer = savedInstanceState.getLong(com.example.mac.francosbakingapp.Fragments.DescriptionFragment.PLAYER_POSITION); windowIndexExoPlayer = savedInstanceState.getInt(com.example.mac.francosbakingapp.Fragments.DescriptionFragment.PLAYER_CURRENT_WINDOW); isPlayWhenReadyExoPlayer = savedInstanceState.getBoolean(com.example.mac.francosbakingapp.Fragments.DescriptionFragment.PLAYER_PLAY_STATE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6/buggy-version/app.src.main.java.com.example.mac.francosbakingapp.Fragments.DescriptionFragment.java", "BodyUseAPI": [], "Fixed commit": "bc471b6286dfe7e08f39a3427007b163836e654b", "Url": "https://api.github.com/repos/franquicidad/FrancosBakingApp", "Date": "2018-08-03T16:47:10Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRightmostSubarrayFull()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/681/buggy-version/src.main.java.org.openstreetmap.atlas.utilities.arrays.LargeArray.java", "BodyUseAPI": [], "Fixed commit": "0eaf5c2082654d087fdd47205878ae7be527f124", "Url": "https://api.github.com/repos/lucaspcram/atlas", "Date": "2018-04-24T14:59:28Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(sharedPreferences.getBoolean(\"alarmJustSet\", false))) sharedPreferences.edit().putBoolean(\"alarmJustSet\", true).apply();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5173/buggy-version/app.src.main.java.com.lucazanrosso.welchome.NotificationJobService.java", "BodyUseAPI": ["sharedPreferences.edit().putBoolean(\"alarmJustSet\", true).apply()", "sharedPreferences.edit().putBoolean(java.lang.String,boolean)", "android.content.SharedPreferences.edit()"], "Fixed commit": "bf4601d53041d11f7ce307cea4bfc7b0e0e7504f", "Url": "https://api.github.com/repos/lucazanrosso/WelcHome", "Date": "2018-03-14T12:34:28Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (v < 10) return \"<1.6\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1854/buggy-version/src.main.java.com.github.alex1304.ultimategdbot.utils.GDUtils.java", "BodyUseAPI": [], "Fixed commit": "e32b156774679b940ffb4d7115f3dd118f27db2a", "Url": "https://api.github.com/repos/Alex1304/ultimategdbot", "Date": "2018-07-05T11:20:13Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lvl.getObjectCount()) == 65535) objCount += \"More than \";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1854/buggy-version/src.main.java.com.github.alex1304.ultimategdbot.utils.GDUtils.java", "BodyUseAPI": [], "Fixed commit": "e32b156774679b940ffb4d7115f3dd118f27db2a", "Url": "https://api.github.com/repos/Alex1304/ultimategdbot", "Date": "2018-07-05T11:20:13Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<model.Listrow>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((listrow.getImageHref()) != null) { holder.img.setVisibility(View.VISIBLE); com.bumptech.glide.Glide.with(mContext).load(listrow.getImageHref()).apply(centerInsideTransform().placeholder(R.drawable.loading_picture).error(R.drawable.loading_picture).priority(Priority.HIGH)).into(holder.img); }else { holder.img.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9291/buggy-version/app.src.main.java.adapter.ListAdapter.java", "BodyUseAPI": ["com.bumptech.glide.Glide.with(mContext).load(listrow.getImageHref()).apply(centerInsideTransform().placeholder(R.drawable.loading_picture).error(R.drawable.loading_picture).priority(Priority.HIGH))", "com.bumptech.glide.Glide.with(mContext).load(listrow.getImageHref())", "com.bumptech.glide.Glide.with(mContext).load(listrow.getImageHref()).apply(centerInsideTransform().placeholder(R.drawable.loading_picture).error(R.drawable.loading_picture).priority(Priority.HIGH)).into(android.widget.ImageView)", "model.Listrow.getImageHref()"], "Fixed commit": "581e8333790329bc1f6749ff2021e4fc00e3168b", "Url": "https://api.github.com/repos/mdeva/AndroidExercise", "Date": "2018-02-13T06:25:33Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (state)) { switch (state) { case CHECKED_OUT : java.lang.System.out.println(\"The guest has already checked out.\"); break; case PENDING : java.lang.System.out.println(\"The guest has not yet checked in.\"); break; case CHECKED_IN : charges.add(new hotel.entities.ServiceCharge(serviceType, cosst)); break; default : break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3412/buggy-version/entities.Booking.java", "BodyUseAPI": [], "Fixed commit": "311ab49c62553b8aeee12232c8b2b39b90353b7a", "Url": "https://api.github.com/repos/hasithmalinga/hotel_Assignment_04", "Date": "2018-10-15T11:11:02Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["descriptionField.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (descriptionFieldText.isEmpty()) { android.widget.Toast.makeText(getApplicationContext(), \"Description field is mandatory!\", Toast.LENGTH_SHORT).show(); errorHandler = 1; }else if (((((startDateFormat.after(endDateFormat)) || (startDateFieldDate == null)) || (startDateFieldDate.equals(\"\"))) || (endDateFieldDate == null)) || (endDateFieldDate.equals(\"\"))) { android.widget.Toast.makeText(getApplicationContext(), \"Time fields must be valid!\", Toast.LENGTH_SHORT).show(); errorHandler = 1; }else if (locationFieldText.isEmpty()) { android.widget.Toast.makeText(getApplicationContext(), \"Location field is mandatory!\", Toast.LENGTH_SHORT).show(); errorHandler = 1; }else if (CreateEventPage_GeneralTab.tags.isEmpty()) { android.widget.Toast.makeText(getApplicationContext(), \"At least one tag is required!\", Toast.LENGTH_SHORT).show(); errorHandler = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9477/buggy-version/app.src.main.java.com.example.mdenker.interestup.CreateEventPage.java", "BodyUseAPI": [], "Fixed commit": "56ade795f97052a208c5ae251c2920805bd5cdb1", "Url": "https://api.github.com/repos/ilyayudkovich/InterestUp", "Date": "2018-04-09T13:06:01Z"},
{"Line": "=>859", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < 24) { final android.content.pm.PackageManager packageManager = getPackageManager(); final java.util.List<android.content.pm.ResolveInfo> activities = packageManager.queryIntentActivities(takePictureIntent, PackageManager.MATCH_DEFAULT_ONLY); for (android.content.pm.ResolveInfo resolvedIntentInfo : activities) { final java.lang.String packageName = resolvedIntentInfo.activityInfo.packageName; grantUriPermission(packageName, sharedFileUri, org.smartregister.path.activity.ChildDetailTabbedActivity.PHOTO_TAKING_PERMISSION); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6084/buggy-version/opensrp-path.src.main.java.org.smartregister.path.activity.ChildDetailTabbedActivity.java", "BodyUseAPI": [], "Fixed commit": "d5855f9d2d04d0b28abef3e12d26b8bf8133eb48", "Url": "https://api.github.com/repos/OpenSRP/opensrp-client-path", "Date": "2018-05-29T14:42:18Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((displayTable.getSelection().getSelected()) != null) { data.deleteRow(((tablemodel.getPath(displayTable.getSelection().getSelected()).getIndices()[0]) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/520/buggy-version/src.ui.Inventory.java", "BodyUseAPI": ["tablemodel.getPath(displayTable.getSelection().getSelected()).getIndices()", "displayTable.getSelection().getSelected()", "ui.Database.deleteRow(((tablemodel.getPath(displayTable.getSelection().getSelected()).getIndices()[0]) + 1))", "ui.TreeView.getSelection()", "ui.ListStore.getPath(displayTable.getSelection().getSelected())"], "Fixed commit": "717ac5deeaf5df2d58e49252471e60a0ed784a86", "Url": "https://api.github.com/repos/Keith-Bateman/storizon", "Date": "2018-04-24T15:17:08Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.lang.ASTNode.getElementType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (childElementType == (org.ballerinalang.plugins.idea.BallerinaTypes.EXPRESSION_LIST)) { if (parentElementType == (org.ballerinalang.plugins.idea.BallerinaTypes.VARIABLE_REFERENCE)) { indent = com.intellij.formatting.Indent.getSpaceIndent(4); } }else if (childElementType == (org.ballerinalang.plugins.idea.BallerinaTypes.FIELD_DEFINITION)) { if (parentElementType == (org.ballerinalang.plugins.idea.BallerinaTypes.PRIVATE_STRUCT_BODY)) { indent = com.intellij.formatting.Indent.getSpaceIndent(4); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2077/buggy-version/tool-plugins.intellij.src.main.java.org.ballerinalang.plugins.idea.formatter.BallerinaBlock.java", "BodyUseAPI": [], "Fixed commit": "c814e472720e51f2fb9937449857fc75f849388f", "Url": "https://api.github.com/repos/kaviththiranga/ballerina-1", "Date": "2018-02-14T12:11:10Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(previousText.trim().equals(\"\"))) { appendFileData(hist); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9665/buggy-version/app.src.main.java.calculator.niaz.com.calculator.Main.java", "BodyUseAPI": [], "Fixed commit": "c454e526062229d443781c42ee4773d0a7905ca0", "Url": "https://api.github.com/repos/itsniaz/Calculator-Android", "Date": "2018-03-14T23:18:13Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (deleteSourceFile) { inputFilePath.toFile().delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3951/buggy-version/src.main.java.org.tools.csv.sort.CsvMergeSorter.java", "BodyUseAPI": [], "Fixed commit": "c5b670f35e649d6a961db106694aea210cb8b14a", "Url": "https://api.github.com/repos/mohammed-ibrahim/analytics", "Date": "2018-01-25T03:53:05Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (deleteSourceFile) { sortedFile.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3951/buggy-version/src.main.java.org.tools.csv.sort.CsvMerger.java", "BodyUseAPI": [], "Fixed commit": "c5b670f35e649d6a961db106694aea210cb8b14a", "Url": "https://api.github.com/repos/mohammed-ibrahim/analytics", "Date": "2018-01-25T03:53:05Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.camel.http.common.HttpConsumer.getEndpoint()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((endpoint.getHandlers()) != null) && (!(endpoint.getHandlers().isEmpty()))) { java.util.List<org.eclipse.jetty.server.Handler> existingHandlers = new java.util.ArrayList<>(); if (((connectorRef.server.getHandlers()) != null) && ((connectorRef.server.getHandlers().length) > 0)) { existingHandlers = java.util.Arrays.asList(connectorRef.server.getHandlers()); } java.util.List<org.eclipse.jetty.server.Handler> newHandlers = new java.util.ArrayList(endpoint.getHandlers()); boolean changed = (!(existingHandlers.containsAll(newHandlers))) && (!(newHandlers.containsAll(existingHandlers))); if (changed) { org.apache.camel.component.jetty.JettyHttpComponent.LOG.debug(\"Restarting Jetty server due to adding new Jetty Handlers: {}\", newHandlers); connectorRef.server.stop(); addJettyHandlers(connectorRef.server, endpoint.getHandlers()); connectorRef.server.start(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2162/buggy-version/components.camel-jetty-common.src.main.java.org.apache.camel.component.jetty.JettyHttpComponent.java", "BodyUseAPI": ["org.apache.camel.component.jetty.JettyHttpComponent.addJettyHandlers(org.eclipse.jetty.server.Server,endpoint.getHandlers())", "org.apache.camel.component.jetty.JettyHttpEndpoint.getHandlers()", "org.apache.camel.component.jetty.JettyHttpEndpoint.getHandlers()"], "Fixed commit": "25b0a2912a535ce488b542f30f809ab0cad9f18f", "Url": "https://api.github.com/repos/apache/camel", "Date": "2018-01-23T15:26:42Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((com.hcl.appscan.sdk.utils.SystemUtil.isWindows()) && ((m_installDir.toString().toLowerCase().indexOf(\"system32\")) >= 0)) { m_installDir = com.hcl.appscan.sdk.scanners.sast.SAClient.JENKINS_INSTALL_DIR; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3010/buggy-version/src.main.java.com.hcl.appscan.sdk.scanners.sast.SAClient.java", "BodyUseAPI": [], "Fixed commit": "ea0b7126027039a95d3929f8e05b09de8f845ddb", "Url": "https://api.github.com/repos/hclproducts/appscan-sdk", "Date": "2018-08-13T10:41:40Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ser516.project3.model.HeaderObservable.getHeaderTimeStamp()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (currentTimeStampFromServer == 0) { headerController.setHeaderTimeStamp(currentTimeStampFromServer); }else { headerController.setHeaderTimeStamp((currentTimeStampFromServer - (headerObservable.getInterval()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/229/buggy-version/src.main.java.ser516.project3.client.view.HeaderObserver.java", "BodyUseAPI": ["ser516.project3.client.controller.HeaderController.setHeaderTimeStamp((currentTimeStampFromServer - (headerObservable.getInterval())))", "ser516.project3.client.controller.HeaderController.setHeaderTimeStamp(double)"], "Fixed commit": "4ddc14aab28531a789425ace518c63072c5837e1", "Url": "https://api.github.com/repos/SER516/ProjectThree_Team09", "Date": "2018-04-09T22:07:27Z"},
{"Line": "=>1102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getParentFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((parentFile.exists()) && (parentFile.isDirectory())) { }else { if (!(parentFile.mkdirs())) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7569/buggy-version/src.main.java.org.himalayas.filereader.kdf.KDFReader.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "e292730cdb48908c49066eba9bee1dc0e4427842", "Url": "https://api.github.com/repos/westdiscovery/TestFileReader", "Date": "2018-10-25T09:43:09Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((response.getResponseCode()) == (finley.gmair.util.ResponseCode.RESPONSE_ERROR)) { result.setResponseCode(ResponseCode.RESPONSE_ERROR); result.setDescription(\"fail to find the action value with controlId,modelId,actionOperator\"); return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1468/buggy-version/machine.src.main.java.finley.gmair.controller.ControlOptionController.java", "BodyUseAPI": [], "Fixed commit": "4b2d8006d107b0bb154f81908861595d8244dc01", "Url": "https://api.github.com/repos/sunshinezxf/Gmair", "Date": "2018-07-17T04:55:41Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Character.isDigit(userInput.charAt(0))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/769/buggy-version/src.UserInterface.DisplayBoard.java", "BodyUseAPI": [], "Fixed commit": "9b6a297c46e5f8a56751f2bc8aaec42399c8478a", "Url": "https://api.github.com/repos/WanatabeShin/a3", "Date": "2018-02-20T06:16:12Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mdove.levelgame.greendao.utils.DatabaseManager.getInstance().getMonstersDao().queryBuilder().where(MonstersDao.Properties.Type.eq(type)).unique()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((monsters != null) && ((monsters.isBusinessman) == 0)) { com.mdove.levelgame.main.shop.BusinessmanActivity.start(view.getContext(), id); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6304/buggy-version/app.src.main.java.com.mdove.levelgame.main.monsters.presenter.MonstersPresenter.java", "BodyUseAPI": [], "Fixed commit": "78887d4e620388b8b88a9a14a815a662a5b44b23", "Url": "https://api.github.com/repos/zhiaixinyang/LevelGame", "Date": "2018-10-29T08:37:37Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((model.isBusinessman) == 0) { btnText.set(\"\u8d2d\u4e70\"); }else { btnText.set(\"\u653b\u51fb\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6304/buggy-version/app.src.main.java.com.mdove.levelgame.main.monsters.model.vm.MonstersModelVM.java", "BodyUseAPI": [], "Fixed commit": "78887d4e620388b8b88a9a14a815a662a5b44b23", "Url": "https://api.github.com/repos/zhiaixinyang/LevelGame", "Date": "2018-10-29T08:37:37Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (relSourceInstance != null) { newInstance.setIncluded(relSourceInstance.isIncluded()); newInstance.setExcluded(relSourceInstance.isExcluded()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4922/buggy-version/zeidon-joe.src.main.java.com.quinsoft.zeidon.standardoe.EntityInstanceIncluder.java", "BodyUseAPI": ["com.quinsoft.zeidon.standardoe.EntityInstanceImpl.isExcluded()", "com.quinsoft.zeidon.standardoe.EntityInstanceImpl.setIncluded(relSourceInstance.isIncluded())", "com.quinsoft.zeidon.standardoe.EntityInstanceImpl.setExcluded(relSourceInstance.isExcluded())", "com.quinsoft.zeidon.standardoe.EntityInstanceImpl.isIncluded()"], "Fixed commit": "c06246e6b5c37b97b6f336fe3e74f1f478f04a0d", "Url": "https://api.github.com/repos/zeidon/zeidon-joe", "Date": "2018-04-23T22:08:02Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ox.checkWin(col, row)) { int resule = javax.swing.JOptionPane.showConfirmDialog(null, (((ox.getCurrentPlayer()) + \" WIN,\") + \"Do you want to play again?\"), \"WIN\", javax.swing.JOptionPane.YES_NO_OPTION); if (resule == (javax.swing.JOptionPane.YES_OPTION)) { ox.reset(); render(); return; }else { java.lang.System.exit(0); } }else if (ox.isDraw()) { int resule = javax.swing.JOptionPane.showConfirmDialog(null, (\" DRAW,\" + \"Do you want to play again?\"), \"WIN\", javax.swing.JOptionPane.YES_NO_OPTION); if (resule == (javax.swing.JOptionPane.YES_OPTION)) { ox.reset(); render(); return; }else { java.lang.System.exit(0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6151/buggy-version/src.OXForm.java", "BodyUseAPI": ["OX.getCurrentPlayer()", "OX.reset()", "javax.swing.JOptionPane.showConfirmDialog(<nulltype>,(((ox.getCurrentPlayer()) + \" WIN,\") + \"Do you want to play again?\"),java.lang.String,int)", "OX.reset()", "OX.isDraw()"], "Fixed commit": "dc5c66fa4e10e03e8ca38da7b9d098e0c04ec576", "Url": "https://api.github.com/repos/Pum58400/lab3-3", "Date": "2018-09-01T00:46:31Z"},
{"Line": "=>704", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.stratelia.webactiv.kmelia.control.ejb.KmeliaHelper.isToValidateFolder(nodeId))) { try { getKmeliaBm().getNodeHeader(nodeId, getComponentId()); } catch (java.lang.Exception e) { com.stratelia.silverpeas.silvertrace.SilverTrace.warn(\"kmelia\", \"KmeliaSessionControl.getUserTopicProfile\", \"root.MSG_PARAM_VALUE\", ((nodeId + \" is no more in \") + (getComponentId()))); setCurrentFolderId(NodePK.ROOT_NODE_ID, true); nodeId = com.stratelia.webactiv.util.node.model.NodePK.ROOT_NODE_ID; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1200/buggy-version/kmelia.kmelia-war.src.main.java.com.stratelia.webactiv.kmelia.control.KmeliaSessionController.java", "BodyUseAPI": ["com.stratelia.silverpeas.silvertrace.SilverTrace.warn(java.lang.String,java.lang.String,java.lang.String,((nodeId + \" is no more in \") + (getComponentId())))", "com.stratelia.webactiv.kmelia.control.ejb.KmeliaBm.getNodeHeader(java.lang.String,getComponentId())"], "Fixed commit": "a477041349c7e53b93ee758c9088906bcc299087", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Components", "Date": "2018-04-30T16:41:34Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.zeebe.msgpack.spec.MsgPackToken.getSize()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (mapElements > 0) { parsingContextStack.push(new io.zeebe.msgpack.mapping.MsgPackDocumentIndexer.TokenParseContext(io.zeebe.msgpack.mapping.MsgPackDocumentIndexer.ParsingMode.MAP_ENTRY, nodeId, (mapElements * 2))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5272/buggy-version/json-path.src.main.java.io.zeebe.msgpack.mapping.MsgPackDocumentIndexer.java", "BodyUseAPI": ["java.util.Deque<io.zeebe.msgpack.mapping.MsgPackDocumentIndexer.TokenParseContext>.push(io.zeebe.msgpack.mapping.MsgPackDocumentIndexer.TokenParseContext)"], "Fixed commit": "5d5b630753aa9ab5f61276318e2e82f089bc35d8", "Url": "https://api.github.com/repos/zeebe-io/zeebe", "Date": "2018-09-24T08:36:27Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.zeebe.msgpack.spec.MsgPackToken.getSize()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (arrayElements > 0) { parsingContextStack.push(new io.zeebe.msgpack.mapping.MsgPackDocumentIndexer.TokenParseContext(io.zeebe.msgpack.mapping.MsgPackDocumentIndexer.ParsingMode.ARRAY_ENTRY, arrayNodeId, arrayElements)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5272/buggy-version/json-path.src.main.java.io.zeebe.msgpack.mapping.MsgPackDocumentIndexer.java", "BodyUseAPI": ["java.util.Deque<io.zeebe.msgpack.mapping.MsgPackDocumentIndexer.TokenParseContext>.push(io.zeebe.msgpack.mapping.MsgPackDocumentIndexer.TokenParseContext)"], "Fixed commit": "5d5b630753aa9ab5f61276318e2e82f089bc35d8", "Url": "https://api.github.com/repos/zeebe-io/zeebe", "Date": "2018-09-24T08:36:27Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["retrofit2.Response<com.blueangels.Model.Vote>.body()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((votes != null) && (votes.getVote().equals(\"success\"))) { count.setText(\"Total Vote Count: 1\"); vote.setText(\"Voted\"); vote.setBackground(android.support.v4.content.ContextCompat.getDrawable(this, R.drawable.vote_btn_style)); es.dmoral.toasty.Toasty.success(this, \"Voted Successfully!!!\").show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1429/buggy-version/app.src.main.java.com.blueangels.Activity.CandidateDetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "dfa503695f89606dfbd1351bf55e5d4aecc3bfeb", "Url": "https://api.github.com/repos/ashithvl/mVotingApp", "Date": "2018-04-17T10:56:41Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isNotBlank(integerProperty.getFormat())) { type = new io.github.swagger2markup.internal.type.BasicType(integerProperty.getType(), integerProperty.getTitle(), integerProperty.getFormat()); }else { type = new io.github.swagger2markup.internal.type.BasicType(property.getType(), property.getTitle()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2385/buggy-version/src.main.java.io.github.swagger2markup.internal.adapter.PropertyAdapter.java", "BodyUseAPI": ["io.swagger.models.properties.IntegerProperty.getFormat()", "io.swagger.models.properties.IntegerProperty.getTitle()", "io.swagger.models.properties.IntegerProperty.getType()"], "Fixed commit": "ed99b70d4cf75f267dca325c80e05ffbdc8af4aa", "Url": "https://api.github.com/repos/MarosPataky/swagger2markup", "Date": "2018-10-14T17:42:22Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((model.ClientRoot._instance.isSeverDown) == isSeverDown) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8749/buggy-version/app.src.main.java.model.ClientRoot.java", "BodyUseAPI": [], "Fixed commit": "fe25ac3e3f1412b66d13e9545def17b1c2fe2172", "Url": "https://api.github.com/repos/bdemann/ticket-to-ride", "Date": "2018-04-18T03:03:29Z"},
{"Line": "=>2431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ge.research.sadl.jena.JenaBasedSadlModelValidator.TypeCheckInfo.getTypeCheckType()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ci != null) { throw new com.ge.research.sadl.reasoner.InvalidNameException(((\"addEffectiveRangeByTypeCheckInfo called with TypeCheckInfo '\" + (subjTCI.toString())) + \", which isn't handled.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2795/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.JenaBasedSadlModelValidator.java", "BodyUseAPI": [], "Fixed commit": "b5662bf4d6464be78a4c840b542692d7a33ea51c", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2018-07-24T19:16:30Z"},
{"Line": "=>582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entity.livingentity.Monster.monsters.size()) != 0) { closest = entity.livingentity.Monster.getMonsters().get(0); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6805/buggy-version/src.entity.livingentity.Monster.java", "BodyUseAPI": [], "Fixed commit": "9ac6c5cc362bf42264e4f4b44b50b5a7e86d8c1c", "Url": "https://api.github.com/repos/Shaimr2016/Rogue", "Date": "2018-06-01T22:57:47Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["entity.livingentity.Monster.getClosestMonster(main.GameManager.getPlayer())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (m == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6805/buggy-version/src.entity.lifelessentity.item.Wand.java", "BodyUseAPI": [], "Fixed commit": "9ac6c5cc362bf42264e4f4b44b50b5a7e86d8c1c", "Url": "https://api.github.com/repos/Shaimr2016/Rogue", "Date": "2018-06-01T22:57:47Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((winnerLabel) != null) { remove(winnerLabel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9607/buggy-version/src.project.breakout.view.BreakoutView.java", "BodyUseAPI": [], "Fixed commit": "37c209c9a07b1a46a35de1bc331dd2411e14d812", "Url": "https://api.github.com/repos/TiKo98/BreakoutProject", "Date": "2018-02-26T12:30:40Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getItemId()) != (android.R.id.home)) { item.setChecked((!(item.isChecked()))); clearPreviousSearchData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9241/buggy-version/app.src.main.java.com.huynhtinh.android.findhp.view.map.MapsActivity.java", "BodyUseAPI": ["android.view.MenuItem.setChecked((!(item.isChecked())))", "android.view.MenuItem.isChecked()"], "Fixed commit": "f4ef0b1052bc9ab6301fa997ee58f8a0407759ac", "Url": "https://api.github.com/repos/TinhHuynh/FindHP", "Date": "2018-03-17T03:52:31Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((usage.getFrom()) > 0) && ((usage.getTo()) == ((getInnerLength()) - 1))) { shiftToIndex(0, usage); usage = new Blatt3.NonEmptyInterval(0, usage.getSize(getInnerLength())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4054/buggy-version/src.Blatt3.DynamicArray.java", "BodyUseAPI": ["Blatt3.Interval.getSize(int)", "Blatt3.DynamicArray.shiftToIndex(int,Blatt3.Interval)"], "Fixed commit": "9d5077ce2ef44a794f42c6167240f8f3983da689", "Url": "https://api.github.com/repos/JustusvonderBeek/GAD", "Date": "2018-05-02T10:57:57Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (limit1 >= 1) { ps.setFetchSize(limit1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/258/buggy-version/src.dao2.DB.java", "BodyUseAPI": ["java.sql.PreparedStatement.setFetchSize(int)"], "Fixed commit": "bef6d7e7b2a7ee1beb114da55f01fa83cf36012d", "Url": "https://api.github.com/repos/koryovip/Ideas", "Date": "2018-08-16T03:54:09Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (limit1 >= 1) { sql += java.lang.String.format(\" FETCH NEXT %d ROWS ONLY\", limit1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/258/buggy-version/src.dao2.DB.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,int)"], "Fixed commit": "bef6d7e7b2a7ee1beb114da55f01fa83cf36012d", "Url": "https://api.github.com/repos/koryovip/Ideas", "Date": "2018-08-16T03:54:09Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (offset0 >= 0) { sql += java.lang.String.format(\" OFFSET %d ROWS\", offset0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/258/buggy-version/src.dao2.DB.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,int)"], "Fixed commit": "bef6d7e7b2a7ee1beb114da55f01fa83cf36012d", "Url": "https://api.github.com/repos/koryovip/Ideas", "Date": "2018-08-16T03:54:09Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["service.getAnswers().execute()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (response.isSuccessful()) { gotAnswer = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2576/buggy-version/app.src.main.java.ru.com.penza.lesson11.MyBackgroundTask.java", "BodyUseAPI": [], "Fixed commit": "9cad010c92240826770dd7bb8246ae4dc148794f", "Url": "https://api.github.com/repos/ljubchenkok/Lesson11", "Date": "2018-02-13T09:00:26Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPreview) { backdrop.setColor(GuiColors.change); moduleString.setColor(GuiColors.change); }else { backdrop.setColor(color); moduleString.setColor(color); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/442/buggy-version/src.main.java.se.mickelus.tetra.blocks.workbench.gui.GuiModuleMinor.java", "BodyUseAPI": [], "Fixed commit": "58c2e597ff2b06e0236482d8005aef548be7f1ee", "Url": "https://api.github.com/repos/mickelus/tetra", "Date": "2018-06-03T23:27:55Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (total == 0.0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7829/buggy-version/Mage.Client.src.main.java.mage.client.cards.ManaPieChart.java", "BodyUseAPI": [], "Fixed commit": "51b266a2de7e08e51647bd975a525b4bedd12579", "Url": "https://api.github.com/repos/use/mage", "Date": "2018-03-15T09:47:31Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mUseLocation) letsDoSomeNetworking(params);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7334/buggy-version/app.src.main.java.com.londonappbrewery.climapm.WeatherController.java", "BodyUseAPI": [], "Fixed commit": "aa3b279ab989e5bbcab33df40218d7efd27f8186", "Url": "https://api.github.com/repos/JayTBennett/Clima-Android", "Date": "2018-05-26T12:03:48Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (analysisName.equals(experiment.getName())) { service.exportBMDExpressAnalysisDataSet(experiment, new java.io.File(outputFile)); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6255/buggy-version/src.com.sciome.bmdexpress2.commandline.ExportRunner.java", "BodyUseAPI": ["com.sciome.bmdexpress2.service.ProjectNavigationService.exportBMDExpressAnalysisDataSet(com.sciome.bmdexpress2.mvp.model.prefilter.OriogenResults,java.io.File)"], "Fixed commit": "bc4b5f5dfc6bd1e14897eb6146a7dc93d4fd8fed", "Url": "https://api.github.com/repos/auerbachs/BMDExpress-2", "Date": "2018-09-14T13:40:32Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (analysisName.equals(experiment.getName())) { service.exportBMDExpressAnalysisDataSet(experiment, new java.io.File(outputFile)); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6255/buggy-version/src.com.sciome.bmdexpress2.commandline.ExportRunner.java", "BodyUseAPI": ["com.sciome.bmdexpress2.service.ProjectNavigationService.exportBMDExpressAnalysisDataSet(com.sciome.bmdexpress2.mvp.model.prefilter.OneWayANOVAResults,java.io.File)"], "Fixed commit": "bc4b5f5dfc6bd1e14897eb6146a7dc93d4fd8fed", "Url": "https://api.github.com/repos/auerbachs/BMDExpress-2", "Date": "2018-09-14T13:40:32Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (analysisName.equals(experiment.getName())) { service.exportBMDExpressAnalysisDataSet(experiment, new java.io.File(outputFile)); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6255/buggy-version/src.com.sciome.bmdexpress2.commandline.ExportRunner.java", "BodyUseAPI": ["com.sciome.bmdexpress2.service.ProjectNavigationService.exportBMDExpressAnalysisDataSet(com.sciome.bmdexpress2.mvp.model.category.CategoryAnalysisResults,java.io.File)"], "Fixed commit": "bc4b5f5dfc6bd1e14897eb6146a7dc93d4fd8fed", "Url": "https://api.github.com/repos/auerbachs/BMDExpress-2", "Date": "2018-09-14T13:40:32Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (analysisName.equals(experiment.getName())) { service.exportBMDExpressAnalysisDataSet(experiment, new java.io.File(outputFile)); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6255/buggy-version/src.com.sciome.bmdexpress2.commandline.ExportRunner.java", "BodyUseAPI": ["com.sciome.bmdexpress2.service.ProjectNavigationService.exportBMDExpressAnalysisDataSet(com.sciome.bmdexpress2.mvp.model.prefilter.WilliamsTrendResults,java.io.File)"], "Fixed commit": "bc4b5f5dfc6bd1e14897eb6146a7dc93d4fd8fed", "Url": "https://api.github.com/repos/auerbachs/BMDExpress-2", "Date": "2018-09-14T13:40:32Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (analysisName.equals(experiment.getName())) { service.exportBMDExpressAnalysisDataSet(experiment, new java.io.File(outputFile)); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6255/buggy-version/src.com.sciome.bmdexpress2.commandline.ExportRunner.java", "BodyUseAPI": ["com.sciome.bmdexpress2.service.ProjectNavigationService.exportBMDExpressAnalysisDataSet(com.sciome.bmdexpress2.mvp.model.stat.BMDResult,java.io.File)"], "Fixed commit": "bc4b5f5dfc6bd1e14897eb6146a7dc93d4fd8fed", "Url": "https://api.github.com/repos/auerbachs/BMDExpress-2", "Date": "2018-09-14T13:40:32Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!foundSolution) throw new java.lang.Exception(\"WARNING: A path to the goal could not be found.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5802/buggy-version/src.main.java.mars.algorithm.unlimited.AlgorithmUnlimitedBestFirst.java", "BodyUseAPI": [], "Fixed commit": "73e53134fff0ca9843a90cd26fe5e7e4e66b0d5a", "Url": "https://api.github.com/repos/RossBlassingame/JPL-CUSeniorProjects", "Date": "2018-02-28T03:53:23Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["result.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(s.equals(\"\"))) createJob(result); else android.widget.Toast.makeText(getActivity(), \"no job number entered\", Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1116/buggy-version/app.src.main.java.aaacomms.aaa_app.JobSheetFragment.java", "BodyUseAPI": [], "Fixed commit": "570408bd3dce06aab615642936c2af7d15203fc0", "Url": "https://api.github.com/repos/MDBarrett/AAA_App", "Date": "2018-09-28T07:34:24Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (body == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5605/buggy-version/app.src.main.java.com.vasskob.downloadmaps.global.DownloadService.java", "BodyUseAPI": [], "Fixed commit": "9d31283af069ebb6107b46a3f746ca6758b4ed8e", "Url": "https://api.github.com/repos/vasskob/OSMsemple", "Date": "2018-01-26T16:09:33Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(data.game_id.equals(\"\"))) values.put(StreamEntry.COLUMN_GAME_ID, java.lang.Long.parseLong(data.game_id));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8133/buggy-version/app.src.main.java.mseffner.twitchnotifier.data.ChannelDb.java", "BodyUseAPI": ["java.lang.Long.parseLong(data.game_id)", "android.content.ContentValues.put(StreamEntry.COLUMN_GAME_ID,long)"], "Fixed commit": "8f2583bec3288a83050e8f9a55cf56447b3cd574", "Url": "https://api.github.com/repos/mseffner/better-twitch-following-list", "Date": "2018-03-05T21:10:42Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((operands.size()) > 0) { operators.push('.'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/449/buggy-version/src.main.java.grephy.RegexConverter.java", "BodyUseAPI": [], "Fixed commit": "209f841c7e8aa9550c768552e2b106315317a4f8", "Url": "https://api.github.com/repos/liamrharwood/Grephy", "Date": "2018-04-23T23:12:02Z"},
{"Line": "=>587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((attrs == null) && (!(entryNameAfter.equals(entryName)))) { return nl.nn.adapterframework.ldap.LdapSender.DEFAULT_RESULT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/874/buggy-version/core.src.main.java.nl.nn.adapterframework.ldap.LdapSender.java", "BodyUseAPI": [], "Fixed commit": "482191320b348075c63d7fc309037bf16407fd2c", "Url": "https://api.github.com/repos/nielslam/iaf", "Date": "2018-01-08T14:13:48Z"},
{"Line": "=>1664", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parts.length()) > 0) { parts.append(value); value = parts.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8536/buggy-version/java_source.de.lmu.ifi.bio.watchdog.xmlParser.XMLParser.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "89e214e45e560ea7889a63a6c4fa73db16bac4a0", "Url": "https://api.github.com/repos/klugem/watchdog", "Date": "2018-07-06T14:26:25Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["EmployeeDatabase.findManager(Employee)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (manager == null) { return 0; }else { return 1 + (countManagersAbove(manager)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6453/buggy-version/src.main.java.EmployeeDatabase.java", "BodyUseAPI": ["EmployeeDatabase.countManagersAbove(Employee)"], "Fixed commit": "2f3349efb94d4d240a671993e74b2f919d8d3d4f", "Url": "https://api.github.com/repos/bsc2/Lab8", "Date": "2018-03-14T17:47:16Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.game.getNumerRuchu()) % 2) != 0) { this.game.getBoard().getFields()[i][j] = pl.chizynski.kolkokrzyzyk.boards.Board.CROSS; }else if (((this.game.getNumerRuchu()) % 2) == 0) { this.game.getBoard().getFields()[i][j] = pl.chizynski.kolkokrzyzyk.boards.Board.CIRCLE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8990/buggy-version/src.pl.chizynski.kolkokrzyzyk.Window.java", "BodyUseAPI": ["pl.chizynski.kolkokrzyzyk.Game.getNumerRuchu()", "pl.chizynski.kolkokrzyzyk.Game.getBoard()", "pl.chizynski.kolkokrzyzyk.Game.getBoard()", "this.game.getBoard().getFields()", "this.game.getBoard().getFields()"], "Fixed commit": "5c49b6706eb7d54d8a5b2c71c09170f7d852c8ec", "Url": "https://api.github.com/repos/reichelitetrader/kolkoikrzyzyk", "Date": "2018-08-09T18:42:22Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (fileToSaveName == null) return exists; else { java.nio.file.Path filePathName = fileToSaveName.toPath(); exists = java.nio.file.Files.exists(filePathName); return exists; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/765/buggy-version/src.main.java.controller.FileController.java", "BodyUseAPI": ["java.io.File.toPath()"], "Fixed commit": "82a89ebfc776193133ea09e1e2db58496f218a01", "Url": "https://api.github.com/repos/SER515-IllegalSkillsException/TextEditor", "Date": "2018-10-14T19:10:26Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (currentMessage != null) messages.add(currentMessage);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/2389/buggy-version/src.main.java.net.heyzeer0.aladdin.commands.music.LyricsCommand.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "cf7d6bfed60181eff37659f328e1a1711a6b1932", "Url": "https://api.github.com/repos/AladdinBOT/Aladdin", "Date": "2018-08-20T19:36:11Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= (android.os.Build.VERSION_CODES.N)) finish();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7431/buggy-version/app.src.main.java.com.troll.myapplication.CONCORD.java", "BodyUseAPI": [], "Fixed commit": "a4f3d58f8b424f8d079f12ce52994d36a657a600", "Url": "https://api.github.com/repos/danieldeng2/MyApplication", "Date": "2018-04-18T18:54:52Z"},
{"Line": "=>1076", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"true\".equalsIgnoreCase(org.sunbird.common.models.util.ProjectUtil.getConfigValue(JsonKey.SUNBIRD_OPENSABER_BRIDGE_ENABLE))) { if (null == userDbRecord) { userDbRecord = org.sunbird.learner.util.Util.getUserbyUserId(((java.lang.String) (userMap.get(JsonKey.USER_ID)))); } userMap.put(JsonKey.REGISTRY_ID, userDbRecord.get(JsonKey.REGISTRY_ID)); org.sunbird.extension.user.UserExtension userExtension = new org.sunbird.extension.user.impl.UserProviderRegistryImpl(); userExtension.update(userMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1523/buggy-version/actors.user.src.main.java.org.sunbird.user.actors.UserManagementActor.java", "BodyUseAPI": [], "Fixed commit": "64ab8b23e46d8216ef1f62f5c14ff7ee09b8655c", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-mw", "Date": "2018-07-23T10:27:30Z"},
{"Line": "=>1626", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"true\".equalsIgnoreCase(org.sunbird.common.models.util.ProjectUtil.getConfigValue(JsonKey.SUNBIRD_OPENSABER_BRIDGE_ENABLE))) { org.sunbird.extension.user.UserExtension userExtension = new org.sunbird.extension.user.impl.UserProviderRegistryImpl(); userExtension.create(userMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1523/buggy-version/actors.user.src.main.java.org.sunbird.user.actors.UserManagementActor.java", "BodyUseAPI": [], "Fixed commit": "64ab8b23e46d8216ef1f62f5c14ff7ee09b8655c", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-mw", "Date": "2018-07-23T10:27:30Z"},
{"Line": "=>616", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (targetRegion != startRegion) { while ((reversedRegionAccessOrder.get(currentRegion)) != startRegion) { currentRegion = reversedRegionAccessOrder.get(currentRegion); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1686/buggy-version/CBot.src.unitControlModule.stateFactories.actions.executableActions.BaseAction.java", "BodyUseAPI": [], "Fixed commit": "40519413ba76453bfe987e3a5e1441d8d70e25f4", "Url": "https://api.github.com/repos/p1387h/CBot", "Date": "2018-04-10T17:12:57Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((errorsReadingInputFile.size()) != 0) && (numOfAvailableLineForSolution != null)) { PuzzleSolver puzzleSolver = new PuzzleSolver(puzzleElementList, numOfAvailableLineForSolution, availableOptionsForSolution); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3208/buggy-version/src.main.java.Puzzle.java", "BodyUseAPI": [], "Fixed commit": "b1766956186395b68556299915a1699ab7672182", "Url": "https://api.github.com/repos/tufman/jigsaw1", "Date": "2018-03-31T14:28:32Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.time.Period.between(dayRation.getDate(),java.time.LocalDate)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((period.getDays()) == (period.getDays())) && ((period.getMonths()) != 0)) { flag = false; }else if (java.util.Objects.isNull(dayRation.getUser())) { flag = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/577/buggy-version/src.main.java.ua.training.model.dao.mapper.DayRationMapper.java", "BodyUseAPI": [], "Fixed commit": "c40e75fc4bc99b784a33b7968b54afcde091d585", "Url": "https://api.github.com/repos/ZakStr/SWFT", "Date": "2018-06-01T09:26:51Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(fieldsForSort.isEmpty())) { list.sort(comparator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/577/buggy-version/src.main.java.ua.training.controller.commands.utility.CommandsUtil.java", "BodyUseAPI": [], "Fixed commit": "c40e75fc4bc99b784a33b7968b54afcde091d585", "Url": "https://api.github.com/repos/ZakStr/SWFT", "Date": "2018-06-01T09:26:51Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((com.darkona.adventurebackpack.config.ConfigHandler.IS_THAUMCRAFT) && (com.darkona.adventurebackpack.util.Utils.inClient())) { try { com.darkona.adventurebackpack.util.ThaumcraftUtils.toolRendererInstance = java.lang.Class.forName(com.darkona.adventurebackpack.util.ThaumcraftUtils.CLASS_RENDERER).newInstance(); } catch (java.lang.Exception e) { com.darkona.adventurebackpack.util.LogHelper.error((\"Error getting Thaumcraft Wands Renderer instance: \" + e)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/3549/buggy-version/src.main.java.com.darkona.adventurebackpack.util.ThaumcraftUtils.java", "BodyUseAPI": [], "Fixed commit": "f747721cabd4137ba8dcef06b16c7203c60eff31", "Url": "https://api.github.com/repos/Ugachaga/AdventureBackpack", "Date": "2018-02-21T08:57:50Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasNoOutgoingFlows || hasSingleNonConditionalOutgoingFlow) { gateway.bindLifecycleState(WorkflowInstanceIntent.GATEWAY_ACTIVATED, context.getCurrentFlowNodeOutgoingStep()); }else { gateway.bindLifecycleState(WorkflowInstanceIntent.GATEWAY_ACTIVATED, BpmnStep.EXCLUSIVE_SPLIT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4572/buggy-version/broker-core.src.main.java.io.zeebe.broker.workflow.model.transformation.handler.ExclusiveGatewayHandler.java", "BodyUseAPI": [], "Fixed commit": "75cd1539c730440a87c2fefeaa96c253b5e856ac", "Url": "https://api.github.com/repos/zeebe-io/zeebe", "Date": "2018-10-24T12:38:18Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((event.getPressure()) == 0) || ((event.getPressure()) < 0.05)) { this.setPressure(event.getSize()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4800/buggy-version/app.src.main.java.my.utar.phonesecurat.StructMotionElemts.java", "BodyUseAPI": ["android.view.MotionEvent.getSize()", "my.utar.phonesecurat.StructMotionElemts.setPressure(event.getSize())"], "Fixed commit": "0d32069a571fcf179fe85665419a998858c23524", "Url": "https://api.github.com/repos/tmarhem/PhoneSecurityUtar", "Date": "2018-02-09T19:34:14Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((network.isEmpty()) && ((section.getTo().getPoi()) != null)) && (section.getTo().getPoi().getProperties().containsKey(org.kisio.navitia.sdk.ui.util.NETWORK.getValue()))) { network = section.getTo().getPoi().getProperties().get(org.kisio.navitia.sdk.ui.util.NETWORK.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1354/buggy-version/navitiasdkux.src.main.java.org.kisio.navitia.sdk.ui.util.Format.java", "BodyUseAPI": ["section.getTo().getPoi().getProperties().get(org.kisio.navitia.sdk.ui.util.NETWORK.getValue())", "section.getTo().getPoi()", "section.getTo().getPoi().getProperties()", "org.kisio.NavitiaSDK.models.Section.getTo()"], "Fixed commit": "f38b78b4d741a79bbdd4f30866409e1433e845f5", "Url": "https://api.github.com/repos/CanalTP/NavitiaSDKUX_android", "Date": "2018-08-03T13:33:06Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.ualberta.cs.wrkify.Searcher.getUser(ca.ualberta.cs.wrkify.WrkifyClient.getInstance(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (user != null) { session.setUser(user, this); startActivity(new android.content.Intent(this, ca.ualberta.cs.wrkify.MainActivity.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6857/buggy-version/wrkify.app.src.main.java.ca.ualberta.cs.wrkify.LoginActivity.java", "BodyUseAPI": ["ca.ualberta.cs.wrkify.Session.setUser(ca.ualberta.cs.wrkify.User,ca.ualberta.cs.wrkify.LoginActivity)"], "Fixed commit": "4fc3c73586a9c68a4f4f3f2253c3faf725d642b4", "Url": "https://api.github.com/repos/CMPUT301W18T18/wrkify", "Date": "2018-03-19T01:37:38Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.ualberta.cs.wrkify.RemoteClient.search(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((results.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6857/buggy-version/wrkify.app.src.main.java.ca.ualberta.cs.wrkify.Searcher.java", "BodyUseAPI": [], "Fixed commit": "4fc3c73586a9c68a4f4f3f2253c3faf725d642b4", "Url": "https://api.github.com/repos/CMPUT301W18T18/wrkify", "Date": "2018-03-19T01:37:38Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (update) { if ((retrofitActivity().getLoggedInUser()) != null) { retrofitActivity().handleReq(retrofitActivity().userConfigService.UserConfigUpdate(config, retrofitActivity().getLoggedInUser().Id), new se.oort.diplicity.Sendable<se.oort.diplicity.apigen.SingleContainer<se.oort.diplicity.apigen.UserConfig>>() { @java.lang.Override public void send(se.oort.diplicity.apigen.SingleContainer<se.oort.diplicity.apigen.UserConfig> userConfigSingleContainer) { configContainer.Properties = userConfigSingleContainer.Properties; populateColorOverrides(configContainer); } }, getResources().getString(R.string.updating_settings)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/8122/buggy-version/app.src.main.java.se.oort.diplicity.PreferenceActivity.java", "BodyUseAPI": [], "Fixed commit": "1c5db2b6c09b839dcff802c3acda5678d93c20cd", "Url": "https://api.github.com/repos/zond/android-diplicity", "Date": "2018-05-19T06:58:27Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"Men\".equals(gender)) { oppoGender = \"Women\"; }else if (\"Women\".equals(gender)) { oppoGender = \"Men\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9143/buggy-version/app.src.main.java.edu.gatech.cs2340.vaspa.buzzshelter.model.Model.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "20a0c69cfc184770f16bf23e088ffa9778552d43", "Url": "https://api.github.com/repos/adi00026/CS2340-52", "Date": "2018-04-17T20:12:51Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (jwtTokenUtil)) { javax.servlet.ServletContext servletContext = request.getServletContext(); org.springframework.web.context.WebApplicationContext webApplicationContext = org.springframework.web.context.support.WebApplicationContextUtils.getWebApplicationContext(servletContext); jwtTokenUtil = webApplicationContext.getBean(com.medi.web.util.JwtTokenUtil.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/9024/buggy-version/Spring_Boot_Gradle.src.main.java.com.medi.web.filter.WebSecurityfilter.java", "BodyUseAPI": [], "Fixed commit": "d14bc764cf00845e4aa846c5e9ba265c52621c0b", "Url": "https://api.github.com/repos/Souvik26/MEDICARE", "Date": "2018-10-22T19:18:00Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((GameOfLife.gameOfLifeMapSnapShot) == null) { initializeGameOfLifeMapSnapShot(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7110/buggy-version/src.GameOfLife.java", "BodyUseAPI": [], "Fixed commit": "81f65ba95261708e6675be797464bfd29ca85976", "Url": "https://api.github.com/repos/dondonuyking/GameOfLife", "Date": "2018-03-11T11:07:59Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentState) == (tcking.github.com.giraffeplayer2.GiraffePlayer.STATE_PLAYBACK_COMPLETED)) && (!(canSeekForward))) { releaseMediaPlayer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/1857/buggy-version/giraffeplayer2.src.main.java.tcking.github.com.giraffeplayer2.GiraffePlayer.java", "BodyUseAPI": [], "Fixed commit": "2532772c4692b3099e3d8725284574a6068e7f4f", "Url": "https://api.github.com/repos/tcking/GiraffePlayer2", "Date": "2018-02-28T03:17:22Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCamera) == null) { openCamera(SELECTED_CAMERA); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/5874/buggy-version/simple.view.constraint_use_demo.src.main.java.com.meitu.netlib.constraintdemo.camera.callback.CameraInterface.java", "BodyUseAPI": [], "Fixed commit": "ebb8abe7236eececa35e30825933d75c59b4a0b7", "Url": "https://api.github.com/repos/dreamDemo/demo", "Date": "2018-05-03T12:38:33Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((clientSide.DropboxPanel) (c.gui.getPanels()[PanelList.DROPBOX])).submissionsList.isSelectionEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4880/buggy-version/clientSide.Professor.java", "BodyUseAPI": [], "Fixed commit": "585434350080dab2469bb148f1c086047ae4074a", "Url": "https://api.github.com/repos/SunnyNagam/LearningPlatform", "Date": "2018-04-12T05:59:31Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((c.selectedCourse) == (-1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4880/buggy-version/clientSide.Professor.java", "BodyUseAPI": [], "Fixed commit": "585434350080dab2469bb148f1c086047ae4074a", "Url": "https://api.github.com/repos/SunnyNagam/LearningPlatform", "Date": "2018-04-12T05:59:31Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((c.selectedCourse) == (-1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/4880/buggy-version/clientSide.Professor.java", "BodyUseAPI": [], "Fixed commit": "585434350080dab2469bb148f1c086047ae4074a", "Url": "https://api.github.com/repos/SunnyNagam/LearningPlatform", "Date": "2018-04-12T05:59:31Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ctx.class_stat()) == null) { if (classStack.empty()) error(\"error construction function.\"); else { Hzfengsy.Listener.userType userClass = ((Hzfengsy.Listener.userType) (classStack.peek().getType())); java.lang.String userClassName = userClass.getName(); if (userClassName.equals(funcName)) className = userClassName; else error(\"error construction function.\"); } }else className = ctx.class_stat().getText();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/96/buggy-version/src.Hzfengsy.Listener.Visitor.java", "BodyUseAPI": ["ctx.class_stat().getText()", "MParser.FuncContext.class_stat()"], "Fixed commit": "908d8724f5ac187156532da8de0af03dbee05d5d", "Url": "https://api.github.com/repos/Hzfengsy/M-Compiler", "Date": "2018-04-18T01:06:26Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.gree.air.condition.constant.Constant.Init_Success)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7404/buggy-version/src.com.gree.air.condition.uart.model.MbWriteModel.java", "BodyUseAPI": [], "Fixed commit": "cff88899d7729f05f659bfc3324ebcdc21caf9db", "Url": "https://api.github.com/repos/tt2nn/Gree-AirCondition", "Date": "2018-03-07T09:59:49Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.gree.air.condition.constant.Constant.Init_Success)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7404/buggy-version/src.com.gree.air.condition.uart.model.SeveneModel.java", "BodyUseAPI": [], "Fixed commit": "cff88899d7729f05f659bfc3324ebcdc21caf9db", "Url": "https://api.github.com/repos/tt2nn/Gree-AirCondition", "Date": "2018-03-07T09:59:49Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.activity.CropActivity.findPoints()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (points != null) { mSelectionImageView.setPoints(points); }else { com.owncloud.android.lib.common.utils.Log_OC.d(com.owncloud.android.ui.activity.CropActivity.TAG, getResources().getString(R.string.no_contour_found)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/7051/buggy-version/src.com.owncloud.android.ui.activity.CropActivity.java", "BodyUseAPI": ["com.owncloud.android.ui.QuadrilateralSelectionImageView.setPoints(java.util.List<android.graphics.PointF>)"], "Fixed commit": "eb88207c811a552a7317d19f64e52011f6d28331", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-03-12T06:43:04Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(path.endsWith(\"/\"))) { path = path + \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6772/buggy-version/smart-hadoop-support.smart-hadoop.src.main.java.org.smartdata.hdfs.metric.fetcher.InotifyEventApplier.java", "BodyUseAPI": [], "Fixed commit": "e3cf07c9e08918d2d7eba2104271d4732b58d739", "Url": "https://api.github.com/repos/PHILO-HE/SSM", "Date": "2018-06-13T06:23:08Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (maxPasswordLength == (currentPasswordText.length())) { startActivity(new android.content.Intent(this, com.itant.numberpassword.SecondActivity.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/6101/buggy-version/app.src.main.java.com.itant.numberpassword.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3fce66ca426cccd75929d3086998de24deac4ec7", "Url": "https://api.github.com/repos/ITAnt/NumberPassword", "Date": "2018-06-03T04:27:31Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (m < (temp.length)) { b = temp[m]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/91/buggy-version/07Merge.Merge.java", "BodyUseAPI": [], "Fixed commit": "480fe5742f227b0d4973b18a0908e4d2fc79e448", "Url": "https://api.github.com/repos/shuxinwu/MKS22X", "Date": "2018-03-26T00:37:24Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lo < (temp.length)) { a = temp[lo]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V168/91/buggy-version/07Merge.Merge.java", "BodyUseAPI": [], "Fixed commit": "480fe5742f227b0d4973b18a0908e4d2fc79e448", "Url": "https://api.github.com/repos/shuxinwu/MKS22X", "Date": "2018-03-26T00:37:24Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (vipLevel == 3) { tvVip3.setBackgroundColor(getResources().getColor(R.color.color_00aeff)); tvVip3.setTextColor(getResources().getColor(R.color.colorWhite)); tvVip1.setBackgroundResource(R.mipmap.vip_recharge_bg_b); tvVip1.setTextColor(getResources().getColor(R.color.color_00aeff)); tvVip2.setBackgroundResource(R.mipmap.vip_recharge_bg_b); tvVip2.setTextColor(getResources().getColor(R.color.color_00aeff)); if (tvVip1.isClickable()) { tvVip1.setBackgroundResource(R.mipmap.vip_recharge_bg_b); tvVip1.setTextColor(getResources().getColor(R.color.color_00aeff)); } if (tvVip2.isClickable()) { tvVip2.setBackgroundResource(R.mipmap.vip_recharge_bg_b); tvVip2.setTextColor(getResources().getColor(R.color.color_00aeff)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4660/buggy-version/app.src.main.java.com.game.helper.fragments.recharge.RechargeVIPLevelFragment.java", "BodyUseAPI": [], "Fixed commit": "b1cc08aff2906096a9dbf9f48f5627f7a1a04af0", "Url": "https://api.github.com/repos/rysq008/GXPlay", "Date": "2018-01-03T05:03:46Z"},
{"Line": "=>1112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getContentType()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (contentType == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/723/buggy-version/src.main.java.org.wildfly.security.x500.cert.acme.AcmeClientSpi.java", "BodyUseAPI": [], "Fixed commit": "9ee1e7991b144e346f6f9023e85573f342dc44f6", "Url": "https://api.github.com/repos/nekdozjam/wildfly-elytron", "Date": "2018-09-24T17:41:01Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.Objects.isNull(unencodedValue)) { builder.setNullResult(NullValue.NULL_VALUE); }else if (java.lang.Integer.class.equals(unencodedValue.getClass())) { builder.setIntResult(((java.lang.Integer) (unencodedValue))); }else if (java.lang.Long.class.equals(unencodedValue.getClass())) { builder.setLongResult(((java.lang.Long) (unencodedValue))); }else if (java.lang.Short.class.equals(unencodedValue.getClass())) { builder.setShortResult(((java.lang.Short) (unencodedValue))); }else if (java.lang.Byte.class.equals(unencodedValue.getClass())) { builder.setByteResult(((java.lang.Byte) (unencodedValue))); }else if (java.lang.Double.class.equals(unencodedValue.getClass())) { builder.setDoubleResult(((java.lang.Double) (unencodedValue))); }else if (java.lang.Float.class.equals(unencodedValue.getClass())) { builder.setFloatResult(((java.lang.Float) (unencodedValue))); }else if (byte[].class.equals(unencodedValue.getClass())) { builder.setBinaryResult(com.google.protobuf.ByteString.copyFrom(((byte[]) (unencodedValue)))); }else if (java.lang.Boolean.class.equals(unencodedValue.getClass())) { builder.setBooleanResult(((java.lang.Boolean) (unencodedValue))); }else if (java.lang.String.class.equals(unencodedValue.getClass())) { builder.setStringResult(((java.lang.String) (unencodedValue))); }else if (org.apache.geode.experimental.driver.JSONWrapper.class.isAssignableFrom(unencodedValue.getClass())) { builder.setJsonObjectResult(((org.apache.geode.experimental.driver.JSONWrapper) (unencodedValue)).getJSON()); }else { throw new java.lang.IllegalStateException((((\"We don't know how to handle an object of type \" + (unencodedValue.getClass())) + \": \") + unencodedValue)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1164/buggy-version/geode-experimental-driver.src.main.java.org.apache.geode.experimental.driver.ValueEncoder.java", "BodyUseAPI": ["java.lang.Object.getClass()", "java.lang.Object.getClass()", "java.lang.Class.equals(java.lang.Class<? extends java.lang.Object>)", "java.lang.Class.equals(java.lang.Class<? extends java.lang.Object>)", "java.lang.Object.getClass()", "java.lang.Object.getClass()", "java.lang.Class.equals(java.lang.Class<? extends java.lang.Object>)", "java.lang.Class.equals(java.lang.Class<? extends java.lang.Object>)", "java.lang.Class.equals(java.lang.Class<? extends java.lang.Object>)", "java.lang.Object.getClass()", "java.lang.Class.isAssignableFrom(java.lang.Class<? extends java.lang.Object>)", "java.lang.Object.getClass()", "java.lang.Class.equals(java.lang.Class<? extends java.lang.Object>)", "java.lang.Object.getClass()", "java.lang.Class.equals(java.lang.Class<? extends java.lang.Object>)", "java.lang.Object.getClass()", "java.lang.Object.getClass()", "java.lang.Object.getClass()", "java.lang.Class.equals(java.lang.Class<? extends java.lang.Object>)", "java.lang.Object.getClass()", "java.lang.Class.equals(java.lang.Class<? extends java.lang.Object>)"], "Fixed commit": "3c31809dfacbda3185612528681b0fdb2a2418ad", "Url": "https://api.github.com/repos/galen-pivotal/geode", "Date": "2018-03-14T00:55:18Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCategoryListFragment) != null) return mCategoryListFragment; else return mCategoryListFragment = new com.unexceptional.beast.banko.ui.CategoryListFragment();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7078/buggy-version/app.src.main.java.com.unexceptional.beast.banko.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "58f46d1daf342b1ac04053143745d1c3514ad60f", "Url": "https://api.github.com/repos/Unexeptional/Banko", "Date": "2018-05-27T12:18:47Z"},
{"Line": "=>3125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (taxon == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4145/buggy-version/iNaturalist.src.main.java.org.inaturalist.android.ObservationEditor.java", "BodyUseAPI": [], "Fixed commit": "54ca2ae57b02d85760f220a074a1c6a3e0752d64", "Url": "https://api.github.com/repos/inaturalist/iNaturalistAndroid", "Date": "2018-05-09T11:36:31Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bahmni.csv.KeyValue.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((dateString != null) && ((dateString.length()) > 0)) { getDateFromString(dateString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4705/buggy-version/admin.src.main.java.org.bahmni.module.admin.csv.service.CSVPatientService.java", "BodyUseAPI": ["org.bahmni.module.admin.csv.service.CSVPatientService.getDateFromString(java.lang.String)"], "Fixed commit": "3209c89cada41464fdc4ac0d0cb3efb7cecda202", "Url": "https://api.github.com/repos/MSF-OCB/maadi-bahmni-core", "Date": "2018-10-26T08:39:47Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (e != null) { build.append(\"-- Caused by:\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2630/buggy-version/src.io.anuke.ucore.util.Strings.java", "BodyUseAPI": [], "Fixed commit": "a21478e3dc4824ef5f87eddfb896d845c00e6d2f", "Url": "https://api.github.com/repos/Anuken/uCore", "Date": "2018-06-30T04:09:03Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (field instanceof gov.redhawk.model.sca.ScaSimpleSequenceProperty) { final gov.redhawk.model.sca.ScaSimpleSequenceProperty simpleSeq = ((gov.redhawk.model.sca.ScaSimpleSequenceProperty) (field)); if (!(simpleSeq.isSetValues())) { simpleSeq.getValues().clear(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4794/buggy-version/plugins.gov.redhawk.sca.ui.src.gov.redhawk.sca.internal.ui.properties.StructSequencePropertyValueWizardPage.java", "BodyUseAPI": [], "Fixed commit": "0d89fbfcbaedf8579ea03225978732283fe9cfe6", "Url": "https://api.github.com/repos/RedhawkSDR/gov.redhawk.core", "Date": "2018-07-23T17:03:34Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(matcher.find())) { endWeek = 17; }else { while (matcher.find()) { endweek = matcher.group(0); classes++; } endweek = endweek.substring(1, ((endweek.length()) - 1)); endWeek = java.lang.Integer.decode(endweek); if ((endWeek - startWeek) == (classes * 2)) { if ((startWeek % 2) == 1) { course.setWeekType(Course.WEEK_SINGLE); }else { course.setWeekType(Course.WEEK_DOUBLE); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4185/buggy-version/app.src.main.java.com.idealclover.wheretosleepinnju.utils.spec.ParseCourse.java", "BodyUseAPI": ["java.util.regex.Matcher.find()", "java.util.regex.Matcher.group(int)"], "Fixed commit": "67d0b5f3b61615b3b0b9d29b9463bbfb685ba8f9", "Url": "https://api.github.com/repos/Nosolution/NJU-Class-Shedule-Android", "Date": "2018-09-14T07:43:52Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((duration.toMillis()) >= 60000) return org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(duration.toMillis(), \"H:mm\"); else return (org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(duration.toMillis(), \"s\")) + \" secs\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7004/buggy-version/src.main.java.au.com.noojee.acceloapi.util.Format.java", "BodyUseAPI": ["org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String)", "java.time.Duration.toMillis()", "java.time.Duration.toMillis()", "org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String)"], "Fixed commit": "83e1d92f282fc9aeab1983396a87b14c5ee181ac", "Url": "https://api.github.com/repos/bsutton/acceloapi", "Date": "2018-09-24T05:03:38Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.elmakers.mine.bukkit.api.block.com.elmakers.mine.bukkit.block.BlockData.fromString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (deserialized == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1185/buggy-version/Magic.src.main.java.com.elmakers.mine.bukkit.block.BlockList.java", "BodyUseAPI": [], "Fixed commit": "521dd875e0ac3215fc7bc7b3ae26eec50f1b7924", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2018-07-23T18:15:53Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((propData.length) > 1) { propVal = propData[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4521/buggy-version/src.main.java.in.dream_lab.goffish.godb.CreatingHeuristics.java", "BodyUseAPI": [], "Fixed commit": "df5afd249eb5db9ef766a975d927e156917e61a3", "Url": "https://api.github.com/repos/abhilashsharma/CostModelSimulator", "Date": "2018-01-23T19:53:19Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bsTable.getSelectedRow()) != (-1)) { busListTable.removeBus(java.lang.Integer.parseInt(TempArray[bsTable.getSelectedRow()][0])); busListTable.exportBuses(); updateTable(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/5549/buggy-version/src.main.java.memoDrive.ui.BusesPanel.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "javax.swing.JTable.getSelectedRow()", "main.java.memoDrive.bus.BusList.removeBus(int)"], "Fixed commit": "f621366dfcb574d6083590dafe16a41f350d65fa", "Url": "https://api.github.com/repos/ser316asu/SER316-leipzig-SPRING18", "Date": "2018-04-10T02:08:37Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (io.reactivex.internal.disposables.DisposableHelper.validate(this.d, d)) { this.d = d; actual.onSubscribe(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/42/buggy-version/src.main.java.io.reactivex.internal.operators.observable.ObservableSkip.java", "BodyUseAPI": [], "Fixed commit": "221a01d0cf6038daa14d74857e16cb5e8039cf2b", "Url": "https://api.github.com/repos/akarnokd/RxJava", "Date": "2018-03-05T15:39:28Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.isNothing()) { return type; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7589/buggy-version/src.main.java.org.smoothbuild.lang.type.GenericArrayType.java", "BodyUseAPI": [], "Fixed commit": "1e186765b405d8fa2f0616dbfc7cda6fc7a0242b", "Url": "https://api.github.com/repos/mikosik/smooth-build", "Date": "2018-07-26T08:30:31Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lt.vcs.vcs_project.servicelayer.StudentOperations.selectStudent()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (selectedStudent != null) lt.vcs.vcs_project.servicelayer.StudentOperations.changeStudentPassword(selectedStudent);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/8061/buggy-version/src.main.java.lt.vcs.vcs_project.servicelayer.StudentOperations.java", "BodyUseAPI": ["lt.vcs.vcs_project.servicelayer.StudentOperations.changeStudentPassword(java.lang.String)"], "Fixed commit": "4ab1b92e8670f8e2b19902b1b6ac064200a8e8d2", "Url": "https://api.github.com/repos/gieza/vcs_project", "Date": "2018-01-23T09:16:30Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lt.vcs.vcs_project.servicelayer.AccountOperations.selectAccount(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (selectedAccount == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/8061/buggy-version/src.main.java.lt.vcs.vcs_project.servicelayer.AccountOperations.java", "BodyUseAPI": [], "Fixed commit": "4ab1b92e8670f8e2b19902b1b6ac064200a8e8d2", "Url": "https://api.github.com/repos/gieza/vcs_project", "Date": "2018-01-23T09:16:30Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lt.vcs.vcs_project.servicelayer.LecturerOperations.selectLecturer()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (selectedLecturer != null) lt.vcs.vcs_project.servicelayer.LecturerOperations.changeLecturerPassword(selectedLecturer);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/8061/buggy-version/src.main.java.lt.vcs.vcs_project.servicelayer.LecturerOperations.java", "BodyUseAPI": ["lt.vcs.vcs_project.servicelayer.LecturerOperations.changeLecturerPassword(java.lang.String)"], "Fixed commit": "4ab1b92e8670f8e2b19902b1b6ac064200a8e8d2", "Url": "https://api.github.com/repos/gieza/vcs_project", "Date": "2018-01-23T09:16:30Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(builderClassName)) { return (dtoClassName) + \"Test\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1521/buggy-version/src.main.java.uk.co.mruoc.code.DefaultGenerationParams.java", "BodyUseAPI": [], "Fixed commit": "5ec6d5572fbe9acf2449ee7f8eb7879b39ffbfc2", "Url": "https://api.github.com/repos/michaelruocco/immutable-dto-generator", "Date": "2018-01-17T21:57:16Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(builderClassName)) { return (dtoClassName) + \"Builder\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1521/buggy-version/src.main.java.uk.co.mruoc.code.DefaultGenerationParams.java", "BodyUseAPI": [], "Fixed commit": "5ec6d5572fbe9acf2449ee7f8eb7879b39ffbfc2", "Url": "https://api.github.com/repos/michaelruocco/immutable-dto-generator", "Date": "2018-01-17T21:57:16Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cl.hasOption(\"timing\")) { long[] times = new long[partitionCount]; for (int i = 0; i < 10; i++) { for (int expNo = 1; expNo <= partitionCount; expNo++) { java.lang.String indexPath = indexDirPath + expNo; long startTime = java.lang.System.currentTimeMillis(); wiki13.WikiExperiment.runQueriesOnGlobalIndex(indexPath, queries, gamma); long spentTime = (java.lang.System.currentTimeMillis()) - startTime; times[(expNo - 1)] += spentTime; wiki13.maple.WikiMapleCachingExperiment.LOGGER.log(java.util.logging.Level.INFO, ((((\"Time spent on querying \" + (queries.size())) + \" queries is \") + spentTime) + \" seconds\")); } } try (java.io.FileWriter fw = new java.io.FileWriter(\"time_results.csv\")) { for (java.lang.Long l : times) { fw.write(((l / 10.0) + \"\\n\")); } } catch (java.io.IOException e) { wiki13.maple.WikiMapleCachingExperiment.LOGGER.log(java.util.logging.Level.SEVERE, e.getMessage(), e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4439/buggy-version/src.wiki13.maple.WikiMapleCachingExperiment.java", "BodyUseAPI": [], "Fixed commit": "6754b622a96e8c98897231a8aa754d660d32336a", "Url": "https://api.github.com/repos/vahid-g/database-capacity", "Date": "2018-01-25T22:28:57Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser()) == null) { startActivity(new android.content.Intent(this, com.example.mahmoudahmed.caht.ui.Activities.Login.class)); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2677/buggy-version/app.src.main.java.com.example.mahmoudahmed.caht.ui.Activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "69c88f038893e52b46609cb530dd934d73aa6ca1", "Url": "https://api.github.com/repos/mahmoud-elshahat/CapstoneProject-Udacity", "Date": "2018-01-26T18:59:35Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((files == null) || ((files.length) == 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4654/buggy-version/core.src.main.java.io.nuls.core.module.manager.VersionManager.java", "BodyUseAPI": [], "Fixed commit": "351ac6416482d1f6230b0e677a4f7072fdb08d7e", "Url": "https://api.github.com/repos/nuls-io/nuls", "Date": "2018-03-09T09:35:31Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((board[(i + y)].equals(\"X\")) || (board[(i + y)].equals(\"O\"))) { java.lang.System.out.print((\"-\" + (board[(i + y)]))); }else java.lang.System.out.print(java.lang.String.format(\"%-2s\", board[(i + y)]));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/8140/buggy-version/TicOfTheTacOfTheToe.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String)", "java.io.PrintStream.print(java.lang.String)", "java.io.PrintStream.print(java.lang.String)"], "Fixed commit": "f378b4680adb070bc3b79223b62da16ce391d0b9", "Url": "https://api.github.com/repos/Grant-K/TicTacToe", "Date": "2018-02-15T21:07:40Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((metaData != null) && (metaData.isFileUploaded())) && (stagedFilePaths == null)) { return org.apache.geode.management.internal.cli.result.ResultBuilder.createUserErrorResult((command + \" can not be executed only from server side\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/8263/buggy-version/geode-core.src.main.java.org.apache.geode.management.internal.cli.remote.OnlineCommandProcessor.java", "BodyUseAPI": [], "Fixed commit": "c4e35f7d392b01460da9904a8a0f2b66d9ce97d4", "Url": "https://api.github.com/repos/jinmeiliao/geode", "Date": "2018-01-04T04:56:38Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((msg != null) && (tag != null)) { net.ballmerlabs.scatterbrain.ScatterLogManager.checkBuffer(); android.util.Log.e(tag, msg); if ((net.ballmerlabs.scatterbrain.ScatterLogManager.adapter) != null) { new android.os.Handler(android.os.Looper.getMainLooper()).post(new java.lang.Runnable() { @java.lang.Override public void run() { net.ballmerlabs.scatterbrain.ScatterLogManager.adapter.add((((\"[\" + tag) + \"]: \") + msg)); } }); }else { net.ballmerlabs.scatterbrain.ScatterLogManager.buffer.add((((\"[\" + tag) + \"]: \") + msg)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7390/buggy-version/app.src.main.java.net.ballmerlabs.scatterbrain.ScatterLogManager.java", "BodyUseAPI": ["android.util.Log.e(java.lang.String,java.lang.String)", "android.os.Handler.post(java.lang.Runnable)", "android.widget.ArrayAdapter<java.lang.String>.add(java.lang.String)", "java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "1d0f938cdb38f092a5d41db3e08b25cc18fc65f2", "Url": "https://api.github.com/repos/gnu3ra/Scatterbrain", "Date": "2018-03-12T03:23:10Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((msg != null) && (tag != null)) { net.ballmerlabs.scatterbrain.ScatterLogManager.checkBuffer(); android.util.Log.i(tag, msg); if ((net.ballmerlabs.scatterbrain.ScatterLogManager.adapter) != null) { new android.os.Handler(android.os.Looper.getMainLooper()).post(new java.lang.Runnable() { @java.lang.Override public void run() { net.ballmerlabs.scatterbrain.ScatterLogManager.adapter.add((((\"[\" + tag) + \"]: \") + msg)); } }); }else { net.ballmerlabs.scatterbrain.ScatterLogManager.buffer.add((((\"[\" + tag) + \"]: \") + msg)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7390/buggy-version/app.src.main.java.net.ballmerlabs.scatterbrain.ScatterLogManager.java", "BodyUseAPI": ["android.widget.ArrayAdapter<java.lang.String>.add(java.lang.String)", "java.util.ArrayList<java.lang.String>.add(java.lang.String)", "android.util.Log.i(java.lang.String,java.lang.String)", "android.os.Handler.post(java.lang.Runnable)"], "Fixed commit": "1d0f938cdb38f092a5d41db3e08b25cc18fc65f2", "Url": "https://api.github.com/repos/gnu3ra/Scatterbrain", "Date": "2018-03-12T03:23:10Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((msg != null) && (tag != null)) { android.util.Log.v(tag, msg); if ((net.ballmerlabs.scatterbrain.ScatterLogManager.adapter) != null) { new android.os.Handler(android.os.Looper.getMainLooper()).post(new java.lang.Runnable() { @java.lang.Override public void run() { net.ballmerlabs.scatterbrain.ScatterLogManager.adapter.add((((\"[\" + tag) + \"]: \") + msg)); } }); }else { net.ballmerlabs.scatterbrain.ScatterLogManager.buffer.add((((\"[\" + tag) + \"]: \") + msg)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7390/buggy-version/app.src.main.java.net.ballmerlabs.scatterbrain.ScatterLogManager.java", "BodyUseAPI": ["android.util.Log.v(java.lang.String,java.lang.String)", "android.os.Handler.post(java.lang.Runnable)", "android.widget.ArrayAdapter<java.lang.String>.add(java.lang.String)", "java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "1d0f938cdb38f092a5d41db3e08b25cc18fc65f2", "Url": "https://api.github.com/repos/gnu3ra/Scatterbrain", "Date": "2018-03-12T03:23:10Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (tag != null) { net.ballmerlabs.scatterbrain.ScatterLogManager.checkBuffer(); android.util.Log.d(tag, \"onStartSuccess, settingInEffect is null\"); if ((net.ballmerlabs.scatterbrain.ScatterLogManager.adapter) != null) { new android.os.Handler(android.os.Looper.getMainLooper()).post(new java.lang.Runnable() { @java.lang.Override public void run() { net.ballmerlabs.scatterbrain.ScatterLogManager.adapter.add((((\"[\" + tag) + \"]: \") + \"onStartSuccess, settingInEffect is null\")); } }); }else { net.ballmerlabs.scatterbrain.ScatterLogManager.buffer.add((((\"[\" + tag) + \"]: \") + \"onStartSuccess, settingInEffect is null\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7390/buggy-version/app.src.main.java.net.ballmerlabs.scatterbrain.ScatterLogManager.java", "BodyUseAPI": ["android.os.Handler.post(java.lang.Runnable)", "java.util.ArrayList<java.lang.String>.add(java.lang.String)", "android.widget.ArrayAdapter<java.lang.String>.add(java.lang.String)", "android.util.Log.d(java.lang.String,java.lang.String)"], "Fixed commit": "1d0f938cdb38f092a5d41db3e08b25cc18fc65f2", "Url": "https://api.github.com/repos/gnu3ra/Scatterbrain", "Date": "2018-03-12T03:23:10Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mService) != null) { mService.getBluetoothManager().init(); android.os.Handler handler = new android.os.Handler(this.getMainLooper()); handler.postDelayed(new java.lang.Runnable() { @java.lang.Override public void run() { mService.getBluetoothManager().startDiscoverLoopThread(); mService.getBluetoothManager().resetBluetoothDiscoverability(); } }, 5000); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7390/buggy-version/app.src.main.java.net.ballmerlabs.scatterbrain.SearchForSenpai.java", "BodyUseAPI": [], "Fixed commit": "1d0f938cdb38f092a5d41db3e08b25cc18fc65f2", "Url": "https://api.github.com/repos/gnu3ra/Scatterbrain", "Date": "2018-03-12T03:23:10Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((documents.getId()) == null) asset.setDocuments(new java.util.ArrayList()); else docList.add(documents);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4933/buggy-version/asset.asset-services.src.main.java.org.egov.asset.repository.rowmapper.AssetRowMapper.java", "BodyUseAPI": ["java.util.List<org.egov.asset.model.Document>.add(org.egov.asset.model.Document)"], "Fixed commit": "0513da4951d39bdc131c1c07eae57688a4ae0bbf", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2018-03-06T06:25:19Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((latLng) != null) editTask.setLocation(latLng.latitude, latLng.longitude, address);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7970/buggy-version/app.src.main.java.com.lateral.lateral.activity.AddEditTaskActivity.java", "BodyUseAPI": [], "Fixed commit": "ab434eb195b8b995beb0e66eafd586309f305dc7", "Url": "https://api.github.com/repos/CMPUT301W18T13/Lateral", "Date": "2018-04-08T04:24:24Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((actors) != null) { for (ure.actors.UActor actor : actors) { actor.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1668/buggy-version/src.main.java.ure.things.UCollection.java", "BodyUseAPI": [], "Fixed commit": "90a61bf98b279fdfbe34355bc79cf89d46856886", "Url": "https://api.github.com/repos/gilmore606/ure", "Date": "2018-07-18T03:07:16Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((things) != null) { for (ure.things.UThing thing : things) { thing.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1668/buggy-version/src.main.java.ure.things.UCollection.java", "BodyUseAPI": [], "Fixed commit": "90a61bf98b279fdfbe34355bc79cf89d46856886", "Url": "https://api.github.com/repos/gilmore606/ure", "Date": "2018-07-18T03:07:16Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((numOfEvents <= 4) && (i < (numOfEvents - 1))) { TimelineApplication.Maintimeline.setArrowVisibility(eventArrowNames[i], true); }else if (((numOfEvents > 4) && (numOfEvents <= 8)) && (i < (numOfEvents - 2))) { TimelineApplication.Maintimeline.setArrowVisibility(eventArrowNames[i], true); }else if (((numOfEvents > 8) && (numOfEvents <= 12)) && (i < (numOfEvents - 3))) { TimelineApplication.Maintimeline.setArrowVisibility(eventArrowNames[i], true); }else if ((numOfEvents > 12) && (i < (numOfEvents - 4))) { TimelineApplication.Maintimeline.setArrowVisibility(eventArrowNames[i], true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1527/buggy-version/src.TimelineApplication.Maintimeline.java", "BodyUseAPI": [], "Fixed commit": "c72b94ab2b550f647472ebfe99f5e4cae20c07c1", "Url": "https://api.github.com/repos/MustafaAli789/TimelineApplication", "Date": "2018-05-26T20:57:36Z"},
{"Line": "=>521", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (columnSize.hasKnownSize()) { estOutputRowWidth += columnSize.getKnownSize(); estBatchHolderValuesRowWidth += columnSize.getKnownSize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/261/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.physical.impl.aggregate.HashAggTemplate.java", "BodyUseAPI": ["RecordBatchSizer.ColumnSize.getKnownSize()", "RecordBatchSizer.ColumnSize.getKnownSize()"], "Fixed commit": "e113af3a0c8765ebfb1982b66177c638d2c3a913", "Url": "https://api.github.com/repos/ilooner/drill", "Date": "2018-02-02T19:32:31Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.support.v4.app.ActivityCompat.checkSelfPermission(this, Manifest.permission.WRITE_EXTERNAL_STORAGE)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { android.support.v4.app.ActivityCompat.requestPermissions(this, new java.lang.String[]{ Manifest.permission.WRITE_EXTERNAL_STORAGE }, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/3146/buggy-version/app.src.main.java.mytechcorp.ir.assisstant.EnterActivity.java", "BodyUseAPI": [], "Fixed commit": "5069ec0d55ae9826283248215f5f619ce68b24cb", "Url": "https://api.github.com/repos/moeinkarimi/Assisstant", "Date": "2018-06-28T21:20:44Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Mnodes == mnodes) nnodes = mnodes; else nnodes = (rand.nextInt((Mnodes - mnodes))) + mnodes;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/5416/buggy-version/src.graphPackage.Graph.java", "BodyUseAPI": ["java.util.Random.nextInt(int)"], "Fixed commit": "7c7d98496f13a5f931a29a3bb5b3a09ff1164e5f", "Url": "https://api.github.com/repos/davidedavoli/ALGRAPH", "Date": "2018-06-16T17:43:15Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Mw == mw) this.insertEdge(nodes.get(nodea), nodes.get(nodeb), mw); else this.insertEdge(nodes.get(nodea), nodes.get(nodeb), ((rand.nextInt((Mw - mw))) + mw));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/5416/buggy-version/src.graphPackage.Graph.java", "BodyUseAPI": ["java.util.Random.nextInt(int)", "graphPackage.Graph<T>.insertEdge(nodes.get(nodea),nodes.get(nodeb),int)", "graphPackage.Graph<T>.insertEdge(nodes.get(nodea),nodes.get(nodeb),int)"], "Fixed commit": "7c7d98496f13a5f931a29a3bb5b3a09ff1164e5f", "Url": "https://api.github.com/repos/davidedavoli/ALGRAPH", "Date": "2018-06-16T17:43:15Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.microedition.util.ContextHolder.getResourceAsStream(<nulltype>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (is == null) { throw new java.io.IOException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6516/buggy-version/app.src.main.java.javax.microedition.lcdui.Image.java", "BodyUseAPI": [], "Fixed commit": "390de54302213c23cb34bf3aa3f03cd6c258918b", "Url": "https://api.github.com/repos/nikita36078/J2ME-Loader", "Date": "2018-03-12T15:55:05Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.genericworkflownodes.util.MIMETypeHelper.getMIMEtypeExtension(filename).orElse(<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ext == null) { ext = filename.substring(filename.indexOf('.'), filename.length()); com.genericworkflownodes.knime.base.data.port.AbstractFileStoreURIPortObject.LOGGER.warn(((\"MIMEType not registered for extension '\" + ext) + \"'. Proceeding, but this might lead to problems connecting to the affected FileStoreURIPort.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/8001/buggy-version/com.genericworkflownodes.knime.src.com.genericworkflownodes.knime.base.data.port.AbstractFileStoreURIPortObject.java", "BodyUseAPI": [], "Fixed commit": "acc912daab1f26ecc4e52635c8f610d3faf3b252", "Url": "https://api.github.com/repos/genericworkflownodes/GenericKnimeNodes", "Date": "2018-10-18T10:23:30Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.genericworkflownodes.util.MIMETypeHelper.getMIMEtypeExtension(ref_filename).orElse(<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ext == null) { ext = ref_filename.substring(ref_filename.indexOf('.'), ref_filename.length()); com.genericworkflownodes.knime.nodes.io.listimporter.ListMimeFileImporterNodeModel.LOGGER.warn(((\"MIMEType not registered for extension '\" + ext) + \"'. Proceeding, but this might lead to problems connecting to the affected FileStoreURIPort.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/8001/buggy-version/com.genericworkflownodes.knime.src.com.genericworkflownodes.knime.nodes.io.listimporter.ListMimeFileImporterNodeModel.java", "BodyUseAPI": [], "Fixed commit": "acc912daab1f26ecc4e52635c8f610d3faf3b252", "Url": "https://api.github.com/repos/genericworkflownodes/GenericKnimeNodes", "Date": "2018-10-18T10:23:30Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (toValue != null) { this.setTimeZoneOffset(toValue.getTimezoneOffset()); }else if (fromValue != null) { this.setTimeZoneOffset(fromValue.getTimezoneOffset()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2448/buggy-version/roda-common.roda-common-data.src.main.java.org.roda.core.data.v2.index.filter.DateRangeFilterParameter.java", "BodyUseAPI": [], "Fixed commit": "ffc64a6aa8614021820bc9774e850e817eae1643", "Url": "https://api.github.com/repos/keeps/roda", "Date": "2018-05-18T15:21:16Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (toValue != null) { setTimeZoneOffset(toValue.getTimezoneOffset()); }else if (fromValue != null) { this.setTimeZoneOffset(fromValue.getTimezoneOffset()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2448/buggy-version/roda-common.roda-common-data.src.main.java.org.roda.core.data.v2.index.filter.DateIntervalFilterParameter.java", "BodyUseAPI": [], "Fixed commit": "ffc64a6aa8614021820bc9774e850e817eae1643", "Url": "https://api.github.com/repos/keeps/roda", "Date": "2018-05-18T15:21:16Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ksi) != null) { ((thomsonsource.ThompsonSource) (tm)).ksi = ((double[]) (ksi.clone())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4980/buggy-version/src.thomsonsource.ThompsonSource.java", "BodyUseAPI": [], "Fixed commit": "b54e79cba187014a3c1c6a901bc571020e5ff1ee", "Url": "https://api.github.com/repos/Rusjava/ThomsonSource", "Date": "2018-06-30T11:47:27Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sourceFileName.endsWith(org.wso2.ballerinalang.compiler.BLANG_SOURCE_EXT)) { sourceFileName = org.apache.commons.lang3.StringUtils.removeEnd(sourceFileName, org.wso2.ballerinalang.compiler.BLANG_SOURCE_EXT).concat(org.wso2.ballerinalang.compiler.BLANG_EXEC_FILE_SUFFIX); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/3916/buggy-version/compiler.ballerina-lang.src.main.java.org.wso2.ballerinalang.compiler.BinaryFileWriter.java", "BodyUseAPI": ["org.apache.commons.lang3.StringUtils.removeEnd(sourceFileName, org.wso2.ballerinalang.compiler.BLANG_SOURCE_EXT).concat(org.wso2.ballerinalang.compiler.BLANG_EXEC_FILE_SUFFIX)", "org.apache.commons.lang3.StringUtils.removeEnd(java.lang.String,org.wso2.ballerinalang.compiler.BLANG_SOURCE_EXT)"], "Fixed commit": "c4772c81eecbc5999d63e2f3e48f01cd5db4c2c4", "Url": "https://api.github.com/repos/ballerina-platform/ballerina-lang", "Date": "2018-03-22T07:31:22Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (user_infor.getLoginState()) { android.content.Intent intent_index = new android.content.Intent(this, com.example.shicanjie.xmot.Activity.UserInforActivity.class); startActivity(intent_index); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2398/buggy-version/app.src.main.java.com.example.shicanjie.xmot.Activity.UserActivity.java", "BodyUseAPI": [], "Fixed commit": "a1946779821e3131da0f8a622632b66480de7c9f", "Url": "https://api.github.com/repos/halflkaka/Xmot-French-WordTutor", "Date": "2018-01-07T10:29:38Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sqls.size()) < 5000) { com.mh.mobile.core.PushToMySQLDatabase.insertIntoDatabase(sqls, ds); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2535/buggy-version/src.com.mh.mobile.core.PushToMySQLDatabase.java", "BodyUseAPI": ["com.mh.mobile.core.PushToMySQLDatabase.insertIntoDatabase(java.util.List<java.lang.String>,javax.sql.DataSource)"], "Fixed commit": "aae61068804d54f23d8991a738d3f847f7352485", "Url": "https://api.github.com/repos/jasonsuzhou/PhoneOwner", "Date": "2018-09-10T17:43:07Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (io.nuls.api.utils.StringUtils.isBlank(remoteModuleUrl)) { serverUri = (((io.nuls.api.constant.Constant.HTTP) + (remoteIp)) + (io.nuls.api.constant.Constant.COLON)) + (java.lang.Integer.parseInt(remotePort)); }else { serverUri = (((((io.nuls.api.constant.Constant.HTTP) + (remoteIp)) + (io.nuls.api.constant.Constant.COLON)) + (java.lang.Integer.parseInt(remotePort))) + (io.nuls.api.constant.Constant.URI_SEPARATOR)) + (remoteModuleUrl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2860/buggy-version/src.main.java.io.nuls.main.Main.java", "BodyUseAPI": [], "Fixed commit": "0a534ad3884435812a1fe969c08ed4a9c7812d9a", "Url": "https://api.github.com/repos/nuls-io/API-server", "Date": "2018-03-28T10:36:35Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (statusCode == (org.eclipse.jetty.websocket.api.StatusCode.ABNORMAL)) { try { connect(); } catch (java.lang.Exception e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6519/buggy-version/src.main.java.catchat.data.receiver.message.MessageSocketListener.java", "BodyUseAPI": [], "Fixed commit": "d841ef6befdb00f7c43cca5004ccbbe224e0836b", "Url": "https://api.github.com/repos/HolmanA/CatChat", "Date": "2018-05-11T07:01:47Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file != null) { this.contentType = \"multipart/form-data; boundary=\" + (com.coveros.selenified.services.HTTP.BOUNDARY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6466/buggy-version/src.main.java.com.coveros.selenified.services.HTTP.java", "BodyUseAPI": [], "Fixed commit": "b25d3d3ff913e853050f3453544b6f213f410560", "Url": "https://api.github.com/repos/Coveros/selenified", "Date": "2018-08-28T14:08:34Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["AmountValue.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (amount.equals(\"\")) { android.widget.Toast.makeText(this, \"\u8bbe\u7f6e\u6570\u636e\u9519\u8bef\uff01\u8bf7\u91cd\u65b0\u8bbe\u7f6e\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7439/buggy-version/app.src.main.java.com.smartcity.qiuchenly.View_mainPage.java", "BodyUseAPI": [], "Fixed commit": "fccf9c46a3cd41db259af7a736529a31339a3304", "Url": "https://api.github.com/repos/GuoQuDeHuiYi/SmartRoadSystem", "Date": "2017-12-08T20:09:06Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.pactstart.system.entity.Suggestion.builder().source(suggestionDto.getSource()).memberId(suggestionDto.getMemberId()).contactInfo(suggestionDto.getContactInfo()).problemType(suggestionDto.getProblemType()).content(suggestionDto.getContent()).attachs(suggestionDto.getAttachs()).build()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(io.github.pactstart.commonutils.ValidUtils.isValid(suggestion.getAttachs()))) { suggestion.setAttachs(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4734/buggy-version/kangaroo-mod-system.src.main.java.io.github.pactstart.system.service.impl.SuggestionServiceImpl.java", "BodyUseAPI": ["io.github.pactstart.system.entity.Suggestion.setAttachs(java.lang.String)"], "Fixed commit": "8d48fe0450c31fd2985ad52ff257a5aee464e9d4", "Url": "https://api.github.com/repos/PactStart/kangaroo", "Date": "2018-07-06T09:15:29Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (xyz.dcme.agg.util.LoginUtils.needLogin(response)) { mView.showLoginTips(); }else { mView.showIndicator(false); mView.showRefresh(xyz.dcme.agg.parser.PostParser.parseResponse(response)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/5368/buggy-version/app.src.main.java.xyz.dcme.agg.ui.node.NodeListPresenter.java", "BodyUseAPI": ["NodeListContract.View.showRefresh(xyz.dcme.agg.parser.PostParser.parseResponse(response))", "xyz.dcme.agg.parser.PostParser.parseResponse(java.lang.String)"], "Fixed commit": "eb31197eef06a32898b8522c46060ac73d819a59", "Url": "https://api.github.com/repos/caoshen/agg", "Date": "2018-04-17T11:12:52Z"},
{"Line": "=>483", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["interfaceClustersNcs.get(i).getMembers().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((interf.getCluster()) == null) { eppic.DataModelAdaptor.LOGGER.warn(\"Interface {} is not associated to a cluster. Something might be wrong\", interf.getId()); }else if ((interf.getCluster().getId()) != (reducedCluster.getId())) { eppic.DataModelAdaptor.LOGGER.warn(\"Interface {} belongs to cluster {}. It should not be added to cluster id {}\", interf.getId(), interf.getCluster().getId(), reducedCluster.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6761/buggy-version/eppic-cli.src.main.java.eppic.DataModelAdaptor.java", "BodyUseAPI": ["interf.getCluster().getId()", "org.biojava.nbio.structure.contact.StructureInterface.getId()", "org.slf4j.Logger.warn(java.lang.String,interf.getId())", "org.biojava.nbio.structure.contact.StructureInterface.getCluster()", "org.biojava.nbio.structure.contact.StructureInterface.getId()", "org.slf4j.Logger.warn(java.lang.String,interf.getId(),interf.getCluster().getId(),reducedCluster.getId())", "org.biojava.nbio.structure.contact.StructureInterface.getCluster()", "interf.getCluster().getId()"], "Fixed commit": "d1a92652fed1818ff4f52cb2671372835a674c4f", "Url": "https://api.github.com/repos/eppic-team/eppic", "Date": "2018-04-18T19:14:11Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(annotation.isInternal())) ds.item(\"annotation\", annotation.name());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2742/buggy-version/server.src.main.java.nl.inl.blacklab.server.requesthandlers.RequestHandlerIndexMetadata.java", "BodyUseAPI": ["nl.inl.blacklab.search.indexmetadata.Annotation.name()", "nl.inl.blacklab.server.datastream.DataStream.item(java.lang.String,annotation.name())"], "Fixed commit": "344ec4db1155f6fac3f0381b3cc62df257843889", "Url": "https://api.github.com/repos/INL/BlackLab", "Date": "2018-08-29T07:45:02Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(newVersionAvailable)) { try { newVersionAvailable = com.djrapitops.plugin.api.utility.Version.checkVersion(currentVersion, spigotUrl); } catch (java.lang.NoClassDefFoundError ignore) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1777/buggy-version/Plan.src.main.java.com.djrapitops.plan.system.update.VersionCheckSystem.java", "BodyUseAPI": [], "Fixed commit": "10537425333bd87ef42e47088e9ab44de5553edd", "Url": "https://api.github.com/repos/Rsl1122/Plan-PlayerAnalytics", "Date": "2018-02-11T13:11:21Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((field[row][col]) == null) field[row][col] = state; else throw new java.lang.IllegalStateException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6627/buggy-version/TicTacToe.src.main.java.ru.spbau.mit.karvozavr.tictactoe.core.GameField.java", "BodyUseAPI": [], "Fixed commit": "1d61c987f97fe44f21c629b21953914030b1d7ed", "Url": "https://api.github.com/repos/karvozavr/java-spring-2018", "Date": "2018-03-09T12:43:32Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((category.getOrder()) == (-1)) { category.setOrder(project.getCategoriesSize()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/5843/buggy-version/OrganizerClient.src.Controller.edition.EditionController.java", "BodyUseAPI": ["model.project.Category.setOrder(project.getCategoriesSize())"], "Fixed commit": "eec7c74b5371e62d55e904d58fbf0716bf89a420", "Url": "https://api.github.com/repos/guerrero2016/DPOOclient", "Date": "2018-05-18T18:05:17Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numberPointsInCluster > 0) { at.ac.univie.vis2017.util.Point p = new at.ac.univie.vis2017.util.Point((centroidX / numberPointsInCluster), (centroidY / numberPointsInCluster)); p.setCenterPointTrue(); newCentroids.add(p); }else { this.setNumberClusters(((getNumberClusters()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4914/buggy-version/src.main.java.at.ac.univie.vis2017.clustering_algorithms.KMEANS.java", "BodyUseAPI": [], "Fixed commit": "3287b7f97090af5ebeb6ede4a78e0621de750ec6", "Url": "https://api.github.com/repos/McSevo69/vis2017_clustering", "Date": "2018-01-12T17:58:29Z"},
{"Line": "=>570", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.laytonsmith.core.events.BindableEvent.getAttacker()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (damager != null) { ret.put(\"damager\", new com.laytonsmith.core.constructs.CString(damager.getUniqueId().toString(), com.laytonsmith.core.constructs.Target.UNKNOWN)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2932/buggy-version/src.main.java.com.laytonsmith.core.events.drivers.VehicleEvents.java", "BodyUseAPI": ["damager.getUniqueId().toString()", "java.util.Map<java.lang.String, com.laytonsmith.core.constructs.Construct>.put(java.lang.String,com.laytonsmith.core.constructs.CString)", "com.laytonsmith.abstraction.MCEntity.getUniqueId()"], "Fixed commit": "8ac8d8cac2f8798f3592c0d7c5ee4098f1d31f3b", "Url": "https://api.github.com/repos/Pieter12345/CommandHelper", "Date": "2018-02-08T08:58:27Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dazo66.betterclient.FeaturesBase.IFeature.getConfigEntrys()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (entries == null) { entries = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6930/buggy-version/src.main.java.com.dazo66.betterclient.config.gui.BetterClientGuiConfig.java", "BodyUseAPI": [], "Fixed commit": "be52b36ce0e55d80edc3e09c3dbb43fd6d37f5ba", "Url": "https://api.github.com/repos/dazo66/BettterClient-1.12.2", "Date": "2018-07-23T13:33:28Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((feature.getConfigEntrys()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6930/buggy-version/src.main.java.com.dazo66.betterclient.FeaturesRegister.java", "BodyUseAPI": [], "Fixed commit": "be52b36ce0e55d80edc3e09c3dbb43fd6d37f5ba", "Url": "https://api.github.com/repos/dazo66/BettterClient-1.12.2", "Date": "2018-07-23T13:33:28Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((curr.toString().trim().equals(\"KES\")) || (curr.toString().trim().equals(\"USD\"))) return true; else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7281/buggy-version/ipay.src.main.java.utils.Validation.java", "BodyUseAPI": [], "Fixed commit": "e56036eb53d22401deb336e337506ce45bcacc16", "Url": "https://api.github.com/repos/iPaykenya/iPay-easy-way-v2", "Date": "2018-09-27T09:35:49Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (tdqRepService != null) { if (!(creation)) { tdqRepService.updateAllContextInAnalysisAndReport(contextItem, ((org.talend.core.model.context.JobContextManager) (contextManager))); } if (org.talend.core.runtime.CoreRuntimePlugin.getInstance().isDataProfilePerspectiveSelected()) { tdqRepService.refresh(contextItem); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4431/buggy-version/main.plugins.org.talend.metadata.managment.ui.src.main.java.org.talend.metadata.managment.ui.wizard.context.ContextWizard.java", "BodyUseAPI": ["org.talend.core.ITDQRepositoryService.refresh(org.talend.core.model.properties.ContextItem)", "org.talend.core.ITDQRepositoryService.updateAllContextInAnalysisAndReport(org.talend.core.model.properties.ContextItem,org.talend.core.model.process.IContextManager)"], "Fixed commit": "392b9a1829ea87f469a1275eae130fb993df718c", "Url": "https://api.github.com/repos/andreasmattes/tcommon-studio-se", "Date": "2018-05-31T19:40:16Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrent) != null) mCurrent.remove();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/5893/buggy-version/app.src.main.java.com.example.dellpc.uber.Welcome.java", "BodyUseAPI": [], "Fixed commit": "0da2061c842f5caec662c3ec4c410f45ec27095d", "Url": "https://api.github.com/repos/dawno/Uber", "Date": "2018-09-09T12:12:31Z"},
{"Line": "=>1633", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getColumnIndex(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (commentsIdIndex > 0) { java.lang.String commentsId = cursor.getString(commentsIdIndex); if (commentsId != null) candidate.setComments(getComments(com.erkprog.zensofthrcrm.utils.Converter.convertStringToList(commentsId))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/530/buggy-version/Android.ZensoftHRCRM.app.src.main.java.com.erkprog.zensofthrcrm.data.db.SQLiteHelper.java", "BodyUseAPI": ["android.database.Cursor.getString(int)"], "Fixed commit": "bf73a825db9b23aa8f0427282c01fb4393443305", "Url": "https://api.github.com/repos/erlanamanatov/hr-crm", "Date": "2018-07-17T09:18:23Z"},
{"Line": "=>1623", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getColumnIndex(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (cvsIdIndex > 0) { java.lang.String cvsId = cursor.getString(cvsIdIndex); if (cvsId != null) candidate.setCvs(getCvs(com.erkprog.zensofthrcrm.utils.Converter.convertStringToList(cvsId))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/530/buggy-version/Android.ZensoftHRCRM.app.src.main.java.com.erkprog.zensofthrcrm.data.db.SQLiteHelper.java", "BodyUseAPI": ["android.database.Cursor.getString(int)"], "Fixed commit": "bf73a825db9b23aa8f0427282c01fb4393443305", "Url": "https://api.github.com/repos/erlanamanatov/hr-crm", "Date": "2018-07-17T09:18:23Z"},
{"Line": "=>1628", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getColumnIndex(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (interviewsIdIndex > 0) { java.lang.String interviewsId = cursor.getString(interviewsIdIndex); if (interviewsId != null) candidate.setInterviews(getInterviews(com.erkprog.zensofthrcrm.utils.Converter.convertStringToList(interviewsId))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/530/buggy-version/Android.ZensoftHRCRM.app.src.main.java.com.erkprog.zensofthrcrm.data.db.SQLiteHelper.java", "BodyUseAPI": ["android.database.Cursor.getString(int)"], "Fixed commit": "bf73a825db9b23aa8f0427282c01fb4393443305", "Url": "https://api.github.com/repos/erlanamanatov/hr-crm", "Date": "2018-07-17T09:18:23Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.persistence.TypedQuery<model.entity.User>.getResultList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result.isEmpty()) { return java.util.Optional.empty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1879/buggy-version/src.main.java.model.repo.user.UserRepoImpl.java", "BodyUseAPI": [], "Fixed commit": "209ff496e994364b276020d0e486134eb0f5adfc", "Url": "https://api.github.com/repos/vutaydk/dailyreport", "Date": "2018-04-12T07:45:40Z"},
{"Line": "=>1283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ibm.ws.threadContext.ComponentMetaDataAccessorImpl.getComponentMetaDataAccessor().getComponentMetaData()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((cmd instanceof com.ibm.wsspi.webcontainer.metadata.WebComponentMetaData) || (cmd instanceof com.ibm.wsspi.webcontainer.metadata.WebCollaboratorComponentMetaData))) { cmd = com.ibm.ws.threadContext.ComponentMetaDataAccessorImpl.getComponentMetaDataAccessor().getComponentMetaData(com.ibm.wsspi.webcontainer.metadata.WebComponentMetaData.class); if (cmd == null) { cmd = com.ibm.ws.threadContext.ComponentMetaDataAccessorImpl.getComponentMetaDataAccessor().getComponentMetaData(com.ibm.wsspi.webcontainer.metadata.WebCollaboratorComponentMetaData.class); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/8257/buggy-version/dev.com.ibm.ws.webcontainer.security.src.com.ibm.ws.webcontainer.security.WebAppSecurityCollaboratorImpl.java", "BodyUseAPI": [], "Fixed commit": "d556eaa82d15bfad33ceb74ba1f340e89c063278", "Url": "https://api.github.com/repos/toshiyamamoto/open-liberty", "Date": "2018-02-17T19:21:38Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIsShowIndicator) { createIndicators(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1830/buggy-version/recyclerbanner.src.main.java.com.createchance.recyclerbanner.RecyclerBanner.java", "BodyUseAPI": [], "Fixed commit": "70d07911fc3adf569c16120e95bfcdc9992bb1d6", "Url": "https://api.github.com/repos/CreateChance/RecyclerBanner", "Date": "2018-01-16T08:34:51Z"},
{"Line": "=>1366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hive.metastore.api.LockComponent.getTablename()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (tblName != null) { s = (((((\"select t2w_writeid from TXN_TO_WRITE_ID where\" + \" t2w_database = \") + (org.apache.hadoop.hive.metastore.txn.TxnHandler.quoteString(dbName.toLowerCase()))) + \" and t2w_table = \") + (org.apache.hadoop.hive.metastore.txn.TxnHandler.quoteString(tblName.toLowerCase()))) + \" and t2w_txnid = \") + txnid; org.apache.hadoop.hive.metastore.txn.TxnHandler.LOG.debug(((\"Going to execute query <\" + s) + \">\")); rs = stmt.executeQuery(s); if (rs.next()) { writeId = rs.getLong(1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1172/buggy-version/standalone-metastore.src.main.java.org.apache.hadoop.hive.metastore.txn.TxnHandler.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "org.apache.hadoop.hive.metastore.txn.TxnHandler.quoteString(java.lang.String)"], "Fixed commit": "6023fef3cea5a5f42b18fd57a0be53b7f1459c6a", "Url": "https://api.github.com/repos/sankarh/hive", "Date": "2018-02-15T10:49:38Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toUpperCase(java.util.Locale)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((database instanceof liquibase.datatype.core.H2Database) && (additionInformation.startsWith(\"WITHOUT\"))) { additionalInformation = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/5350/buggy-version/liquibase-core.src.main.java.liquibase.datatype.core.TimestampType.java", "BodyUseAPI": [], "Fixed commit": "9486559bdd4e0b538dfa31e8a1a8e63adc566889", "Url": "https://api.github.com/repos/wstrzalka/liquibase", "Date": "2018-08-10T13:18:52Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((warnings != null) && (warnings.trim().isEmpty())) this.warnings = null; else this.warnings = warnings;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/5491/buggy-version/src.mujava.app.CompilationResult.java", "BodyUseAPI": [], "Fixed commit": "c3951aa237045e128cd2d3bda8a0b2abcb8210f1", "Url": "https://api.github.com/repos/saiema/MuJava", "Date": "2018-10-26T17:40:27Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.crowsofwar.avatar.common.data.BendingData.get(getOwner())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((getBehavior()) instanceof com.crowsofwar.avatar.common.entity.data.LightningSpearBehavior.PlayerControlled) && (!(data.hasStatusControl(StatusControl.THROW_LIGHTNINSPEAR)))) { setDead(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2180/buggy-version/src.main.java.com.crowsofwar.avatar.common.entity.EntityLightningSpear.java", "BodyUseAPI": [], "Fixed commit": "c4647159403f745a4ad7141d45af6d52ecbf5aa7", "Url": "https://api.github.com/repos/ProjectKorra/AvatarMod", "Date": "2018-06-13T01:04:31Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.crowsofwar.avatar.common.data.BendingData.get(getOwner())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((getBehavior()) instanceof com.crowsofwar.avatar.common.entity.data.CloudburstBehavior.PlayerControlled) && (!(data.hasStatusControl(StatusControl.THROW_CLOUDBURST)))) { setDead(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2180/buggy-version/src.main.java.com.crowsofwar.avatar.common.entity.EntityCloudBall.java", "BodyUseAPI": [], "Fixed commit": "c4647159403f745a4ad7141d45af6d52ecbf5aa7", "Url": "https://api.github.com/repos/ProjectKorra/AvatarMod", "Date": "2018-06-13T01:04:31Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getNumDim()) != 0) { println(\">>> dims:\"); for (com.evensgn.emcompiler.frontend.ExprNode dim : node.getDims()) { dim.accept(this); } printf(\">>> numDim: %d\\n\", node.getNumDim()); }else { println(\">>> numDim: 0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/230/buggy-version/src.com.evensgn.emcompiler.frontend.ASTPrinter.java", "BodyUseAPI": ["com.evensgn.emcompiler.frontend.NewExprNode.getNumDim()", "com.evensgn.emcompiler.frontend.NewExprNode.getDims()", "com.evensgn.emcompiler.frontend.ASTPrinter.printf(java.lang.String,node.getNumDim())"], "Fixed commit": "32a0b4fc8ac8a7984a243db89a7f712854cfb2f0", "Url": "https://api.github.com/repos/Evensgn/EM-Compiler", "Date": "2018-04-20T12:15:20Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tapura.podmorecasts.download.DownloadRequestRepository.getAllId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((ids != null) && ((ids.length) > 0)) { manager.remove(ids); mRepository.remove(ids); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/507/buggy-version/app.src.main.java.com.tapura.podmorecasts.download.DownloadUtils.java", "BodyUseAPI": ["android.app.DownloadManager.remove(long[])", "com.tapura.podmorecasts.download.DownloadRequestRepository.remove(long[])"], "Fixed commit": "d240e8d29e699305a5aa09c436994c26a8497558", "Url": "https://api.github.com/repos/thalespupo/PodMoreCasts", "Date": "2018-03-10T17:57:25Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id == null) { updateTimes(\"-1\", proj); return (\"redirect:/project/\" + pid) + \"/presentation\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/3418/buggy-version/src.main.java.app.controllers.PresentationController.java", "BodyUseAPI": [], "Fixed commit": "e06b476cdea4260e5eee19529d345b7cc5e54fb0", "Url": "https://api.github.com/repos/JFleming4/FourthYearProjectSite", "Date": "2018-04-04T18:51:19Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i >= (((dataSource.get_sample_number()) - 1) - ((fir_filter.getFf_coeff_nr()) / 2))) { applying_range.r = (applying_range.l) + ((interval.r) - i); }else { applying_range.r = temp_len - ((fir_filter.getFf_coeff_nr()) / 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7962/buggy-version/Detection.src.main.java.SignalProcessing.Effects.IIR_with_centered_FIR.java", "BodyUseAPI": ["SignalProcessing.Filters.FIR.getFf_coeff_nr()"], "Fixed commit": "f54b5bbbb8cfd342c511aaa4fb5ca5a7bde7de30", "Url": "https://api.github.com/repos/DrimbaAlexandru/Discuri", "Date": "2018-02-14T19:42:52Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isDead)) mainMenu.changeMenu(4);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7876/buggy-version/src.Model.PlayerDeath.java", "BodyUseAPI": [], "Fixed commit": "23287427002df74323d2e6b0b753be04ad5e68f8", "Url": "https://api.github.com/repos/callumjago/Iteration2", "Date": "2018-03-15T17:20:30Z"},
{"Line": "=>442", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entity.getDateTime(entry.getKey())) == null) { preparedStatement.setNull((index++), java.sql.Types.TIMESTAMP); }else { preparedStatement.setTimestamp((index++), java.sql.Timestamp.valueOf(entity.getDateTime(entry.getKey()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1873/buggy-version/src.main.java.service.model.GeneralCache.java", "BodyUseAPI": ["java.sql.Timestamp.valueOf(entity.getDateTime(entry.getKey()))", "service.model.Entity.getDateTime(entry.getKey())", "java.util.Map.Entry<java.lang.String, service.util.MetaCategoryType>.getKey()", "java.sql.PreparedStatement.setTimestamp(int,java.sql.Timestamp)"], "Fixed commit": "c188464a46c4ba7598004fb8d95c4a7f56a4ab7a", "Url": "https://api.github.com/repos/erikkhachatryan/travelingAgency", "Date": "2018-05-30T09:41:19Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((get(key)) instanceof java.time.LocalDateTime) { return ((java.time.LocalDateTime) (get(key))); }else if ((get(key)) instanceof java.util.Date) { return ((java.util.Date) (get(key))).toInstant().atZone(java.time.ZoneId.systemDefault()).toLocalDateTime(); }else { return ((java.sql.Date) (get(key))).toInstant().atZone(java.time.ZoneId.systemDefault()).toLocalDateTime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1873/buggy-version/src.main.java.service.model.EntityImpl.java", "BodyUseAPI": ["java.time.Instant.atZone(java.time.ZoneId)", "service.model.EntityImpl.get(java.lang.String)", "java.time.ZonedDateTime.toLocalDateTime()", "service.model.EntityImpl.get(java.lang.String)", "service.model.EntityImpl.get(java.lang.String)", "java.lang.Object.toInstant()", "service.model.EntityImpl.get(java.lang.String)", "java.time.Instant.atZone(java.time.ZoneId)", "java.time.ZonedDateTime.toLocalDateTime()", "java.lang.Object.toInstant()"], "Fixed commit": "c188464a46c4ba7598004fb8d95c4a7f56a4ab7a", "Url": "https://api.github.com/repos/erikkhachatryan/travelingAgency", "Date": "2018-05-30T09:41:19Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((get(key)) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1873/buggy-version/src.main.java.service.model.EntityImpl.java", "BodyUseAPI": [], "Fixed commit": "c188464a46c4ba7598004fb8d95c4a7f56a4ab7a", "Url": "https://api.github.com/repos/erikkhachatryan/travelingAgency", "Date": "2018-05-30T09:41:19Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == (RESULT_OK)) { com.codepath.apps.restclienttemplate.models.Tweet tweet = ((com.codepath.apps.restclienttemplate.models.Tweet) (org.parceler.Parcels.unwrap(data.getParcelableExtra(\"tweet\")))); tweets.add(0, tweet); tweetAdapter.notifyItemInserted(0); rvTweets.scrollToPosition(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/5511/buggy-version/app.src.main.java.com.codepath.apps.restclienttemplate.TimelineActivity.java", "BodyUseAPI": [], "Fixed commit": "4d4511164b992df8f885d5aaa37ba74e0507de6c", "Url": "https://api.github.com/repos/Bertogonz3000/Bitter", "Date": "2018-07-05T18:56:53Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getRequest().getReferrerRef()) != null) { hostname = getRequest().getReferrerRef().getHostIdentifier(); }else { hostname = getRequest().getHostRef().getHostIdentifier(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6683/buggy-version/src.main.java.cloudgene.mapred.api.v2.users.ResetPassword.java", "BodyUseAPI": [], "Fixed commit": "2a90f778b088201c55c964645bb700ffbf6e9ab0", "Url": "https://api.github.com/repos/genepi/cloudgene", "Date": "2018-10-31T11:55:46Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getRequest().getReferrerRef()) != null) { hostname = getRequest().getReferrerRef().getHostIdentifier(); }else { hostname = getRequest().getHostRef().getHostIdentifier(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6683/buggy-version/src.main.java.cloudgene.mapred.api.v2.users.RegisterUser.java", "BodyUseAPI": [], "Fixed commit": "2a90f778b088201c55c964645bb700ffbf6e9ab0", "Url": "https://api.github.com/repos/genepi/cloudgene", "Date": "2018-10-31T11:55:46Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (joinedList != null) { if (joinedList.isEmpty()) { return new com.gs.collections.impl.list.mutable.FastList(0); } return mapper.mapReturnNullIfIncompleteIndexHit(joinedList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/3904/buggy-version/reladomo.src.main.java.com.gs.fw.common.mithra.finder.MappedOperation.java", "BodyUseAPI": ["com.gs.fw.common.mithra.finder.Mapper.mapReturnNullIfIncompleteIndexHit(java.util.List)", "java.util.List.isEmpty()"], "Fixed commit": "3643e13fec2437bf1fcc90f49dc475e21a5c7d51", "Url": "https://api.github.com/repos/Diffblue-benchmarks/reladomo", "Date": "2018-01-22T12:31:25Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(world.isRemote)) { if ((WaystoneConfig.general.restrictRenameToOwner) && (!(tileWaystone.isOwner(player)))) { player.sendStatusMessage(new net.minecraft.util.text.TextComponentTranslation(\"waystones:notTheOwner\"), true); return true; } if (((tileWaystone.isGlobal()) && (!(player.capabilities.isCreativeMode))) && (!(WaystoneConfig.general.allowEveryoneGlobal))) { player.sendStatusMessage(new net.minecraft.util.text.TextComponentTranslation(\"waystones:creativeRequired\"), true); return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/3409/buggy-version/src.main.java.net.blay09.mods.waystones.block.BlockWaystone.java", "BodyUseAPI": [], "Fixed commit": "8de17fd42c829f7deedf3398dd6d758a97d4b215", "Url": "https://api.github.com/repos/blay09/Waystones", "Date": "2018-04-28T16:38:08Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Scope.resolve(variableDecl.type)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((typeSymbol.type) == (Symbol.Types.VOID)) { throw new TypeError(\"Can't make a variable of void.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/5862/buggy-version/src.RefPhase.java", "BodyUseAPI": [], "Fixed commit": "89039c42861c3d1e8c2ef1934e74c325b1063397", "Url": "https://api.github.com/repos/New-bottle/Compiler", "Date": "2018-05-02T17:48:24Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stat.st_birthtime) != null) { stat.st_birthtime.tv_sec.set(java.lang.Long.valueOf(((obj.getCreationDate()) / 1000))); stat.st_birthtime.tv_nsec.set(java.lang.Long.valueOf(((obj.getCreationDate()) * 1000))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7058/buggy-version/src.remi.distributedFS.os.JnrfuseImpl.java", "BodyUseAPI": ["stat.st_birthtime.tv_sec.set(java.lang.Long)", "stat.st_birthtime.tv_nsec.set(java.lang.Long)"], "Fixed commit": "7fe2af0cc37f11c84586f857600be8b6025fa842", "Url": "https://api.github.com/repos/supermerill/DistributedFs", "Date": "2018-06-06T17:00:10Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getBoundNode().getTable()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (table == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/3612/buggy-version/DEV.org.openl.rules.src.org.openl.rules.lang.xls.types.meta.DataTableMetaInfoReader.java", "BodyUseAPI": [], "Fixed commit": "9ff97b55446f3438454e900e248c8789af5b7ed0", "Url": "https://api.github.com/repos/openl-tablets/openl-tablets", "Date": "2018-05-18T19:15:25Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openl.rules.lang.xls.types.meta.DataTableMetaInfoReader.getBoundNode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((boundNode.getField()) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/3612/buggy-version/DEV.org.openl.rules.src.org.openl.rules.lang.xls.types.meta.DataTableMetaInfoReader.java", "BodyUseAPI": [], "Fixed commit": "9ff97b55446f3438454e900e248c8789af5b7ed0", "Url": "https://api.github.com/repos/openl-tablets/openl-tablets", "Date": "2018-05-18T19:15:25Z"},
{"Line": "=>909", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.pentaho.di.core.util.Utils.isEmpty(alias)) { alias = colName; item.setText(1, colName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/8190/buggy-version/kettle-plugins.hbase.src.main.java.org.pentaho.big.data.kettle.plugins.hbase.mapping.MappingEditor.java", "BodyUseAPI": [], "Fixed commit": "79d09aeb778aa31dfcd1f60bb73dff0e8f15f575", "Url": "https://api.github.com/repos/axelguiloff/big-data-plugin", "Date": "2018-10-18T14:08:27Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.springframework.util.StringUtils.isEmpty(io.github.forezp.distributedlimitcore.util.IdentifierThreadLocal.get()))) { entity.setIdentifier(io.github.forezp.distributedlimitcore.util.IdentifierThreadLocal.get()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7908/buggy-version/distributed-limit-core.src.main.java.io.github.forezp.distributedlimitcore.aop.LimitAop.java", "BodyUseAPI": [], "Fixed commit": "4c841d8e5d18fb1f5bf61cef023eaff705af1c33", "Url": "https://api.github.com/repos/forezp/distributed-limit", "Date": "2018-08-09T03:49:24Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.springframework.util.StringUtils.isEmpty(io.github.forezp.distributedlimitcore.util.IdentifierThreadLocal.get()))) { io.github.forezp.distributedlimitcore.util.IdentifierThreadLocal.remove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7908/buggy-version/distributed-limit-core.src.main.java.io.github.forezp.distributedlimitcore.aop.LimitAop.java", "BodyUseAPI": [], "Fixed commit": "4c841d8e5d18fb1f5bf61cef023eaff705af1c33", "Url": "https://api.github.com/repos/forezp/distributed-limit", "Date": "2018-08-09T03:49:24Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((template == null) || (message == null)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1064/buggy-version/sample_applications.http_adapter.src.CgwCompatibility.KeywordMapper.java", "BodyUseAPI": [], "Fixed commit": "68b398dd326d2a613943794529756299ed7be1f0", "Url": "https://api.github.com/repos/MiiKos/Opaali", "Date": "2018-03-19T11:33:57Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((keyMap) != null) { return mapKeyword(keyword); }else if ((defaultUrl) != null) { return defaultUrl; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1064/buggy-version/sample_applications.http_adapter.src.CgwCompatibility.KeywordMapper.java", "BodyUseAPI": [], "Fixed commit": "68b398dd326d2a613943794529756299ed7be1f0", "Url": "https://api.github.com/repos/MiiKos/Opaali", "Date": "2018-03-19T11:33:57Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (speed != 0) { remainingTime = com.amaze.filemanager.utils.Utils.formatTimer(java.lang.Math.round(((totalSize - writtenSize) / speed))); }else { remainingTime = getResources().getString(R.string.unknown); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/5819/buggy-version/app.src.main.java.com.amaze.filemanager.asynchronous.services.AbstractProgressiveService.java", "BodyUseAPI": ["java.lang.Math.round(long)", "com.amaze.filemanager.utils.Utils.formatTimer(int)"], "Fixed commit": "01b55fe0a6b50d0ac2a2111dea854104a5f2cefc", "Url": "https://api.github.com/repos/TeamAmaze/AmazeFileManager", "Date": "2018-06-15T20:09:07Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((edgeFormData.getLabel()) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/5114/buggy-version/src.main.java.com.terragoedge.streetlight.dao.StreetlightDao.java", "BodyUseAPI": [], "Fixed commit": "a4eac4cdf9954df6802b8bba18fd06077de79b55", "Url": "https://api.github.com/repos/terragotech/streetlight", "Date": "2018-05-01T11:27:23Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.petanqueturniermanager.helper.sheet.SpielerSpalte.letzteDatenZeile()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (letzteDatenZeile < (de.petanqueturniermanager.meldeliste.MeldeListeSheet.ERSTE_DATEN_ZEILE)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/5532/buggy-version/source.de.petanqueturniermanager.meldeliste.MeldeListeSheet.java", "BodyUseAPI": [], "Fixed commit": "499f064a1cc4931cb6f654bb66a3c480d27a888f", "Url": "https://api.github.com/repos/michaelmassee/Petanque-Turnier-Manager", "Date": "2018-04-18T21:11:34Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getDatabaseVersion()) >= 3) sql = ((((\"select prc.rdb$procedure_name,\\n\" + (((((((((((((((((((((((((((((((((((\"prc.rdb$procedure_source,\\n\" + \"prc.rdb$description, \\n\") + \"pp.rdb$parameter_name,\\n\") + \"pp.rdb$parameter_type,\\n\") + \"fs.rdb$field_name, \\n\") + \"fs.rdb$field_type, \\n\") + \"fs.rdb$field_length, \\n\") + \"fs.rdb$field_scale, \\n\") + \"fs.rdb$field_sub_type, \\n\") + \"fs.rdb$segment_length as segment_length, \\n\") + \"fs.rdb$dimensions, \\n\") + \"cr.rdb$character_set_name as character_set_name, \\n\") + \"co.rdb$collation_name, \\n\") + \"pp.rdb$parameter_number,\\n\") + \"fs.rdb$character_length, \\n\") + \"pp.rdb$description,\\n\") + \"pp.rdb$default_source as default_source,\\n\") + \"fs.rdb$field_precision, \\n\") + \"pp.rdb$parameter_mechanism as AM,\\n\") + \"pp.rdb$field_source as FS,\\n\") + \"fs.rdb$default_source, \\n\") + \"pp.rdb$null_flag as null_flag,\\n\") + \"pp.rdb$relation_name as RN,\\n\") + \"pp.rdb$field_name as FN,\\n\") + \"co2.rdb$collation_name, \\n\") + \"cr.rdb$default_collate_name, \\n\") + \"prc.rdb$engine_name, \\n\") + \"prc.rdb$entrypoint \\n\") + \"from rdb$procedures prc\\n\") + \"left join rdb$procedure_parameters pp on pp.rdb$procedure_name = prc.rdb$procedure_name\\n\") + \"and (pp.rdb$package_name is null)\\n\") + \"left join rdb$fields fs on fs.rdb$field_name = pp.rdb$field_source\\n\") + \"left join rdb$character_sets cr on fs.rdb$character_set_id = cr.rdb$character_set_id \\n\") + \"left join rdb$collations co on ((fs.rdb$collation_id = co.rdb$collation_id) and (fs.rdb$character_set_id = co.rdb$character_set_id)) \\n\") + \"left join rdb$collations co2 on ((pp.rdb$collation_id = co2.rdb$collation_id) and (fs.rdb$character_set_id = co2.rdb$character_set_id))\\n\") + \"where prc.rdb$procedure_name = '\")) + name) + \"\\'\\n\") + \"and (prc.rdb$package_name is null) \\n\") + \"order by pp.rdb$parameter_number\"; else sql = (((\"select prc.rdb$procedure_name,\\n\" + ((((((((((((((((((((((((((((((((\"prc.rdb$procedure_source,\\n\" + \"prc.rdb$description, \\n\") + \"pp.rdb$parameter_name,\\n\") + \"pp.rdb$parameter_type,\\n\") + \"fs.rdb$field_name, \\n\") + \"fs.rdb$field_type, \\n\") + \"fs.rdb$field_length, \\n\") + \"fs.rdb$field_scale, \\n\") + \"fs.rdb$field_sub_type, \\n\") + \"fs.rdb$segment_length as segment_length, \\n\") + \"fs.rdb$dimensions, \\n\") + \"cr.rdb$character_set_name as character_set_name, \\n\") + \"co.rdb$collation_name, \\n\") + \"pp.rdb$parameter_number,\\n\") + \"fs.rdb$character_length, \\n\") + \"pp.rdb$description,\\n\") + \"pp.rdb$default_source as default_source,\\n\") + \"fs.rdb$field_precision, \\n\") + \"pp.rdb$parameter_mechanism as AM,\\n\") + \"pp.rdb$field_source as FS,\\n\") + \"fs.rdb$default_source, \\n\") + \"pp.rdb$null_flag as null_flag,\\n\") + \"pp.rdb$relation_name as RN,\\n\") + \"pp.rdb$field_name as FN,\\n\") + \"co2.rdb$collation_name, \\n\") + \"cr.rdb$default_collate_name \\n\") + \"from rdb$procedures prc\\n\") + \"left join rdb$procedure_parameters pp on pp.rdb$procedure_name = prc.rdb$procedure_name\\n\") + \"left join rdb$fields fs on fs.rdb$field_name = pp.rdb$field_source\\n\") + \"left join rdb$character_sets cr on fs.rdb$character_set_id = cr.rdb$character_set_id \\n\") + \"left join rdb$collations co on ((fs.rdb$collation_id = co.rdb$collation_id) and (fs.rdb$character_set_id = co.rdb$character_set_id)) \\n\") + \"left join rdb$collations co2 on ((pp.rdb$collation_id = co2.rdb$collation_id) and (fs.rdb$character_set_id = co2.rdb$character_set_id))\\n\") + \"where prc.rdb$procedure_name = '\")) + name) + \"\\'\\n\") + \"order by pp.rdb$parameter_number\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4590/buggy-version/src.org.executequery.databaseobjects.impl.DefaultDatabaseExecutable.java", "BodyUseAPI": [], "Fixed commit": "f3c97c9015575008ba313dd813b3d34afc1dbe9a", "Url": "https://api.github.com/repos/red-soft-ru/redexpert", "Date": "2018-02-05T14:40:07Z"},
{"Line": "=>852", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lexer.token) == (Token.ON)) { privilege = \"CREATE\"; }else { throw new com.alibaba.druid.sql.parser.ParserException((((\"TODO : \" + (lexer.token)) + \" \") + (lexer.stringVal()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2961/buggy-version/src.main.java.com.alibaba.druid.sql.parser.SQLStatementParser.java", "BodyUseAPI": [], "Fixed commit": "dfbf03f72ec5c90cf8ea1d7e0161cc37281ed456", "Url": "https://api.github.com/repos/VictorZeng/druid", "Date": "2018-03-11T07:08:39Z"},
{"Line": "=>690", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lexer.token) == (Token.DOT)) { expr = new com.alibaba.druid.sql.parser.SQLAllColumnExpr(); lexer.nextToken(); }else { expr = this.exprParser.expr(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2961/buggy-version/src.main.java.com.alibaba.druid.sql.parser.SQLStatementParser.java", "BodyUseAPI": [], "Fixed commit": "dfbf03f72ec5c90cf8ea1d7e0161cc37281ed456", "Url": "https://api.github.com/repos/VictorZeng/druid", "Date": "2018-03-11T07:08:39Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (directPhoto) { finish(); }else if ((resultCode == (RESULT_CANCELED)) && (requestCode == (com.lzy.imagepicker.ImagePicker.REQUEST_CODE_CROP))) { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1050/buggy-version/SillyChildMerchant.imagepicker.src.main.java.com.lzy.imagepicker.ui.ImageGridActivity.java", "BodyUseAPI": [], "Fixed commit": "5a7ce007a231cafaf94a4bdddd59c618b9359df9", "Url": "https://api.github.com/repos/921668753/SillyChildMerchant-Android", "Date": "2018-07-04T08:03:47Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bdsNode) != null) symTabName = ((bdsNode.getFileName()) + \":\") + (bdsNode.getLineNum());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4842/buggy-version/src.org.bds.symbol.SymbolTable.java", "BodyUseAPI": [], "Fixed commit": "b9048df970b5d4ec840669f900b4b2601beca8c2", "Url": "https://api.github.com/repos/pcingola/BigDataScript", "Date": "2018-03-10T21:05:00Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opentosca.toscana.model.util.ToscaKey<T>.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.opentosca.toscana.model.datatype.Port.class.isAssignableFrom(targetType)) { return ((T) (new org.opentosca.toscana.model.datatype.Port(java.lang.Integer.valueOf(value)))); }else { throw new java.lang.UnsupportedOperationException(java.lang.String.format(\"Cannot convert value of type %s: currently unsupported\", targetType.getSimpleName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/8320/buggy-version/server.src.main.java.org.opentosca.toscana.core.parse.converter.TypeConverter.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String)", "java.lang.Class.getSimpleName()"], "Fixed commit": "18cd14389dd945792fcc5ace8deacda5afd0bbec", "Url": "https://api.github.com/repos/StuPro-TOSCAna/TOSCAna", "Date": "2018-02-03T15:34:17Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.catalogs) != null) { for (java.lang.String cat : this.catalogs) { catalogsList.add(new java.io.File(basedir, cat).toURI().toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6235/buggy-version/src.main.java.com.jimetevenard.xml.relaxng.simplify.Simplify.java", "BodyUseAPI": [], "Fixed commit": "187ed50a47ec3d84f2d4dfbb6ac8942d430ae6fc", "Url": "https://api.github.com/repos/jimetevenard/Maven-RelaxNG-Simplifier", "Date": "2018-07-04T14:13:37Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((schemas) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6235/buggy-version/src.main.java.com.jimetevenard.xml.relaxng.simplify.Simplify.java", "BodyUseAPI": [], "Fixed commit": "187ed50a47ec3d84f2d4dfbb6ac8942d430ae6fc", "Url": "https://api.github.com/repos/jimetevenard/Maven-RelaxNG-Simplifier", "Date": "2018-07-04T14:13:37Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userId == null) || (userId.isEmpty())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4269/buggy-version/app.src.main.java.com.mirka.app.ghmarket.misc.Util.java", "BodyUseAPI": [], "Fixed commit": "d961c39a8107c360d17ceb059fed1bfa470c1c33", "Url": "https://api.github.com/repos/fosteradorkor/GHMARKET", "Date": "2018-03-28T20:56:05Z"},
{"Line": "=>1138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((selectedValue.length()) > 0) sorter.setRowFilter(javax.swing.RowFilter.regexFilter(selectedValue)); else sorter.setRowFilter(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/3849/buggy-version/src.main.java.com.biornaquantics.labreportloader.BQLabReportImporter.java", "BodyUseAPI": ["javax.swing.table.TableRowSorter<javax.swing.table.TableModel>.setRowFilter(javax.swing.RowFilter<javax.swing.table.TableModel, java.lang.Integer>)", "javax.swing.RowFilter.regexFilter(java.lang.String)"], "Fixed commit": "085ca63f7f879dbd5b6eacb930fbab5d7607507e", "Url": "https://api.github.com/repos/rohitapte/LabReportLoader", "Date": "2018-10-03T12:29:51Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < 10) imagePath += \"000\"; else if (i < 100) imagePath += \"00\"; else if (i < 1000) imagePath += \"0\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2679/buggy-version/MainProject.MyAnimation.java", "BodyUseAPI": [], "Fixed commit": "177f48d8ffb9ebdc1fabfe002ecb64da5bd89b14", "Url": "https://api.github.com/repos/pjmchale/cpsc", "Date": "2018-03-02T18:51:03Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (vv >= 10) vv = 9;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4523/buggy-version/src.main.java.cn.springmvc.service.LangAbilityAna.java", "BodyUseAPI": [], "Fixed commit": "a6a946851ee1f22763cc8b3b991157346848eecc", "Url": "https://api.github.com/repos/yeluting/github", "Date": "2018-08-01T05:13:17Z"},
{"Line": "=>1199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((real_rc.size()) > 0) { com.aelitis.plugins.rcmplugin.SBC_RCMView.manager.delete(real_rc.toArray(new com.biglybt.core.content.RelatedContent[real_rc.size()])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/5658/buggy-version/com.aelitis.plugins.rcmplugin.SBC_RCMView.java", "BodyUseAPI": ["com.biglybt.core.content.RelatedContentManager.delete(real_rc.toArray(new com.biglybt.core.content.RelatedContent[real_rc.size()]))", "java.util.List<com.biglybt.core.content.RelatedContent>.toArray(com.biglybt.core.content.RelatedContent[])", "java.util.List<com.biglybt.core.content.RelatedContent>.size()"], "Fixed commit": "973b27091e2bf51154b8c6d28d7ecc9ba70b99fe", "Url": "https://api.github.com/repos/BiglySoftware/BiglyBT-plugin-aercm", "Date": "2018-02-14T20:22:58Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((DeckIndex) <= 52) { card = DeckIndex; if ((DeckIndex) == 52) { DeckIndex = 0; }else { (DeckIndex)++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2313/buggy-version/Blackjack.src.Deck.java", "BodyUseAPI": [], "Fixed commit": "5fd1e0118ff4522ae490f094ba6f58a855d79dca", "Url": "https://api.github.com/repos/navytuna/BlackjackProject", "Date": "2018-02-21T18:21:36Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (user == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7079/buggy-version/Demo4New.Demo4New.src.main.java.Ties4560.Demo4New.SecurityFilter.java", "BodyUseAPI": [], "Fixed commit": "cb34d6d1219fbd4c17f5de8e9baf73cc68c5458d", "Url": "https://api.github.com/repos/Tusamois/TIES4560", "Date": "2018-10-02T07:31:36Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((configFile) != null) { configFile = cliHelper.configFile; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/5248/buggy-version/src.main.java.com.kloudtek.ktcli.CliHelper.java", "BodyUseAPI": [], "Fixed commit": "40d2706d3fd5cd7165f2df153e071212213e0d0d", "Url": "https://api.github.com/repos/kloudtek/ktcli", "Date": "2018-01-14T21:51:10Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (packet != null) { socket.send(packet); queue.remove(packet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/181/buggy-version/src.com.valkryst.VUDP.PacketWriter.java", "BodyUseAPI": ["java.util.concurrent.BlockingQueue<java.net.DatagramPacket>.remove(java.net.DatagramPacket)", "java.net.DatagramSocket.send(java.net.DatagramPacket)"], "Fixed commit": "a1c35f3fb993f8fd8fc56e9328fd767da71fe128", "Url": "https://api.github.com/repos/Valkryst/VUDP", "Date": "2018-04-11T17:18:18Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gittoy.service.OrderService.findOne(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (orderDTO.getPayStatus().equals(PayStatusEnum.SUCCESS.getCode())) { throw new com.gittoy.exception.SellException(com.gittoy.enums.ResultEnum.ORDER_HAS_PAID_ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2972/buggy-version/src.main.java.com.gittoy.controller.PayController.java", "BodyUseAPI": [], "Fixed commit": "d48b3a0bb0e5d2a09c509778150c33dbbfe9bb3e", "Url": "https://api.github.com/repos/zilonglym/sell", "Date": "2018-04-23T15:24:47Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.softwaredev.groceryappv1.PantryUI.getUser().checkInPantry(selectedItem.GetIngredients().get(i))", "java.util.ArrayList<com.softwaredev.groceryappv1.RecipeBase>.get(acmi.position)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((selectedItem.GetIngredients().get(i).getQuantity()) > (com.softwaredev.groceryappv1.PantryUI.getUser().getPantry().get(index).getQuantity())) { selectedItem.GetIngredients().get(i).setQuantity(((selectedItem.GetIngredients().get(i).getQuantity()) - (com.softwaredev.groceryappv1.PantryUI.getUser().getPantry().get(index).getQuantity()))); com.softwaredev.groceryappv1.PantryUI.addToGrocery(selectedItem.GetIngredients().get(i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4773/buggy-version/GroceryAppV1.app.src.main.java.com.softwaredev.groceryappv1.RecipeList.java", "BodyUseAPI": ["com.softwaredev.groceryappv1.RecipeBase.GetIngredients()", "com.softwaredev.groceryappv1.PantryUI.getUser().getPantry().get(index).getQuantity()", "com.softwaredev.groceryappv1.PantryUI.addToGrocery(selectedItem.GetIngredients().get(i))", "com.softwaredev.groceryappv1.RecipeBase.GetIngredients()", "selectedItem.GetIngredients().get(i).getQuantity()", "selectedItem.GetIngredients().get(int)", "selectedItem.GetIngredients().get(i).setQuantity(((selectedItem.GetIngredients().get(i).getQuantity()) - (com.softwaredev.groceryappv1.PantryUI.getUser().getPantry().get(index).getQuantity())))", "com.softwaredev.groceryappv1.PantryUI.getUser().getPantry().get(int)", "com.softwaredev.groceryappv1.RecipeBase.GetIngredients()", "selectedItem.GetIngredients().get(int)", "selectedItem.GetIngredients().get(int)"], "Fixed commit": "8becd18e1f05c0ff8dd609cfe46d0f578cfd6d58", "Url": "https://api.github.com/repos/GDMSProduction/PocketPantry", "Date": "2018-07-19T21:18:44Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.massivecraft.factions.listeners.FPlayers.getInstance().getByPlayer(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (me.getRole().isAtLeast(Role.MODERATOR)) { for (com.massivecraft.factions.listeners.FPlayer fplayer : myFaction.getFPlayers()) { if (fplayer.getRole().isAtLeast(Role.MODERATOR)) { fplayer.sendMessage(message); }else if ((fplayer.isSpyingChat()) && (me != fplayer)) { fplayer.sendMessage((\"[MCspy]: \" + message)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1783/buggy-version/src.main.java.com.massivecraft.factions.listeners.FactionsChatListener.java", "BodyUseAPI": [], "Fixed commit": "cfb64ea316c0f1b4cb01b5ec6105e27b139d54fc", "Url": "https://api.github.com/repos/ProSavage/SavageFactions", "Date": "2018-07-17T14:36:46Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((queue.size()) > (bt.torrent.messaging.Assignments.MAX_ASSIGNED_PIECES_PER_PEER)) { iter.remove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7046/buggy-version/bt-core.src.main.java.bt.torrent.messaging.Assignments.java", "BodyUseAPI": [], "Fixed commit": "0e180c4f37c48dc40253dd17b7ba9d3398910be9", "Url": "https://api.github.com/repos/atomashpolskiy/bt", "Date": "2018-02-01T02:47:08Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (processArgs(args)) { output(\"This is Amy. Copyright (c) 2018 the Amy project authors. For help run with flag -h.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/5943/buggy-version/core.src.main.java.de.unistuttgart.iaas.amyassist.amy.core.io.CommandLineArgumentHandlerService.java", "BodyUseAPI": [], "Fixed commit": "54c4292dd5d2b927d42fef8b65e53df4b1354e2f", "Url": "https://api.github.com/repos/AmyAssist/Amy", "Date": "2018-08-11T11:57:26Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(data.get(position).getImage()))) { com.squareup.picasso.Picasso.get().load(data.get(position).getImage()).into(holder.ivThumbnail); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/8254/buggy-version/app.src.main.java.com.leadinsource.bakingapp.ui.main.MainListAdapter.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.get().load(data.get(position).getImage()).into(android.widget.ImageView)", "com.squareup.picasso.Picasso.get().load(data.get(position).getImage())", "java.util.List<com.leadinsource.bakingapp.model.Recipe>.get(int)", "data.get(position).getImage()"], "Fixed commit": "5622e3dbf9b8cca22c1fcce8af3fd8e43f69aa66", "Url": "https://api.github.com/repos/taurelas/BakingApp", "Date": "2018-05-23T18:17:14Z"},
{"Line": "=>598", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.arm.pelion.bridge.coordinator.processors.ibm.WatsonIoTDeviceManager.registerNewDevice(java.util.Map)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ok) { this.setEndpointTypeFromEndpointName(((java.lang.String) (message.get(\"ep\"))), ((java.lang.String) (message.get(\"ept\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7585/buggy-version/src.main.java.com.arm.pelion.bridge.coordinator.processors.ibm.WatsonIoTMQTTProcessor.java", "BodyUseAPI": [], "Fixed commit": "864f0c7a82446766672ebe2d1b0ace564bf6716f", "Url": "https://api.github.com/repos/ARMmbed/pelion-bridge", "Date": "2018-09-10T22:10:40Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((a[i]) != null) { if (a[i].equals(m)) { for (int j = i; j < (a.length); j++) { if (j == ((a.length) - 1)) { a[j] = null; }else if ((a[j]) != null) { a[j] = a[(j + 1)]; }else { break; } } return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/5037/buggy-version/src.Basket.java", "BodyUseAPI": ["a[i].equals(MarketProduct)"], "Fixed commit": "754401d7438f61a4cf3fa7e3e77023aec19fe4df", "Url": "https://api.github.com/repos/christoscunning/comp250-assignment-1", "Date": "2018-10-08T05:30:06Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.activeSpan) != null) { content.setSpan(item.activeSpan, start, content.length(), Spanned.SPAN_INCLUSIVE_EXCLUSIVE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7254/buggy-version/richedit.src.main.java.com.commonsware.cwac.richtextutils.XhtmlSaxHandler.java", "BodyUseAPI": ["android.text.SpannableStringBuilder.setSpan(java.lang.Object,int,content.length(),Spanned.SPAN_INCLUSIVE_EXCLUSIVE)"], "Fixed commit": "7f6af2d945cde9e20aa04cb33b970dabacee2d8f", "Url": "https://api.github.com/repos/commonsguy/cwac-richedit", "Date": "2018-02-07T21:51:11Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (1 == column) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6831/buggy-version/src.main.java.org.azkfw.munchkin.ui.dialog.ExportDialog.java", "BodyUseAPI": [], "Fixed commit": "95b10e3962aa6bd90a03a72ef21a0088428d1b41", "Url": "https://api.github.com/repos/azuki-framework/munchkin", "Date": "2018-03-27T03:29:51Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event.isLocal) { serverName = (net.minecraft.client.Minecraft.getMinecraft().getIntegratedServer().getWorldName()) + \".xml\"; }else { serverName = (cpw.mods.fml.client.FMLClientHandler.instance().getClient().func_147104_D().serverName) + \".xml\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7641/buggy-version/src.main.java.com.uabart.todolist.ToDoListMod.java", "BodyUseAPI": [], "Fixed commit": "1f0436214dc8c56871370a7a79a27bb8bb0968f2", "Url": "https://api.github.com/repos/DeForce/TODOList", "Date": "2018-06-15T05:57:50Z"},
{"Line": "=>1000", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(useSbc)) { invite.pushRoute(uri); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/5336/buggy-version/restcomm.restcomm.telephony.src.main.java.org.restcomm.connect.telephony.Call.java", "BodyUseAPI": [], "Fixed commit": "17522b5d40776e00ec5b71687bcdfaf010e7888b", "Url": "https://api.github.com/repos/RestComm/Restcomm-Connect", "Date": "2018-03-03T11:00:06Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (r2 == null) { showAplicationExceptionMsg(\"security.msg09\"); return null; }else { r2 = checkUserParameters(r2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/629/buggy-version/plugin.planc.PUserLogIn.java", "BodyUseAPI": ["plugin.planc.PUserLogIn.checkUserParameters(plugin.planc.Record)"], "Fixed commit": "b23f4e53dc09d83b704603b3ef09de4d801ab3db", "Url": "https://api.github.com/repos/terry1013/Planc", "Date": "2018-04-05T15:07:53Z"},
{"Line": "=>2662", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFirstIn) { dealType = 3; if (null != (intentData)) procGetFormByFormNo(); isFirstIn = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4124/buggy-version/app.src.main.java.cn.shomes.tfblue.FormActivity.java", "BodyUseAPI": [], "Fixed commit": "4a8b9a7867096d692a442aa99bbca89a8d846334", "Url": "https://api.github.com/repos/kayoxu/TFBlue", "Date": "2018-10-29T09:35:42Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["redisTemplate.opsForValue().setIfAbsent(java.lang.String,T)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ifAbsent) { expire(key, time, java.util.concurrent.TimeUnit.SECONDS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4852/buggy-version/src.main.java.com.roger.manager.RedisCacheManager.java", "BodyUseAPI": [], "Fixed commit": "145665492061bb01414036bb2ffcc6231b3f41b7", "Url": "https://api.github.com/repos/LiHongTai/base-spring-redis", "Date": "2018-09-25T11:50:25Z"},
{"Line": "=>1495", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((materialKey == null) || (materialKey.isEmpty())) return materialKey;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/3361/buggy-version/CompatibilityLib.src.main.java.com.elmakers.mine.bukkit.utility.CompatibilityUtils.java", "BodyUseAPI": [], "Fixed commit": "01c079d726f833333fbb3e6315a91fe9e0472b4a", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2018-06-01T16:38:46Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((request.getParameter(\"input\")) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4949/buggy-version/src.main.java.de.doubleslash.firstwebapp.firstwebapp.FirstServlet.java", "BodyUseAPI": [], "Fixed commit": "8e92d7203a8b48b57ecb9df920519eba531fa573", "Url": "https://api.github.com/repos/JulianRiegraf/doubleslash-first", "Date": "2018-09-17T08:32:45Z"},
{"Line": "=>456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (TheDistributedScrabble.DEBUG) java.lang.System.out.println((\"My next peer is \" + b));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6111/buggy-version/no-IDE.GameState.java", "BodyUseAPI": [], "Fixed commit": "9e7d9444003b9b526c135ea239f360e99829c2f8", "Url": "https://api.github.com/repos/MXtreme/TheDistributedScrabble", "Date": "2018-09-20T14:05:36Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["category0Values.get(0).getLabel()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (v.equals(this.category0)) { w.e(\"input\", \"type\", \"hidden\", \"name\", \"category0\", \"value\", v, \"id\", \"category0\"); w.start(\"a\", \"href\", \"javascript:removeCategory0Filter()\", \"title\", \"Remove this filter\"); w.t(v); w.end(\"a\"); }else { w.t(v); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/608/buggy-version/src.main.java.com.googlecode.npackdweb.package_.PackagesPage.java", "BodyUseAPI": ["com.googlecode.npackdweb.wlib.HTMLWriter.e(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "com.googlecode.npackdweb.wlib.HTMLWriter.t(java.lang.String)", "com.googlecode.npackdweb.wlib.HTMLWriter.t(java.lang.String)"], "Fixed commit": "f25764c9ee9a21188951bc94291754fd27879503", "Url": "https://api.github.com/repos/tim-lebedkov/npackd-gae-web", "Date": "2018-07-17T18:07:03Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((request.method()) == (io.enoa.repeater.http.Method.OPTIONS)) { return resp.render(\"\").end(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6899/buggy-version/enoa-yosart.src.main.java.io.enoa.yosart.ext.anost.AnostActionHandler.java", "BodyUseAPI": [], "Fixed commit": "84a3c119ae01868315551769baff980881947fee", "Url": "https://api.github.com/repos/fewensa/enoa", "Date": "2018-09-15T18:35:04Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((request.method()) == (io.enoa.repeater.http.Method.OPTIONS)) { return resp.render(\"\").end(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6899/buggy-version/enoa-yosart.src.main.java.io.enoa.yosart.ext.anost.AnostControlHandler.java", "BodyUseAPI": [], "Fixed commit": "84a3c119ae01868315551769baff980881947fee", "Url": "https://api.github.com/repos/fewensa/enoa", "Date": "2018-09-15T18:35:04Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.exceptionflug.protocolize.inventory.InventoryModule.isSpigotInventoryTracking()) net.md_5.bungee.api.ProxyServer.getInstance().getLogger().warning((((\"[Protocolize] Try to set items in unknown inventory! player = \" + (event.getPlayer().getName())) + \" packet = \") + packet));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2790/buggy-version/protocolize-inventory.src.main.java.de.exceptionflug.protocolize.inventory.adapter.WindowItemsAdapter.java", "BodyUseAPI": [], "Fixed commit": "2a0890ab3b13360132f2ed19148b5e410c3b1714", "Url": "https://api.github.com/repos/Exceptionflug/protocolize", "Date": "2018-10-24T18:54:37Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entry.getValue().isJsonObject()) { field.comment = entry.getValue().getAsJsonObject().get(\"description\").getAsString(); }else { field.comment = entry.getValue().getAsString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/5341/buggy-version/splunk.com.splunk.DataModelField.java", "BodyUseAPI": ["entry.getValue().getAsJsonObject().get(java.lang.String)", "entry.getValue().getAsJsonObject()", "java.util.Map.Entry<java.lang.String, com.google.gson.JsonElement>.getValue()", "entry.getValue().getAsJsonObject().get(\"description\").getAsString()", "entry.getValue().getAsString()", "java.util.Map.Entry<java.lang.String, com.google.gson.JsonElement>.getValue()"], "Fixed commit": "4dfe1288ed54a3e2d2ab7ac5c292fb31f7c36fdb", "Url": "https://api.github.com/repos/splunk/splunk-sdk-java", "Date": "2018-02-20T23:07:12Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((0 <= intervalTime) && ((FINISH_INTERVAL_TIME) >= intervalTime)) { super.onBackPressed(); }else { backPressedTime = tempTime; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7697/buggy-version/pooni.app.src.main.java.com.uki121.pooni.LabActivity.java", "BodyUseAPI": [], "Fixed commit": "2d5bed25141e42d2da76c55b5a5102923fe54bea", "Url": "https://api.github.com/repos/snrndi121/stopWatch", "Date": "2018-04-14T14:56:30Z"},
{"Line": "=>1755", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (robot.use_newbot) { result *= -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/3087/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.SwerveUtilLOP.java", "BodyUseAPI": [], "Fixed commit": "52198d34ad79cdb4f03cf10a6e52f2e050e639d3", "Url": "https://api.github.com/repos/tobortechftc/swerve", "Date": "2018-02-16T05:30:40Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.hutool.core.io.FileUtil.extName(java.io.File)", "cn.hutool.core.io.FileUtil.extName(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cn.hutool.core.util.StrUtil.equalsIgnoreCase(srcExtName, destExtName)) { cn.hutool.core.io.FileUtil.copy(srcImageFile, destImageFile, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4232/buggy-version/hutool-core.src.main.java.cn.hutool.core.util.ImageUtil.java", "BodyUseAPI": [], "Fixed commit": "d5812f3ac5a502c2a9750a48c8b3ef156a64df46", "Url": "https://api.github.com/repos/xkcoding/hutool", "Date": "2018-09-17T01:47:39Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ClassLoader.getResourceAsStream(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (tldFile != null) n = edu.uci.ics.crawler4j.url.TLDList.readStream(tldFile, tldSet);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/283/buggy-version/crawler4j.src.main.java.edu.uci.ics.crawler4j.url.TLDList.java", "BodyUseAPI": ["edu.uci.ics.crawler4j.url.TLDList.readStream(java.io.InputStream,java.util.Set<java.lang.String>)"], "Fixed commit": "b1693ec65eba1fdcaed47a022322f430feb79d77", "Url": "https://api.github.com/repos/abgelehnt/crawler4j", "Date": "2018-07-11T02:59:17Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((response[i]) != null) { com.hebaiyi.bean.Illustration illustration = com.hebaiyi.util.Utility.handleIllustrationResponse(response[i]); if (i == 0) { showNotification(illustration); stopForeground(false); } updateIllustrationDb(illustration); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/851/buggy-version/app.src.main.java.com.hebaiyi.service.AutoUpdateService.java", "BodyUseAPI": ["com.hebaiyi.util.Utility.handleIllustrationResponse(java.lang.String)"], "Fixed commit": "bd761f37137d4ff098a82934685877d9270dc15e", "Url": "https://api.github.com/repos/C1over/NEW_ONE", "Date": "2018-07-23T04:39:57Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mGoogle.getTasks().getTasks(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tasks.isEmpty()) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7745/buggy-version/app.src.main.java.com.elementary.tasks.google_tasks.GetTaskListAsync.java", "BodyUseAPI": [], "Fixed commit": "0d2460531b18192ac3c84847eb66a7f5dbc5560c", "Url": "https://api.github.com/repos/naz013/Reminder", "Date": "2018-03-04T09:29:37Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mGoogle.getTasks().getTasks(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tasks.isEmpty()) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7745/buggy-version/app.src.main.java.com.elementary.tasks.google_tasks.SyncGoogleTasksAsync.java", "BodyUseAPI": [], "Fixed commit": "0d2460531b18192ac3c84847eb66a7f5dbc5560c", "Url": "https://api.github.com/repos/naz013/Reminder", "Date": "2018-03-04T09:29:37Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value > 0) ps.print(((java.lang.String.valueOf(value)) + \" \")); else ps.print(\"0 \");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2415/buggy-version/src.model.PgmImage.java", "BodyUseAPI": ["java.io.PrintStream.print(java.lang.String)", "java.lang.String.valueOf(int)"], "Fixed commit": "1cdee4e8701a2c66e9c049a4c0ccec7e43bd763a", "Url": "https://api.github.com/repos/wallysonlima/imgprocessing", "Date": "2018-03-21T20:27:33Z"},
{"Line": "=>516", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.checkerframework.checker.determinism.AnnotationUtils.areSame(subAnno, POLYDET_UP)) && (org.checkerframework.checker.determinism.AnnotationUtils.areSame(superAnno, POLYDET))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4846/buggy-version/checker.src.main.java.org.checkerframework.checker.determinism.DeterminismAnnotatedTypeFactory.java", "BodyUseAPI": [], "Fixed commit": "ed88db6a62f5f1d531db01eaaad66d5f7574de77", "Url": "https://api.github.com/repos/t-rasmud/checker-framework", "Date": "2018-09-25T00:01:07Z"},
{"Line": "=>512", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.checkerframework.checker.determinism.AnnotationUtils.areSame(subAnno, POLYDET)) && (org.checkerframework.checker.determinism.AnnotationUtils.areSame(superAnno, POLYDET_UP))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4846/buggy-version/checker.src.main.java.org.checkerframework.checker.determinism.DeterminismAnnotatedTypeFactory.java", "BodyUseAPI": [], "Fixed commit": "ed88db6a62f5f1d531db01eaaad66d5f7574de77", "Url": "https://api.github.com/repos/t-rasmud/checker-framework", "Date": "2018-09-25T00:01:07Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (blockStatusArgument == (BlockStatus.inReview)) start = inReviewIndex; else if (blockStatusArgument == (BlockStatus.toSubmit)) start = toSubmitIndex; else if (blockStatusArgument == (BlockStatus.toReview)) start = toReviewIndex;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6005/buggy-version/app.src.main.java.com.blockprobe.main.listviewclasses.ScreenBlockList.java", "BodyUseAPI": [], "Fixed commit": "8153ce030d4873cd480a3d184fcbd84882eb3184", "Url": "https://api.github.com/repos/ShashankAnantharam/GGWP", "Date": "2018-09-23T17:09:14Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.equals(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isGet && ((bean) instanceof java.util.Map)) { return ((java.util.Map) (bean)).get(args[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4218/buggy-version/src.main.java.org.n3r.eql.util.MapInvocationHandler.java", "BodyUseAPI": [], "Fixed commit": "0656a86653295f9efd706b4bd92bfe83f66bb7b4", "Url": "https://api.github.com/repos/bingoohuang/eql", "Date": "2018-01-31T14:51:17Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mLargerThumb.getCurrentStep()) < ((mLesserThumb.getCurrentStep()) + (mGap))) { mLargerThumb.setCurrentStep(((mLesserThumb.getCurrentStep()) + (mGap)), false, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/3912/buggy-version/rangeseekbar.src.main.java.com.pngfi.rangeseekbar.RangeSeekBar.java", "BodyUseAPI": ["com.pngfi.rangeseekbar.Thumb.getCurrentStep()", "com.pngfi.rangeseekbar.Thumb.setCurrentStep(((mLesserThumb.getCurrentStep()) + (mGap)),boolean,boolean)"], "Fixed commit": "11eec363a3d41fa7da774b860c813f649a5c9dba", "Url": "https://api.github.com/repos/threeloe/FRangeSeekBar", "Date": "2018-05-15T03:46:07Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((utilities.VariablesAndMethodsUtils.master1.getMasterVinculado()) != null) utilities.VariablesAndMethodsUtils.master2 = planificacionCalendario.get(0).getMaster().getMasterVinculado();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6136/buggy-version/src.utilities.VariablesAndMethodsUtils.java", "BodyUseAPI": [], "Fixed commit": "b94e5077e3a9159259e5cd38713f190331d842ef", "Url": "https://api.github.com/repos/mjl1010/AssiCo", "Date": "2018-05-23T15:32:44Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((utilities.VariablesAndMethodsUtils.master1.getMasterVinculado()) != null) utilities.VariablesAndMethodsUtils.master2.setMasterVinculado(utilities.VariablesAndMethodsUtils.master1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6136/buggy-version/src.utilities.VariablesAndMethodsUtils.java", "BodyUseAPI": ["utilities.Master.setMasterVinculado(utilities.Master)"], "Fixed commit": "b94e5077e3a9159259e5cd38713f190331d842ef", "Url": "https://api.github.com/repos/mjl1010/AssiCo", "Date": "2018-05-23T15:32:44Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lombok.val.get(ClientCustomPropertyConstants.CLIENT_CUSTOM_PROPERTY_PRINCIPAL_ATTRIBUTE_ID)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (attrObject != null) { lombok.val principalAttribute = attrObject.toString(); if (profile.containsAttribute(principalAttribute)) { lombok.val firstAttribute = org.apereo.cas.util.CollectionUtils.firstElement(profile.getAttribute(principalAttribute)); if (firstAttribute.isPresent()) { id = firstAttribute.get().toString(); } org.apereo.cas.integration.pac4j.authentication.handler.support.LOGGER.debug(\"Delegated authentication indicates usage of client principal attribute [{}] for the identifier [{}]\", principalAttribute, id); }else { org.apereo.cas.integration.pac4j.authentication.handler.support.LOGGER.warn(\"Delegated authentication cannot find attribute [{}] to use as principal id\", principalAttribute); } }else { org.apereo.cas.integration.pac4j.authentication.handler.support.LOGGER.warn(\"No custom principal attribute was provided by the client. Using the default id [{}]\", client, id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6682/buggy-version/support.cas-server-support-pac4j-authentication.src.main.java.org.apereo.cas.integration.pac4j.authentication.handler.support.AbstractPac4jAuthenticationHandler.java", "BodyUseAPI": ["lombok.val.toString()"], "Fixed commit": "00e117f33f4cf3600832f81a0a4a795521b12a8f", "Url": "https://api.github.com/repos/apereo/cas", "Date": "2018-09-13T15:08:28Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player.isOp()) { if ((args.length) > 0) { java.lang.String name = args[0]; net.came20.tphome.WarpManager.removeWarp(name); player.sendMessage(((((org.bukkit.ChatColor.AQUA) + \"The warp '\") + name) + \"' was removed\")); }else { player.sendMessage(((org.bukkit.ChatColor.RED) + \"You must specify a warp to remove!\")); } }else { player.sendMessage(((org.bukkit.ChatColor.RED) + \"You do not have permission to remove warps.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/235/buggy-version/src.main.java.net.came20.tphome.command.RemoveWarpCommand.java", "BodyUseAPI": ["org.bukkit.entity.Player.sendMessage(((((org.bukkit.ChatColor.AQUA) + \"The warp '\") + name) + \"' was removed\"))", "org.bukkit.entity.Player.sendMessage(((org.bukkit.ChatColor.RED) + \"You do not have permission to remove warps.\"))", "org.bukkit.entity.Player.sendMessage(((org.bukkit.ChatColor.RED) + \"You must specify a warp to remove!\"))"], "Fixed commit": "bb89120084bf50e862d1c668689998c808166219", "Url": "https://api.github.com/repos/camearle20/TpHome", "Date": "2018-05-21T23:03:52Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getTag()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sourceTag.getClass().getSimpleName().equals(com.bluelabs.timetable.data.CourseEntity.class.getSimpleName())) { view.startDrag(data, new com.bluelabs.timetable.MainActivity.CourseDragShadowBuilder(view), view, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/8209/buggy-version/app.src.main.java.com.bluelabs.timetable.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b7e5bf59072148e8df08c0e858b0662c9534695e", "Url": "https://api.github.com/repos/bluefad/TimeTable", "Date": "2018-10-20T11:47:12Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (fragment != null) { mFragManager.beginTransaction().replace(R.id.fragment_container, fragment).addToBackStack(\"Home\").commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2734/buggy-version/app.src.main.java.csp15cap.fitstart.MainActivity.java", "BodyUseAPI": ["mFragManager.beginTransaction().replace(R.id.fragment_container, fragment).addToBackStack(\"Home\").commit()", "mFragManager.beginTransaction().replace(R.id.fragment_container, fragment).addToBackStack(java.lang.String)", "mFragManager.beginTransaction().replace(R.id.fragment_container,android.support.v4.app.Fragment)"], "Fixed commit": "751f1ddb80f9fd37294782f3f63a0dcdde1ed8c2", "Url": "https://api.github.com/repos/PeterCassidy/FitStart", "Date": "2018-03-22T18:40:30Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flaging != 1) { j_calculator.J_Calculator.displaypanel.setText(string_build); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6366/buggy-version/src.j_calculator.J_Calculator.java", "BodyUseAPI": [], "Fixed commit": "a2996b2241a3936c5803bf7d473b37e91bd5d73e", "Url": "https://api.github.com/repos/achintyachaudhary/J_Calculator", "Date": "2018-09-11T15:48:55Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (previousLine.endsWith(\"END\")) { if (line.startsWith(\"IF\")) { processedLine = processedLine.substring(2); }else if (line.startsWith(\"FOR\")) { processedLine = processedLine.substring(3); }else if (line.startsWith(\"CASE\")) { processedLine = processedLine.substring(4); }else if (line.startsWith(\"LOOP\")) { processedLine = processedLine.substring(4); }else if (line.startsWith(\"WHILE\")) { processedLine = processedLine.substring(5); }else if (line.startsWith(\"REPEAT\")) { processedLine = processedLine.substring(6); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6771/buggy-version/flyway-core.src.main.java.org.flywaydb.core.internal.database.db2.DB2SqlStatementBuilder.java", "BodyUseAPI": [], "Fixed commit": "e3cac9854dd21458ae76955ff798b364e6b998d0", "Url": "https://api.github.com/repos/billwanjohi/flyway", "Date": "2018-01-19T11:04:30Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.flywaydb.core.internal.util.StringUtils.hasLength(line)) { previousLine = line; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6771/buggy-version/flyway-core.src.main.java.org.flywaydb.core.internal.database.db2.DB2SqlStatementBuilder.java", "BodyUseAPI": [], "Fixed commit": "e3cac9854dd21458ae76955ff798b364e6b998d0", "Url": "https://api.github.com/repos/billwanjohi/flyway", "Date": "2018-01-19T11:04:30Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (line.contains(\"<input>\")) { line = line.replace(\"<input>\", \"x\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7707/buggy-version/src.main.java.com.locydragon.tim.model.script.CompileBasic.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "d05257732184ead70ee7e180a59f16a51c628bbb", "Url": "https://api.github.com/repos/LocyDragon/TomoriItemMythic", "Date": "2018-10-27T05:29:29Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.wrkldState) != null) { int policy = this.wrkldState.getPolicy(); if (((com.oltpbenchmark.types.SchedPolicy.valueOf(policy)) == (com.oltpbenchmark.types.SchedPolicy.EDF_PRED_DYNAMIC)) || ((com.oltpbenchmark.types.SchedPolicy.valueOf(policy)) == (com.oltpbenchmark.types.SchedPolicy.GEDF_PRED_DYNAMIC))) { storeResults = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7795/buggy-version/src.com.oltpbenchmark.api.Worker.java", "BodyUseAPI": [], "Fixed commit": "96f9e95bf5caf5f6a783fcd2f9c23b19d68995a8", "Url": "https://api.github.com/repos/kbavishi/oltpbench", "Date": "2018-02-28T23:34:44Z"},
{"Line": "=>916", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ip > nl4) { ip -= nl4; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4714/buggy-version/src.main.java.org.asterope.healpix.PixTools.java", "BodyUseAPI": [], "Fixed commit": "9c9a103cad9d4939fadd33d9f7167a6ce75337df", "Url": "https://api.github.com/repos/rzinkstok/HEALPix", "Date": "2018-01-24T10:35:35Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.Uri.getScheme()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (scheme == null) return parseFileName((((com.kivsw.cloud.DiskContainer.DEFAULT_SCHEME) + \"://\") + path));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2911/buggy-version/cloud_disk.src.main.java.com.kivsw.cloud.DiskContainer.java", "BodyUseAPI": [], "Fixed commit": "fc08fa1a05d9e77bc612e668d9f05b94f2160063", "Url": "https://api.github.com/repos/IvanKovalchuk/MvpRxDialogSample", "Date": "2018-07-06T09:53:13Z"},
{"Line": "=>762", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opencron.server.job.OpencronCaller.sentSync(org.opencron.common.job.Request)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(response.isSuccess())) { response.setSuccess(((response.getExitCode()) == (StatusCode.SUCCESS_EXIT.getValue()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7145/buggy-version/opencron-server.src.main.java.org.opencron.server.service.ExecuteService.java", "BodyUseAPI": ["org.opencron.common.job.Response.setSuccess(((response.getExitCode()) == (StatusCode.SUCCESS_EXIT.getValue())))", "org.opencron.common.job.Response.getExitCode()"], "Fixed commit": "cfd9c3f62fd58407bd4fc22804174569c2ad3ef7", "Url": "https://api.github.com/repos/wolfboys/JobX-dev", "Date": "2018-04-08T15:26:46Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["PlayerList.findPlayer(java.lang.String)", "PlayerList.findPlayer(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (playerChallenger == playerChallengee) return \"You can't challenge yourself to a R-P-S.\"; else { return \"This person is not in the same room as you or doesn't exist in the game.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1603/buggy-version/src.GameCore.java", "BodyUseAPI": [], "Fixed commit": "ac89f7460444e4971e52af09dd07475a2df3bfc7", "Url": "https://api.github.com/repos/cwells21/CS321-2018F-004", "Date": "2018-10-13T20:44:46Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!stillTesting) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/3389/buggy-version/src.ReturnContactInfo.java", "BodyUseAPI": [], "Fixed commit": "de7b57e53b8fe4cecab1b8e6b34aba84ccd3db12", "Url": "https://api.github.com/repos/alexaggs/InterviewAssignment", "Date": "2018-08-26T20:54:29Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (searchPerformed) { getLoaderManager().restartLoader(com.nickwelna.booklisting.MainActivity.BOOK_LOADER_ID, null, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4052/buggy-version/app.src.main.java.com.nickwelna.booklisting.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c35bb94dad12d461722ac91120b1f9490cacba08", "Url": "https://api.github.com/repos/welnanick/Book-Listing", "Date": "2018-01-18T07:06:00Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((data == null) || ((data.size()) == 0)) && (searchPerformed)) { emptyView.setText(R.string.no_book_text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4052/buggy-version/app.src.main.java.com.nickwelna.booklisting.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c35bb94dad12d461722ac91120b1f9490cacba08", "Url": "https://api.github.com/repos/welnanick/Book-Listing", "Date": "2018-01-18T07:06:00Z"},
{"Line": "=>631", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fileName == null) { java.io.File f = new java.io.File(fileName); if (taskFiles.contains(f.getAbsolutePath())) { return true; }else { return false; } }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/693/buggy-version/compss.runtime.loader.src.main.java.es.bsc.compss.loader.total.StreamRegistry.java", "BodyUseAPI": [], "Fixed commit": "bf95c80f1a528c4d00ac4c21dd0f2ebbd1bd7296", "Url": "https://api.github.com/repos/bsc-wdc/compss", "Date": "2018-05-28T16:41:14Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isBothValidForFileOrNot()) { org.talend.dataquality.datamasking.functions.Function.LOGGER.warn(\"The parameter is not a path to a file.\"); org.talend.dataquality.datamasking.functions.Function.LOGGER.warn(e2.getMessage(), e2); }else { org.talend.dataquality.datamasking.functions.Function.LOGGER.error(\"The parameter is not a path to a file.\"); org.talend.dataquality.datamasking.functions.Function.LOGGER.error(e2.getMessage(), e2); resetParameterTo(((e2.getMessage().length()) == 0 ? \"Empty is not a path to a file.\" : e2.getMessage())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6915/buggy-version/dataquality-sampling.src.main.java.org.talend.dataquality.datamasking.functions.Function.java", "BodyUseAPI": [], "Fixed commit": "323d4584b2fda778214d140dba1ab3fb207b5c38", "Url": "https://api.github.com/repos/Talend/data-quality", "Date": "2018-05-08T04:29:23Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((containerElement) != (getDefaultContainer())) { offset = (($(containerElement).scrollTop()) - ($(containerElement).offset().top)) + offset; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/3739/buggy-version/gwt-material.src.main.java.gwt.material.design.client.base.helper.ScrollHelper.java", "BodyUseAPI": [], "Fixed commit": "1c24ef3db9e1e2470715d5fa316a31963edcac67", "Url": "https://api.github.com/repos/GwtMaterialDesign/gwt-material", "Date": "2018-04-05T11:07:11Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.compareTo(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result != 0) { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2665/buggy-version/structr-db-driver-api.src.main.java.org.structr.api.graph.PropertyContainer.java", "BodyUseAPI": [], "Fixed commit": "9c60e2b3a748fad7391f8c755cd2e3af3e286680", "Url": "https://api.github.com/repos/structr/structr", "Date": "2018-10-08T16:44:34Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((demo.DemoVisual._newState) != null) demo.DemoVisual._newState.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7861/buggy-version/src.demo.DemoVisual.java", "BodyUseAPI": [], "Fixed commit": "acce902dd30aee06044838e4b3bd3024cde027c5", "Url": "https://api.github.com/repos/jmccall2/CS460_EHB_Unit_Testing", "Date": "2018-03-28T19:43:17Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.micetr0.mock_DB.Mock_DB.findAccountByUsername(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((accIds.size()) < 1) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1223/buggy-version/src.main.java.com.micetr0.mock_DB.Mock_DB.java", "BodyUseAPI": [], "Fixed commit": "8e993944e54f680d3909c495c578b56cb8897267", "Url": "https://api.github.com/repos/PatHock/Mice-tro", "Date": "2018-04-20T04:36:29Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((value != null) && ((value.isString()) != null)) { return new org.parseplatform.client.ParseDate(value.isString().stringValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4119/buggy-version/src.main.java.org.parseplatform.client.GwtUnmarshaller.java", "BodyUseAPI": ["org.parseplatform.client.JSONValue.isString()", "value.isString().stringValue()"], "Fixed commit": "0d09ec77f82b6a6133b7e0fa99ac4fa1097c014f", "Url": "https://api.github.com/repos/dotweblabs/Parse-SDK-GWT", "Date": "2018-05-22T04:41:09Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cc.colorcat.vangogh.Chain.proceed(cc.colorcat.vangogh.Task)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((result.from()) == (From.MEMORY)) { final cc.colorcat.vangogh.Task.Options options = task.options(); if ((options.hasSize()) || (options.hasRotation())) { bitmap = cc.colorcat.vangogh.Utils.applyOptions(bitmap, options, options.hasMaxSize()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1823/buggy-version/library.src.main.java.cc.colorcat.vangogh.TransformInterceptor.java", "BodyUseAPI": [], "Fixed commit": "90ed317357ce24cd99b45a83c1907d1eb51a68be", "Url": "https://api.github.com/repos/ccolorcat/VanGogh", "Date": "2018-09-19T03:57:09Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((yTitle) >= 50) { double dy = (a) * ((java.lang.System.currentTimeMillis()) - (t0)); if (dy < (v0)) { yTitle -= dy; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2828/buggy-version/src.pacman.states.MenuState.java", "BodyUseAPI": [], "Fixed commit": "550023eae85c58cb3827331bbf360e1db19399cf", "Url": "https://api.github.com/repos/urossss/Pac-Man", "Date": "2018-08-03T09:59:20Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (serverNode == null) { java.lang.System.out.println((((((\"serverNode = null, serverNodeCache size=\" + (serverNodeCache.size())) + \" ,local host=\") + (localRaftServer.getHost())) + \" ,local port=\") + (localRaftServer.getPort()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7218/buggy-version/cheetah-raft.src.main.java.raft.core.RaftCore.java", "BodyUseAPI": [], "Fixed commit": "0acebff9966a5418ee20c241c2ac81105c2c9555", "Url": "https://api.github.com/repos/Ruan-Xin/cheetah", "Date": "2018-04-26T03:28:55Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (serverId == (raftNode.getRaftServer().getServerId())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7218/buggy-version/cheetah-raft.src.main.java.raft.core.RaftCore.java", "BodyUseAPI": [], "Fixed commit": "0acebff9966a5418ee20c241c2ac81105c2c9555", "Url": "https://api.github.com/repos/Ruan-Xin/cheetah", "Date": "2018-04-26T03:28:55Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input.contains(\"spooky\")) { input = input + \"Halloween\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7264/buggy-version/src.chat.model.Chatbot.java", "BodyUseAPI": [], "Fixed commit": "04926b9df1052a6b2b1faa3bf4fb98b64b526019", "Url": "https://api.github.com/repos/hkno9012/Chatbot", "Date": "2018-10-31T19:46:45Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dr.app.beauti.generator.PartitionTreeModel.getPartitionTreePrior()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((prior.getNodeHeightPrior()) != (dr.app.beauti.types.TreePriorType.EXTENDED_SKYLINE)) && ((prior.getNodeHeightPrior()) != (dr.app.beauti.types.TreePriorType.SKYGRID))) { treePriorGenerator.writePriorLikelihoodReferenceLog(prior, model, writer); writer.writeText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6624/buggy-version/src.dr.app.beauti.generator.LogGenerator.java", "BodyUseAPI": ["dr.app.beauti.generator.TreePriorGenerator.writePriorLikelihoodReferenceLog(dr.app.beauti.generator.PartitionTreePrior,dr.app.beauti.generator.PartitionTreeModel,dr.app.beauti.util.XMLWriter)"], "Fixed commit": "b4d4c04adcbbf14a695a0b7c5d8607ad4dd24b70", "Url": "https://api.github.com/repos/beast-dev/beast-mcmc", "Date": "2018-06-10T09:54:54Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (robotBT == null) { printConn(\"Please Pair the Device HC-06 first. The pairing code is 1234.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7411/buggy-version/app.src.main.java.com.otapigems.robotcar.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "439bff60949aa1f36904085c3a99c5c8c8778ec3", "Url": "https://api.github.com/repos/otapiGems/RobotCar", "Date": "2018-01-13T17:09:31Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((param.getValue()) != null) { paramsBuilder.add(param.getKey(), param.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1336/buggy-version/UserVoiceSDK.src.com.uservoice.uservoicesdk.rest.RestTask.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()", "FormBody.Builder.add(java.lang.String,java.lang.String)", "java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()"], "Fixed commit": "d5a9c73a81e019d063451b056f91f447261d3e2e", "Url": "https://api.github.com/repos/uservoice/uservoice-android-sdk", "Date": "2018-10-11T16:51:04Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.lang.PsiBuilder.getLatestDoneMarker()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (latestDoneMarker != null) { if ((latestDoneMarker.getTokenType()) == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.SIMPLE_TYPE_NAME)) { return true; }else if ((latestDoneMarker.getTokenType()) == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.VARIABLE_REFERENCE_EXPRESSION)) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1974/buggy-version/src.main.gen.org.ballerinalang.plugins.idea.parser.BallerinaParserUtil.java", "BodyUseAPI": ["com.intellij.lang.LighterASTNode.getTokenType()", "com.intellij.lang.LighterASTNode.getTokenType()"], "Fixed commit": "dfdef5e49ed80b9c37e9693c1d30d25911f86298", "Url": "https://api.github.com/repos/Shan1024/ballerina-idea-plugin", "Date": "2018-04-03T12:01:00Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof com.scienjus.smartqq.model.Category) { return cn.ieclipse.smartim.IMPlugin.getSharedImage(ISharedImages.IMG_OBJ_FOLDER).createImage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/303/buggy-version/cn.ieclipse.smartqq.src.cn.ieclipse.smartqq.views.FriendLabelProvider.java", "BodyUseAPI": [], "Fixed commit": "d3859d9fe4bcfad8fe7bb08b1b2713617bdf1797", "Url": "https://api.github.com/repos/Jamling/SmartQQ4Eclipse", "Date": "2018-02-22T05:14:09Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentUser) == null) { currentUser = userService.getUser().orElseThrow(() -> new com.piotrwalkusz.scriptrepository.web.rest.errors.InternalServerErrorException(\"User is not found in database\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7753/buggy-version/src.main.java.com.piotrwalkusz.scriptrepository.web.rest.RepositoryResource.java", "BodyUseAPI": [], "Fixed commit": "32ff6ae387b0a721e6aacc3217b1398967492c53", "Url": "https://api.github.com/repos/piotrwalkusz1/script-repository", "Date": "2018-03-04T12:10:57Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (audioId == null) { return audioDao.insertAudio(audio); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6812/buggy-version/confucius-biz.src.main.java.com.iquanwai.confucius.biz.domain.backend.FileUploadServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "24046cd4b53b7b66c5141990f19a30a85d746650", "Url": "https://api.github.com/repos/sfwind/confucius", "Date": "2018-01-29T09:31:21Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (item instanceof java.util.Date) return monthlyDates.indexOf(item); else return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/944/buggy-version/Workout.app.src.main.java.com.lostntkdgmail.workout.view.GridAdapter.java", "BodyUseAPI": ["java.util.List<java.util.Date>.indexOf(java.lang.Object)"], "Fixed commit": "4b5fad4278906c19e83fa062b365c2428295dc20", "Url": "https://api.github.com/repos/tha7556/Workout-App", "Date": "2018-07-12T13:56:19Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((debugLevel) >= 1) java.lang.System.out.println((((\"Client tried to join with version \" + cver) + \" but server is using version \") + (jeremiahlowe.fightinggame.Meta.VERSION_ID)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7209/buggy-version/src.jeremiahlowe.fightinggame.server.FightingGameServerCLI.java", "BodyUseAPI": [], "Fixed commit": "2db686d1615b9825ecdf6280784f09d8e91b96bf", "Url": "https://api.github.com/repos/abc123me/FightingGame", "Date": "2018-09-11T16:52:10Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((debugLevel) >= 21) java.lang.System.out.println((\"GG rest in spagetti @ \" + (cw.UUID)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7209/buggy-version/src.jeremiahlowe.fightinggame.server.FightingGameServerCLI.java", "BodyUseAPI": [], "Fixed commit": "2db686d1615b9825ecdf6280784f09d8e91b96bf", "Url": "https://api.github.com/repos/abc123me/FightingGame", "Date": "2018-09-11T16:52:10Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((debugLevel) >= 1) java.lang.System.out.println(\"Got playerdata for a nonexistant player, Killing it now!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7209/buggy-version/src.jeremiahlowe.fightinggame.server.FightingGameServerCLI.java", "BodyUseAPI": [], "Fixed commit": "2db686d1615b9825ecdf6280784f09d8e91b96bf", "Url": "https://api.github.com/repos/abc123me/FightingGame", "Date": "2018-09-11T16:52:10Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (counter > 0) { updateWeights(); resetDeltaWeights(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/3808/buggy-version/src.classifier.MLP_Classifier.java", "BodyUseAPI": [], "Fixed commit": "8ea549769d96fcf0f94113716352476f77e9137a", "Url": "https://api.github.com/repos/kandeh/Multilayer-Perceptron-Classifier", "Date": "2018-01-27T00:41:09Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((inputPage.getDataType()) == (org.apache.carbondata.core.metadata.datatype.DataTypes.BYTE)) || ((inputPage.getDataType()) == (org.apache.carbondata.core.metadata.datatype.DataTypes.SHORT))) || ((inputPage.getDataType()) == (org.apache.carbondata.core.metadata.datatype.DataTypes.INT))) || ((inputPage.getDataType()) == (org.apache.carbondata.core.metadata.datatype.DataTypes.LONG))) { return org.apache.carbondata.core.datastore.page.encoding.DefaultEncodingFactory.selectCodecByAlgorithmForIntegral(inputPage.getStatistics()).createEncoder(null); }else if (((inputPage.getDataType()) == (org.apache.carbondata.core.metadata.datatype.DataTypes.FLOAT)) || ((inputPage.getDataType()) == (org.apache.carbondata.core.metadata.datatype.DataTypes.DOUBLE))) { return org.apache.carbondata.core.datastore.page.encoding.DefaultEncodingFactory.selectCodecByAlgorithmForFloating(inputPage.getStatistics()).createEncoder(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4202/buggy-version/core.src.main.java.org.apache.carbondata.core.datastore.page.encoding.ColumnPageEncoder.java", "BodyUseAPI": ["org.apache.carbondata.core.datastore.page.ColumnPage.getStatistics()", "org.apache.carbondata.core.datastore.page.encoding.DefaultEncodingFactory.selectCodecByAlgorithmForIntegral(inputPage.getStatistics())", "org.apache.carbondata.core.datastore.page.encoding.DefaultEncodingFactory.selectCodecByAlgorithmForFloating(inputPage.getStatistics())", "org.apache.carbondata.core.datastore.page.encoding.DefaultEncodingFactory.selectCodecByAlgorithmForFloating(inputPage.getStatistics()).createEncoder(<nulltype>)", "org.apache.carbondata.core.datastore.page.encoding.DefaultEncodingFactory.selectCodecByAlgorithmForIntegral(inputPage.getStatistics()).createEncoder(<nulltype>)", "org.apache.carbondata.core.datastore.page.ColumnPage.getDataType()", "org.apache.carbondata.core.datastore.page.ColumnPage.getStatistics()", "org.apache.carbondata.core.datastore.page.ColumnPage.getDataType()"], "Fixed commit": "14c387a518b2af904f75e30f855e4340280bbc24", "Url": "https://api.github.com/repos/sounakr/incubator-carbondata", "Date": "2018-07-04T04:52:26Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((trackBitmap.getBitmap()) != null) { com.google.android.gms.maps.model.BitmapDescriptor itemBitmap = com.google.android.gms.maps.model.BitmapDescriptorFactory.fromBitmap(trackBitmap.getBitmap()); com.google.android.gms.maps.model.MarkerOptions photoMarker = new com.google.android.gms.maps.model.MarkerOptions().position(new com.google.android.gms.maps.model.LatLng(trackLocation.getLatitude(), trackLocation.getLongitude())).icon(itemBitmap).snippet(trackBitmap.getTrackPhoto().getPhotoFileName()); googleMap.addMarker(photoMarker); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/3516/buggy-version/app.src.main.java.vitalypanov.phototracker.utilities.GoogleMapUtils.java", "BodyUseAPI": ["trackBitmap.getTrackPhoto().getPhotoFileName()", "com.google.android.gms.maps.model.BitmapDescriptorFactory.fromBitmap(trackBitmap.getBitmap())", "new com.google.android.gms.maps.model.MarkerOptions().position(new com.google.android.gms.maps.model.LatLng(trackLocation.getLatitude(), trackLocation.getLongitude())).icon(itemBitmap).snippet(trackBitmap.getTrackPhoto().getPhotoFileName())", "vitalypanov.phototracker.model.TrackBitmap.getBitmap()", "vitalypanov.phototracker.model.TrackBitmap.getTrackPhoto()"], "Fixed commit": "2f149dbccc193dd0456fe9d3d95ac04bd03cc043", "Url": "https://api.github.com/repos/panovvitalik/PhotoTracker", "Date": "2018-03-03T05:14:17Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bottomSheetDialog) != null) { if ((bottomSheetBehaviorOTP.getState()) == (android.support.design.widget.BottomSheetBehavior.STATE_EXPANDED)) { showing = true; bottomSheetBehaviorOTP.setState(BottomSheetBehavior.STATE_COLLAPSED); } if ((bottomSheetBehaviorInternetBanking.getState()) == (android.support.design.widget.BottomSheetBehavior.STATE_EXPANDED)) { showing = true; bottomSheetBehaviorInternetBanking.setState(BottomSheetBehavior.STATE_COLLAPSED); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/8240/buggy-version/raveandroid.src.main.java.com.flutterwave.raveandroid.account.AccountFragment.java", "BodyUseAPI": [], "Fixed commit": "bfe4570b649e4b9e0549555a8e69e66c84ef7c69", "Url": "https://api.github.com/repos/Flutterwave/rave-android", "Date": "2018-01-29T15:40:10Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Math.abs((valueX1 - valueX2))) > (org.uma.jmetal.operator.impl.crossover.SBXCrossover.EPS)) { if (valueX1 < valueX2) { y1 = valueX1; y2 = valueX2; }else { y1 = valueX2; y2 = valueX1; } lowerBound = parent1.getLowerBound(i); upperBound = parent1.getUpperBound(i); rand = randomGenerator.getRandomValue(); beta = 1.0 + ((2.0 * (y1 - lowerBound)) / (y2 - y1)); alpha = 2.0 - (java.lang.Math.pow(beta, (-((distributionIndex) + 1.0)))); if (rand <= (1.0 / alpha)) { betaq = java.lang.Math.pow((rand * alpha), (1.0 / ((distributionIndex) + 1.0))); }else { betaq = java.lang.Math.pow((1.0 / (2.0 - (rand * alpha))), (1.0 / ((distributionIndex) + 1.0))); } c1 = 0.5 * ((y1 + y2) - (betaq * (y2 - y1))); beta = 1.0 + ((2.0 * (upperBound - y2)) / (y2 - y1)); alpha = 2.0 - (java.lang.Math.pow(beta, (-((distributionIndex) + 1.0)))); if (rand <= (1.0 / alpha)) { betaq = java.lang.Math.pow((rand * alpha), (1.0 / ((distributionIndex) + 1.0))); }else { betaq = java.lang.Math.pow((1.0 / (2.0 - (rand * alpha))), (1.0 / ((distributionIndex) + 1.0))); } c2 = 0.5 * ((y1 + y2) + (betaq * (y2 - y1))); c1 = solutionRepair.repairSolutionVariableValue(c1, lowerBound, upperBound); c2 = solutionRepair.repairSolutionVariableValue(c2, lowerBound, upperBound); if ((randomGenerator.getRandomValue()) <= 0.5) { offspring.get(0).setVariableValue(i, c2); offspring.get(1).setVariableValue(i, c1); }else { offspring.get(0).setVariableValue(i, c1); offspring.get(1).setVariableValue(i, c2); } }else { offspring.get(0).setVariableValue(i, valueX1); offspring.get(1).setVariableValue(i, valueX2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/3360/buggy-version/jmetal-core.src.main.java.org.uma.jmetal.operator.impl.crossover.SBXCrossover.java", "BodyUseAPI": ["offspring.get(0).setVariableValue(int,double)", "offspring.get(1).setVariableValue(int,double)"], "Fixed commit": "33cd6f4ba6afc119e0a6d4a5bbc1d71459e52475", "Url": "https://api.github.com/repos/jMetal/jMetal", "Date": "2018-09-06T07:43:03Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.wendysa.logindemo.HttpServletRequest.getCookies()", "me.wendysa.logindemo.CookieService.getCookieByKey(java.lang.String,me.wendysa.logindemo.Cookie[])"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((cookie == null) && (cookies != null)) && ((cookies.length) > 0)) { cookie = cookies[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6126/buggy-version/about-servlets.login-demo.me.wendysa.logindemo.Landing.java", "BodyUseAPI": [], "Fixed commit": "5d274b368de6369c7aae3ddd6841f55a32167f68", "Url": "https://api.github.com/repos/WendySanarwanto/learn-java", "Date": "2018-04-23T06:12:34Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.etaxonomy.cdm.api.service.taxonGraph.ITaxonGraphService.listIncludedNames(java.lang.String,eu.etaxonomy.cdm.persistence.query.MatchMode)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((includedNames.size()) > 0) { return page(submitterUuid, includedStatus, includedNamesUuids, pageSize, pageIndex, orderHints, propertyPaths); }else { return new eu.etaxonomy.cdm.api.service.pager.impl.DefaultPagerImpl(pageIndex, 0L, pageSize, new java.util.ArrayList<eu.etaxonomy.cdm.model.name.Registration>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6130/buggy-version/cdmlib-services.src.main.java.eu.etaxonomy.cdm.api.service.RegistrationServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "876970d90385d6f5e69b6c89ec3c4c7a9a9b4591", "Url": "https://api.github.com/repos/cybertaxonomy/cdmlib", "Date": "2018-10-22T15:05:17Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clientservice.QuitSmokeClientUtils.isIsSmoker()) && (!(clientservice.QuitSmokeClientUtils.isIsPartner()))) { fragmentManager.beginTransaction().replace(R.id.content_frame, new com.example.william.quitsmokeappclient.Fragments.SmokerMainFragment()).commit(); }else if ((!(clientservice.QuitSmokeClientUtils.isIsSmoker())) && (clientservice.QuitSmokeClientUtils.isIsPartner())) { fragmentManager.beginTransaction().replace(R.id.content_frame, new com.example.william.quitsmokeappclient.Fragments.PartnerMainFragment()).commit(); }else if ((clientservice.QuitSmokeClientUtils.isIsSmoker()) && (clientservice.QuitSmokeClientUtils.isIsPartner())) { fragmentManager.beginTransaction().replace(R.id.content_frame, new com.example.william.quitsmokeappclient.Fragments.MainFragment()).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6743/buggy-version/QuitSmokeMobile.app.src.main.java.com.example.william.quitsmokeappclient.Fragments.EncourageFragment.java", "BodyUseAPI": [], "Fixed commit": "9cf5aac8900b680d0a7753b816ce574298f01a12", "Url": "https://api.github.com/repos/WilliamWangShuang/QuitSmoke", "Date": "2018-09-20T09:51:53Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.length) > 0) { this.messageId = buffer.get(); int sizeOfPayload = (this.length) - 1; this.payload = new byte[sizeOfPayload]; buffer.get(this.payload); }else { this.messageId = 10; this.payload = new byte[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/3558/buggy-version/src.main.java.main.peer.peerMessages.PeerMessage.java", "BodyUseAPI": [], "Fixed commit": "ea25fef1f078ffdd94c1d965e39a2dbe2bfb76c8", "Url": "https://api.github.com/repos/stavalfi/TorrentX", "Date": "2018-01-25T18:55:08Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loadResources) { modulePlugin = null; valid = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6433/buggy-version/gluetools-core.src.main.java.uk.ac.gla.cvr.gluetools.core.datamodel.module.Module.java", "BodyUseAPI": [], "Fixed commit": "f066cec4dd052d6ba20ad9614b9714d44f835ab1", "Url": "https://api.github.com/repos/giffordlabcvr/gluetools", "Date": "2018-05-04T15:56:56Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getSong().isLocalSong()) { return R.menu.menu_item_playing_queue_song; }else { return R.menu.menu_item_playing_queue_song2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2759/buggy-version/app.src.main.java.com.kabouzeid.gramophone.adapter.song.PlayingQueueAdapter.java", "BodyUseAPI": [], "Fixed commit": "2bc01f91d55e686404822479d1128242f9d2a2ce", "Url": "https://api.github.com/repos/LIYANJU2015/MusicDownloader", "Date": "2018-01-20T12:01:03Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mPriceEditText.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(priceString))) { price = java.lang.Double.parseDouble(priceString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4003/buggy-version/app.src.main.java.com.example.android.inventoryapp.EditProductsActivity.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "3fdf0b09bf3b341b87bb8b1c40b4a97981cd8a28", "Url": "https://api.github.com/repos/AM2037/InventoryApp", "Date": "2018-10-24T21:18:41Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((cursor.getCount()) <= 0) || (!(isConnected()))) { android.support.design.widget.Snackbar.make(findViewById(R.id.coordinator_contnet), LOAD_FAILED_STRING, Snackbar.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/3478/buggy-version/XYZReader.src.main.java.com.example.xyzreader.ui.ArticleListActivity.java", "BodyUseAPI": [], "Fixed commit": "c3c520a45d56993e44b2278880c5688d204b2dc7", "Url": "https://api.github.com/repos/AMosa3d/xyz-reader-starter-code-master", "Date": "2018-01-25T15:53:05Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lombok.eclipse.EclipseNode.up()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((!staticContext) && ((tNode.getKind()) == (lombok.core.AST.Kind.TYPE))) && (((((org.eclipse.jdt.internal.compiler.ast.TypeDeclaration) (tNode.get())).modifiers) & (org.eclipse.jdt.internal.compiler.classfmt.ClassFileConstants.AccInterface)) != 0)) staticContext = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2503/buggy-version/src.core.lombok.eclipse.handlers.HandleEqualsAndHashCode.java", "BodyUseAPI": [], "Fixed commit": "a27826b268c28a7aa1596bb07461ab1cfb113d82", "Url": "https://api.github.com/repos/rzwitserloot/lombok", "Date": "2018-04-23T20:36:07Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!staticContext) && ((tNode.getKind()) == (lombok.core.AST.Kind.TYPE))) && (((((org.eclipse.jdt.internal.compiler.ast.TypeDeclaration) (tNode.get())).modifiers) & (org.eclipse.jdt.internal.compiler.classfmt.ClassFileConstants.AccInterface)) != 0)) staticContext = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2503/buggy-version/src.core.lombok.eclipse.handlers.HandleEqualsAndHashCode.java", "BodyUseAPI": [], "Fixed commit": "a27826b268c28a7aa1596bb07461ab1cfb113d82", "Url": "https://api.github.com/repos/rzwitserloot/lombok", "Date": "2018-04-23T20:36:07Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null == article) { com.neu.youdontknow.utils.GlobalUtils.alert(\"Can't get article from request!\"); }else { article.setPublished_date(new java.sql.Date(java.lang.System.currentTimeMillis())); article.setPublished_time(new java.sql.Time(java.lang.System.currentTimeMillis())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/3944/buggy-version/src.com.neu.youdontknow.servlet.pages.articlepages.ArticlePublication.java", "BodyUseAPI": ["com.neu.youdontknow.models.Article.setPublished_time(java.sql.Time)", "com.neu.youdontknow.models.Article.setPublished_date(java.sql.Date)"], "Fixed commit": "bafbadfb67aadf2d67d2d5c3da56a4eca36d3c6e", "Url": "https://api.github.com/repos/SEandWPgroupNEUCS201508/YouDontKnow", "Date": "2018-05-13T13:53:43Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.demilich.metastone.game.spells.SpellUtils.getCards(net.demilich.metastone.game.GameContext,net.demilich.metastone.game.Player,net.demilich.metastone.game.entities.Entity,net.demilich.metastone.game.entities.Entity,net.demilich.metastone.game.spells.desc.SpellDesc,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cards.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/996/buggy-version/game.src.main.java.net.demilich.metastone.game.spells.custom.AddActorEffectsToTargetActorSpell.java", "BodyUseAPI": [], "Fixed commit": "3a58b1669ce9182f09c119a64cb8bad53a43d278", "Url": "https://api.github.com/repos/hiddenswitch/Spellsource-Server", "Date": "2018-09-17T01:44:53Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (sourceEntity == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/996/buggy-version/game.src.main.java.net.demilich.metastone.game.spells.custom.AddActorEffectsToTargetActorSpell.java", "BodyUseAPI": [], "Fixed commit": "3a58b1669ce9182f09c119a64cb8bad53a43d278", "Url": "https://api.github.com/repos/hiddenswitch/Spellsource-Server", "Date": "2018-09-17T01:44:53Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((listOfSnippets.getModel().getSize()) > 0) { listOfSnippets.getSelectedValue().setTitle(titleOfSelectedSnippet.getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6187/buggy-version/src.main.java.com.personal.gui.main.MainPanel.java", "BodyUseAPI": ["javax.swing.JList<com.personal.util.Snippet>.getSelectedValue()", "listOfSnippets.getSelectedValue().setTitle(java.lang.String)"], "Fixed commit": "c3beebf88f7aeac0a7374d36e1de39ebe202c862", "Url": "https://api.github.com/repos/plainoldprogrammer/snippet-manager", "Date": "2018-06-19T01:04:22Z"},
{"Line": "=>497", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mediaPlayer) != null) { mediaPlayer.reset(); mediaPlayer.release(); mediaPlayer = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6023/buggy-version/app.src.main.java.cc.circling.MediaService.java", "BodyUseAPI": [], "Fixed commit": "44af64c72fc3749ad82e76ca422f2370e3220acd", "Url": "https://api.github.com/repos/uyutech/android", "Date": "2018-02-09T05:45:44Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.paypal.butterfly.utilities.operations.EolHelper.getEndEol(currentLine)) == null) { writer.write(eol); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/5602/buggy-version/butterfly-utilities.src.main.java.com.paypal.butterfly.utilities.operations.text.InsertText.java", "BodyUseAPI": [], "Fixed commit": "729e900193347f2d5e9a30db8ac503723d73b54b", "Url": "https://api.github.com/repos/mmcrockett/butterfly", "Date": "2018-02-18T02:06:13Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ctx.style()) != null) { style = ((org.uva.qls.ast.Style.Style) (visit(ctx.style()))); }else if ((ctx.widget()) != null) { widget = ((org.uva.qls.ast.Widget.Widget) (visit(ctx.widget()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4383/buggy-version/ouweh-vdwerf.src.main.org.uva.qls.parsing.ParseTreeVisitor.java", "BodyUseAPI": ["QLSParser.QuestionContext.widget()", "org.uva.qls.parsing.ParseTreeVisitor.visit(ctx.widget())", "QLSParser.QuestionContext.widget()", "org.uva.qls.parsing.ParseTreeVisitor.visit(ctx.style())", "QLSParser.QuestionContext.style()"], "Fixed commit": "050e424c704fde49c0c5e90d7fc02649f2e91be0", "Url": "https://api.github.com/repos/software-engineering-amsterdam/endless-ql", "Date": "2018-03-08T14:03:08Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ThreadLocal<com.orientechnologies.orient.core.storage.impl.local.paginated.atomicoperations.OAtomicOperation>.get()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (operation != null) { operation.rollback(exception); }else { throw com.orientechnologies.common.exception.OException.wrapException(new com.orientechnologies.orient.core.exception.ODatabaseException(\"Error during transaction execution\"), exception); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/3767/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.impl.local.paginated.atomicoperations.OAtomicOperationsManager.java", "BodyUseAPI": ["com.orientechnologies.orient.core.storage.impl.local.paginated.atomicoperations.OAtomicOperation.rollback(java.lang.Exception)"], "Fixed commit": "40971d552ceab1bb106cfeef519a5611943b44da", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2018-08-23T14:49:51Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(alternate_contact.getText().toString().equals(\"\"))) datatobesent.setAlternateContactNumber(alternate_contact.getText().toString()); else datatobesent.setAlternateContactNumber(\" \");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/3605/buggy-version/app.src.main.java.in.co.iodev.keralarescue.Activities.Request.java", "BodyUseAPI": ["android.widget.EditText.getText()", "alternate_contact.getText().toString()", "in.co.iodev.keralarescue.Models.DataModel.setAlternateContactNumber(alternate_contact.getText().toString())"], "Fixed commit": "e169796bfac937694a99f6592359de2cb05eb60a", "Url": "https://api.github.com/repos/martin-raven/KeralaRescueApp", "Date": "2018-08-18T16:56:07Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((elements[keyIndex]) == null) { elements[keyIndex] = new java.util.LinkedList<com.codecool.dataStructures.KeyValue>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1940/buggy-version/src.main.java.com.codecool.dataStructures.HashTable.java", "BodyUseAPI": [], "Fixed commit": "1ddbd98ef97db8796d3ab19e143453b7ce45415c", "Url": "https://api.github.com/repos/edobkowski/algorithms-and-data-structures", "Date": "2018-09-14T21:59:07Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getCookies()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cookies != null) { for (javax.servlet.http.Cookie cookie : cookies) { cookie.setMaxAge(0); cookie.setValue(null); cookie.setPath(\"/\"); response.addCookie(cookie); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/5482/buggy-version/src.main.java.com.onitbc.loginHandler.java", "BodyUseAPI": [], "Fixed commit": "13a3b02fc4dd18dff56ce2e535dc7fbfd0c58f17", "Url": "https://api.github.com/repos/OnitNetwork/OnItWebsite2", "Date": "2018-05-04T05:35:07Z"},
{"Line": "=>1136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jsonReader.readString(OJSONReader.NEXT_IN_ARRAY).trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/619/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.tool.ODatabaseImport.java", "BodyUseAPI": [], "Fixed commit": "58099f607f552e11a237de3367f32a34c074e7f9", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2018-09-12T16:46:16Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mAuth.getCurrentUser()) != null) { if (dare.getCreaterID().contentEquals(mAuth.getCurrentUser().getUid())) { userDaresCounter++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1957/buggy-version/FirebaseAuthAndConfig.app.src.main.java.com.deanoy.user.firebaseauthandconfig.AllProductsActivity.java", "BodyUseAPI": ["dare.getCreaterID().contentEquals(mAuth.getCurrentUser().getUid())", "mAuth.getCurrentUser().getUid()", "com.google.firebase.auth.FirebaseAuth.getCurrentUser()"], "Fixed commit": "83419e7107d10d829c1090eafdfa4842883fb28a", "Url": "https://api.github.com/repos/OlgaAbir/Ex02_Mobile", "Date": "2018-06-02T13:01:24Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((left == null) || (right == null)) { return java.util.Optional.empty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1897/buggy-version/src.main.java.com.qdesrame.openapi.diff.compare.SchemaDiff.java", "BodyUseAPI": [], "Fixed commit": "2256abfa11ac82561f70a7466c6b54a86694e913", "Url": "https://api.github.com/repos/msnijder30/openapi-diff", "Date": "2018-10-19T10:15:04Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["scraper.GeneralScraper.getSiteData(scraper.IdMap)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (siteData == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7044/buggy-version/scraper.src.main.java.scraper.GeneralScraper.java", "BodyUseAPI": [], "Fixed commit": "586b6433d4d37069eb767d8e804d63329951550b", "Url": "https://api.github.com/repos/karacsonybarni/travelassistant", "Date": "2018-02-16T15:44:56Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(editMode)) { categoryAdapter.enableEditAndRemoveOption(true); editMode = true; }else { categoryAdapter.enableEditAndRemoveOption(false); editMode = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7301/buggy-version/app.src.main.java.com.example.nikashkuratova.smsreader.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "cc06462d26f348000f3464829a0bdb8965d625df", "Url": "https://api.github.com/repos/nshkuratova/PriorSmsReader", "Date": "2018-01-16T10:15:50Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (denom == 0) { java.lang.System.out.println(\"Du lieu dau vao sai: Mau so bang 0\"); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1360/buggy-version/Fraction.java", "BodyUseAPI": [], "Fixed commit": "cbbf8189d5865f2ff556fe7090cee4c7d8ca7bac", "Url": "https://api.github.com/repos/UET-INT2204-10-fall-18/lab03-wesslorth", "Date": "2018-09-21T04:45:21Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.shibboleth.idp.profile.context.RelyingPartyContext.getProfileConfig()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((pc != null) && (pc instanceof org.geant.idpextension.oidc.config.OIDCUserInfoConfiguration)) { return ((org.geant.idpextension.oidc.config.OIDCUserInfoConfiguration) (pc)).getPairwiseSubject().apply(input); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6276/buggy-version/idp-oidc-extension-impl.src.main.java.org.geant.idpextension.oidc.config.logic.PairwiseSubjectPredicate.java", "BodyUseAPI": [], "Fixed commit": "d07a57214e0250d505f68fdc4335045973e87c62", "Url": "https://api.github.com/repos/CSCfi/shibboleth-idp-oidc-extension", "Date": "2018-03-06T06:08:02Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((room.getTile(actor.x, actor.y, actor.z)) instanceof de.leifaktor.robbiemini.tiles.BridgeDown) && (dir == 0)) newz++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/3639/buggy-version/core.src.de.leifaktor.robbiemini.CollisionDetector.java", "BodyUseAPI": [], "Fixed commit": "71d9afc95eee028a79b5dd8144a1b24001d4a0e7", "Url": "https://api.github.com/repos/Leifa/robbiemini", "Date": "2018-04-07T21:31:47Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((room.getTile(actor.x, actor.y, actor.z)) instanceof de.leifaktor.robbiemini.tiles.BridgeUp) && (dir == 2)) newz++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/3639/buggy-version/core.src.de.leifaktor.robbiemini.CollisionDetector.java", "BodyUseAPI": [], "Fixed commit": "71d9afc95eee028a79b5dd8144a1b24001d4a0e7", "Url": "https://api.github.com/repos/Leifa/robbiemini", "Date": "2018-04-07T21:31:47Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((path.charAt(lastIndex)) == '\\\\') || ((path.charAt(lastIndex)) == '/')) path = path.substring(0, path.length());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2100/buggy-version/src.counter.ParticleCounter.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "6da21d18b52e6d94ffe4b43f7b00843c2a85243e", "Url": "https://api.github.com/repos/jayathungek/pcounts", "Date": "2018-10-05T18:17:14Z"},
{"Line": "=>2406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == (android.support.v4.view.ViewCompat.TYPE_NON_TOUCH)) { if (!(isMovingContent())) { if (!((isEnabledPinRefreshViewWhileLoading()) && (((isRefreshing()) && (isMovingHeader())) || ((isLoadingMore()) && (isMovingFooter()))))) if (isVerticalOrientation) consumed[1] = dy; else consumed[0] = dx; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7545/buggy-version/core.src.main.java.me.dkzwm.widget.srl.SmoothRefreshLayout.java", "BodyUseAPI": [], "Fixed commit": "367b4095a208401d19bb05b626a62febe78a1dcc", "Url": "https://api.github.com/repos/dkzwm/SmoothRefreshLayout", "Date": "2018-09-18T05:10:18Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (exception.getDetails().getErrors().get(0).getMessage().equals(\"The <code>comment</code> resource that is being inserted must specify a value for the <code>snippet.textOriginal</code> property. Comments cannot be empty.\")) { publishProgress(\"Comments cannot be empty.\"); }else { java.lang.String message = ((exception.getStatusMessage()) + \"\\n\") + (exception.getDetails().getMessage()); publishProgress(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/5763/buggy-version/app.src.main.java.com.wordpress.dnvsoft.youtubelite.async_tasks.AsyncYoutube.java", "BodyUseAPI": ["com.google.api.client.googleapis.json.GoogleJsonResponseException.getDetails()", "com.google.api.client.googleapis.json.GoogleJsonResponseException.getStatusMessage()", "exception.getDetails().getMessage()"], "Fixed commit": "8621fb43ba53df21c8508d58816570f7cf5e3330", "Url": "https://api.github.com/repos/jdinkov/YouTubeLite", "Date": "2018-10-05T18:54:30Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((owner) == null) { return (this.name.hashCode()) + (\"Player\".hashCode()); }else { return (this.name.hashCode()) + (this.owner.getName().hashCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/8228/buggy-version/src.projectiles.GProjectile.java", "BodyUseAPI": [], "Fixed commit": "2d8459e298c52a89285b4b3108fc238224dea127", "Url": "https://api.github.com/repos/jeoliva222/DND-Game", "Date": "2018-10-04T20:35:19Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (post == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7152/buggy-version/app.src.main.java.com.paulvarry.intra42.api.cluster_map_contribute.Cluster.java", "BodyUseAPI": [], "Fixed commit": "574f01bd48f62a2862ff089714081c97d9007413", "Url": "https://api.github.com/repos/pvarry/intra42", "Date": "2018-03-29T16:02:29Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((buffer.get(0)) > 32) { result.setIppStatusResponse(parseErrorText()); }else { result.setIppStatusResponse(getIPPHeader()); ippHeaderResponse = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4845/buggy-version/src.main.java.ch.ethz.vppserver.ippclient.IppResponse.java", "BodyUseAPI": [], "Fixed commit": "7dc7c7702981e8017738cc43983e59eba7792a25", "Url": "https://api.github.com/repos/oboehm/cups4j", "Date": "2018-04-22T09:12:55Z"},
{"Line": "=>809", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ctx instanceof java.lang.Class) { org.mvel2.ast.TypeDescriptor tDescr = new org.mvel2.ast.TypeDescriptor(expr, this.start, length, 0); if (tDescr.isArray()) { java.lang.Class cls = getClassReference(((java.lang.Class) (ctx)), tDescr, variableFactory, pCtx); rootNode = new org.mvel2.optimizers.impl.refl.nodes.StaticReferenceAccessor(cls); return cls; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/865/buggy-version/src.main.java.org.mvel2.optimizers.impl.refl.ReflectiveAccessorOptimizer.java", "BodyUseAPI": [], "Fixed commit": "1ac61805c9394988ae8b96128a8f91d1462ae53c", "Url": "https://api.github.com/repos/mvel/mvel", "Date": "2018-03-07T15:18:07Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < (model.ClientRoot.getClientGame().getNumberPlayer())) { if ((current_end_game.getTotal_points()) > best_score) { best_score = current_end_game.getTotal_points(); winner = i; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2933/buggy-version/app.src.main.java.presenter.GameOverPresenter.java", "BodyUseAPI": [], "Fixed commit": "7be72a8106aecd5fd1b078e817ebb9b26662867f", "Url": "https://api.github.com/repos/bdemann/ticket-to-ride", "Date": "2018-03-30T19:43:12Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i >= (item.length())) { setItem(null); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/3677/buggy-version/src.main.java.LexicalAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "991a51c3bac81eb2741cc33c5738af5521b3359d", "Url": "https://api.github.com/repos/ansa1/C_Sharp_Parser", "Date": "2018-09-21T22:49:27Z"},
{"Line": "=>472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTable.getSelectedRow()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (indexOfTheSelectedRow != (indexOfTheTempPreviousSelectedRow)) { indexOfThePreviousSelectedRow = indexOfTheTempPreviousSelectedRow; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2280/buggy-version/src.WisdomInWords.wTeacher.java", "BodyUseAPI": [], "Fixed commit": "c808b95980defcadc4c715dafb7d9cf5a2bbe366", "Url": "https://api.github.com/repos/deLimes/Wisdom-in-words-swing-", "Date": "2018-03-22T13:06:17Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((status) != (SC_NO_CONTENT)) { response.setEntity(new org.apache.http.entity.StringEntity(\"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/3873/buggy-version/src.main.java.com.github.paweladamski.httpclientmock.action.StatusResponse.java", "BodyUseAPI": [], "Fixed commit": "3b0b99cb009bb7ead5b59790cfcfdff4faa54685", "Url": "https://api.github.com/repos/PawelAdamski/HttpClientMock", "Date": "2018-02-19T12:00:52Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((n == 0) || (n == 1)) { return new java.lang.Long[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/754/buggy-version/app.src.main.java.com.nagpal.shivam.instamath.Utils.MathematicsMethods.java", "BodyUseAPI": [], "Fixed commit": "e044356e218ae89079c75fa9ef63bb5d5759f6d9", "Url": "https://api.github.com/repos/ShivamNagpal/instamath-android-app", "Date": "2018-04-29T09:42:27Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((visualizerView) != null) { visualizerView.onResume(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4776/buggy-version/app.src.main.java.cafe.adriel.androidaudiorecorder.Activity.AudioRecorderActivity.java", "BodyUseAPI": [], "Fixed commit": "ecb616c6c12e9a387ea99c03d708452957d6c558", "Url": "https://api.github.com/repos/manhcuongk55/itplusplusc_android_audiorecord", "Date": "2018-01-31T04:19:16Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((visualizerView) != null) { visualizerView.onPause(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4776/buggy-version/app.src.main.java.cafe.adriel.androidaudiorecorder.Activity.AudioRecorderActivity.java", "BodyUseAPI": [], "Fixed commit": "ecb616c6c12e9a387ea99c03d708452957d6c558", "Url": "https://api.github.com/repos/manhcuongk55/itplusplusc_android_audiorecord", "Date": "2018-01-31T04:19:16Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((visualizerView) != null) { visualizerView.onPause(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4776/buggy-version/app.src.main.java.cafe.adriel.androidaudiorecorder.Activity.AudioRecorderActivity.java", "BodyUseAPI": [], "Fixed commit": "ecb616c6c12e9a387ea99c03d708452957d6c558", "Url": "https://api.github.com/repos/manhcuongk55/itplusplusc_android_audiorecord", "Date": "2018-01-31T04:19:16Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jobExecutionContext.getJobDetail().getJobDataMap().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (workDirectory.exists()) { try { org.apache.commons.io.FileUtils.deleteDirectory(workDirectory); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/3056/buggy-version/gamecraft-pipeline-manager.src.main.java.com.gamecraft.service.impl.PipelineTask.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)"], "Fixed commit": "84ecc53396bd6904b89f325c7f3f0c0e54e30997", "Url": "https://api.github.com/repos/iMartinezMateu/gamecraft", "Date": "2018-09-18T00:08:30Z"},
{"Line": "=>1057", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.configuration.ConfigurationSection.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(inherit.isEmpty())) { com.elmakers.mine.bukkit.api.wand.WandTemplate inheritConfiguration = controller.getWandTemplate(inherit); com.elmakers.mine.bukkit.utility.ConfigurationUtils.addConfigurations(wandSection, inheritConfiguration.getConfiguration(), false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/3210/buggy-version/Magic.src.main.java.com.elmakers.mine.bukkit.magic.command.WandCommandExecutor.java", "BodyUseAPI": ["com.elmakers.mine.bukkit.api.magic.MageController.getWandTemplate(java.lang.String)"], "Fixed commit": "763ba10b1119dc90687de413240eca0461c29dba", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2018-02-17T16:08:14Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (busbartonode.containsKey(current)) { java.lang.System.out.println((\"current is a busbar: \" + (grid.get(current, \"cim:IdentifiedObject.name\")))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/5918/buggy-version/src.CalcYMatrix.java", "BodyUseAPI": ["java.io.PrintStream.println((\"current is a busbar: \" + (grid.get(current, \"cim:IdentifiedObject.name\"))))", "com.google.common.collect.Table<java.lang.String, java.lang.String, java.lang.String>.get(java.lang.String,java.lang.String)"], "Fixed commit": "fbabd05a321fc4514cb4a752a3fc9dace67fd983", "Url": "https://api.github.com/repos/SpitJ/CA-P1", "Date": "2018-05-11T17:09:09Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lattice.incomparableType.keySet().contains(snd.getValue())) { java.util.List<org.sat4j.core.VecInt> resultList = new java.util.ArrayList<>(); for (javax.lang.model.element.AnnotationMirror incomparable : lattice.incomparableType.get(snd.getValue())) { resultList.add(checkers.inference.solver.backend.maxsat.VectorUtils.asVec((-(checkers.inference.solver.backend.maxsat.MathUtils.mapIdToMatrixEntry(fst.getId(), typeToInt.get(incomparable), lattice))))); } org.sat4j.core.VecInt[] resultArray = new org.sat4j.core.VecInt[resultList.size()]; return resultList.toArray(resultArray); }else { return emptyValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2755/buggy-version/src.checkers.inference.solver.backend.maxsat.encoder.MaxSATComparableConstraintEncoder.java", "BodyUseAPI": ["lattice.incomparableType.get(snd.getValue())", "checkers.inference.model.ConstantSlot.getValue()"], "Fixed commit": "718c8019d2f0bea78e5e0d0713db4fd1967ac406", "Url": "https://api.github.com/repos/opprop/checker-framework-inference", "Date": "2018-01-26T11:07:45Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lattice.incomparableType.keySet().contains(fst.getValue())) { java.util.List<org.sat4j.core.VecInt> resultList = new java.util.ArrayList<>(); for (javax.lang.model.element.AnnotationMirror incomparable : lattice.incomparableType.get(fst.getValue())) { resultList.add(checkers.inference.solver.backend.maxsat.VectorUtils.asVec((-(checkers.inference.solver.backend.maxsat.MathUtils.mapIdToMatrixEntry(snd.getId(), typeToInt.get(incomparable), lattice))))); } org.sat4j.core.VecInt[] resultArray = new org.sat4j.core.VecInt[resultList.size()]; return resultList.toArray(resultArray); }else { return emptyValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2755/buggy-version/src.checkers.inference.solver.backend.maxsat.encoder.MaxSATComparableConstraintEncoder.java", "BodyUseAPI": ["checkers.inference.model.ConstantSlot.getValue()", "lattice.incomparableType.get(fst.getValue())"], "Fixed commit": "718c8019d2f0bea78e5e0d0713db4fd1967ac406", "Url": "https://api.github.com/repos/opprop/checker-framework-inference", "Date": "2018-01-26T11:07:45Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type1.equals(\"appoint\")) && ((com.ruitukeji.zwbh.utils.DataUtil.getStringToDate(appointmentTime, com.ruitukeji.zwbh.common.KJActivityStack.create().topActivity().getString(R.string.timeStr))) < (java.lang.System.currentTimeMillis()))) { errorMsg(com.ruitukeji.zwbh.common.KJActivityStack.create().topActivity().getString(R.string.greateThanCurrentTime), 0); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/241/buggy-version/ZWBH-Android.app.src.main.java.com.ruitukeji.zwbh.main.fragment.IntercityFragment.java", "BodyUseAPI": [], "Fixed commit": "426951cdb2cfda84d4b5a8efafa1c26bf8f428b2", "Url": "https://api.github.com/repos/921668753/wztx-shipper-android", "Date": "2018-01-18T10:15:29Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type1.equals(\"appoint\")) && ((com.ruitukeji.zwbh.utils.DataUtil.getStringToDate(appointmentTime, com.ruitukeji.zwbh.common.KJActivityStack.create().topActivity().getString(R.string.timeStr))) < (java.lang.System.currentTimeMillis()))) { errorMsg(com.ruitukeji.zwbh.common.KJActivityStack.create().topActivity().getString(R.string.greateThanCurrentTime), 0); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/241/buggy-version/ZWBH-Android.app.src.main.java.com.ruitukeji.zwbh.main.fragment.SameCityFragment.java", "BodyUseAPI": [], "Fixed commit": "426951cdb2cfda84d4b5a8efafa1c26bf8f428b2", "Url": "https://api.github.com/repos/921668753/wztx-shipper-android", "Date": "2018-01-18T10:15:29Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((view) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1572/buggy-version/app.src.main.java.org.wirbleibenalle.stressi.ui.main.MainPresenter.java", "BodyUseAPI": [], "Fixed commit": "08b127338b1330369797cefa48f2a5eef895491e", "Url": "https://api.github.com/repos/doomdevelop/Stressi", "Date": "2018-02-16T06:10:40Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((net.aufdemrand.denizen.utilities.depends.Depends.citizens) != null) && (net.citizensnpcs.api.CitizensAPI.getNPCRegistry().isNPC(((org.bukkit.entity.Player) (holder))))) { return new net.aufdemrand.denizen.objects.properties.inventory.dNPC(net.citizensnpcs.api.CitizensAPI.getNPCRegistry().getNPC(((org.bukkit.entity.Player) (holder)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7379/buggy-version/plugin.src.main.java.net.aufdemrand.denizen.objects.properties.inventory.InventoryHolder.java", "BodyUseAPI": ["net.citizensnpcs.api.CitizensAPI.getNPCRegistry().getNPC(org.bukkit.inventory.InventoryHolder)"], "Fixed commit": "4e49cf285ae9e17c1f9ef6627a37647e4496f5d7", "Url": "https://api.github.com/repos/mcmonkey4eva/Denizen", "Date": "2018-03-18T01:06:25Z"},
{"Line": "=>530", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sb.length()) >= 2) { return str.substring(0, ((sb.length()) - 2)); }else return sb.toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/8102/buggy-version/src.main.java.com.gisgraphy.importer.LabelGenerator.java", "BodyUseAPI": ["java.lang.StringBuffer.toString()", "java.lang.StringBuffer.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "e1dd7faeec39e87e37d919360c367ec8d5e346cc", "Url": "https://api.github.com/repos/gisgraphy/gisgraphy", "Date": "2018-01-23T13:56:49Z"},
{"Line": "=>520", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sb.length()) >= 2) { return sb.substring(0, ((sb.length()) - 2)); }else { return sb.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/8102/buggy-version/src.main.java.com.gisgraphy.importer.LabelGenerator.java", "BodyUseAPI": ["java.lang.StringBuffer.toString()", "java.lang.StringBuffer.length()", "java.lang.StringBuffer.substring(int,int)"], "Fixed commit": "e1dd7faeec39e87e37d919360c367ec8d5e346cc", "Url": "https://api.github.com/repos/gisgraphy/gisgraphy", "Date": "2018-01-23T13:56:49Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["se.vgregion.alfresco.mellanarkiv.platform.pipeline.ingest.impl.storage.StorageHandlerSetMetadataWorkerImpl.getXpathValues(org.alfresco.service.cmr.repository.NodeRef,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((publicAvailableFroms != null) && (!(publicAvailableFroms.isEmpty()))) { try { publicAvailableFrom = dateformat.parse(publicAvailableFroms.get(0).replaceAll(\"T\", \"\")); } catch (java.text.ParseException e) { se.vgregion.alfresco.mellanarkiv.platform.pipeline.ingest.impl.storage.StorageHandlerSetMetadataWorkerImpl.LOG.error(\"Unable to parse available from date\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6340/buggy-version/platform-mellanarkiv.src.main.java.se.vgregion.alfresco.mellanarkiv.platform.pipeline.ingest.impl.storage.StorageHandlerSetMetadataWorkerImpl.java", "BodyUseAPI": ["java.text.DateFormat.parse(java.lang.String)", "java.util.List<java.lang.String>.get(int)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "774abcd9d181eb11a40d50e9ceedd1b2309410d7", "Url": "https://api.github.com/repos/Vastra-Gotalandsregionen/alfresco-mellanarkiv", "Date": "2018-03-23T11:31:15Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((question.get(\"correctChoice\").isJsonArray()) && ((question.get(\"correctChoice\").getAsJsonArray().size()) > 0)) { myQuestion.setCorrectChoice(new com.google.gson.Gson().toJson(org.ole.planet.myplanet.utilities.JsonUtils.getJsonArray(\"correctChoice\", question).get(0))); }else if (org.ole.planet.myplanet.utilities.JsonUtils.getString(\"correctChoice\", question).equals(org.ole.planet.myplanet.utilities.JsonUtils.getString(\"id\", res))) myQuestion.setCorrectChoice(org.ole.planet.myplanet.utilities.JsonUtils.getString(\"res\", res));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1642/buggy-version/app.src.main.java.org.ole.planet.myplanet.Data.realm_examQuestion.java", "BodyUseAPI": ["org.ole.planet.myplanet.Data.realm_examQuestion.setCorrectChoice(new com.google.gson.Gson().toJson(org.ole.planet.myplanet.utilities.JsonUtils.getJsonArray(\"correctChoice\", question).get(0)))", "org.ole.planet.myplanet.utilities.JsonUtils.getJsonArray(java.lang.String,com.google.gson.JsonObject)", "org.ole.planet.myplanet.utilities.JsonUtils.getString(\"correctChoice\", question).equals(org.ole.planet.myplanet.utilities.JsonUtils.getString(\"id\", res))", "org.ole.planet.myplanet.utilities.JsonUtils.getString(java.lang.String,com.google.gson.JsonObject)", "com.google.gson.Gson.toJson(org.ole.planet.myplanet.utilities.JsonUtils.getJsonArray(\"correctChoice\", question).get(0))", "org.ole.planet.myplanet.utilities.JsonUtils.getJsonArray(\"correctChoice\", question).get(int)"], "Fixed commit": "f7b8cd26cb144f660f37b1e7e4881370b360c186", "Url": "https://api.github.com/repos/open-learning-exchange/myplanet", "Date": "2018-10-31T15:04:24Z"},
{"Line": "=>1888", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.EnumSet.noneOf(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(flags.contains(SqlKind.NULLS_LAST))) && (!(flags.contains(SqlKind.NULLS_FIRST)))) { boolean desc = (flags.contains(SqlKind.DESCENDING)) ? true : false; boolean nullsFirst = !(validator.getDefaultNullCollation().last(desc)); boolean isCalciteDefaultCollation = NullCollation.HIGH.isDefaultOrder(nullsFirst, desc); if (!isCalciteDefaultCollation) { org.apache.calcite.sql.SqlKind nullDirection = (nullsFirst) ? org.apache.calcite.sql.SqlKind.NULLS_FIRST : org.apache.calcite.sql.SqlKind.NULLS_LAST; flags.add(nullDirection); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1214/buggy-version/core.src.main.java.org.apache.calcite.sql2rel.SqlToRelConverter.java", "BodyUseAPI": ["java.util.Set<org.apache.calcite.sql.SqlKind>.contains(SqlKind.DESCENDING)", "java.util.Set<org.apache.calcite.sql.SqlKind>.add(org.apache.calcite.sql.SqlKind)"], "Fixed commit": "34c39d165e0aad964631aeee863625db798cca2c", "Url": "https://api.github.com/repos/julianhyde/calcite", "Date": "2018-05-23T16:04:13Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["loc.amreo.nuvolamagica.containerbackend.containerproxy.oneworkspacetoonecontainer.ContainerInfoRepository.findOneByContainerName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (info.getSessions().isEmpty()) containerManager.unpause(info.getContainerName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2875/buggy-version/src.main.java.loc.amreo.nuvolamagica.containerbackend.containerproxy.oneworkspacetoonecontainer.OneWorkspaceToOneContainerProxy.java", "BodyUseAPI": ["loc.amreo.nuvolamagica.containerbackend.ContainerManager.unpause(info.getContainerName())", "loc.amreo.nuvolamagica.containerbackend.containerproxy.oneworkspacetoonecontainer.ContainerInfo.getContainerName()"], "Fixed commit": "057431e3d12dbdf9f2e157ae00e475e6b1dde5f8", "Url": "https://api.github.com/repos/amreo/nuvola-magica", "Date": "2018-05-15T17:04:00Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["loc.amreo.nuvolamagica.containerbackend.containerproxy.oneworkspacetoonecontainer.ContainerInfoRepository.findOneByContainerName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(info.getSessions().isEmpty())) { containerManager.pause(info.getContainerName()); info.setSessions(new java.util.HashSet<java.util.UUID>()); containerInfoRepository.save(info); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2875/buggy-version/src.main.java.loc.amreo.nuvolamagica.containerbackend.containerproxy.oneworkspacetoonecontainer.OneWorkspaceToOneContainerProxy.java", "BodyUseAPI": ["loc.amreo.nuvolamagica.containerbackend.containerproxy.oneworkspacetoonecontainer.ContainerInfo.setSessions(java.util.HashSet<java.util.UUID>)", "loc.amreo.nuvolamagica.containerbackend.containerproxy.oneworkspacetoonecontainer.ContainerInfoRepository.save(loc.amreo.nuvolamagica.containerbackend.containerproxy.oneworkspacetoonecontainer.ContainerInfo)", "loc.amreo.nuvolamagica.containerbackend.ContainerManager.pause(info.getContainerName())", "loc.amreo.nuvolamagica.containerbackend.containerproxy.oneworkspacetoonecontainer.ContainerInfo.getContainerName()"], "Fixed commit": "057431e3d12dbdf9f2e157ae00e475e6b1dde5f8", "Url": "https://api.github.com/repos/amreo/nuvola-magica", "Date": "2018-05-15T17:04:00Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (strings[0].equals(\"\")) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6324/buggy-version/app.src.main.java.com.example.android.travelwallet.utils.LoadPlacePhotoAsyncTask.java", "BodyUseAPI": [], "Fixed commit": "2853916c090d654dded80013877ba325ab21305f", "Url": "https://api.github.com/repos/guino000/Projeto-Capstone", "Date": "2018-10-01T17:37:04Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tree.getRoot().getHeight()) > (timeOrigin.getValue())) return java.lang.Double.NEGATIVE_INFINITY;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/5688/buggy-version/src.hobd.BirthDeathModelAnalytic.java", "BodyUseAPI": [], "Fixed commit": "314e49de3aa716af6a52a2508e9bfc06ae6929b4", "Url": "https://api.github.com/repos/iscambes/HOBD", "Date": "2018-07-26T08:33:51Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isFirstFrame)) { (mFrameCount)++; }else { isFirstFrame = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1475/buggy-version/app.src.main.java.com.example.tlaichia.mobilevideocaptureanduploader.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "510048d4b5be8e731b1d83c34f4f20a1cbc5aef2", "Url": "https://api.github.com/repos/alanwuha/MobileVideoCaptureAndUploader", "Date": "2017-10-15T03:23:03Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) > 0) { if (args[0].equals(\"--dev\")) { Config.dev_mode = true; java.lang.System.out.println(\"[INFO] Running in Development Mode\"); }else { Config.config_file = \"config.json\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1065/buggy-version/src.main.java.gravity.gbot.Main.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "0cade4450f4d2346fbdc8b2e4121df0480b9daa3", "Url": "https://api.github.com/repos/EnzoDevelop/EnzoBot", "Date": "2018-04-05T15:19:11Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (AA.contains(\":\")) { AA = AA.split(\":\")[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1639/buggy-version/src.main.java.com.sc.fiber.util.strings.EasyStringUtil.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "bf38b48ca11cf6dbb99dbdf9596cfcbd4e1d3ee5", "Url": "https://api.github.com/repos/LocyDragon/Fiber", "Date": "2018-07-11T11:56:41Z"},
{"Line": "=>1135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isValidPosition(x1, y1)) { if ((map[x1][y1]) == targetItemID) { isNear = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/732/buggy-version/core.src.map.Map.java", "BodyUseAPI": [], "Fixed commit": "1e253e64d058083b934c93940b15536066bb57be", "Url": "https://api.github.com/repos/CuseCose/Aeronef", "Date": "2018-06-08T20:00:07Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.math.BigInteger.toByteArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((array[0]) == 0) array = java.util.Arrays.copyOfRange(array, 1, array.length);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/3723/buggy-version/src.main.java.org.irmacard.credentials.idemix.proofs.ProofDBuilder.java", "BodyUseAPI": ["java.util.Arrays.copyOfRange(byte[],int,int)"], "Fixed commit": "5ba0ddc92625b8f6dfd3e1a9cda4a177daa4a110", "Url": "https://api.github.com/repos/privacybydesign/irma_api_common", "Date": "2018-09-21T15:25:02Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.math.BigInteger.toByteArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((array[0]) == 0) array = java.util.Arrays.copyOfRange(array, 1, array.length);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/3723/buggy-version/src.main.java.org.irmacard.credentials.idemix.proofs.ProofD.java", "BodyUseAPI": ["java.util.Arrays.copyOfRange(byte[],int,int)"], "Fixed commit": "5ba0ddc92625b8f6dfd3e1a9cda4a177daa4a110", "Url": "https://api.github.com/repos/privacybydesign/irma_api_common", "Date": "2018-09-21T15:25:02Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jasig.cas.web.support.WebUtils.getHttpServletRequest(org.springframework.webflow.execution.RequestContext)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((request.getParameter(\"verification_key\")) != null) || ((credential.getVerificationKey()) != null)) { return new org.springframework.webflow.execution.Event(this, \"invalidVerificationKey\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1958/buggy-version/cas-server-support-osf.src.main.java.io.cos.cas.authentication.handler.support.OpenScienceFrameworkPrincipalFromRequestRemoteUserNonInteractiveCredentialsAction.java", "BodyUseAPI": [], "Fixed commit": "7e79d517cdacb0b94a534682474ae7c1110fb7ec", "Url": "https://api.github.com/repos/cslzchen/cas-overlay", "Date": "2018-08-31T15:18:45Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.cnr.istc.exploraa.QuestionStimulusActivity.getIntent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (intent.hasExtra(\"answer\")) { question_stimulus_answers_group.check(intent.getIntExtra(\"answer\", (-1))); question_stimulus_answers_group.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6314/buggy-version/ExPLoRAA-MobileApp.app.src.main.java.it.cnr.istc.exploraa.QuestionStimulusActivity.java", "BodyUseAPI": ["android.content.Intent.getIntExtra(java.lang.String,int)", "android.widget.RadioGroup.check(intent.getIntExtra(\"answer\", (-1)))"], "Fixed commit": "84e92adbddf96c7c2ade100f7b5c73dac073fb9b", "Url": "https://api.github.com/repos/pstlab/ExPLoRAA", "Date": "2018-08-02T10:35:39Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((temp.length()) < (t.length())) { return t; }else { return temp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6360/buggy-version/app.src.main.java.ch.epfl.sweng.vanjel.DoctorAvailabilityActivity.java", "BodyUseAPI": [], "Fixed commit": "ca3c944df8528180f6f76c6a5391f1c74a7138b3", "Url": "https://api.github.com/repos/ElCabrino/SDPProject", "Date": "2018-10-23T16:47:54Z"},
{"Line": "=>521", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (columnSize.hasKnownSize()) { estOutputRowWidth += columnSize.getKnownSize(); estBatchHolderValuesRowWidth += columnSize.getKnownSize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/488/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.physical.impl.aggregate.HashAggTemplate.java", "BodyUseAPI": ["RecordBatchSizer.ColumnSize.getKnownSize()", "RecordBatchSizer.ColumnSize.getKnownSize()"], "Fixed commit": "0848537f582c6ae8353de6440760ab47fff40af2", "Url": "https://api.github.com/repos/ilooner/drill", "Date": "2018-02-02T19:32:31Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentState) == (fm.jiecao.jcvideoplayer_lib.JCVideoPlayer.CURRENT_STATE_AUTO_COMPLETE)) { onEvent(JCUserAction.ON_CLICK_START_AUTO_COMPLETE); if ((listener) != null) { listener.onPlaying(\"PLAYING\"); } prepareMediaPlayer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6991/buggy-version/jcvideoplayer-lib.src.main.java.fm.jiecao.jcvideoplayer_lib.JCVideoPlayer.java", "BodyUseAPI": [], "Fixed commit": "759ae6abbfa9460e6d2e2516468724fa80e88227", "Url": "https://api.github.com/repos/sachinvarma/JiaoZiVideoPlayer", "Date": "2018-03-06T04:50:24Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listener) != null) { listener.onPlaying(\"PLAYING\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6991/buggy-version/jcvideoplayer-lib.src.main.java.fm.jiecao.jcvideoplayer_lib.JCVideoPlayer.java", "BodyUseAPI": [], "Fixed commit": "759ae6abbfa9460e6d2e2516468724fa80e88227", "Url": "https://api.github.com/repos/sachinvarma/JiaoZiVideoPlayer", "Date": "2018-03-06T04:50:24Z"},
{"Line": "=>673", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cachedClasses.get().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (c == null) { cachedClasses.get().put(n, clazz); }else if (c != clazz) { throw new java.lang.IllegalStateException((((((((\"Duplicate extension \" + (type.getName())) + \" name \") + n) + \" on \") + (c.getName())) + \" and \") + (clazz.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/202/buggy-version/dubbo-common.src.main.java.com.alibaba.dubbo.common.extension.ExtensionLoader.java", "BodyUseAPI": ["java.lang.Class<?>.getName()"], "Fixed commit": "8a1f9f79488d94f7a23118ce5fe25e6bc45c029a", "Url": "https://api.github.com/repos/tinycedar/dubbo", "Date": "2018-02-09T10:51:27Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nnn1 < 10) { result.append(\"00\"); }else if (nnn1 < 100) { result.append(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1372/buggy-version/dataquality-sampling.src.main.java.org.talend.dataquality.datamasking.functions.GenerateSsnFr.java", "BodyUseAPI": [], "Fixed commit": "c07b96f4e7914f7280e42fc290ed5320d08cc478", "Url": "https://api.github.com/repos/Talend/data-quality", "Date": "2018-10-23T15:46:20Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nnn2 < 10) { result.append(\"00\"); }else if (nnn2 < 100) { result.append(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1372/buggy-version/dataquality-sampling.src.main.java.org.talend.dataquality.datamasking.functions.GenerateSsnFr.java", "BodyUseAPI": [], "Fixed commit": "c07b96f4e7914f7280e42fc290ed5320d08cc478", "Url": "https://api.github.com/repos/Talend/data-quality", "Date": "2018-10-23T15:46:20Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((GenerateString.queue.size()) < (size)) { java.lang.String generatedString = \"\"; for (int i = 0; i < 2; i++) { generatedString += java.lang.String.valueOf(GenerateString.set.charAt(secureRandom.nextInt(GenerateString.set.length()))); } GenerateString.queue.offer(generatedString); java.lang.System.out.println(((((((Starter.ANSI_YELLOW) + \"String with message:\") + generatedString) + \" generated..\") + (GenerateString.queue.size())) + (Starter.ANSI_RESET))); try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException e) { java.lang.System.out.println((\"Error putting thread to sleep in class \" + (e.getClass().getName()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/5944/buggy-version/src.GenerateString.java", "BodyUseAPI": ["java.util.Queue<java.lang.String>.offer(java.lang.String)", "java.io.PrintStream.println(((((((Starter.ANSI_YELLOW) + \"String with message:\") + generatedString) + \" generated..\") + (GenerateString.queue.size())) + (Starter.ANSI_RESET)))", "java.util.Queue<java.lang.String>.size()"], "Fixed commit": "e80ed22462881441289742ff97ef83221311cbc2", "Url": "https://api.github.com/repos/yj29/FCN_proj2", "Date": "2018-02-27T18:13:38Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index < 0) || (index >= (items.size()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/3692/buggy-version/src.controlP5.ListBox.java", "BodyUseAPI": [], "Fixed commit": "cabff9ab86edf70392d1337b05d8c1c3c751478d", "Url": "https://api.github.com/repos/frankiezafe/controlp5", "Date": "2018-06-11T09:53:40Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((object.getPageId()) != null) && ((object.getCoverUrl()) != null)) { if ((config != null) && ((config.orientation) == (android.content.res.Configuration.ORIENTATION_PORTRAIT))) { loadCoverBackground(object, cvCard, tvTopic, tvUsers, ivCover); android.widget.RelativeLayout.LayoutParams topicParams = ((android.widget.RelativeLayout.LayoutParams) (tvTopic.getLayoutParams())); topicParams.addRule(RelativeLayout.BELOW, R.id.iv_cover); tvTopic.setLayoutParams(topicParams); setPlayerProfPics(profPics, profPic1, profPic2); }else { loadAsBackground(context, object.getCoverUrl(), cvCard); } }else { tvTopic.setTextColor(context.getResources().getColor(R.color.color_black)); if ((config != null) && ((config.orientation) == (android.content.res.Configuration.ORIENTATION_PORTRAIT))) { adjustLayout(layout, java.util.Arrays.asList(ivCover, ((android.view.View) (ivProf))), tvTopic, true); setPlayerProfPics(profPics, profPic1, profPic2); android.widget.RelativeLayout.LayoutParams params = ((android.widget.RelativeLayout.LayoutParams) (profPic1.getLayoutParams())); params.addRule(RelativeLayout.ALIGN_PARENT_BOTTOM, RelativeLayout.TRUE); int margin = ((int) (context.getResources().getDimension(R.dimen.card_prof_pic_margin))); params.setMargins(margin, 0, 0, margin); }else { tvUsers.setTextColor(context.getResources().getColor(R.color.color_black)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7758/buggy-version/app.src.main.java.a3.com.convo.adapters.CardAdapter.java", "BodyUseAPI": ["a3.com.convo.adapters.CardAdapter.2.loadAsBackground(android.content.Context,object.getCoverUrl(),android.support.v7.widget.CardView)", "a3.com.convo.adapters.CardAdapter.2.loadCoverBackground(a3.com.convo.models.Page,android.support.v7.widget.CardView,android.widget.TextView,android.widget.TextView,android.widget.ImageView)", "a3.com.convo.models.Page.getCoverUrl()"], "Fixed commit": "0019fdef16dbaa22d771f95bed228414e7fe11b5", "Url": "https://api.github.com/repos/andreavieira/Convo", "Date": "2018-08-10T17:41:27Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (errorMsg != null) { intent.putExtra(computeythings.garagemonitor.services.TCPSocketService.DATA, errorMsg); mBroadcaster.sendBroadcast(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4110/buggy-version/app.src.main.java.computeythings.garagemonitor.services.TCPSocketService.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,java.lang.String)"], "Fixed commit": "5f0ce41a03c79aa916069c43c0690ff57e1b715c", "Url": "https://api.github.com/repos/computeythings/PiOpener-Android", "Date": "2018-03-10T06:36:26Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((problemView) != null) com.shrcn.found.common.event.EventManager.getDefault().notify(SCLConstants.CLEAR_PROBLEM, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2331/buggy-version/com.synet.tool.rsc.src.com.synet.tool.rsc.util.ProblemManager.java", "BodyUseAPI": [], "Fixed commit": "f190543651678dda055e0fca1c9afbfc207d95da", "Url": "https://api.github.com/repos/ChalmersA/RSC50", "Date": "2018-10-06T09:43:40Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((problemView) != null) com.shrcn.found.common.event.EventManager.getDefault().notify(SCLConstants.APPEND_PROBLEM, ps);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2331/buggy-version/com.synet.tool.rsc.src.com.synet.tool.rsc.util.ProblemManager.java", "BodyUseAPI": [], "Fixed commit": "f190543651678dda055e0fca1c9afbfc207d95da", "Url": "https://api.github.com/repos/ChalmersA/RSC50", "Date": "2018-10-06T09:43:40Z"},
{"Line": "=>494", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cn.hutool.core.collection.CollUtil.isEmpty(c)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6895/buggy-version/hutool-json.src.main.java.cn.hutool.json.JSONArray.java", "BodyUseAPI": [], "Fixed commit": "85aa88614679d929d905106781a55ff223fbc7d8", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2018-03-14T12:53:39Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == 0) { detailBundle.putString(\"GOAL\", mUserProfile.getGoal()); detailBundle.putInt(\"CURRENT_WEIGHT\", mUserProfile.getWeight()); detailBundle.putInt(\"TARGET_WEIGHT\", mUserProfile.getTargetWeight()); detailBundle.putInt(\"BMI\", com.example.lifestyleapp.FitnessUtils.calculateBMI(mUserProfile)); detailBundle.putInt(\"TARGET_CALORIES\", com.example.lifestyleapp.FitnessUtils.calculateExpectedCaloricIntake(mUserProfile)); if (isTablet()) { mTabletFragment = new com.example.lifestyleapp.GoalsFragment(); mTabletFragment.setArguments(detailBundle); ftrans.replace(R.id.fl_frag_itemdetail_container_tablet, mTabletFragment, \"Goals_Fragment\"); }else { mFragment = new com.example.lifestyleapp.GoalsFragment(); mFragment.setArguments(detailBundle); ftrans.replace(R.id.fl_frag_masterlist_container_phone, mFragment, \"Goals_Fragment\"); } }else if (position == 1) { java.lang.String location = mUserProfile.getCity().replace(' ', '&'); location += \"&\" + (mUserProfile.getCountry().replace(' ', '&')); detailBundle.putString(\"location\", location); if (isTablet()) { mTabletFragment = new com.example.lifestyleapp.WeatherFragment(); mTabletFragment.setArguments(detailBundle); ftrans.replace(R.id.fl_frag_itemdetail_container_tablet, mTabletFragment, \"Weather_Fragment\"); }else { mFragment = new com.example.lifestyleapp.WeatherFragment(); mFragment.setArguments(detailBundle); ftrans.replace(R.id.fl_frag_masterlist_container_phone, mFragment, \"Weather_Fragment\"); } }else { FindHikes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/4630/buggy-version/LifestyleApp.app.src.main.java.com.example.lifestyleapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a46bc62fdccb1e15097a067fce0b64c8854973c7", "Url": "https://api.github.com/repos/westleya/AppDesignProject", "Date": "2018-09-27T02:40:44Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dialogName.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (deckTitle.isEmpty()) { new android.support.v7.app.AlertDialog.Builder(this).setTitle(\"Error\").setMessage(\"You can't create a deck without a title\").setPositiveButton(\"Ok\", null).create().show(); }else { Settings.theDeckOfDecks.add(new com.matt.flashcards.Deck(deckTitle)); adapter.notifyDataSetChanged(); com.matt.flashcards.Settings.saveData(getBaseContext()); if (drawer.isDrawerOpen(GravityCompat.START)) { drawer.closeDrawer(GravityCompat.START, false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7719/buggy-version/mobile.src.main.java.com.matt.flashcards.SP_CategoryActivity.java", "BodyUseAPI": ["Settings.theDeckOfDecks.add(com.matt.flashcards.Deck)"], "Fixed commit": "ecfa93e257065c21f04a3a1080c8a7efa3a341c9", "Url": "https://api.github.com/repos/mattrusso9037/Flashcards", "Date": "2018-03-11T23:29:04Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.entity.item.EntityItemFrame.getHangingPosition()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (blockpos == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7325/buggy-version/src.main.java.org.spongepowered.common.mixin.optimization.mapoptimization.MixinMapData.java", "BodyUseAPI": [], "Fixed commit": "fa97abfcea5b7e8e126c2b9b9ab1e0b495176e70", "Url": "https://api.github.com/repos/SpongePowered/SpongeCommon", "Date": "2018-08-09T01:32:31Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tx.getExecuteResult()) != (com.higgs.trust.rs.core.api.enums.CoreTxResultEnum.SUCCESS)) { respData.setCode(tx.getErrorCode()); respData.setMsg(tx.getErrorMsg()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6778/buggy-version/rs.src.main.java.com.higgs.trust.rs.core.callback.SlaveBatchCallbackProcessor.java", "BodyUseAPI": ["com.higgs.trust.slave.api.vo.RespData.setCode(tx.getErrorCode())", "com.higgs.trust.rs.core.vo.RsCoreTxVO.getErrorCode()", "com.higgs.trust.slave.api.vo.RespData.setMsg(tx.getErrorMsg())", "com.higgs.trust.rs.core.vo.RsCoreTxVO.getErrorMsg()"], "Fixed commit": "e0bac7fa6555c845e14b0595f858ca1a8c4cb6e3", "Url": "https://api.github.com/repos/Aurorasic/swiftledger", "Date": "2018-09-28T07:18:26Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tx.getExecuteResult()) != (com.higgs.trust.rs.core.api.enums.CoreTxResultEnum.SUCCESS)) { respData.setCode(tx.getErrorCode()); respData.setMsg(tx.getErrorMsg()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6778/buggy-version/rs.src.main.java.com.higgs.trust.rs.core.callback.SlaveBatchCallbackProcessor.java", "BodyUseAPI": ["com.higgs.trust.rs.core.vo.RsCoreTxVO.getErrorMsg()", "com.higgs.trust.slave.api.vo.RespData.setCode(tx.getErrorCode())", "com.higgs.trust.rs.core.vo.RsCoreTxVO.getErrorCode()", "com.higgs.trust.slave.api.vo.RespData.setMsg(tx.getErrorMsg())"], "Fixed commit": "e0bac7fa6555c845e14b0595f858ca1a8c4cb6e3", "Url": "https://api.github.com/repos/Aurorasic/swiftledger", "Date": "2018-09-28T07:18:26Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((computeResult.getString(13)) != null) { extraUserDataFileType = CloudInitUserDataBuilder.FileType.valueOf(computeResult.getString(13)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/3158/buggy-version/src.main.java.org.fogbowcloud.manager.core.datastore.orderstorage.ComputeOrderStorage.java", "BodyUseAPI": ["java.sql.ResultSet.getString(int)", "CloudInitUserDataBuilder.FileType.valueOf(java.lang.String)"], "Fixed commit": "0170ce5d60c00f6486c8a8263374f9a4353a918f", "Url": "https://api.github.com/repos/fogbow/resource-allocation-service", "Date": "2018-07-10T16:40:32Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (deedName.endsWith(\"\\u200e\")) { deedName = deedName.substring(0, ((deedName.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2160/buggy-version/src.main.java.delta.games.lotro.tools.lore.deeds.lotrowiki.DeedLinksResolver.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "a14f4a011ce036178a5de2d82825b630d15c721a", "Url": "https://api.github.com/repos/dmorcellet/lotro-tools", "Date": "2018-02-03T18:17:54Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (conversationType.equals(Conversation.ConversationType.PRIVATE)) { java.util.List<io.rong.imkit.plugin.IPluginModule> pluginModuleList = new java.util.ArrayList<>(); io.rong.imkit.plugin.IPluginModule image = new io.rong.imkit.plugin.ImagePlugin(); io.rong.imkit.plugin.IPluginModule file = new io.rong.imkit.widget.provider.FilePlugin(); pluginModuleList.add(image); pluginModuleList.add(file); return pluginModuleList; }else if (conversationType.equals(Conversation.ConversationType.PUBLIC_SERVICE)) { java.util.List<io.rong.imkit.plugin.IPluginModule> pluginModuleList = new java.util.ArrayList<>(); io.rong.imkit.plugin.IPluginModule image = new io.rong.imkit.plugin.ImagePlugin(); io.rong.imkit.plugin.IPluginModule locationPlugin = new io.rong.imkit.plugin.DefaultLocationPlugin(); pluginModuleList.add(image); pluginModuleList.add(locationPlugin); try { java.lang.String clsName = \"com.iflytek.cloud.SpeechUtility\"; java.lang.Class<?> cls = java.lang.Class.forName(clsName); if (cls != null) { cls = java.lang.Class.forName(\"io.rong.recognizer.RecognizePlugin\"); java.lang.reflect.Constructor<?> constructor = cls.getConstructor(); io.rong.imkit.plugin.IPluginModule recognizer = ((io.rong.imkit.plugin.IPluginModule) (constructor.newInstance())); pluginModuleList.add(recognizer); } } catch (java.lang.Exception e) { e.printStackTrace(); } return pluginModuleList; }else if (conversationType == (Conversation.ConversationType.CUSTOMER_SERVICE)) { java.util.List<io.rong.imkit.plugin.IPluginModule> pluginModules = super.getPluginModules(conversationType); if (conversationType == (Conversation.ConversationType.CUSTOMER_SERVICE)) { if (pluginModules != null) { for (io.rong.imkit.plugin.IPluginModule module : pluginModules) { if (module instanceof io.rong.imkit.widget.provider.FilePlugin) { pluginModules.remove(module); break; } } } } return pluginModules; }else { return super.getPluginModules(conversationType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6631/buggy-version/SillyChildMerchant.app.src.main.java.com.yinglan.scm.message.interactivemessage.imuitl.moudle.SealExtensionModule.java", "BodyUseAPI": ["Conversation.ConversationType.equals(Conversation.ConversationType.PUBLIC_SERVICE)", "io.rong.imkit.DefaultExtensionModule.getPluginModules(Conversation.ConversationType)", "io.rong.imkit.DefaultExtensionModule.getPluginModules(Conversation.ConversationType)"], "Fixed commit": "bc1345c51535e80ba5559a29d161a5df1dc72b83", "Url": "https://api.github.com/repos/921668753/SillyChildMerchant-Android", "Date": "2018-06-10T09:10:36Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((w >= 0) && (w < (weapons.size()))) return weapons.remove(w); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1013/buggy-version/deepspace.src.deepspace.Hangar.java", "BodyUseAPI": ["java.util.ArrayList<deepspace.Weapon>.remove(int)"], "Fixed commit": "4366687ff366f3622350b80bde8b50381550ded3", "Url": "https://api.github.com/repos/antoniogamiz/PDOO-Java", "Date": "2018-03-28T08:26:49Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.stream.Stream<? extends java.lang.Object>.collect(java.util.stream.Collector<? extends java.lang.Object, ?, java.util.List<? extends java.lang.Object>>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((o.size()) == 1) { return new me.zeroeightysix.osureader.parse.OsuStringNode(key, value); }else { return new me.zeroeightysix.osureader.parse.OsuListNode(key, o); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/116/buggy-version/src.main.java.me.zeroeightysix.osureader.parse.StandardOsuFileParser.java", "BodyUseAPI": [], "Fixed commit": "f05f0ebd1d657caea8cae170b5be1aadabc3d559", "Url": "https://api.github.com/repos/zeroeightysix/osureader", "Date": "2018-05-17T17:06:38Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mChannel) != null) mChannel.setArpeggiator(java.lang.Integer.parseInt(value));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6811/buggy-version/app.src.main.java.com.mikehelland.omgtechnogauntlet.CommandProcessor.java", "BodyUseAPI": [], "Fixed commit": "66c30971d307c6e9881a8f53e6650a89c439db12", "Url": "https://api.github.com/repos/mikehelland/techno-gauntlet", "Date": "2018-01-11T03:38:32Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCalibrateZWithSampleVariable().get()) && (!(calibrateZWithSample()))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6818/buggy-version/src.clearcontrol.microscope.lightsheet.calibrator.CalibrationEngine.java", "BodyUseAPI": [], "Fixed commit": "0b377dec74bd0da2cc1e1025c394908079f387de", "Url": "https://api.github.com/repos/ClearControl/clearcontrol-lightsheet", "Date": "2018-01-04T21:33:53Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isStopRequested()) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6818/buggy-version/src.clearcontrol.microscope.lightsheet.calibrator.CalibrationEngine.java", "BodyUseAPI": [], "Fixed commit": "0b377dec74bd0da2cc1e1025c394908079f387de", "Url": "https://api.github.com/repos/ClearControl/clearcontrol-lightsheet", "Date": "2018-01-04T21:33:53Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parentEventMetaModel.getRepeatMetaModel()) != null) { for (int index = 0; index < (this.preRepeatEventOpCodeListTemplate.length); index++) groupOpCodes.add(java.lang.String.format(preRepeatEventOpCodeListTemplate[index], parentEventSymbol.getFullyQualifiedId(), java.lang.String.format(EventMetaModel.overrideTemplate, parentEventSymbol.version))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6680/buggy-version/src.main.java.com.myreward.parser.metamodel.GroupMetaModel.java", "BodyUseAPI": [], "Fixed commit": "6e5d24c420404fd1f20497940bde5d349a74fe88", "Url": "https://api.github.com/repos/vippulpanditgit/myrewardengine", "Date": "2018-04-28T22:58:32Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currRow.contains(\"Cancelled\")) { actualDep = \"\"; estArr = \"\"; status = \"Cancelled\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/306/buggy-version/src.ca.norrisng.clarkark.webservice.ActualParser.java", "BodyUseAPI": [], "Fixed commit": "cdf70bc525dea9019184e2f0adc6259eb1a85fe4", "Url": "https://api.github.com/repos/norrisng/bcferries-live", "Date": "2018-02-12T09:49:05Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.transport.http.netty.sender.http2.Http2ClientChannel.getInFlightMessage(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (outboundMsgHolder == null) { outboundMsgHolder = http2ClientChannel.getPromisedMessage(streamId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1741/buggy-version/components.org.wso2.transport.http.netty.src.main.java.org.wso2.transport.http.netty.sender.http2.TimeoutHandler.java", "BodyUseAPI": [], "Fixed commit": "b21b6b11fa15a9971fba81655eaf1fe798809b8a", "Url": "https://api.github.com/repos/isudana/transport-http", "Date": "2018-03-19T16:36:09Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (outboundMsgHolder != null) { outboundMsgHolder.setLastReadWriteTime(ticksInNanos()); timerTasks.put(streamId, schedule(ctx, new org.wso2.transport.http.netty.sender.http2.TimeoutHandler.IdleTimeoutTask(ctx, streamId), idleTimeNanos, java.util.concurrent.TimeUnit.NANOSECONDS)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1741/buggy-version/components.org.wso2.transport.http.netty.src.main.java.org.wso2.transport.http.netty.sender.http2.TimeoutHandler.java", "BodyUseAPI": ["org.wso2.transport.http.netty.sender.http2.OutboundMsgHolder.setLastReadWriteTime(long)"], "Fixed commit": "b21b6b11fa15a9971fba81655eaf1fe798809b8a", "Url": "https://api.github.com/repos/isudana/transport-http", "Date": "2018-03-19T16:36:09Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.transport.http.netty.sender.http2.Http2ClientChannel.getInFlightMessage(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (outboundMsgHolder == null) { outboundMsgHolder = http2ClientChannel.getPromisedMessage(streamId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1741/buggy-version/components.org.wso2.transport.http.netty.src.main.java.org.wso2.transport.http.netty.sender.http2.TimeoutHandler.java", "BodyUseAPI": [], "Fixed commit": "b21b6b11fa15a9971fba81655eaf1fe798809b8a", "Url": "https://api.github.com/repos/isudana/transport-http", "Date": "2018-03-19T16:36:09Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(java.util.Map.class.isAssignableFrom(source.getClass()))) { return source; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/5701/buggy-version/src.main.java.com.kepler.generic.reflect.analyse.impl.DefaultAnalyser.java", "BodyUseAPI": [], "Fixed commit": "0b9a97679dd6bbe96297de7d20bc3726ff46aad7", "Url": "https://api.github.com/repos/Kepler-Framework/Kepler-All", "Date": "2018-07-26T12:12:59Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bricolages.streaming.preproc.PreprocMessageRepository.findByMessageId(msg.getMessageId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (curr != null) return curr;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7912/buggy-version/src.main.java.org.bricolages.streaming.preproc.PreprocMessageRepository.java", "BodyUseAPI": [], "Fixed commit": "8a3eae69905f9eb378459dd004b9e10ec677a15e", "Url": "https://api.github.com/repos/bricolages/bricolage-streaming-preprocessor", "Date": "2018-08-30T08:52:24Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (waitTimeout < 0) { pm.waiterFreePoolLock.wait(0); }else { pm.waiterFreePoolLock.wait(waitTimeout); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/1221/buggy-version/dev.com.ibm.ws.jca.cm.src.com.ibm.ejs.j2c.FreePool.java", "BodyUseAPI": ["pm.waiterFreePoolLock.wait(long)"], "Fixed commit": "30e3bc227e6399baf5f765735fa7a7450ad1f568", "Url": "https://api.github.com/repos/WhiteCat22/open-liberty", "Date": "2018-06-26T14:33:05Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentDir) == null) || ((currentFile) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7268/buggy-version/src.main.java.org.luwrain.core.init.RegistryExtractor.java", "BodyUseAPI": [], "Fixed commit": "87d2f208a45ac3b280fddfe42bbb3bfaabcd7f0e", "Url": "https://api.github.com/repos/luwrain/luwrain", "Date": "2018-01-17T10:24:55Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (true) { sender.sendMessage(((org.bukkit.ChatColor.RED) + \"The debug command is currently disabled due to an issue. Please provide your config.yml, data.yml, server version and a plugin list when reporting an issue.\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/130/buggy-version/src.main.java.plus.crates.Commands.CrateCommand.java", "BodyUseAPI": [], "Fixed commit": "6d67f9191615083e1a6d7aa216d157bceae512a8", "Url": "https://api.github.com/repos/ConnorLinfoot/CratesPlus", "Date": "2018-09-16T21:42:38Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["value.getParent().getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (call instanceof com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.FunctionReference) { final com.intellij.psi.PsiElement function = com.kalessil.phpStorm.phpInspectionsEA.utils.OpenapiResolveUtil.resolveReference(((com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.FunctionReference) (call))); if (function instanceof com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.Function) { final com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.Parameter[] parameters = ((com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.Function) (function)).getParameters(); if (((parameters.length) > 0) && (parameters[0].isPassByRef())) { return; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/533/buggy-version/src.main.java.com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.UnnecessaryVariableOverridesInspector.java", "BodyUseAPI": [], "Fixed commit": "e5f76dbac863fbb9805e60cbc957ecb32733daa6", "Url": "https://api.github.com/repos/kalessil/phpinspectionsea", "Date": "2018-01-02T18:36:39Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ClassLoader.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (soundResourceUrl == null) soundClip = new javafx.scene.media.AudioClip((\"file:\" + (currentRoundDetails.questionSoundPath))); else soundClip = new javafx.scene.media.AudioClip(soundResourceUrl.toExternalForm());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/6582/buggy-version/gazeplay.src.main.java.net.gazeplay.games.whereisit.WhereIsIt.java", "BodyUseAPI": ["java.net.URL.toExternalForm()"], "Fixed commit": "2b5a2c533015be8e128f50afb6f8136362d10d2b", "Url": "https://api.github.com/repos/schwabdidier/GazePlay", "Date": "2018-01-05T20:09:54Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reference) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/191/buggy-version/org.eclipse.titan.designer.src.org.eclipse.titan.designer.AST.TTCN3.statements.Unknown_Instance_Statement.java", "BodyUseAPI": [], "Fixed commit": "0a7f439cf7baa0423050b40e2c4e5e41e0cc5dbd", "Url": "https://api.github.com/repos/eclipse/titan.EclipsePlug-ins", "Date": "2018-05-07T13:43:04Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (select) { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/7256/buggy-version/app.src.main.java.com.example.tuananhle.movingcompany.CustomerListActivity.java", "BodyUseAPI": [], "Fixed commit": "76e07585b9483da08724be64453f8d088b6d928f", "Url": "https://api.github.com/repos/smafun/MovingCompany", "Date": "2018-01-21T19:31:20Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (_ExternalAliasFile)) { ReadExternalAliasFile(_ExternalAliasFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2643/buggy-version/Marvin.src.main.java.kutch.biff.marvin.utility.AliasMgr.java", "BodyUseAPI": [], "Fixed commit": "831f363311a3af3b5f958a621f0585a9d748879f", "Url": "https://api.github.com/repos/intel/Board-Instrumentation-Framework", "Date": "2018-06-01T14:16:24Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(noClasses())) result = result.and(getInterfaceClassProperty().mapExpr(joinImplement, calcType, propChanges, changedWhere).getWhere());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2745/buggy-version/server.src.main.java.lsfusion.server.logics.property.ObjectValueProperty.java", "BodyUseAPI": [], "Fixed commit": "2644e4e8c365d2771c2cfe7cbe768fb3f4c603e0", "Url": "https://api.github.com/repos/lsfusion/platform", "Date": "2018-09-17T05:57:20Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(noClasses())) result = result.and(getInterfaceClassProperty().mapInferInterfaceClasses(lsfusion.server.logics.property.infer.ExClassSet.notNull(commonValue), inferType), inferType);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2745/buggy-version/server.src.main.java.lsfusion.server.logics.property.ObjectValueProperty.java", "BodyUseAPI": [], "Fixed commit": "2644e4e8c365d2771c2cfe7cbe768fb3f4c603e0", "Url": "https://api.github.com/repos/lsfusion/platform", "Date": "2018-09-17T05:57:20Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(noClasses())) depends.add(getInterfaceClassProperty().property);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V169/2745/buggy-version/server.src.main.java.lsfusion.server.logics.property.ObjectValueProperty.java", "BodyUseAPI": [], "Fixed commit": "2644e4e8c365d2771c2cfe7cbe768fb3f4c603e0", "Url": "https://api.github.com/repos/lsfusion/platform", "Date": "2018-09-17T05:57:20Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recommendations.size()) == 0) { model.put(\"recommendationsMsg\", \"Indiquez vos pr\u00e9f\u00e9rences dans votre profil pour recevoir des recommandations :)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4130/buggy-version/GirlsFlix.src.main.java.com.gfx.controller.IndexController.java", "BodyUseAPI": [], "Fixed commit": "4643fb520253ac01955d0f0e2f0021724beb0512", "Url": "https://api.github.com/repos/dlphn/girlsflix", "Date": "2018-11-08T21:51:09Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (wave >= 0) { java.util.LinkedList<java.lang.String> zombieTypes = spawns.get(wave); if (zombieTypes == null) { zombieTypes = new java.util.LinkedList<java.lang.String>(); } zombieTypes.add(zombieType); setSpawn(wave, zombieTypes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9111/buggy-version/src.mainPackage.Level.java", "BodyUseAPI": ["java.util.TreeMap<java.lang.Integer, java.util.LinkedList<java.lang.String>>.get(int)", "mainPackage.Level.setSpawn(int,java.util.LinkedList<java.lang.String>)"], "Fixed commit": "72665f8ca933e8b798cee9c55fd62c93b1195591", "Url": "https://api.github.com/repos/DeltaF1/SYSC-3110-Project", "Date": "2018-12-07T23:30:16Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(new java.io.File(\"/etc/fssl/providers/\").exists())) { encrypted = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6908/buggy-version/src.org.thatmadhacker.fssl.lib.Connection.java", "BodyUseAPI": [], "Fixed commit": "d5f405ef41134faf26039b1f709d13ef0ccff210", "Url": "https://api.github.com/repos/thatmadhacker/FinlaySSL", "Date": "2018-12-30T23:03:53Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataContainer.getIds().contains(DataObjects.NUMBER_OF_CATEGORIES)) dataContainer.getDataObject(DataObjects.NUMBER_OF_CATEGORIES).addValue((\"\" + categories));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4067/buggy-version/src.main.java.org.dice_research.opal.civet.access.OpalAccessor.java", "BodyUseAPI": ["dataContainer.getDataObject(DataObjects.NUMBER_OF_CATEGORIES).addValue(java.lang.String)", "org.dice_research.opal.civet.data.DataContainer.getDataObject(DataObjects.NUMBER_OF_CATEGORIES)"], "Fixed commit": "1ca80c0abbf7a41d0b12f7e5511c0f2497403d07", "Url": "https://api.github.com/repos/projekt-opal/civet", "Date": "2018-12-05T21:40:50Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.flink.core.memory.DataInputView.readByte()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isNull == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2341/buggy-version/flink-libraries.flink-cep.src.main.java.org.apache.flink.cep.nfa.sharedbuffer.NodeId.java", "BodyUseAPI": [], "Fixed commit": "be133078aec17047d86b3c4c0d9fda1fcec60afb", "Url": "https://api.github.com/repos/StephanEwen/incubator-flink", "Date": "2018-11-22T21:04:47Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((userInput.charAt(position)) == '/') { input.append(userInput.charAt((position - 1))); input.append(userInput.charAt(position)); java.lang.String inputCheck = input.toString(); if (seedu.saveit.ui.CommandHighlightManager.isParameter(inputCheck)) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1048/buggy-version/src.main.java.seedu.saveit.ui.CommandHighlightManager.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char)", "java.lang.String.charAt(int)", "java.lang.String.charAt(int)", "java.lang.StringBuilder.append(char)"], "Fixed commit": "e26c0be25e079014b41975a9fa0724d2e90a21ae", "Url": "https://api.github.com/repos/jasonvank/main", "Date": "2018-11-06T12:07:41Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (term instanceof com.sun.mail.imap.protocol.XMailboxTerm) return xMailbox(((com.sun.mail.imap.protocol.XMailboxTerm) (term)), charset); else throw new com.sun.mail.imap.protocol.SearchException((\"Search too complex. Cannot handle term: \" + (term.getClass().getName())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/701/buggy-version/javax.mail.src.com.sun.mail.imap.protocol.SearchSequence.java", "BodyUseAPI": ["com.sun.mail.imap.protocol.SearchTerm.getClass()", "term.getClass().getName()"], "Fixed commit": "4fb8819dd6d184961f871324075e8cb2d9de7f1b", "Url": "https://api.github.com/repos/open-xchange/appsuite-middleware", "Date": "2018-11-12T09:12:21Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((thermostat.getProgramMode()) != null) && ((thermostat.getProgramMode().getPrograms()) != null)) { foundThermostat.setProgramMode(thermostat.getProgramMode()); for (giuseppe.graziano.thermostat.service.Program program : foundThermostat.getProgramMode().getPrograms()) { program.setProgramMode(foundThermostat.getProgramMode()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/329/buggy-version/src.main.java.giuseppe.graziano.thermostat.service.ThermostatService.java", "BodyUseAPI": ["giuseppe.graziano.thermostat.service.Thermostat.setProgramMode(thermostat.getProgramMode())", "giuseppe.graziano.thermostat.service.Thermostat.getProgramMode()"], "Fixed commit": "62586c024bf3d44c566d59f2c6caeb6246f27057", "Url": "https://api.github.com/repos/peps14/graziano-thermostat-backend", "Date": "2018-11-21T12:28:38Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(MAPPINGS_TINY_BASE.exists())) { project.getLogger().lifecycle((\":extracting \" + (mappingsJar.getName()))); try (java.nio.file.FileSystem fileSystem = java.nio.file.FileSystems.newFileSystem(mappingsJar.toPath(), null)) { java.nio.file.Path fileToExtract = fileSystem.getPath(\"mappings/mappings.tiny\"); java.nio.file.Files.copy(fileToExtract, MAPPINGS_TINY_BASE.toPath()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/474/buggy-version/src.main.java.net.fabricmc.loom.providers.PomfProvider.java", "BodyUseAPI": ["java.nio.file.Files.copy(java.nio.file.Path,java.nio.file.Path)", "java.io.File.toPath()"], "Fixed commit": "e0972e53498d8d6f5df3c57c1d845f610c6b88cb", "Url": "https://api.github.com/repos/FabricMC/fabric-loom", "Date": "2018-11-21T17:33:25Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (MAPPINGS_TINY.exists()) { MAPPINGS_TINY.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/474/buggy-version/src.main.java.net.fabricmc.loom.providers.PomfProvider.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "e0972e53498d8d6f5df3c57c1d845f610c6b88cb", "Url": "https://api.github.com/repos/FabricMC/fabric-loom", "Date": "2018-11-21T17:33:25Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.O)) { android.app.NotificationChannel nc = new android.app.NotificationChannel(\"molde_channel\", title, android.app.NotificationManager.IMPORTANCE_DEFAULT); nc.setDescription(message); nc.enableLights(true); nc.setLightColor(Color.GREEN); mNotificationManager.createNotificationChannel(nc); }else { android.support.v4.app.NotificationCompat.Builder mBuilder = createNotification(title, message); mBuilder.setContentIntent(createGoFeedPendingIntent(feedId)); mNotificationManager.notify(1, mBuilder.build()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7701/buggy-version/app.src.main.java.com.limefriends.molde.common.fcm.MoldeFirebaseMessagingService.java", "BodyUseAPI": [], "Fixed commit": "bd5fb15abc1e4e1318880c9ba0de745a09456580", "Url": "https://api.github.com/repos/goifproject/molde_android", "Date": "2018-11-22T09:34:28Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLive()) { for (; ts != null; ts = ts.next) { if ((ts.head) == (this)) { int i = 0; do { ts = ts.next; i++; } while (ts != null ); return \"t\" + (i - 1); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7213/buggy-version/src.mil.Temp.java", "BodyUseAPI": [], "Fixed commit": "4660862178900d50a5dd05a33c9b650fb8ebec27", "Url": "https://api.github.com/repos/habit-lang/mil-tools", "Date": "2018-12-25T04:13:09Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.uid) != null) getAppointments(this.uid);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7955/buggy-version/app.src.main.java.ch.epfl.sweng.vanjel.DoctorAppointmentsList.java", "BodyUseAPI": [], "Fixed commit": "0441dc340d20e47667d4b74e1e28aa28af768159", "Url": "https://api.github.com/repos/ElCabrino/SDPProject", "Date": "2018-11-12T17:49:25Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkGreyAndDrive()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3396/buggy-version/HelloWorld.src.edu.kit.lego02.Threads.LineFollowing.GapState.java", "BodyUseAPI": [], "Fixed commit": "ca19b41caa6944e4e80ec4d7e65b90efca11c396", "Url": "https://api.github.com/repos/Benkler/LegoMindstorm", "Date": "2018-11-24T17:08:14Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkGreyAndDrive()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3396/buggy-version/HelloWorld.src.edu.kit.lego02.Threads.LineFollowing.GapState.java", "BodyUseAPI": [], "Fixed commit": "ca19b41caa6944e4e80ec4d7e65b90efca11c396", "Url": "https://api.github.com/repos/Benkler/LegoMindstorm", "Date": "2018-11-24T17:08:14Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (state == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1038/buggy-version/src.main.java.net.fabricmc.fabric.impl.client.model.RenderCacheHelperImpl.java", "BodyUseAPI": [], "Fixed commit": "018f9e954f4195a581cb2e7e1a87e46f7e0720a0", "Url": "https://api.github.com/repos/asiekierka/fabric", "Date": "2018-12-31T16:46:55Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bytesRead < (buff.length)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2488/buggy-version/AllatOnce.app.src.main.java.com.vub.sebel.allatonce.ClientThread.java", "BodyUseAPI": [], "Fixed commit": "09a24836a1fd754c923c4e02cff400e78eaf43e3", "Url": "https://api.github.com/repos/Sebbe095/VUB-Multimedia-project", "Date": "2018-11-24T15:47:14Z"},
{"Line": "=>503", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (html != null) { html = html.replace(\"\\\"\", \"\\\\\\\"\"); html = html.replaceAll(\">\", \"&gt;\"); html = html.replace(\"<\", \"&lt;\"); html = html.replaceAll(\"\\\\r?\\\\n\", \"<br />\"); return html; }else { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7530/buggy-version/src.application.controllers.EmailController.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "6223aa495a8242545183014f2f507c0bbafb6caf", "Url": "https://api.github.com/repos/travispessetto/OrigamiGUI", "Date": "2018-12-05T00:13:22Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (seenPendingPackets.contains(pendingPacket)) { _dismissPacket(pendingPacket); }else seenPendingPackets.add(pendingPacket);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1908/buggy-version/app.src.main.java.com.gilmaimon.israelposttracker.PacketsBalance.DynamicPostPacketsBalance.java", "BodyUseAPI": ["com.gilmaimon.israelposttracker.PacketsBalance.DynamicPostPacketsBalance._dismissPacket(com.gilmaimon.israelposttracker.Packets.PendingPacket)", "java.util.Set<com.gilmaimon.israelposttracker.Packets.PendingPacket>.add(com.gilmaimon.israelposttracker.Packets.PendingPacket)"], "Fixed commit": "adbced720b969bfa66a1bda588c5f9cfb1e73e8b", "Url": "https://api.github.com/repos/gilmaimon/IsraelPost-Tracker", "Date": "2018-11-27T08:05:53Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seedu.address.logic.parser.ArgumentTokenizer.tokenize(java.lang.String,seedu.address.logic.parser.CliSyntax.PREFIX_TWENTY_FIVE,seedu.address.logic.parser.CliSyntax.PREFIX_SEVENTY_FIVE,seedu.address.logic.parser.CliSyntax.PREFIX_HIGHEST,seedu.address.logic.parser.CliSyntax.PREFIX_MEAN,seedu.address.logic.parser.CliSyntax.PREFIX_MEDIAN,seedu.address.logic.parser.CliSyntax.PREFIX_TEST_NAME,seedu.address.logic.parser.CliSyntax.PREFIX_LOWEST)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((((!(argMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_TWENTY_FIVE).isPresent())) && (!(argMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_SEVENTY_FIVE).isPresent()))) && (!(argMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_MEAN).isPresent()))) && (!(argMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_MEDIAN).isPresent()))) && (!(argMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_HIGHEST).isPresent()))) && (!(argMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_LOWEST).isPresent()))) { throw new seedu.address.logic.parser.exceptions.ParseException(java.lang.String.format(seedu.address.logic.parser.MESSAGE_INVALID_COMMAND_FORMAT)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9776/buggy-version/src.main.java.seedu.address.logic.parser.GradeSummaryCommandParser.java", "BodyUseAPI": [], "Fixed commit": "b937286e0f50c1676378efac4ab58dae769043db", "Url": "https://api.github.com/repos/CS2113-AY1819S1-T13-4/main", "Date": "2018-11-06T06:04:09Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((hashAndSalt.length) > 1) { java.lang.String hashedDB = hashAndSalt[0]; java.lang.String salt = hashAndSalt[1]; isValid = validatePassword(password, hashedDB, salt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5675/buggy-version/GLO18_WebService.src.WebService.Persistance.DBManager.java", "BodyUseAPI": [], "Fixed commit": "4ab788b718a1d0e918831fd64b6ca89e7a469010", "Url": "https://api.github.com/repos/GLO18-Group10/GLO18_Web-service", "Date": "2018-11-30T09:33:00Z"},
{"Line": "=>514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSqlMapClientTemplate().queryForObject(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (null == (allCountB.getALL_AMOUNT())) allCountB.setALL_AMOUNT(new java.math.BigDecimal(\"0.00\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8315/buggy-version/src.com.cn.tbps.dao.impl.AuditDaoImpl.java", "BodyUseAPI": ["com.cn.tbps.dto.AuditStatCostDetailDto.setALL_AMOUNT(java.math.BigDecimal)"], "Fixed commit": "5c91b1062aad4ad0043781556aa81edbf1a81806", "Url": "https://api.github.com/repos/koubai/tbps_0812", "Date": "2018-12-16T14:25:43Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (value != null) com.highmobility.utils.ByteUtils.setBytes(bytes, value, 3);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9587/buggy-version/src.main.java.com.highmobility.autoapi.property.Property.java", "BodyUseAPI": [], "Fixed commit": "9b99bce5b6fea2a585b4db90319a17e9fc47a963", "Url": "https://api.github.com/repos/highmobility/hm-java-auto-api", "Date": "2018-11-07T02:40:02Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (textInputEditTextFancyName.equals(\"\")) { return; }else { if (data.child(\"fancyName\").getValue().toString().equals(textInputEditTextFancyName.getText().toString())) { android.widget.Toast.makeText(this, \"Fancy Name already exists\", Toast.LENGTH_SHORT).show(); }else { refToSpecificUser.child(\"fancyName\").setValue(textInputEditTextFancyName.getText().toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9478/buggy-version/app.src.main.java.com.lequiz.practice.EditProfile.java", "BodyUseAPI": ["android.support.design.widget.TextInputEditText.getText()", "data.child(\"fancyName\").getValue().toString().equals(textInputEditTextFancyName.getText().toString())", "textInputEditTextFancyName.getText().toString()", "refToSpecificUser.child(\"fancyName\").setValue(textInputEditTextFancyName.getText().toString())", "android.support.design.widget.TextInputEditText.getText()", "textInputEditTextFancyName.getText().toString()"], "Fixed commit": "4425f9a3e19aa595988fa831ff6885975c23621b", "Url": "https://api.github.com/repos/ramshekrana/Practice", "Date": "2018-11-27T01:19:06Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mViewPager) != null) { mViewPager.setCurrentItem(0, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4878/buggy-version/multilayout.src.main.java.com.iPATHow.multilayout.MultiLayout.java", "BodyUseAPI": [], "Fixed commit": "83d8fc86367ea42bfdd09f6bb5914e907da8eeb3", "Url": "https://api.github.com/repos/iPATHow/multilayout", "Date": "2018-11-10T10:19:11Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(table.isExpanded())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3834/buggy-version/app.src.main.java.de.rub.pherbers.behindthetables.adapter.RandomTableListAdapter.java", "BodyUseAPI": [], "Fixed commit": "db364fff3f15c16baf6938aab4a08f4312e3d5d2", "Url": "https://api.github.com/repos/pherbers/BehindTheTablesApp", "Date": "2018-12-26T11:01:12Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(filteredUuidList.isEmpty())) { if (((sqs.returnType) == (gov.nist.toolkit.valregmsg.registry.storedquery.generic.QueryReturnType.LEAFCLASS)) || ((sqs.returnType) == (gov.nist.toolkit.valregmsg.registry.storedquery.generic.QueryReturnType.LEAFCLASSWITHDOCUMENT))) { m = mc.loadRo(filteredUuidList); }else { m.mkObjectRefs(filteredUuidList); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7863/buggy-version/simulators.src.main.java.gov.nist.toolkit.fhir.simulators.sim.reg.sq.GetDocumentsSim.java", "BodyUseAPI": ["gov.nist.toolkit.registrymetadata.Metadata.mkObjectRefs(java.util.List<java.lang.String>)", "gov.nist.toolkit.fhir.simulators.sim.reg.store.MetadataCollection.loadRo(java.util.List<java.lang.String>)"], "Fixed commit": "4db863dbf78b230e09fa3a3b0bf67474609aee1c", "Url": "https://api.github.com/repos/usnistgov/iheos-toolkit2", "Date": "2018-12-20T23:42:04Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.http.client.methods.CloseableHttpResponse.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (entity != null) { responseString = org.apache.http.util.EntityUtils.toString(entity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4530/buggy-version/src.main.java.jenkins.plugins.slack.StandardSlackService.java", "BodyUseAPI": ["org.apache.http.util.EntityUtils.toString(org.apache.http.HttpEntity)"], "Fixed commit": "477f353804bcc953f0c2c7e68d0011e8243eeb8d", "Url": "https://api.github.com/repos/steven-foster/slack-plugin", "Date": "2018-12-04T11:45:19Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getCause()) instanceof java.nio.channels.ClosedChannelException) { org.apache.james.protocols.netty.BasicChannelUpstreamHandler.LOGGER.info(\"Unable to process request\", e.getCause()); }else { org.apache.james.protocols.netty.BasicChannelUpstreamHandler.LOGGER.error(\"Unable to process request\", e.getCause()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/588/buggy-version/protocols.netty.src.main.java.org.apache.james.protocols.netty.BasicChannelUpstreamHandler.java", "BodyUseAPI": ["org.jboss.netty.channel.ExceptionEvent.getCause()", "org.slf4j.Logger.error(java.lang.String,e.getCause())", "org.jboss.netty.channel.ExceptionEvent.getCause()", "org.slf4j.Logger.info(java.lang.String,e.getCause())"], "Fixed commit": "c9a2ebfb5f55439e963a56ded6703a4fceb4e6f5", "Url": "https://api.github.com/repos/aduprat/james-project", "Date": "2018-12-11T13:32:32Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i == (wumpus.getX())) && (j == (wumpus.getY()))) { n.setWumpus(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7136/buggy-version/assignment3.src.wumpusWorld.Maze.java", "BodyUseAPI": [], "Fixed commit": "736d45955aef84d5cec0ea05349b2d845250e6c4", "Url": "https://api.github.com/repos/Matt3697/CSCI-446", "Date": "2018-12-03T01:46:27Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i == (gold.getX())) && (j == (gold.getY()))) { n.setGold(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7136/buggy-version/assignment3.src.wumpusWorld.Maze.java", "BodyUseAPI": [], "Fixed commit": "736d45955aef84d5cec0ea05349b2d845250e6c4", "Url": "https://api.github.com/repos/Matt3697/CSCI-446", "Date": "2018-12-03T01:46:27Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (declarations.right.right.left.value.equals(\"identifier\")) pointsTo = declarations.right.right.left.left.value; else pointsTo = declarations.right.right.left.value;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2662/buggy-version/src.homework1.java", "BodyUseAPI": [], "Fixed commit": "721476d0fdfd482a9b3c92cd4a54ab131e58f1d3", "Url": "https://api.github.com/repos/AmitPeled/compilers_course_2018_a", "Date": "2018-11-17T16:32:32Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) != (Build.VERSION_CODES.O)) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4677/buggy-version/app.src.main.java.com.example.hy.recruitnew.LaunchActivity.java", "BodyUseAPI": [], "Fixed commit": "56b8ebf27071f60a742b631f33443afa25fd19fe", "Url": "https://api.github.com/repos/rain9155/RecruitNew", "Date": "2018-11-18T07:11:15Z"},
{"Line": "=>770", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((sender) != null) && (sender.isRunning())) { token.internalTok.waitUntilSent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8776/buggy-version/org.eclipse.paho.client.mqttv3.src.main.java-templates.org.eclipse.paho.client.mqttv3.internal.ClientComms.java", "BodyUseAPI": [], "Fixed commit": "7e13cdff4a769b92e9270621abc6fe9270b3b4ab", "Url": "https://api.github.com/repos/eclipse/paho.mqtt.java", "Date": "2018-12-21T09:53:29Z"},
{"Line": "=>778", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((sender) == null) || (!(sender.isRunning()))) { token.internalTok.notifyComplete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8776/buggy-version/org.eclipse.paho.client.mqttv3.src.main.java-templates.org.eclipse.paho.client.mqttv3.internal.ClientComms.java", "BodyUseAPI": [], "Fixed commit": "7e13cdff4a769b92e9270621abc6fe9270b3b4ab", "Url": "https://api.github.com/repos/eclipse/paho.mqtt.java", "Date": "2018-12-21T09:53:29Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((packages) == null) { valuePackage = 0.0; }else { valuePackage = packages.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/114/buggy-version/Warehouse.java", "BodyUseAPI": [], "Fixed commit": "c64b5ad01cdb981f43c781f41afda2fe6a447ae3", "Url": "https://api.github.com/repos/MonikaSzucs/Assignment3", "Date": "2018-12-03T18:30:37Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.ItemStack.getItemMeta()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(meta.hasLore())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6707/buggy-version/NeoProfessions.src.me.Neoblade298.NeoProfessions.Utilities.BlacksmithUtils.java", "BodyUseAPI": [], "Fixed commit": "d177712264ae66ead043a5f67ed4a699fdb257e2", "Url": "https://api.github.com/repos/Alexz1008/MLMCPlugins", "Date": "2018-12-29T21:17:34Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((boxDatabase.get(orderID)) != null) { for (int i = 0; i < (boxDatabase.get(orderID).length()); i++) { boxes.put(boxDatabase.get(orderID).getJSONObject(i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2981/buggy-version/src.main.java.org.commitment_issues.delivery_agents.LoadingBayAgent.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, org.json.JSONArray>.get(java.lang.String)", "boxDatabase.get(orderID).length()", "org.json.JSONArray.put(boxDatabase.get(orderID).getJSONObject(i))", "java.util.HashMap<java.lang.String, org.json.JSONArray>.get(java.lang.String)", "boxDatabase.get(orderID).getJSONObject(int)"], "Fixed commit": "73681ac96305c2eebc926ba9366ba08855d7ebb2", "Url": "https://api.github.com/repos/HBRS-MAAS/ws18-project-commitment_issues", "Date": "2018-12-10T19:21:52Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mHightlightFixed)) { mEditText.setHint(mHightlightText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6339/buggy-version/app.src.main.java.com.mgcoco.hightlightedittext.HightLightEditText.java", "BodyUseAPI": [], "Fixed commit": "03428fc60df179e46ac72bf05f05eb144b8a13c0", "Url": "https://api.github.com/repos/mgcoco/HightLightEditText", "Date": "2018-11-28T05:54:50Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.unimi.dsi.fastutil.objects.Object2IntMap<org.apache.uima.cas.text.AnnotationFS>.get(idxTokenOffset.get(annotation.getBegin()))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (begin < highestEndTokenPositionObserved) { de.tudarmstadt.ukp.inception.recommendation.imls.opennlp.ner.OpenNlpNerRecommender.LOG.debug(\"Skipping overlapping annotation: [{}-{}, {}]\", begin, (end + 1), label); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2750/buggy-version/inception-imls-opennlp.src.main.java.de.tudarmstadt.ukp.inception.recommendation.imls.opennlp.ner.OpenNlpNerRecommender.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,int,int,java.lang.String)"], "Fixed commit": "52845bd89de6df17ca35a75db25d4cfdd7d9c107", "Url": "https://api.github.com/repos/inception-project/inception", "Date": "2018-12-11T13:40:17Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.talend.components.api.properties.ComponentProperties.getProperties(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ps == null) { org.talend.daikon.properties.Properties conn = pros.getProperties(\"connection\"); if (conn != null) { ps = conn.getProperties(\"referencedComponent\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4817/buggy-version/main.plugins.org.talend.designer.core.generic.src.main.java.org.talend.designer.core.generic.service.GenericService.java", "BodyUseAPI": [], "Fixed commit": "a1f3efac71ea4f7b34539f17d0beea90ab621e42", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2018-11-30T03:20:41Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.ownHost.equals(queryRequest.getRequesterHost())) && ((this.ownPort) == (queryRequest.getGetRequesterPort()))) { lk.uom.cse14.dsd.query.QueryTask qt = this.queryTasks.get(queryRequest.getRequestID()); if (qt != null) { qt.setQueryResult(queryResponse.getQueryResultSet()); } }else { lk.uom.cse14.dsd.comm.request.Request oldRequest = oldRequestMap.get(response.getUuid()); if (oldRequest != null) { lk.uom.cse14.dsd.comm.response.QueryResponse response1 = new lk.uom.cse14.dsd.comm.response.QueryResponse(ownHost, ownPort, oldRequest.getSource(), oldRequest.getSourcePort()); response1.setUuid(oldRequest.getUuid()); response1.setHopCount(oldRequest.getHopCount()); scheduler.schedule(response1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5334/buggy-version/src.main.java.lk.uom.cse14.dsd.msghandler.QueryHandler.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, lk.uom.cse14.dsd.query.QueryTask>.get(queryRequest.getRequestID())", "lk.uom.cse14.dsd.comm.request.QueryRequest.getRequestID()"], "Fixed commit": "14abb71452ea809cc397cd428a4f399b3cceefa7", "Url": "https://api.github.com/repos/umstek/dsd", "Date": "2018-11-30T10:42:49Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((DAO.getProduct(name)) != null) { order.addToBasket(DAO.getProduct(name), amount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/731/buggy-version/src.main.java.Customer.java", "BodyUseAPI": ["Order.addToBasket(DAO.getProduct(name),int)", "DAO.getProduct(java.lang.String)"], "Fixed commit": "cd4c4cd224f3451dc26d62eb3ec79874a8b7eead", "Url": "https://api.github.com/repos/kamilBrodziak/onlineshop", "Date": "2018-11-13T08:43:37Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rs.next()) { string_results = rs.getString(\"comment\"); return string_results; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/245/buggy-version/MyWorld.src.application.DataConnection.java", "BodyUseAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Fixed commit": "a919eacc6a999bc14b533f265680131d72afdbd9", "Url": "https://api.github.com/repos/francescacallejas/MyPlace_ASE", "Date": "2018-12-15T04:31:40Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(handler instanceof org.springframework.web.method.HandlerMethod)) { return super.preHandle(request, response, handler); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/921/buggy-version/emcoo-restful.src.main.java.com.emcoo.ef.restful.interceptor.TenantResolveInterceptor.java", "BodyUseAPI": ["org.springframework.web.servlet.handler.HandlerInterceptorAdapter.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)"], "Fixed commit": "6c80e77450d198bd1dcd8714b9fd4e61b7c7eb9c", "Url": "https://api.github.com/repos/emcoo/emcoo-core", "Date": "2018-12-12T03:02:52Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (userDTO == null) { userDTO = requestUserInfo(token); if (userDTO != null) { com.me.user.client.LoginFilter.cache.put(token, userDTO); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5223/buggy-version/user-edge-service-client.src.main.java.com.me.user.client.LoginFilter.java", "BodyUseAPI": [], "Fixed commit": "4a7bbd733703d14390710263400cd742ff5fe033", "Url": "https://api.github.com/repos/SavorTheFlavor/microservice", "Date": "2018-12-21T13:08:31Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jsonNode.isBigDecimal()) { if ((schema == null) || ((schema.getType()) == (Schema.Type.DOUBLE))) { return jsonNode.asDouble(); }else if ((schema.getType()) == (Schema.Type.FLOAT)) { return ((float) (jsonNode.asDouble())); } }else if (jsonNode.isDouble()) { if ((schema == null) || ((schema.getType()) == (Schema.Type.DOUBLE))) { return jsonNode.asDouble(); }else if ((schema.getType()) == (Schema.Type.FLOAT)) { return ((float) (jsonNode.asDouble())); } }else if (jsonNode.isTextual()) { if (((schema == null) || ((schema.getType()) == (Schema.Type.STRING))) || ((schema.getType()) == (Schema.Type.ENUM))) { return jsonNode.asText(); }else if ((schema.getType()) == (Schema.Type.BYTES)) { return jsonNode.getTextValue().getBytes(org.apache.avro.util.internal.JacksonUtils.BYTES_CHARSET); }else if ((schema.getType()) == (Schema.Type.FIXED)) { return new org.apache.avro.generic.GenericData.Fixed(schema, jsonNode.getTextValue().getBytes(org.apache.avro.util.internal.JacksonUtils.BYTES_CHARSET)); } }else if (jsonNode.isArray()) { java.util.List l = new java.util.ArrayList(jsonNode.size()); for (org.codehaus.jackson.JsonNode node : jsonNode) { l.add(org.apache.avro.util.internal.JacksonUtils.toObject(node, (schema == null ? null : schema.getElementType()))); } return l; }else if (jsonNode.isObject()) { java.util.Map m = com.google.common.collect.Maps.newLinkedHashMapWithExpectedSize(jsonNode.size()); for (java.util.Iterator<java.lang.String> it = jsonNode.getFieldNames(); it.hasNext();) { java.lang.String key = it.next(); org.apache.avro.Schema s = null; if (schema == null) { s = null; }else if ((schema.getType()) == (Schema.Type.MAP)) { s = schema.getValueType(); }else if ((schema.getType()) == (Schema.Type.RECORD)) { s = schema.getField(key).schema(); } java.lang.Object value = org.apache.avro.util.internal.JacksonUtils.toObject(jsonNode.get(key), s); m.put(key, value); } return m; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2860/buggy-version/lang.java.avro.src.main.java.org.apache.avro.util.internal.JacksonUtils.java", "BodyUseAPI": ["com.google.common.collect.Maps.newLinkedHashMapWithExpectedSize(jsonNode.size())", "org.codehaus.jackson.JsonNode.isArray()", "org.codehaus.jackson.JsonNode.asDouble()", "org.codehaus.jackson.JsonNode.getTextValue()", "org.codehaus.jackson.JsonNode.asDouble()", "org.codehaus.jackson.JsonNode.asText()", "org.apache.avro.util.internal.JacksonUtils.toObject(jsonNode.get(key),org.apache.avro.Schema)", "org.codehaus.jackson.JsonNode.asDouble()", "org.codehaus.jackson.JsonNode.asDouble()", "org.codehaus.jackson.JsonNode.size()", "org.codehaus.jackson.JsonNode.isTextual()", "org.codehaus.jackson.JsonNode.isDouble()", "org.codehaus.jackson.JsonNode.getFieldNames()", "jsonNode.getTextValue().getBytes(java.nio.charset.Charset)", "org.codehaus.jackson.JsonNode.isObject()", "org.codehaus.jackson.JsonNode.get(java.lang.String)", "jsonNode.getTextValue().getBytes(java.nio.charset.Charset)", "org.codehaus.jackson.JsonNode.size()", "org.codehaus.jackson.JsonNode.getTextValue()"], "Fixed commit": "cbdc9cdff38ea44fe9c8fd02d1e28d5421c39ed2", "Url": "https://api.github.com/repos/zolyfarkas/avro", "Date": "2018-11-11T14:31:09Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jsonNode.isBoolean()) { return jsonNode.asBoolean(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2860/buggy-version/lang.java.avro.src.main.java.org.apache.avro.util.internal.JacksonUtils.java", "BodyUseAPI": ["org.codehaus.jackson.JsonNode.asBoolean()"], "Fixed commit": "cbdc9cdff38ea44fe9c8fd02d1e28d5421c39ed2", "Url": "https://api.github.com/repos/zolyfarkas/avro", "Date": "2018-11-11T14:31:09Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jsonNode.isNull()) { return org.apache.avro.JsonProperties.NULL_VALUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2860/buggy-version/lang.java.avro.src.main.java.org.apache.avro.util.internal.JacksonUtils.java", "BodyUseAPI": [], "Fixed commit": "cbdc9cdff38ea44fe9c8fd02d1e28d5421c39ed2", "Url": "https://api.github.com/repos/zolyfarkas/avro", "Date": "2018-11-11T14:31:09Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seedu.address.logic.parser.ArgumentTokenizer.tokenize(java.lang.String,seedu.address.logic.parser.CliSyntax.PREFIX_NAME,seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION,seedu.address.logic.parser.CliSyntax.PREFIX_DATE,seedu.address.logic.parser.CliSyntax.PREFIX_START_DATE,seedu.address.logic.parser.CliSyntax.PREFIX_END_DATE,seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (argMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION).isPresent()) { editEventDescriptor.setDescription(seedu.address.logic.parser.ParserUtil.parseDescription(argMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION).get())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5407/buggy-version/src.main.java.seedu.address.logic.parser.EditEventCommandParser.java", "BodyUseAPI": ["argMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION).get()", "seedu.address.logic.commands.EditEventCommand.EditEventDescriptor.setDescription(seedu.address.logic.parser.ParserUtil.parseDescription(argMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION).get()))", "seedu.address.logic.parser.ArgumentMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION)", "seedu.address.logic.parser.ParserUtil.parseDescription(argMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION).get())"], "Fixed commit": "66328ef53515ac856afb30bdf02636122d46d888", "Url": "https://api.github.com/repos/CS2113-AY1819S1-T16-2/main", "Date": "2018-11-01T11:03:26Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mWifiRttManager) != null) { android.net.wifi.rtt.RangingRequest rangingRequest = new android.net.wifi.rtt.RangingRequest.Builder().addAccessPoints(mcScanResults).build(); mWifiRttManager.startRanging(rangingRequest, getApplication().getMainExecutor(), mRttRangingResultCallback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3818/buggy-version/Application.src.main.java.com.example.android.wifirttscan.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8c5e4b9db72a9a201876f507b1c22fbd5ce31be4", "Url": "https://api.github.com/repos/hywook4/android-WifiRttScan", "Date": "2018-12-30T15:18:58Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (goodSave) { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1420/buggy-version/app.src.main.java.com.example.markqueltaylor.macinventoryapp.EditorActivity.java", "BodyUseAPI": [], "Fixed commit": "4d0aa5ba301d26c155d2a9fc6cfc2342ab912d18", "Url": "https://api.github.com/repos/TheLegendMac/MacInventoryApp", "Date": "2018-11-11T05:42:55Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (itemCheckBox.isChecked()) { mDeleteItems.add(current); mClickListener.onItemClick(mDeleteItems); }else { mDeleteItems.remove(current); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6519/buggy-version/app.src.main.java.com.poc.android.myhospitals.todolist.TaskItemAdapter.java", "BodyUseAPI": [], "Fixed commit": "c4a802991fcfce9e8814bbc801e751d5d11d4ecf", "Url": "https://api.github.com/repos/kitomiyu/practice-hospitalList", "Date": "2018-12-25T16:03:55Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((p.getFinanciador().length()) == 0) throw new framework.model.BadAttributeException(\"Contato de financiador incompleto\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5437/buggy-version/Framework.src.main.java.com.lab.data.service.ProjetoGeologiaService.java", "BodyUseAPI": [], "Fixed commit": "808943dd9efba5cbb0235432462744bf136e4f48", "Url": "https://api.github.com/repos/victoragnez/DataLAE", "Date": "2018-11-29T03:48:36Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isCancelled()) return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6396/buggy-version/app.src.main.java.com.example.semin.cooklock.CookingTask.java", "BodyUseAPI": [], "Fixed commit": "2f45b499c4787a75ce00c23413b72c14af83960b", "Url": "https://api.github.com/repos/hero526/cooklock", "Date": "2018-11-23T12:53:52Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player1Turn) { app.gui.Print.actionMessage((((player1Card.getName()) + \" HAS ATTACKED \") + (player2Card.getName()))); }else { app.gui.Print.actionMessage((((player2Card.getName()) + \" HAS ATTACKED \") + (player1Card.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1096/buggy-version/src.main.java.app.controllers.Game.java", "BodyUseAPI": [], "Fixed commit": "3b671640175a42ce9c4f862282d36df2937e0fbf", "Url": "https://api.github.com/repos/Schonis86/cardGame", "Date": "2018-11-05T12:03:33Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((productModel.getBase64ImageString()) != null) { imageByte = org.apache.tomcat.util.codec.binary.Base64.decodeBase64(productModel.getBase64ImageString()); productModel.setImage(imageByte); }else { productModel.setImage(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8392/buggy-version/src.main.java.response.soft.services.ProductService.java", "BodyUseAPI": ["response.soft.model.ProductModel.setImage(<nulltype>)", "org.apache.tomcat.util.codec.binary.Base64.decodeBase64(productModel.getBase64ImageString())", "response.soft.model.ProductModel.setImage(byte[])", "response.soft.model.ProductModel.getBase64ImageString()"], "Fixed commit": "02bea5a5c662d0378894753458e7ac4af361e851", "Url": "https://api.github.com/repos/rocky-bgta/response-inventory-system", "Date": "2018-12-10T17:42:25Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((productModel.getBase64ImageString()) != null) && ((productModel.getBase64ImageString().length()) > 0)) { imageByte = org.apache.tomcat.util.codec.binary.Base64.decodeBase64(productModel.getBase64ImageString()); productModel.setImage(imageByte); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8392/buggy-version/src.main.java.response.soft.services.ProductService.java", "BodyUseAPI": ["response.soft.model.ProductModel.getBase64ImageString()", "response.soft.model.ProductModel.setImage(byte[])", "org.apache.tomcat.util.codec.binary.Base64.decodeBase64(productModel.getBase64ImageString())"], "Fixed commit": "02bea5a5c662d0378894753458e7ac4af361e851", "Url": "https://api.github.com/repos/rocky-bgta/response-inventory-system", "Date": "2018-12-10T17:42:25Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((g.V()) < 1) || ((g.E()) < 2)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7600/buggy-version/code.EulerianCycle.java", "BodyUseAPI": [], "Fixed commit": "4dc255a695b6a380dc72b99409cbbaa5b542a071", "Url": "https://api.github.com/repos/YangXiaoHei/Algorithms", "Date": "2018-11-02T02:44:07Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.zzt93.syncer.config.consumer.input.Repo.getTableRow(data.getRepo(),data.getEntity())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (tableRow == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3704/buggy-version/syncer-core.src.main.java.com.github.zzt93.syncer.producer.dispatch.mongo.JsonKeyFilter.java", "BodyUseAPI": [], "Fixed commit": "f3e9b8d64dffed696149e2f35d7a0699c438438e", "Url": "https://api.github.com/repos/zzt93/syncer", "Date": "2018-12-10T09:12:40Z"},
{"Line": "=>641", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((row) != 1) && ((column) != 1)) { gameInProgress = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5912/buggy-version/src.SpinController.java", "BodyUseAPI": [], "Fixed commit": "a22c0e4b7eca43b59e5da5d67a329cd04858764e", "Url": "https://api.github.com/repos/dolszewski/SpinPossible", "Date": "2018-12-05T07:55:43Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getCause()) != null) { me.RockinChaos.itemjoin.handlers.ServerHandler.sendDebugMessage(\"[SQLITE] Failed to close database connection.\"); if (me.RockinChaos.itemjoin.handlers.ServerHandler.hasDebuggingMode()) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2052/buggy-version/src.me.RockinChaos.itemjoin.utils.sqlite.Database.java", "BodyUseAPI": ["java.lang.Exception.printStackTrace()"], "Fixed commit": "6cebd0c54703b7b69c28983e6153c6454bd5e93f", "Url": "https://api.github.com/repos/RockinChaos/ItemJoin", "Date": "2018-12-15T09:07:33Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["janbingemann.SudokuGrid.setField(field.getX(),field.getY(),int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!success) { java.util.logging.Logger.getGlobal().severe(\"Internal error\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8301/buggy-version/src.main.java.janbingemann.SudokuSolver.java", "BodyUseAPI": [], "Fixed commit": "c3cd8eb10e48fd12db0db74c86cdb8bc470ad183", "Url": "https://api.github.com/repos/JanNB97/Sudoku", "Date": "2018-12-03T20:48:26Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p != null) return new lombok.javac.apt.Javac9BaseFileObjectWrapper(fileManager, p, fileObject);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8271/buggy-version/src.core.lombok.javac.apt.LombokFileObjects.java", "BodyUseAPI": [], "Fixed commit": "2c0ec9315577cbc8d406aca2b3f3b6ad233f4f35", "Url": "https://api.github.com/repos/rzwitserloot/lombok", "Date": "2018-11-05T20:40:30Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.springframework.util.StringUtils.isEmpty(java.lang.System.getProperties().getProperty(SentinelDataSourceConstants.NACOS_DATASOURCE_ENDPOINT)))) { if (dataSourceName.contains(SentinelConstants.FLOW_DATASOURCE_NAME)) { com.alibaba.csp.sentinel.slots.block.flow.FlowRuleManager.register2Property(newDataSource.getProperty()); }else if (dataSourceName.contains(SentinelConstants.DEGRADE_DATASOURCE_NAME)) { com.alibaba.csp.sentinel.slots.block.degrade.DegradeRuleManager.register2Property(newDataSource.getProperty()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7544/buggy-version/spring-cloud-alibaba-sentinel.src.main.java.org.springframework.cloud.alibaba.sentinel.custom.SentinelDataSourceHandler.java", "BodyUseAPI": [], "Fixed commit": "7e2b312fdd6f5d2858832c7d3aaa0a0ef1c3f15c", "Url": "https://api.github.com/repos/fangjian0423/spring-cloud-alibaba", "Date": "2018-12-19T15:46:12Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((this.openDeck[(o - 1)]) == null)) { this.openDeck[o] = this.openDeck[(o - 1)]; java.lang.System.out.println(o); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3935/buggy-version/src.leberkaes.commonClasses.GameBoard.java", "BodyUseAPI": ["java.io.PrintStream.println(int)"], "Fixed commit": "800fa7b6c62db5ef8183cd91e3f2f61175f17004", "Url": "https://api.github.com/repos/dominikholliger/majesty", "Date": "2018-12-15T14:09:14Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["game.scenes.game.entities.CarrotBullet.getBlockSet()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (b.get(currentMap.mapAccess(currentMap.atX(((transform.x) + (box.x))), currentMap.atY((((transform.y) + (box.y)) + (box.height))))).solid) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4914/buggy-version/src.game.scenes.game.entities.CarrotBullet.java", "BodyUseAPI": [], "Fixed commit": "4951343ca94c09ba5642ae2bb7e235a5b553c921", "Url": "https://api.github.com/repos/gatcuddy/LD43---Melon-Squad", "Date": "2018-12-03T02:59:43Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["game.scenes.game.entities.CarrotBullet.getBlockSet()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (b.get(currentMap.mapAccess(currentMap.atX((((transform.x) + (box.x)) + (box.width))), currentMap.atY(((transform.y) + (box.y))))).solid) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4914/buggy-version/src.game.scenes.game.entities.CarrotBullet.java", "BodyUseAPI": [], "Fixed commit": "4951343ca94c09ba5642ae2bb7e235a5b553c921", "Url": "https://api.github.com/repos/gatcuddy/LD43---Melon-Squad", "Date": "2018-12-03T02:59:43Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["game.scenes.game.entities.CarrotBullet.getBlockSet()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (b.get(currentMap.mapAccess(currentMap.atX((((transform.x) + (box.x)) + (box.width))), currentMap.atY((((transform.y) + (box.y)) + (box.height))))).solid) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4914/buggy-version/src.game.scenes.game.entities.CarrotBullet.java", "BodyUseAPI": [], "Fixed commit": "4951343ca94c09ba5642ae2bb7e235a5b553c921", "Url": "https://api.github.com/repos/gatcuddy/LD43---Melon-Squad", "Date": "2018-12-03T02:59:43Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fenlan.spring.shop.DAO.RequestDAO.getOne(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (null != (shopService.findByUserId(request.getUser().getId()))) { throw new java.lang.Exception(\"this person has a shop\"); }else return requestDAO.save(request);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5120/buggy-version/src.main.java.com.fenlan.spring.shop.service.RequestService.java", "BodyUseAPI": ["com.fenlan.spring.shop.DAO.RequestDAO.save(com.fenlan.spring.shop.service.Request)"], "Fixed commit": "ab0ca9c20c0d4dfdcdcf425fa567b1749b30807e", "Url": "https://api.github.com/repos/PMC6/online-store-back-end", "Date": "2018-12-11T06:16:55Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Map.findRoom(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (room != null) { allRoomIds.add(room.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3319/buggy-version/src.RoomConnectivityVerifier.java", "BodyUseAPI": ["Room.getId()", "java.util.HashSet<java.lang.Integer>.add(room.getId())"], "Fixed commit": "01f041029a5accb5849cb0d0e92340934d098676", "Url": "https://api.github.com/repos/cubangeorge/CS321-2018F-004", "Date": "2018-11-13T15:58:01Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.jovenpableo.friendtag.ProfileActivity.getSupportActionBar()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (actionBar != null) actionBar.hide();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3863/buggy-version/app.src.main.java.com.github.jovenpableo.friendtag.ProfileActivity.java", "BodyUseAPI": ["android.support.v7.app.ActionBar.hide()"], "Fixed commit": "d7ebc810450605e5dffae2ce3d165311cc427ecf", "Url": "https://api.github.com/repos/jpableo688/Tag", "Date": "2018-12-06T17:45:49Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Thread.getStackTrace()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (stackElement == (stackElements[0])) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/470/buggy-version/src.main.java.io.github.vhoyon.vramework.Framework.java", "BodyUseAPI": [], "Fixed commit": "718a1b4ec3f86bca8d2cf4219a6e77ac9efd96e6", "Url": "https://api.github.com/repos/Vhoyon/Vramework", "Date": "2018-12-08T04:29:16Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shouldLoadDefaultModules) { allErrors.addAll(defaultModuleErrors); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/470/buggy-version/src.main.java.io.github.vhoyon.vramework.Framework.java", "BodyUseAPI": [], "Fixed commit": "718a1b4ec3f86bca8d2cf4219a6e77ac9efd96e6", "Url": "https://api.github.com/repos/Vhoyon/Vramework", "Date": "2018-12-08T04:29:16Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (line.contains(\"comic-title-name\")) { java.util.regex.Matcher m = com.mareksebera.simpledilbert.utilities.FindUrls.title_match_pattern.matcher(line); if (m.matches()) { foundTitle = m.group(1); hasFoundTitle = true; } }else if ((!hasFoundTitle) && (line.contains(\"twitter:title\"))) { java.util.regex.Matcher m = com.mareksebera.simpledilbert.utilities.FindUrls.twitter_title_match_pattern.matcher(line); if (m.matches()) { foundTitle = m.group(1); hasFoundTitle = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1226/buggy-version/src.main.java.com.mareksebera.simpledilbert.utilities.FindUrls.java", "BodyUseAPI": ["java.util.regex.Pattern.matcher(java.lang.String)", "java.util.regex.Pattern.matcher(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "1246c1e7de0fdf9092c93df7affce414fe2ed541", "Url": "https://api.github.com/repos/smarek/Simple-Dilbert", "Date": "2018-12-18T11:08:23Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nutrients.containsKey(name)) { return nutrients.get(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5850/buggy-version/FoodItem.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Double>.get(java.lang.String)"], "Fixed commit": "4ac96ccb7474cbe3cfae21b5ed063cae79c7c672", "Url": "https://api.github.com/repos/bhclarke/Food-Truck", "Date": "2018-11-22T23:53:59Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (name != null) { nutrients.put(name, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5850/buggy-version/FoodItem.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Double>.put(java.lang.String,double)"], "Fixed commit": "4ac96ccb7474cbe3cfae21b5ed063cae79c7c672", "Url": "https://api.github.com/repos/bhclarke/Food-Truck", "Date": "2018-11-22T23:53:59Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((((name == null) || (location == null)) || (value == null)) || (date == null)) || (description == null)) { throw new java.lang.NullPointerException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8097/buggy-version/app.src.main.java.com.length6array.donationtracker2.Donation.java", "BodyUseAPI": [], "Fixed commit": "7b34b8662394fc3570e7a4da8e3c4c1c29f920f7", "Url": "https://api.github.com/repos/Length6Array/DonationTracker2", "Date": "2018-11-15T04:39:47Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (invalidLocation) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8097/buggy-version/app.src.main.java.com.length6array.donationtracker2.Donation.java", "BodyUseAPI": [], "Fixed commit": "7b34b8662394fc3570e7a4da8e3c4c1c29f920f7", "Url": "https://api.github.com/repos/Length6Array/DonationTracker2", "Date": "2018-11-15T04:39:47Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((documentSnapshot.exists()) && ((documentSnapshot.getData()) != null)) { friends = ((java.util.ArrayList) (documentSnapshot.getData().get(\"followed\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3526/buggy-version/app.src.main.java.com.example.a15862.mytraveldiary.MomentsActivity.java", "BodyUseAPI": ["com.google.firebase.firestore.DocumentSnapshot.getData()", "documentSnapshot.getData().get(java.lang.String)"], "Fixed commit": "09b1ef92802b1c1e6d06316f3587e33606c23a38", "Url": "https://api.github.com/repos/dozzzy/MyTravelDiary", "Date": "2018-12-10T21:40:19Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (response.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5890/buggy-version/src.main.java.com.liambeckman.removemywaste.centers.java", "BodyUseAPI": [], "Fixed commit": "9d032fd2f954131e5e4529ce01924aef9f1ac42b", "Url": "https://api.github.com/repos/cs361-group24/RemoveMyWaste-android", "Date": "2018-11-22T06:58:57Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cacheKey) != null) { com.crescentflare.bitletsynchronizer.cache.BitletCacheEntry<java.lang.Object> cacheEntry = bitletSynchronizer.getCacheEntry(cacheKey, java.lang.Object.class); skipsLoading = ((!(forced)) && ((cacheEntry.getBitletData()) != null)) && (!(cacheEntry.isExpired())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3441/buggy-version/BitletSynchronizerAndroid.BitletSynchronizerLib.src.main.java.com.crescentflare.bitletsynchronizer.operation.BitletOperationLoadItem.java", "BodyUseAPI": [], "Fixed commit": "817a9a18bcb94d35054560ca4af9d62988452089", "Url": "https://api.github.com/repos/crescentflare/BitletSynchronizer", "Date": "2018-11-05T20:56:07Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAutoCompleteList) != null) { android.widget.ArrayAdapter<?> adapter = new com.romanpulov.violetnote.view.AutoCompleteArrayAdapter(mInputEditText.getContext(), R.layout.dropdown_button_item, mAutoCompleteList.toArray(new java.lang.String[0]), this); mInputEditText.setAdapter(adapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4341/buggy-version/app.src.main.java.com.romanpulov.violetnote.view.helper.InputActionHelper.java", "BodyUseAPI": [], "Fixed commit": "ebc8f84188f74b6750b5645ba2c58efe030f5cb5", "Url": "https://api.github.com/repos/MrZeRo2000/violetnote-android", "Date": "2018-12-26T15:33:25Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(m_eos)) { m_eos = true; m_cause = cause; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4881/buggy-version/src.main.java.marmot.protobuf.ChunkInputStream.java", "BodyUseAPI": [], "Fixed commit": "c32fc12a0c131cc925026fd21dbf4300aadd69de", "Url": "https://api.github.com/repos/kwlee0220/marmot.common", "Date": "2018-12-05T07:05:55Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.res.Resources.getIdentifier(java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dictId == 0) { try { dictId = ri.activityInfo.metaData.getInt(com.voraindustries.hackerskeyboardneon.PluginManager.SOFTKEYBOARD_DICT_RESOURCE_METADATA_NAME); } catch (java.lang.Exception e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9699/buggy-version/app.src.main.java.com.voraindustries.hackerskeyboardneon.PluginManager.java", "BodyUseAPI": [], "Fixed commit": "31bc273d8ff5be03ccee5d1abec4dec1e3d04d76", "Url": "https://api.github.com/repos/TheRealPSV/hackerskeyboard", "Date": "2018-12-18T11:18:21Z"},
{"Line": "=>742", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!skipVHDL) { if (!(guiDRC())) { return false; } double frequency = GetTickfrequency(); if (!(guiMapDesign(CircuitName))) { return false; } if (!(writeHDL(circuitsList.getSelectedItem().toString(), frequency))) { return false; } if (!(MapPannel.isDoneAssignment())) { com.cburch.logisim.fpga.fpgagui.MyReporter.AddError(\"Download to board canceled\"); return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1140/buggy-version/src.main.java.com.cburch.logisim.fpga.fpgagui.FPGACommanderGui.java", "BodyUseAPI": [], "Fixed commit": "42d10854f60f8b889b918fa47500bd0875022fda", "Url": "https://api.github.com/repos/BFH-ktt1/logisim-evolution", "Date": "2018-12-24T12:08:49Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (desc.endsWith(\"\\r\")) { desc = desc.substring(0, ((desc.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9233/buggy-version/src.main.java.com.sunil.workutils.controller.DsrGenerator.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "81e097144d75d48a47b3494ce4da7e5273598aa4", "Url": "https://api.github.com/repos/sunilkumarsahu/work-utils", "Date": "2018-11-22T14:51:49Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cl.endsWith(\"\\r\")) { cl = cl.substring(0, ((cl.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9233/buggy-version/src.main.java.com.sunil.workutils.controller.DsrGenerator.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "81e097144d75d48a47b3494ce4da7e5273598aa4", "Url": "https://api.github.com/repos/sunilkumarsahu/work-utils", "Date": "2018-11-22T14:51:49Z"},
{"Line": "=>1505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((getListOfFilesFragment().getNoOfItems()) == 2) || (result.isException())) { showSnackMessage(com.owncloud.android.ui.errorhandling.ErrorMessageAdapter.getResultMessage(result, operation, getResources())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/51/buggy-version/app.src.main.java.com.owncloud.android.ui.activity.FileDisplayActivity.java", "BodyUseAPI": ["com.owncloud.android.ui.errorhandling.ErrorMessageAdapter.getResultMessage(com.owncloud.android.lib.common.operations.RemoteOperationResult,com.owncloud.android.operations.RemoveFileOperation,getResources())", "com.owncloud.android.ui.activity.FileDisplayActivity.showSnackMessage(com.owncloud.android.ui.errorhandling.ErrorMessageAdapter.getResultMessage(result, operation, getResources()))"], "Fixed commit": "916c4cba25ebd48d0ebc5feba35fcb0fc84742e0", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-11-18T04:51:52Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["love.wangqi.context.ContextUtil.getRequestHolder(io.netty.channel.Channel)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (requestHolder != null) { love.wangqi.filter.SendErrorFilter.logger.error((((((\"Route Id: \" + (requestHolder.route.getId())) + \" Route Url: \") + (requestHolder.route.getMapUrl())) + \" \") + (e.getMessage())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9724/buggy-version/src.main.java.love.wangqi.filter.SendErrorFilter.java", "BodyUseAPI": ["requestHolder.route.getId()", "org.slf4j.Logger.error((((((\"Route Id: \" + (requestHolder.route.getId())) + \" Route Url: \") + (requestHolder.route.getMapUrl())) + \" \") + (e.getMessage())),java.lang.Exception)", "requestHolder.route.getMapUrl()"], "Fixed commit": "20b34c75db357024613886662df8291c4ae45379", "Url": "https://api.github.com/repos/wangqifox/api-gateway-core", "Date": "2018-12-04T08:34:38Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c.getDeclaredField(name)) != null) { field = c.getDeclaredField(name); me.bradleysteele.commons.util.reflect.Reflection.setAccessible(field, true); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7532/buggy-version/src.main.java.me.bradleysteele.commons.util.reflect.Reflection.java", "BodyUseAPI": ["java.lang.Class<?>.getDeclaredField(java.lang.String)"], "Fixed commit": "6e01063838ba03686478b690b81a3decdd92c150", "Url": "https://api.github.com/repos/BradleySteele/BCommons", "Date": "2018-11-06T22:06:06Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ProfileIO.addNewProfile(Profile)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!unique) { javax.swing.JOptionPane.showMessageDialog(rootPane, \"That profile already exists, please choose another name\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5257/buggy-version/src.main.java.mainGUI.java", "BodyUseAPI": [], "Fixed commit": "675f614483e9765622baef5e6fb64e1d7ae99cdb", "Url": "https://api.github.com/repos/JohnMoen90/BrassObelisk", "Date": "2018-12-18T06:43:26Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.app.x206397.DoxSupport.AWS.OnCallData.OnCallScheduleActivity.3.findViewById(R.id.sundayProgressBar)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (load != null) { load.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4149/buggy-version/app.DoxSupport.src.main.java.com.app.x206397.DoxSupport.AWS.OnCallData.OnCallScheduleActivity.java", "BodyUseAPI": ["android.widget.ProgressBar.setVisibility(View.GONE)"], "Fixed commit": "b1022074df6dc3d79d05a7429c888a9e52c83b40", "Url": "https://api.github.com/repos/Ktawde/DoxSupport", "Date": "2018-11-22T16:05:30Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.app.x206397.DoxSupport.AWS.OnCallData.OnCallScheduleActivity.3.findViewById(R.id.saturdayProgressBar)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (load != null) { load.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4149/buggy-version/app.DoxSupport.src.main.java.com.app.x206397.DoxSupport.AWS.OnCallData.OnCallScheduleActivity.java", "BodyUseAPI": ["android.widget.ProgressBar.setVisibility(View.GONE)"], "Fixed commit": "b1022074df6dc3d79d05a7429c888a9e52c83b40", "Url": "https://api.github.com/repos/Ktawde/DoxSupport", "Date": "2018-11-22T16:05:30Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkWin(0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2927/buggy-version/eclipse-workspace.BTSGames.Games.TicTacToe.TicTacToeGame.java", "BodyUseAPI": [], "Fixed commit": "eca07c978da70ec43348f49d9b202409923106ee", "Url": "https://api.github.com/repos/NicholasZidel/Team-Software-Project", "Date": "2018-11-12T19:10:41Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkWin(1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2927/buggy-version/eclipse-workspace.BTSGames.Games.TicTacToe.TicTacToeGame.java", "BodyUseAPI": [], "Fixed commit": "eca07c978da70ec43348f49d9b202409923106ee", "Url": "https://api.github.com/repos/NicholasZidel/Team-Software-Project", "Date": "2018-11-12T19:10:41Z"},
{"Line": "=>527", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getFragmentManager().findFragmentByTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (prev != null) { ft.remove(prev); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2417/buggy-version/app.src.main.java.com.project.uberauto.MapFragment.java", "BodyUseAPI": ["android.support.v4.app.FragmentTransaction.remove(android.support.v4.app.Fragment)"], "Fixed commit": "0832185f84fc36d76aa00cd993c35eeef4c6c500", "Url": "https://api.github.com/repos/maheshmnj/Project-Uber-Auto", "Date": "2018-11-22T15:52:59Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(spacesMatch.matches())) { data = new java.lang.StringBuilder(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7053/buggy-version/ConfigLib-Core.src.main.java.de.exlll.configlib.configs.yaml.YamlSource.java", "BodyUseAPI": [], "Fixed commit": "6f84150b297a168051d7ecb48971062cd9909092", "Url": "https://api.github.com/repos/Draww/ConfigLib", "Date": "2018-12-03T13:44:10Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.springframework.util.StringUtils.isEmpty(recordQueryVO.getOpenId())) { return responseJson; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3566/buggy-version/src.main.java.cn.PATHoyanol.sticker.controller.StickerController.java", "BodyUseAPI": [], "Fixed commit": "edbcddc5c89deb4580c493c00d70ddb79615fab4", "Url": "https://api.github.com/repos/yanfeng9507/sticker", "Date": "2018-11-02T09:13:06Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFirst) { refCache.put(field, ref); idCache.put(field, new java.util.HashSet<java.lang.String>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9619/buggy-version/statistics.src.main.java.com.yonyou.iuap.baseservice.statistics.util.SearchParamUtil.java", "BodyUseAPI": [], "Fixed commit": "b49fb8a59205ec1a9f3e6bf354b723e3bc5ced6d", "Url": "https://api.github.com/repos/yonyou-iuap/iuap-pap-baseservice", "Date": "2018-12-05T08:33:25Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (timeAndDate[0].contains(\"-\")) splitBy = \"-\"; else splitBy = \"/\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7108/buggy-version/src.GIS.MetaData.java", "BodyUseAPI": [], "Fixed commit": "4c211fbd533404d1fa323ea2af4436dfd1a76801", "Url": "https://api.github.com/repos/EvgenyVendrov/OOP_Assignment2", "Date": "2018-12-02T09:16:56Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c.getColor()) != null) csd.addPolygon(polygon, c.getThickness(), c.getColor(), false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8251/buggy-version/src.main.java.de.neemann.digital.draw.shapes.custom.svg.SvgImporter.java", "BodyUseAPI": ["de.neemann.digital.draw.shapes.custom.svg.Context.getColor()", "de.neemann.digital.draw.shapes.custom.svg.Context.getThickness()", "de.neemann.digital.draw.shapes.custom.CustomShapeDescription.addPolygon(de.neemann.digital.draw.shapes.custom.svg.Polygon,c.getThickness(),c.getColor(),boolean)"], "Fixed commit": "caf8f6c2d39b230e60112b1611f32247eadde55c", "Url": "https://api.github.com/repos/hneemann/Digital", "Date": "2018-11-30T19:59:04Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c.getFilled()) != null) csd.addPolygon(polygon, c.getThickness(), c.getFilled(), true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8251/buggy-version/src.main.java.de.neemann.digital.draw.shapes.custom.svg.SvgImporter.java", "BodyUseAPI": ["de.neemann.digital.draw.shapes.custom.CustomShapeDescription.addPolygon(de.neemann.digital.draw.shapes.custom.svg.Polygon,c.getThickness(),c.getFilled(),boolean)", "de.neemann.digital.draw.shapes.custom.svg.Context.getThickness()", "de.neemann.digital.draw.shapes.custom.svg.Context.getFilled()"], "Fixed commit": "caf8f6c2d39b230e60112b1611f32247eadde55c", "Url": "https://api.github.com/repos/hneemann/Digital", "Date": "2018-11-30T19:59:04Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inputValue instanceof java.util.UUID) { result = inputValue; }else { id = new java.lang.String(((java.lang.String) (inputValue))); id = id.substring(1, ((id.length()) - 1)); result = java.util.UUID.fromString(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2589/buggy-version/src.main.java.response.soft.Utils.AppUtils.java", "BodyUseAPI": [], "Fixed commit": "6df1c1857ff68863f504c781112853b85e1305e2", "Url": "https://api.github.com/repos/rocky-bgta/response-inventory-system", "Date": "2018-12-14T14:12:14Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(gFeatures.getInstance().getProxyServer().getServer(mgs).isPresent())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3570/buggy-version/src.main.java.net.estinet.gFeatures.Feature.MinigameAssister.SendAll.java", "BodyUseAPI": [], "Fixed commit": "c296aeb02326cff06fbd4fddb290e024a3c68fe5", "Url": "https://api.github.com/repos/EstiNet/gFeaturesBungee", "Date": "2018-12-09T23:02:18Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (end) sample.SorryClient.sentThisTurn = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8195/buggy-version/src.sample.SorryClient.java", "BodyUseAPI": [], "Fixed commit": "60cb3450b22c7c755adb8f1eb3c3d95c0debe1ec", "Url": "https://api.github.com/repos/logankarney/Sorry", "Date": "2018-12-07T01:50:32Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sample.SorryClient.sentThisTurn)) { sample.SorryClient.controller.updateClient(updates); sample.SorryClient.sentThisTurn = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8195/buggy-version/src.sample.SorryClient.java", "BodyUseAPI": [], "Fixed commit": "60cb3450b22c7c755adb8f1eb3c3d95c0debe1ec", "Url": "https://api.github.com/repos/logankarney/Sorry", "Date": "2018-12-07T01:50:32Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player1Turn) { app.gui.Print.actionMessage((((player1Card.getName()) + \" HAS ATTACKED \") + (player2Card.getName()))); }else { app.gui.Print.actionMessage((((player2Card.getName()) + \" HAS ATTACKED \") + (player1Card.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/747/buggy-version/src.main.java.app.controllers.Game.java", "BodyUseAPI": [], "Fixed commit": "14d8bfbb423e577f9226bb301e635ed4508d8b7d", "Url": "https://api.github.com/repos/Schonis86/cardGame", "Date": "2018-11-05T12:08:05Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timeStamp == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/507/buggy-version/src.main.java.com.today.eventbus.utils.CommonUtil.java", "BodyUseAPI": [], "Fixed commit": "8e77716b3796c1c342d27e5b67d06f8925351f98", "Url": "https://api.github.com/repos/dapeng-soa/dapeng-event-bus", "Date": "2018-11-29T09:53:17Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (distance == (java.lang.Float.MAX_VALUE)) return ((float) (300));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/112/buggy-version/app.src.main.java.com.example.shashank_pc.trial.classes.Algorithm.java", "BodyUseAPI": [], "Fixed commit": "035efb39a7bdee6682dd75b4e69b776ffd89bc94", "Url": "https://api.github.com/repos/ShashankAnantharam/HelloWorldTrial", "Date": "2018-11-16T17:43:22Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (object instanceof java.lang.String) { result = new org.openmrs.module.webservices.rest.SimpleObject().add(\"uuid\", object); }else if (object != null) { org.openmrs.module.sync2.api.model.enums.CategoryEnum cat = org.openmrs.module.sync2.api.model.enums.CategoryEnum.getByCategory(category); if (SyncConstants.FHIR_CLIENT.equals(clientName)) { org.openmrs.module.fhir.api.helper.FHIRClientHelper helper = new org.openmrs.module.fhir.api.helper.FHIRClientHelper(); result = helper.convertToOpenMrsObject(object, category); result = org.openmrs.module.webservices.rest.web.ConversionUtil.convertToRepresentation(result, Representation.FULL); }else if (org.openmrs.module.sync2.api.model.audit.AuditMessage.class.isAssignableFrom(cat.getClazz())) { result = org.openmrs.module.webservices.rest.web.ConversionUtil.convertToRepresentation(object, Representation.FULL); }else { throw new javax.transaction.NotSupportedException(java.lang.String.format(\"Category %s not supported.\", category)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5500/buggy-version/api.src.main.java.org.openmrs.module.sync2.api.service.impl.UnifyServiceImpl.java", "BodyUseAPI": ["org.openmrs.module.webservices.rest.web.ConversionUtil.convertToRepresentation(java.lang.Object,Representation.FULL)", "org.openmrs.module.fhir.api.helper.FHIRClientHelper.convertToOpenMrsObject(java.lang.Object,java.lang.String)", "org.openmrs.module.webservices.rest.SimpleObject.add(java.lang.String,java.lang.Object)"], "Fixed commit": "2d839a27175fa585eb0efefa843b0447ee91fc98", "Url": "https://api.github.com/repos/openmrs/openmrs-module-sync2", "Date": "2018-12-06T15:36:02Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(activity.isFinishing())) { if (receivedFile == null) new androidx.appcompat.app.AlertDialog.Builder(activity).setTitle(R.string.text_error).setMessage(R.string.mesg_somethingWentWrong).setNegativeButton(R.string.butn_close, null).setPositiveButton(R.string.butn_retry, new android.content.DialogInterface.OnClickListener() { @java.lang.Override public void onClick(android.content.DialogInterface dialog, int which) { runReceiveTask(activity, sharedPreferences, device, connection); } }).show(); else new androidx.appcompat.app.AlertDialog.Builder(activity).setTitle(R.string.text_taskCompleted).setMessage(R.string.mesg_updateDownloadComplete).setNegativeButton(R.string.butn_close, null).setPositiveButton(R.string.butn_open, new android.content.DialogInterface.OnClickListener() { @java.lang.Override public void onClick(android.content.DialogInterface dialog, int which) { com.genonbeta.TrebleShot.app.EditableListFragment.openUri(activity, receivedFile.getUri(), activity.getString(R.string.text_fileOpenAppChoose)); } }).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1939/buggy-version/app.src.main.java.com.genonbeta.TrebleShot.dialog.DeviceInfoDialog.java", "BodyUseAPI": ["new androidx.appcompat.app.AlertDialog.Builder(activity).setTitle(R.string.text_error).setMessage(R.string.mesg_somethingWentWrong).setNegativeButton(R.string.butn_close, null).setPositiveButton(R.string.butn_retry,android.content.DialogInterface.OnClickListener)", "new androidx.appcompat.app.AlertDialog.Builder(activity).setTitle(R.string.text_taskCompleted).setMessage(R.string.mesg_updateDownloadComplete).setNegativeButton(R.string.butn_close, null).setPositiveButton(R.string.butn_open,android.content.DialogInterface.OnClickListener)", "new androidx.appcompat.app.AlertDialog.Builder(activity).setTitle(R.string.text_error).setMessage(R.string.mesg_somethingWentWrong).setNegativeButton(R.string.butn_close,<nulltype>)", "com.genonbeta.TrebleShot.app.EditableListFragment.openUri(android.app.Activity,receivedFile.getUri(),activity.getString(R.string.text_fileOpenAppChoose))", "androidx.appcompat.app.AlertDialog.Builder.setTitle(R.string.text_error)", "android.app.Activity.getString(R.string.text_fileOpenAppChoose)", "androidx.appcompat.app.AlertDialog.Builder.setTitle(R.string.text_taskCompleted)", "new androidx.appcompat.app.AlertDialog.Builder(activity).setTitle(R.string.text_taskCompleted).setMessage(R.string.mesg_updateDownloadComplete)", "new androidx.appcompat.app.AlertDialog.Builder(activity).setTitle(R.string.text_error).setMessage(R.string.mesg_somethingWentWrong).setNegativeButton(R.string.butn_close, null).setPositiveButton(R.string.butn_retry, new android.content.DialogInterface.OnClickListener() {\n    @java.lang.Override\n    public void onClick(android.content.DialogInterface dialog, int which) {\n        runReceiveTask(activity, sharedPreferences, device, connection);\n    }\n}).show()", "new androidx.appcompat.app.AlertDialog.Builder(activity).setTitle(R.string.text_error).setMessage(R.string.mesg_somethingWentWrong)", "new androidx.appcompat.app.AlertDialog.Builder(activity).setTitle(R.string.text_taskCompleted).setMessage(R.string.mesg_updateDownloadComplete).setNegativeButton(R.string.butn_close,<nulltype>)", "new androidx.appcompat.app.AlertDialog.Builder(activity).setTitle(R.string.text_taskCompleted).setMessage(R.string.mesg_updateDownloadComplete).setNegativeButton(R.string.butn_close, null).setPositiveButton(R.string.butn_open, new android.content.DialogInterface.OnClickListener() {\n    @java.lang.Override\n    public void onClick(android.content.DialogInterface dialog, int which) {\n        com.genonbeta.TrebleShot.app.EditableListFragment.openUri(activity, receivedFile.getUri(), activity.getString(R.string.text_fileOpenAppChoose));\n    }\n}).show()", "1.runReceiveTask(android.app.Activity,android.content.SharedPreferences,com.genonbeta.TrebleShot.object.NetworkDevice,NetworkDevice.Connection)"], "Fixed commit": "4a9bcb45fdec218ecd3299bed5b089de956537e7", "Url": "https://api.github.com/repos/genonbeta/TrebleShot", "Date": "2018-12-29T16:54:29Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (id <= 0) { mess.toPlayer(p, \"Ung\u00fcltige ID\", Messages.IMPORTANT); }else { fex.signs.signs.CommandTransformer.getInstance().getInfo(id, p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4946/buggy-version/Signs.src.fex.signs.signs.Main.java", "BodyUseAPI": ["fex.signs.signs.CommandTransformer.getInstance().getInfo(int,org.bukkit.entity.Player)"], "Fixed commit": "e0c3786190a627eee1c0428b56b26c27183cb229", "Url": "https://api.github.com/repos/fex594/signs", "Date": "2018-11-13T20:26:57Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (moveCamera) { mMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLng(latLng)); mMap.animateCamera(com.google.android.gms.maps.CameraUpdateFactory.zoomTo(getResources().getInteger(R.integer.zoom_default))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4402/buggy-version/app.src.main.java.re.sourcecode.android.wattsnearby.MainMapActivity.java", "BodyUseAPI": [], "Fixed commit": "2da598c7a08338806df3d9acfe0de508955cfde6", "Url": "https://api.github.com/repos/sourcecodere/WattsNearby", "Date": "2017-04-21T10:35:24Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cocktailJson == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1069/buggy-version/src.main.java.alkolexa.model.API.java", "BodyUseAPI": [], "Fixed commit": "90412a7bf8a7ef1b55b3f1d4f1dc325eea347176", "Url": "https://api.github.com/repos/sweIhm-ws2018-19/Alkolexa-DI2", "Date": "2018-12-27T11:09:16Z"}]}
