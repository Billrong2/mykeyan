{"UNKNOWN to If":[{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.meta.SkullMeta.getOwningPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (offplayer == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9461/buggy-version/src.main.java.com.jaoafa.jaoSuperAchievement.jaoAchievement.ForestBear.java", "BodyUseAPI": [], "Fixed commit": "2291ad7addcf8ffde9d0e276c627bab0de070f4f", "Url": "https://api.github.com/repos/jaoafa/jao-Super-Achievement", "Date": "2018-05-09T09:01:44Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.midstatemusic.repairtag_v4.Helpers.Info.editing)) { java.lang.String query = \"SELECT id FROM records ORDER BY id DESC LIMIT 1\"; java.sql.ResultSet rs = DatabaseConnections.stmt.executeQuery(query); rs.next(); com.midstatemusic.repairtag_v4.Helpers.Info.id = rs.getString(\"id\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/40/buggy-version/RepairTag_v4.app.src.main.java.com.midstatemusic.repairtag_v4.Fragments.DescriptionFragment.java", "BodyUseAPI": [], "Fixed commit": "0309bbe4a84ab0c76912824bd593de7c81a4f1e0", "Url": "https://api.github.com/repos/fardenml/RepairTagApp", "Date": "2018-04-13T06:38:29Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.ecf.provider.jaxrs.server.JaxRSServerContainerInstantiator.getSystemProperty(java.lang.String,java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (sysUp != null) return sysUp;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2633/buggy-version/bundles.org.eclipse.ecf.provider.jaxrs.server.src.org.eclipse.ecf.provider.jaxrs.server.JaxRSServerContainerInstantiator.java", "BodyUseAPI": [], "Fixed commit": "4964b47c4c96affb9960bc289bae2542ecdbbe3c", "Url": "https://api.github.com/repos/ECF/JaxRSProviders", "Date": "2018-07-31T17:30:56Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((userStory.getAssignedTo()) != null) { com.umssonline.proymgt.models.entity.User assignedUser = usersClient.findById(userStory.getAssignedTo().getId()); if (assignedUser == null) { throw new com.umssonline.proymgt.exceptions.InvalidResourceException(\"User with the specified ID could not be found.\"); } com.umssonline.proymgt.models.entity.User assignedToUser = userRepository.save(assignedUser); userStory.setAssignedTo(assignedToUser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8506/buggy-version/src.main.java.com.umssonline.proymgt.services.impl.BacklogServiceImpl.java", "BodyUseAPI": ["com.umssonline.proymgt.models.entity.UserStory.getAssignedTo()", "com.umssonline.proymgt.models.entity.UserStory.setAssignedTo(com.umssonline.proymgt.models.entity.User)", "userStory.getAssignedTo().getId()", "com.umssonline.proymgt.feign.UsersFeignClient.findById(userStory.getAssignedTo().getId())"], "Fixed commit": "81ab072bfc233704c90d85e0da92f2caff0b0e00", "Url": "https://api.github.com/repos/franco148/uo-projectmgt-service", "Date": "2018-08-11T04:49:09Z"},
{"Line": "=>540", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.kkmofang.app.Shell.topActivity()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (topActivity != null) { cn.kkmofang.app.WindowController v = new cn.kkmofang.app.WindowController(topActivity, app.open(action)); v.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9321/buggy-version/kk-app.src.main.java.cn.kkmofang.app.Shell.java", "BodyUseAPI": [], "Fixed commit": "b2dd8c7e95e0032348cab836fc6c9dba506833a8", "Url": "https://api.github.com/repos/hailongz/kk-app", "Date": "2018-05-30T06:58:17Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Lizzie.board.getData().stones[wagner.stephanie.lizzie.rules.Board.getIndex(i, j)]) != (wagner.stephanie.lizzie.rules.Stone.EMPTY)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1140/buggy-version/src.main.java.wagner.stephanie.lizzie.gui.BoardRenderer.java", "BodyUseAPI": [], "Fixed commit": "a395f73c3f40587d45b4a1ee3e8e7c7971e592b5", "Url": "https://api.github.com/repos/featurecat/lizzie", "Date": "2018-04-20T17:54:21Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.conedot.aland.training.manager.UserPointManager.getUserPoint(java.lang.String,examAnswerPackage.getRelativeId(),examAnswerPackage.getTaskId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (userPoint == null) { throw new com.conedot.aland.training.exception.base.BadRequestException(400, \"not_join_course\", \"\u7528\u6237\u8fd8\u672a\u5b66\u4e60\u8be5\u70b9\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4198/buggy-version/AlandTrainingService.src.main.java.com.conedot.aland.training.manager.UserExamManager.java", "BodyUseAPI": [], "Fixed commit": "fb2a7c1e51b062168ec290ec1de1f64c7002fbc8", "Url": "https://api.github.com/repos/victorwang0526/AlandTraining", "Date": "2018-07-10T11:58:31Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (slide.getSubject().equalsIgnoreCase(\"\")) { slide.setSubject(slide.getTitle()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4263/buggy-version/src.Model.Presentation.java", "BodyUseAPI": ["Model.PresentationComponent.getTitle()", "Model.PresentationComponent.setSubject(slide.getTitle())"], "Fixed commit": "464908666ba4d5c7c3077565e031216fe9f31f5f", "Url": "https://api.github.com/repos/HichamOUNL/EvertVerduin-HichamChafik", "Date": "2018-05-02T13:45:31Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.shu.message.model.entity.Comment>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cur >= maxLen) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1088/buggy-version/src.main.java.com.shu.message.service.CommentService.java", "BodyUseAPI": [], "Fixed commit": "1a0f113b18a5b4371a5e577c1f59a3981203bb9a", "Url": "https://api.github.com/repos/Actooors/SHU_Message_Service", "Date": "2018-08-31T12:32:28Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requireUploadToHDFS) { java.lang.String pass2uid = be.ugent.intec.halvade.utils.HalvadeConf.getPass2UID(context.getConfiguration()); newGenomeDir = (tmpDir) + pass2uid; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2904/buggy-version/halvade.src.be.ugent.intec.halvade.hadoop.mapreduce.RebuildStarGenomeReducer.java", "BodyUseAPI": [], "Fixed commit": "cb0061f338c414f7dd5e9db3587f80e59ab35dba", "Url": "https://api.github.com/repos/biointec/halvade", "Date": "2018-01-22T14:18:21Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.springframework.web.context.request.RequestContextHolder.getRequestAttributes()) != null) { if (((userContext) != null) && ((userContext.getUser()) != null)) { user = userContext.getUser().getUsername(); } }else { user = \"GeOMe-DB System\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1403/buggy-version/src.main.java.biocode.fims.repositories.PostgresRepositoryAuditAdvice.java", "BodyUseAPI": [], "Fixed commit": "9f69d74d168d028276c1a0333dd55bb0faf4be71", "Url": "https://api.github.com/repos/biocodellc/biocode-fims-commons", "Date": "2018-08-22T18:19:50Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (successes > 0) { return sum / successes; }else { return distance; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6069/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.UltrasonicFunction.java", "BodyUseAPI": [], "Fixed commit": "55e136e7047087c1bfc70c884764de45b1ad470c", "Url": "https://api.github.com/repos/tei06398/twentyeighteen", "Date": "2018-01-05T23:58:08Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (result != null) { classes.put(className, result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3662/buggy-version/src.main.java.ognl.DefaultClassResolver.java", "BodyUseAPI": ["java.util.Map.put(java.lang.String,java.lang.Class)"], "Fixed commit": "034bab6f42243c58fb75f38f67c2c8b203bbd4ea", "Url": "https://api.github.com/repos/jkuhnert/ognl", "Date": "2018-03-18T08:36:21Z"},
{"Line": "=>638", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDestroyed) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9282/buggy-version/app.src.main.java.org.taxireferral.enduserapp.aPlacePickerCustom.MapPickerFragment.java", "BodyUseAPI": [], "Fixed commit": "9cb5be8f69abb12ff63aebcdee2358664da553b2", "Url": "https://api.github.com/repos/SumeetMoray/TRS-End-User-android-app", "Date": "2018-02-07T05:40:55Z"},
{"Line": "=>643", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9282/buggy-version/app.src.main.java.org.taxireferral.enduserapp.aPlacePickerCustom.MapPickerFragment.java", "BodyUseAPI": [], "Fixed commit": "9cb5be8f69abb12ff63aebcdee2358664da553b2", "Url": "https://api.github.com/repos/SumeetMoray/TRS-End-User-android-app", "Date": "2018-02-07T05:40:55Z"},
{"Line": "=>841", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDestroyed) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9282/buggy-version/app.src.main.java.org.taxireferral.enduserapp.aPlacePickerCustom.MapPickerFragment.java", "BodyUseAPI": [], "Fixed commit": "9cb5be8f69abb12ff63aebcdee2358664da553b2", "Url": "https://api.github.com/repos/SumeetMoray/TRS-End-User-android-app", "Date": "2018-02-07T05:40:55Z"},
{"Line": "=>689", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9282/buggy-version/app.src.main.java.org.taxireferral.enduserapp.aPlacePickerCustom.MapPickerFragment.java", "BodyUseAPI": [], "Fixed commit": "9cb5be8f69abb12ff63aebcdee2358664da553b2", "Url": "https://api.github.com/repos/SumeetMoray/TRS-End-User-android-app", "Date": "2018-02-07T05:40:55Z"},
{"Line": "=>882", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDestroyed) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9282/buggy-version/app.src.main.java.org.taxireferral.enduserapp.aPlacePickerCustom.MapPickerFragment.java", "BodyUseAPI": [], "Fixed commit": "9cb5be8f69abb12ff63aebcdee2358664da553b2", "Url": "https://api.github.com/repos/SumeetMoray/TRS-End-User-android-app", "Date": "2018-02-07T05:40:55Z"},
{"Line": "=>683", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDestroyed) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9282/buggy-version/app.src.main.java.org.taxireferral.enduserapp.aPlacePickerCustom.MapPickerFragment.java", "BodyUseAPI": [], "Fixed commit": "9cb5be8f69abb12ff63aebcdee2358664da553b2", "Url": "https://api.github.com/repos/SumeetMoray/TRS-End-User-android-app", "Date": "2018-02-07T05:40:55Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fi.vm.yti.codelist.intake.dao.ValueTypeDao.findByLocalName(fromMemberValue.getValueType().getLocalName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (valueType == null) { throw new fi.vm.yti.codelist.intake.exception.YtiCodeListException(new fi.vm.yti.codelist.common.dto.ErrorModel(HttpStatus.NOT_ACCEPTABLE.value(), ERR_MSG_USER_406)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6958/buggy-version/src.main.java.fi.vm.yti.codelist.intake.dao.impl.MemberValueDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "bea3db0fb4116b1d43652103dfbeda2eea281724", "Url": "https://api.github.com/repos/VRK-YTI/yti-codelist-content-intake-service", "Date": "2018-10-10T09:32:44Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(editPersonDescriptor.isAnyFieldEdited())) { throw new seedu.address.logic.parser.exceptions.ParseException(seedu.address.logic.commands.personcommands.EditUserCommand.MESSAGE_NOT_EDITED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4856/buggy-version/src.main.java.seedu.address.logic.parser.EditUserCommandParser.java", "BodyUseAPI": [], "Fixed commit": "2a0dee2e7fe58a7e18af77cf3b4ee66f15ade04e", "Url": "https://api.github.com/repos/adjscent/main", "Date": "2018-10-20T15:53:55Z"},
{"Line": "=>974", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["CodeGenerator.Environment.getVar(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((needNewargs) || ((varLoc.depth) != 0)) { int depth = (needNewargs) ? varLoc.depth : (varLoc.depth) - 1; Register r1 = env.freshRegister(); Register r2 = env.freshRegister(); bcBuilder.push(new IGetlocal(r1, depth, 0)); bcBuilder.push(new IFixnum(r2, varLoc.idx)); bcBuilder.push(new ISetprop(r1, r2, srcReg)); }else { bcBuilder.push(new IMove(new Register(((varLoc.idx) + 2)), srcReg)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4702/buggy-version/src.CodeGenerator.java", "BodyUseAPI": ["CodeGenerator.BCBuilder.push(IFixnum)", "CodeGenerator.BCBuilder.push(IMove)"], "Fixed commit": "999fabe4c0d4fa4cc18e617828b0c8470b418eb0", "Url": "https://api.github.com/repos/plasklab/oc2018-eJSC", "Date": "2017-10-10T09:32:40Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Main.Info.parseOption(java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (info.optOmitArguments) { NewargsAnalyzer analyzer = new NewargsAnalyzer(); analyzer.analyze(iast); if (info.optPrintAnalyzer) { new IASTPrinter().print(iast); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4702/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "999fabe4c0d4fa4cc18e617828b0c8470b418eb0", "Url": "https://api.github.com/repos/plasklab/oc2018-eJSC", "Date": "2017-10-10T09:32:40Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBottomView.getVisibility()) == (android.view.View.VISIBLE)) { setResult(com.liteon.icampusguardian.RESULT_CANCELED); finish(); }else { finish(); android.content.Intent intent = new android.content.Intent(); intent.setClass(this, com.liteon.icampusguardian.MainActivity.class); intent.putExtra(Def.EXTRA_GOTO_PAGE_ID, Def.EXTRA_PAGE_APPINFO_ID); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6903/buggy-version/app.src.main.java.com.liteon.icampusguardian.UserTermActivity.java", "BodyUseAPI": [], "Fixed commit": "c26ec2ffce95ead494cc73556d9c0ed394022be4", "Url": "https://api.github.com/repos/tel3342311/ICG", "Date": "2017-12-29T07:44:13Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBigEyeFilter) != null) mBigEyeFilter.destroy();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5512/buggy-version/AiyaEffectSDK.app.src.main.java.com.aiyaapp.aiya.DefaultEffectFlinger.java", "BodyUseAPI": [], "Fixed commit": "5b80a3145c703772064d501b8d05c684eeaedf27", "Url": "https://api.github.com/repos/aiyaapp/AiyaEffectsAndroid", "Date": "2018-10-07T13:33:08Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mThinFaceFilter) != null) mThinFaceFilter.destroy();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5512/buggy-version/AiyaEffectSDK.app.src.main.java.com.aiyaapp.aiya.DefaultEffectFlinger.java", "BodyUseAPI": [], "Fixed commit": "5b80a3145c703772064d501b8d05c684eeaedf27", "Url": "https://api.github.com/repos/aiyaapp/AiyaEffectsAndroid", "Date": "2018-10-07T13:33:08Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAiyaBeautyFilter) != null) mAiyaBeautyFilter.destroy();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5512/buggy-version/AiyaEffectSDK.app.src.main.java.com.aiyaapp.aiya.DefaultEffectFlinger.java", "BodyUseAPI": [], "Fixed commit": "5b80a3145c703772064d501b8d05c684eeaedf27", "Url": "https://api.github.com/repos/aiyaapp/AiyaEffectsAndroid", "Date": "2018-10-07T13:33:08Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.lang.String.valueOf(com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser().getDisplayName())) == null) || (java.lang.String.valueOf(com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser().getDisplayName()).equals(\"\"))) { this.finish(); }else { startActivity(new android.content.Intent(this, com.tasty.muhammadfaizan.firebasebloggingapp.MainActivity.class)); this.finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9798/buggy-version/app.src.main.java.com.tasty.muhammadfaizan.firebasebloggingapp.UserProfile.java", "BodyUseAPI": [], "Fixed commit": "10c988f2114e2067950ced7583e22ccf4e269da4", "Url": "https://api.github.com/repos/MuhammadFaizan980/FIrebaseBloggingApp", "Date": "2018-09-26T16:05:58Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item == null) { java.lang.System.out.println(\"Null value not inserted\"); return false; }else if ((index > (this.end)) && ((this.end) < ((this.max_size) - 1))) { this.end += 1; this.list[this.end] = item; return true; }else if ((index <= (this.end)) && ((this.end) == ((this.max_size) - 1))) { this.max_size *= 2; this.list = copyIntoNewBigArray(this.list, this.max_size, this.end); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6787/buggy-version/src.com.lib.ds.ListAsArray.java", "BodyUseAPI": [], "Fixed commit": "b0e772bf84af9c50669272471050562e13f1bf84", "Url": "https://api.github.com/repos/Tejas07PSK/JaxterLib", "Date": "2018-08-18T21:21:01Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gamepad1.dpad_down) { left_y = min_stick; }else { left_x = gamepad1.left_stick_x; left_y = gamepad1.left_stick_y; right_x = gamepad1.right_stick_x; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3570/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.TeleOp.WLP_MecanumDriveTrain.java", "BodyUseAPI": [], "Fixed commit": "1669d60cb75ce627925e9b06c2dedde867897861", "Url": "https://api.github.com/repos/ftcwelovepi/ftc_app", "Date": "2018-01-31T23:26:20Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cachedValueType) != null) { return cachedValueType; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1937/buggy-version/tools.src.wyvern.tools.typedAST.core.declarations.ValDeclaration.java", "BodyUseAPI": [], "Fixed commit": "2c055f5bf0a5d86d7a51487f0173e6fb60918f1b", "Url": "https://api.github.com/repos/wyvernlang/wyvern", "Date": "2018-04-13T03:58:47Z"},
{"Line": "=>759", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isValidParent) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7000/buggy-version/pageindicatorview.src.main.java.com.rd.PageIndicatorView.java", "BodyUseAPI": [], "Fixed commit": "14b13ec7ba71e5cb320ecfcfde1131e09f0958e2", "Url": "https://api.github.com/repos/romandanylyk/PageIndicatorView", "Date": "2018-04-30T17:11:55Z"},
{"Line": "=>1366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hive.metastore.api.LockComponent.getTablename()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (tblName != null) { s = (((((\"select t2w_writeid from TXN_TO_WRITE_ID where\" + \" t2w_database = \") + (org.apache.hadoop.hive.metastore.txn.TxnHandler.quoteString(dbName.toLowerCase()))) + \" and t2w_table = \") + (org.apache.hadoop.hive.metastore.txn.TxnHandler.quoteString(tblName.toLowerCase()))) + \" and t2w_txnid = \") + txnid; org.apache.hadoop.hive.metastore.txn.TxnHandler.LOG.debug(((\"Going to execute query <\" + s) + \">\")); rs = stmt.executeQuery(s); if (rs.next()) { writeId = rs.getLong(1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5362/buggy-version/standalone-metastore.src.main.java.org.apache.hadoop.hive.metastore.txn.TxnHandler.java", "BodyUseAPI": ["org.apache.hadoop.hive.metastore.txn.TxnHandler.quoteString(java.lang.String)", "java.lang.String.toLowerCase()"], "Fixed commit": "0382fc3151608b87e194b67c9fee71615d6d02d7", "Url": "https://api.github.com/repos/sankarh/hive", "Date": "2018-02-15T10:49:38Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Exception.getMessage()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (errorMessage.contains(\"higher position\")) { message.reply(((((\"Seems like I couldn't ban them: `\" + errorMessage) + \"`. My highest role needs to be above\") + \" the role of the person you're trying to ban. So if it's i.e. a member, please move my role up\") + \" before attempting to use this command again.\")); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/507/buggy-version/src.main.java.io.github.lunarwatcher.java.haileybot.commands.mod.utils.ModUtils.java", "BodyUseAPI": ["sx.blah.discord.handle.obj.IMessage.reply(java.lang.String)"], "Fixed commit": "cb9c99cbe939bd71d6b73f6a3dc87377a09f30b7", "Url": "https://api.github.com/repos/LunarWatcher/Hailey", "Date": "2018-09-29T09:13:23Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFloorsMap) != null) { dest.writeInt(mFloorsMap.size()); for (java.util.Map.Entry<java.lang.String, java.lang.Byte> entry : mFloorsMap.entrySet()) { dest.writeString(entry.getKey()); dest.writeByte(entry.getValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1684/buggy-version/app.src.main.java.com.shaoPATH.elevator.model.MDevice.java", "BodyUseAPI": [], "Fixed commit": "dd67c89211a03811bf40ab1b7ed9afaf57ec855c", "Url": "https://api.github.com/repos/ytuglt/elevator", "Date": "2018-04-30T08:52:29Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2335/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "a11b561c9b4578ea4a962209d16619cecb933cea", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (user.getUsername().equals(\"autouser\")) { mGoogleMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(new com.google.android.gms.maps.model.LatLng(user.getLatitude(), user.getLongitude()), 15)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3086/buggy-version/android.app.src.main.java.com.erikterwiel.mountainviews.TrackerFragment.java", "BodyUseAPI": ["com.erikterwiel.mountainviews.User.getLongitude()", "com.google.android.gms.maps.GoogleMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(new com.google.android.gms.maps.model.LatLng(user.getLatitude(), user.getLongitude()), 15))", "com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(com.google.android.gms.maps.model.LatLng,int)", "com.erikterwiel.mountainviews.User.getLatitude()"], "Fixed commit": "00f81a0b4cd6bba49ed8ad183a6030a5d617f178", "Url": "https://api.github.com/repos/erikterwiel/Summitr", "Date": "2018-02-08T18:42:21Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDriversMarkers) != null) mDriversMarkers.get(i).setPosition(MainActivity.mDriversPositions.get(i));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3864/buggy-version/app.src.main.java.qa.edu.qu.cmps312.safedrivingapplication.fragments.GMapFragment.java", "BodyUseAPI": [], "Fixed commit": "d1f8d292ea7ab076f20807da244b08545c1fb958", "Url": "https://api.github.com/repos/Suleiman-sk1404832/SafeDrivingApplication", "Date": "2018-05-25T16:22:05Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.gla.cvr.gluetools.utils.IsoCountry.parseCountry(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (bestCountry == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2358/buggy-version/gluetools-core.src.main.java.uk.ac.gla.cvr.gluetools.core.collation.populating.regex.IsoCountryMatcherConverter.java", "BodyUseAPI": [], "Fixed commit": "996c593dba6ce4ce28f9441ab0d42decfd98ab3f", "Url": "https://api.github.com/repos/giffordlabcvr/gluetools", "Date": "2018-10-23T14:00:48Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (groupLabel != null) this.group = groupLabel.group();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/90/buggy-version/src.net.muse.command.PrintGroupInfoCommand.java", "BodyUseAPI": ["net.muse.gui.GroupLabel.group()"], "Fixed commit": "066654cf2f16806db39e2b70a11133a350a3dbf6", "Url": "https://api.github.com/repos/muse324/mixtract", "Date": "2018-01-06T15:47:45Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isGameOver()) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/623/buggy-version/src.tictactoe.TicTacToeGame.java", "BodyUseAPI": [], "Fixed commit": "ea35510cc32bb44788e2206a8b4c19af0bf56978", "Url": "https://api.github.com/repos/NatchSkikawe/tictactoe", "Date": "2018-08-17T16:11:52Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.PsiElement.getType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (type instanceof org.ballerinalang.plugins.idea.psi.BallerinaArrayTypeName) { if ((element.getParent().getPrevSibling()) instanceof org.ballerinalang.plugins.idea.psi.BallerinaMapArrayVariableReference) { java.util.List<org.ballerinalang.plugins.idea.psi.BallerinaFunctionDefinition> functionDefinitions = org.ballerinalang.plugins.idea.psi.impl.BallerinaPsiImplUtil.suggestNativeFunctions(((org.ballerinalang.plugins.idea.psi.BallerinaArrayTypeName) (type)).getTypeName()); for (org.ballerinalang.plugins.idea.psi.BallerinaFunctionDefinition functionDefinition : functionDefinitions) { com.intellij.psi.PsiElement identifier = functionDefinition.getIdentifier(); if (identifier != null) { if ((myResult) != null) { myResult.addElement(org.ballerinalang.plugins.idea.completion.BallerinaCompletionUtils.createFunctionLookupElement(functionDefinition, ParenthesisInsertHandler.INSTANCE)); }else if (myElement.getText().equals(identifier.getText())) { add(identifier); } } } } }else if ((type.getParent().getParent()) instanceof org.ballerinalang.plugins.idea.psi.BallerinaBuiltInReferenceTypeName) { java.util.List<org.ballerinalang.plugins.idea.psi.BallerinaFunctionDefinition> functionDefinitions = org.ballerinalang.plugins.idea.psi.impl.BallerinaPsiImplUtil.suggestNativeFunctions(type); for (org.ballerinalang.plugins.idea.psi.BallerinaFunctionDefinition functionDefinition : functionDefinitions) { com.intellij.psi.PsiElement identifier = functionDefinition.getIdentifier(); if (identifier != null) { if ((myResult) != null) { myResult.addElement(org.ballerinalang.plugins.idea.completion.BallerinaCompletionUtils.createFunctionLookupElement(functionDefinition, ParenthesisInsertHandler.INSTANCE)); }else if (myElement.getText().equals(identifier.getText())) { add(identifier); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4862/buggy-version/src.main.java.org.ballerinalang.plugins.idea.psi.scopeprocessors.BallerinaFieldProcessor.java", "BodyUseAPI": ["org.ballerinalang.plugins.idea.psi.impl.BallerinaPsiImplUtil.suggestNativeFunctions(com.intellij.psi.PsiElement)", "type.getParent().getParent()", "com.intellij.psi.PsiElement.getParent()"], "Fixed commit": "e68b6d00b93109e2ffa2348667bc8c8078259449", "Url": "https://api.github.com/repos/Shan1024/ballerina-idea-plugin", "Date": "2018-04-16T10:10:09Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((range.length()) > 0) { try { if (!(new org.openjax.jsonx.runtime.Range(range).isValid(number))) throw new org.openjax.jsonx.runtime.EncodeException((\"Range is not matched: \" + (org.fastjax.util.Strings.toTruncatedString(range, 16)))); } catch (final org.openjax.jsonx.runtime.ParseException e) { throw new org.openjax.jsonx.runtime.ValidationException((\"Invalid range attribute: \" + (org.fastjax.util.Annotations.toSortedString(annotation, AttributeComparator.instance)))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7926/buggy-version/runtime.src.main.java.org.openjax.jsonx.runtime.JxEncoder.java", "BodyUseAPI": ["org.fastjax.util.Strings.toTruncatedString(java.lang.String,int)", "org.openjax.jsonx.runtime.Range.isValid(java.lang.Number)"], "Fixed commit": "9741639458745c5d47166e8d55843b9204eb78a7", "Url": "https://api.github.com/repos/openjax/jsonx", "Date": "2018-10-13T17:30:15Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((o == null) || ((getClass()) != (o.getClass()))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6775/buggy-version/src.main.java.model.Card.java", "BodyUseAPI": [], "Fixed commit": "40b416bae3f44246919f6305429789ad4fda703b", "Url": "https://api.github.com/repos/KnowingQuasar/Speed", "Date": "2018-10-31T07:02:40Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == o) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6775/buggy-version/src.main.java.model.Card.java", "BodyUseAPI": [], "Fixed commit": "40b416bae3f44246919f6305429789ad4fda703b", "Url": "https://api.github.com/repos/KnowingQuasar/Speed", "Date": "2018-10-31T07:02:40Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(profileImageUri.isEmpty())) { profilePicture.setImageURI(android.net.Uri.parse(profileImageUri)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8615/buggy-version/app.src.main.java.com.kin.betmanager.activities.NewBetActivity.java", "BodyUseAPI": ["android.widget.ImageView.setImageURI(android.net.Uri.parse(profileImageUri))", "android.net.Uri.parse(java.lang.String)"], "Fixed commit": "22ee2e9e6be1d375e1da8de69da96d9ac29ebf18", "Url": "https://api.github.com/repos/KinPi/Bet-Manager", "Date": "2018-04-27T15:36:49Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((clas.getText()) == null) || ((clas.getText().length()) < (hu.kfg.naplo.MainActivity.CLASS_MIN_LENGTH))) && ((notification_mode.getValue().equals(\"standins\")) || (notification_mode.getValue().equals(\"true\")))) { hu.kfg.naplo.Toast.makeText(this, R.string.insert_class, Toast.LENGTH_SHORT).show(); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9046/buggy-version/app.src.main.java.hu.kfg.naplo.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c2ee80d5c5982bb6c26c3fda3546842fb33184c1", "Url": "https://api.github.com/repos/hexadec/KFGnaplo", "Date": "2018-04-02T10:07:35Z"},
{"Line": "=>5268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.apimgt.impl.dao.ApiMgtDAO.getApplicationByName(java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (application != null) { java.util.Map<java.lang.String, org.wso2.carbon.apimgt.api.model.OAuthApplicationInfo> keyMap = getOAuthApplications(application.getId()); for (java.util.Map.Entry<java.lang.String, org.wso2.carbon.apimgt.api.model.OAuthApplicationInfo> entry : keyMap.entrySet()) { application.addOAuthApp(entry.getKey(), entry.getValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5777/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.dao.ApiMgtDAO.java", "BodyUseAPI": ["org.wso2.carbon.apimgt.impl.dao.ApiMgtDAO.getOAuthApplications(application.getId())", "org.wso2.carbon.apimgt.api.model.Application.getId()", "org.wso2.carbon.apimgt.api.model.Application.addOAuthApp(entry.getKey(),entry.getValue())"], "Fixed commit": "26ee8a4a7f4926211fd2f2f8c376ff4ddbe763e5", "Url": "https://api.github.com/repos/ChamNDeSilva/carbon-apimgt", "Date": "2018-03-09T14:06:07Z"},
{"Line": "=>3112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.apimgt.impl.APIConsumerImpl.getApplicationWithOAuthApps(java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (application != null) { java.util.Set<org.wso2.carbon.apimgt.api.model.APIKey> keys = getApplicationKeys(application.getId()); for (org.wso2.carbon.apimgt.api.model.APIKey key : keys) { application.addKey(key); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5777/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.APIConsumerImpl.java", "BodyUseAPI": ["org.wso2.carbon.apimgt.api.model.Application.addKey(org.wso2.carbon.apimgt.api.model.APIKey)", "org.wso2.carbon.apimgt.api.model.Application.getId()", "org.wso2.carbon.apimgt.impl.APIConsumerImpl.getApplicationKeys(application.getId())"], "Fixed commit": "26ee8a4a7f4926211fd2f2f8c376ff4ddbe763e5", "Url": "https://api.github.com/repos/ChamNDeSilva/carbon-apimgt", "Date": "2018-03-09T14:06:07Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((struct.get(\"after\")) != null) { struct = ((org.apache.kafka.connect.data.Struct) (struct.get(\"after\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8688/buggy-version/src.main.java.io.confluent.connect.hdfs.partitioner.RecordFieldTimestampExtractor.java", "BodyUseAPI": ["org.apache.kafka.connect.data.Struct.get(java.lang.String)"], "Fixed commit": "e0bd77e54c86f8c1574213411d2e8463d0696e98", "Url": "https://api.github.com/repos/DataPipelineInc/kafka-connect-hdfs", "Date": "2018-09-12T08:56:06Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (commandText.equals(\"logout\")) { history = new seedu.club.logic.CommandHistory(); undoRedoStack = new seedu.club.logic.UndoRedoStack(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2161/buggy-version/src.main.java.seedu.club.logic.LogicManager.java", "BodyUseAPI": [], "Fixed commit": "8c70100dd8ca585c8cb0d9d140994d5ba20776dd", "Url": "https://api.github.com/repos/yash-chowdhary/Club-Connect", "Date": "2018-04-06T04:25:57Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.lang.System.currentTimeMillis()) % 10) == 0) { log.warn((((\"tag is empty \" + tag) + \" or weight is empty \") + weight)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1129/buggy-version/src.main.java.ml.shifu.shifu.udf.EvalScoreUDF.java", "BodyUseAPI": [], "Fixed commit": "6f6f57da5d41b9550559c802625e5b61822e95ad", "Url": "https://api.github.com/repos/ShifuML/shifu", "Date": "2018-04-25T09:55:09Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getArguments()) != null) { documentId = getArguments().getLong(SingleResume.DOCUMENT_KEY); }else { documentId = document.getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7526/buggy-version/app.src.main.java.edu.cnm.deepdive.prodevme.ConfirmDeletion.java", "BodyUseAPI": [], "Fixed commit": "647b69229468c07ffe471ccf0b2e0d1659deef6f", "Url": "https://api.github.com/repos/deep-dive-coding-java-cohort-3/ProDevMe", "Date": "2018-04-13T04:38:16Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((model.getMessageId()) != null) { messageText.setText(model.getMessageText()); messageUser.setText(model.getMessageUser()); messageTime.setText(android.text.format.DateFormat.format(\"dd-MM-yyyy (HH:mm:ss)\", model.getMessageTime())); }else { android.util.Log.d(\"Message\", (((\" Yes \" + temp) + \" this is user \") + (model.getMessageId()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/745/buggy-version/app.src.main.java.com.example.calvinkwan.medium20.MessageActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(model.getMessageText())", "com.example.calvinkwan.medium20.publicMessageChat.getMessageId()", "android.widget.TextView.setText(model.getMessageUser())", "com.example.calvinkwan.medium20.publicMessageChat.getMessageText()", "android.widget.TextView.setText(android.text.format.DateFormat.format(\"dd-MM-yyyy (HH:mm:ss)\", model.getMessageTime()))", "android.text.format.DateFormat.format(java.lang.String,model.getMessageTime())", "com.example.calvinkwan.medium20.publicMessageChat.getMessageUser()", "com.example.calvinkwan.medium20.publicMessageChat.getMessageTime()", "android.util.Log.d(java.lang.String,(((\" Yes \" + temp) + \" this is user \") + (model.getMessageId())))"], "Fixed commit": "a3b85ae001cfa9f5e9264eea56073dc96c929e8f", "Url": "https://api.github.com/repos/hkwan003/Medium", "Date": "2018-03-12T20:19:58Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((robot.rightSonarArray) != null) || ((robot.rightSonarSensor) != null)) { tests.add(new team492.diagnostics.tests.UltrasonicUnpluggedTest(robot::getRightSonarDistance, \"right sonar\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1093/buggy-version/src.team492.diagnostics.OnBoardDiagnostics.java", "BodyUseAPI": [], "Fixed commit": "6946df23396c63fecebb939690cf08aab6791ede", "Url": "https://api.github.com/repos/trc492/Frc2018FirstPowerUp", "Date": "2018-03-22T03:14:49Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((robot.leftSonarArray) != null) || ((robot.leftSonarSensor) != null)) { tests.add(new team492.diagnostics.tests.UltrasonicUnpluggedTest(robot::getLeftSonarDistance, \"left sonar\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1093/buggy-version/src.team492.diagnostics.OnBoardDiagnostics.java", "BodyUseAPI": [], "Fixed commit": "6946df23396c63fecebb939690cf08aab6791ede", "Url": "https://api.github.com/repos/trc492/Frc2018FirstPowerUp", "Date": "2018-03-22T03:14:49Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.inria.jtravis.entities.Build.getAuthor()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (contactAuthor.isPresent()) { text += \"\\tContact: \" + (contactAuthor.get().getEmail()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1533/buggy-version/repairnator.repairnator-pipeline.src.main.java.fr.inria.spirals.repairnator.notifier.FixerBuildNotifier.java", "BodyUseAPI": ["contactAuthor.get().getEmail()", "java.util.Optional<org.kohsuke.github.GitUser>.get()"], "Fixed commit": "6ca8c6625b0cf3ce6a0a6a6a1b9e2182550358c6", "Url": "https://api.github.com/repos/Spirals-Team/repairnator", "Date": "2018-04-04T15:51:30Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.inria.spirals.repairnator.BuildToBeInspected.getPatchedBuild()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (build.getCommitter().isPresent()) { committerEmail = build.getCommitter().get().getEmail(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1533/buggy-version/repairnator.repairnator-scanner.src.main.java.fr.inria.spirals.repairnator.serializer.ScannerDetailedDataSerializer.java", "BodyUseAPI": ["build.getCommitter().get().getEmail()", "build.getCommitter().get()", "fr.inria.jtravis.entities.Build.getCommitter()"], "Fixed commit": "6ca8c6625b0cf3ce6a0a6a6a1b9e2182550358c6", "Url": "https://api.github.com/repos/Spirals-Team/repairnator", "Date": "2018-04-04T15:51:30Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eventType.getNames().get(com.gruuf.model.UserLocale)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(desc)) { desc = eventType.getNames().get(UserLocale.EN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8705/buggy-version/src.main.java.com.gruuf.model.EventTypeDescriptor.java", "BodyUseAPI": [], "Fixed commit": "18f0095f53819a1cfeeaa51524a41db31d0199c7", "Url": "https://api.github.com/repos/lukaszlenart/gruuf-webapp", "Date": "2018-09-13T07:55:25Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gruuf.model.UserLocale.toLocale()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((locale.getCountry()) == null) { return \"???\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8705/buggy-version/src.main.java.com.gruuf.web.actions.BaseAction.java", "BodyUseAPI": [], "Fixed commit": "18f0095f53819a1cfeeaa51524a41db31d0199c7", "Url": "https://api.github.com/repos/lukaszlenart/gruuf-webapp", "Date": "2018-09-13T07:55:25Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((command.length()) == 4) { game.attack(id, attacker, java.lang.Integer.parseInt(command.substring(2))); }else { int enemy = charToInt(command.charAt(2)); game.attack(id, attacker, enemy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5114/buggy-version/src.cardgame.ai.MCTSPlayer.java", "BodyUseAPI": ["cardgame.ai.MCTSPlayer.charToInt(char)", "cardgame.logic.Game.attack(int,int,int)", "java.lang.String.charAt(int)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "db6af00b3d602a38ffc7a617bd5d72d921b45792", "Url": "https://api.github.com/repos/fh-la-cardgame/cardgame", "Date": "2018-05-14T09:54:57Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id) != (that.id)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1310/buggy-version/src.main.java.org.spectrumauctions.sats.core.bidlang.generic.GenericValue.java", "BodyUseAPI": [], "Fixed commit": "c8205a4cec8a50674fc415cf6e3ed337451d54fd", "Url": "https://api.github.com/repos/spectrumauctions/sats", "Date": "2018-04-14T07:03:37Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.netty.handler.codec.http.FullHttpRequest.content()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (bb.hasArray()) { return bb.array(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8845/buggy-version/riptide-stack.src.main.java.rd.riptide.stack.apiserv.RipAmberInput.java", "BodyUseAPI": ["io.netty.buffer.ByteBuf.array()"], "Fixed commit": "38e1e3578704a3ea144509cdd4926b11d41587e7", "Url": "https://api.github.com/repos/randondiesel/riptide", "Date": "2018-08-30T20:46:04Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (controlState(_textField)) _textField.selectAll();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2142/buggy-version/entirej-rwt.src.org.entirej.applicationframework.rwt.renderers.item.EJRWTNumberItemRenderer.java", "BodyUseAPI": ["org.entirej.applicationframework.rwt.renderers.item.EJRWTNumberItemRenderer.3.selectAll()"], "Fixed commit": "9b30f37cc4c080f667d69628c530a1df0fc4bc85", "Url": "https://api.github.com/repos/entirej/rap", "Date": "2018-01-11T05:04:38Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (controlState(_textField)) _textField.setText(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2142/buggy-version/entirej-rwt.src.org.entirej.applicationframework.rwt.renderers.item.EJRWTNumberItemRenderer.java", "BodyUseAPI": ["1.setText(java.lang.String)"], "Fixed commit": "9b30f37cc4c080f667d69628c530a1df0fc4bc85", "Url": "https://api.github.com/repos/entirej/rap", "Date": "2018-01-11T05:04:38Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (controlState(_textField)) _textField.setText(_decimalFormatter.format(value));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2142/buggy-version/entirej-rwt.src.org.entirej.applicationframework.rwt.renderers.item.EJRWTNumberItemRenderer.java", "BodyUseAPI": ["1.setText(java.lang.String)"], "Fixed commit": "9b30f37cc4c080f667d69628c530a1df0fc4bc85", "Url": "https://api.github.com/repos/entirej/rap", "Date": "2018-01-11T05:04:38Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (actualLength > 0) { result &= (actual[(i % actualLength)]) == (given[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3633/buggy-version/community.kernel.src.main.java.org.neo4j.kernel.impl.security.LegacyCredential.java", "BodyUseAPI": [], "Fixed commit": "a34a751e221f820a1cc48a34d4b74dce51a99a67", "Url": "https://api.github.com/repos/graphstackio/neo4j", "Date": "2018-08-31T07:24:15Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.apache.shiro.util.ThreadContext.getSecurityManager()) != null) { subject = org.apache.shiro.SecurityUtils.getSubject(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6586/buggy-version/arttime.arttime-webapp.src.main.java.com.artezio.arttime.admin_tool.log.LogInterceptor.java", "BodyUseAPI": [], "Fixed commit": "b8a4839d343b39d2dc9edb86ed39adb560941016", "Url": "https://api.github.com/repos/andgeth/ART-TIME", "Date": "2018-03-14T09:14:15Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sender instanceof net.minecraft.entity.player.EntityPlayerMP) return PvPMode.cfg.func_152596_g(((net.minecraft.entity.player.EntityPlayerMP) (sender)).getGameProfile());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8151/buggy-version/main.java.pvpmode.PvPUtils.java", "BodyUseAPI": [], "Fixed commit": "e7ca584792903e9a49be540f966d11e1d9b7ae08", "Url": "https://api.github.com/repos/Lembas-Modding-Team/pvp-mode", "Date": "2018-04-15T14:14:38Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pvpmode.PvPUtils.getPlayer(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (player == null) throw new java.lang.NullPointerException(((\"Player \" + (args[0])) + \" does not exist!\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8151/buggy-version/main.java.pvpmode.command.PvPCommandAdmin.java", "BodyUseAPI": [], "Fixed commit": "e7ca584792903e9a49be540f966d11e1d9b7ae08", "Url": "https://api.github.com/repos/Lembas-Modding-Team/pvp-mode", "Date": "2018-04-15T14:14:38Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getSites().contains(change.position)) logFitnessPosition = logFitness[change.position];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/183/buggy-version/src.santa.simulator.fitness.AbstractSiteFitnessFactor.java", "BodyUseAPI": [], "Fixed commit": "5cb157576d243fbe60aef70afc1ac8aac3d4be0d", "Url": "https://api.github.com/repos/brj1/santa-sim", "Date": "2018-08-13T18:42:36Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (layout.onBackPressed()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7026/buggy-version/android.app.src.main.java.com.reactnativenavigation.controllers.NavigationActivity.java", "BodyUseAPI": [], "Fixed commit": "c02ae8a6a3832c1d159ab1593b007728ce30f660", "Url": "https://api.github.com/repos/Ranatchai/react-native-navigation", "Date": "2018-04-20T08:32:31Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(NavigationApplication.instance.clearHostOnActivityDestroy())) { this.moveTaskToBack(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7026/buggy-version/android.app.src.main.java.com.reactnativenavigation.controllers.NavigationActivity.java", "BodyUseAPI": [], "Fixed commit": "c02ae8a6a3832c1d159ab1593b007728ce30f660", "Url": "https://api.github.com/repos/Ranatchai/react-native-navigation", "Date": "2018-04-20T08:32:31Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(NavigationApplication.instance.clearHostOnActivityDestroy())) { this.moveTaskToBack(true); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7026/buggy-version/android.app.src.main.java.com.reactnativenavigation.controllers.NavigationActivity.java", "BodyUseAPI": [], "Fixed commit": "c02ae8a6a3832c1d159ab1593b007728ce30f660", "Url": "https://api.github.com/repos/Ranatchai/react-native-navigation", "Date": "2018-04-20T08:32:31Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((args.length) > 0) { this.action = args[0]; this.parameters = new java.lang.String[(args.length) - 1]; java.lang.System.arraycopy(args, 1, parameters, 0, ((args.length) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2712/buggy-version/src.main.java.com.bjss.support.Program.java", "BodyUseAPI": [], "Fixed commit": "41f940a35ff44510a2c227ad213fc40de0c6d2a0", "Url": "https://api.github.com/repos/sb-dev/java-app", "Date": "2018-07-13T11:11:01Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/550/buggy-version/01Recursion.Recursion.java", "BodyUseAPI": [], "Fixed commit": "878809d3ad758b69019feab4452979e549d6c0aa", "Url": "https://api.github.com/repos/wzhou2/MKS22X", "Date": "2018-02-05T01:32:08Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((object1 instanceof java.math.BigDecimal) && (object2 instanceof java.math.BigDecimal)) { return (((java.math.BigDecimal) (object1)).compareTo(((java.math.BigDecimal) (object2)))) != 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6953/buggy-version/src.main.java.org.zhuduan.compareutil.CompareUtils.java", "BodyUseAPI": [], "Fixed commit": "ca5c8316abcfde4baf526a8fe63473e2c3f7b7cc", "Url": "https://api.github.com/repos/zhuduan/CompareUtil", "Date": "2018-04-28T06:58:44Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hour) == 24) { hour = 0; day = ((day) + 1) % 7; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5528/buggy-version/app.src.main.java.com.example.michaelalperovich.schooliscool.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6fc7d0ed726c3b6aab3700e327de81993ec1b231", "Url": "https://api.github.com/repos/michael-alperovich/SchoolisCool", "Date": "2018-02-24T20:56:10Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((configuration.isDisableSubtitles()) || ((params.sid) == null)) { transcodeOptions.add(\"-sn\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9901/buggy-version/src.main.java.net.pms.encoders.FFMpegVideo.java", "BodyUseAPI": [], "Fixed commit": "c8c6633c34c5d8d416cc2219ca7a5ee6cf9c9a22", "Url": "https://api.github.com/repos/DigitalMediaServer/DigitalMediaServer", "Date": "2018-05-16T18:04:18Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.entity.player.EntityPlayer.getCapability(CapabilityRegistry.CAPABILITY_EQUIPMENT,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((type == (thebetweenlands.common.capability.equipment.EnumEquipmentInventory.AMULET)) && (i >= (equipmentCapability.getAmuletSlots()))) { com.m4thg33k.tombmanygraves.api.inventory.SpecialInventoryHelper.dropItem(player, graveItem); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5916/buggy-version/TheBetweenlands.src.main.java.com.m4thg33k.tombmanyplugins_thebetweenlands.TombManyPluginsTheBetweenlands.java", "BodyUseAPI": [], "Fixed commit": "4ab6d5a7183eac27bf7392dd6a37cd01262d212c", "Url": "https://api.github.com/repos/M4thG33k/TombManyPlugins", "Date": "2018-05-14T00:06:35Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nuxeo.website.preview.WebsitePreviewUtils.getMainHtmlDocument(ctx.getCoreSession(),org.nuxeo.ecm.core.api.DocumentModel)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (doc.hasSchema(\"file\")) { org.nuxeo.ecm.core.api.Blob b = ((org.nuxeo.ecm.core.api.Blob) (doc.getPropertyValue(\"file:content\"))); javax.ws.rs.core.Response.ResponseBuilder resp = javax.ws.rs.core.Response.ok(b.getFile()); r = resp.build(); }else { r = javax.ws.rs.core.Response.status(Status.NOT_FOUND).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6409/buggy-version/nuxeo-website-preview-plugin.src.main.java.org.nuxeo.website.preview.WebsiteObject.java", "BodyUseAPI": ["org.nuxeo.ecm.core.api.DocumentModel.getPropertyValue(java.lang.String)"], "Fixed commit": "f7f389bfa4c7208efb7ac79e18642a6684a59dbb", "Url": "https://api.github.com/repos/nuxeo-sandbox/nuxeo-website-preview", "Date": "2018-07-27T22:49:49Z"},
{"Line": "=>988", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((typeToCast.getFirstChild(\"root_type\").getChildren(\"bool_type\").size()) > 0) { response.setValue(message.boolValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4645/buggy-version/javaServices.coreJavaServices.src.joliex.meta.MetaJolie.java", "BodyUseAPI": [], "Fixed commit": "fd4a234793a4a81608db547526711e176e4250bd", "Url": "https://api.github.com/repos/klag/jolie", "Date": "2018-06-15T09:18:55Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getFile()) != null) { updateCodeViewer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6644/buggy-version/org.jtool.changereplayer.src.org.jtool.changetracker.replayer.ui.CodeComparingView.java", "BodyUseAPI": [], "Fixed commit": "c58bd17def019d585c960369d4da265a3a6b534a", "Url": "https://api.github.com/repos/katsuhisamaruyama/ChangeTracker2", "Date": "2018-10-29T09:25:25Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getFile()) != null) { updateCodeViewer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6644/buggy-version/org.jtool.changereplayer.src.org.jtool.changetracker.replayer.ui.CodeAnimatingView.java", "BodyUseAPI": [], "Fixed commit": "c58bd17def019d585c960369d4da265a3a6b534a", "Url": "https://api.github.com/repos/katsuhisamaruyama/ChangeTracker2", "Date": "2018-10-29T09:25:25Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.ui.getBoard().getTiles().get(new models.Tuple<java.lang.Character, java.lang.Integer>(this.x, this.y)).getPiece()) != null) { UI.from = this.ui.getBoard().getTiles().get(new models.Tuple<java.lang.Character, java.lang.Integer>(this.x, this.y)); }else { java.lang.System.out.println(\"Please select a piece to move\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1141/buggy-version/src.game.UIButtonHandler.java", "BodyUseAPI": ["this.ui.getBoard().getTiles().get(models.Tuple<java.lang.Character, java.lang.Integer>)", "game.UI.getBoard()", "this.ui.getBoard().getTiles()"], "Fixed commit": "498fda6f9cae1e6b1c1cdf3557634812db0f056e", "Url": "https://api.github.com/repos/Jarkob/Chess", "Date": "2018-08-11T14:04:58Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((locationClient) == null) startLocationUpdates();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1586/buggy-version/app.src.main.java.net.sytes.schneider.mobilechill.LocationFineService.java", "BodyUseAPI": [], "Fixed commit": "a35e7b06f2161a55f6fb80dd2f420aa0e7352e06", "Url": "https://api.github.com/repos/Zerberuss/MobileChill", "Date": "2018-01-08T22:11:04Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newState == (SlidingUpPanelLayout.PanelState.ANCHORED)) { slidingUpPanelLayout.setPanelState(SlidingUpPanelLayout.PanelState.COLLAPSED); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1540/buggy-version/app.src.main.java.xyz.lostalishar.nyaanyaamusicplayer.activity.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "91550eaf1ac3646ff501da93ac16f42433a2a17d", "Url": "https://api.github.com/repos/Nydrani/NyaaNyaaMusicPlayer", "Date": "2018-04-07T05:54:20Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (emailAddresses != null) { for (java.lang.String email : emailAddresses) { user = userStore.findUniqueBy(\"email\", email.trim()); if (user != null) { com.gruuf.web.actions.BaseLoginAction.LOG.debug(\"Found matching existing user with email {}\", email); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/816/buggy-version/src.main.java.com.gruuf.web.actions.BaseLoginAction.java", "BodyUseAPI": [], "Fixed commit": "4d7624fbc8c4eb20077bf1f3a425522c34c9bbb1", "Url": "https://api.github.com/repos/lukaszlenart/gruuf-webapp", "Date": "2018-09-27T07:25:13Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gruuf.model.User.getEmail()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (emailAddress != null) { user = registerAndLogin(java.util.Collections.singletonList(emailAddress), null, firstName, lastName, facebookId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/816/buggy-version/src.main.java.com.gruuf.web.actions.FacebookLoginAction.java", "BodyUseAPI": ["com.gruuf.web.actions.FacebookLoginAction.registerAndLogin(java.util.List<java.lang.String>,<nulltype>,java.lang.String,java.lang.String,java.lang.String)", "java.util.Collections.singletonList(java.lang.String)"], "Fixed commit": "4d7624fbc8c4eb20077bf1f3a425522c34c9bbb1", "Url": "https://api.github.com/repos/lukaszlenart/gruuf-webapp", "Date": "2018-09-27T07:25:13Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset >= size) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8160/buggy-version/logic.Field.java", "BodyUseAPI": [], "Fixed commit": "2b40ab70fbca1b1fd33a92a5c7eea2c26ce46b70", "Url": "https://api.github.com/repos/PoppyFanboy/Snake-Game", "Date": "2018-08-27T10:50:33Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node instanceof shsjxzh.compiler.FrontEnd.ArrayIndexNode) || (node instanceof shsjxzh.compiler.FrontEnd.StringLiteralNode)) { checkTypeDefinition(node.exprType, node.getPos()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7466/buggy-version/src.shsjxzh.compiler.FrontEnd.SemanticAnalyzer.java", "BodyUseAPI": ["shsjxzh.compiler.FrontEnd.ExprNode.getPos()", "shsjxzh.compiler.FrontEnd.SemanticAnalyzer.checkTypeDefinition(node.exprType,node.getPos())"], "Fixed commit": "bbeafcc749c9ff40d1599104f9db3e4b0f9794ba", "Url": "https://api.github.com/repos/shsjxzh/X-Compiler", "Date": "2018-06-04T17:08:09Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fileTree.classes.TreeSingleton.getInstance().getTreeView()) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7534/buggy-version/src.main.java.tools.TreeTool.java", "BodyUseAPI": [], "Fixed commit": "d835c8e1b10e3bc2e4e0a30e1fbd0e4e4bfd0f5c", "Url": "https://api.github.com/repos/Alexander-Lukacs/VFS_GUI", "Date": "2018-03-12T11:45:28Z"},
{"Line": "=>589", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(swissTournamentRunner.Tournament.dropped.contains(nameToDrop))) { swissTournamentRunner.Tournament.dropped.add(nameToDrop); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2960/buggy-version/src.swissTournamentRunner.Tournament.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "f687ea3b3cb3575df86317b20d9a04c96f3fb78a", "Url": "https://api.github.com/repos/Ferrerothorn/BTC", "Date": "2018-04-09T14:33:29Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(t.getCause().equals(t))) { t = t.getCause(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/744/buggy-version/APV.src.main.java.com.arranger.apv.util.Configurator.java", "BodyUseAPI": ["java.lang.Throwable.getCause()"], "Fixed commit": "3c125fa89c9081b7efe273aa06be0ff64476eddc", "Url": "https://api.github.com/repos/mimelator/apv", "Date": "2018-04-19T19:40:41Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (contextSequence == null) { if (contextItem == null) { throw new org.exist.xquery.functions.fn.XPathException(this, ErrorCodes.XPDY0002, \"Context item is absent\"); } contextSequence = contextItem.toSequence(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8212/buggy-version/src.org.exist.xquery.functions.fn.FnHasChildren.java", "BodyUseAPI": [], "Fixed commit": "a8ffe4f4b906da06c8f738e7b534fe6d981511d5", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2018-02-23T13:28:19Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.shop.model.OnlineCounter.online) < 0) com.shop.model.OnlineCounter.online = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3603/buggy-version/src.com.shop.model.OnlineCounter.java", "BodyUseAPI": [], "Fixed commit": "9fb03063e12a8b9866211e0e316634f6f2cef091", "Url": "https://api.github.com/repos/lbh0830/EShop", "Date": "2018-07-06T00:58:27Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ambariRepositoryVersionService.isVersionNewerOrEqualThanLimited(ambariRepo::getVersion, com.sequenceiq.cloudbreak.service.cluster.ambari.AmbariRepositoryVersionService.AMBARI_VERSION_2_7_2_0)) { ldapConfigs.put(\"ambari.ldap.advanced.collision_behavior\", \"convert\"); }else { ldapConfigs.put(\"ambari.ldap.advance.collision_behavior\", \"convert\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5323/buggy-version/core.src.main.java.com.sequenceiq.cloudbreak.service.cluster.ambari.AmbariLdapService.java", "BodyUseAPI": [], "Fixed commit": "3b81a5f858e26d155569637ac9479eb1ad2ab094", "Url": "https://api.github.com/repos/hortonworks/cloudbreak", "Date": "2018-10-24T07:19:45Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((VCFDiff.filter) && ((VCFDiff.svType) == (VCFDiff.INSERT))) && (!(line.contains(\"SVTYPE=INS\")))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1024/buggy-version/VCFDiff.java", "BodyUseAPI": [], "Fixed commit": "e403bd125e5e42c50eb6e7f1c83237887f52d759", "Url": "https://api.github.com/repos/mkirsche/InsertionFinding", "Date": "2018-09-26T01:42:59Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!parameterAdded) { hudson.model.ParametersAction parameters = build.getAction(hudson.model.ParametersAction.class); if (((parameters != null) && ((parameters.getParameters()) != null)) && (!(parameters.getParameters().isEmpty()))) { buffer.add(\"Parameters: \", timestamp); for (hudson.model.ParameterValue action : parameters.getParameters()) { java.lang.String paramLine = java.lang.String.format(\"%s = '%s'\", action.getName(), (action.isSensitive() ? \"*****\" : action.getValue())); buffer.add(paramLine, timestamp); } } parameterAdded = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7710/buggy-version/src.main.java.jenkins.plugins.awslogspublisher.AWSLogsHelper.java", "BodyUseAPI": [], "Fixed commit": "636c47f5a8462adce1c49c2910fa85d79638068b", "Url": "https://api.github.com/repos/jenkinsci/aws-cloudwatch-logs-publisher-plugin", "Date": "2018-10-10T16:55:26Z"},
{"Line": "=>818", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gui.GUI.firstTime) main.Global.init();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1117/buggy-version/src.gui.GUI.java", "BodyUseAPI": [], "Fixed commit": "c8bea3ae87e0a513d0c4834fc7618550ca600052", "Url": "https://api.github.com/repos/tchase2/SER322_Project_Group1", "Date": "2018-04-27T23:43:13Z"},
{"Line": "=>902", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getProduct().isActive())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8664/buggy-version/core.broadleaf-framework.src.main.java.org.broadleafcommerce.core.catalog.domain.SkuImpl.java", "BodyUseAPI": [], "Fixed commit": "cc0e26527536bb06e2f3084e481ec6932118578a", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2018-10-02T14:19:33Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (actions.isEmpty()) { calculateActions(game); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9476/buggy-version/Mage.Server.Plugins.Mage.Player.AI.MA.src.mage.player.ai.ComputerPlayer7.java", "BodyUseAPI": [], "Fixed commit": "dac8f2dfe8b0bd9fbaae57a156a60825c322f6ef", "Url": "https://api.github.com/repos/hooptie45/mage", "Date": "2018-03-10T18:59:59Z"},
{"Line": "=>793", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getBaseMetaTileEntity().getMetaTileID()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tID >= 211) && (tID <= 218)) { if (gregtech.api.util.GT_OreDictUnificator.isItemStackInstanceOf(aStack, \"circuitBasic\")) return true; if (gregtech.api.util.GT_OreDictUnificator.isItemStackInstanceOf(aStack, \"circuitAdvanced\")) return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6405/buggy-version/src.main.java.gregtech.api.metatileentity.implementations.GT_MetaTileEntity_BasicMachine_GT_Recipe.java", "BodyUseAPI": [], "Fixed commit": "5edea360e4b332256d44f2d4cc9ce1a6dc4da890", "Url": "https://api.github.com/repos/Frytes/GregTech5.09UnofficialBuild", "Date": "2018-09-10T16:05:29Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (property != null) { if (property.equals(\"vid\")) { return ((this.numRemoteVertices) / ((this.numVertices) + (this.numRemoteVertices))) * avgdeg; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1577/buggy-version/src.main.java.in.dream_lab.goffish.godb.Hueristics.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "b728053558d9007b4e127d0ff3db16fbbd827d5f", "Url": "https://api.github.com/repos/abhilashsharma/CostModelSimulator", "Date": "2018-01-11T13:36:39Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (property != null) { if (property.equals(\"vid\")) { return (numEdges) / (numVertices); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1577/buggy-version/src.main.java.in.dream_lab.goffish.godb.Hueristics.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "b728053558d9007b4e127d0ff3db16fbbd827d5f", "Url": "https://api.github.com/repos/abhilashsharma/CostModelSimulator", "Date": "2018-01-11T13:36:39Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((grid[(randomRow + 1)][randomCol]) == (controller.Controller.SMOKE)) { grid[(randomRow + 1)][randomCol] = controller.Controller.WATER; grid[randomRow][randomCol] = controller.Controller.SMOKE; }else if ((grid[(randomRow + 1)][randomCol]) == (controller.Controller.ACID)) { grid[(randomRow + 1)][randomCol] = controller.Controller.EMPTY; grid[randomRow][randomCol] = controller.Controller.EMPTY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5076/buggy-version/src.controller.Controller.java", "BodyUseAPI": [], "Fixed commit": "0237408b0e17b945b5c69ace23f0c48264914eda", "Url": "https://api.github.com/repos/Xerphy/DustBin", "Date": "2018-05-30T02:45:19Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (possibilities == 0) return \"STOPPED\"; else return dirVector[((int) ((java.lang.Math.random()) * possibilities))];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5579/buggy-version/engine.Ghost.java", "BodyUseAPI": [], "Fixed commit": "a5043a1a374a49f3e7bd2c45eef145fc427cce7e", "Url": "https://api.github.com/repos/igornerest/pacman-game", "Date": "2018-07-24T21:40:13Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.geometry) != null) { feature = ((org.locationtech.jts.geom.Geometry) (indoorGMLMap.getFeature4Geometry(this.geometry))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1271/buggy-version/igml-feature.src.main.java.edu.pnu.stem.feature.State.java", "BodyUseAPI": [], "Fixed commit": "e55abd9974a226df373deb59e7d3b6823d6f21cb", "Url": "https://api.github.com/repos/STEMLab/InFactory", "Date": "2018-10-05T09:38:48Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((headerViewHeight) == 0) { albumArtImageView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7413/buggy-version/app.src.main.java.com.kabouzeid.gramophone.ui.activities.AlbumDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "55146753f28893442d16a3381d8b7f3337854bcf", "Url": "https://api.github.com/repos/gedoor/Phonograph", "Date": "2018-04-27T22:55:27Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.modeldriven.alf.syntax.units.RootNamespace.getRootScope().getSequenceFunction(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (sequenceFunction instanceof org.modeldriven.alf.syntax.common.ExternalElementReference) { return sequenceFunction.getImpl().getUml(); }else { org.modeldriven.alf.fuml.mapping.FumlMapping mapping = ((org.modeldriven.alf.fuml.mapping.common.ElementReferenceMapping) (this.fumlMap(sequenceFunction))).getMapping(); return !(mapping instanceof org.modeldriven.alf.fuml.mapping.units.ClassifierDefinitionMapping) ? null : ((org.modeldriven.alf.fuml.mapping.units.ClassifierDefinitionMapping) (mapping)).getClassifier(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6471/buggy-version/org.modeldriven.alf.src.org.modeldriven.alf.fuml.mapping.expressions.InvocationExpressionMapping.java", "BodyUseAPI": ["((org.modeldriven.alf.fuml.mapping.common.ElementReferenceMapping) (this.fumlMap(sequenceFunction))).getMapping()", "org.modeldriven.alf.syntax.common.ElementReference.getImpl()", "org.modeldriven.alf.fuml.mapping.expressions.InvocationExpressionMapping.fumlMap(org.modeldriven.alf.syntax.common.ElementReference)", "sequenceFunction.getImpl().getUml()"], "Fixed commit": "a5863fb7b716de97d476956b377e0bcfbccc303a", "Url": "https://api.github.com/repos/ModelDriven/Alf-Reference-Implementation", "Date": "2018-02-27T21:40:55Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((savedInstanceState != null) && (savedInstanceState.containsKey(com.cmtruong.udacity.views.MainActivity.ITEM_KEY))) { android.util.Log.d(com.cmtruong.udacity.views.MainActivity.TAG, (\"onCreate: - Restore data: \" + (savedInstanceState.getParcelableArrayList(com.cmtruong.udacity.views.MainActivity.ITEM_KEY)))); hideProgress(); setItems(savedInstanceState.<com.cmtruong.udacity.models.Movie>getParcelableArrayList(com.cmtruong.udacity.views.MainActivity.ITEM_KEY)); }else { mPresenter.onResume(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9871/buggy-version/app.src.main.java.com.cmtruong.udacity.views.MainActivity.java", "BodyUseAPI": ["android.os.Bundle.getParcelableArrayList(java.lang.String)", "com.cmtruong.udacity.views.MainActivity.setItems(savedInstanceState.<com.cmtruong.udacity.models.Movie>getParcelableArrayList(com.cmtruong.udacity.views.MainActivity.ITEM_KEY))", "android.os.Bundle.getParcelableArrayList(java.lang.String)", "android.util.Log.d(java.lang.String,(\"onCreate: - Restore data: \" + (savedInstanceState.getParcelableArrayList(com.cmtruong.udacity.views.MainActivity.ITEM_KEY))))"], "Fixed commit": "230d2d0f4019a7bd8a751f53d218154eb4df5dc6", "Url": "https://api.github.com/repos/cminhtruong/popular_movie", "Date": "2018-04-21T18:47:26Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Reverse.getReverse(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (revNum == num) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6701/buggy-version/Java.Driver.java", "BodyUseAPI": [], "Fixed commit": "f0124834cdedfec51f0c8fa9143d4f64c81e3427", "Url": "https://api.github.com/repos/little-aeinstein/Emirp", "Date": "2018-07-21T12:53:07Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (top.yeonon.lmserver.http.LmResponse.class.getSimpleName().equals(typeSimpleName)) { args[(i - 1)] = response; }else { switch (typeSimpleName) { case \"Integer\" : args[(i - 1)] = request.getIntegerParam(s); break; case \"Long\" : args[(i - 1)] = request.getLongParam(s); break; case \"String\" : args[(i - 1)] = request.getStringParam(s); break; case \"Boolean\" : args[(i - 1)] = request.getBooleanParam(s); break; case \"Float\" : args[(i - 1)] = request.getFloatParam(s); break; case \"Double\" : args[(i - 1)] = request.getDoubleParam(s); break; default : args[(i - 1)] = request.getParam(s); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6660/buggy-version/src.main.java.top.yeonon.lmserver.controller.LmHttpHandler.java", "BodyUseAPI": [], "Fixed commit": "94757465fb50b35109f0387fe344fe343d7ef2d2", "Url": "https://api.github.com/repos/Weiyanyu/LmServer", "Date": "2018-07-04T08:16:36Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (element.equals(\"\")) { throw new java.lang.UnsupportedOperationException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6152/buggy-version/02OrderedSuperArray.SuperArray.java", "BodyUseAPI": [], "Fixed commit": "dcf2917db19cbd12065ef91dfd208ce890db7e89", "Url": "https://api.github.com/repos/jrubin13/MKS21X", "Date": "2018-01-05T02:20:07Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((injectorFactory) != null) { providerFactory.setInjectorFactory(injectorFactory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/517/buggy-version/resteasy-jaxrs.src.main.java.org.jboss.resteasy.spi.ResteasyDeployment.java", "BodyUseAPI": [], "Fixed commit": "1636fbf5edceb8829c8c8c2e034d5e7e3899e744", "Url": "https://api.github.com/repos/jimma/Resteasy", "Date": "2018-07-02T08:32:28Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dayFilter != null) && ((day + 1) != dayFilter)) { }else if ((day < (n.getDayNumber())) || ((n.isInProgress()) && (!(n.isDay)))) { sb.add(new shared.event.Header(day, shared.logic.Narrator.NIGHT_START, n)); sb.add(accessNightChats(day, keys), keys); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1690/buggy-version/event.EventManager.java", "BodyUseAPI": ["shared.event.EventList.add(shared.event.Header)", "shared.event.EventList.add(shared.event.EventList,java.lang.String[])", "shared.event.EventManager.accessNightChats(int,java.lang.String[])"], "Fixed commit": "1cb2f0e38b0499d7ae8c5f33c4461fec7ecc4df6", "Url": "https://api.github.com/repos/vossnarrator/TheNarrator", "Date": "2018-07-21T20:18:36Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sre.getStatus().getCause()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (cause instanceof rx.exceptions.CompositeException) { rx.exceptions.CompositeException composite = ((rx.exceptions.CompositeException) (cause)); causes = composite.getExceptions(); }else { causes = new java.util.ArrayList<java.lang.Throwable>(); causes.add(cause); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3911/buggy-version/web.src.main.java.org.hillview.RpcTarget.java", "BodyUseAPI": ["java.util.List<java.lang.Throwable>.add(java.lang.Throwable)"], "Fixed commit": "dce241d7093d4ce40ea6570b988bd41c6d6341c3", "Url": "https://api.github.com/repos/vmware/hillview", "Date": "2018-05-09T17:32:04Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 24) imageUri = android.support.v4.content.FileProvider.getUriForFile(this, \"com.jmp.atendimentoaocidadao.fileprovider\", getOutputMediaFile()); else imageUri = android.net.Uri.fromFile(getOutputMediaFile());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/688/buggy-version/app.src.main.java.com.jmp.atendimentoaocidadao.main.NewProblemActivity.java", "BodyUseAPI": [], "Fixed commit": "d2349916221c58b67016d084e1a5563b327e1ef2", "Url": "https://api.github.com/repos/joaoroberto01/AtendimentoAoCidadao", "Date": "2018-04-13T15:07:26Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (degree < 0) degree += 360;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5240/buggy-version/app.src.main.java.io.pslab.activity.CompassActivity.java", "BodyUseAPI": [], "Fixed commit": "b1fe66cf545a4165f6a7c4826e4ead72ba78023c", "Url": "https://api.github.com/repos/abhinavraj23/pslab-android", "Date": "2018-08-06T13:53:39Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (degree < 0) degree += 360;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5240/buggy-version/app.src.main.java.io.pslab.activity.CompassActivity.java", "BodyUseAPI": [], "Fixed commit": "b1fe66cf545a4165f6a7c4826e4ead72ba78023c", "Url": "https://api.github.com/repos/abhinavraj23/pslab-android", "Date": "2018-08-06T13:53:39Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(uk.q3c.krail.core.guice.InjectorHolder.hasInjector())) { uk.q3c.krail.core.guice.InjectorFactory factory = new uk.q3c.krail.core.guice.InjectorFactory(); factory.createInjector(RuntimeEnvironment.SERVLET); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3355/buggy-version/src.main.java.uk.q3c.krail.core.guice.DefaultServletContextListener.java", "BodyUseAPI": [], "Fixed commit": "cf8fa357a1ee166db7e8a668f7ab4674b20c59d9", "Url": "https://api.github.com/repos/KrailOrg/krail", "Date": "2018-04-15T20:45:09Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((builder.getLevel()) == (Level.BASIC)) || ((builder.getLevel()) == (Level.BODY))) { com.dkorobtsov.logging.Printer.logLines(builder.getType(), com.dkorobtsov.logging.Printer.OMITTED_RESPONSE, builder.getLogger(), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5668/buggy-version/lib.src.main.java.com.dkorobtsov.logging.Printer.java", "BodyUseAPI": ["com.dkorobtsov.logging.Printer.logLines(builder.getType(),java.lang.String[],builder.getLogger(),boolean)", "LoggingInterceptor.Builder.getType()", "LoggingInterceptor.Builder.getLogger()"], "Fixed commit": "670082eae3a843fadfe69436074ac647179b6485", "Url": "https://api.github.com/repos/dkorobtsov/LoggingInterceptor", "Date": "2018-07-15T18:17:49Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ed.getText().toString().equals(\"\")) || (ed2.getText().toString().equals(\"\"))) android.widget.Toast.makeText(this, \"\u8bf7\u8f93\u5165\u9700\u8981\u6bd4\u8f83\u7684\u6570\u5b57\", Toast.LENGTH_SHORT).show(); else { android.widget.Toast.makeText(this, (\"\u8f83\u5927\u7684\u6570\u662f\" + (myBinder.compare(ed.getText().toString(), ed2.getText().toString()))), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9220/buggy-version/app.src.main.java.com.example.krokky.plus.MainActivity.java", "BodyUseAPI": ["CompareService.MyBinder.compare(ed.getText().toString(),ed2.getText().toString())", "ed2.getText().toString()", "android.widget.Toast.makeText(com.example.krokky.plus.MainActivity,(\"\u8f83\u5927\u7684\u6570\u662f\" + (myBinder.compare(ed.getText().toString(), ed2.getText().toString()))),Toast.LENGTH_LONG)", "android.widget.Toast.makeText(this, (\"\u8f83\u5927\u7684\u6570\u662f\" + (myBinder.compare(ed.getText().toString(), ed2.getText().toString()))), Toast.LENGTH_LONG).show()", "android.widget.EditText.getText()", "android.widget.EditText.getText()", "ed.getText().toString()"], "Fixed commit": "e603fc1a8ec36808993255404a5d2ce66620e69f", "Url": "https://api.github.com/repos/Job-Simth/Compare", "Date": "2018-05-23T13:48:43Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (EDatabaseTypeName.MSSQL.getDisplayName().equals(info.getDbType())) { createStatament = \"conn.createStatement()\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6178/buggy-version/main.plugins.org.talend.designer.core.src.main.java.org.talend.designer.core.ui.editor.properties.controllers.GuessSchemaProcess.java", "BodyUseAPI": [], "Fixed commit": "246019af83919be404ef14560a1450ffacfd643d", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2018-10-15T01:55:08Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lineArray[penaltyColumn]) == '.') { int[] forcedList = new int[]{ }; commons.OutputWriter.writeFile(forcedList, 0, \"invalid penalty\"); java.lang.System.exit(0); }else if (((lineArray[penaltyColumn]) == ' ') & (!(penaltyBuffer.isEmpty()))) { if ((java.lang.Integer.parseInt(penaltyBuffer)) < 0) { int[] forcedList = new int[]{ }; commons.OutputWriter.writeFile(forcedList, 0, \"invalid penalty\"); java.lang.System.exit(0); } penaltyMatrix[machine][task] = java.lang.Integer.parseInt(penaltyBuffer); penaltyBuffer = \"\"; task++; }else if ((lineArray[penaltyColumn]) != ' ') { penaltyBuffer += lineArray[penaltyColumn]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7063/buggy-version/Java449Final.src.parse.FileParser.java", "BodyUseAPI": [], "Fixed commit": "a9cd06e557d35eced713ee09012abdca9edf3050", "Url": "https://api.github.com/repos/njimz/449JavaFinal", "Date": "2018-02-15T08:37:46Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pwmRequest.getPwmApplication().getProxiedChaiUser(password.pwm.bean.UserIdentity)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (theUser.isPasswordLocked()) { theUser.unlockPassword(); password.pwm.http.servlet.forgottenpw.ForgottenPasswordUtil.LOGGER.trace(pwmRequest, \"unlock account succeeded\"); }else { password.pwm.http.servlet.forgottenpw.ForgottenPasswordUtil.LOGGER.debug(pwmRequest, \"account is not locked, continuing\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1749/buggy-version/server.src.main.java.password.pwm.http.servlet.forgottenpw.ForgottenPasswordUtil.java", "BodyUseAPI": ["com.novell.ldapchai.ChaiUser.unlockPassword()"], "Fixed commit": "109ed4b38760174cd4ea0aa3b472a8f8f6922ffc", "Url": "https://api.github.com/repos/ianp1/pwm", "Date": "2018-06-03T21:15:41Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (usersOrg.equals(Organization.surveytool)) { levelsToCheck.add(Level.COMPREHENSIVE); }else { levelsToCheck.addAll(java.util.Arrays.asList(org.unicode.cldr.util.Level.values())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/443/buggy-version/tools.cldr-apps.src.org.unicode.cldr.web.VettingViewerQueue.java", "BodyUseAPI": [], "Fixed commit": "8b49d7a649529dda44975c84a5a4cc859f363cbc", "Url": "https://api.github.com/repos/srl295/cldr", "Date": "2013-06-19T19:29:22Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((Game.MoveCard) (drawncard)).getField()) < 0) { if ((player.getFieldNo()) < 3) { player.setFieldNo((((player.getFieldNo()) + 40) + (((Game.MoveCard) (drawncard)).getField()))); }else { player.setFieldNo(((player.getFieldNo()) + (((Game.MoveCard) (drawncard)).getField()))); } }else { player.setFieldNo(((Game.MoveCard) (drawncard)).getField()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1689/buggy-version/src.Game.Chance.java", "BodyUseAPI": ["Game.Player.setFieldNo(((player.getFieldNo()) + (((Game.MoveCard) (drawncard)).getField())))", "Game.Player.setFieldNo(((Game.MoveCard) (drawncard)).getField())", "Game.Card.getField()", "Game.Card.getField()", "Game.Card.getField()", "Game.Player.setFieldNo((((player.getFieldNo()) + 40) + (((Game.MoveCard) (drawncard)).getField())))"], "Fixed commit": "74f1cd08ad74828d103e0aaf5e9b834cae866fe5", "Url": "https://api.github.com/repos/MichaelWestergaard/21_final", "Date": "2018-01-09T19:24:33Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { toolbar.setTitle(\"Walking Companion\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5358/buggy-version/app.src.main.java.com.example.muhtadi.fitnessapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5fa630e352a3c0476e83bf4536d2c5ffb4fb8be4", "Url": "https://api.github.com/repos/muhtadi-akif/Walking-Companion", "Date": "2018-08-31T16:37:05Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > ((ca.dal.csci3130.coursesmanagementsystem.CoursesRegister.registeredCourse.getTuesday().size()) - 2)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2870/buggy-version/app.src.main.java.ca.dal.csci3130.coursesmanagementsystem.CoursesRegister.registeredCourse.java", "BodyUseAPI": [], "Fixed commit": "1f77cf0827d9a42ae9a0dabe6af2c399607ae286", "Url": "https://api.github.com/repos/alexlinsy/CSCI3130-Project-Group5", "Date": "2018-07-30T05:50:12Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > ((ca.dal.csci3130.coursesmanagementsystem.CoursesRegister.registeredCourse.getThursday().size()) - 2)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2870/buggy-version/app.src.main.java.ca.dal.csci3130.coursesmanagementsystem.CoursesRegister.registeredCourse.java", "BodyUseAPI": [], "Fixed commit": "1f77cf0827d9a42ae9a0dabe6af2c399607ae286", "Url": "https://api.github.com/repos/alexlinsy/CSCI3130-Project-Group5", "Date": "2018-07-30T05:50:12Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > ((ca.dal.csci3130.coursesmanagementsystem.CoursesRegister.registeredCourse.getFriday().size()) - 2)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2870/buggy-version/app.src.main.java.ca.dal.csci3130.coursesmanagementsystem.CoursesRegister.registeredCourse.java", "BodyUseAPI": [], "Fixed commit": "1f77cf0827d9a42ae9a0dabe6af2c399607ae286", "Url": "https://api.github.com/repos/alexlinsy/CSCI3130-Project-Group5", "Date": "2018-07-30T05:50:12Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof org.sunbird.common.request.Request) { org.sunbird.common.request.Request request = ((org.sunbird.common.request.Request) (obj)); if (request.getOperation().equalsIgnoreCase(BackgroundOperations.emailService.name())) { sendMail(request); }else { onReceiveUnsupportedOperation(request.getOperation()); } }else { onReceiveUnsupportedMessage(\"emailService\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2608/buggy-version/actors.core.src.main.java.org.sunbird.learner.actors.notificationservice.EmailServiceActor.java", "BodyUseAPI": [], "Fixed commit": "1a2f908d6e648d4605e764caac4a7aafec65aa4c", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-mw", "Date": "2018-03-09T10:20:54Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((growthcraft.core.shared.compat.forestry.ForestryModFluids.milk) != null) milks.add(ForestryModFluids.milk.getFluid());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9156/buggy-version/src.main.java.growthcraft.core.shared.compat.Compat.java", "BodyUseAPI": [], "Fixed commit": "10105a704d34c44ff3c19ce492f35debd439c8c6", "Url": "https://api.github.com/repos/GrowthcraftCE/Growthcraft-1.12", "Date": "2018-09-01T11:12:57Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getSession(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (session != null) { parameter = session.getAttribute(key); if (parameter != null) { return parameter; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6916/buggy-version/src.main.java.com.robindrew.common.http.servlet.request.HttpRequest.java", "BodyUseAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Fixed commit": "baca1ca3d01681f79463aef2b8d3b0dccba739ad", "Url": "https://api.github.com/repos/robindrew/robindrew-common", "Date": "2018-07-08T14:31:35Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((transaction.getCategory()) != null) { if ((transaction.getCategory().getId()) == category) { resultMap.put(transaction.getId(), transaction); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6270/buggy-version/src.main.java.transactions.TransactionController.java", "BodyUseAPI": ["transaction.getCategory().getId()", "transactions.Transaction.getCategory()", "transactions.Transaction.getId()", "java.util.LinkedHashMap<java.lang.Integer, transactions.Transaction>.put(transaction.getId(),transactions.Transaction)"], "Fixed commit": "502322e844810b51ca6d2ce992c6c3de3d5c2146", "Url": "https://api.github.com/repos/agilitytestbed/Team-A", "Date": "2018-04-09T20:06:57Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["np.com.naxa.staffattendance.utlils.DateConvertor.getCurrentDate().equalsIgnoreCase(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isAttedanceDateToday && isAttendenceNotEmpty) { enablePersonSelection = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7833/buggy-version/app.src.main.java.np.com.naxa.staffattendance.DailyAttendanceFragment.java", "BodyUseAPI": [], "Fixed commit": "e0f45afb4442927c70eced470ff3edc661edc969", "Url": "https://api.github.com/repos/naxadeve/staffattendance", "Date": "2018-04-18T10:54:38Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((imageURLs.size()) > 0) { bulkSaveImage(imageURLs, folderName); }else { java.lang.System.out.println((\"NO IMAGES FOUND In Folder - \" + folderName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4641/buggy-version/src.com.java.yellowpages.scrap.StartScrapping.java", "BodyUseAPI": ["com.java.yellowpages.scrap.StartScrapping.bulkSaveImage(java.util.List<java.lang.String>,java.lang.String)"], "Fixed commit": "f36adbd6562da4758489300d4c13820f779d0046", "Url": "https://api.github.com/repos/rahulsahay144/YellowPages", "Date": "2018-02-12T04:44:56Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dotCount) > 0) setCurrentPosition((position % (dotCount)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2243/buggy-version/lib.src.main.java.android.view.DotIndicator.java", "BodyUseAPI": ["android.view.DotIndicator.1.setCurrentPosition(int)"], "Fixed commit": "f4424911f466ea07130e23f1a03922b644da1432", "Url": "https://api.github.com/repos/djrain/viewpagerdotsindicator", "Date": "2018-10-16T04:13:50Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((zeitstempel) != null) { java.util.Date date = new java.util.Date(); date.setTime(zeitstempel.getTime()); java.lang.String formattedDate = new java.text.SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss.S\").format(date); return formattedDate; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5103/buggy-version/src.ELAB.Person.java", "BodyUseAPI": [], "Fixed commit": "18934128d46a544a8b90205a2ecd016aee593f2f", "Url": "https://api.github.com/repos/KevinKreps/Projekt1", "Date": "2018-05-28T18:45:14Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextInt()", "java.util.Scanner.nextInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (score1 > score2) { win += 1; }else { win -= 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3042/buggy-version/src.main.TennisDatabase.TennisMatch.java", "BodyUseAPI": [], "Fixed commit": "edf698cb5eff0cfcbafb406fce3ce76b72bb1688", "Url": "https://api.github.com/repos/churley862/CS102Assignment2GUI", "Date": "2018-06-18T00:57:31Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(com.buuz135.industrial.utils.RecipeUtils.RECIPE_DIR.exists())) || (result.isEmpty())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4668/buggy-version/src.main.java.com.buuz135.industrial.utils.RecipeUtils.java", "BodyUseAPI": [], "Fixed commit": "ebbf9c462bd9a7d5551c3bd86e16b7366727e524", "Url": "https://api.github.com/repos/jansamohyl/Industrial-Foregoing", "Date": "2018-05-19T16:44:59Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.alibaba.fastjson.JSON.defaultTimeZone) != null) { simpleDateFormat.setTimeZone(JSON.defaultTimeZone); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5606/buggy-version/src.main.java.com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer.java", "BodyUseAPI": [], "Fixed commit": "5cbcfd6c25224c7fb38958cbafaa578029ae1761", "Url": "https://api.github.com/repos/GulajavaMinistudio/fastjson", "Date": "2018-08-13T18:08:26Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lobbyNameExists(lobby.getName())) return new tickets.server.JoinLobbyResponse(new java.lang.Exception(\"Lobby name already exists.\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1114/buggy-version/src.tickets.server.ServerFacade.java", "BodyUseAPI": [], "Fixed commit": "746375beaa214e6c9e01c4e52ebda13467e3b295", "Url": "https://api.github.com/repos/Spencer-Smith/tickets", "Date": "2018-02-12T17:22:46Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrLocationMarker) != null) { mCurrLocationMarker.remove(); mCurrLocationMarker = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7961/buggy-version/airatmandroid.app.src.main.java.ca.thecashmen.airatmandroid.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "4a41ad864794099586d67e841d4cb8335b6508e8", "Url": "https://api.github.com/repos/jasonjchu/airatm", "Date": "2018-05-27T13:57:21Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (stations.contains(start)) { if (stations.get(((stations.size()) - 1)).isSame(start)) { return BusDirection.REVERSE; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8472/buggy-version/src.com.trafficsim.town.Schedule.java", "BodyUseAPI": ["stations.get(((stations.size()) - 1)).isSame(com.trafficsim.town.Waypoint)", "java.util.ArrayList<com.trafficsim.town.Waypoint>.get(((stations.size()) - 1))", "java.util.ArrayList<com.trafficsim.town.Waypoint>.size()"], "Fixed commit": "98dd76e5d08c7a93300cafb63c469933abbc2cb0", "Url": "https://api.github.com/repos/amonbenson/GenericTrafficSimulator", "Date": "2018-02-06T20:34:39Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(res.isCommitted())) { res.sendRedirect(res.encodeURL(storedReq)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4669/buggy-version/dev.com.ibm.ws.webcontainer.security.src.com.ibm.ws.webcontainer.security.internal.FormLoginExtensionProcessor.java", "BodyUseAPI": ["javax.servlet.http.HttpServletResponse.encodeURL(java.lang.String)", "javax.servlet.http.HttpServletResponse.sendRedirect(res.encodeURL(storedReq))"], "Fixed commit": "74738f9eb5d586ff7694b9d66783712810197dea", "Url": "https://api.github.com/repos/toshiyamamoto/open-liberty", "Date": "2018-05-29T05:11:16Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((searchServiceResponse == null) || ((searchServiceResponse.getNumFound()) == null)) { return searchServiceResponse; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7393/buggy-version/src.main.java.com.micro.services.search.bl.processor.PaginationDelegate.java", "BodyUseAPI": [], "Fixed commit": "4a187f80b1a5604d18657eefb36ab2ee0aa010d3", "Url": "https://api.github.com/repos/sekhrivijay/search-service", "Date": "2017-11-04T22:29:30Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.size()) == 0) { return javax.ws.rs.core.Response.status(204).entity(\"\").build(); }else { return javax.ws.rs.core.Response.status(201).entity(outputJSON.toString()).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9421/buggy-version/src.main.java.com.calvinku.LibraryManagementSystem.java", "BodyUseAPI": [], "Fixed commit": "da07bacf225dff5920b6c127680679ae63d28eef", "Url": "https://api.github.com/repos/cjwku1209/BookManagementService", "Date": "2018-03-19T14:44:36Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (span != null) { span.abandon(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7260/buggy-version/integration.tracing.tracing-brave.src.main.java.org.apache.cxf.tracing.brave.AbstractBraveProvider.java", "BodyUseAPI": ["brave.Span.abandon()"], "Fixed commit": "1f2d2b44ffb70cec017192f313aa7384906ebb54", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2018-08-30T01:29:01Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inputArray[0]) > (inputArray[1])) { greatestSeen = inputArray[1]; modCount--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2849/buggy-version/Arrays.FindIfInputCanBeSortedWithOneModification.java", "BodyUseAPI": [], "Fixed commit": "7797665210a11cd0937bdbd58c4e1ef89950a520", "Url": "https://api.github.com/repos/syrilster/Java", "Date": "2018-10-18T00:36:48Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ins.left) instanceof com.vegw.compiler.IR.LinearIR.Operand.Address) setUse(ins, ins.left);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1228/buggy-version/src.com.vegw.compiler.BackEnd.LivenessAnalyzer.java", "BodyUseAPI": ["com.vegw.compiler.BackEnd.LivenessAnalyzer.setUse(com.vegw.compiler.BackEnd.Assign,ins.left)"], "Fixed commit": "3f9393be3b98bdf869945552bc1995626becc61a", "Url": "https://api.github.com/repos/VegeWong/MyCompiler", "Date": "2018-06-09T08:45:34Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (commandTypeInfo == null) { throw new Commands.ScanException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3273/buggy-version/SquirrelGame.src.Commands.CommandScanner.java", "BodyUseAPI": [], "Fixed commit": "671ded96cbb0c8f11629688ceaa166f3d3b01e59", "Url": "https://api.github.com/repos/JHarzenetter/SquirrelGame", "Date": "2018-05-07T11:45:42Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (inletTappetInches != null) { this.inletTappet = new java.math.BigDecimal(com.shamwerks.camwerks.config.Toolbox.round(inletTappetInches.doubleValue(), 3)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7122/buggy-version/src.main.java.com.shamwerks.camwerks.pojo.Camshaft.java", "BodyUseAPI": [], "Fixed commit": "bb6ed6b586f6c6fd7dcd0c7986d90a4531d79c33", "Url": "https://api.github.com/repos/ctsco/camtests", "Date": "2018-09-03T20:09:26Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (inletBaseCircleSize != null) { this.inletBaseCircleSize = new java.math.BigDecimal(com.shamwerks.camwerks.config.Toolbox.round(inletBaseCircleSize.doubleValue(), 3)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7122/buggy-version/src.main.java.com.shamwerks.camwerks.pojo.Camshaft.java", "BodyUseAPI": [], "Fixed commit": "bb6ed6b586f6c6fd7dcd0c7986d90a4531d79c33", "Url": "https://api.github.com/repos/ctsco/camtests", "Date": "2018-09-03T20:09:26Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (exhaustBaseCircleSize != null) { this.exhaustBaseCircleSize = new java.math.BigDecimal(com.shamwerks.camwerks.config.Toolbox.round(exhaustBaseCircleSize.doubleValue(), 3)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7122/buggy-version/src.main.java.com.shamwerks.camwerks.pojo.Camshaft.java", "BodyUseAPI": [], "Fixed commit": "bb6ed6b586f6c6fd7dcd0c7986d90a4531d79c33", "Url": "https://api.github.com/repos/ctsco/camtests", "Date": "2018-09-03T20:09:26Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (exhaustTappetInches != null) { this.exhaustTappet = new java.math.BigDecimal(com.shamwerks.camwerks.config.Toolbox.round(exhaustTappetInches.doubleValue(), 3)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7122/buggy-version/src.main.java.com.shamwerks.camwerks.pojo.Camshaft.java", "BodyUseAPI": [], "Fixed commit": "bb6ed6b586f6c6fd7dcd0c7986d90a4531d79c33", "Url": "https://api.github.com/repos/ctsco/camtests", "Date": "2018-09-03T20:09:26Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.encapsulation2.InvoiceBO.getTotalInvoiceValue(java.lang.String,com.example.encapsulation2.Invoice[])"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (sum > 0.0) { java.lang.System.out.print(new java.text.DecimalFormat(\"#0.00\").format(sum)); }else { java.lang.System.out.println(\"No invoice available\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4646/buggy-version/src.com.example.encapsulation2.Main.java", "BodyUseAPI": ["java.io.PrintStream.print(java.lang.String)", "java.text.DecimalFormat.format(java.lang.Double)"], "Fixed commit": "4e70d0f45af29b78d416d3e7a8390cf666f6b82e", "Url": "https://api.github.com/repos/girias/sudhan", "Date": "2018-03-15T00:53:29Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (readOnly) { processViewTree(this, readOnly); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7836/buggy-version/src.main.java.uk.ac.ebi.intact.editor.component.CustomROComponent.java", "BodyUseAPI": ["uk.ac.ebi.intact.editor.component.CustomROComponent.processViewTree(uk.ac.ebi.intact.editor.component.CustomROComponent,java.lang.Boolean)"], "Fixed commit": "78a2e37f0c34869dc1e2b6a8f7425f4ad55e98ed", "Url": "https://api.github.com/repos/EBI-IntAct/intact-editor", "Date": "2018-02-05T09:30:19Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((shsjxzh.compiler.Scope.LocalScope) (tmp)).parent.entities.get(tmp.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (node.getReExpr().exprType.equals(funcNode.getFuncReturnType())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4772/buggy-version/src.shsjxzh.compiler.Scope.LocalScope.java", "BodyUseAPI": [], "Fixed commit": "e63e8c48cc11561a362f71a459237a4af947ae30", "Url": "https://api.github.com/repos/shsjxzh/X-Compiler", "Date": "2018-05-03T11:53:42Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((shsjxzh.compiler.Scope.LocalScope) (tmp)).parent.entities.get(tmp.getName())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((((node.getReExpr()) == null) || ((node.getReExpr().exprType) == null)) && ((funcNode.getFuncReturnType()) == null)) { funcNode.setReturnStmtNode(node); return true; }else if ((node.getReExpr()) == null) return false; else if ((node.getReExpr().exprType) == null) return false; else if (node.getReExpr().exprType.equals(funcNode.getFuncReturnType())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4772/buggy-version/src.shsjxzh.compiler.Scope.LocalScope.java", "BodyUseAPI": ["shsjxzh.compiler.AST.Decl.FuncDeclNode.setReturnStmtNode(shsjxzh.compiler.AST.Stmt.ReturnStmtNode)", "shsjxzh.compiler.AST.Decl.FuncDeclNode.getFuncReturnType()", "shsjxzh.compiler.AST.Stmt.ReturnStmtNode.getReExpr()", "shsjxzh.compiler.AST.Stmt.ReturnStmtNode.getReExpr()", "node.getReExpr().exprType.equals(funcNode.getFuncReturnType())", "shsjxzh.compiler.AST.Stmt.ReturnStmtNode.getReExpr()"], "Fixed commit": "e63e8c48cc11561a362f71a459237a4af947ae30", "Url": "https://api.github.com/repos/shsjxzh/X-Compiler", "Date": "2018-05-03T11:53:42Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((leftType.isInt()) && (rightType != null)) && (rightType.isInt())) || ((leftType.isString()) && (rightType.isString()))) || (((!(leftType.isBuildInType())) || (leftType.isArray())) && (rightType == null))) { valid = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4772/buggy-version/src.shsjxzh.compiler.FrontEnd.ReferenceResolver.java", "BodyUseAPI": [], "Fixed commit": "e63e8c48cc11561a362f71a459237a4af947ae30", "Url": "https://api.github.com/repos/shsjxzh/X-Compiler", "Date": "2018-05-03T11:53:42Z"},
{"Line": "=>1234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.splicemachine.db.iapi.types.DataValueDescriptor.cloneValue(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (newDefault instanceof com.splicemachine.db.iapi.types.SQLChar) { newDefault.normalize(colDesc.getType(), newDefault); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4595/buggy-version/db-engine.src.main.java.com.splicemachine.db.impl.sql.compile.FromTable.java", "BodyUseAPI": ["com.splicemachine.db.iapi.types.DataValueDescriptor.normalize(colDesc.getType(),com.splicemachine.db.iapi.types.DataValueDescriptor)"], "Fixed commit": "36c9356c6aeff287bf30b911de21973a56f884b4", "Url": "https://api.github.com/repos/splicemachine/spliceengine", "Date": "2018-03-05T15:46:48Z"},
{"Line": "=>667", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.splicemachine.db.iapi.types.DataTypeDescriptor.getTypeId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((columnTypeId.getTypeFormatId()) == (com.splicemachine.db.iapi.services.io.StoredFormatIds.CHAR_TYPE_ID)) && ((defaultValue) != null)) { com.splicemachine.db.iapi.types.DataValueDescriptor newDefault = defaultValue.cloneValue(false); newDefault.normalize(getType(), newDefault); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4595/buggy-version/db-engine.src.main.java.com.splicemachine.db.impl.sql.compile.ColumnDefinitionNode.java", "BodyUseAPI": [], "Fixed commit": "36c9356c6aeff287bf30b911de21973a56f884b4", "Url": "https://api.github.com/repos/splicemachine/spliceengine", "Date": "2018-03-05T15:46:48Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.arxman.vcer.slave.repository.ISlaveRepository.findTestCaseByUuid(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (testCase == null) { testCase = new com.arxman.vcer.slave.entities.TestCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4524/buggy-version/src.main.java.com.arxman.vcer.slave.service.SlaveService.java", "BodyUseAPI": [], "Fixed commit": "c8d4a28beb4c82ce5be27a4f96ab02c4dc9a9edb", "Url": "https://api.github.com/repos/Mikuu/VCer-Slave", "Date": "2018-04-02T16:22:09Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.zhazhapan.util.Checker.isEmpty(token)) { token = request.getParameter(\"token\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/476/buggy-version/src.main.java.com.zhazhapan.util.web.BaseController.java", "BodyUseAPI": [], "Fixed commit": "1c198a579fe8788355a90dfc08d95d9d664bb919", "Url": "https://api.github.com/repos/code4everything/util", "Date": "2018-10-18T05:53:30Z"},
{"Line": "=>985", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((heuristics.get(possibleMoves.get(j))) == (heuristics.get(possibleMoves.get((j + 1))))) { if ((possibleMoves.get(j).getRow()) > (possibleMoves.get((j + 1)).getRow())) { java.util.Collections.swap(possibleMoves, j, (j + 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4119/buggy-version/app.src.main.java.com.neelverma.ai.konane.model.Game.java", "BodyUseAPI": ["possibleMoves.get(j).getRow()", "java.util.ArrayList<com.neelverma.ai.konane.model.Slot>.get(int)", "java.util.Collections.swap(java.util.ArrayList<com.neelverma.ai.konane.model.Slot>,int,int)", "java.util.ArrayList<com.neelverma.ai.konane.model.Slot>.get(int)", "possibleMoves.get((j + 1)).getRow()"], "Fixed commit": "b823f65b2972e6371069a289dac1066657ba9fba", "Url": "https://api.github.com/repos/NeelJVerma/Konane", "Date": "2018-02-16T03:43:45Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (scheduledExecutorService == null) { throw new java.lang.IllegalArgumentException(\"scheduledExecutorService cannot be null.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9268/buggy-version/device.iot-device-client.src.main.java.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsSessionManager.java", "BodyUseAPI": [], "Fixed commit": "24546da325137846eb24c154d2e66221a5c3d037", "Url": "https://api.github.com/repos/Azure/azure-iot-sdk-java", "Date": "2018-10-05T18:28:02Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((result.size()) == 0) && checkCompletedToo) { for (com.glvz.egais.dao.IncomeRecContent incomeRecContent : incomeRec.getIncomeRecContentList()) { if ((alcocode != null) && (alcocode.equals(incomeRecContent.getIncomeContentIn().getAlccode()))) { result.add(incomeRecContent); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2845/buggy-version/app.src.main.java.com.glvz.egais.dao.DaoMem.java", "BodyUseAPI": ["java.util.List<com.glvz.egais.dao.IncomeRecContent>.add(com.glvz.egais.dao.IncomeRecContent)"], "Fixed commit": "d745deefbde4c59b49ee6e8f39092180f7f2c796", "Url": "https://api.github.com/repos/pavel-vp/GLVZegais", "Date": "2018-09-17T15:48:49Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.CustomItemDialog.itemCost.getText().replaceAll(\"\\n\", \"\").replaceAll(\" \", \"\").equals(\"\")) { com.CustomItemDialog.itemCost.setText(\"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4907/buggy-version/src.com.CustomItemDialog.java", "BodyUseAPI": ["javax.swing.JTextField.setText(java.lang.String)"], "Fixed commit": "2ff4435e16f1c65b00fe5bbc46021c3cef618b6e", "Url": "https://api.github.com/repos/EragonKai/PoEBudgetPlanner", "Date": "2018-09-29T03:17:53Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (letter == null) return java.lang.String.valueOf(name.charAt(i));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5934/buggy-version/app.src.main.java.com.example.nekr0s.get_my_driver_card.utils.translator.Translator.java", "BodyUseAPI": [], "Fixed commit": "b3929007a993ab5e9425796892586fce591b2128", "Url": "https://api.github.com/repos/nekr0s/Get-My-Driver-Card", "Date": "2018-10-19T09:03:30Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(event.getPlayer().equals(player))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6803/buggy-version/main.src.main.java.net.citizensnpcs.editor.EquipmentEditor.java", "BodyUseAPI": [], "Fixed commit": "1276365a118268e855ee06f393bdacbdf8208bc3", "Url": "https://api.github.com/repos/CitizensDev/Citizens2", "Date": "2018-10-13T03:11:09Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(attemptsLoc.exists())) { attemptsLoc.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2272/buggy-version/src.data.FullName.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "ac3d3d2485bd899177c77fdd53d8a85031c8654c", "Url": "https://api.github.com/repos/radcoolman/NameSayer", "Date": "2018-10-21T01:27:40Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.cr.gankio.data.database.GankNews>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result_size > 0) { int index = 0; java.util.List<com.cr.gankio.data.database.GankNews> temp = data.getValue(); if ((temp.size()) > 0) { java.lang.String target_id = temp.get(0).get_id(); while ((index < result_size) && (!(result.get(index).get_id().equals(target_id)))) { index++; } if (index != result_size) { result = result.subList(0, index); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5721/buggy-version/app.src.main.java.com.cr.gankio.data.network.GankNewsNetworkDataSource.java", "BodyUseAPI": [], "Fixed commit": "8cca652b1ca512338dc69d53fd194d4f40bfdb1f", "Url": "https://api.github.com/repos/Cr321/GankIO", "Date": "2018-04-08T02:53:57Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newGenotype[j]) > 5) { newGenotype[j] = 5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5876/buggy-version/Group65.src.Population.java", "BodyUseAPI": [], "Fixed commit": "9ed39839d898c22a4eeabf75452d36c8dd3928da", "Url": "https://api.github.com/repos/ktodorov/evolutionary-computing-uva", "Date": "2018-10-17T00:30:53Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newGenotype[j]) < (-5)) { newGenotype[j] = -5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5876/buggy-version/Group65.src.Population.java", "BodyUseAPI": [], "Fixed commit": "9ed39839d898c22a4eeabf75452d36c8dd3928da", "Url": "https://api.github.com/repos/ktodorov/evolutionary-computing-uva", "Date": "2018-10-17T00:30:53Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.defaultValue) != null) { iterator = this.defaultValue.keySet().iterator(); while (iterator.hasNext()) { E key = iterator.next(); buttonsHashMap.get(key).setSelected(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/431/buggy-version/src.com.hirohiro716.javafx.dialog.select.ToggleButtonPaneDialog.java", "BodyUseAPI": [], "Fixed commit": "98f21f1cbd01aeafd8fb065ed7c46f734c6ac983", "Url": "https://api.github.com/repos/hirohiro716/scent-javafx", "Date": "2018-09-02T06:14:17Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.defaultValue) != null) { iterator = this.defaultValue.keySet().iterator(); while (iterator.hasNext()) { E key = iterator.next(); buttonsHashMap.get(key).setSelected(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/431/buggy-version/src.com.hirohiro716.javafx.dialog.select.ToggleButtonDialog.java", "BodyUseAPI": [], "Fixed commit": "98f21f1cbd01aeafd8fb065ed7c46f734c6ac983", "Url": "https://api.github.com/repos/hirohiro716/scent-javafx", "Date": "2018-09-02T06:14:17Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.leanpoker.player.Player.shouldFold(hands)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5135/buggy-version/src.main.java.org.leanpoker.player.Player.java", "BodyUseAPI": [], "Fixed commit": "86c10a659fb531fdc437a4fa121e380ed5d65bff", "Url": "https://api.github.com/repos/patrickniepel/poker-player-diebugsteine", "Date": "2018-04-03T11:28:36Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (exist != null) { java.lang.String mark = com.mobian.listener.Application.getString(\"SV801\", \"0\"); if (\"0\".equals(mark)) { if (\"3\".equals(exist.getAppointStatus())) { j.setMsg(((\"\u60a8\u5728\" + (exist.getAppointTime())) + \"\u9884\u7ea6\u5df2\u88ab\u62d2\u7edd\uff01\")); }else { j.setMsg(((\"\u60a8\u5728\" + (exist.getAppointTime())) + \"\u5df2\u9884\u7ea6\uff0c\u8bf7\u52ff\u91cd\u590d\u9884\u7ea6\uff01\")); } obj.put(\"appointmentNo\", (-2)); j.setObj(obj); return j; }else { if (!(\"3\".equals(exist.getAppointStatus()))) { obj.put(\"appointmentNo\", (-2)); j.setMsg(((\"\u60a8\u5728\" + (exist.getAppointTime())) + \"\u5df2\u9884\u7ea6\uff0c\u8bf7\u52ff\u91cd\u590d\u9884\u7ea6\uff01\")); j.setObj(obj); return j; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9902/buggy-version/src.main.java.com.ethealth.front.controller.ApiMemberAppointmentController.java", "BodyUseAPI": ["com.ethealth.front.controller.Json.setMsg(((\"\u60a8\u5728\" + (exist.getAppointTime())) + \"\u5df2\u9884\u7ea6\uff0c\u8bf7\u52ff\u91cd\u590d\u9884\u7ea6\uff01\"))", "com.ethealth.front.controller.Json.setMsg(((\"\u60a8\u5728\" + (exist.getAppointTime())) + \"\u5df2\u9884\u7ea6\uff0c\u8bf7\u52ff\u91cd\u590d\u9884\u7ea6\uff01\"))", "com.ethealth.front.controller.FdMemberAppointment.getAppointTime()", "java.lang.String.equals(exist.getAppointStatus())", "com.ethealth.front.controller.Json.setMsg(((\"\u60a8\u5728\" + (exist.getAppointTime())) + \"\u9884\u7ea6\u5df2\u88ab\u62d2\u7edd\uff01\"))", "java.lang.String.equals(exist.getAppointStatus())", "com.ethealth.front.controller.FdMemberAppointment.getAppointTime()", "com.ethealth.front.controller.FdMemberAppointment.getAppointStatus()", "com.ethealth.front.controller.FdMemberAppointment.getAppointTime()", "com.ethealth.front.controller.FdMemberAppointment.getAppointStatus()"], "Fixed commit": "87c86960e90c4f3d057a3f9f7e9c6b60476caa39", "Url": "https://api.github.com/repos/xuwenming/ethealth", "Date": "2018-04-27T09:58:38Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (managerSucceed) { factory = getFactory(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2262/buggy-version/bdse-kvnode.src.main.java.ru.csc.bdse.kv.db.postgres.PostgresPersistentKeyValueApi.java", "BodyUseAPI": [], "Fixed commit": "2d3f0953564cd10eda065536c09200192577fc88", "Url": "https://api.github.com/repos/equivalence1/csc-bdse", "Date": "2018-02-27T20:26:13Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.iobserve.execution.stages.kubernetes.KubernetesUndeploymentExecutor.LOGGER.isDebugEnabled()) { org.iobserve.execution.stages.kubernetes.KubernetesUndeploymentExecutor.LOGGER.debug((\"Successfully deleted pod with name \" + podName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7749/buggy-version/execution.src.main.java.org.iobserve.execution.stages.kubernetes.KubernetesUndeploymentExecutor.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "bc0d7815296034937c22a7da82acc86613e064a1", "Url": "https://api.github.com/repos/research-iobserve/iobserve-analysis", "Date": "2018-05-11T08:18:58Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(\"listener-method\".equals(listenerMethod.getLocalName()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3282/buggy-version/modular-spring-core.src.main.java.cn.yxffcode.modularspring.core.ext.ExtensionHandlerBeanDefinitionParser.java", "BodyUseAPI": [], "Fixed commit": "9aa5c7a78e9ce1730a25e95f7051f120dee967c8", "Url": "https://api.github.com/repos/gaohanghbut/modular-spring", "Date": "2018-09-16T11:02:09Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.NodeList.item(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(item instanceof org.w3c.dom.Element)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3282/buggy-version/modular-spring-core.src.main.java.cn.yxffcode.modularspring.core.ext.ExtensionHandlerBeanDefinitionParser.java", "BodyUseAPI": [], "Fixed commit": "9aa5c7a78e9ce1730a25e95f7051f120dee967c8", "Url": "https://api.github.com/repos/gaohanghbut/modular-spring", "Date": "2018-09-16T11:02:09Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ing3) != null) { if (firstConditionSet) { query += (\" and \" + (ing3)) + \" =1\"; }else { firstConditionSet = true; query += (\" \" + (ing3)) + \" =1\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/147/buggy-version/src.main.java.com.bot.cookbetter.utils.UserOptions.java", "BodyUseAPI": [], "Fixed commit": "e56436d8123441306db86a538237ced392b4bc37", "Url": "https://api.github.com/repos/ragavik/cook-better", "Date": "2018-03-13T02:15:05Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentOrder == 0) { current.getLeft().pop(); current.setRight(((current.getRight()) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7566/buggy-version/src.main.java.org.aksw.limes.metrics.speedup.JaroWinklerTrieFilter.java", "BodyUseAPI": [], "Fixed commit": "b51e715e245cd2062e96141dc8bf3b6366d0f7cb", "Url": "https://api.github.com/repos/fusion-jena/QuickJaroWinkler", "Date": "2018-09-22T12:56:07Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t1 != null) application.Main.setProjectTitle(((application.CodeTab) (t1)).getPath());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5342/buggy-version/src.application.RichTextCode.java", "BodyUseAPI": [], "Fixed commit": "6da60c65b8041cd6107e2935d5a744648c435130", "Url": "https://api.github.com/repos/carlosvchr/WPL-IDE", "Date": "2018-05-07T12:02:58Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mode == (Mode.REGISTER)) { doc = new capslock.game_info.GameDocument(); gameRootDir = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5687/buggy-version/src.main.java.capslock.kiddy_register.main.MainHandler.java", "BodyUseAPI": [], "Fixed commit": "47ffa4cd700b47e14d4d4c5bd43bf7941f000c00", "Url": "https://api.github.com/repos/chrootRISCassembler/KiddyRegister", "Date": "2018-03-24T12:24:16Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userId != null) { tbkPidItemService.updateTbkPidItem(tbkPidItem); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3084/buggy-version/laser-soft-controller.src.main.java.com.soft.wechat.service.impl.TbkCoreServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "f6799594301e019baab8704114aef5d7e27d5288", "Url": "https://api.github.com/repos/a6330452/sqg", "Date": "2018-10-11T15:08:12Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((s) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/61/buggy-version/restapi-spring.src.main.java.com.perceptnet.tools.restapi.spring.RestRegistryGenerator.java", "BodyUseAPI": [], "Fixed commit": "6ba11ce03276347795c7ab6aa43c0763d0505905", "Url": "https://api.github.com/repos/vvk78/perceptnet-tools", "Date": "2018-05-23T12:54:50Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["data.dao.EventDao.findEventByKey(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (event == null) { event = new data.dto.EventDto(eventId, eventName, eventName, null, null, 3, com.google.common.collect.ImmutableList.of()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6527/buggy-version/src.main.java.data.data_getter.MatchDataGetter.java", "BodyUseAPI": [], "Fixed commit": "738b6a4179aed552aecfa2cecb3ac245270ce47f", "Url": "https://api.github.com/repos/zqiw/soccer-analysis", "Date": "2018-10-26T10:39:57Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((moneyLine.length()) == 0) { return 10.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6527/buggy-version/src.main.java.data.utils.DataOperationUtils.java", "BodyUseAPI": [], "Fixed commit": "738b6a4179aed552aecfa2cecb3ac245270ce47f", "Url": "https://api.github.com/repos/zqiw/soccer-analysis", "Date": "2018-10-26T10:39:57Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((alloted_n.get(j)) == 0) { alloted_n.add(j, books.get(i)); }else if (((alloted_n.get(j)) + (books.get(i))) <= mid) { alloted_n.add(j, ((alloted_n.get(j)) + (books.get(i)))); }else { j++; i--; alloted_n.add(j, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2640/buggy-version/AllocateBooks.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.get(int)", "java.util.ArrayList<java.lang.Integer>.add(int,int)", "java.util.ArrayList<java.lang.Integer>.add(int,java.lang.Integer)", "java.util.ArrayList<java.lang.Integer>.add(int,int)", "java.util.ArrayList<java.lang.Integer>.get(int)"], "Fixed commit": "44f7be54a2e08f1a84c70dd121dbd75e780981d5", "Url": "https://api.github.com/repos/skb1129/java-programs", "Date": "2018-01-17T17:27:46Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.obsez.android.lib.filechooser.internals.FileUtil.getStoragePath(getActivity(),boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (new java.io.File(ext).canRead()) { timber.log.Timber.v((((((\"ext: \" + ext) + \", total size: \") + (com.obsez.android.lib.filechooser.internals.FileUtil.getReadableFileSize(com.obsez.android.lib.filechooser.internals.FileUtil.readSDCard(getActivity(), true)))) + \", free size: \") + (com.obsez.android.lib.filechooser.internals.FileUtil.getReadableFileSize(com.obsez.android.lib.filechooser.internals.FileUtil.readSDCard(getActivity(), true, true))))); }else { timber.log.Timber.v((\"ext: \" + ext)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3625/buggy-version/app.src.main.java.com.obsez.android.lib.filechooser.demo.ChooseFileActivityFragment.java", "BodyUseAPI": ["timber.log.Timber.v(java.lang.String)", "timber.log.Timber.v((((((\"ext: \" + ext) + \", total size: \") + (com.obsez.android.lib.filechooser.internals.FileUtil.getReadableFileSize(com.obsez.android.lib.filechooser.internals.FileUtil.readSDCard(getActivity(), true)))) + \", free size: \") + (com.obsez.android.lib.filechooser.internals.FileUtil.getReadableFileSize(com.obsez.android.lib.filechooser.internals.FileUtil.readSDCard(getActivity(), true, true)))))"], "Fixed commit": "c99bba78bd3d0379b6fb166574782260398d05f9", "Url": "https://api.github.com/repos/hedzr/android-file-chooser", "Date": "2018-10-15T07:44:27Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((searchArtistType) != null) { contentValues.put(ArtistsContract.ArtistsEntry.COLUMN_ARTIST_STYLE, searchArtistType); }else { this.searchArtistType = \"No Type\"; contentValues.put(ArtistsContract.ArtistsEntry.COLUMN_ARTIST_STYLE, searchArtistType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3263/buggy-version/app.src.main.java.tracker.album.com.br.albumtracker.adapters.SearchArtistAdapter.java", "BodyUseAPI": [], "Fixed commit": "38cd13f108139061741ff6854a72425b4e4f744b", "Url": "https://api.github.com/repos/leoassuncao/albumtrackr", "Date": "2018-05-27T21:15:47Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getContractController()) != null) { getContractController().clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2166/buggy-version/src.org.aion.api.impl.AionAPIImpl.java", "BodyUseAPI": [], "Fixed commit": "a758af2a4234b01eb3686f08311a133308dbe697", "Url": "https://api.github.com/repos/aionnetwork/aion_api", "Date": "2018-06-26T22:39:34Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((modPreview) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7655/buggy-version/app.src.main.java.com.CHH2000day.navalcreed.modhelper.ModPackageInfo.java", "BodyUseAPI": [], "Fixed commit": "790a6be106ed1ae3ea2a14d20ab25ee71bf935da", "Url": "https://api.github.com/repos/CHH2000day/NavalCreedModHelper", "Date": "2018-05-24T13:19:14Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(lexic.hasNextToken())) { printProduction(\"S\", \"epsilon\"); }else unexpectedToken(\"function or variable declaration\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5414/buggy-version/src.analisador.sintatico.Syntactic.java", "BodyUseAPI": [], "Fixed commit": "2b87602ae407dcd6557914a4b6ef181067c62bad", "Url": "https://api.github.com/repos/fabriond/ANCode", "Date": "2018-05-28T17:12:26Z"},
{"Line": "=>717", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lexic.getPreviousToken()) != null) sendError((((((\"Expected \" + expected) + \" after \") + (lexic.getPreviousToken())) + \" but got \") + (token))); else sendError((((\"Expected \" + expected) + \" at beginning of file but got \") + (token)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5414/buggy-version/src.analisador.sintatico.Syntactic.java", "BodyUseAPI": ["analisador.lexico.Lexic.getPreviousToken()", "analisador.sintatico.Syntactic.sendError((((((\"Expected \" + expected) + \" after \") + (lexic.getPreviousToken())) + \" but got \") + (token)))"], "Fixed commit": "2b87602ae407dcd6557914a4b6ef181067c62bad", "Url": "https://api.github.com/repos/fabriond/ANCode", "Date": "2018-05-28T17:12:26Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.count) > 0) { str.deleteCharAt(((str.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2503/buggy-version/src.me.galliliu._05_array.Array.java", "BodyUseAPI": [], "Fixed commit": "49df7c1287bd8a65570ca5941ac071f82faa30bb", "Url": "https://api.github.com/repos/galliliu/dsa", "Date": "2018-10-10T15:34:52Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { android.view.MenuItem item = navigationView.getMenu().getItem(0); onNavigationItemSelected(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9846/buggy-version/app.src.main.java.cz.kindl.vaclav.everwalls.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5f29d1d897d9c2cc78b72dc174fa7e73deb0b91f", "Url": "https://api.github.com/repos/vkindl/EverWalls", "Date": "2017-12-08T22:10:09Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lo == hi) { return lo; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6914/buggy-version/Sorting_given_Review.src.main.java.RandomNumber.java", "BodyUseAPI": [], "Fixed commit": "7e3bb3684c6d6bcac3de0993934939173969862e", "Url": "https://api.github.com/repos/jgoralcz/jgoralcz_review", "Date": "2018-02-19T18:46:32Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bio.knowledge.server.json.Edge.getName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((pName == null) || (pName.isEmpty())) { pName = \"related_to\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6424/buggy-version/server.src.main.java.bio.knowledge.server.impl.Translator.java", "BodyUseAPI": [], "Fixed commit": "ebe9b859bad3fb4a43c055706f76e064c46eb962", "Url": "https://api.github.com/repos/NCATS-Tangerine/ndex-beacon", "Date": "2018-06-08T03:28:41Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((app) == null) { android.util.Log.e(io.o2mc.sdk.current.business.DeviceManager.TAG, \"generateDeviceInformation: No device information could be retrieved. Did you supply your Application to the O2MC module?\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7368/buggy-version/android.sdk.src.main.java.io.o2mc.sdk.current.business.DeviceManager.java", "BodyUseAPI": [], "Fixed commit": "452e452e6148a34fc549c7b42fccc25b8f4d5974", "Url": "https://api.github.com/repos/O2MC/moby-tracking-sdk", "Date": "2018-07-02T14:59:54Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (acct != null) { sdk.signTx(tx, new com.github.ontio.account.Account[][]{ new com.github.ontio.account.Account[]{ acct } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9891/buggy-version/ontolib.src.main.java.com.github.ontio.smartcontract.NeoVm.java", "BodyUseAPI": ["com.github.ontio.OntSdk.signTx(com.github.ontio.core.transaction.Transaction,com.github.ontio.account.Account[][])"], "Fixed commit": "5c35f15d6d9caa2f9a2d36ce0edfb4c10ac8507a", "Url": "https://api.github.com/repos/ontio-community/ontology-andriod-sdk", "Date": "2018-06-15T10:09:07Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(java.lang.Double.isNaN(value))) { de.nmichael.pda.data.Sample m = new de.nmichael.pda.data.Sample(cur.getTimeStamp(), value); monotonic.add(m); updateMinMax(m); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3471/buggy-version/pda-core.src.main.java.de.nmichael.pda.data.DataSeries.java", "BodyUseAPI": [], "Fixed commit": "9f174cdb289acc78eda024516efa511e0c9ee21c", "Url": "https://api.github.com/repos/nicmichael/pda", "Date": "2018-04-17T17:09:50Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ratePerSecond) { long ms = (cur.getTimeStamp()) - (prev.getTimeStamp()); if (ms > 0) { value = (value * 1000.0) / ((double) (ms)); }else { value = java.lang.Double.NaN; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3471/buggy-version/pda-core.src.main.java.de.nmichael.pda.data.DataSeries.java", "BodyUseAPI": [], "Fixed commit": "9f174cdb289acc78eda024516efa511e0c9ee21c", "Url": "https://api.github.com/repos/nicmichael/pda", "Date": "2018-04-17T17:09:50Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ConfigUtils.bookWithChapters.get(currentChapter.getBook().getBookDir())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((linkedBook.getProviderName()) != null) { myToolbar.setTitle(linkedBook.getProviderName()); setSupportActionBar(myToolbar); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2707/buggy-version/app.src.main.java.techbrain.libro_parlante1.ChapterPlayer.java", "BodyUseAPI": ["techbrain.libro_parlante1.bean.Book.getProviderName()", "android.support.v7.widget.Toolbar.setTitle(linkedBook.getProviderName())"], "Fixed commit": "bf9e66973f1a511a8ee4b7de8be0dd4bba16744e", "Url": "https://api.github.com/repos/andreamartire/lightdark", "Date": "2018-01-19T13:07:45Z"},
{"Line": "=>750", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (vis != \"No data\") { vis_dou = java.lang.Double.parseDouble(vis); vis_dou = (vis_dou) / 1000; java.lang.String visible = java.lang.String.valueOf(vis_dou); vis_field.setText(((\"Visibility: \" + visible) + \" Km\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/506/buggy-version/app.src.main.java.app.ys.weather_ping21.Main.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "f6d4547bd7e49c5afa2fd47dd6115e51412dccc6", "Url": "https://api.github.com/repos/ys-git/Weather_ping2.1", "Date": "2018-03-01T12:50:03Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (demo == 0) { break; }else { java.lang.System.out.println(\"You must select 1, 2 or 0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2425/buggy-version/TextAnalysisProgram.src.TextAnalysis.Main.java", "BodyUseAPI": [], "Fixed commit": "22ddf5faa85627246addbc3a4e8d06d956ad9507", "Url": "https://api.github.com/repos/lydiagray/Year1JavaProjectV2", "Date": "2018-02-21T09:11:37Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((y) - (height)) < (pf.y)) && ((pf.ySpeed) != 0)) && ((y) < ((pf.y) + (pf.height)))) { y = pf.y; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5728/buggy-version/src.com.entities.Player.java", "BodyUseAPI": [], "Fixed commit": "f85519da52de8a975767157a7b105d9c071794bc", "Url": "https://api.github.com/repos/MasterCoder2112/2D-Platformer", "Date": "2018-02-15T03:09:20Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(key.equals(oldBK.key))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/293/buggy-version/src.main.java.com.feeyo.redis.engine.manage.stat.BigKeyCollector.java", "BodyUseAPI": [], "Fixed commit": "8ce53f6c17d6b68cc97fde656b169055d0233289", "Url": "https://api.github.com/repos/Block2/feeyo-redisproxy", "Date": "2018-07-02T06:44:44Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type.getSort()) != (org.objectweb.asm.Type.OBJECT)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6536/buggy-version/src.main.java.de.thetaphi.forbiddenapis.ClassScanner.java", "BodyUseAPI": [], "Fixed commit": "00719121a4185c96ee1fbea650a5270b237ee66b", "Url": "https://api.github.com/repos/policeman-tools/forbidden-apis", "Date": "2018-09-16T21:49:45Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Math.abs(((java.lang.Math.abs(yStartingPoint)) - (java.lang.Math.abs(yEndingPoint))))) < ((width) / 40)) { if ((((y2 < ((ymax) * moe)) && (y2 > ((ymin) * moe))) && (x1 < ((xmax) * moe))) && (x1 > ((xmin) * moe))) { g.drawLine((i + offsetX), (yStartingPoint + offsetY), ((i + 1) + offsetX), (yEndingPoint + offsetY)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5181/buggy-version/FunctionPlotter.src.Plotter.java", "BodyUseAPI": ["java.awt.Graphics.drawLine(int,int,int,int)"], "Fixed commit": "edb1386969f62280f4e0befa7c745ce6337e4644", "Url": "https://api.github.com/repos/IgorFranovic/FunctionPlotter", "Date": "2018-09-17T19:19:36Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.sessionlimit.user.operation.event.listener.util.SessionCache.getActiveSessionCount(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (activeSessions < 1) { isAllowed = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/575/buggy-version/session-limit-user-operation-event-listener.src.main.java.org.wso2.carbon.sessionlimit.user.operation.event.listener.SessionLimitingUserOperationEventListener.java", "BodyUseAPI": [], "Fixed commit": "c7467694eba96bf7d76fdd2f76ab5a0d64fee3ba", "Url": "https://api.github.com/repos/gayanch/wso2-is-user-session-limit", "Date": "2018-08-24T08:27:26Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.questionIndex) == questionIndex) layout_image_loading.setVisibility(View.INVISIBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8795/buggy-version/app.src.main.java.com.hw.mad.hw03.TriviaActivity.java", "BodyUseAPI": [], "Fixed commit": "68fbaab4840de4cae98b26e778f9a9ef9fb0b16f", "Url": "https://api.github.com/repos/atulbanwar/MobileApplications", "Date": "2016-09-23T01:48:46Z"},
{"Line": "=>1165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lastWeek.getDayOfMonth()) == 8) { lastWeek = lastWeek.minusWeeks(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9211/buggy-version/bundles.net.tourbook.src.net.tourbook.ui.views.calendar.CalendarGraph.java", "BodyUseAPI": ["java.time.LocalDateTime.minusWeeks(int)"], "Fixed commit": "d24480a7fe9514d7972adab1ed52f5b1537b803f", "Url": "https://api.github.com/repos/wolfgang-ch/mytourbook", "Date": "2018-01-02T10:15:02Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.scene.control.Alert.showAndWait()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((result.get()) == buttonSave) { handleSave(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2798/buggy-version/IcoRatingApp.src.icoRating.view.RootLayoutController.java", "BodyUseAPI": [], "Fixed commit": "af21c8335af631f9b3203e67c208279202b30a6c", "Url": "https://api.github.com/repos/Benizzel/IcoRatingApp", "Date": "2018-08-06T16:33:22Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (components == 1) return coupling;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6280/buggy-version/src.main.java.com.buschmais.sarf.plugin.cohesion.evolution.similarity.LongObjectiveSimilarityChromosome.java", "BodyUseAPI": [], "Fixed commit": "d124c4189981317e5a3748856d817e5656bf4267", "Url": "https://api.github.com/repos/buschmais/sar-framework", "Date": "2018-01-26T10:56:15Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.marklogic.mapreduce.ContentOutputFormat.LOG.isDebugEnabled()) { com.marklogic.mapreduce.ContentOutputFormat.LOG.debug((\"init query: \\n\" + (query.getQuery()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2997/buggy-version/mapreduce.src.main.java.com.marklogic.mapreduce.ContentOutputFormat.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug((\"init query: \\n\" + (query.getQuery())))"], "Fixed commit": "e98b3b4efe1ea2e816cf166d2b5b74a5e659ec0a", "Url": "https://api.github.com/repos/marklogic/marklogic-contentpump", "Date": "2018-09-29T18:43:11Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (n < 0) { n = java.lang.Math.abs(n); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3936/buggy-version/Sorting_given_Review.src.main.java.SortDemoData.java", "BodyUseAPI": ["java.lang.Math.abs(int)"], "Fixed commit": "68d8876840da13f6d87a0f954be10aab4dea5fc8", "Url": "https://api.github.com/repos/swaguire/mgillen_review", "Date": "2018-02-20T02:36:10Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == (buckets.length)) { result--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1846/buggy-version/src.main.java.com.terljuk.datastructures.map.HashMap.java", "BodyUseAPI": [], "Fixed commit": "8db8459370d22aece405e0df5e608c0bfccc6048", "Url": "https://api.github.com/repos/viktorterljuk/data-structure", "Date": "2018-06-09T20:53:00Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (amount == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7945/buggy-version/src.coinpurse.Purse.java", "BodyUseAPI": [], "Fixed commit": "55090874784af603e2756d544d9e036dc21ebd34", "Url": "https://api.github.com/repos/OOP2018/coinpurse-pichqning", "Date": "2018-02-16T07:04:15Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.datastax.driver.core.Row.getColumnDefinitions()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((cdef.getType(i).getName()) == (DataType.Name.DATE)) { com.datastax.driver.core.LocalDate ld = row.getDate(i); return new java.util.Date(ld.getMillisSinceEpoch()); }else { return row.getTimestamp(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3376/buggy-version/core.src.main.java.org.pentaho.cassandra.driver.datastax.DriverCQLRowHandler.java", "BodyUseAPI": ["com.datastax.driver.core.Row.getDate(int)", "com.datastax.driver.core.Row.getTimestamp(int)"], "Fixed commit": "149e072690c31a80acbc2fa00a30085a7421d4af", "Url": "https://api.github.com/repos/pentaho-mracine/pentaho-cassandra-plugin", "Date": "2018-04-13T19:46:36Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (k < 7) { question_notv.setText(((k + 1) + \"/7\")); questiontv.setText(q_and_a.get(k).getQuestion()); optionAtv.setText(q_and_a.get(k).getA()); optionBtv.setText(q_and_a.get(k).getB()); optionCtv.setText(q_and_a.get(k).getC()); optionDtv.setText(q_and_a.get(k).getD()); }else { android.widget.Toast.makeText(this, \"Questions khatam ho gaye BC\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2985/buggy-version/app.src.main.java.com.quiz.up.GamePlay.java", "BodyUseAPI": ["android.widget.TextView.setText(q_and_a.get(k).getQuestion())", "q_and_a.get(k).getA()", "java.util.List<com.quiz.up.Questionlist>.get(int)", "android.widget.Button.setText(q_and_a.get(k).getD())", "android.widget.Button.setText(q_and_a.get(k).getC())", "q_and_a.get(k).getD()", "android.widget.Button.setText(q_and_a.get(k).getB())", "q_and_a.get(k).getB()", "android.widget.TextView.setText(java.lang.String)", "java.util.List<com.quiz.up.Questionlist>.get(int)", "java.util.List<com.quiz.up.Questionlist>.get(int)", "java.util.List<com.quiz.up.Questionlist>.get(int)", "q_and_a.get(k).getC()", "android.widget.Button.setText(q_and_a.get(k).getA())", "java.util.List<com.quiz.up.Questionlist>.get(int)", "q_and_a.get(k).getQuestion()"], "Fixed commit": "50bcf7b0ce5390414bf1584abb138d62d29d9d34", "Url": "https://api.github.com/repos/LinusRamok/QuizUp", "Date": "2018-01-07T15:24:29Z"},
{"Line": "=>756", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mScroller.isFinished())) { mScroller.abortAnimation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9290/buggy-version/datepicker.src.main.java.com.ycuwq.datepicker.WheelPicker.java", "BodyUseAPI": ["android.widget.Scroller.abortAnimation()"], "Fixed commit": "40ed6be43ba06f54673f6b32e2b247a9a1998702", "Url": "https://api.github.com/repos/ycuwq/DatePicker", "Date": "2018-01-23T14:47:03Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (keyword.isPresent()) { return new org.springframework.http.ResponseEntity(tutorialService.allDraftTutorialsForUserFilterByKeyword(idUser, keyword.get()), org.springframework.http.HttpStatus.OK); }else { return new org.springframework.http.ResponseEntity(tutorialService.allDraftTutorialsForUser(idUser), org.springframework.http.HttpStatus.OK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/99/buggy-version/server.controller.src.main.java.controller.TutorialController.java", "BodyUseAPI": ["java.util.Optional<java.lang.String>.get()", "service.TutorialService.allDraftTutorialsForUserFilterByKeyword(java.lang.Integer,java.lang.String)"], "Fixed commit": "4a7eacf657866d27ee0ed2440bb2e6fd2bccafca", "Url": "https://api.github.com/repos/easyonboard/onboarder", "Date": "2018-07-30T14:53:42Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(facts.get(\"header:range\"))) { facts.put(\"responseHeader:contentLength\", objectModel.getLength()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4537/buggy-version/s34j-spring.src.main.java.us.cuatoi.s34j.spring.operation.object.AbstractObjectRule.java", "BodyUseAPI": ["org.jeasy.rules.api.Facts.put(java.lang.String,objectModel.getLength())"], "Fixed commit": "d80dd7308e48029aae024af2bd5a9d60ccc39dea", "Url": "https://api.github.com/repos/dungviettran89/s34j", "Date": "2018-05-16T13:42:44Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.europa.ec.fisheries.uvms.rules.service.business.VesselTransportMeansDto.getAcceptanceDateTime()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotEmpty(acceptanceDateTime)) { reportDate = acceptanceDateTime; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1257/buggy-version/service.src.main.java.eu.europa.ec.fisheries.uvms.rules.service.bean.asset.client.impl.AssetClientBean.java", "BodyUseAPI": [], "Fixed commit": "0705056a0ac1200a447cb1a9e78c07186a834a75", "Url": "https://api.github.com/repos/UnionVMS/UVMS-RulesModule-APP", "Date": "2018-10-23T09:59:41Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fr.trandutrieu.remy.springbootjaxws.socle.context.ContextManager.get()) != null) { java.time.Duration duration = java.time.Duration.between(fr.trandutrieu.remy.springbootjaxws.socle.context.ContextManager.get().getStart(), java.time.Instant.now()); fr.trandutrieu.remy.springbootjaxws.socle.audit.Audit.trace(Level.ERROR, fr.trandutrieu.remy.springbootjaxws.socle.handlers.AuditInOutHandler.OUT_SERVICE, ((\"execTime = \" + (duration.toMillis())) + \"ms\")); fr.trandutrieu.remy.springbootjaxws.socle.context.ContextManager.remove(); org.slf4j.MDC.clear(); }else { fr.trandutrieu.remy.springbootjaxws.socle.audit.Audit.trace(Level.ERROR, fr.trandutrieu.remy.springbootjaxws.socle.handlers.AuditInOutHandler.OUT_SERVICE, \"SOAP REQUEST INVALID\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5320/buggy-version/src.main.java.fr.trandutrieu.remy.springbootjaxws.socle.handlers.AuditInOutHandler.java", "BodyUseAPI": [], "Fixed commit": "b87dd269082a782e4073dc79886a691793b8bfa9", "Url": "https://api.github.com/repos/RyuTsuiSen/springboot-ws", "Date": "2018-07-09T14:28:44Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (tags != null) { this.tags = tags; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3169/buggy-version/app.src.main.java.com.example.tali.myphotoalbum.models.Image.java", "BodyUseAPI": [], "Fixed commit": "26e3795c24fe550afe8d34485d612f51f3360435", "Url": "https://api.github.com/repos/TaliNar/MyPhotoAlbum", "Date": "2018-08-20T01:33:32Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.tali.myphotoalbum.models.Image.getTags()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((tagsClassMap != null) && (!(tagsClassMap.isEmpty()))) { java.util.ArrayList<com.example.tali.myphotoalbum.models.TagClass> temp = new java.util.ArrayList(tagsClassMap.values()); tagList.addAll(temp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3169/buggy-version/app.src.main.java.com.example.tali.myphotoalbum.helpers.FirebaseHelper.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, com.example.tali.myphotoalbum.models.TagClass>.values()"], "Fixed commit": "26e3795c24fe550afe8d34485d612f51f3360435", "Url": "https://api.github.com/repos/TaliNar/MyPhotoAlbum", "Date": "2018-08-20T01:33:32Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.videgro.ships.SettingsUtils.getInstance().parseFromPreferencesNmeaShare()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (shareNmea) { boolean repeatToSocketIoServerResult = false; if ((socketIoClient) != null) { repeatToSocketIoServerResult = socketIoClient.repeatToSocketIoServer(line); } if ((!(hasDataConnection)) || (!repeatToSocketIoServerResult)) { nmeaMessagesCache.cacheMessage(line); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3858/buggy-version/app.src.main.java.net.videgro.ships.tasks.NmeaUdpClientTask.java", "BodyUseAPI": [], "Fixed commit": "5d2359db0642546254653826e340728d6cdee0d3", "Url": "https://api.github.com/repos/videgro/Ships", "Date": "2018-04-02T19:03:21Z"},
{"Line": "=>679", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sdk.client.dive.tv.SdkClient.getInstance()) != null) { sdk.client.dive.tv.SdkClient.getInstance().streamDisconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5830/buggy-version/ea-sdk.src.main.java.sdk.dive.tv.ui.fragments.Carousel.java", "BodyUseAPI": [], "Fixed commit": "78215ec60c07ec11d1b2d0d005a6a3743050c190", "Url": "https://api.github.com/repos/dive-tv/ea-front-sdk-android", "Date": "2018-01-08T14:57:08Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.nfdz.permissionswatcher.main.view.MainActivityView.Adapter.AppViewHolder.getAdapterPosition()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((((filteredData) != null) && (position >= 0)) && (position < (filteredData.size()))) { presenter.onIgnoreAppClick(filteredData.get(position)); firebaseAnalytics.logEvent(Analytics.Event.APP_IGNORE, null); }else { com.google.firebase.crash.FirebaseCrash.log((((\"OnIgnoreClick invalid position: position=\" + position) + \", filteredData=\") + ((filteredData) == null ? \"null\" : \"\" + (filteredData.size())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3895/buggy-version/PermissionsWatcherApp.app.src.main.java.io.github.nfdz.permissionswatcher.main.view.MainActivityView.java", "BodyUseAPI": ["com.google.firebase.crash.FirebaseCrash.log((((\"OnIgnoreClick invalid position: position=\" + position) + \", filteredData=\") + ((filteredData) == null ? \"null\" : \"\" + (filteredData.size()))))", "MainActivityContract.Presenter.onIgnoreAppClick(filteredData.get(position))", "java.util.List<io.github.nfdz.permissionswatcher.common.model.ApplicationInfo>.size()", "java.util.List<io.github.nfdz.permissionswatcher.common.model.ApplicationInfo>.get(int)"], "Fixed commit": "d12af17b98b16c234d0becd415d4e4163a303621", "Url": "https://api.github.com/repos/nfdz/PermissionsWatcher", "Date": "2018-01-21T11:00:51Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((executor) != null) { executor.shutdown(); task.cancel(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4529/buggy-version/src.pt.promatik.utils.Delegate.java", "BodyUseAPI": [], "Fixed commit": "a14b4b0d570442532f91bdaa919dbdc098b0e177", "Url": "https://api.github.com/repos/promatik/Java-Delegate-Util", "Date": "2018-09-05T08:51:29Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (quoteChar != null) row.append(quoteChar);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/581/buggy-version/src.speedy.persistence.file.operators.ImportCSVFileWithCopy.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.Character)"], "Fixed commit": "194648fdd898275badcd83d220d5800c542d057c", "Url": "https://api.github.com/repos/dbunibas/Speedy", "Date": "2018-04-03T10:15:36Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (speedy.persistence.file.operators.ImportCSVFileWithCopy.logger.isDebugEnabled()) speedy.persistence.file.operators.ImportCSVFileWithCopy.logger.debug((\"--- Import file script:\\n\" + (script.toString())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/581/buggy-version/src.speedy.persistence.file.operators.ImportCSVFileWithCopy.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "194648fdd898275badcd83d220d5800c542d057c", "Url": "https://api.github.com/repos/dbunibas/Speedy", "Date": "2018-04-03T10:15:36Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (quoteChar != null) row.append(quoteChar);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/581/buggy-version/src.speedy.persistence.file.operators.ImportCSVFileWithCopy.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.Character)"], "Fixed commit": "194648fdd898275badcd83d220d5800c542d057c", "Url": "https://api.github.com/repos/dbunibas/Speedy", "Date": "2018-04-03T10:15:36Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getState()) != null) { eventStates.add(event.getState()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8108/buggy-version/oo-commons.src.main.java.com.oneops.ops.CiOpsProcessor.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(event.getState())", "com.oneops.ops.events.CiOpenEvent.getState()"], "Fixed commit": "60d690f81e7c6a6c7c531787602923e965339481", "Url": "https://api.github.com/repos/jayeshpise/oneops", "Date": "2018-05-02T02:26:09Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.matheclipse.core.interfaces.IASTAppendable.getOneIdentity(F.C0)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (temp.head().equals(F.Integrate)) { return org.matheclipse.core.expression.F.NIL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8848/buggy-version/symja_android_library.matheclipse-core.src.main.java.org.matheclipse.core.polynomials.PartialFractionIntegrateGenerator.java", "BodyUseAPI": [], "Fixed commit": "10600716797fe435ee048c1bca516a96117388de", "Url": "https://api.github.com/repos/axkr/symja_android_library", "Date": "2018-09-26T19:48:01Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (clazz.equals(java.lang.Object.class)) { this.genericTypeHint = classAttributes.genericTypeHint; this.clazz = ((java.lang.Class) (((sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl) (classAttributes.genericTypeHint)).getActualTypeArguments()[0])); }else { this.genericTypeHint = genericTypeHint; this.clazz = java.util.Objects.requireNonNull(clazz); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/279/buggy-version/src.main.java.com.rainbowpunch.jetedge.core.reflection.ClassAttributes.java", "BodyUseAPI": [], "Fixed commit": "aa29b2480df63320a0fcb9b73b4fb5fd77006b14", "Url": "https://api.github.com/repos/Bekreth/jetedge", "Date": "2018-01-16T14:26:27Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (state.equals(com.keepassdroid.view.ListNodesWithAddButtonView.State.CLOSE)) { if ((dy > 0) && ((addButton.getVisibility()) == (android.view.View.VISIBLE))) { hideButton(); }else if ((dy < 0) && ((addButton.getVisibility()) != (android.view.View.VISIBLE))) { showButton(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3069/buggy-version/app.src.main.java.com.keepassdroid.view.ListNodesWithAddButtonView.java", "BodyUseAPI": [], "Fixed commit": "b2ef29d1318f7e8914ce6f026f5efe6b31e0dbbb", "Url": "https://api.github.com/repos/Kunzisoft/KeePassDX", "Date": "2018-02-23T13:40:43Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRotate) state = com.keepassdroid.view.ListNodesWithAddButtonView.State.OPEN; else state = com.keepassdroid.view.ListNodesWithAddButtonView.State.CLOSE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3069/buggy-version/app.src.main.java.com.keepassdroid.view.ListNodesWithAddButtonView.java", "BodyUseAPI": [], "Fixed commit": "b2ef29d1318f7e8914ce6f026f5efe6b31e0dbbb", "Url": "https://api.github.com/repos/Kunzisoft/KeePassDX", "Date": "2018-02-23T13:40:43Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data[((data.length) - 1)]) == null) { newString += \"null]\"; }else { newString = (newString + (data[((size) - 1)])) + \"]\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4442/buggy-version/SuperArray.java", "BodyUseAPI": [], "Fixed commit": "c4674c728425882fbe9286167a45a89358f3a29b", "Url": "https://api.github.com/repos/kaitlynduong21/MKS21X-SuperArray", "Date": "2018-10-25T14:29:40Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lore.isEmpty()) { lore.add(active); }else { lore.set(0, active); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6634/buggy-version/src.net.undergroundantics.magicantics.plugin.MagicAntics.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.util.List<java.lang.String>.set(int,java.lang.String)"], "Fixed commit": "5f60c0452ae2dab7c545cd32d658ca265549d135", "Url": "https://api.github.com/repos/BasedDoge/MagicAntics", "Date": "2018-03-11T06:51:47Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["spoon.MavenLauncher.InheritanceModel.extractVariable(dependency.getVersion())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (version == null) { spoon.LOGGER.warn((\"A dependency version cannot be resolved: \" + (dependency.toString()))); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2513/buggy-version/src.main.java.spoon.MavenLauncher.java", "BodyUseAPI": [], "Fixed commit": "37454b102f1075f8bdf15076ca63334ef43ab05e", "Url": "https://api.github.com/repos/surli/spoon", "Date": "2018-01-04T12:11:21Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((parent == null) && ((model.getParent()) != null)) { try { java.io.File parentPath = new java.io.File(directory, model.getParent().getRelativePath()); this.parent = readPOM(parentPath.getPath(), null); } catch (java.lang.Exception e) { spoon.LOGGER.debug((\"Parent model cannot be resolved: \" + (e.getMessage()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2513/buggy-version/src.main.java.spoon.MavenLauncher.java", "BodyUseAPI": [], "Fixed commit": "37454b102f1075f8bdf15076ca63334ef43ab05e", "Url": "https://api.github.com/repos/surli/spoon", "Date": "2018-01-04T12:11:21Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((str.length()) >= 1) { str = str.substring(0, ((str.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9657/buggy-version/Resources.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "37dc88db2a53b85f546d6e151e4725a1f5fe8cf7", "Url": "https://api.github.com/repos/FirefoxIstSchon/Network-Project-File-Sharing", "Date": "2018-10-15T20:33:07Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((str.length()) >= 1) { str = str.substring(0, ((str.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9657/buggy-version/Resources.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "37dc88db2a53b85f546d6e151e4725a1f5fe8cf7", "Url": "https://api.github.com/repos/FirefoxIstSchon/Network-Project-File-Sharing", "Date": "2018-10-15T20:33:07Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dump.sh.minesweeper.controllers.Game.clickTile(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (clickResult != 9) { msg.setAttachments(atcList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6341/buggy-version/src.main.java.dump.sh.minesweeper.controllers.MSController.java", "BodyUseAPI": [], "Fixed commit": "9e1013f0337272d88977adf8027edd2e678e273d", "Url": "https://api.github.com/repos/neuroclast/slack-minesweeper", "Date": "2018-08-01T21:51:54Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["okHttpHandler.execute(request).get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(response.isSuccessful())) { throw new android.accounts.NetworkErrorException(\"Message received by server but not processed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3655/buggy-version/app.src.main.java.phg.com.automotiveoctoengine.daos.MonitoringDAO.java", "BodyUseAPI": [], "Fixed commit": "271b681d5084ab18917252c7429fa99cf0b744bd", "Url": "https://api.github.com/repos/SchlachterSchmidt/automotive-octo-engine", "Date": "2018-02-15T13:01:20Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parameters[5].equals(\"+\")) && (parameters[6].equals(\"0\"))) { input = ((((((((parameters[0]) + \" \") + (parameters[1])) + \" \") + (parameters[2])) + \" \") + (parameters[3])) + \" \") + (parameters[4]); if ((parameters[1].equals(\"+\")) && (parameters[2].equals(\"0\"))) { input = ((((parameters[0]) + \" \") + (parameters[3])) + \" \") + (parameters[4]); } }else if ((parameters[1].equals(\"+\")) && (parameters[2].equals(\"0\"))) { input = ((((((((parameters[0]) + \" \") + (parameters[3])) + \" \") + (parameters[4])) + \" \") + (parameters[5])) + \" \") + (parameters[6]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1499/buggy-version/src.main.java.edu.kit.ipd.dbis.filter.Filtermanagement.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "f322b97ff00f842075a429893a916f9e95d4b807", "Url": "https://api.github.com/repos/DifferentLink/Grape", "Date": "2018-03-06T21:24:13Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(needKey)) currentFavorite = favorites.get(0).getUid();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4788/buggy-version/app.src.main.java.com.danhasting.radar.RadarActivity.java", "BodyUseAPI": [], "Fixed commit": "5f10d78f62fb11b4bc09904199b30ec14381473d", "Url": "https://api.github.com/repos/dh4/WeatherRadar", "Date": "2018-03-23T01:37:31Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.minecraftforge.fml.common.Loader.isModLoaded(\"fastleafdecay\")) { MinecraftForge.EVENT_BUS.register(new com.ferreusveritas.dynamictrees.event.LeafUpdateEventHandler()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2521/buggy-version/src.main.java.com.ferreusveritas.dynamictrees.proxy.CommonProxy.java", "BodyUseAPI": [], "Fixed commit": "0652e15ffa0417c99bc8e6bd6bc9ba2e893a37b4", "Url": "https://api.github.com/repos/ferreusveritas/DynamicTrees", "Date": "2018-03-01T01:54:24Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.runtime.Platform.getOSArch()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (Platform.ARCH_X86_64.equals(arch)) { options.put(IProviderHints.REQUIRED_MODULE_ID, org.rssowl.core.connection.PlatformCredentialsProvider.WIN64_PW_PROVIDER_ID); }else { options.put(IProviderHints.REQUIRED_MODULE_ID, org.rssowl.core.connection.PlatformCredentialsProvider.WIN32_PW_PROVIDER_ID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/746/buggy-version/org.rssowl.core.src.org.rssowl.core.connection.PlatformCredentialsProvider.java", "BodyUseAPI": [], "Fixed commit": "8c3b382d3d2f7251c7ca3db3d1e13ff6efaccb01", "Url": "https://api.github.com/repos/sciamano/RSSOwlnix", "Date": "2018-09-23T03:49:23Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (subDeptCodeId.equalsIgnoreCase(BMAConstant.DEPTID_BKK)) { sql.append(((\" AND deptid = '\" + subDeptCodeId) + \"' \")); }else { sql.append(((\" AND deptsubid = '\" + subDeptCodeId) + \"' \")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3653/buggy-version/BMADao.src.main.java.th.co.ipassion.bkkegp.dao.RssEgpDao.java", "BodyUseAPI": ["java.lang.StringBuffer.append(java.lang.String)", "java.lang.StringBuffer.append(java.lang.String)"], "Fixed commit": "a0dcc97662f6c0394db793cca084bc2b7b072d6c", "Url": "https://api.github.com/repos/iPassionCorp/bkk-eGP", "Date": "2018-05-23T17:30:29Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"*\".equalsIgnoreCase(announceType)) { announceType = th.co.ipassion.bkkegp.BMAConstant.DEFAULT_ANNOUNCE_TYPE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3653/buggy-version/BMADao.src.main.java.th.co.ipassion.bkkegp.dao.RssEgpDao.java", "BodyUseAPI": [], "Fixed commit": "a0dcc97662f6c0394db793cca084bc2b7b072d6c", "Url": "https://api.github.com/repos/iPassionCorp/bkk-eGP", "Date": "2018-05-23T17:30:29Z"},
{"Line": "=>755", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(annotations.containsAll(other.annotations))) return false; else if (!(other.annotations.containsAll(annotations))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3647/buggy-version/core2.src.main.java.org.sbolstandard.core2.Identified.java", "BodyUseAPI": ["java.util.List<org.sbolstandard.core2.Annotation>.containsAll(java.util.List<org.sbolstandard.core2.Annotation>)"], "Fixed commit": "924713c0974eaba33aa5e7a5e52112902b424601", "Url": "https://api.github.com/repos/SynBioDex/libSBOLj", "Date": "2018-07-30T19:29:42Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.util.Map.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((selectedCodeList.contains(code)) && (prevCategoryValue.containsKey(\"associations\"))) { java.util.List<java.util.Map> associations = ((java.util.List<java.util.Map>) (prevCategoryValue.get(\"associations\"))); if ((associations != null) && ((associations.size()) > 0)) { for (java.util.Map association : associations) { if (association.containsKey(\"category\")) { java.lang.String categoryValue = ((java.lang.String) (association.get(\"category\"))); if (categoryValue.equalsIgnoreCase(currentCategory)) { allAssociations.add(association); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6202/buggy-version/src.android.org.genie.FrameworkHandler.java", "BodyUseAPI": ["java.util.Map.get(java.lang.String)"], "Fixed commit": "8a83a878585b985b1196c6fb3ea090601581cdab", "Url": "https://api.github.com/repos/project-sunbird/cordova-plugin-genie-sdk", "Date": "2018-06-06T13:48:38Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((taskPlace) != null) { android.util.Log.d(project301.requesterActivity.LOG_TAG, (\"Task lat long: \" + (taskPlace.getLatLng()))); new_task.setTasklatitude(taskPlace.getLatLng().latitude); new_task.setTasklgtitude(taskPlace.getLatLng().longitude); }else { android.util.Log.d(project301.requesterActivity.LOG_TAG, \"No task lat and long\"); new_task.setTasklatitude(null); new_task.setTasklgtitude(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1581/buggy-version/app.src.main.java.project301.requesterActivity.RequesterPostTaskActivity.java", "BodyUseAPI": [], "Fixed commit": "050014dc8a9157c3cdfb04f17268bcc17f74573f", "Url": "https://api.github.com/repos/CMPUT301W18T25/ProjectMaster", "Date": "2018-03-25T23:23:55Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(rawMessage.contains(\" \"))) return \"none\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6159/buggy-version/src.main.java.bot.janb.generaldiscordbot.MessageListener.java", "BodyUseAPI": [], "Fixed commit": "299190f44dd1d2a42650f4f240ffa0d819e856e6", "Url": "https://api.github.com/repos/JBobda/Bard-bot", "Date": "2018-05-28T02:47:04Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((b.getText().toString().equals(\".\")) && (java.util.Objects.equals(num1, \"-\"))) { num1 = \"-0.\"; screen.setText(num1); }else if ((b.getText().toString().equals(\".\")) && ((num1.indexOf(\".\")) != (-1))) { screen.setText(num1); }else { num1 += b.getText(); screen.setText(num1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6054/buggy-version/app.src.main.java.com.oks748.calc.MainActivity.java", "BodyUseAPI": ["android.widget.Button.getText()", "android.widget.TextView.setText(java.lang.String)", "b.getText().toString().equals(java.lang.String)", "android.widget.Button.getText()", "b.getText().toString()", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "3b18f027d28d89154ac6d76d7845731791d92449", "Url": "https://api.github.com/repos/Oks748/caLc", "Date": "2018-02-13T10:59:01Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.math.BigDecimal.toPlainString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((s.indexOf('.')) < 0) { return s; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3321/buggy-version/data-bots.src.main.java.org.progfun.Decimal.java", "BodyUseAPI": [], "Fixed commit": "7a0bd8e2b11586fb49cdf01f005734bbc3549aee", "Url": "https://api.github.com/repos/prog-fun/exchange-apis", "Date": "2018-03-04T22:21:58Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.springmvc.dao.IntimacyMapper.getAllRelation(java.util.List<java.lang.Integer>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (values == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4025/buggy-version/src.main.java.cn.springmvc.service.Intimacy.java", "BodyUseAPI": [], "Fixed commit": "07845ffdc2b5eac84b046996a98fab18f0bc91b0", "Url": "https://api.github.com/repos/yeluting/github", "Date": "2018-07-15T04:35:54Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userlist.size()) == 0) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4025/buggy-version/src.main.java.cn.springmvc.service.Intimacy.java", "BodyUseAPI": [], "Fixed commit": "07845ffdc2b5eac84b046996a98fab18f0bc91b0", "Url": "https://api.github.com/repos/yeluting/github", "Date": "2018-07-15T04:35:54Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(casProperties.getSso().isAllowMissingServiceParameter())) { return org.apereo.cas.util.CollectionUtils.wrap(new org.apereo.cas.web.DelegatedAuthenticationWebApplicationServiceFactory(builtClients.getIfAvailable(), delegatedClientWebflowManager())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4554/buggy-version/support.cas-server-support-pac4j-webflow.src.main.java.org.apereo.cas.web.flow.config.DelegatedAuthenticationWebflowConfiguration.java", "BodyUseAPI": [], "Fixed commit": "dc24a459ebec3099bb89839965b103ab20c143e0", "Url": "https://api.github.com/repos/NgSekLong/cas", "Date": "2018-10-20T20:02:33Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.mobile.device.DeviceResolver.resolveDevice(javax.servlet.http.HttpServletRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((device.isMobile()) || (device.isTablet())) { url = (getRootPath(request)) + \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2568/buggy-version/dhis-2.dhis-web.dhis-web-commons.src.main.java.org.hisp.dhis.security.MappedRedirectStrategy.java", "BodyUseAPI": [], "Fixed commit": "a2406baa58d8414ad6696ff4ad5f42ed93f2ff86", "Url": "https://api.github.com/repos/dhis2/dhis2-core", "Date": "2018-08-23T12:49:24Z"},
{"Line": "=>682", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(sortClause.alreadyEscaped.hasBeenInvalidated())) for (int i = 0; i < (sortClause.getProperties().length); i++) { sortClause.getProperties()[i] = java.lang.String.format(escapedProperty, resolvePropertyName(entityType, sortClause.getProperties()[i])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9164/buggy-version/core.src.main.java.org.neo4j.ogm.session.Neo4jSession.java", "BodyUseAPI": ["org.neo4j.ogm.cypher.query.SortClause.getProperties()", "org.neo4j.ogm.cypher.query.SortClause.getProperties()", "org.neo4j.ogm.session.Neo4jSession.resolvePropertyName(java.lang.Class,sortClause.getProperties()[i])", "org.neo4j.ogm.cypher.query.SortClause.getProperties()", "java.lang.String.format(java.lang.String,java.lang.String)"], "Fixed commit": "ecb09bdcad1602fccf34819121435af170838494", "Url": "https://api.github.com/repos/Arthur-Tesse/neo4j-ogm", "Date": "2018-05-12T23:42:43Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.elementary.tasks.core.app_widgets.notes.NotesFactory.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (note == null) { rView.setTextViewText(R.id.note, \"Failed to load note!\"); return rView; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8134/buggy-version/app.src.main.java.com.elementary.tasks.core.app_widgets.notes.NotesFactory.java", "BodyUseAPI": [], "Fixed commit": "cf889c3ea892d3737cae140f8b32918a80cd816e", "Url": "https://api.github.com/repos/naz013/Reminder", "Date": "2018-03-15T15:36:41Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.tokenKeys.isEmpty())) { verifier = this.tokenKeys.get(iss); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3564/buggy-version/src.main.java.com.ge.predix.uaa.token.lib.FastTokenServices.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.springframework.security.jwt.crypto.sign.SignatureVerifier>.get(java.lang.String)"], "Fixed commit": "aaa8290a30d4fc0f3f83bfc8a28d076fadffe7a2", "Url": "https://api.github.com/repos/predix/spring-jwt-validation-filter", "Date": "2018-04-12T23:03:31Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (false) nextArea[currentPlayer] = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7543/buggy-version/src.games.gsClever.Logic.MainLogic.java", "BodyUseAPI": [], "Fixed commit": "0c2812a214a5cc4296464c770e1ecde8b0e018ad", "Url": "https://api.github.com/repos/nicoonator/gsclever", "Date": "2018-07-12T20:51:22Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (addDate.getText().toString().equals(\"\")) { }else { dates.add(addDate.getText().toString()); manageDatesAdapter.notifyDataSetChanged(); addDate.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5640/buggy-version/app.src.main.java.be.ap.eaict.gadder.ManageDates.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(addDate.getText().toString())", "android.widget.EditText.getText()", "addDate.getText().toString()", "android.widget.EditText.setText(java.lang.String)"], "Fixed commit": "64937007762ad71570c16b916c4e79ab2fe44d76", "Url": "https://api.github.com/repos/Joerit/Gadder", "Date": "2018-01-09T19:28:11Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((totalTrips.getInboundTrips()) != null) || ((totalTrips.getOutboundTrips()) != null)) { activeTrips = (isReturnSearch) ? totalTrips.getInboundTrips() : totalTrips.getOutboundTrips(); filteredTripsByCompany = activeTrips; filteredTripsByTime = activeTrips; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7943/buggy-version/app.src.user.java.mainFunctionality.viewsModels.TripsViewModel.java", "BodyUseAPI": ["mainFunctionality.search.SearchResults.getOutboundTrips()", "mainFunctionality.search.SearchResults.getInboundTrips()"], "Fixed commit": "9f5e20518f9dc66a651f33d607dfcfa1d57a0219", "Url": "https://api.github.com/repos/JuanPabloNicosanti/VanTrackAndroid", "Date": "2018-10-12T00:05:39Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((trackNumber.length()) >= 2) { trackNumberParsed = java.lang.Long.parseLong(((trackNumber.substring(0, 1)) + (trackNumber.substring(1, 2)))); }else { trackNumberParsed = java.lang.Long.parseLong(trackNumber); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4347/buggy-version/mobile.src.main.java.com.example.android.droidplayer.model.RemoteJSONSource.java", "BodyUseAPI": ["java.lang.Long.parseLong(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.Long.parseLong(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "9700e6814683955bf59b000448bfe12bac716efd", "Url": "https://api.github.com/repos/davidsalman/droidplayer", "Date": "2018-01-08T06:59:52Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((translations.size()) == 0) { return s; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2295/buggy-version/src.main.java.com.romimoco.ores.lang.i18n.java", "BodyUseAPI": [], "Fixed commit": "f86e7608eb89b3bfbd27089d45aeb5672b63a11b", "Url": "https://api.github.com/repos/RoMiMoCo/Ores", "Date": "2018-03-06T06:42:21Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((translations.size()) == 0) { com.romimoco.ores.util.OreLogger.info(\"Translation requested, but no .lang files found. Please set genResourcePack=true and run the game at least once to generate the en_us.lang file\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2295/buggy-version/src.main.java.com.romimoco.ores.lang.i18n.java", "BodyUseAPI": [], "Fixed commit": "f86e7608eb89b3bfbd27089d45aeb5672b63a11b", "Url": "https://api.github.com/repos/RoMiMoCo/Ores", "Date": "2018-03-06T06:42:21Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["WorldEvent.Load.getWorld()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((world instanceof net.minecraft.world.WorldServer) && ((((net.minecraft.world.WorldServer) (world)).provider.getDimension()) == 0)) { mchorse.blockbuster.Blockbuster.reloadServerModels(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2736/buggy-version/src.main.java.mchorse.blockbuster.recording.ActionHandler.java", "BodyUseAPI": [], "Fixed commit": "5905bb3529adf96cefb55b12cbb67f43a6785ab9", "Url": "https://api.github.com/repos/mchorse/blockbuster", "Date": "2018-05-03T11:28:04Z"},
{"Line": "=>811", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((flag.getValue().equals(\"deny\")) && (isOwner(p))) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3178/buggy-version/src.com.hotmail.steven.biomeprotect.region.ProtectedRegion.java", "BodyUseAPI": [], "Fixed commit": "8e5006d1e3fcb6d2d9b2a02096c5095b775221f4", "Url": "https://api.github.com/repos/Steveo5/BiomeProtect", "Date": "2018-01-19T03:25:31Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bits) < 64) fullMask = (1L << (bits)) - 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/137/buggy-version/src.main.java.de.neemann.digital.core.wiring.Splitter.java", "BodyUseAPI": [], "Fixed commit": "61db55104c9faa6e23fd2719fec8cbd287f6ab98", "Url": "https://api.github.com/repos/hneemann/Digital", "Date": "2018-01-03T09:09:41Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((p.bits) < 64) m = (1L << (p.bits)) - 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/137/buggy-version/src.main.java.de.neemann.digital.core.wiring.Splitter.java", "BodyUseAPI": [], "Fixed commit": "61db55104c9faa6e23fd2719fec8cbd287f6ab98", "Url": "https://api.github.com/repos/hneemann/Digital", "Date": "2018-01-03T09:09:41Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["xfy.fakeview.library.text.drawer.TextDrawableDrawer.measureDrawableWidth(android.graphics.drawable.Drawable,int)", "xfy.fakeview.library.text.drawer.TextDrawer.getDrawMaxWidthFronNow(xfy.fakeview.library.text.param.VariableParams,xfy.fakeview.library.text.param.ImmutableParams)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (maxWidth < dw) { xfy.fakeview.library.text.drawer.TextDrawer.drawNextLine(canvas, variableParams, immutableParams); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3657/buggy-version/library.src.main.java.xfy.fakeview.library.text.drawer.TextDrawableDrawer.java", "BodyUseAPI": [], "Fixed commit": "c1f36aff811ae73906c526213dddaacb33036f37", "Url": "https://api.github.com/repos/fangyuxiong/FakeView", "Date": "2018-04-04T09:12:47Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_index) == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9210/buggy-version/stats.ValuePercentile.java", "BodyUseAPI": [], "Fixed commit": "4d785e6e90431531b143aee1bcc6925288563e80", "Url": "https://api.github.com/repos/hhu-bsinfo/dxutils-src", "Date": "2018-03-08T10:30:45Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_index) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9210/buggy-version/stats.ValuePercentile.java", "BodyUseAPI": [], "Fixed commit": "4d785e6e90431531b143aee1bcc6925288563e80", "Url": "https://api.github.com/repos/hhu-bsinfo/dxutils-src", "Date": "2018-03-08T10:30:45Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((minor == (it.a4smart.vate.guide.GuideFragment.DEWAY[0])) || (minor == (it.a4smart.vate.guide.GuideFragment.DEWAY[((it.a4smart.vate.guide.GuideFragment.DEWAY.length) - 1)]))) { dir = 0; android.util.Log.d(it.a4smart.vate.guide.GuideFragment.TAG, \"guide: ARRIVED\"); }else if (minor == (it.a4smart.vate.guide.GuideFragment.DEWAY[((actPos) + (dir))])) { actPos += dir; android.util.Log.d(it.a4smart.vate.guide.GuideFragment.TAG, \"nextStep: RIGHT DIRECTION\"); }else { android.util.Log.d(it.a4smart.vate.guide.GuideFragment.TAG, \"nextStep: WRONG\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6455/buggy-version/app.src.main.java.it.a4smart.vate.guide.GuideFragment.java", "BodyUseAPI": [], "Fixed commit": "7866dd5921ba8da6a9c4172ba3fd79016ff7bf87", "Url": "https://api.github.com/repos/A4Smart/VATE-app-android", "Date": "2018-10-12T15:57:18Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.rasodu.gedcom.core.Family>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fam.Divorced) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9243/buggy-version/src.main.java.com.rasodu.gedcom.Validation.FamilyValidator.java", "BodyUseAPI": [], "Fixed commit": "acad7f27dc13743af9f7eab68d424537abf3d825", "Url": "https://api.github.com/repos/jfining/ssw555_fall_18", "Date": "2018-09-22T19:02:41Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (planetClicked) { java.lang.System.out.println(\"OK clicked\"); okClicked = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9316/buggy-version/TravelScreen.java", "BodyUseAPI": [], "Fixed commit": "ccba43f02f3a8e25a3db1aaa586f90c542c3f46c", "Url": "https://api.github.com/repos/gagerg/CPSC224_Group7", "Date": "2018-05-04T22:26:37Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (uk.gov.hmcts.sscs.service.AirLookupService.LOG.isDebugEnabled()) { uk.gov.hmcts.sscs.service.AirLookupService.LOG.debug(java.lang.String.format(\"Venue map has {0} venue ids\", lookupAirVenueNameByPostCode.keySet().size())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1960/buggy-version/src.main.java.uk.gov.hmcts.sscs.service.AirLookupService.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "4ee307e125b611098ffb322133e109a032a063e9", "Url": "https://api.github.com/repos/hmcts/sscs-tribunals-case-api", "Date": "2018-09-25T12:41:28Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (uk.gov.hmcts.sscs.service.AirLookupService.LOG.isDebugEnabled()) { uk.gov.hmcts.sscs.service.AirLookupService.LOG.debug(java.lang.String.format(\"Post code: {0} Regional office: {1}\", postcodeCell.getRichStringCellValue().getString().toLowerCase().trim(), adminGroupCell.getRichStringCellValue().getString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1960/buggy-version/src.main.java.uk.gov.hmcts.sscs.service.AirLookupService.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "4ee307e125b611098ffb322133e109a032a063e9", "Url": "https://api.github.com/repos/hmcts/sscs-tribunals-case-api", "Date": "2018-09-25T12:41:28Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (uk.gov.hmcts.sscs.service.AirLookupService.LOG.isDebugEnabled()) { uk.gov.hmcts.sscs.service.AirLookupService.LOG.debug(\"Successfully loaded lookup data for postcode endpoint\"); uk.gov.hmcts.sscs.service.AirLookupService.LOG.debug(java.lang.String.format(\"Regional centre data has {0} post codes\", lookupRegionalCentreByPostCode.keySet().size())); uk.gov.hmcts.sscs.service.AirLookupService.LOG.debug(java.lang.String.format(\"Air Venue data has {0} post codes\", lookupAirVenueNameByPostCode.keySet().size())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1960/buggy-version/src.main.java.uk.gov.hmcts.sscs.service.AirLookupService.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)", "org.slf4j.Logger.debug(java.lang.String)", "org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "4ee307e125b611098ffb322133e109a032a063e9", "Url": "https://api.github.com/repos/hmcts/sscs-tribunals-case-api", "Date": "2018-09-25T12:41:28Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selection == null) selection = \"1\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/216/buggy-version/app.src.main.java.eu.captaincode.popularmovies.data.MovieProvider.java", "BodyUseAPI": [], "Fixed commit": "2a4a2fc61a9de18f432c757195cfb511d0a3cda2", "Url": "https://api.github.com/repos/mrpeny/PopularMovies", "Date": "2018-02-27T21:10:44Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numRowsDeleted != 0) { getContext().getContentResolver().notifyChange(uri, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/216/buggy-version/app.src.main.java.eu.captaincode.popularmovies.data.MovieProvider.java", "BodyUseAPI": [], "Fixed commit": "2a4a2fc61a9de18f432c757195cfb511d0a3cda2", "Url": "https://api.github.com/repos/mrpeny/PopularMovies", "Date": "2018-02-27T21:10:44Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(fun.rubicon.RubiconBot.getConfiguration().has(\"supporthook\"))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/186/buggy-version/src.main.java.fun.rubicon.commands.general.CommandBug.java", "BodyUseAPI": [], "Fixed commit": "408ff00c07d730b6ddf0bb04c8331059316b8090", "Url": "https://api.github.com/repos/Rubicon-Bot/Rubicon", "Date": "2018-05-06T10:19:07Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(fun.rubicon.RubiconBot.getConfiguration().has(\"supporthook\"))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/186/buggy-version/src.main.java.fun.rubicon.commands.general.CommandSupport.java", "BodyUseAPI": [], "Fixed commit": "408ff00c07d730b6ddf0bb04c8331059316b8090", "Url": "https://api.github.com/repos/Rubicon-Bot/Rubicon", "Date": "2018-05-06T10:19:07Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((source.getAddress()) != null) { target.setAddress(addressConverter.convert(source.getAddress())); }else { target.setAddress(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1767/buggy-version/fullmoda.src.main.java.it.sopra.stage.fullmoda.converter.UserConverter.java", "BodyUseAPI": ["it.sopra.stage.fullmoda.model.User.getAddress()", "it.sopra.stage.fullmoda.converter.AddressConverter.convert(source.getAddress())", "it.sopra.stage.fullmoda.dto.UserData.setAddress(addressConverter.convert(source.getAddress()))"], "Fixed commit": "5744f609935dc48512c67261d7e8b4a747940f20", "Url": "https://api.github.com/repos/filipporigamonti/fullmoda_repositpory", "Date": "2018-02-19T15:25:16Z"},
{"Line": "=>539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["var.getRef().length()", "var.getAlt().length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (reflength != altlength) { if (var.getAlt().equals(\"-\")) { altlength = altlength - 1; } if (var.getRef().equals(\"-\")) { reflength = reflength - 1; } indelsize = java.lang.Math.abs((reflength - altlength)); var.addPropertyInt(VariantRec.INDEL_LENGTH, indelsize); }else if (indelsize == 0) { var.addPropertyInt(VariantRec.INDEL_LENGTH, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7326/buggy-version/src.main.java.util.vcfParser.VCFParser.java", "BodyUseAPI": [], "Fixed commit": "adba59038839f0410d50e83563a92540f8bd3496", "Url": "https://api.github.com/repos/ARUP-NGS/Pipeline", "Date": "2018-06-18T18:42:56Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDistance) > 0) { if (centerLeftStartX < 0) { break; } }else { if (centerRightStartX > (mViewRectF.width())) { break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5652/buggy-version/app.src.main.java.com.qinggan.myapplication.DefStyleScaleView5.java", "BodyUseAPI": [], "Fixed commit": "97b51556b91e4e4a5ad91a623ab4a755d345e306", "Url": "https://api.github.com/repos/ThinkJarvis/ScaleView", "Date": "2018-07-09T15:36:27Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(messageField.getText().isEmpty())) { messageArea.appendText(((((\"[\" + (currentUser)) + \"] \") + (messageField.getText())) + \"\\n\")); messageField.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8630/buggy-version/src.sample.ControllerThree.java", "BodyUseAPI": ["javafx.scene.control.TextField.getText()", "javafx.scene.control.TextArea.appendText(((((\"[\" + (currentUser)) + \"] \") + (messageField.getText())) + \"\\n\"))", "javafx.scene.control.TextField.clear()"], "Fixed commit": "017ff69d7dccb738858898552eb1ebf06b99ba60", "Url": "https://api.github.com/repos/mmadrus/QueueUP_App", "Date": "2018-04-16T08:11:15Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.DataInput.readLong()", "java.io.DataInput.readLong()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((seg == (-1)) && (pos == (-1))) { lsn = null; }else { lsn = new com.orientechnologies.orient.core.storage.impl.local.paginated.wal.OLogSequenceNumber(seg, pos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9549/buggy-version/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OUpdateDatabaseStatusTask.java", "BodyUseAPI": [], "Fixed commit": "607f7669ff4ee4f3837f3fc2364a88df1bbb243d", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2018-08-24T10:50:29Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lsn) == null) { out.writeLong((-1)); out.writeLong((-1)); }else { out.writeLong(lsn.getSegment()); out.writeLong(lsn.getPosition()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9549/buggy-version/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OUpdateDatabaseStatusTask.java", "BodyUseAPI": [], "Fixed commit": "607f7669ff4ee4f3837f3fc2364a88df1bbb243d", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2018-08-24T10:50:29Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((drugs.size()) == 0) return new java.lang.String[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9790/buggy-version/app.src.main.java.net.ozero.drugsreminder.DataStructures.Drug.java", "BodyUseAPI": [], "Fixed commit": "50c4acaf1196eeebf3553969483da64ecf7d29e9", "Url": "https://api.github.com/repos/lexasok/DrugsReminder", "Date": "2018-07-11T08:07:44Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Qresults[5]) != (-2)) { android.widget.Toast showUp = android.widget.Toast.makeText(this, \"Please answer to all questions\", Toast.LENGTH_SHORT); showUp.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1507/buggy-version/app.src.main.java.com.example.estelleyyy.clinic_in_a_box.Questionnaire.java", "BodyUseAPI": [], "Fixed commit": "a06e903aab7afaef85a5e025e234b848203c2748", "Url": "https://api.github.com/repos/yangyytn/Clinic_in_a_box", "Date": "2018-03-18T00:50:46Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fruct.oss.smartjavalog.OntologyFactory.getInstance().getDataType(org.semanticweb.owlapi.model.IRI)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (dataType != null) { ret = dataType.getOWLDataTypes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3445/buggy-version/src.main.java.org.fruct.oss.smartjavalog.OntologyProperty.java", "BodyUseAPI": ["org.fruct.oss.smartjavalog.OntologyComplexDataType.getOWLDataTypes()"], "Fixed commit": "05f62ec707d1763f82af08c8fa534d95d2037148", "Url": "https://api.github.com/repos/seekerk/smartjavalog", "Date": "2018-06-15T12:40:29Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (uriPart1.startsWith(\"//\")) { uriPart1 = \"https:\" + uriPart1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4459/buggy-version/src.main.java.de.berlios.vch.parser.ard.VideoItemPageParser.java", "BodyUseAPI": [], "Fixed commit": "6c77a5704e67d510068ece832d027d1dab24d3b8", "Url": "https://api.github.com/repos/hampelratte/vch-parser-ard", "Date": "2018-05-27T11:02:28Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bodyDescription.isFixedRotation) body.setMassType(Mass.Type.FIXED_ANGULAR_VELOCITY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3938/buggy-version/src.main.java.io.github.jevaengine.world.physics.dyn4j.Dyn4jWorld.java", "BodyUseAPI": [], "Fixed commit": "ec2482a1af6cfd23238046c8dded162fddc44f13", "Url": "https://api.github.com/repos/JeremyWildsmith/jevaengine", "Date": "2018-01-30T22:37:37Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((id >= 0) && (id < (menuItemsList.size()))) { return (menuItemsList.remove(id)) != null; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6975/buggy-version/src.main.com.capgemini.service.MenuItemService.java", "BodyUseAPI": ["java.util.ArrayList<com.capgemini.model.MenuItem>.remove(int)"], "Fixed commit": "0e552fc72aef127364338df477e2a89bda18ea4d", "Url": "https://api.github.com/repos/TeamZonderNaam/MolvenoRestaurant", "Date": "2018-09-20T12:50:33Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i >= 0) && (i < (menuItemsList.size()))) { return menuItemsList.get(i); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6975/buggy-version/src.main.com.capgemini.service.MenuItemService.java", "BodyUseAPI": ["java.util.ArrayList<com.capgemini.model.MenuItem>.get(int)"], "Fixed commit": "0e552fc72aef127364338df477e2a89bda18ea4d", "Url": "https://api.github.com/repos/TeamZonderNaam/MolvenoRestaurant", "Date": "2018-09-20T12:50:33Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.ArrayList<com.rescribe.doctor.model.patient.patient_history.PatientHistoryInfo>>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((monthArrayListHashMap.get(month)) != null) formattedDoctorList.addAll(monthArrayListHashMap.get(month));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9437/buggy-version/app.src.main.java.com.rescribe.doctor.ui.fragments.patient.patient_history_fragment.PatientHistoryCalenderListFragment.java", "BodyUseAPI": ["java.util.ArrayList<com.rescribe.doctor.model.patient.patient_history.PatientHistoryInfo>.addAll(monthArrayListHashMap.get(month))", "java.util.Map<java.lang.String, java.util.ArrayList<com.rescribe.doctor.model.patient.patient_history.PatientHistoryInfo>>.get(java.lang.String)"], "Fixed commit": "fea46253fd7f9d1b2f627400f1c47c494eb00fa2", "Url": "https://api.github.com/repos/sandeepbahalkar123/rescribeDoctor_repo", "Date": "2018-08-14T11:35:21Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["SCMSource.SourceByItem.findSource(build.getParent())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(s instanceof com.cloudbees.jenkins.plugins.bitbucket.BitbucketSCMSource)) { if (com.cloudbees.jenkins.plugins.bitbucket.BitbucketBuildStatusNotifications.sourceCache.containsKey(buildName)) { s = com.cloudbees.jenkins.plugins.bitbucket.BitbucketBuildStatusNotifications.sourceCache.get(buildName); }else { if ((com.cloudbees.jenkins.plugins.bitbucket.BitbucketBuildStatusNotifications.sourceCache.size()) == (com.cloudbees.jenkins.plugins.bitbucket.BitbucketBuildStatusNotifications.MAX_ENTRIES)) { listener.getLogger().println(\"[Bitbucket] Cann't notify. Source cache is full.\"); } return; } }else { com.cloudbees.jenkins.plugins.bitbucket.BitbucketBuildStatusNotifications.sourceCache.put(buildName, s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9277/buggy-version/src.main.java.com.cloudbees.jenkins.plugins.bitbucket.BitbucketBuildStatusNotifications.java", "BodyUseAPI": ["java.util.LinkedHashMap<java.lang.String, jenkins.scm.api.SCMSource>.put(java.lang.String,jenkins.scm.api.SCMSource)"], "Fixed commit": "9661535301fbc548b6fddaa74dfb0d1a23dbfd22", "Url": "https://api.github.com/repos/benjaminfuchs/bitbucket-branch-source-plugin", "Date": "2018-04-06T23:51:21Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (num == null) num = \"0\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7675/buggy-version/project2.src.main.java.Editor.java", "BodyUseAPI": [], "Fixed commit": "3ee46a3c2f3624391ce3caeb8db969ca31717245", "Url": "https://api.github.com/repos/Masami96/CS144", "Date": "2018-01-28T06:57:53Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pl.ciborowski.konrad.hsbc.entities.User.getFollowees()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (followees.isEmpty()) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/156/buggy-version/src.main.java.pl.ciborowski.konrad.hsbc.services.TweetService.java", "BodyUseAPI": [], "Fixed commit": "a4492a9b03836ae880df596470e677f5f2e1bc20", "Url": "https://api.github.com/repos/Cibor/HSBC", "Date": "2018-02-26T19:02:13Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!found) { throw new biocode.fims.fimsExceptions.FimsRuntimeException(UNKNOWN_COLUMN, 400, col); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4900/buggy-version/src.main.java.biocode.fims.rest.services.subResources.ProjectTemplatesResource.java", "BodyUseAPI": [], "Fixed commit": "ea4ca252afbe5bef7aa5ab36b46180d5ae2a23a7", "Url": "https://api.github.com/repos/biocodellc/biocode-fims-commons", "Date": "2018-05-15T13:51:24Z"},
{"Line": "=>521", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (columnSize.hasKnownSize()) { estOutputRowWidth += columnSize.getKnownSize(); estBatchHolderValuesRowWidth += columnSize.getKnownSize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6839/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.physical.impl.aggregate.HashAggTemplate.java", "BodyUseAPI": ["RecordBatchSizer.ColumnSize.getKnownSize()", "RecordBatchSizer.ColumnSize.getKnownSize()"], "Fixed commit": "b76700ce238b254b287bbd5f4985e1630422cfa7", "Url": "https://api.github.com/repos/ilooner/drill", "Date": "2018-02-02T19:32:31Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(leviathan143.loottweaker.common.tweakers.LootTableTweaker.tableLoadingStarted)) { leviathan143.loottweaker.common.tweakers.LootTableTweaker.tableLoadingStarted = true; leviathan143.loottweaker.common.tweakers.LootTableTweaker.onTableLoadingStarted(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5028/buggy-version/src.main.java.leviathan143.loottweaker.common.tweakers.LootTableTweaker.java", "BodyUseAPI": [], "Fixed commit": "4d11da955a06a7c542d72e25b04c4fb7982b1407", "Url": "https://api.github.com/repos/Daomephsta/LootTweaker", "Date": "2018-02-24T04:40:42Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dealerHand.getHandValue()) > 21) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8450/buggy-version/src.com.skilldistillery.blackjack.BlackjackApp.java", "BodyUseAPI": [], "Fixed commit": "11526c6ef4d8d7d7cca9adf3d929206ec5da7e66", "Url": "https://api.github.com/repos/hzelenka/BlackjackProject", "Date": "2018-09-17T14:17:47Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!first) { double avr = (summe.doubleValue()) / (listPrice.size()); java.math.BigDecimal average = java.math.BigDecimal.valueOf(avr).setScale(2, java.math.RoundingMode.HALF_UP); textFieldAverage.setText(average.toString()); }else textFieldAverage.setText(\"0\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6359/buggy-version/src.com.sm.net.apc.view.ProductEditor.java", "BodyUseAPI": [], "Fixed commit": "b5ad970f62d0b4199c19839de77f1042b26d4839", "Url": "https://api.github.com/repos/SM-Net-Application/sm-net-project-2", "Date": "2018-07-17T13:19:55Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mortr.soloviev.mdc2018soloviev.ui.launcher.LaunchPagesFragment.getContext()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (context == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9669/buggy-version/app.src.main.java.com.mortr.soloviev.mdc2018soloviev.ui.launcher.LaunchPagesFragment.java", "BodyUseAPI": [], "Fixed commit": "af4346a9a358cd0a9332368b89e4dbd4dacb6742", "Url": "https://api.github.com/repos/mortr/MDC2018Soloviev", "Date": "2018-02-20T09:22:05Z"},
{"Line": "=>510", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.web3j.protocol.core.methods.response.EthSendTransaction.getTransactionHash()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tx == null) { throw new java.lang.Exception(\"transfer fail\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5207/buggy-version/bipawallet.app.src.main.java.com.example.jeliu.bipawallet.Fragment.AssetFragment.java", "BodyUseAPI": [], "Fixed commit": "68a300f2ce65d2112b71a50f8a288329dec4a0d1", "Url": "https://api.github.com/repos/aaaking/androidProjects", "Date": "2018-09-12T02:58:22Z"},
{"Line": "=>544", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.web3j.protocol.core.methods.response.TransactionReceipt.getTransactionHash()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tx == null) { throw new java.lang.Exception(\"transfer fail\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5207/buggy-version/bipawallet.app.src.main.java.com.example.jeliu.bipawallet.Fragment.AssetFragment.java", "BodyUseAPI": [], "Fixed commit": "68a300f2ce65d2112b71a50f8a288329dec4a0d1", "Url": "https://api.github.com/repos/aaaking/androidProjects", "Date": "2018-09-12T02:58:22Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.sqrt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (squareRoot != ((int) (squareRoot))) { squareRoot = squareRoot + 1; squareRoot = java.lang.Math.floor(squareRoot); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3383/buggy-version/PixelDecoder.src.cz.GravelCZLP.PixelDecoder.Main.java", "BodyUseAPI": [], "Fixed commit": "5b1f9f65ff483e0de0e1314d6454cdf995f8ed44", "Url": "https://api.github.com/repos/GravelCZLP/PixelConverter", "Date": "2018-02-27T16:14:02Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toCharArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (charAt >= (binArray.length)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3383/buggy-version/PixelDecoder.src.cz.GravelCZLP.PixelDecoder.Main.java", "BodyUseAPI": [], "Fixed commit": "5b1f9f65ff483e0de0e1314d6454cdf995f8ed44", "Url": "https://api.github.com/repos/GravelCZLP/PixelConverter", "Date": "2018-02-27T16:14:02Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isIconSpaceReserved())) { androidx.core.view.ViewCompat.setPaddingRelative(parent, 0, parent.getPaddingTop(), 0, parent.getPaddingBottom()); }else { androidx.core.view.ViewCompat.setPaddingRelative(parent, com.takisoft.preferencex.PreferenceCategory.originalStartPadding, parent.getPaddingTop(), 0, parent.getPaddingBottom()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7523/buggy-version/preferencex.src.main.java.com.takisoft.preferencex.PreferenceCategory.java", "BodyUseAPI": [], "Fixed commit": "9f7ce1e795fe239eca83939624812c0e3bb96751", "Url": "https://api.github.com/repos/Gericop/Android-Support-Preference-V7-Fix", "Date": "2018-07-23T11:21:49Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(reportPOJO.getgoogleMapSnapShotFilePath().isEmpty())) { java.io.File file = new java.io.File(reportPOJO.getgoogleMapSnapShotFilePath()); if (file.exists()) { double remainingHeight = java.lang.Math.abs(((document.bottom()) - (pdfWriter.getVerticalPosition(true)))); byte[] imgResized = resizeImage(reportPOJO.getgoogleMapSnapShotFilePath(), ((int) (document.getPageSize().getWidth())), ((int) (remainingHeight))); com.itextpdf.text.Image imgMap = com.electivechaos.claimsadjuster.asynctasks.com.itextpdf.text.Image.getInstance(imgResized); document.add(imgMap); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9292/buggy-version/project.app.src.main.java.com.electivechaos.claimsadjuster.asynctasks.DBUpdateFilePath.java", "BodyUseAPI": ["com.electivechaos.claimsadjuster.asynctasks.DBUpdateFilePath.resizeImage(reportPOJO.getgoogleMapSnapShotFilePath(),((int) (document.getPageSize().getWidth())),double)", "com.electivechaos.claimsadjuster.pojo.ReportPOJO.getgoogleMapSnapShotFilePath()", "com.electivechaos.claimsadjuster.pojo.ReportPOJO.getgoogleMapSnapShotFilePath()"], "Fixed commit": "a377d6296996f2c152b786a0a6a9d0fa116a578e", "Url": "https://api.github.com/repos/krishnakhandagale/RoportTool", "Date": "2018-05-22T05:25:30Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (turn < (-0.1)) { lmotor.setPower((-turn)); rmotor.setPower(turn); }else if ((fb > 0.1) || (fb < (-0.1))) { lmotor.setPower(fb); rmotor.setPower(fb); }else { lmotor.setPower(0); rmotor.setPower(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3670/buggy-version/TankWheels.java", "BodyUseAPI": ["com.qualcomm.robotcore.hardware.DcMotor.setPower(double)", "com.qualcomm.robotcore.hardware.DcMotor.setPower(double)"], "Fixed commit": "4ed87037dc01307dbf9325a76a5cfaa85cadab41", "Url": "https://api.github.com/repos/FutureTitanRobotics/FTR-Programming", "Date": "2018-10-02T20:11:05Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getAdapterPosition()) == (-1)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4126/buggy-version/app.src.main.java.com.moyersoftware.contender.menu.adapter.GamesAdapter.java", "BodyUseAPI": [], "Fixed commit": "d0de2a59e84da6d412bd590cdcd3aa78201e0fc6", "Url": "https://api.github.com/repos/sheyko-d/Contender", "Date": "2018-01-30T11:48:39Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.troytan.sixpack.repository.VoteMapper.getDebateResult(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (debateResult != null) { java.lang.Integer totalCount = debateMapper.selectByPrimaryKey(debateId).getTotalCount(); debateResult.setTotalCount(totalCount); debateResult.setLeftCount(((totalCount - (debateResult.getObverseCount())) - (debateResult.getReverseCount()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6391/buggy-version/sixpack-back.src.main.java.com.troytan.sixpack.service.DebateServiceImpl.java", "BodyUseAPI": ["com.troytan.sixpack.dto.DebateResult.getReverseCount()", "com.troytan.sixpack.dto.DebateResult.setTotalCount(java.lang.Integer)", "com.troytan.sixpack.dto.DebateResult.getObverseCount()", "com.troytan.sixpack.dto.DebateResult.setLeftCount(((totalCount - (debateResult.getObverseCount())) - (debateResult.getReverseCount())))"], "Fixed commit": "04a4a438aa15bc80759661f39b5f7b904822542c", "Url": "https://api.github.com/repos/troytan1991/sixpack", "Date": "2018-10-26T08:03:36Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mad24.polito.it.fragments.ProfileFragment.2.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((activity != null) && (isAdded())) profile_img.setImageDrawable(getResources().getDrawable(R.drawable.unknown_user));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3032/buggy-version/app.src.main.java.mad24.polito.it.fragments.ProfileFragment.java", "BodyUseAPI": [], "Fixed commit": "d059c6df1f6910e3c8363e096e48b1a1990621cb", "Url": "https://api.github.com/repos/SunSince90/Libre", "Date": "2018-05-04T14:44:12Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(seedu.addressbook.data.person.Address.isValidAddress(addressArr))) { throw new seedu.addressbook.data.exception.IllegalValueException(seedu.addressbook.data.person.Address.MESSAGE_ADDRESS_CONSTRAINTS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8071/buggy-version/src.seedu.addressbook.data.person.Address.java", "BodyUseAPI": [], "Fixed commit": "e68ad1dcb4727116fc44b43aab22245144ba2150", "Url": "https://api.github.com/repos/jingyinno/addressbook-level2", "Date": "2018-02-07T15:16:57Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mWindowManager) != null) && ((mFloatView) != null)) { mWindowManager.removeView(mFloatView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7285/buggy-version/app.src.main.java.name.arche.www.answerassistant.services.WebViewWindow.java", "BodyUseAPI": [], "Fixed commit": "e81e6cd2fb43842676edc5926099328266c9b57f", "Url": "https://api.github.com/repos/zArche/AnswerAssistant", "Date": "2018-01-15T10:12:15Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ts) != null) { mil.Type[] nts = new mil.Type[ts.length]; for (int i = 0; i < (ts.length); i++) { nts[i] = ts[i].canonType(spec); } ts = nts; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7882/buggy-version/src.mil.External.java", "BodyUseAPI": [], "Fixed commit": "2e765184ec40f486c79664aa2c02a3cad73a9196", "Url": "https://api.github.com/repos/habit-lang/mil-tools", "Date": "2018-08-06T04:09:23Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (instance.getInstanceId().isPresent()) { instanceId = instance.getInstanceId().get(); }else { if (metadata.contains(\"instanceId\")) { instanceId = metadata.asMap().get(\"instanceId\"); }else { if (io.micronaut.discovery.aws.route53.registration.Route53AutoNamingRegistrationClient.LOG.isErrorEnabled()) { io.micronaut.discovery.aws.route53.registration.Route53AutoNamingRegistrationClient.LOG.error(\"Cannot determine the instance ID. Are you sure you are running on AWS EC2?\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7629/buggy-version/discovery-client.src.main.java.io.micronaut.discovery.aws.route53.registration.Route53AutoNamingRegistrationClient.java", "BodyUseAPI": ["io.micronaut.discovery.ServiceInstance.getInstanceId()", "instance.getInstanceId().get()"], "Fixed commit": "63d8332550fe46d35a97882f69f6a2b2f2bae015", "Url": "https://api.github.com/repos/micronaut-projects/micronaut-core", "Date": "2018-08-17T19:34:54Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result.size()) > 0) { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/18/buggy-version/src.main.java.event.DateEvService.java", "BodyUseAPI": [], "Fixed commit": "84f3dd8cd307747a9cb41667a853611c59df32d9", "Url": "https://api.github.com/repos/remmi21/ProjectSWS-Events", "Date": "2018-05-13T12:17:35Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (activeChannel.equalsIgnoreCase(\"general\")) { java.lang.System.out.println(\"someone tried to delete the General channel\"); player.sendMessage(((org.bukkit.ChatColor.RED) + \"General chat is required for the plugin to work, please don't delete it!\")); }else { java.util.ArrayList<org.bukkit.entity.Player> channelUsers = channels.get(activeChannel).getPlayers(); for (int i = 0; i < (channelUsers.size()); i++) { swapChannel(channelUsers.get(i), \"General\"); } channels.remove(activeChannel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5888/buggy-version/src.main.java.com.chosen.www.chat.commands.Commands.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, com.chosen.www.chat.ChatChannel>.remove(java.lang.String)", "channels.get(activeChannel).getPlayers()", "java.util.HashMap<java.lang.String, com.chosen.www.chat.ChatChannel>.get(java.lang.String)"], "Fixed commit": "2d0304157ddbbd79d1e9e68a0cba52189340c5df", "Url": "https://api.github.com/repos/Chosencraft/ChosenChat", "Date": "2018-08-08T04:42:16Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.provider.DocumentsContract.getDocumentId(android.net.Uri)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (id.startsWith(\"raw:\")) { return id.replaceFirst(\"raw:\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1523/buggy-version/app.src.main.java.ru.sem.animalfeed.utils.ImageFilePath.java", "BodyUseAPI": ["java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "393e3e66f0cb5627bb3505e5041822cdf6a3334b", "Url": "https://api.github.com/repos/zzzSeMzzz/ReptileFeedTimer", "Date": "2018-09-04T09:51:34Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(Lizzie.config.showBestMoves)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3168/buggy-version/src.main.java.wagner.stephanie.lizzie.gui.BoardRenderer.java", "BodyUseAPI": [], "Fixed commit": "3feaff0683be7fe31f0bfca9501b7563ae368d27", "Url": "https://api.github.com/repos/cngoodboy/lizzie", "Date": "2018-04-05T03:25:58Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(password.isEmpty())) { this.password = new org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder().encode(password); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7957/buggy-version/src.main.java.com.puma.model.User.java", "BodyUseAPI": ["org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder.encode(java.lang.String)"], "Fixed commit": "14e11dcf57e198be27b03a432adb104cc7eb039f", "Url": "https://api.github.com/repos/Projeto-PUMA/backend-puma", "Date": "2018-09-24T04:09:25Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isListUpdated) { dataset.add(0, groupChannel); notifyItemInserted(0); chatCampDatabaseHelper.addGroupChannel(groupChannel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8697/buggy-version/chatkit.src.main.java.com.chatcamp.uikit.channel.ChannelAdapter.java", "BodyUseAPI": [], "Fixed commit": "34c5362180123dfb044809e540106367dd7aab19", "Url": "https://api.github.com/repos/ChatCamp/ChatCamp-Android-UI-Kit", "Date": "2018-09-07T12:15:06Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stream == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6963/buggy-version/components.org.wso2.carbon.privacy.forgetme.analytics.streams.src.main.java.org.wso2.carbon.privacy.forgetme.analytics.streams.instructions.AnalyticsStreamsInstruction.java", "BodyUseAPI": [], "Fixed commit": "91b0696e70abdc99c3251c54f0f7600e6da17603", "Url": "https://api.github.com/repos/wso2/identity-anonymization-tool", "Date": "2018-03-13T13:57:09Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i + 1) < (row.size())) { writer.append(((((((((((SINGLE_TAB + NEW_LINE_SEPARATOR) + DOUBLE_TAB) + '\"') + (columnNames[i])) + '\"') + DATA_SEPARATOR) + '\"') + (row.get(i))) + '\"') + COMMA_DELIMITER)); }else { writer.append((((((((((SINGLE_TAB + NEW_LINE_SEPARATOR) + DOUBLE_TAB) + '\"') + (columnNames[i])) + '\"') + DATA_SEPARATOR) + '\"') + (row.get(i))) + '\"')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/172/buggy-version/src.anon.database.Table.java", "BodyUseAPI": ["java.io.FileWriter.append(java.lang.String)", "java.io.FileWriter.append(java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "51445a4f4a8c9d355315c72632468850654b8055", "Url": "https://api.github.com/repos/anongrp/AnDatabase-Java", "Date": "2018-02-09T03:41:56Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.length) > 1) { (this.position)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8274/buggy-version/src.linkedlist.SinglyLinkedList.java", "BodyUseAPI": [], "Fixed commit": "cbd242a42bca06761b8c63ba2c73bd46d71cad2f", "Url": "https://api.github.com/repos/mattshoe81/componentslibrary", "Date": "2018-03-06T13:57:07Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (userInput > (taskLibrary.size())) { java.lang.System.out.println(\"please insert a number from one of the following above.\"); editTaskInfo(); }else { com.company.Info displayTask = taskLibrary.get(userInput); java.lang.System.out.println((((((displayTask.getTaskName()) + \" \") + (displayTask.getDueDate())) + \" \") + (displayTask.getDetails()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4278/buggy-version/src.com.company.Tasks.java", "BodyUseAPI": ["java.util.List<com.company.Info>.get(int)"], "Fixed commit": "d8cf03c05194df64db072bce8e01715a060734c6", "Url": "https://api.github.com/repos/LanceMoreland99/TaskManagerProject", "Date": "2018-03-02T20:33:14Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.revature.services.UserService.findByUserIdAndPass(u.getUserId(),u.getPass())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (user != null) { data.put(\"user\", user); data.put(\"jwt\", jwt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1982/buggy-version/UserService.User-Service.src.main.java.com.revature.controllers.UserController.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,com.revature.models.User)"], "Fixed commit": "3e026388407fb913eca2c3b52313a2f1ff763fa8", "Url": "https://api.github.com/repos/ServerTeamTalentPortalDream/Talent-Portal-Server", "Date": "2018-10-08T20:41:44Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((roofTiles) != null) { roofTiles.brightness(brightnessValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6857/buggy-version/PixelDungeon.src.main.java.com.watabou.pixeldungeon.scenes.GameScene.java", "BodyUseAPI": [], "Fixed commit": "b9b74b631bd0502b06792c90d104089d85cd35e9", "Url": "https://api.github.com/repos/NYRDS/pixel-dungeon-remix", "Date": "2018-03-01T19:53:51Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.pixeltime.enchantmentsenhance.gui.GUIManager.getMap().containsKey(player.getName())) { org.pixeltime.enchantmentsenhance.gui.GUIManager.getMap().remove(player.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6294/buggy-version/src.main.java.org.pixeltime.enchantmentsenhance.gui.GUIAbstract.java", "BodyUseAPI": [], "Fixed commit": "0610ac452c6b51b935a10368d4a5cbce4ef02e46", "Url": "https://api.github.com/repos/25/EnchantmentsEnhance", "Date": "2018-07-14T00:28:40Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((db.columnNum()) == 0) { android.widget.Toast.makeText(getContext(), \"\uc74c\uc2dd\uc774 \uc5c6\uc5b4\uc694\", Toast.LENGTH_LONG).show(); }else { java.lang.String fname = ((itemText.getText().toString()) + \" \") + \"\ub808\uc2dc\ud53c\"; android.content.Intent intent = new android.content.Intent(android.content.Intent.ACTION_SEARCH); intent.setPackage(\"com.google.android.youtube\"); intent.putExtra(\"query\", fname); try { startActivity(intent); } catch (android.content.ActivityNotFoundException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5254/buggy-version/app.src.main.java.com.namjongbin.fridge_angel.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "9bfcd22b5d0d582c2bc2268d89819e5ca1c70a3f", "Url": "https://api.github.com/repos/jj9243/Angel_Fridge", "Date": "2018-06-09T05:17:08Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (org.sunbird.learner.datapersistence.DbOperationActor.tableList)) { org.sunbird.learner.datapersistence.DbOperationActor.createtableList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6448/buggy-version/actors.common.src.main.java.org.sunbird.learner.datapersistence.DbOperationActor.java", "BodyUseAPI": [], "Fixed commit": "b703a187fe7fb2a74e9af226b959f1e2f4592436", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-mw", "Date": "2018-07-26T09:45:34Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (actorMessage.getOperation().equalsIgnoreCase(ActorOperations.CREATE_DATA.getValue())) { create(actorMessage); }else if (actorMessage.getOperation().equalsIgnoreCase(ActorOperations.UPDATE_DATA.getValue())) { update(actorMessage); }else if (actorMessage.getOperation().equalsIgnoreCase(ActorOperations.DELETE_DATA.getValue())) { delete(actorMessage); }else if (actorMessage.getOperation().equalsIgnoreCase(ActorOperations.READ_DATA.getValue())) { read(actorMessage); }else if (actorMessage.getOperation().equalsIgnoreCase(ActorOperations.READ_ALL_DATA.getValue())) { readAllData(actorMessage); }else if (actorMessage.getOperation().equalsIgnoreCase(ActorOperations.SEARCH_DATA.getValue())) { search(actorMessage); }else if (actorMessage.getOperation().equalsIgnoreCase(ActorOperations.GET_METRICS.getValue())) { getMetrics(actorMessage); }else { onReceiveUnsupportedOperation(actorMessage.getOperation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6448/buggy-version/actors.common.src.main.java.org.sunbird.learner.datapersistence.DbOperationActor.java", "BodyUseAPI": ["org.sunbird.common.request.Request.getOperation()", "org.sunbird.common.request.Request.getOperation()", "actorMessage.getOperation().equalsIgnoreCase(ActorOperations.UPDATE_DATA.getValue())", "org.sunbird.learner.datapersistence.DbOperationActor.delete(org.sunbird.common.request.Request)", "org.sunbird.common.request.Request.getOperation()", "org.sunbird.common.request.Request.getOperation()", "org.sunbird.learner.datapersistence.DbOperationActor.getMetrics(org.sunbird.common.request.Request)", "actorMessage.getOperation().equalsIgnoreCase(ActorOperations.GET_METRICS.getValue())", "actorMessage.getOperation().equalsIgnoreCase(ActorOperations.SEARCH_DATA.getValue())", "org.sunbird.learner.datapersistence.DbOperationActor.readAllData(org.sunbird.common.request.Request)", "org.sunbird.learner.datapersistence.DbOperationActor.read(org.sunbird.common.request.Request)", "org.sunbird.learner.datapersistence.DbOperationActor.search(org.sunbird.common.request.Request)", "org.sunbird.common.request.Request.getOperation()", "org.sunbird.learner.datapersistence.DbOperationActor.onReceiveUnsupportedOperation(actorMessage.getOperation())", "actorMessage.getOperation().equalsIgnoreCase(ActorOperations.DELETE_DATA.getValue())", "org.sunbird.learner.datapersistence.DbOperationActor.update(org.sunbird.common.request.Request)", "org.sunbird.common.request.Request.getOperation()", "org.sunbird.common.request.Request.getOperation()", "org.sunbird.learner.datapersistence.DbOperationActor.create(org.sunbird.common.request.Request)", "actorMessage.getOperation().equalsIgnoreCase(ActorOperations.READ_DATA.getValue())", "actorMessage.getOperation().equalsIgnoreCase(ActorOperations.READ_ALL_DATA.getValue())"], "Fixed commit": "b703a187fe7fb2a74e9af226b959f1e2f4592436", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-mw", "Date": "2018-07-26T09:45:34Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((res.length()) < 8) { res = res.substring(0, res.length()); }else { res = res.substring(0, 8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1607/buggy-version/src.StringUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "e4435488f4e7d956921002297408d5cabe321f8f", "Url": "https://api.github.com/repos/Purdue-CS193/lab-3-nathanashta", "Date": "2018-09-27T12:58:25Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pratilipi.filter.AccessTokenFilter.getCookieValue(RequestCookie.ACCESS_TOKEN.getName(),javax.servlet.http.HttpServletRequest)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(accessToken.getId().equals(accessTokenCookie))) { accessTokenId = accessToken.getId(); com.pratilipi.filter.AccessTokenFilter.setCookieValue(RequestCookie.ACCESS_TOKEN.getName(), accessTokenId, 30, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3539/buggy-version/src.main.java.com.pratilipi.filter.AccessTokenFilter.java", "BodyUseAPI": ["com.pratilipi.data.type.AccessToken.getId()"], "Fixed commit": "2659207330961f61683fc75bede9d3f04bda4687", "Url": "https://api.github.com/repos/Pratilipi-Growth/pratilipi", "Date": "2018-02-09T09:11:45Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((images.size()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2506/buggy-version/src.main.java.jatoo.imager.JaTooImager.java", "BodyUseAPI": [], "Fixed commit": "edc3a483bc9073fd50e7c3ff8ad4c64064e8c3d4", "Url": "https://api.github.com/repos/cristian-sulea/jatoo-imager", "Date": "2018-01-17T08:18:09Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((images.size()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2506/buggy-version/src.main.java.jatoo.imager.JaTooImager.java", "BodyUseAPI": [], "Fixed commit": "edc3a483bc9073fd50e7c3ff8ad4c64064e8c3d4", "Url": "https://api.github.com/repos/cristian-sulea/jatoo-imager", "Date": "2018-01-17T08:18:09Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (listOfFile.isDirectory()) { java.lang.System.out.println((\"Directory \" + (listOfFile.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7404/buggy-version/src.com.technorex.browser.NotePad.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.io.File.getName()"], "Fixed commit": "4dac20030fddafb2303e9951e5629059c55a70a4", "Url": "https://api.github.com/repos/Geektrovert/Turbo", "Date": "2018-05-02T12:08:42Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.checkerframework.javacutil.TypesUtils.getTypeElement(receiverType.getUnderlyingType())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isIterator(receiverUnderlyingType.asType())) { if (invokedMethodElement.getSimpleName().contentEquals(\"next\")) { if ((p.getUnderlyingType().getKind()) != (javax.lang.model.type.TypeKind.TYPEVAR)) { if ((receiverType.hasAnnotation(NONDET)) || (receiverType.hasAnnotation(ORDERNONDET))) { p.replaceAnnotation(NONDET); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1461/buggy-version/checker.src.main.java.org.checkerframework.checker.determinism.DeterminismAnnotatedTypeFactory.java", "BodyUseAPI": [], "Fixed commit": "9a3e1e905f67fdfefb75aa632d63b3e1e8e5f1b5", "Url": "https://api.github.com/repos/t-rasmud/checker-framework", "Date": "2018-08-31T00:09:54Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.minions.monsters.get(0).id) == \"Lily\") { AbstractDungeon.actionManager.addToBottom(new com.megacrit.cardcrawl.actions.animations.TalkAction(true, \"Lily is already summoned!\", 1.0F, 2.0F)); }else { player.addMinion(new yohanemod.summons.Lily()); com.megacrit.cardcrawl.monsters.AbstractMonster Lily = player.minions.monsters.get(1); AbstractDungeon.actionManager.addToBottom(new com.megacrit.cardcrawl.actions.common.ApplyPowerAction(Lily, abstractPlayer, new yohanemod.powers.SoulLink(player, 1), 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1457/buggy-version/src.main.java.yohanemod.cards.Little_Demon_Lily.java", "BodyUseAPI": ["player.minions.monsters.get(int)", "AbstractDungeon.actionManager.addToBottom(com.megacrit.cardcrawl.actions.common.ApplyPowerAction)", "characters.AbstractPlayerWithMinions.addMinion(yohanemod.summons.Lily)"], "Fixed commit": "92541b3caff3cbfe215dc35ab8281fa08767b2ed", "Url": "https://api.github.com/repos/ReinaSHSL/Yohane-", "Date": "2018-07-22T06:31:53Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(path.isEmpty())) || isOrigin) { path.add(point); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6964/buggy-version/java.src.main.java.codinginterview.book.Ch8_RecursionAndDP.java", "BodyUseAPI": ["java.util.List<codinginterview.book.Ch8_RecursionAndDP.Point>.add(codinginterview.book.Ch8_RecursionAndDP.Point)"], "Fixed commit": "35e9b48a91ea25944d1e4d86b3ffe90b8fb61cf8", "Url": "https://api.github.com/repos/Apophany/coding-exercises", "Date": "2018-05-08T19:04:19Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.scrats.rent.base.service.RedisService.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((null == user) || ((userId - (user.getUserId())) != 0)) { throw new com.scrats.rent.common.exception.NotAuthorizedException(\"\u53c2\u6570\u9519\u8bef\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2209/buggy-version/src.main.java.com.scrats.rent.controller.RoomController.java", "BodyUseAPI": [], "Fixed commit": "518278e2e5bacdb7b1acd54f7ba1d7ddffd42857", "Url": "https://api.github.com/repos/scrat-ryan/rent", "Date": "2018-07-08T01:02:49Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (buildingId == null) { if (((pageInfo.getList()) != null) && ((pageInfo.getList().size()) > 0)) { building = pageInfo.getList().get(0); } }else { building = buildingService.selectByPrimaryKey(buildingId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2209/buggy-version/src.main.java.com.scrats.rent.controller.RoomController.java", "BodyUseAPI": ["com.scrats.rent.controller.BuildingService.selectByPrimaryKey(java.lang.Integer)"], "Fixed commit": "518278e2e5bacdb7b1acd54f7ba1d7ddffd42857", "Url": "https://api.github.com/repos/scrat-ryan/rent", "Date": "2018-07-08T01:02:49Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrentIPhoneUri) == null) { android.net.Uri newUri = getContentResolver().insert(StoreEntry.CONTENT_URI, values); if (newUri == null) { android.widget.Toast.makeText(this, getString(R.string.editor_insert_iphone_failed), Toast.LENGTH_SHORT).show(); }else { android.widget.Toast.makeText(this, getString(R.string.editor_insert_iphone_successful), Toast.LENGTH_SHORT).show(); } }else { int rowsAffected = getContentResolver().update(mCurrentIPhoneUri, values, null, null); if (rowsAffected == 0) { android.widget.Toast.makeText(this, getString(R.string.editor_update_iphone_failed), Toast.LENGTH_SHORT).show(); }else { android.widget.Toast.makeText(this, getString(R.string.editor_update_iphone_successful), Toast.LENGTH_SHORT).show(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/228/buggy-version/app.src.main.java.com.example.inventoryapp.EditorActivity.java", "BodyUseAPI": [], "Fixed commit": "1c2b5747eff0c87a404c7a8f7a842bc38c9a76cf", "Url": "https://api.github.com/repos/raicalvin/abnd-p11-inventory-app", "Date": "2018-10-13T06:33:51Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(org.magic.api.interfaces.abstracts.AbstractJDashlet.confdir.exists())) { boolean ret = org.magic.api.interfaces.abstracts.AbstractJDashlet.confdir.mkdirs(); logger.debug((((org.magic.api.interfaces.abstracts.AbstractJDashlet.confdir) + \" doesn't exist, create it=\") + ret)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5228/buggy-version/src.main.java.org.magic.api.interfaces.abstracts.AbstractJDashlet.java", "BodyUseAPI": [], "Fixed commit": "8f3182c844c344c4cb1990699a5f6a8bc056db30", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2018-05-09T21:59:33Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (str != null) { int next = str.indexOf(\"\\n\"); while (next != (-1)) { shortcuts.add(str.substring(0, next)); str = str.substring((next + 1)); next = str.indexOf(\"\\n\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6969/buggy-version/RemoteControlPC-Studio.app.src.main.java.me.varunon9.remotecontrolpc.ShortcutFragment.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.util.ArrayList<java.lang.String>.add(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int)"], "Fixed commit": "d4a9e4fd12e5e8e2571a244d760a9ac966959e4a", "Url": "https://api.github.com/repos/dabaldassi/Remote-Control-PC", "Date": "2018-03-22T19:51:12Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((criterList.size()) > 0) { com.research.videoAnalyze.controllers.Criteria criteria1 = new com.research.videoAnalyze.controllers.Criteria().andOperator(criterList.toArray(new com.research.videoAnalyze.controllers.Criteria[criterList.size()])); query.addCriteria(criteria1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4142/buggy-version/src.main.java.com.research.videoAnalyze.controllers.VideoRepositoryImpl.java", "BodyUseAPI": ["java.util.List<com.research.videoAnalyze.controllers.Criteria>.toArray(com.research.videoAnalyze.controllers.Criteria[])", "java.util.List<com.research.videoAnalyze.controllers.Criteria>.size()", "com.research.videoAnalyze.controllers.Criteria.andOperator(criterList.toArray(new com.research.videoAnalyze.controllers.Criteria[criterList.size()]))"], "Fixed commit": "fcf697067a3a35e5d7ab35a65c10eaaf36a77695", "Url": "https://api.github.com/repos/madupoorna/LMMSBackend_v1", "Date": "2018-07-31T09:06:12Z"},
{"Line": "=>635", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.axelor.inject.Beans.get(com.axelor.apps.base.service.TradingNameService.class).getPrintingSettingsList(invoice.getTradingName(),invoice.getCompany())", "com.axelor.apps.account.db.Invoice.getPrintingSettings()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((printingSettings == null) || (!(printingSettingsList.contains(printingSettings)))) { printingSettings = ((printingSettingsList.size()) == 1) ? printingSettingsList.get(0) : null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1650/buggy-version/axelor-account.src.main.java.com.axelor.apps.account.web.InvoiceController.java", "BodyUseAPI": ["java.util.List<com.axelor.apps.base.db.PrintingSettings>.get(int)", "java.util.List<com.axelor.apps.base.db.PrintingSettings>.size()"], "Fixed commit": "f756e15d2ef20387e0dbfc3454b78926c4be18b7", "Url": "https://api.github.com/repos/fsc-axelor/axelor-business-suite", "Date": "2018-01-09T09:53:15Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (invoice != null) { if ((invoice.getPrintingSettings()) != null) { locale = invoice.getPrintingSettings().getLanguageSelect(); }else if ((invoice.getPartner()) != null) { locale = invoice.getPartner().getLanguageSelect(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1650/buggy-version/axelor-account.src.main.java.com.axelor.apps.account.service.invoice.InvoiceServiceImpl.java", "BodyUseAPI": ["com.axelor.apps.account.db.Invoice.getPartner()", "com.axelor.apps.account.db.Invoice.getPartner()", "invoice.getPrintingSettings().getLanguageSelect()", "com.axelor.apps.account.db.Invoice.getPrintingSettings()", "com.axelor.apps.account.db.Invoice.getPrintingSettings()", "invoice.getPartner().getLanguageSelect()"], "Fixed commit": "f756e15d2ef20387e0dbfc3454b78926c4be18b7", "Url": "https://api.github.com/repos/fsc-axelor/axelor-business-suite", "Date": "2018-01-09T09:53:15Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(player.getPassengers().isEmpty())) { if ((player.getPassengers().get(0).getCustomName()) == null) { player.sendMessage(((\"\u00a74Oh!The \u00a7f\" + (player.getPassengers().get(0).getName())) + \" \u00a74has run off!\")); }else { player.sendMessage(((\"\u00a74Oh!The \u00a7f\" + (player.getPassengers().get(0).getCustomName())) + \" \u00a74has run off!\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9278/buggy-version/src.main.java.com.taiter.ce.CItems.Powergloves.java", "BodyUseAPI": ["org.bukkit.entity.Player.getPassengers()", "player.getPassengers().get(int)", "player.getPassengers().get(int)", "player.getPassengers().get(0).getCustomName()", "org.bukkit.entity.Player.getPassengers()", "org.bukkit.entity.Player.sendMessage(((\"\u00a74Oh!The \u00a7f\" + (player.getPassengers().get(0).getName())) + \" \u00a74has run off!\"))", "player.getPassengers().get(0).getName()", "org.bukkit.entity.Player.sendMessage(((\"\u00a74Oh!The \u00a7f\" + (player.getPassengers().get(0).getCustomName())) + \" \u00a74has run off!\"))", "player.getPassengers().get(0).getCustomName()", "org.bukkit.entity.Player.getPassengers()", "player.getPassengers().get(int)"], "Fixed commit": "50c24f33ea260c97ebdf631b4de2d01e60519544", "Url": "https://api.github.com/repos/NyaaCat/ce", "Date": "2018-02-09T07:05:01Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((clicked.isValid()) && (player.getPassengers().contains(clicked))) { clicked.leaveVehicle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9278/buggy-version/src.main.java.com.taiter.ce.CItems.Powergloves.java", "BodyUseAPI": ["org.bukkit.entity.Entity.leaveVehicle()"], "Fixed commit": "50c24f33ea260c97ebdf631b4de2d01e60519544", "Url": "https://api.github.com/repos/NyaaCat/ce", "Date": "2018-02-09T07:05:01Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(player.getPassengers().isEmpty())) { if ((player.getPassengers().get(0).getCustomName()) == null) { player.sendMessage(((\"You catched \" + (player.getPassengers().get(0).getName())) + \"! Right click to throw it!\")); }else { player.sendMessage(((\"You catched \" + (player.getPassengers().get(0).getCustomName())) + \"! Right click to throw it!\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9278/buggy-version/src.main.java.com.taiter.ce.CItems.Powergloves.java", "BodyUseAPI": ["org.bukkit.entity.Player.getPassengers()", "org.bukkit.entity.Player.sendMessage(((\"You catched \" + (player.getPassengers().get(0).getName())) + \"! Right click to throw it!\"))", "player.getPassengers().get(0).getCustomName()", "player.getPassengers().get(0).getName()", "player.getPassengers().get(int)", "org.bukkit.entity.Player.getPassengers()", "player.getPassengers().get(0).getCustomName()", "player.getPassengers().get(int)", "player.getPassengers().get(int)", "org.bukkit.entity.Player.getPassengers()", "org.bukkit.entity.Player.sendMessage(((\"You catched \" + (player.getPassengers().get(0).getCustomName())) + \"! Right click to throw it!\"))"], "Fixed commit": "50c24f33ea260c97ebdf631b4de2d01e60519544", "Url": "https://api.github.com/repos/NyaaCat/ce", "Date": "2018-02-09T07:05:01Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(context.getMappedElement(operation, org.eclipse.vorto.codegen.lwm2m.templates.STEREOTYPE_RESOURCE).isMapped())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2364/buggy-version/generators.org.eclipse.vorto.codegen.lwm2m.src.org.eclipse.vorto.codegen.lwm2m.templates.FunctionBlockXmlTemplate.java", "BodyUseAPI": [], "Fixed commit": "604c8c3a2c28e545c4350cf413bc7052e7521c42", "Url": "https://api.github.com/repos/bsinno/vorto", "Date": "2018-03-07T16:20:35Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i == 6) || (i == 7)) { mSpeechRecognizer.startListening(mSpeechRecognizerIntent); }else if (i != 8) { mSpeechRecognizer.stopListening(); mSpeechRecognizer.startListening(mSpeechRecognizerIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4400/buggy-version/app.src.main.java.com.example.nitai.client_nitai.recoListener.java", "BodyUseAPI": [], "Fixed commit": "d6a6b0bff80b875c9c117bc61124a1cb6d7dfbaf", "Url": "https://api.github.com/repos/nitaiaharoni1/Catchapp_Client", "Date": "2018-05-20T10:07:18Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.psi.index.singapore.sp.Utils.MainController.getDateTimeInSGT()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (mPSIDataResponse.getKey().equalsIgnoreCase(com.psi.index.singapore.sp.Utils.MainController.getHrMinute(date))) { java.util.List<com.psi.index.singapore.sp.DataModel.RegionMetadata> mRegionMetadata = mPSIDataResponse.getValue().getmRegionMetadata(); createMarker(mRegionMetadata, mPsiTwentyFourHourly); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/314/buggy-version/app.src.main.java.com.psi.index.singapore.sp.Activity.MapsActivity.java", "BodyUseAPI": ["mPSIDataResponse.getValue()", "mPSIDataResponse.getValue().getmRegionMetadata()"], "Fixed commit": "650bb9df0f668b32fc21fdaf1a2cb575cd129345", "Url": "https://api.github.com/repos/ajay9889/Project", "Date": "2018-04-17T08:14:12Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getUnassignedOrUnparseable().isEmpty())) { sb.append(getUnassignedOrUnparseable()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7171/buggy-version/src.main.java.com.kempo.easyride.model.AssignedRides.java", "BodyUseAPI": [], "Fixed commit": "f1cb8dd3953e9ce95ec6d35b6a7734faf0d786ee", "Url": "https://api.github.com/repos/Kempo/EasyRide", "Date": "2018-01-14T04:07:50Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(isLocationValid(attrs[1]))) { participants.addUnclassified(new com.kempo.easyride.model.Unclassified(line, ((\"invalid location: '\" + (attrs[1])) + \"'\"))); }else if (com.kempo.easyride.util.RideParser.DRIVER.equals(attrs[2].toLowerCase())) { parseDriver(participants, line, attrs); }else if (com.kempo.easyride.util.RideParser.RIDER.equals(attrs[2].toLowerCase())) { participants.addRider(new com.kempo.easyride.model.Rider(attrs[0], attrs[1])); }else { participants.addUnclassified(new com.kempo.easyride.model.Unclassified(line, ((\"no type designation: '\" + (attrs[2])) + \"'\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7171/buggy-version/src.main.java.com.kempo.easyride.util.RideParser.java", "BodyUseAPI": ["com.kempo.easyride.model.RawParticipants.addUnclassified(com.kempo.easyride.model.Unclassified)", "java.lang.String.toLowerCase()", "com.kempo.easyride.util.RideParser.parseDriver(com.kempo.easyride.model.RawParticipants,java.lang.String,java.lang.String[])", "java.lang.String.equals(java.lang.String)", "com.kempo.easyride.model.RawParticipants.addRider(com.kempo.easyride.model.Rider)", "com.kempo.easyride.model.RawParticipants.addUnclassified(com.kempo.easyride.model.Unclassified)", "java.lang.String.equals(java.lang.String)", "java.lang.String.toLowerCase()"], "Fixed commit": "f1cb8dd3953e9ce95ec6d35b6a7734faf0d786ee", "Url": "https://api.github.com/repos/Kempo/EasyRide", "Date": "2018-01-14T04:07:50Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.inaturalist.android.BetterJSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (defaultPhotoJson != null) { org.inaturalist.android.BetterJSONObject defaultPhoto = new org.inaturalist.android.BetterJSONObject(taxon.getJSONObject(\"default_photo\")); com.koushikdutta.urlimageviewhelper.UrlImageViewHelper.setUrlDrawable(mMissionBackground, defaultPhoto.getString(\"medium_url\"), new com.koushikdutta.urlimageviewhelper.UrlImageViewCallback() { @java.lang.Override public void onLoaded(android.widget.ImageView imageView, android.graphics.Bitmap loadedBitmap, java.lang.String url, boolean loadedFromCache) { } @java.lang.Override public android.graphics.Bitmap onPreSetBitmap(android.widget.ImageView imageView, android.graphics.Bitmap loadedBitmap, java.lang.String url, boolean loadedFromCache) { return loadedBitmap; } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8963/buggy-version/iNaturalist.src.main.java.org.inaturalist.android.MissionDetails.java", "BodyUseAPI": [], "Fixed commit": "82dd97799eda5756c6fdfcb0c38a03b37bc45b99", "Url": "https://api.github.com/repos/inaturalist/iNaturalistAndroid", "Date": "2018-05-09T11:25:21Z"},
{"Line": "=>884", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((msg.getAmqpsMessageType()) == (MessageType.CBS_AUTHENTICATION)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/632/buggy-version/device.iot-device-client.src.main.java.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.java", "BodyUseAPI": [], "Fixed commit": "90e4dbbde19792ada70c3e95b3190689ffcbab7c", "Url": "https://api.github.com/repos/Azure/azure-iot-sdk-java", "Date": "2018-03-01T22:08:28Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.optJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (defaultPhoto != null) { com.koushikdutta.urlimageviewhelper.UrlImageViewHelper.setUrlDrawable(idPic, taxonObject.optString(\"image_url\", defaultPhoto.optString(\"square_url\")), R.drawable.iconic_taxon_unknown); }else { idPic.setImageResource(R.drawable.iconic_taxon_unknown); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2658/buggy-version/iNaturalist.src.main.java.org.inaturalist.android.CommentsIdsAdapter.java", "BodyUseAPI": ["org.json.JSONObject.optString(java.lang.String)", "com.koushikdutta.urlimageviewhelper.UrlImageViewHelper.setUrlDrawable(android.widget.ImageView,taxonObject.optString(\"image_url\", defaultPhoto.optString(\"square_url\")),R.drawable.iconic_taxon_unknown)", "org.json.JSONObject.optString(java.lang.String,defaultPhoto.optString(\"square_url\"))"], "Fixed commit": "5012734665a0faa276c8149b8f4e55ee28b9325b", "Url": "https://api.github.com/repos/inaturalist/iNaturalistAndroid", "Date": "2018-03-01T14:43:13Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gtemp.productions.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (temp.contains(\"&\")) gnew.setProductions(((gnew.getInitialSymbol()) + \"\"), s);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/3644/buggy-version/regular_languagens.src.regular_grammar.RG_Algorithms.java", "BodyUseAPI": [], "Fixed commit": "19907aef2e20584e50ca7a630773e4e208221132", "Url": "https://api.github.com/repos/acebr1/Regular_languages", "Date": "2018-05-21T00:09:29Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((id == (Site.VIRTUAL_TOP)) || (id == (Site.VIRTUAL_BOTTOM))) { sites[id].setId(getIdFromCoords(x, y)); }else { if (sites[id].isOpen()) { sites[findRoot(id)].setId(getIdFromCoords(x, y)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4319/buggy-version/src.main.java.Surface.java", "BodyUseAPI": ["sites[id].setId(int)", "Surface.findRoot(int)", "sites[id].isOpen()", "sites[findRoot(id)].setId(int)"], "Fixed commit": "dee489b08929e5d65e6e42de7085fddd1ebe5ae0", "Url": "https://api.github.com/repos/codezapper/Percolation", "Date": "2018-04-20T20:42:10Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (y < 0) { return Site.VIRTUAL_TOP; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4319/buggy-version/src.main.java.Surface.java", "BodyUseAPI": [], "Fixed commit": "dee489b08929e5d65e6e42de7085fddd1ebe5ae0", "Url": "https://api.github.com/repos/codezapper/Percolation", "Date": "2018-04-20T20:42:10Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ekstep.genieservices.commons.bean.GenieResponse<org.ekstep.genieservices.commons.bean.SyncStat>.getError()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((error != null) && (!(error.equalsIgnoreCase(ServiceConstants.ErrorCode.THRESHOLD_LIMIT_NOT_REACHED)))) { org.sunbird.sync.TelemetrySyncOperation.saveTelemetry(org.sunbird.sync.TelemetrySyncOperation.buildErrorEvent(\"auto-sync-failed\", \"auto-sync-failed\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1605/buggy-version/src.android.org.sunbird.sync.TelemetrySyncOperation.java", "BodyUseAPI": [], "Fixed commit": "c19429bc8502e8ce68cded56b3319fab5639da30", "Url": "https://api.github.com/repos/project-sunbird/cordova-plugin-genie-sdk", "Date": "2018-06-13T13:01:56Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((location) != null) { toReturn += \" Location: \" + (location); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2964/buggy-version/src.main.java.seedu.address.model.listevent.ListEvent.java", "BodyUseAPI": [], "Fixed commit": "86594be4c885dc3f7a9dcad30235af53f1546e34", "Url": "https://api.github.com/repos/CS2103JAN2018-W15-B1/main", "Date": "2018-04-04T09:13:30Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((endTime) != null) { toReturn += \" End at: \" + (endTime.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2964/buggy-version/src.main.java.seedu.address.model.listevent.ListEvent.java", "BodyUseAPI": [], "Fixed commit": "86594be4c885dc3f7a9dcad30235af53f1546e34", "Url": "https://api.github.com/repos/CS2103JAN2018-W15-B1/main", "Date": "2018-04-04T09:13:30Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((title) != null) { toReturn += \"Event: \" + (title); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2964/buggy-version/src.main.java.seedu.address.model.listevent.ListEvent.java", "BodyUseAPI": [], "Fixed commit": "86594be4c885dc3f7a9dcad30235af53f1546e34", "Url": "https://api.github.com/repos/CS2103JAN2018-W15-B1/main", "Date": "2018-04-04T09:13:30Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arrayData) != null) { java.lang.String[] arrayObj = new java.lang.String[arrayData.size()]; for (int i = 0; i < (arrayData.size()); i++) { arrayObj[i] = arrayData.get(i).toString(); } return arrayObj; }else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5906/buggy-version/eth-jdbc-driver.src.main.java.com.impetus.eth.jdbc.EthArray.java", "BodyUseAPI": [], "Fixed commit": "9e5f5b65ddfcae930ba5806d9dc86e5edb76f1db", "Url": "https://api.github.com/repos/ashishkshukla/eth-jdbc-connector", "Date": "2018-08-28T09:53:15Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.client.getClientSecretExpiresAt().before(new java.util.Date())) { facesMessages.add(FacesMessage.SEVERITY_ERROR, \"This client has expired. Update the expiration date in order to save changes\"); return org.gluu.oxtrust.util.OxTrustConstants.RESULT_FAILURE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5629/buggy-version/server.src.main.java.org.gluu.oxtrust.action.UpdateClientAction.java", "BodyUseAPI": [], "Fixed commit": "6dcf6a36328195df4ef3787f7ed150f6dbe15f05", "Url": "https://api.github.com/repos/GluuFederation/oxTrust", "Date": "2018-09-06T01:12:15Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.client.getClientSecretExpiresAt()) == null) && (!(update))) { this.client.setClientSecretExpiresAt(new java.util.Date()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5629/buggy-version/server.src.main.java.org.gluu.oxtrust.action.UpdateClientAction.java", "BodyUseAPI": ["org.gluu.oxtrust.model.OxAuthClient.setClientSecretExpiresAt(java.util.Date)"], "Fixed commit": "6dcf6a36328195df4ef3787f7ed150f6dbe15f05", "Url": "https://api.github.com/repos/GluuFederation/oxTrust", "Date": "2018-09-06T01:12:15Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((actor.getIdentifier()) != null) throw new java.lang.RuntimeException(\"re-spawning actor is not allowed!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4626/buggy-version/src.main.java.io.github.diaco.core.Scheduler.java", "BodyUseAPI": [], "Fixed commit": "0af58abb38edde6e67c9ed0777448954a7bf9be2", "Url": "https://api.github.com/repos/hamidreza-s/Diaco", "Date": "2018-01-03T22:16:27Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (os.toLowerCase().startsWith(\"win\")) basePath = basePath.replaceFirst(\"/\", \"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/478/buggy-version/common.src.main.java.com.zheng.common.util.MybatisGeneratorUtil.java", "BodyUseAPI": [], "Fixed commit": "8cc06c51337a0729b840d7919bf3380ea9bf1411", "Url": "https://api.github.com/repos/glorydom/ApiTemplate", "Date": "2018-06-06T16:10:43Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(states[com.example.jonshard.sheikaslatesim.RunesFragment.MOTO_HORSE])) { select(com.example.jonshard.sheikaslatesim.RunesFragment.MOTO_HORSE); states[com.example.jonshard.sheikaslatesim.RunesFragment.MOTO_HORSE] = true; }else { com.example.jonshard.sheikaslatesim.SoundPlayer.playSound(SoundPlayer.START); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4116/buggy-version/app.src.main.java.com.example.jonshard.sheikaslatesim.RunesFragment.java", "BodyUseAPI": ["com.example.jonshard.sheikaslatesim.RunesFragment.7.select(int)"], "Fixed commit": "e3f36fb18b5514daebe355b11183bed5b807b46c", "Url": "https://api.github.com/repos/JonShard/SheikahSlateSimulator", "Date": "2018-10-28T12:27:15Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (analyzerFolder.exists()) { for (final java.io.File existingLFC : analyzerFolder.listFiles((java.io.File dir,java.lang.String name) -> name.endsWith(\".lfc\"))) { existingLFC.delete(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5913/buggy-version/structr-core.src.main.java.org.structr.schema.importer.SchemaImporter.java", "BodyUseAPI": ["java.io.File.listFiles(java.io.FilenameFilter)"], "Fixed commit": "e1729b5b070faf535ba01ab202c63e615d52113e", "Url": "https://api.github.com/repos/structr/structr", "Date": "2018-08-24T14:02:36Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clientConnectionService) != null) clientConnectionService.stopClientConnection();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6030/buggy-version/src.main.java.ser516.project3.client.controller.ClientController.java", "BodyUseAPI": [], "Fixed commit": "b406836afb77e64df3424aed1513ca642217017e", "Url": "https://api.github.com/repos/SER516/ProjectThree_Team09", "Date": "2018-04-06T18:57:52Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["reader.getTagValueFromAllSections(\"provider\").stream().distinct().collect(java.util.stream.Collector<java.lang.Object, ?, java.util.List<java.lang.Object>>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((providers.size()) > 0) validProvider = java.lang.String.join(\", \", providers);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1357/buggy-version/src.main.java.uk.org.tombolo.execution.DataExportEngine.java", "BodyUseAPI": ["java.lang.String.join(java.lang.String,java.util.List<java.lang.String>)"], "Fixed commit": "1a4213228987ad29052684a9eb00133c14add7f4", "Url": "https://api.github.com/repos/FutureCitiesCatapult/TomboloDigitalConnector", "Date": "2018-01-03T15:26:13Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["reader.getTagValueFromAllSections(\"provider\").stream().distinct().collect(java.util.stream.Collector<java.lang.Object, ?, java.util.List<java.lang.Object>>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (providers.isEmpty()) break mainLoop;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1357/buggy-version/src.main.java.uk.org.tombolo.execution.DataExportEngine.java", "BodyUseAPI": [], "Fixed commit": "1a4213228987ad29052684a9eb00133c14add7f4", "Url": "https://api.github.com/repos/FutureCitiesCatapult/TomboloDigitalConnector", "Date": "2018-01-03T15:26:13Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.exist.xquery.functions.fn.LOG.isTraceEnabled()) { org.exist.xquery.functions.fn.FunExactlyOne.logger.trace(((\"fn:exactly-one called with a sequence containing \" + (result.getItemCount())) + \" items\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1738/buggy-version/src.org.exist.xquery.functions.fn.FunExactlyOne.java", "BodyUseAPI": [], "Fixed commit": "ce37d4febe321218ac0ffe9b8bea8224f701a2f5", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2018-07-12T13:33:25Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.exist.xquery.functions.fn.LOG.isTraceEnabled()) { org.exist.xquery.functions.fn.FunError.logger.trace(((errorDesc + \": \") + (errorCode.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1738/buggy-version/src.org.exist.xquery.functions.fn.FunError.java", "BodyUseAPI": [], "Fixed commit": "ce37d4febe321218ac0ffe9b8bea8224f701a2f5", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2018-07-12T13:33:25Z"},
{"Line": "=>1183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.ualberta.goqueer.activity.MapActivity.findAssociatedGallery(com.google.android.gms.maps.model.Marker)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (qGallery == null) android.widget.Toast.makeText(getBaseContext(), \"No Associated Gallery Found!\", Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6810/buggy-version/app.src.main.java.ca.ualberta.goqueer.activity.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "fd21109e787a24fb5b9f56b8fdb9cc50773e662d", "Url": "https://api.github.com/repos/bamzy/goQueer-Android", "Date": "2018-01-30T10:22:13Z"},
{"Line": "=>851", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ca.ualberta.goqueer.activity.MapActivity.getDefinedLocation().getShow()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6810/buggy-version/app.src.main.java.ca.ualberta.goqueer.activity.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "fd21109e787a24fb5b9f56b8fdb9cc50773e662d", "Url": "https://api.github.com/repos/bamzy/goQueer-Android", "Date": "2018-01-30T10:22:13Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((show) != null) return show; else return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6810/buggy-version/app.src.main.java.entity.QProfile.java", "BodyUseAPI": [], "Fixed commit": "fd21109e787a24fb5b9f56b8fdb9cc50773e662d", "Url": "https://api.github.com/repos/bamzy/goQueer-Android", "Date": "2018-01-30T10:22:13Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkedIn) { passengersCheckedIn.put(thePassenger.getBookingRefCode(), thePassenger); thePassenger.getFlight().addPassengerAndBaggage(0, 0, 0); }else { passengersNotCheckedIn.put(thePassenger.getBookingRefCode(), thePassenger); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6144/buggy-version/PassengerList.java", "BodyUseAPI": [], "Fixed commit": "5a27336bd3ea1d265e008489ae824c4fd7dde2ea", "Url": "https://api.github.com/repos/JakD36/ASE-Coursework-2018", "Date": "2018-02-20T23:08:01Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (scriptRepository.existsByCollectionIdAndName(scriptDTO.getCollectionId(), scriptDTO.getName())) { throw new com.piotrwalkusz.scriptrepository.web.rest.errors.BadRequestAlertException(\"A script with the same name already exists in this collection\", com.piotrwalkusz.scriptrepository.web.rest.ScriptResource.ENTITY_NAME, \"nameexists\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/657/buggy-version/src.main.java.com.piotrwalkusz.scriptrepository.web.rest.ScriptResource.java", "BodyUseAPI": [], "Fixed commit": "fdbea07526f6720e2e6ba8b60d9f40db41fb8025", "Url": "https://api.github.com/repos/piotrwalkusz1/script-repository", "Date": "2018-03-03T12:17:20Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((boolean) (getIntent().getSerializableExtra(\"fromResume\")))) { if (((boolean) (getIntent().getSerializableExtra(\"fromFoods\")))) { startActivity(new android.content.Intent(this, com.rigobertosl.nevergiveapp.FoodsActivity.class)); }else { startActivity(new android.content.Intent(this, com.rigobertosl.nevergiveapp.MainActivity.class)); } }else { startActivity(new android.content.Intent(this, com.rigobertosl.nevergiveapp.FoodsActivity.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1788/buggy-version/app.src.main.java.com.rigobertosl.nevergiveapp.FoodResumeActivity.java", "BodyUseAPI": [], "Fixed commit": "44252f41e1123d3bd902f03ac1bf869b96a09d02", "Url": "https://api.github.com/repos/AlbaFontaneda/never-give-app", "Date": "2018-04-24T16:36:45Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(java.util.Objects.equals(content.length(), 12))) { return \"\u8bf7\u56de\u590d\u6b63\u786e\u7684\u5e8f\u5217\u53f7\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/3669/buggy-version/src.main.java.com.github.pengpan.wechat.controller.CoreController.java", "BodyUseAPI": [], "Fixed commit": "e4914dc6bc1303b946652cda56ee4933a413ad9e", "Url": "https://api.github.com/repos/pengpan/wechat-public-number", "Date": "2018-09-21T05:09:12Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (linesCleared == 4) java.lang.System.out.println((\"BB: \" + bb));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1910/buggy-version/src.simpletetris.ScoreKeeper.java", "BodyUseAPI": [], "Fixed commit": "90282120e01b5d50ff2191a5035b08563616d93d", "Url": "https://api.github.com/repos/LeftistTachyon/SimpleTetris", "Date": "2018-09-22T02:38:41Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((administration.getAuthor()) != null) && ((administration.getAuthor().size()) > 0)) { java.util.Date obsDate = administration.getAuthor().get(0).getTime().getDateValue().getTime(); medicationHistoryObs.setObsDatetime(obsDate); medicationHistoryObs.setDateCreated(obsDate); }else { medicationHistoryObs.setObsDatetime(encounterInfo.getEncounterDatetime()); medicationHistoryObs.setDateCreated(encounterInfo.getDateCreated()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8181/buggy-version/api.src.main.java.org.openmrs.module.shr.cdahandler.processor.entry.impl.SubstanceAdministrationEntryProcessor.java", "BodyUseAPI": ["administration.getAuthor().get(int)", "org.marc.everest.rmim.uv.cdar2.pocd_mt000040uv.SubstanceAdministration.getAuthor()", "administration.getAuthor().get(0).getTime().getDateValue().getTime()", "administration.getAuthor().get(0).getTime().getDateValue()", "administration.getAuthor().get(0).getTime()"], "Fixed commit": "d870d8db9e2986a155ff77f46af3c16c60427453", "Url": "https://api.github.com/repos/SEDISH/openmrs-module-shr-cdahandler", "Date": "2018-03-12T12:48:43Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iva_isPathFromServer) { return java.lang.Integer.parseInt(lar_fileDirectories[1]); }else { return tools.xmlTools.DirectoryNameMapper.getIdOfSharedDirectory(lar_fileDirectories[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5416/buggy-version/src.main.java.tools.Utils.java", "BodyUseAPI": [], "Fixed commit": "6f35dae212ae1ad189c637164f4e24aaa1086e48", "Url": "https://api.github.com/repos/Alexander-Lukacs/VFS_GUI", "Date": "2018-03-12T18:33:40Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ni.mble.SensorListAdapter.getCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sensor_count > 0) { averageRssi = totalRssi / sensor_count; }else { averageRssi = -80; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6313/buggy-version/mble.app.src.main.java.com.ni.mble.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "827419a548542ec19dcea3e823a33dc630a931f1", "Url": "https://api.github.com/repos/liliyayaqiqi/wildCode", "Date": "2018-07-05T07:57:40Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["chain.request().url().pathSegments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((pathSegments == null) || (pathSegments.isEmpty())) || (pathSegments.get(0).equals(\"login\"))) { return mainResponse; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/104/buggy-version/app.src.main.java.talkapp.org.talkappmobile.component.backend.impl.AuthorizationInterceptor.java", "BodyUseAPI": [], "Fixed commit": "3b383be93b685e0cde1eb7a070267e12ec08440a", "Url": "https://api.github.com/repos/aliaksandr-budnikau/TalkappMobile", "Date": "2018-10-16T19:28:54Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((line.length) > 2) { java.lang.StringBuffer concat = new java.lang.StringBuffer(line[1]); for (int i = 2; i < (line.length); i++) { concat.append(line[i]); } line[1] = concat.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2962/buggy-version/src.net.ssehub.kernel_haven.fe_analysis.fes.FeatureEffectReader.java", "BodyUseAPI": ["java.lang.StringBuffer.append(java.lang.String)"], "Fixed commit": "bb1179bcb401c7035bfff300a2acf900262b8040", "Url": "https://api.github.com/repos/KernelHaven/FeatureEffectAnalysis", "Date": "2018-03-08T10:01:18Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.janelia.saalfeldlab.n5.bdv.BdvSettingsManager.initBdvSettings()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (settingsLoadResult == (org.janelia.saalfeldlab.n5.bdv.BdvSettingsManager.InitBdvSettingsResult.NOT_LOADED)) bdvSettingsManager.saveSettingsOnTimer();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/3777/buggy-version/src.main.java.org.janelia.saalfeldlab.n5.bdv.N5Viewer.java", "BodyUseAPI": [], "Fixed commit": "a3e599b575dd04e69e3f7b21f3307b4106667e00", "Url": "https://api.github.com/repos/saalfeldlab/n5-viewer", "Date": "2018-04-12T22:07:05Z"},
{"Line": "=>1395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x >= firstRangeSample) && (x <= lastRangeSample)) { final double val = noiseAzimuthBlocks[i].noiseMatrix[0][(x - firstRangeSample)]; if (removeThermalNoise) { return val; }else { return -val; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5599/buggy-version/s1tbx-op-calibration.src.main.java.org.esa.s1tbx.calibration.gpf.Sentinel1RemoveThermalNoiseOp.java", "BodyUseAPI": [], "Fixed commit": "648709bd1db37f6daaec1ce091e26d90a09085bb", "Url": "https://api.github.com/repos/lveci/s1tbx", "Date": "2018-02-21T15:51:18Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (TeamCity.Controllers.DeployControllerAction.blockingQueue.isEmpty()) { TeamCity.Helpers.PowerShellRunner.run(TeamCity.Controllers.DeployControllerAction.blockingQueue, psScriptPath, \"\\\"esignal\\\", 123, \\\"dev\\\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2398/buggy-version/Plugin-server.src.main.java.TeamCity.Controllers.DeployControllerAction.java", "BodyUseAPI": ["TeamCity.Helpers.PowerShellRunner.run(java.util.concurrent.BlockingQueue<java.lang.String>,java.lang.String,java.lang.String)"], "Fixed commit": "ac017bb16c997ad9525a51d5adb4301c31df2af3", "Url": "https://api.github.com/repos/tkobernyk/Plugin", "Date": "2018-04-05T11:13:47Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<main.Book, java.util.HashMap<main.Person, main.royalties.IRoyaltyType>>.get(main.Book)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (newRoyaltiesMapping.isEmpty()) { listRoyalties.remove(book); }else { listRoyalties.replace(book, newRoyaltiesMapping); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7289/buggy-version/main.Channel.java", "BodyUseAPI": ["java.util.HashMap<main.Book, java.util.HashMap<main.Person, main.royalties.IRoyaltyType>>.replace(main.Book,java.util.HashMap<main.Person, main.royalties.IRoyaltyType>)"], "Fixed commit": "55e8ef1c565534a0d6d2eaffa8c43a605988a10a", "Url": "https://api.github.com/repos/crhm/Royalties", "Date": "2018-07-08T09:57:19Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uri = remappings.get(uri)) == null) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2701/buggy-version/src.com.cdd.bao.validator.RemappingChecker.java", "BodyUseAPI": [], "Fixed commit": "92289882cd54858722354ddebc6593353c203e79", "Url": "https://api.github.com/repos/cdd/bioassay-template", "Date": "2018-03-23T16:08:38Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (com.github.athenaengine.core.config.BaseConfigLoader.getInstance().getMainConfig().getEngineEnabled()) { load(); }else { com.github.athenaengine.core.EventEngineManager.LOGGER.info(((com.github.athenaengine.core.EventEngineManager.class.getSimpleName()) + \": Engine disabled, enabled in config!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/3115/buggy-version/src.main.java.com.github.athenaengine.core.EventEngineManager.java", "BodyUseAPI": [], "Fixed commit": "1b25054d0c11f5bb8b5c76af844e530f83575f2a", "Url": "https://api.github.com/repos/AthenaEventEngine/AthenaCore", "Date": "2018-02-20T11:50:28Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (new com.voice.voicerecorder.ConnectionStatus().Connectivity_status(context)) { fileWrite(context, calldetails, com.voice.voicerecorder.CallReceiver.callStartTime.toString(), new java.util.Date().toString()); }else { com.voice.voicerecorder.FileWriter fr = new com.voice.voicerecorder.FileWriter(calldetails, com.voice.voicerecorder.CallReceiver.callStartTime.toString(), new java.util.Date().toString()); fr.execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6148/buggy-version/app.src.main.java.com.voice.voicerecorder.CallReceiver.java", "BodyUseAPI": ["com.voice.voicerecorder.CallReceiver.fileWrite(android.content.Context,java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "e0066d816e2bb7fb62e020edceb96a24d854a388", "Url": "https://api.github.com/repos/pushkar2gr8/Recorder", "Date": "2018-06-29T12:57:32Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (new com.voice.voicerecorder.ConnectionStatus().Connectivity_status(context)) { fileWrite(context, calldetails, com.voice.voicerecorder.CallReceiver.callStartTime.toString(), new java.util.Date().toString()); }else { com.voice.voicerecorder.FileWriter fr = new com.voice.voicerecorder.FileWriter(calldetails, com.voice.voicerecorder.CallReceiver.callStartTime.toString(), new java.util.Date().toString()); fr.execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6148/buggy-version/app.src.main.java.com.voice.voicerecorder.CallReceiver.java", "BodyUseAPI": ["com.voice.voicerecorder.CallReceiver.fileWrite(android.content.Context,java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "e0066d816e2bb7fb62e020edceb96a24d854a388", "Url": "https://api.github.com/repos/pushkar2gr8/Recorder", "Date": "2018-06-29T12:57:32Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (new com.voice.voicerecorder.ConnectionStatus().Connectivity_status(context)) { fileWrite(context, calldetails, com.voice.voicerecorder.CallReceiver.callStartTime.toString(), new java.util.Date().toString()); }else { com.voice.voicerecorder.FileWriter fr = new com.voice.voicerecorder.FileWriter(calldetails, com.voice.voicerecorder.CallReceiver.callStartTime.toString(), new java.util.Date().toString()); fr.execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6148/buggy-version/app.src.main.java.com.voice.voicerecorder.CallReceiver.java", "BodyUseAPI": ["com.voice.voicerecorder.CallReceiver.fileWrite(android.content.Context,java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "e0066d816e2bb7fb62e020edceb96a24d854a388", "Url": "https://api.github.com/repos/pushkar2gr8/Recorder", "Date": "2018-06-29T12:57:32Z"},
{"Line": "=>642", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cnt) != 0) java.lang.System.out.println((((\"Thread \" + (this.getName())) + \", average response time: \") + ((ttl) / (cnt))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6686/buggy-version/Client.edu.rice.rubis.client.UserSession.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "02dff8907881463967f4fb8c8c714f6456e6a256", "Url": "https://api.github.com/repos/atambol/RUBiS", "Date": "2018-04-10T22:38:07Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getCookies()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (cookies != null) { for (javax.servlet.http.Cookie cookie : cookies) { if (cookie.getName().equals(\"autosearch-debug-user\")) { userId = cookie.getValue(); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8237/buggy-version/server.src.main.java.nl.inl.blacklab.server.auth.AuthDebugCookie.java", "BodyUseAPI": [], "Fixed commit": "e7ddf4267fe65c1815ae4c2fd68b8719b1c1a96e", "Url": "https://api.github.com/repos/fryske-akademy/BlackLab", "Date": "2018-04-20T10:01:25Z"},
{"Line": "=>1503", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jmri.jmrit.logix.Warrant.log.isDebugEnabled()) jmri.jmrit.logix.Warrant.log.debug(\"Warrant \\\"{}\\\" Cleared _stoppingBlock= \\\"{}\\\". runState= {}\", getDisplayName(), blockName, jmri.jmrit.logix.Warrant.RUN_STATE[runState]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6879/buggy-version/java.src.jmri.jmrit.logix.Warrant.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,getDisplayName(),java.lang.String,java.lang.String)"], "Fixed commit": "a2c42ff40e9f4a322c5d96cf8a2bc411d36542be", "Url": "https://api.github.com/repos/Pugwash1/JMRI", "Date": "2018-09-27T17:35:12Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.elmakers.mine.bukkit.action.builtin.SpawnEntityAction.getHandler(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((actions == null) || ((actions.size()) == 0)) { return com.elmakers.mine.bukkit.api.spell.SpellResult.NO_ACTION; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/3033/buggy-version/Magic.src.main.java.com.elmakers.mine.bukkit.action.builtin.SpawnEntityAction.java", "BodyUseAPI": [], "Fixed commit": "5fe69f7acec9eae9198073e59b41a828e29ede54", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2018-08-02T15:53:27Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((listeners.size()) > 0) && (isMoving())) { java.lang.System.out.println(\"KICK!\"); ((com.donhatchsw.mc4d.MC4DModel.Listener) (listeners.get(0))).movingNotify(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7959/buggy-version/com.donhatchsw.mc4d.MC4DModel.java", "BodyUseAPI": ["com.donhatchsw.compat.ArrayList.get(int)", "((com.donhatchsw.mc4d.MC4DModel.Listener) (listeners.get(0))).movingNotify()"], "Fixed commit": "280c1f4519f3938f6c2030d40d1688dd22f3686f", "Url": "https://api.github.com/repos/donhatch/donhatchsw", "Date": "2018-09-17T19:54:40Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (questionName.equals(DataBase.currentQuestions.get(i).questionTitle)) { DataBase.currentQuestion = DataBase.currentQuestions.get(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7505/buggy-version/src.Source.PopupQuestionListController.java", "BodyUseAPI": ["DataBase.currentQuestions.get(int)"], "Fixed commit": "08c68d7d6040a0bc6e4a09a10e3ffeb76c4d228f", "Url": "https://api.github.com/repos/jamilboashash/casualvoting", "Date": "2018-06-04T03:35:47Z"},
{"Line": "=>621", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((reservation.getNotifyDate()) != null) ps.setDate(9, new java.sql.Date(reservation.getNotifyDate().getTime())); else ps.setNull(9, java.sql.Types.NULL);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5983/buggy-version/CRRSProjectMaster.src.sbsa.dao.DataAccessObject.java", "BodyUseAPI": ["java.sql.PreparedStatement.setDate(int,java.sql.Date)", "sbsa.beans.Reservation.getNotifyDate()", "reservation.getNotifyDate().getTime()"], "Fixed commit": "81bca66ce5abf33940aa0a9ee9daaabdecd69c2b", "Url": "https://api.github.com/repos/loshnaickersbsa/CRRSProjectGIT", "Date": "2018-07-06T11:03:52Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (reader != null) reader.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8271/buggy-version/src.main.java.zarvis.bakery.utils.Util.java", "BodyUseAPI": ["java.io.BufferedReader.close()"], "Fixed commit": "cd9d02fb1568fccb526c3d89c0ac028a705f403d", "Url": "https://api.github.com/repos/bouknify/project-zarvis", "Date": "2018-01-25T15:35:04Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(secondaryTorpedoStore.isEmpty())) && (!(primaryTorpedoStore.isEmpty()))) { firingSuccess = primaryTorpedoStore.fire(1); firingSuccess = secondaryTorpedoStore.fire(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5075/buggy-version/src.main.java.hu.bme.mit.spaceship.GT4500.java", "BodyUseAPI": ["hu.bme.mit.spaceship.TorpedoStore.fire(int)", "hu.bme.mit.spaceship.TorpedoStore.fire(int)"], "Fixed commit": "3c53814d9622404b1d59eeedcf0abacdcefdd919", "Url": "https://api.github.com/repos/davidhorvath3/ivt-lab", "Date": "2018-04-13T06:54:34Z"},
{"Line": "=>1025", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) > (Build.VERSION_CODES.KITKAT)) { httpsURLConnection.setRequestMethod(\"PATCH\"); }else { httpsURLConnection.setRequestProperty(\"X-HTTP-Method-Override\", \"PATCH\"); httpsURLConnection.setRequestMethod(\"POST\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1612/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.client.HttpsConnection.java", "BodyUseAPI": [], "Fixed commit": "c4d230a9e65df4f438320019572d12cbd9b7740d", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2018-03-02T14:17:13Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pScrobbleCount > 0) { return java.lang.String.format(by.d1makrat.library_fm.AppContext.getInstance().getString(R.string.scrobbles_count), pScrobbleCount); }else { return by.d1makrat.library_fm.AppContext.getInstance().getString(R.string.no_scrobbles); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2594/buggy-version/app.src.main.java.by.d1makrat.library_fm.utils.DateUtils.java", "BodyUseAPI": ["java.lang.String.format(by.d1makrat.library_fm.AppContext.getInstance().getString(R.string.scrobbles_count),int)"], "Fixed commit": "3d0c11fcec600c1dcd853e9076f6e26d823f36d7", "Url": "https://api.github.com/repos/DzmitryLakisau/Last.fm-Library-Viewer", "Date": "2018-02-06T21:33:05Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pScrobbleCount > 0) { return (((java.lang.String.format(by.d1makrat.library_fm.AppContext.getInstance().getString(R.string.scrobbles_count_within_period), pScrobbleCount)) + string_from) + \" - \") + string_to; }else { return (((by.d1makrat.library_fm.AppContext.getInstance().getString(R.string.no_scrobbles_within_period)) + string_from) + \" - \") + string_to; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2594/buggy-version/app.src.main.java.by.d1makrat.library_fm.utils.DateUtils.java", "BodyUseAPI": ["java.lang.String.format(by.d1makrat.library_fm.AppContext.getInstance().getString(R.string.scrobbles_count_within_period),int)"], "Fixed commit": "3d0c11fcec600c1dcd853e9076f6e26d823f36d7", "Url": "https://api.github.com/repos/DzmitryLakisau/Last.fm-Library-Viewer", "Date": "2018-02-06T21:33:05Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((++(size)) > (expectedPopSize)) { intRemoveWorst(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5933/buggy-version/src.main.java.ru.ifmo.nds.dcns.jfby.JFBYPopulation.java", "BodyUseAPI": [], "Fixed commit": "c0c53ca486b112ec673fc9375e4d62a7f67140c4", "Url": "https://api.github.com/repos/yakupov/nds2018", "Date": "2018-02-06T20:48:43Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((wordBuf.length()) != 0) resultStrBuf.append(wordBuf);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/3781/buggy-version/src.examples.StripBlanks.java", "BodyUseAPI": ["java.lang.StringBuffer.append(java.lang.StringBuffer)"], "Fixed commit": "bfb16ce20ada216d8d2bba475ce05ab4022b70be", "Url": "https://api.github.com/repos/hkrprasad/hkr-examples", "Date": "2018-10-07T14:54:40Z"},
{"Line": "=>848", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (searchContext instanceof org.openqa.selenium.WebElement) { rootElement = ((org.openqa.selenium.WebElement) (searchContext)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4877/buggy-version/src.main.java.com.hpe.leanft.selenium.By.java", "BodyUseAPI": [], "Fixed commit": "29c88985a78e34483350e2f93b366e4b8e45e331", "Url": "https://api.github.com/repos/MicroFocus/leanft-selenium-java-sdk", "Date": "2018-04-08T08:15:08Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index) == ((mAttendanceList.size()) - 1)) { android.util.Log.e(\"AttendanceTAG\", \"\u5237\u65b0\u89c6\u56fe \"); flushView(); progressDialog.dismiss(); }else { (index)++; findRecord(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5834/buggy-version/app.src.main.java.com.wnw.attendance.view.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "599ab4252dfb48452e3f4434a19d7f418ed56029", "Url": "https://api.github.com/repos/wangnaiwen/Attendance", "Date": "2018-04-14T15:09:03Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.isAutoClose_DoubleQuotes()) && (!inComment)) handlePotentialClosingChar(doc, docCommand, '\\\"');", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7578/buggy-version/org.cfeclipse.cfml.src.org.cfeclipse.cfml.editors.indentstrategies.CFScriptIndentStrategy.java", "BodyUseAPI": [], "Fixed commit": "8f387664a0e658d744af1f0145f2a649ea9afa23", "Url": "https://api.github.com/repos/am2605/cfeclipse", "Date": "2018-05-28T04:03:52Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.raml.v2.internal.utils.SchemaGenerator.resolveResourceUriIfIncluded(org.raml.v2.internal.impl.commons.type.JsonSchemaExternalType)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (includedResourceUri != null) { return factory.getJsonSchema((((includedResourceUri + \"#\") + (org.raml.v2.internal.utils.SchemaGenerator.DEFINITIONS)) + (jsonTypeDefinition.getInternalFragment()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6249/buggy-version/raml-parser-2.src.main.java.org.raml.v2.internal.utils.SchemaGenerator.java", "BodyUseAPI": ["com.github.fge.jsonschema.main.JsonSchemaFactory.getJsonSchema((((includedResourceUri + \"#\") + (org.raml.v2.internal.utils.SchemaGenerator.DEFINITIONS)) + (jsonTypeDefinition.getInternalFragment())))"], "Fixed commit": "461a6bb18af9c00736f64b8e89c5590221167d3e", "Url": "https://api.github.com/repos/hypertino/raml-java-parser", "Date": "2018-02-16T19:42:45Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (code != null) { return org.jtool.changetracker.dependencyanalyzer.DependencyDetector.parse(finfo, index, code); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/3976/buggy-version/org.jtool.changetracker.core.src.org.jtool.changetracker.dependencyanalyzer.DependencyDetector.java", "BodyUseAPI": ["org.jtool.changetracker.dependencyanalyzer.DependencyDetector.parse(org.jtool.changetracker.repository.CTFile,int,java.lang.String)"], "Fixed commit": "f11817c2573e2fdfa52ef2f0e0084a1f172479f7", "Url": "https://api.github.com/repos/katsuhisamaruyama/ChangeTracker2", "Date": "2018-02-16T06:32:20Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((expressionRoot) == null) throwException(\"no expression detected\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/3128/buggy-version/src.main.Parser.java", "BodyUseAPI": [], "Fixed commit": "2a9027221c8517dca6a5cead6e1cc9727749e082", "Url": "https://api.github.com/repos/LLipter/Acraga", "Date": "2018-10-30T06:37:35Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cs276.assignments.Index.blockQueue.size()) == 0) cs276.assignments.Index.postingDict.put(p1.getTermId(), new cs276.util.Pair<java.lang.Long, java.lang.Integer>(mfc.position(), p1.getList().size()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/40/buggy-version/src.cs276.assignments.Index.java", "BodyUseAPI": [], "Fixed commit": "1b032f7b22dbbcf5f9930edee9682628e6546307", "Url": "https://api.github.com/repos/GayashanMaduranga/IRWA-Assignment-1", "Date": "2018-09-07T15:41:09Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cs276.assignments.Index.blockQueue.size()) == 0) cs276.assignments.Index.postingDict.put(p2.getTermId(), new cs276.util.Pair<java.lang.Long, java.lang.Integer>(mfc.position(), p2.getList().size()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/40/buggy-version/src.cs276.assignments.Index.java", "BodyUseAPI": [], "Fixed commit": "1b032f7b22dbbcf5f9930edee9682628e6546307", "Url": "https://api.github.com/repos/GayashanMaduranga/IRWA-Assignment-1", "Date": "2018-09-07T15:41:09Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (location != null) { type = location.getType(); rot = location.getOrientation(); }else { type = rot = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4711/buggy-version/model-viewer.src.main.java.net.runelite.modelviewer.ModelManager.java", "BodyUseAPI": ["net.runelite.cache.region.Location.getType()", "net.runelite.cache.region.Location.getOrientation()"], "Fixed commit": "90c962accf3da48fef9369f3043417260e8a9c30", "Url": "https://api.github.com/repos/takuyakanbr/runelite", "Date": "2018-08-04T20:16:24Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pr.getLfReference()) == null) { sender.sendMessage(((((((org.bukkit.ChatColor.BLUE) + \"Warning: Lost and found region \") + (org.bukkit.ChatColor.WHITE)) + (truncatedArgs[1])) + (org.bukkit.ChatColor.BLUE)) + \" does not exist.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6237/buggy-version/src.com.maxwellwheeler.plugins.tppets.commands.CommandRestricted.java", "BodyUseAPI": [], "Fixed commit": "cd3d20b330e702ee9cfd1b549896808311c76b2d", "Url": "https://api.github.com/repos/PenToPaper/TPPets", "Date": "2018-02-16T04:04:08Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.maxwellwheeler.plugins.tppets.commands.CommandRestricted.getProtectedRegion(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tempPr.getLfReference()) == null) { sender.sendMessage(((((((org.bukkit.ChatColor.BLUE) + \"Warning: Lost and found region \") + (org.bukkit.ChatColor.WHITE)) + (truncatedArgs[1])) + (org.bukkit.ChatColor.BLUE)) + \" does not exist.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6237/buggy-version/src.com.maxwellwheeler.plugins.tppets.commands.CommandRestricted.java", "BodyUseAPI": [], "Fixed commit": "cd3d20b330e702ee9cfd1b549896808311c76b2d", "Url": "https://api.github.com/repos/PenToPaper/TPPets", "Date": "2018-02-16T04:04:08Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tSubject) != null) { isVisited = tSubject.getState(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/3897/buggy-version/src.main.java.Part2_Multiplayer_Game.Tressure_Finder_Game.ObSubjPattern.TreasureFinderPlayer.java", "BodyUseAPI": [], "Fixed commit": "61127e0a7f3d6d82d4e4b0ecff8a2cdb904c98f1", "Url": "https://api.github.com/repos/dillu24/CPS2002_SE_GD", "Date": "2018-04-28T15:40:23Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((f) instanceof zhengc.bcit.ca.benehome.Filter) { if (mapFragment.getUserVisibleHint()) { hidemap(); filter_on_map = true; } }else { if (!(mapFragment.getUserVisibleHint())) { filter_on_map = false; this.setTitle(\"Filter\"); set_item_check(0); show_pass(new zhengc.bcit.ca.benehome.Filter(), null, null); }else { show_pass(new zhengc.bcit.ca.benehome.Filter(), null, null); set_item_check(0); this.setTitle(\"Filter\"); hidemap(); filter_on_map = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7801/buggy-version/app.src.main.java.zhengc.bcit.ca.benehome.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "196359849d094997c0378eccb7fe0669d48c29a3", "Url": "https://api.github.com/repos/shawnzheng99/beneHome", "Date": "2018-05-11T01:31:49Z"},
{"Line": "=>596", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.hutool.core.util.ReflectUtil.getFieldValue(T,java.lang.reflect.Field)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (null != val) { final java.lang.String trimVal = cn.hutool.core.util.StrUtil.trim(val); if (false == (val.equals(trimVal))) { cn.hutool.core.util.ReflectUtil.setFieldValue(bean, field, trimVal); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6069/buggy-version/hutool-core.src.main.java.cn.hutool.core.bean.BeanUtil.java", "BodyUseAPI": ["cn.hutool.core.util.StrUtil.trim(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "895ed2e0848ee50bf4de9c88a3251b27bf1eea50", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2018-02-26T12:21:48Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (fromDate != null) { if (!(\"\".equals(fromDate))) { findBatches.add(org.hibernate.criterion.Restrictions.ge(\"dateCreated\", fromDate)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6062/buggy-version/src.main.java.com.hel.iltz.dao.impl.transactionOutDAOImpl.java", "BodyUseAPI": ["org.hibernate.criterion.Restrictions.ge(java.lang.String,java.util.Date)", "java.lang.String.equals(java.util.Date)", "org.hibernate.Criteria.add(org.hibernate.criterion.Restrictions.ge(\"dateCreated\", fromDate))"], "Fixed commit": "d351c231eae4d9fc8bd24ffc63bbd969fb9dbc3d", "Url": "https://api.github.com/repos/bowlinktech/ILTZ", "Date": "2018-09-20T14:01:15Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (toDate != null) { if (!(\"\".equals(toDate))) { findBatches.add(org.hibernate.criterion.Restrictions.lt(\"dateCreated\", toDate)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6062/buggy-version/src.main.java.com.hel.iltz.dao.impl.transactionOutDAOImpl.java", "BodyUseAPI": ["org.hibernate.criterion.Restrictions.lt(java.lang.String,java.util.Date)", "java.lang.String.equals(java.util.Date)", "org.hibernate.Criteria.add(org.hibernate.criterion.Restrictions.lt(\"dateCreated\", toDate))"], "Fixed commit": "d351c231eae4d9fc8bd24ffc63bbd969fb9dbc3d", "Url": "https://api.github.com/repos/bowlinktech/ILTZ", "Date": "2018-09-20T14:01:15Z"},
{"Line": "=>1504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (fromDate != null) { if (!(\"\".equals(fromDate))) { findBatches.add(org.hibernate.criterion.Restrictions.ge(\"dateSubmitted\", fromDate)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6062/buggy-version/src.main.java.com.hel.iltz.dao.impl.transactionInDAOImpl.java", "BodyUseAPI": ["org.hibernate.criterion.Restrictions.ge(java.lang.String,java.util.Date)", "org.hibernate.Criteria.add(org.hibernate.criterion.Restrictions.ge(\"dateSubmitted\", fromDate))", "java.lang.String.equals(java.util.Date)"], "Fixed commit": "d351c231eae4d9fc8bd24ffc63bbd969fb9dbc3d", "Url": "https://api.github.com/repos/bowlinktech/ILTZ", "Date": "2018-09-20T14:01:15Z"},
{"Line": "=>1510", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (toDate != null) { if (!(\"\".equals(toDate))) { findBatches.add(org.hibernate.criterion.Restrictions.lt(\"dateSubmitted\", toDate)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6062/buggy-version/src.main.java.com.hel.iltz.dao.impl.transactionInDAOImpl.java", "BodyUseAPI": ["java.lang.String.equals(java.util.Date)", "org.hibernate.Criteria.add(org.hibernate.criterion.Restrictions.lt(\"dateSubmitted\", toDate))", "org.hibernate.criterion.Restrictions.lt(java.lang.String,java.util.Date)"], "Fixed commit": "d351c231eae4d9fc8bd24ffc63bbd969fb9dbc3d", "Url": "https://api.github.com/repos/bowlinktech/ILTZ", "Date": "2018-09-20T14:01:15Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((activity) == null) || (!(isAdded()))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9250/buggy-version/app.src.main.java.com.paulvarry.intra42.bottomSheet.BottomSheetSlotsDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "4cdd79996a7c02531919ca791c3e98cf4b0be6fe", "Url": "https://api.github.com/repos/pvarry/intra42", "Date": "2018-06-20T22:29:32Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isAdded())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9250/buggy-version/app.src.main.java.com.paulvarry.intra42.activities.user.UserPatronagesFragment.java", "BodyUseAPI": [], "Fixed commit": "4cdd79996a7c02531919ca791c3e98cf4b0be6fe", "Url": "https://api.github.com/repos/pvarry/intra42", "Date": "2018-06-20T22:29:32Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(purchaseOrderLine.getPurchaseOrder().getInAti())) { priceDiscounted = purchaseOrderLine.getPriceDiscounted(); }else { priceDiscounted = purchaseOrderLine.getPriceDiscounted().divide(purchaseOrderLine.getTaxLine().getValue().add(java.math.BigDecimal.ONE), 2, java.math.BigDecimal.ROUND_HALF_UP); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7091/buggy-version/axelor-supplychain.src.main.java.com.axelor.apps.supplychain.service.PurchaseOrderServiceSupplychainImpl.java", "BodyUseAPI": ["com.axelor.apps.purchase.db.PurchaseOrderLine.getPriceDiscounted()", "purchaseOrderLine.getPriceDiscounted().divide(purchaseOrderLine.getTaxLine().getValue().add(java.math.BigDecimal.ONE),int,int)", "com.axelor.apps.purchase.db.PurchaseOrderLine.getPriceDiscounted()", "purchaseOrderLine.getTaxLine().getValue()", "com.axelor.apps.purchase.db.PurchaseOrderLine.getTaxLine()", "purchaseOrderLine.getTaxLine().getValue().add(java.math.BigDecimal)"], "Fixed commit": "d584ec2269b7521432ecb5f699400e91015c7ecf", "Url": "https://api.github.com/repos/ego-axelor/axelor-business-suite", "Date": "2018-07-25T21:57:53Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (args.isEmpty()) { com.github.drsmugleaf.util.Bot.sendMessage(event.getChannel(), \"You didn't provide a link to change the bot's image to.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6652/buggy-version/src.main.java.com.github.drsmugleaf.commands.Owner.java", "BodyUseAPI": [], "Fixed commit": "aefe397ca3e16e33b4cdad435b21a340d8843d42", "Url": "https://api.github.com/repos/DrSmugleaf/Banter-Bot4J", "Date": "2018-01-16T11:34:25Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["maud.model.cgm.Cgm.listSpatialNames(java.lang.String,WhichSpatials.Geometries)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(meshList.isEmpty())) { builder.addSubmenu(\"Select\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7552/buggy-version/src.main.java.maud.menu.MeshMenus.java", "BodyUseAPI": [], "Fixed commit": "797041432b49e006527afaf177b84685ec082e3b", "Url": "https://api.github.com/repos/stephengold/Maud", "Date": "2018-08-18T00:30:06Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(fnem.endsWith(\".CTT\"))) && (!(fnem.endsWith(\".ctt\")))) fnem += \".CTT\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2589/buggy-version/src.ctt.Controller.java", "BodyUseAPI": [], "Fixed commit": "69b8c66c81579ba90c2f282ff5270c3cef406a51", "Url": "https://api.github.com/repos/milindoka/CTT", "Date": "2018-04-09T16:15:38Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (beanPortlet != null) { beanPortlet.setDescription(elementText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7597/buggy-version/bean-portlet-extension.src.main.java.com.liferay.bean.portlet.extension.internal.PortletDescriptorParser.java", "BodyUseAPI": ["com.liferay.bean.portlet.extension.internal.BeanPortletDescriptorImpl.setDescription(java.lang.String)"], "Fixed commit": "b8d236e9bcba1a174493ff57c4e27ec64b661cc8", "Url": "https://api.github.com/repos/ngriffin7a/com.liferay.cdi.osgi.portlet", "Date": "2018-04-20T22:40:12Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (descriptorSupports != null) { descriptorSupports.addWindowState(elementText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7597/buggy-version/bean-portlet-extension.src.main.java.com.liferay.bean.portlet.extension.internal.PortletDescriptorParser.java", "BodyUseAPI": ["com.liferay.bean.portlet.extension.internal.DescriptorSupports.addWindowState(java.lang.String)"], "Fixed commit": "b8d236e9bcba1a174493ff57c4e27ec64b661cc8", "Url": "https://api.github.com/repos/ngriffin7a/com.liferay.cdi.osgi.portlet", "Date": "2018-04-20T22:40:12Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (descriptorSupports != null) { descriptorSupports.addPortletMode(elementText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7597/buggy-version/bean-portlet-extension.src.main.java.com.liferay.bean.portlet.extension.internal.PortletDescriptorParser.java", "BodyUseAPI": ["com.liferay.bean.portlet.extension.internal.DescriptorSupports.addPortletMode(java.lang.String)"], "Fixed commit": "b8d236e9bcba1a174493ff57c4e27ec64b661cc8", "Url": "https://api.github.com/repos/ngriffin7a/com.liferay.cdi.osgi.portlet", "Date": "2018-04-20T22:40:12Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((requestCode == (com.example.onurelbirlik.sketchygui.TakePictureCamera.PICK_IMAGE)) && (resultCode == (RESULT_OK))) { imageURL = data.getData(); imageView.setImageURI(imageURL); imageView.setVisibility(View.INVISIBLE); android.graphics.drawable.BitmapDrawable drawable = ((android.graphics.drawable.BitmapDrawable) (imageView.getDrawable())); com.example.onurelbirlik.sketchygui.TakePictureCamera.bitmap = drawable.getBitmap(); android.content.Intent tempIntent = new android.content.Intent(this, com.example.onurelbirlik.sketchygui.ImageToLine.class); startActivity(tempIntent); }else if (resultCode == (RESULT_OK)) { imageURL = data.getData(); com.example.onurelbirlik.sketchygui.TakePictureCamera.bitmap = readBitmap(imageURL); android.content.Intent tempIntent = new android.content.Intent(this, com.example.onurelbirlik.sketchygui.ImageToLine.class); startActivity(tempIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4839/buggy-version/app.src.main.java.com.example.onurelbirlik.sketchygui.TakePictureCamera.java", "BodyUseAPI": [], "Fixed commit": "6663d8cbbed4fc06243ebe07d30a45f31fb01b39", "Url": "https://api.github.com/repos/onur-elbirlik/sketchy", "Date": "2018-05-07T16:46:34Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.deepoove.swagger.dubbo.http.ReferenceManager.services.isEmpty())) { com.alibaba.dubbo.config.spring.ServiceBean<?> bean = com.deepoove.swagger.dubbo.http.ReferenceManager.services.toArray(new com.alibaba.dubbo.config.spring.ServiceBean[]{ })[0]; com.deepoove.swagger.dubbo.http.ReferenceManager.application = bean.getApplication(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/836/buggy-version/swagger-dubbo.src.main.java.com.deepoove.swagger.dubbo.http.ReferenceManager.java", "BodyUseAPI": ["java.util.Collection<com.alibaba.dubbo.config.spring.ServiceBean>.toArray(com.alibaba.dubbo.config.spring.ServiceBean[])"], "Fixed commit": "f84cfab526d1ec22d9547a29ea25ac363fdc8142", "Url": "https://api.github.com/repos/Sayi/swagger-dubbo", "Date": "2018-05-31T17:29:05Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player.getHp()) > 0) { town(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9285/buggy-version/src.com.nodzigames.heroesofgrannard.stepper.Stepper.java", "BodyUseAPI": [], "Fixed commit": "96671b3038c49b3d22e6708292120521e987badc", "Url": "https://api.github.com/repos/NodziGames/H.O.G", "Date": "2018-07-13T11:35:50Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timeoutMillis > 0) { long now = java.lang.System.currentTimeMillis(); timeoutMillis = timeoutMillis - (now - start); start = now; if (timeoutMillis <= 0) { return retVal; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1873/buggy-version/src.main.java.io.nats.client.impl.MessageQueue.java", "BodyUseAPI": [], "Fixed commit": "60c69f3354ce40a09655b9936d053c9fb34e2ffe", "Url": "https://api.github.com/repos/nats-io/java-nats", "Date": "2018-06-09T23:08:46Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (id == null) { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4402/buggy-version/app.src.main.java.com.ninos.activities.ShowPostActivity.java", "BodyUseAPI": [], "Fixed commit": "64f75174b948bef0198e2c3e1b3468b21b050fb5", "Url": "https://api.github.com/repos/ninosapp/Ninos", "Date": "2018-03-05T11:45:30Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.ergodirekt.azr.controller.DatenZurLaufzeit.getDatenZurLaufzeit().containsKey(java.time.LocalDate.now().minusDays(1))) { if (((de.ergodirekt.azr.controller.Einstellungen.isMinderjaehrig()) && (de.ergodirekt.azr.controller.DatenZurLaufzeit.holeGehen(java.time.LocalDate.now().minusDays(1)).plusMinutes(720).isAfter(de.ergodirekt.azr.controller.AktuellerEintrag.getKommen()))) || ((!(de.ergodirekt.azr.controller.Einstellungen.isMinderjaehrig())) && (de.ergodirekt.azr.controller.DatenZurLaufzeit.holeGehen(java.time.LocalDate.now().minusDays(1)).plusMinutes(660).isAfter(de.ergodirekt.azr.controller.AktuellerEintrag.getKommen())))) { LabelFehlerRuhezeiten.setVisible(true); }else { LabelFehlerRuhezeiten.setVisible(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6047/buggy-version/src.de.ergodirekt.azr.controller.BasisrechnerController.java", "BodyUseAPI": [], "Fixed commit": "ca85a0534807a9d115df5a2e2ccffd0c82d92573", "Url": "https://api.github.com/repos/DanielMerkl/Arbeitszeitrechner-Material-Design", "Date": "2018-07-12T07:17:57Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (emitter instanceof cn.s3bit.th902.danmaku.mbg.MBGBulletEmitter) { ((cn.s3bit.th902.danmaku.mbg.MBGBulletEmitter) (emitter)).nextEmit = emitter.mbgItem.\u5468\u671f.baseValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1366/buggy-version/th902-main.src.cn.s3bit.th902.danmaku.mbg.event.BulletEmitterEvents.java", "BodyUseAPI": [], "Fixed commit": "1bbe19237a8fb3be05921dbf2c9a73e29f807f42", "Url": "https://api.github.com/repos/cn-s3bit/TH902", "Date": "2018-04-15T05:06:11Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(seedu.address.commons.util.FileUtil.isValidPath(fileName))) { throw new java.io.IOException(java.lang.String.format(seedu.address.storage.MESSAGE_FILE_INVALID_ERROR, fileName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/540/buggy-version/src.main.java.seedu.address.storage.StorageManager.java", "BodyUseAPI": ["java.lang.String.format(seedu.address.storage.MESSAGE_FILE_INVALID_ERROR,java.lang.String)"], "Fixed commit": "117d062cc175bdd382ead68ed4ca315b1ed716d2", "Url": "https://api.github.com/repos/btzy/cs2103-taskmanager", "Date": "2018-10-30T11:04:57Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.gianlu.commonutils.FossUtils.hasCrashlytics()) com.crashlytics.android.Crashlytics.logException(ex);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1856/buggy-version/app.src.main.java.com.gianlu.aria2app.ThisApplication.java", "BodyUseAPI": [], "Fixed commit": "0faabe8244fd45dd1a82f81072015ab4d8581853", "Url": "https://api.github.com/repos/devgianlu/Aria2App", "Date": "2018-09-28T17:17:50Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (hasDbParam(am, database)) { java.lang.String[] tempDbInfo = database.split(\"[.]\"); if ((tempDbInfo.length) != 3) { java.lang.String msg = \"database must be <server.database.schema>.\"; this.printErrorUsage(msg); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1968/buggy-version/caom2-artifact-sync.src.main.java.ca.nrc.cadc.caom2.artifactsync.Caom2ArtifactSync.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "540f756d91097663c96b5699e3b00043a1311e9c", "Url": "https://api.github.com/repos/yeunga/caom2db", "Date": "2018-10-16T16:28:22Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.languagetool.openoffice.SingleDocument.specialOptimization) { setFirstCheckDone(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4959/buggy-version/languagetool-office-extension.src.main.java.org.languagetool.openoffice.SingleDocument.java", "BodyUseAPI": [], "Fixed commit": "f8f38f24d62e16cf54bd64a161fe8ebb25608cd6", "Url": "https://api.github.com/repos/languagetool-org/languagetool", "Date": "2018-10-11T16:44:42Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (adjArray.get(srcID).contains(destID)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/3005/buggy-version/src.q2.Graph.java", "BodyUseAPI": [], "Fixed commit": "5f4817e6e7bbec58e3cd10b33fc8fcb440e44a61", "Url": "https://api.github.com/repos/abehnan/409a3", "Date": "2018-03-26T20:31:25Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(lisFile.exists())) { lisFileName = lisFileName.replace(\"_\", \"\"); lisFile = new java.io.File(lisFileName); if (!(lisFile.exists())) { throw new org.eclipse.osee.framework.jdk.core.type.OseeArgumentException(java.lang.String.format(\"VectorCast *.LIS file doesn't exist [%s]\", lisFilePathName)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4666/buggy-version/plugins.org.eclipse.osee.vcast.src.org.eclipse.osee.vcast.VCastLisFileParser.java", "BodyUseAPI": [], "Fixed commit": "629cd023c34cb6abdd44ecd7fe0b85f8d13b8315", "Url": "https://api.github.com/repos/eclipse/osee", "Date": "2018-03-21T20:41:39Z"},
{"Line": "=>640", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (apiKey != null) { tokenInfo.setAccessToken(apiKey.getAccessToken()); tokenInfo.setConsumerSecret(apiKey.getConsumerSecret()); tokenInfo.setValidityPeriod(apiKey.getValidityPeriod()); tokenInfo.setScope(apiKey.getTokenScope().split(\"\\\\s\")); }else { tokenInfo.setAccessToken(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4480/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.AMDefaultKeyManagerImpl.java", "BodyUseAPI": ["org.wso2.carbon.apimgt.api.model.APIKey.getConsumerSecret()", "org.wso2.carbon.apimgt.api.model.AccessTokenInfo.setValidityPeriod(apiKey.getValidityPeriod())", "org.wso2.carbon.apimgt.api.model.AccessTokenInfo.setScope(apiKey.getTokenScope().split(\"\\\\s\"))", "apiKey.getTokenScope().split(java.lang.String)", "org.wso2.carbon.apimgt.api.model.APIKey.getValidityPeriod()", "org.wso2.carbon.apimgt.api.model.APIKey.getAccessToken()", "org.wso2.carbon.apimgt.api.model.AccessTokenInfo.setConsumerSecret(apiKey.getConsumerSecret())", "org.wso2.carbon.apimgt.api.model.AccessTokenInfo.setAccessToken(apiKey.getAccessToken())", "org.wso2.carbon.apimgt.api.model.APIKey.getTokenScope()"], "Fixed commit": "8c3e88ac2122c60b2a5501f7ccaa014262c634c7", "Url": "https://api.github.com/repos/chamilaadhi/carbon-apimgt", "Date": "2018-03-14T12:54:19Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s.isEmpty()) { return \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9429/buggy-version/Source.src.linanqiu.GitbookToPandoc.java", "BodyUseAPI": [], "Fixed commit": "5b557b3fdfb56352c6ee142d609a2107bcc6d940", "Url": "https://api.github.com/repos/sylvainhalle/gitbook-pandoc", "Date": "2018-02-02T18:49:46Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(workers.isShutdown())) { workers.submit(new org.aion.zero.impl.sync.TaskGetHeaders(p2pMgr, chain.getBestBlock().getNumber(), _selfTd, peerStates, org.aion.zero.impl.sync.SyncMgr.log)); queueFull.set(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6145/buggy-version/modAionImpl.src.org.aion.zero.impl.sync.SyncMgr.java", "BodyUseAPI": ["java.util.concurrent.ExecutorService.submit(org.aion.zero.impl.sync.TaskGetHeaders)"], "Fixed commit": "8944b0ebe1204e3f52e6b94225c0d20da098d38f", "Url": "https://api.github.com/repos/aionnetwork/aion", "Date": "2018-07-24T18:13:24Z"},
{"Line": "=>616", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((overridingMethods) == null) { overridingMethods = new java.util.HashSet<org.jtool.eclipse.javamodel.JavaMethod>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/838/buggy-version/org.jtool.eclipse.src.main.java.org.jtool.eclipse.javamodel.JavaMethod.java", "BodyUseAPI": [], "Fixed commit": "a511b3b0e16a2000ebc61e0ed761443b60a95bfd", "Url": "https://api.github.com/repos/katsuhisamaruyama/jxplatform2", "Date": "2018-09-11T11:26:41Z"},
{"Line": "=>605", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((overriddenMethods) == null) { overriddenMethods = new java.util.HashSet<org.jtool.eclipse.javamodel.JavaMethod>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/838/buggy-version/org.jtool.eclipse.src.main.java.org.jtool.eclipse.javamodel.JavaMethod.java", "BodyUseAPI": [], "Fixed commit": "a511b3b0e16a2000ebc61e0ed761443b60a95bfd", "Url": "https://api.github.com/repos/katsuhisamaruyama/jxplatform2", "Date": "2018-09-11T11:26:41Z"},
{"Line": "=>1475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userObj == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2026/buggy-version/iNaturalist.src.main.java.org.inaturalist.android.ObservationViewerActivity.java", "BodyUseAPI": [], "Fixed commit": "3be3653f57110d6c523cf9a3beb21df8e277e836", "Url": "https://api.github.com/repos/inaturalist/iNaturalistAndroid", "Date": "2018-05-09T11:50:14Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.dubbo.spring.boot.DubboProperties.getAppname()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (appname == null) { appname = environment.getProperty(\"spring.application.name\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4820/buggy-version/src.main.java.com.alibaba.dubbo.spring.boot.DubboAutoConfiguration.java", "BodyUseAPI": [], "Fixed commit": "3bdc07d5e07dae6bc903ffe1d85ef9d028680435", "Url": "https://api.github.com/repos/Ivan97/dubbo-spring-boot-starter", "Date": "2018-03-07T07:25:25Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rasodu.gedcom.core.IGedcomRepository.GetFamily(ind.ChildOfFamily)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((fam == null) || ((fam.HusbandId) == null)) || ((fam.WifeId) == null)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/743/buggy-version/src.main.java.com.rasodu.gedcom.Validation.IndividualValidator.java", "BodyUseAPI": [], "Fixed commit": "e526eb18bfb2494aea8ed56ee63826782de7d1c8", "Url": "https://api.github.com/repos/jfining/ssw555_fall_18", "Date": "2018-10-28T22:48:05Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cnt == 1) && (CommonConstants.GBDT_ALG_NAME.equalsIgnoreCase(modelConfig.getAlgorithm()))) { po.binLowestScore = score; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4844/buggy-version/src.main.java.ml.shifu.shifu.core.ConfusionMatrix.java", "BodyUseAPI": [], "Fixed commit": "2044a9815b29bdc7126357db8b1a41969c459f73", "Url": "https://api.github.com/repos/ShifuML/shifu", "Date": "2016-07-15T14:41:37Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isGBDT) { finalPredict = predictSum; }else { finalPredict = predictSum / weightSum; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4844/buggy-version/src.main.java.ml.shifu.shifu.core.TreeModel.java", "BodyUseAPI": [], "Fixed commit": "2044a9815b29bdc7126357db8b1a41969c459f73", "Url": "https://api.github.com/repos/ShifuML/shifu", "Date": "2016-07-15T14:41:37Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.round(sensors[0])) == (java.lang.Math.round(sensors[2]))) { stop = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8726/buggy-version/Robot.java", "BodyUseAPI": [], "Fixed commit": "0711441d063d77653ed6b67ef914558cec4744cd", "Url": "https://api.github.com/repos/PHSCRC/lockLAN", "Date": "2018-04-04T18:46:00Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.equals(dest)) { java.lang.System.out.println(\"Source and destination accounts must be different!\"); return false; }else if ((currency) != (dest.currency)) { java.lang.System.err.println(\"Can't transfer to a different currency!\"); return false; }else if (((status) == (AcctStatus.NO_DEBIT)) || ((status) == (AcctStatus.NO_TRANSACTION))) { java.lang.System.err.println(\"Source account frozen!\"); return false; }else if (((dest.status) == (AcctStatus.NO_CREDIT)) || ((dest.status) == (AcctStatus.NO_TRANSACTION))) { java.lang.System.err.println(\"Destination account frozen!\"); return false; }else if ((balance.compareTo(amount)) < 0) { java.lang.System.err.println(\"Insufficient funds!\"); return false; }else { balance = balance.subtract(amount); dest.balance = dest.balance.add(amount); java.lang.System.out.println((((\"Funds transfer successful!\\nYour balance is \" + (currency)) + \" \") + (balance.setScale(2, java.math.RoundingMode.HALF_UP).toPlainString()))); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8753/buggy-version/src.cbs.Account.java", "BodyUseAPI": ["java.math.BigDecimal.add(java.math.BigDecimal)"], "Fixed commit": "c32a9c04f853da64ddc086cd124ba40a00c77ea3", "Url": "https://api.github.com/repos/ccddo/cbs", "Date": "2018-02-26T11:23:31Z"},
{"Line": "=>738", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (block == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7907/buggy-version/modAionImpl.src.org.aion.zero.impl.AionBlockchainImpl.java", "BodyUseAPI": [], "Fixed commit": "8950e13cc5659cd1f6454a79109e36e193da7f1c", "Url": "https://api.github.com/repos/aionnetwork/aion", "Date": "2018-02-27T23:10:33Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mingming.block.trade.service.FearIndexService.store()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fearIndexStoreResponse.isFailed()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6586/buggy-version/src.main.java.com.mingming.block.trade.scheduletask.FearIndexCoinPriceTask.java", "BodyUseAPI": [], "Fixed commit": "0ed1b9988cefc34d8ad62b394c1b42da50f68534", "Url": "https://api.github.com/repos/amlongjie/testProject", "Date": "2018-10-18T03:36:50Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.kylin.job.execution.DefaultChainedExecutable.getExtraInfo(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (snapshotResPath == null) { org.apache.kylin.engine.mr.steps.lookup.UpdateCubeAfterSnapshotStep.logger.info(\"no snapshot path exist in the context, so no need to update snapshot path\"); return new org.apache.kylin.job.execution.ExecuteResult(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9324/buggy-version/engine-mr.src.main.java.org.apache.kylin.engine.mr.steps.lookup.UpdateCubeAfterSnapshotStep.java", "BodyUseAPI": [], "Fixed commit": "20c66d803d2ce0634078d790b441799a7af29991", "Url": "https://api.github.com/repos/zhaoyongjie/kylin", "Date": "2018-05-24T09:16:47Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.kylin.engine.mr.steps.lookup.LookupExecutableUtil.getLookupTableName(this.getParams())", "org.apache.kylin.job.execution.DefaultChainedExecutable.getExtraInfo(java.lang.String)", "org.apache.kylin.cube.CubeManager.getCube(org.apache.kylin.engine.mr.steps.lookup.LookupExecutableUtil.getCubeName(this.getParams()))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(snapshotResPath.equals(cube.getSnapshotResPath(lookupTableName)))) { org.apache.kylin.engine.mr.steps.lookup.LookupExecutableUtil.updateSnapshotPathToCube(cubeManager, cube, lookupTableName, snapshotResPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9324/buggy-version/engine-mr.src.main.java.org.apache.kylin.engine.mr.steps.lookup.UpdateCubeAfterSnapshotStep.java", "BodyUseAPI": ["org.apache.kylin.engine.mr.steps.lookup.LookupExecutableUtil.updateSnapshotPathToCube(org.apache.kylin.cube.CubeManager,org.apache.kylin.cube.CubeInstance,java.lang.String,java.lang.String)"], "Fixed commit": "20c66d803d2ce0634078d790b441799a7af29991", "Url": "https://api.github.com/repos/zhaoyongjie/kylin", "Date": "2018-05-24T09:16:47Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ingExists) { java.util.ArrayList<java.lang.Object> tempList1 = foodFactsPackage.FileHandler.readObjectFromFile(\"IngredientStore.ser\"); for (java.lang.Object o : tempList1) Library.ingredientStore.add(((foodFactsPackage.Ingredient) (o))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8721/buggy-version/src.foodFactsPackage.Main.java", "BodyUseAPI": [], "Fixed commit": "01b4b4bfdbf2d696b3bb19c3d011b1e608a8cfb3", "Url": "https://api.github.com/repos/FoodFactsTeam/FoodFacts", "Date": "2018-04-22T07:08:47Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (recExists) { java.util.ArrayList<java.lang.Object> tempList2 = foodFactsPackage.FileHandler.readObjectFromFile(\"RecipeStore.ser\"); for (java.lang.Object o : tempList2) Library.recLib.add(((foodFactsPackage.Recipe) (o))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8721/buggy-version/src.foodFactsPackage.Main.java", "BodyUseAPI": [], "Fixed commit": "01b4b4bfdbf2d696b3bb19c3d011b1e608a8cfb3", "Url": "https://api.github.com/repos/FoodFactsTeam/FoodFacts", "Date": "2018-04-22T07:08:47Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.nih.nci.nbia.restAPI.GetSimpleSearchCriteriaValues.buildPatientCrit(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (pcriteria == null) { return javax.ws.rs.core.Response.ok(\"\").build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/264/buggy-version/software.nbia-api.src.gov.nih.nci.nbia.restAPI.GetSimpleSearchCriteriaValues.java", "BodyUseAPI": [], "Fixed commit": "f26199d6bc6132c697cb7d90b6f6b6e50062ad09", "Url": "https://api.github.com/repos/CBIIT/NBIA-TCIA", "Date": "2018-04-06T13:00:13Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (rect == null) { setParameter(com.gentics.mesh.parameter.ImageManipulationParameters.RECT_QUERY_PARAM_KEY, null); }else { setParameter(com.gentics.mesh.parameter.ImageManipulationParameters.RECT_QUERY_PARAM_KEY, rect.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8991/buggy-version/rest-model.src.main.java.com.gentics.mesh.parameter.ImageManipulationParameters.java", "BodyUseAPI": ["com.gentics.mesh.parameter.ImageManipulationParameters.setParameter(java.lang.String,rect.toString())", "com.gentics.mesh.parameter.image.ImageRect.toString()"], "Fixed commit": "bf5df1e96e08fc96133772da57dc3942fd4145da", "Url": "https://api.github.com/repos/gentics/mesh", "Date": "2018-01-15T12:53:43Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.lwjgl.util.vector.Vector2f.sub(org.lwjgl.util.vector.Vector2f,org.lwjgl.util.vector.Vector2f,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((toAdd.lengthSquared()) > 0) { toAdd.normalise(); xPos += ((toAdd.x) * (((float) (timePassed)) / 1000.0F)) * (toChange.getSpeed()); zPos += ((toAdd.y) * (((float) (timePassed)) / 1000.0F)) * (toChange.getSpeed()); toChange.setTarget(new org.lwjgl.util.vector.Vector3f(xTarget, 0.0F, zTarget)); toChange.movable.setPosition(new org.lwjgl.util.vector.Vector3f(xPos, 0.0F, zPos)); }else { toChange.setTarget(new org.lwjgl.util.vector.Vector3f(xTarget, 0.0F, zTarget)); toChange.movable.setPosition(new org.lwjgl.util.vector.Vector3f(xTarget, 0.0F, zTarget)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6864/buggy-version/MageGame.main.MainGame.java", "BodyUseAPI": ["org.lwjgl.util.vector.Vector2f.normalise()"], "Fixed commit": "fa16a840ce2d79559f29835c1bce4e098523e0d5", "Url": "https://api.github.com/repos/Skoolin/magGameClient", "Date": "2018-02-14T17:48:16Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((bootstrapProperties != null) && (bootstrapProperties.exists())) { prop.load(new java.io.FileInputStream(bootstrapProperties)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2438/buggy-version/src.main.java.net.wasdev.wlp.common.arquillian.util.HttpPortUtil.java", "BodyUseAPI": ["java.util.Properties.load(java.io.FileInputStream)"], "Fixed commit": "8a8badfdbc1c1a0791bd163367a7cb280818225f", "Url": "https://api.github.com/repos/anjumfatima90/ci.common", "Date": "2018-06-11T15:27:57Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["database.service.CooperatorsService.findAllCoopFromDep(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (cooperators != null) { jdbcPostgreSQL.writeToDatabase((\"DELETE FROM COOPERATORS WHERE DEPARTMENT_ID=\" + id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9519/buggy-version/src.main.java.database.service.DepartmentService.java", "BodyUseAPI": [], "Fixed commit": "c579f5499e6b93bcde91d980b8cd0b8b1531c36e", "Url": "https://api.github.com/repos/ArtPreD/test-task01", "Date": "2018-08-02T20:00:10Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["retrofit2.Response<it.cnr.istc.lecture.api.InitResponse>.body()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (init != null) android.widget.Toast.makeText(this, init.user.first_name, Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5658/buggy-version/LECTurE-MobileApp.app.src.main.java.it.cnr.istc.lecture.LoginActivity.java", "BodyUseAPI": ["android.widget.Toast.makeText(it.cnr.istc.lecture.LoginActivity,init.user.first_name,Toast.LENGTH_SHORT)", "android.widget.Toast.makeText(this, init.user.first_name, Toast.LENGTH_SHORT).show()"], "Fixed commit": "3bf1198bde871ae4aeafd32798186f2472fd10d7", "Url": "https://api.github.com/repos/pstlab/LECTurE", "Date": "2018-07-11T14:48:19Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.toArray(java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((defSource.length) > 0) { mSpider = us.codecraft.webmagic.Spider.create(mProcessor).addUrl(defSource).setDownloader(new com.github.runningforlife.photosniffer.crawler.OkHttpDownloader()); mSpider.run(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8517/buggy-version/app.src.main.java.com.github.runningforlife.photosniffer.service.ImageRetrieveService.java", "BodyUseAPI": ["us.codecraft.webmagic.Spider.create(mProcessor).addUrl(defSource).setDownloader(com.github.runningforlife.photosniffer.crawler.OkHttpDownloader)", "us.codecraft.webmagic.Spider.create(mProcessor).addUrl(java.lang.String[])"], "Fixed commit": "da59bd135d0197814f84e71677be1865791056f3", "Url": "https://api.github.com/repos/runningforlife/PhotoFans", "Date": "2018-01-10T15:17:00Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((playerIn.inventory.getFirstEmptyStack()) != (-1)) { if (retrievedStack.isEmpty()) return net.minecraft.item.ItemStack.EMPTY; if ((clickedButton == 0) && (shiftPressed == 1)) { if (!(this.mergeItemStack(retrievedStack, ((this.rowCount()) * 9), (((this.rowCount()) * 9) + 36), true))) { this.tileEntity.inventory.input(retrievedStack); } }else playerIn.inventory.setItemStack(retrievedStack); return retrievedStack; }else playerIn.inventory.setItemStack(retrievedStack);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1054/buggy-version/src.main.java.com.zerofall.ezstorage.gui.server.ContainerStorageCore.java", "BodyUseAPI": ["playerIn.inventory.setItemStack(net.minecraft.item.ItemStack)", "playerIn.inventory.setItemStack(net.minecraft.item.ItemStack)"], "Fixed commit": "f8b66fa65f0759bcb872cba7603bf44548bf39f7", "Url": "https://api.github.com/repos/Draylar/EZStorage2", "Date": "2018-10-11T23:37:07Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((java.lang.String) (pokedexDropdown.getSelectedItem())).equals(\"Cthun\")) { iconLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/pokemon/view/images/Cthun.jpeg\"))); }else if (((java.lang.String) (pokedexDropdown.getSelectedItem())).equals(\"Mukla\")) { iconLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/pokemon/view/images/Mukla.jpg\"))); }else if (((java.lang.String) (pokedexDropdown.getSelectedItem())).equals(\"Rip\")) { iconLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/pokemon/view/images/Rip.png\"))); }else if (((java.lang.String) (pokedexDropdown.getSelectedItem())).equals(\"Rot\")) { iconLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/pokemon/view/images/Rot.png\"))); }else if (((java.lang.String) (pokedexDropdown.getSelectedItem())).equals(\"Shaarji\")) { iconLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/pokemon/view/images/Shaarji.jpg\"))); }else if (((java.lang.String) (pokedexDropdown.getSelectedItem())).equals(\"Soggoth\")) { iconLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/pokemon/view/images/Soggoth.jpg\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7803/buggy-version/src.pokemon.view.PokemonPanel.java", "BodyUseAPI": ["javax.swing.JComboBox.getSelectedItem()", "javax.swing.JComboBox.getSelectedItem()", "java.lang.Object.equals(java.lang.String)", "java.lang.Object.equals(java.lang.String)", "javax.swing.JComboBox.getSelectedItem()", "java.lang.Object.equals(java.lang.String)", "java.lang.Object.equals(java.lang.String)", "javax.swing.JComboBox.getSelectedItem()", "java.lang.Object.equals(java.lang.String)", "javax.swing.JComboBox.getSelectedItem()"], "Fixed commit": "87371fe03d76c0e4b9e1fb1726f6ef31856d970b", "Url": "https://api.github.com/repos/cow9000/PokemonProject", "Date": "2018-01-12T19:15:56Z"},
{"Line": "=>599", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((thisTimeCollect) == (analysis.Term.DIV)) && ((lastTimeCollect) != (analysis.Term.DIV))) { printlog(\"divide and not divide.\"); termParts.add(new analysis.Multiplikation(new analysis.Term[]{ lastParts.get(0), lastParts.get(1) }, Multiplikation.DIV)); }else if (((thisTimeCollect) == (analysis.Term.NO)) && ((lastTimeCollect) == (analysis.Term.NO))) { printlog(\"No and no.\"); termParts.add(lastParts.get(0)); }else if ((((thisTimeCollect) == (analysis.Term.NO)) && ((lastTimeCollect) == (analysis.Term.MULT))) || (((thisTimeCollect) == (analysis.Term.NO)) && ((lastTimeCollect) == (analysis.Term.DIV)))) { printlog(\"NO and MULT or DIV\"); termParts.add(lastParts.get(0)); }else { printlog(\"Foregot a case in here!!!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5096/buggy-version/src.analysis.Term.java", "BodyUseAPI": [], "Fixed commit": "1dfc67a0bb068444689916ba285c56c293f3769c", "Url": "https://api.github.com/repos/CorneliusHuber/Boomingscalculator", "Date": "2018-05-13T15:01:19Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (map.containsKey(\"minPrice\")) { conditions.setMinPrice(java.lang.Integer.parseInt(map.get(\"minPrice\").toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9772/buggy-version/src.main.java.com.city5.controller.HouseController.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.lang.Object.toString()", "com.city5.pojo.HouseQueryConditions.setMinPrice(int)"], "Fixed commit": "6efc23612a145bf92b52850d2097058ee80c7ee6", "Url": "https://api.github.com/repos/clay-f/city5", "Date": "2018-04-13T13:12:06Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (map.containsKey(\"maxPrice\")) { conditions.setMaxPrice(java.lang.Integer.parseInt(map.get(\"maxPrice\").toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9772/buggy-version/src.main.java.com.city5.controller.HouseController.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "com.city5.pojo.HouseQueryConditions.setMaxPrice(int)"], "Fixed commit": "6efc23612a145bf92b52850d2097058ee80c7ee6", "Url": "https://api.github.com/repos/clay-f/city5", "Date": "2018-04-13T13:12:06Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (map.containsKey(\"districtName\")) { conditions.setDistrictName(map.get(\"districtName\").toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9772/buggy-version/src.main.java.com.city5.controller.HouseController.java", "BodyUseAPI": ["java.lang.Object.toString()", "com.city5.pojo.HouseQueryConditions.setDistrictName(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "6efc23612a145bf92b52850d2097058ee80c7ee6", "Url": "https://api.github.com/repos/clay-f/city5", "Date": "2018-04-13T13:12:06Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (timeZone != null) { cal.setTimeZone(timeZone); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1896/buggy-version/src.main.java.org.dmfs.rfc5545.calendarmetrics.ChineseCalendarMetrics.java", "BodyUseAPI": ["java.util.Calendar.setTimeZone(java.util.TimeZone)"], "Fixed commit": "80511c92d60fee67dad88ad536c4da1683114f17", "Url": "https://api.github.com/repos/thaidh/librecur_plus", "Date": "2018-07-11T10:05:27Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(threads.classes.DirectoryWatchService.gob_isRunning)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9824/buggy-version/src.main.java.threads.classes.DirectoryWatchService.java", "BodyUseAPI": [], "Fixed commit": "002ab37b65565e42849497df943d262a03755066", "Url": "https://api.github.com/repos/Alexander-Lukacs/VFS_GUI", "Date": "2018-03-12T12:06:30Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (unityRunner.agent.line.UnityLineListParser.ignoredLines.isEmpty()) { unityRunner.agent.line.UnityLineListParser.ignoredLines = java.util.Arrays.asList(new unityRunner.agent.line.Line(\"Assertion failed: Failed to insert item. Name:.*?, Command:.*\", Line.Type.Normal)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5941/buggy-version/agent.src.unityRunner.agent.line.UnityLineListParser.java", "BodyUseAPI": [], "Fixed commit": "102a7dd35b52344106847eeeee243e6f8e3d3bc7", "Url": "https://api.github.com/repos/ArtOfSettling/Teamcity-unity3d-build-runner-plugin", "Date": "2018-05-12T13:25:23Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (status == (jetbrains.buildServer.messages.Status.ERROR)) { status = jetbrains.buildServer.messages.Status.FAILURE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5941/buggy-version/agent.src.unityRunner.agent.LogParser.java", "BodyUseAPI": [], "Fixed commit": "102a7dd35b52344106847eeeee243e6f8e3d3bc7", "Url": "https://api.github.com/repos/ArtOfSettling/Teamcity-unity3d-build-runner-plugin", "Date": "2018-05-12T13:25:23Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (rsESE != null) { rsESE.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1262/buggy-version/pmarlen-web-ligth.src.main.java.com.pmarlen.backend.dao.EntradaSalidaDAO.java", "BodyUseAPI": ["java.sql.ResultSet.close()"], "Fixed commit": "93bbf7c7026b90832f973f7bfc116f7cbf5d8cd9", "Url": "https://api.github.com/repos/tracktopell/PerfumeriaMarlen-10.4", "Date": "2018-01-24T13:55:00Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (psESE != null) { psESE.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1262/buggy-version/pmarlen-web-ligth.src.main.java.com.pmarlen.backend.dao.EntradaSalidaDAO.java", "BodyUseAPI": ["java.sql.PreparedStatement.close()"], "Fixed commit": "93bbf7c7026b90832f973f7bfc116f7cbf5d8cd9", "Url": "https://api.github.com/repos/tracktopell/PerfumeriaMarlen-10.4", "Date": "2018-01-24T13:55:00Z"},
{"Line": "=>1067", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value instanceof java.sql.Date) { calendar.setTime(value); type = \"date\"; }else { calendar.setTime(value); type = \"time\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2446/buggy-version/stdlib.database.sql.src.main.java.org.ballerinalang.database.sql.SQLDatasourceUtils.java", "BodyUseAPI": ["java.util.Calendar.setTime(java.util.Date)", "java.util.Calendar.setTime(java.util.Date)"], "Fixed commit": "b534302b954e4743db7603de3fc670367f097583", "Url": "https://api.github.com/repos/hevayo/ballerina-lang", "Date": "2018-07-09T05:47:10Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i >= 0) { int bc = method.getBytecodeIndex(i); if ((method.getLineNumber(bc)) == l) { list.add(new com.ibm.wala.ipa.slicer.NormalStatement(n, i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2691/buggy-version/de.hu-berlin.slice.plugin.src.de.hu_berlin.slice.plugin.jobs.SlicingTask.java", "BodyUseAPI": ["com.ibm.wala.classLoader.IBytecodeMethod.getBytecodeIndex(int)", "java.util.List<com.ibm.wala.ipa.slicer.NormalStatement>.add(com.ibm.wala.ipa.slicer.NormalStatement)"], "Fixed commit": "a97d26dc8d693648ce93a579116604506f4ceeaf", "Url": "https://api.github.com/repos/carwehlm/eclipse-slicer", "Date": "2018-02-13T11:31:20Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_DataType) != null) { dest.writeString(m_DataType.name()); }else { dest.writeString(eDataType.Picture.name()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6678/buggy-version/ClassScanner.app.src.main.java.Logic.Models.PictureAudioData.java", "BodyUseAPI": [], "Fixed commit": "a6b22df4d117ba0a612dc616cdcc3933fcc05c2c", "Url": "https://api.github.com/repos/Deandun/MTA_Sadna", "Date": "2018-10-06T12:38:58Z"},
{"Line": "=>600", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (res instanceof org.exist.xmldb.ExtendedResource) { if (res instanceof org.exist.xmldb.AbstractRemoteResource) { chunk = new byte[((int) (java.lang.Math.min(((org.exist.xmldb.AbstractRemoteResource) (res)).getContentLength(), org.exist.xmldb.RemoteCollection.MAX_UPLOAD_CHUNK)))]; }else { chunk = new byte[((int) (java.lang.Math.min(((org.exist.xmldb.ExtendedResource) (res)).getStreamLength(), org.exist.xmldb.RemoteCollection.MAX_UPLOAD_CHUNK)))]; } }else { chunk = new byte[org.exist.xmldb.RemoteCollection.MAX_UPLOAD_CHUNK]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/285/buggy-version/src.org.exist.xmldb.RemoteCollection.java", "BodyUseAPI": [], "Fixed commit": "bf21a082e7616a8e38259e332ed5f965a29f57b2", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2018-06-03T11:02:16Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gregtech.common.tileentities.machines.multi.GT_MetaTileEntity_DrillerBase.getStackInSlot(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((pipes != null) && (!(pipes.isItemEqual(gregtech.common.tileentities.machines.multi.GT_MetaTileEntity_DrillerBase.miningPipe)))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/163/buggy-version/src.main.java.gregtech.common.tileentities.machines.multi.GT_MetaTileEntity_DrillerBase.java", "BodyUseAPI": [], "Fixed commit": "c664a810e7cc1ac725470d9f7ab6cd224b59bc47", "Url": "https://api.github.com/repos/Blood-Asp/GT5-Unofficial", "Date": "2018-10-07T16:03:16Z"},
{"Line": "=>1056", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (divN >= 0) { for (int i = 0; i < (allParas.get(docNum).size()); i++) { for (int pos : footnotes.get((i + divN))) { java.lang.String paraText = (allParas.get(docNum).get(i).substring(0, pos)) + (org.languagetool.openoffice.Main.ZERO_WIDTH_SPACE); if (pos < ((allParas.get(docNum).get(i).length()) - 1)) { paraText += allParas.get(docNum).get(i).substring((pos + 1)); } allParas.get(docNum).set(i, paraText); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4492/buggy-version/languagetool-office-extension.src.main.java.org.languagetool.openoffice.Main.java", "BodyUseAPI": ["java.util.List<int[]>.get(int)"], "Fixed commit": "3c75c5c84e80b23a40881c9ee01abfc29006c090", "Url": "https://api.github.com/repos/languagetool-org/languagetool", "Date": "2018-03-18T10:47:55Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((damage.getPower()) == 0) { return context.getResources().getString(R.string.damage_not_available_placeholder); }else { android.support.v4.util.Pair<java.lang.Float, java.lang.Float> damageResult = damage.getMoveDamage(); return ((((\"Guaranteed \" + (damage.getHitsToKO())) + \"HKO \") + (es.developer.achambi.pkmng.modules.calculator.screen.presentation.MoveDamagePresentation.Builder.round(damageResult.first, 2))) + \" ~ \") + (es.developer.achambi.pkmng.modules.calculator.screen.presentation.MoveDamagePresentation.Builder.round(damageResult.second, 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8817/buggy-version/app.src.main.java.es.developer.achambi.pkmng.modules.calculator.screen.presentation.MoveDamagePresentation.java", "BodyUseAPI": ["es.developer.achambi.pkmng.modules.calculator.model.Damage.getMoveDamage()", "es.developer.achambi.pkmng.modules.calculator.model.Damage.getHitsToKO()"], "Fixed commit": "ec5f30d91c4929a305fb9988835c128aab23692f", "Url": "https://api.github.com/repos/AlvaroChambi/PKMNG", "Date": "2018-08-21T13:29:05Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s.toString().equals(getContext().getResources().getString(R.string.location_current_location_label))) { android.widget.Button positiveBtn = editBtnsDialog.getButton(DialogInterface.BUTTON_POSITIVE); if (positiveBtn != null) { positiveBtn.setEnabled(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/3877/buggy-version/app.src.main.java.com.trevorwiebe.weather.customViews.AddLocationListPreference.java", "BodyUseAPI": [], "Fixed commit": "305241e4048fe4bc27d81ce2a783324cbd458a70", "Url": "https://api.github.com/repos/trevorwiebe/Weather", "Date": "2018-03-17T16:32:01Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (typeId != null) { typeDef = typeManagerDAO.getById(typeId); typeDef.stream().forEach(( k) -> { if (k.getBaseTypeId().equals(BaseTypeId.CMIS_DOCUMENT)) { com.pogeyan.cmis.impl.factory.CacheProviderServiceFactory.getTypeCacheServiceProvider().put(repositoryId, k.getId(), docManagerDAO.getByTypeId(k.getId())); }else { com.pogeyan.cmis.impl.factory.CacheProviderServiceFactory.getTypeCacheServiceProvider().put(repositoryId, k.getId(), k); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6119/buggy-version/copper-server-impl.src.main.java.com.pogeyan.cmis.impl.utils.DBUtils.java", "BodyUseAPI": ["com.pogeyan.cmis.api.data.services.MTypeManagerDAO.getById(java.util.List<?>)"], "Fixed commit": "d754ebcb06db71a308aa6b423a7822997cd4bfca", "Url": "https://api.github.com/repos/PogeyanOSS/copper-cms", "Date": "2018-07-02T14:32:41Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isEmpty())) { microbat.model.trace.TraceNode caller = this.peek(); java.lang.String m = caller.getInvokingMethod(); if (m.equals(methodSignature)) { return false; } java.lang.System.currentTimeMillis(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8033/buggy-version/microbat_instrumentator.src.main.microbat.instrumentation.runtime.MethodCallStack.java", "BodyUseAPI": [], "Fixed commit": "f2b414aad363da79ed6dab5d6fba91f7f0d9af42", "Url": "https://api.github.com/repos/llmhyy/microbat", "Date": "2018-03-26T08:00:07Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((popupWindow) != null) { popupWindow.dismiss(); popupWindow = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6256/buggy-version/app.src.main.java.se.medituner.app.Popup.java", "BodyUseAPI": [], "Fixed commit": "3897e416b8dca1eda24c664b53feac753da04a4d", "Url": "https://api.github.com/repos/le-SQUAD/Medituner-Kids", "Date": "2018-04-17T08:43:23Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(android.text.TextUtils.isEmpty(feedbackId))) { shouldRecordScreenshot.setValue(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6376/buggy-version/libandroid-navigation-ui.src.main.java.com.mapbox.services.android.navigation.ui.v5.NavigationViewModel.java", "BodyUseAPI": [], "Fixed commit": "e1286de0668f7aa87a22f48e6a88e2a1087974a1", "Url": "https://api.github.com/repos/Mappy/mapbox-navigation-android", "Date": "2018-03-05T11:01:28Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"overflow\".equals(key)) { view.setLayerType(View.LAYER_TYPE_HARDWARE, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2216/buggy-version/kk-view.src.main.java.cn.kkmofang.view.ImageElement.java", "BodyUseAPI": [], "Fixed commit": "b35391a4650c4fd3b3365c85d049a09352942aad", "Url": "https://api.github.com/repos/hailongz/kk-view", "Date": "2018-05-08T08:30:24Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!isSource) || isInclude) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5670/buggy-version/Development.ca.queensu.cs.observer.update.src.ca.queensu.cs.observer.update.ObserverUpdate.java", "BodyUseAPI": [], "Fixed commit": "8d984caa34900f0494e1e58b39a454f43315c682", "Url": "https://api.github.com/repos/nicolas-hili/Observer", "Date": "2018-08-21T21:00:49Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((app.beelabs.com.codebase.component.ProgressDialogComponent.dialog) != null) app.beelabs.com.codebase.component.ProgressDialogComponent.dialog.dismiss();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4379/buggy-version/coconut-code.src.main.java.app.beelabs.com.codebase.component.ProgressDialogComponent.java", "BodyUseAPI": [], "Fixed commit": "24569e87bf3354405bbb36f396625757e46c983e", "Url": "https://api.github.com/repos/acan12/coconut", "Date": "2018-03-03T07:41:37Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Persistance.debugwiresharkmode) com.darkxell.common.util.Logger.d((\"MESSAGE SENT : \" + message));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9517/buggy-version/PMDMMOc.src.com.darkxell.client.launchable.GameSocketEndpoint.java", "BodyUseAPI": [], "Fixed commit": "84ee79c1d101c51a09a4d0ef3ec11ee14dbabd32", "Url": "https://api.github.com/repos/Darkxell/PMDMMO", "Date": "2018-07-17T08:07:16Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (planet.contains(\"eris\")) name = \"planet.Eris\"; else if (planet.contains(\"pluto\")) name = \"planet.Pluto\"; else if (planet.contains(\"ceres\")) name = \"planet.Ceres\"; else if (planet.contains(\"kuiperbelt\")) name = \"planet.kuiperBelt\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6310/buggy-version/src.main.java.com.mjr.planetprogression.item.ResearchPaper.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "636d2a7483d823848dcf4f1700caa6ff92757ec9", "Url": "https://api.github.com/repos/MJRLegends/Planet-Progression", "Date": "2018-03-25T18:07:28Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.vrchatapi.VRCUser.fetch(users.get(0).getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((user.getInstanceID().length()) < 10) msg = interaction.replaceMsg(msg, \"%link\", ((((\"[Click here to join](https://www.vrchat.net/launch?worldId=\" + (world.getId())) + \"&instanceId=\") + (user.getInstanceID())) + \")\")); else msg = interaction.replaceMsg(msg, \"%link\", \"Not Public\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4884/buggy-version/src.org.frostbite.karren.interactions.Tags.VRChat.VRCUserSearch.java", "BodyUseAPI": ["org.frostbite.karren.interactions.Interaction.replaceMsg(java.lang.String,java.lang.String,((((\"[Click here to join](https://www.vrchat.net/launch?worldId=\" + (world.getId())) + \"&instanceId=\") + (user.getInstanceID())) + \")\"))", "io.github.vrchatapi.VRCUser.getInstanceID()"], "Fixed commit": "566f80d720c790f337701336a92d5e65919edd79", "Url": "https://api.github.com/repos/ripxfrostbite/karren-sama", "Date": "2018-07-22T06:57:16Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((senderPort) != (-1)) { java.lang.System.out.println(\"Sending back to client...\"); dgPacket = new java.net.DatagramPacket(bytes, bytes.length, address, senderPort); }else { java.lang.System.out.println(\"Sending to server...\"); dgPacket = new java.net.DatagramPacket(bytes, bytes.length, address, port); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4239/buggy-version/src.com.dom.dope.DOPESocket.java", "BodyUseAPI": [], "Fixed commit": "79339bd64d275ecc6f9a931b1d39e6ade2781b7c", "Url": "https://api.github.com/repos/domdew23/Proxy-Server", "Date": "2018-03-30T21:00:27Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentSeqNum) == (packets.length)) { java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4239/buggy-version/src.com.dom.dope.DOPESocket.java", "BodyUseAPI": [], "Fixed commit": "79339bd64d275ecc6f9a931b1d39e6ade2781b7c", "Url": "https://api.github.com/repos/domdew23/Proxy-Server", "Date": "2018-03-30T21:00:27Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(il.co.wearabledevices.mudramediaplayer.MainActivity.callbackadded)) { android.util.Log.i(\"INFO\", \"bind SUCCEEDED\"); mIMudraAPI = IMudraAPI.Stub.asInterface(service); android.util.Log.i(\"INFO\", \"Stub\"); mIMudraAPI.initMudra(mMudraDeviceStatusCB, mMudraDataCB); android.util.Log.i(\"INFO\", \"init\"); il.co.wearabledevices.mudramediaplayer.MainActivity.callbackadded = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6022/buggy-version/wear.src.main.java.il.co.wearabledevices.mudramediaplayer.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d1472ed7799822d99c9a019693745c8507bc61a8", "Url": "https://api.github.com/repos/TegraMorgan/MudraMediaPlayer", "Date": "2018-07-05T11:41:08Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (channel == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6074/buggy-version/src.main.java.com.xpay.pay.notify.AbstractNotifyHandler.java", "BodyUseAPI": [], "Fixed commit": "ec6f5c38084a17b179d53eb336343d01e737c47e", "Url": "https://api.github.com/repos/zpingmapay/xpay", "Date": "2018-01-10T08:55:37Z"},
{"Line": "=>779", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["building.getPermissionEvents().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((event.getId()) == null) { rowPane.findPaneOfTypeByID(com.minecolonies.coremod.client.gui.BUTTON_ADD_PLAYER_OR_FAKEPLAYER, com.minecolonies.coremod.client.gui.Button.class).hide(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9666/buggy-version/src.main.java.com.minecolonies.coremod.client.gui.WindowTownHall.java", "BodyUseAPI": [], "Fixed commit": "7ba125775179ca9aa81f775ef86a99236942bce0", "Url": "https://api.github.com/repos/ldtteam/minecolonies", "Date": "2018-02-03T20:03:57Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.honey) >= 1) && ((this.pollen) >= 1)) { this.honey = (honey) + h; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/133/buggy-version/Hive.java", "BodyUseAPI": [], "Fixed commit": "bbe7aa2b68d71c795b73f97e9d439d2029a95ecf", "Url": "https://api.github.com/repos/tylerdowney/buzz", "Date": "2018-10-13T15:07:19Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.honey) >= 1) && ((this.pollen) >= 1)) { this.pollen = (pollen) + p; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/133/buggy-version/Hive.java", "BodyUseAPI": [], "Fixed commit": "bbe7aa2b68d71c795b73f97e9d439d2029a95ecf", "Url": "https://api.github.com/repos/tylerdowney/buzz", "Date": "2018-10-13T15:07:19Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((plotmas.PlotLauncher.getRunner()) != null) { builder.append(java.lang.String.format(\" @ step %d (%d ms)] \", plotmas.PlotLauncher.getRunner().getUserEnvironment().getStep(), plotmas.PlotEnvironment.getPlotTimeNow())); }else { builder.append(java.lang.String.format(\" @ after_env_stop (%d ms)] \", plotmas.PlotEnvironment.getPlotTimeNow())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4479/buggy-version/src.java.plotmas.helper.PlotFormatter.java", "BodyUseAPI": [], "Fixed commit": "5950520e4d1d439172ec1ebce33e8d784be6295d", "Url": "https://api.github.com/repos/cartisan/plotmas", "Date": "2018-08-02T12:46:30Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((getBombsHeld(stack)) < 1) && ((getBagBombType(stack)) != (-1))) { setBagBombType(stack, (-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9797/buggy-version/src.main.java.zeldaswordskills.item.ItemBombBag.java", "BodyUseAPI": ["zeldaswordskills.item.ItemBombBag.setBagBombType(net.minecraft.item.ItemStack,int)"], "Fixed commit": "a7c08ada3acf281f284d3d930d156a3c766afbd0", "Url": "https://api.github.com/repos/Spitfyre03/ZeldaSwordSkills", "Date": "2018-01-09T22:29:05Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.ebi.embl.flatfile.reader.FlatFileReader<?>.getEntry()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((entry.getSubmitterAccession()) != null) flatfileEntryNames.put(entry.getSubmitterAccession().toUpperCase(), entry.getSequence().getLength());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2915/buggy-version/src.main.java.uk.ac.ebi.ena.assembly.GenomeAssemblyWebinCli.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Long>.put(entry.getSubmitterAccession().toUpperCase(),entry.getSequence().getLength())", "uk.ac.ebi.embl.api.entry.Entry.getSubmitterAccession()", "entry.getSubmitterAccession().toUpperCase()", "uk.ac.ebi.embl.api.entry.Entry.getSequence()", "entry.getSequence().getLength()"], "Fixed commit": "b6ed688f0a63b2ac4de36f360dbbe6cc5c88cf3b", "Url": "https://api.github.com/repos/enasequence/webin-cli", "Date": "2018-06-01T10:57:19Z"},
{"Line": "=>1955", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.core.io.support.PropertiesLoaderUtils.loadProperties(org.springframework.core.io.Resource)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (props != null) { return props.getProperty(\"app.resourceBundleVersion\"); }else { return gov.nist.hit.core.service.ResourcebundleLoader.getRsbleVersion(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8242/buggy-version/hit-core-service.src.main.java.gov.nist.hit.core.service.ResourcebundleLoader.java", "BodyUseAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Fixed commit": "edef4bdddc74700e24d2e2ba8f53a630a95caff0", "Url": "https://api.github.com/repos/haffo/hit-core", "Date": "2018-03-15T21:11:09Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.nist.hit.core.service.ResourcebundleLoader.getRsbVersion()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (rsbVersion != null) { servletContext.setInitParameter(\"rsbVersion\", rsbVersion); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8242/buggy-version/hit-core-api.src.main.java.gov.nist.hit.core.api.config.WebAppInitializer.java", "BodyUseAPI": ["javax.servlet.ServletContext.setInitParameter(java.lang.String,java.lang.String)"], "Fixed commit": "edef4bdddc74700e24d2e2ba8f53a630a95caff0", "Url": "https://api.github.com/repos/haffo/hit-core", "Date": "2018-03-15T21:11:09Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["new free.rm.skytube.gui.businessobjects.MobileNetworkWarningDialog(view.getContext()).onPositive(new com.afollestad.materialdialogs.MaterialDialog.SingleButtonCallback() {\n    @java.lang.Override\n    public void onClick(@android.support.annotation.NonNull\n    com.afollestad.materialdialogs.MaterialDialog dialog, @android.support.annotation.NonNull\n    com.afollestad.materialdialogs.DialogAction which) {\n        youTubeVideo.downloadVideo(context);\n    }\n}).showAndGetStatus(MobileNetworkWarningDialog.ActionType.DOWNLOAD_VIDEO)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!warningDialogDisplayed) { youTubeVideo.downloadVideo(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6289/buggy-version/app.src.main.java.free.rm.skytube.gui.businessobjects.adapters.GridViewHolder.java", "BodyUseAPI": [], "Fixed commit": "20eae05d8e3c350e073c67a39d4e81269f8208ae", "Url": "https://api.github.com/repos/ram-on/SkyTube", "Date": "2018-10-14T15:04:23Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["new free.rm.skytube.gui.businessobjects.MobileNetworkWarningDialog(getContext()).onPositive(new com.afollestad.materialdialogs.MaterialDialog.SingleButtonCallback() {\n    @java.lang.Override\n    public void onClick(@android.support.annotation.NonNull\n    com.afollestad.materialdialogs.MaterialDialog dialog, @android.support.annotation.NonNull\n    com.afollestad.materialdialogs.DialogAction which) {\n        youTubeVideo.downloadVideo(getContext());\n    }\n}).showAndGetStatus(MobileNetworkWarningDialog.ActionType.DOWNLOAD_VIDEO)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!warningDialogDisplayed) { youTubeVideo.downloadVideo(getContext()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6289/buggy-version/app.src.main.java.free.rm.skytube.gui.fragments.YouTubePlayerV2Fragment.java", "BodyUseAPI": [], "Fixed commit": "20eae05d8e3c350e073c67a39d4e81269f8208ae", "Url": "https://api.github.com/repos/ram-on/SkyTube", "Date": "2018-10-14T15:04:23Z"},
{"Line": "=>724", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["new free.rm.skytube.gui.businessobjects.MobileNetworkWarningDialog(getContext()).onPositive(new com.afollestad.materialdialogs.MaterialDialog.SingleButtonCallback() {\n    @java.lang.Override\n    public void onClick(@android.support.annotation.NonNull\n    com.afollestad.materialdialogs.MaterialDialog dialog, @android.support.annotation.NonNull\n    com.afollestad.materialdialogs.DialogAction which) {\n        youTubeVideo.downloadVideo(getContext());\n    }\n}).showAndGetStatus(MobileNetworkWarningDialog.ActionType.DOWNLOAD_VIDEO)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!warningDialogDisplayed) { youTubeVideo.downloadVideo(getContext()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6289/buggy-version/app.src.main.java.free.rm.skytube.gui.fragments.YouTubePlayerV1Fragment.java", "BodyUseAPI": [], "Fixed commit": "20eae05d8e3c350e073c67a39d4e81269f8208ae", "Url": "https://api.github.com/repos/ram-on/SkyTube", "Date": "2018-10-14T15:04:23Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (operation instanceof uk.gov.gchq.gaffer.operation.Operations) { int score = 0; for (final uk.gov.gchq.gaffer.operation.Operation op : ((uk.gov.gchq.gaffer.operation.Operations<?>) (operation)).getOperations()) { score += getScore(op); } return score; }else { final java.lang.Class<? extends uk.gov.gchq.gaffer.operation.Operation> opClass = operation.getClass(); final java.util.List<java.lang.Class<? extends uk.gov.gchq.gaffer.operation.Operation>> keys = new java.util.ArrayList(opScores.keySet()); for (int i = (keys.size()) - 1; i >= 0; i--) { final java.lang.Class<? extends uk.gov.gchq.gaffer.operation.Operation> key = keys.get(i); if (key.isAssignableFrom(opClass)) { return opScores.get(key); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5596/buggy-version/core.store.src.main.java.uk.gov.gchq.gaffer.store.operation.resolver.DefaultScoreResolver.java", "BodyUseAPI": ["uk.gov.gchq.gaffer.operation.Operation.getClass()"], "Fixed commit": "69334a95f6b92af7bbf6d916642a1037cdd23a3f", "Url": "https://api.github.com/repos/gchq/Gaffer", "Date": "2018-03-04T19:06:25Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((exoPlayer) != null) { playerPosition = exoPlayer.getCurrentPosition(); outState.putLong(RecipeAppConstants.KEY_MEDIA_PLAYER_POSITION, playerPosition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/772/buggy-version/app.src.main.java.com.example.ericr.bakersgonnabake.RecipeStepDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "244e1ec66fa5df666edc6be8c9c49dbbdbe1583a", "Url": "https://api.github.com/repos/EricRybarczyk/bakers-gonna-bake", "Date": "2018-07-17T23:55:22Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.springframework.util.StringUtils.isEmpty(request.getAttribute(\"javax.servlet.error.request_uri\")))) { url = request.getAttribute(\"javax.servlet.error.request_uri\").toString(); }else { url = request.getRequestURI(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1256/buggy-version/src.main.java.xyz.comfyz.exceptions.handler.DefaultErrorController.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getRequestURI()", "request.getAttribute(\"javax.servlet.error.request_uri\").toString()", "javax.servlet.http.HttpServletRequest.getAttribute(java.lang.String)"], "Fixed commit": "12324841e4d40decd1314c05c4bc20bf80db7f5e", "Url": "https://api.github.com/repos/comfyz/exception-handler", "Date": "2018-03-15T03:46:29Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mFragmentManager.getBackStackEntryCount()) == 0) { mFragmentManager.beginTransaction().replace(R.id.content_main, new by.d1makrat.library_fm.ui.fragment.StartFragment(), by.d1makrat.library_fm.ui.activity.MainActivity.START_FRAGMENT_TAG).addToBackStack(null).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5172/buggy-version/app.src.main.java.by.d1makrat.library_fm.ui.activity.MainActivity.java", "BodyUseAPI": ["mFragmentManager.beginTransaction().replace(R.id.content_main,by.d1makrat.library_fm.ui.fragment.StartFragment,java.lang.String)", "mFragmentManager.beginTransaction().replace(R.id.content_main, new by.d1makrat.library_fm.ui.fragment.StartFragment(), by.d1makrat.library_fm.ui.activity.MainActivity.START_FRAGMENT_TAG).addToBackStack(null).commit()", "mFragmentManager.beginTransaction().replace(R.id.content_main, new by.d1makrat.library_fm.ui.fragment.StartFragment(), by.d1makrat.library_fm.ui.activity.MainActivity.START_FRAGMENT_TAG).addToBackStack(<nulltype>)", "android.support.v4.app.FragmentManager.beginTransaction()"], "Fixed commit": "b396b17768700298e47fb0dbf4c1bcf3d5ed9806", "Url": "https://api.github.com/repos/DzmitryLakisau/Last.fm-Library-Viewer", "Date": "2018-03-20T21:52:45Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((split.length) > 1) { power = java.lang.Integer.parseInt(split[1].replaceAll(\"\\\\^\", \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8014/buggy-version/src.Main.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "aa816f91e799490b162b8d91e0c814698d9dce5f", "Url": "https://api.github.com/repos/rajat276/PolynomialAlgebra", "Date": "2018-08-07T04:43:10Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (key != 0) { result += ((\"+\" + value) + \"X^\") + key; }else { result += \"+\" + value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8014/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "aa816f91e799490b162b8d91e0c814698d9dce5f", "Url": "https://api.github.com/repos/rajat276/PolynomialAlgebra", "Date": "2018-08-07T04:43:10Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < ((this.size) - 1)) { str += \", \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1055/buggy-version/IntegerArrayList.java", "BodyUseAPI": [], "Fixed commit": "1890ba5085c5559d88acac5631d08560803d42d0", "Url": "https://api.github.com/repos/KadinTucker/CompSciHL", "Date": "2018-09-10T21:40:39Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((response != null) && ((response.getRawResponse()) != null)) { okhttp3.ResponseBody body = response.getRawResponse().body(); if (body != null) { try { byte[] bytes = body.bytes(); registerListener.onFailure(new java.lang.String(bytes), response.code()); } catch (java.io.IOException e) { e.printStackTrace(); } }else { registerListener.onFailure(response.getException().toString(), response.code()); } }else { registerListener.onFailure(response.getException().toString(), response.code()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1965/buggy-version/library.src.main.java.com.want.wso2.auth.Authenticator.java", "BodyUseAPI": ["com.want.wso2.interfaces.RegisterListener.onFailure(response.getException().toString(),response.code())", "com.want.wso2.model.Response<com.want.wso2.bean.RegisterResponse>.code()", "com.want.wso2.model.Response<com.want.wso2.bean.RegisterResponse>.getRawResponse()", "response.getException().toString()", "com.want.wso2.model.Response<com.want.wso2.bean.RegisterResponse>.code()", "com.want.wso2.model.Response<com.want.wso2.bean.RegisterResponse>.getException()", "response.getException().toString()", "com.want.wso2.model.Response<com.want.wso2.bean.RegisterResponse>.code()", "com.want.wso2.interfaces.RegisterListener.onFailure(java.lang.String,response.code())", "com.want.wso2.model.Response<com.want.wso2.bean.RegisterResponse>.getException()", "com.want.wso2.interfaces.RegisterListener.onFailure(response.getException().toString(),response.code())", "response.getRawResponse().body()"], "Fixed commit": "16bcbd5df524e45439f68cb419871edb3f2016ea", "Url": "https://api.github.com/repos/wisn-mirror/WSONetLib", "Date": "2018-01-10T08:45:04Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(Constants.RDF_VALIDATION_MAPPER_OBJECT)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (validationRDF == null) { throw new io.opensaber.registry.middleware.MiddlewareHaltException(((this.getClass().getName()) + (io.opensaber.registry.middleware.impl.RDFValidator.RDF_VALIDATION_MAPPING_NULL))); }else if (RDF instanceof org.apache.jena.rdf.model.Model) { io.opensaber.validators.shex.shaclex.ShaclexValidator validator = new io.opensaber.validators.shex.shaclex.ShaclexValidator(); es.weso.schema.Schema schema = validator.readSchema(schemaFileName, io.opensaber.registry.middleware.impl.RDFValidator.SCHEMAFORMAT, io.opensaber.registry.middleware.impl.RDFValidator.PROCESSOR); org.apache.jena.rdf.model.Model rdfWithValidations = mergeModels(((org.apache.jena.rdf.model.Model) (RDF)), ((org.apache.jena.rdf.model.Model) (validationRDF))); es.weso.schema.Result validationResult = validator.validate(rdfWithValidations, schema); mapData.put(Constants.RDF_VALIDATION_OBJECT, validationResult); if (!(validationResult.isValid())) { throw new io.opensaber.registry.middleware.MiddlewareHaltException(((this.getClass().getName()) + (io.opensaber.registry.middleware.impl.RDFValidator.RDF_DATA_IS_INVALID))); } return mapData; }else { throw new io.opensaber.registry.middleware.MiddlewareHaltException(((this.getClass().getName()) + (io.opensaber.registry.middleware.impl.RDFValidator.RDF_DATA_IS_INVALID))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8421/buggy-version/java.middleware.registry-middleware.rdf-validation.src.main.java.io.opensaber.registry.middleware.impl.RDFValidator.java", "BodyUseAPI": [], "Fixed commit": "19bc4481e9acc14f5227898ff7a5fddb6b24a83b", "Url": "https://api.github.com/repos/project-sunbird/open-saber", "Date": "2018-03-07T06:55:11Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mLoadFinished)) { mLoadFinished = true; mCallbacks.onAlbumLoad(data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/526/buggy-version/matisse.src.main.java.com.zhihu.matisse.internal.model.AlbumCollection.java", "BodyUseAPI": [], "Fixed commit": "e720da364b1e73bf4420939b0fb62c08257ac249", "Url": "https://api.github.com/repos/mengxn/Matisse", "Date": "2018-07-10T11:47:42Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.equals(EdoConstants.QUESTION_TYPE_MATCH, question.getType()))) if (org.apache.commons.lang3.StringUtils.equals(EdoConstants.QUESTION_TYPE_MULTIPLE, question.getType())) { java.lang.String[] correctAnswers = org.apache.commons.lang3.StringUtils.split(question.getCorrectAnswer(), \",\"); java.lang.String[] selectedAnswers = org.apache.commons.lang3.StringUtils.split(answered.getAnswer(), \",\"); if ((com.rns.web.edo.service.util.CommonUtils.compareResults(correctAnswers, selectedAnswers)) && (com.rns.web.edo.service.util.CommonUtils.compareResults(selectedAnswers, correctAnswers))) { return question.getWeightage(); } }else if (org.apache.commons.lang3.StringUtils.equals(EdoConstants.QUESTION_TYPE_MATCH, question.getType())) { return com.rns.web.edo.service.util.CommonUtils.calculateMatchScore(question, answered); }else if (org.apache.commons.lang3.StringUtils.equalsIgnoreCase(org.apache.commons.lang3.StringUtils.trimToEmpty(answered.getAnswer()), org.apache.commons.lang3.StringUtils.trimToEmpty(question.getCorrectAnswer()))) { return question.getWeightage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9718/buggy-version/edofox-service.src.main.java.com.rns.web.edo.service.util.CommonUtils.java", "BodyUseAPI": ["com.rns.web.edo.service.domain.EdoQuestion.getCorrectAnswer()", "org.apache.commons.lang3.StringUtils.equals(EdoConstants.QUESTION_TYPE_MATCH,question.getType())", "org.apache.commons.lang3.StringUtils.equalsIgnoreCase(org.apache.commons.lang3.StringUtils.trimToEmpty(answered.getAnswer()),org.apache.commons.lang3.StringUtils.trimToEmpty(question.getCorrectAnswer()))", "com.rns.web.edo.service.domain.EdoQuestion.getWeightage()", "com.rns.web.edo.service.domain.EdoQuestion.getType()", "org.apache.commons.lang3.StringUtils.split(question.getCorrectAnswer(),java.lang.String)", "com.rns.web.edo.service.util.CommonUtils.calculateMatchScore(com.rns.web.edo.service.domain.EdoQuestion,com.rns.web.edo.service.domain.EdoQuestion)", "org.apache.commons.lang3.StringUtils.trimToEmpty(question.getCorrectAnswer())", "org.apache.commons.lang3.StringUtils.equals(EdoConstants.QUESTION_TYPE_MULTIPLE,question.getType())", "com.rns.web.edo.service.domain.EdoQuestion.getCorrectAnswer()", "com.rns.web.edo.service.domain.EdoQuestion.getWeightage()", "com.rns.web.edo.service.domain.EdoQuestion.getType()"], "Fixed commit": "a4c2c0ee98e720c01e510b77c22fa5a6c9a17d43", "Url": "https://api.github.com/repos/ajaxkulkarni/edofox-service", "Date": "2018-04-27T13:02:50Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.equalsIgnoreCase(EdoConstants.QUESTION_TYPE_MATCH, answered.getType())) { com.rns.web.edo.service.util.CommonUtils.setComplexAnswer(answered); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9718/buggy-version/edofox-service.src.main.java.com.rns.web.edo.service.util.CommonUtils.java", "BodyUseAPI": ["com.rns.web.edo.service.util.CommonUtils.setComplexAnswer(com.rns.web.edo.service.domain.EdoQuestion)"], "Fixed commit": "a4c2c0ee98e720c01e510b77c22fa5a6c9a17d43", "Url": "https://api.github.com/repos/ajaxkulkarni/edofox-service", "Date": "2018-04-27T13:02:50Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((context) != null) { context.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/3610/buggy-version/src.main.java.com.univocity.parsers.common.AbstractParser.java", "BodyUseAPI": [], "Fixed commit": "f2e02ba17e6e4037ec9efb9bfeb6e58063ba150a", "Url": "https://api.github.com/repos/mosoft521/univocity-parsers", "Date": "2018-06-23T05:46:19Z"},
{"Line": "=>632", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mSelectedAttachmentToDelete.size()) != 0) { selectedAttachmentToDeleteGroupPosition = ((java.lang.Integer) (v.getTag())); if ((groupViewHolder.mDeleteAttachments.getVisibility()) == (android.view.View.VISIBLE)) { deleteAttachmentsListener.deleteAttachments(mSelectedAttachmentToDelete); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7916/buggy-version/app.src.main.java.com.rescribe.doctor.adapters.patient_detail.SingleVisitAdapter.java", "BodyUseAPI": ["com.rescribe.doctor.adapters.patient_detail.SingleVisitAdapter.OnDeleteAttachments.deleteAttachments(java.util.HashSet<com.rescribe.doctor.model.case_details.VisitCommonData>)"], "Fixed commit": "21a62b5a0430749c7ffbf85b734668b2d7662f7c", "Url": "https://api.github.com/repos/sandeepbahalkar123/rescribeDoctor_repo", "Date": "2018-04-05T14:39:05Z"},
{"Line": "=>998", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rescribe.doctor.model.case_details.PatientHistory.getCommonData()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (commonData.isEmpty()) { mListDataHeader.remove(patientHistory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7916/buggy-version/app.src.main.java.com.rescribe.doctor.adapters.patient_detail.SingleVisitAdapter.java", "BodyUseAPI": [], "Fixed commit": "21a62b5a0430749c7ffbf85b734668b2d7662f7c", "Url": "https://api.github.com/repos/sandeepbahalkar123/rescribeDoctor_repo", "Date": "2018-04-05T14:39:05Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dma.restconnexion.UserInfosConnexion.listUserConnected) != null) { currentUser.setTokenJWT(jwtGenerator.generate(jwtUser)); hubCall.hubConfirmationConnexion(jwtUser, currentUser); for (int i = 0; i < (UserInfosConnexion.listUserConnected.size()); i++) { if (!(currentUser.getTokenJWT().equals(UserInfosConnexion.listUserConnected.get(i).getTokenJWT()))) { if (i == ((UserInfosConnexion.listUserConnected.size()) - 1)) { dma.restconnexion.jwtsecurity.controller.LoginController.maList.add(currentUser); dma.restconnexion.UserInfosConnexion.setListUserConnected(dma.restconnexion.jwtsecurity.controller.LoginController.maList); break; }else continue; }else { UserInfosConnexion.listUserConnected.remove(i); i--; } } if (UserInfosConnexion.listUserConnected.isEmpty()) { dma.restconnexion.jwtsecurity.controller.LoginController.maList.add(currentUser); dma.restconnexion.UserInfosConnexion.setListUserConnected(dma.restconnexion.jwtsecurity.controller.LoginController.maList); } }else { currentUser.setTokenJWT(jwtGenerator.generate(jwtUser)); hubCall.hubConfirmationConnexion(jwtUser, currentUser); dma.restconnexion.jwtsecurity.controller.LoginController.maList.add(currentUser); dma.restconnexion.UserInfosConnexion.setListUserConnected(dma.restconnexion.jwtsecurity.controller.LoginController.maList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8868/buggy-version/src.main.java.dma.restconnexion.jwtsecurity.controller.LoginController.java", "BodyUseAPI": [], "Fixed commit": "46f83dc6937f5fcf7bbb07fa19db1ecb0242fd80", "Url": "https://api.github.com/repos/maured/CustomerMailTool", "Date": "2018-08-14T12:04:00Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isVisibleToUser) { if ((mobileListAdapter) != null) { mobileListPresenter.sortData(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1363/buggy-version/app.src.main.java.com.gpk.mobilenice.feature.main.fragment.mobilelist.MobileListFragment.java", "BodyUseAPI": [], "Fixed commit": "bb16a9b25a74c8e15135b4aece6c281bbd0049b1", "Url": "https://api.github.com/repos/nobadisorn/mobilenice", "Date": "2018-03-11T18:21:25Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (prerequisite == (ladysnake.gaspunk.init.ModGases.AIR)) bottle = new net.minecraft.item.ItemStack(net.minecraft.init.Items.GLASS_BOTTLE); else bottle = ((ladysnake.gaspunk.item.ItemGasTube) (ModItems.GAS_TUBE)).getItemStackFor(prerequisite);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4535/buggy-version/src.main.java.ladysnake.gaspunk.init.ModGases.java", "BodyUseAPI": ["((ladysnake.gaspunk.item.ItemGasTube) (ModItems.GAS_TUBE)).getItemStackFor(ladysnake.gaspunk.api.IGas)"], "Fixed commit": "63774b119325a1d93f79db8cef91ee5c29e90ad5", "Url": "https://api.github.com/repos/Ladysnake/Gaspunk", "Date": "2018-03-15T08:05:20Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getData().isConfigurationSection(\"Drops\")) { while (getData().getConfigurationSection(\"Drops\").getKeys(false).contains(itemSec)) { itemSec += \"1\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5917/buggy-version/AdvancedMobControl.src.com.Ben12345rocks.AdvancedMobControl.Object.EntityHandle.java", "BodyUseAPI": [], "Fixed commit": "7330287e1cae28011d43a20436166a43a4db190a", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedMobControl", "Date": "2018-06-24T18:01:01Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(orderModelList.get(i).getDeliveryDate()))) { java.util.Date d = null; try { d = simpleDateFormat.parse(orderModelList.get(i).getDeliveryDate()); } catch (java.text.ParseException e) { e.printStackTrace(); } deliveryDiff.put(new java.lang.Long(((d1.getTime()) - (d.getTime()))), new java.lang.Integer(i)); stringBuilder.append(((((orderModelList.get(i).getPartyName()) + \" \") + (orderModelList.get(i).getDeliveryDate())) + \" :: \")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4531/buggy-version/app.src.main.java.com.imagesoftware.anubhav.vacmet.services.VacmetOverlayService.java", "BodyUseAPI": ["java.lang.StringBuilder.append(((((orderModelList.get(i).getPartyName()) + \"  \") + (orderModelList.get(i).getDeliveryDate())) + \" :: \"))", "java.util.ArrayList<com.imagesoftware.anubhav.vacmet.model.OrderModel>.get(int)", "java.util.HashMap<java.lang.Long, java.lang.Integer>.put(java.lang.Long,java.lang.Integer)", "java.util.ArrayList<com.imagesoftware.anubhav.vacmet.model.OrderModel>.get(int)", "java.util.ArrayList<com.imagesoftware.anubhav.vacmet.model.OrderModel>.get(int)", "orderModelList.get(i).getPartyName()", "java.text.SimpleDateFormat.parse(orderModelList.get(i).getDeliveryDate())", "orderModelList.get(i).getDeliveryDate()", "orderModelList.get(i).getDeliveryDate()"], "Fixed commit": "5a8338e7292aee158db5310fbb60b3052d4db4fc", "Url": "https://api.github.com/repos/jay1493/vacmetOrderStatus", "Date": "2018-01-17T08:35:24Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (goodRegister == true) { App.Queries.register(username_field.getText(), email_field.getText(), name_field.getText(), dob_field.getText(), pass_field.getText(), year_dropdown.getValue().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1114/buggy-version/src.main.java.Controller.Register_Controller.java", "BodyUseAPI": [], "Fixed commit": "eef5c1b18c5d425cc6d6e40f7c8cdb2c53896ab4", "Url": "https://api.github.com/repos/andrewnguyen22/usfdb", "Date": "2018-04-05T22:14:10Z"},
{"Line": "=>929", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!(com.wasteofplastic.askyblock.Settings.invincibleVisitors)) || (!((e.getEntity()) instanceof org.bukkit.entity.Player))) || (!(e.getCause().equals(DamageCause.ENTITY_ATTACK)))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/777/buggy-version/src.com.wasteofplastic.askyblock.listeners.PlayerEvents.java", "BodyUseAPI": [], "Fixed commit": "308ced2bb7256751e9e7ad4169b358192a17e22b", "Url": "https://api.github.com/repos/tastybento/askyblock", "Date": "2018-07-23T23:31:55Z"},
{"Line": "=>1400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sneps.snebr.Controller.isAutomaticBR()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (auto) { RESULT = \"Belief revision mode currently set to auto\"; }else { RESULT = \"Belief revision mode currently set to manual\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6451/buggy-version/src.sneps.snepslog.parser.java", "BodyUseAPI": [], "Fixed commit": "9cb6efe57e31ac7cd5403fbc64dd343756587e5e", "Url": "https://api.github.com/repos/Java-SNePS/Java-SNePS-3.0", "Date": "2018-05-13T22:48:59Z"},
{"Line": "=>1074", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (FinalWinner != \"No Cell\") { int room = java.lang.Integer.parseInt(FinalWinner.substring(1, FinalWinner.length())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9499/buggy-version/app.src.main.java.com.example.example6.MainActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "606cb6355046697d5945b75e80920335b1c0a6e2", "Url": "https://api.github.com/repos/BSJAIN92/Example6-SPS", "Date": "2018-04-04T15:05:09Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((l.indexOf('X')) == 1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/3950/buggy-version/ie.dit.TuneBook.java", "BodyUseAPI": [], "Fixed commit": "14f34a0eb230dcd072458c33a443ff68d13b9b84", "Url": "https://api.github.com/repos/NeonMatrix/JavaTest", "Date": "2018-02-14T17:27:25Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (account == null) { context.response().end(Status.PERMISSION_DENIED_AUTH_NEED.toBuffer()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2590/buggy-version/pik-core.src.main.java.kr.pik.core.ProfileVerticle.java", "BodyUseAPI": [], "Fixed commit": "507327b8ddf87852c52673101a819e33bb7bb56d", "Url": "https://api.github.com/repos/WonSoo/project-in-korea", "Date": "2018-07-20T22:13:02Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Long.valueOf(java.lang.String)", "java.lang.Long.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((0 >= total) || (0 >= fraction)) { return \"0 (0%)\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7432/buggy-version/rainmaker.rainmaker-pgr.src.main.java.org.egov.pgr.utils.ReportUtils.java", "BodyUseAPI": [], "Fixed commit": "c18f5c49e2161409aab56424b9bc16aa24995b91", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2018-07-09T12:33:49Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(validatorClass.EmptyTextBox(this, bi.mp16b03, \"Notes must not be empty\"))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8305/buggy-version/app.src.main.java.edu.aku.hassannaqvi.mappsform15__16.activities.Section16_BActivity.java", "BodyUseAPI": [], "Fixed commit": "80e65b8c58469fd98df4fcf19e3aa00a100b56a2", "Url": "https://api.github.com/repos/shznaqvi/MaPPSForm6", "Date": "2018-08-09T06:04:07Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(DBConstants.KEY.DOB)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(dobString)) { java.util.Date dob = org.smartregister.anc.util.Utils.dobStringToDate(dobString); if (dob != null) { jsonObject.put(VALUE, org.smartregister.anc.util.JsonFormUtils.DATE_FORMAT.format(dob)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1455/buggy-version/opensrp-anc.src.main.java.org.smartregister.anc.util.JsonFormUtils.java", "BodyUseAPI": ["org.smartregister.anc.util.Utils.dobStringToDate(java.lang.String)"], "Fixed commit": "07fc65150c2463a30a6f599ec3a5d08a04132b60", "Url": "https://api.github.com/repos/OpenSRP/opensrp-client-anc", "Date": "2018-10-18T07:41:19Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(womanClient.get(DBConstants.KEY.DOB))) { jsonObject.put(VALUE, org.smartregister.anc.util.Utils.getAgeFromDate(womanClient.get(DBConstants.KEY.DOB))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1455/buggy-version/opensrp-anc.src.main.java.org.smartregister.anc.util.JsonFormUtils.java", "BodyUseAPI": ["org.smartregister.anc.util.Utils.getAgeFromDate(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(DBConstants.KEY.DOB)", "org.json.JSONObject.put(VALUE,org.smartregister.anc.util.Utils.getAgeFromDate(womanClient.get(DBConstants.KEY.DOB)))"], "Fixed commit": "07fc65150c2463a30a6f599ec3a5d08a04132b60", "Url": "https://api.github.com/repos/OpenSRP/opensrp-client-anc", "Date": "2018-10-18T07:41:19Z"},
{"Line": "=>511", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.core.dom.PrefixExpression.getOperand()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((exp.getNodeType()) == (org.eclipse.jdt.core.dom.ASTNode.SIMPLE_NAME)) { java.lang.String varName = getVarFromExpression(((org.eclipse.jdt.core.dom.SimpleName) (exp))); this.addConditionedVar(varName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6259/buggy-version/plugin.src.main.java.org.autorefactor.refactoring.rules.ExcessiveMethodCallsRefactoring.java", "BodyUseAPI": [], "Fixed commit": "cd995cedaedaf4ee4affd29737951cc77f35b806", "Url": "https://api.github.com/repos/MarcoCouto/AutoRefactorCli", "Date": "2018-09-25T10:42:36Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.ByteArrayInputStream.skip(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (skipped != 3) { throw new java.io.IOException(\"Failed to skip 3 bytes!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8058/buggy-version/src.main.java.org.openRealmOfStars.starMap.history.event.CombatEvent.java", "BodyUseAPI": [], "Fixed commit": "24a329fdd81eec9c0487739c93dd04f07cc0ac17", "Url": "https://api.github.com/repos/tuomount/Open-Realms-of-Stars", "Date": "2018-03-18T20:11:38Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nearestTickIndex < 0) { nearestTickIndex = 0; }else if (nearestTickIndex > (mNumSegments)) { nearestTickIndex = mNumSegments; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6561/buggy-version/rangebar.src.com.edmodo.rangebar.Bar.java", "BodyUseAPI": [], "Fixed commit": "0bae560515b1a661209a81f045723f0f281503f4", "Url": "https://api.github.com/repos/legionco/range-bar", "Date": "2018-01-03T18:24:04Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == avlNode) { return avlNode; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8078/buggy-version/src.main.java.trees.AVLTree.java", "BodyUseAPI": [], "Fixed commit": "6a9a1269f54383ac5cfa9315b99e4032b0847c02", "Url": "https://api.github.com/repos/JosephChanChan/algorithms", "Date": "2018-06-09T09:21:39Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (context != null) context.removeServiceListener(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8118/buggy-version/APS-Libraries.APSToolsLib.src.main.java.se.natusoft.osgi.aps.tools.APSServiceTracker.java", "BodyUseAPI": ["se.natusoft.osgi.aps.tools.BundleContext.removeServiceListener(se.natusoft.osgi.aps.tools.APSServiceTracker<Service>)"], "Fixed commit": "65df9802f24c883f77de4bc8e32c5ce89005c903", "Url": "https://api.github.com/repos/tombensve/APS", "Date": "2014-05-31T11:57:52Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (destinationFile.exists()) { destinationFile.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6225/buggy-version/src.main.java.by.provisa.poland.registration.PersonsSelector.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "1dbe33113d482e924dd17beab350f816ea739c16", "Url": "https://api.github.com/repos/GenaNGV/provisa", "Date": "2018-07-05T11:40:12Z"},
{"Line": "=>952", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.maximumInformationLoss) == null) { this.estimateInformationLoss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2369/buggy-version/src.main.org.deidentifier.arx.ARXLattice.java", "BodyUseAPI": [], "Fixed commit": "6323f0cb1c2135b1d859f7ba401fbf19bb581105", "Url": "https://api.github.com/repos/eicherj/arx", "Date": "2018-01-11T21:07:33Z"},
{"Line": "=>973", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.minimumInformationLoss) == null) { this.estimateInformationLoss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2369/buggy-version/src.main.org.deidentifier.arx.ARXLattice.java", "BodyUseAPI": [], "Fixed commit": "6323f0cb1c2135b1d859f7ba401fbf19bb581105", "Url": "https://api.github.com/repos/eicherj/arx", "Date": "2018-01-11T21:07:33Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Integer.parseInt(productId)) != (product.getId())) { return org.springframework.http.ResponseEntity.status(HttpStatus.BAD_REQUEST).body(com.target.services.retail.model.BasicResponseResource.withMessage(\"The URL does not match the input data product Id.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9503/buggy-version/src.main.java.com.target.services.retail.ProductsController.java", "BodyUseAPI": [], "Fixed commit": "bb9e8fc80eb267c555d3073486b570aa4bef3e6e", "Url": "https://api.github.com/repos/PoojithaKomaravelli/target-assessment", "Date": "2018-07-16T16:10:53Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sample.testengine.TestGlobalState.getInstance().getCurrentHypothesisNumber()) == 2) { text.setFill(Color.BLACK); }else { text.setFill(dataForTestings.get(i).getColor()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/567/buggy-version/src.sample.QuestionsSceneController.java", "BodyUseAPI": [], "Fixed commit": "71936d63b514b167b089f8eea2f45db310cc41e6", "Url": "https://api.github.com/repos/tenshun/lab1memory", "Date": "2018-09-28T08:44:27Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pressedEnter) { onConnect(passwordField); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8787/buggy-version/PtiChatApp.app.src.main.java.fr.centralesupelec.ptichatapp.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "57e0e3af4193fb126876c91fa43868ed2417c8c3", "Url": "https://api.github.com/repos/CS-POOA-2018/PtiChat", "Date": "2018-10-26T08:12:27Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pressedEnter) { onSend(newMessage); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8787/buggy-version/PtiChatApp.app.src.main.java.fr.centralesupelec.ptichatapp.ChatActivity.java", "BodyUseAPI": [], "Fixed commit": "57e0e3af4193fb126876c91fa43868ed2417c8c3", "Url": "https://api.github.com/repos/CS-POOA-2018/PtiChat", "Date": "2018-10-26T08:12:27Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((accel.get(3)[((accel.get(3).length) - 1)]) < gyroEpoc) { return new double[]{ accel.get(0)[((accel.get(3).length) - 1)], accel.get(1)[((accel.get(3).length) - 1)], accel.get(2)[((accel.get(3).length) - 1)] }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1356/buggy-version/src.main.java.gait4dogs.backend.util.MathUtil.java", "BodyUseAPI": ["java.util.List<double[]>.get(int)", "java.util.List<double[]>.get(int)", "java.util.List<double[]>.get(int)", "java.util.List<double[]>.get(int)", "java.util.List<double[]>.get(int)", "java.util.List<double[]>.get(int)"], "Fixed commit": "a59a12cdd367606ea4f76d76f822253937052b50", "Url": "https://api.github.com/repos/hfm24/Gait4DogsBackend", "Date": "2018-04-13T16:35:24Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((accel.get(3)[0]) >= gyroEpoc) { return new double[]{ accel.get(0)[0], accel.get(1)[0], accel.get(2)[0] }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1356/buggy-version/src.main.java.gait4dogs.backend.util.MathUtil.java", "BodyUseAPI": ["java.util.List<double[]>.get(int)", "java.util.List<double[]>.get(int)", "java.util.List<double[]>.get(int)"], "Fixed commit": "a59a12cdd367606ea4f76d76f822253937052b50", "Url": "https://api.github.com/repos/hfm24/Gait4DogsBackend", "Date": "2018-04-13T16:35:24Z"},
{"Line": "=>661", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (cacheIdStr == null) { serializedIds = com.pratilipi.recommendations.utils.S3Utility.getSerializedContentPartOnePratilipiIds(language); cacheIdStr = serializedIds.stream().map(( number) -> java.lang.String.valueOf(number)).collect(java.util.stream.Collectors.joining(\",\")); redisUtility.set((\"v2_1_Serialized_\" + language), cacheIdStr, 120L, java.util.concurrent.TimeUnit.MINUTES); }else { if ((cacheIdStr.length()) > 0) { serializedIds = java.util.stream.Stream.of(cacheIdStr.split(\",\")).map(java.lang.Long::parseLong).collect(java.util.stream.Collectors.toList()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/923/buggy-version/src.main.java.com.pratilipi.recommendations.service.PratilipiService.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.split(java.lang.String)", "java.util.stream.Stream<java.lang.String>.map(java.util.function.Function<? super java.lang.String, ? extends java.lang.Long>)", "java.util.stream.Stream.of(java.lang.String[])", "java.util.stream.Stream<java.lang.Long>.collect(java.util.stream.Collector<java.lang.Long, ?, java.util.List<java.lang.Long>>)"], "Fixed commit": "8ab99fdaafc68de20b09916d98aea80efe9fefdb", "Url": "https://api.github.com/repos/Pratilipi/ecs-recommendation", "Date": "2018-09-01T07:05:55Z"},
{"Line": "=>670", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (serializedIds != null) { serializedIds.removeAll(userReadPratilipiIds); if ((serializedIds.size()) > 0) { java.util.Collections.shuffle(serializedIds); com.pratilipi.recommendations.dto.Pratilipi ptlp = new com.pratilipi.recommendations.dto.Pratilipi(); ptlp.setPratilipiId(serializedIds.get(0)); userReadPratilipiIds.add(serializedIds.get(0)); meta = new java.util.HashMap<java.lang.String, java.lang.Object>(); meta.put(\"recommendationType\", \"Serlialized\"); ptlp.setMeta(meta); pratilipis.add(ptlp); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/923/buggy-version/src.main.java.com.pratilipi.recommendations.service.PratilipiService.java", "BodyUseAPI": ["java.util.List<java.lang.Long>.removeAll(java.util.List<java.lang.Long>)", "java.util.List<java.lang.Long>.add(java.lang.Long)", "java.util.List<java.lang.Long>.size()", "java.util.List<java.lang.Long>.get(int)", "java.util.Collections.shuffle(java.util.List<java.lang.Long>)", "java.util.List<java.lang.Long>.get(int)", "com.pratilipi.recommendations.jdo.Pratilipi.setPratilipiId(java.lang.Long)"], "Fixed commit": "8ab99fdaafc68de20b09916d98aea80efe9fefdb", "Url": "https://api.github.com/repos/Pratilipi/ecs-recommendation", "Date": "2018-09-01T07:05:55Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSelectedSort) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1488/buggy-version/app.src.main.java.com.example.a0603614.popularmovies.MoviesList.java", "BodyUseAPI": [], "Fixed commit": "873b0879a7afc5c2e9a553a89cee5c0dc76541c7", "Url": "https://api.github.com/repos/thefinitemonkey/android-popular-movies", "Date": "2018-06-04T02:27:37Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (saveID != null) { actie = \"Gebruiker opslaan\"; editID = session.getAttribute(\"idEdit\").toString(); int requestID = java.lang.Integer.valueOf(editID); int callID = ((int) ((java.lang.Integer.valueOf(saveID)) * 0.25)); if (((session.getAttribute(\"idEdit\")) != null) && (requestID == callID)) { int id = java.lang.Integer.valueOf(session.getAttribute(\"idEdit\").toString()); session.removeAttribute(\"idEdit\"); session.removeAttribute(\"idSave\"); session.setAttribute(\"idSave\", saveID); gebruiker.setVoorNaam(request.getParameter(\"voornaam\")); gebruiker.setAchternaam(request.getParameter(\"achternaam\")); gebruiker.setRol(request.getParameter(\"rol\")); java.sql.Date datum = java.sql.Date.valueOf(request.getParameter(\"geboorteDatum\")); gebruiker.setGeboorteDatum(datum); gebruiker.setEmail(request.getParameter(\"email\")); gebruiker.setLogin(request.getParameter(\"login\")); gebruikerDAO.gebruikerAanpassen(id, gebruiker); json = new com.google.gson.Gson().toJson(gebruiker); }else { json = new com.google.gson.Gson().toJson(\"Error: idSave & idEdit komen niet overeen\"); } response.setContentType(\"application/json\"); response.getWriter().write(json); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2449/buggy-version/src.java.controller.someservlet.java", "BodyUseAPI": ["javax.servlet.http.HttpSession.setAttribute(java.lang.String,java.lang.String)", "java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "4094935c59758f439a879bfa9591d5f5036a8645", "Url": "https://api.github.com/repos/DWuytack/Project", "Date": "2018-05-18T13:12:46Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(releaseNotesString.isEmpty())) { com.orchardsoft.plugin.OrchardsoftPlugin.ReleaseNotesListener.TemplateObject templateObject = new com.orchardsoft.plugin.OrchardsoftPlugin.ReleaseNotesListener.TemplateObject(releaseNotesString, issue.getKey(), fixedByString, clientNameString, issue.getIssueType().getName(), issue); templateObjectArrayList.add(templateObject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5564/buggy-version/src.main.java.com.orchardsoft.plugin.OrchardsoftPlugin.ReleaseNotesListener.BuildTemplate.java", "BodyUseAPI": [], "Fixed commit": "bf82de8778ab0e5478905ef657c7a648d374ed5e", "Url": "https://api.github.com/repos/pdwyer54/OrchardSoftwareJIRAPlugin", "Date": "2018-08-01T14:27:42Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (matcher.find()) { java.lang.String matcherGroup = matcher.group(); java.lang.String escapedMatcherGroup = org.apache.solr.client.solrj.util.ClientUtils.escapeQueryChars(matcherGroup); if ((((matcherGroup.equals(\")\")) || (matcherGroup.equals(\"]\"))) || (matcherGroup.equals(\"}\"))) || (matcherGroup.equals(\"\\\"\"))) { java.lang.String closingBracket = matcher.group(); java.lang.String openingBracket = new java.lang.String(); switch (closingBracket) { case \"}\" : openingBracket = \"{\"; break; case \")\" : openingBracket = \"(\"; break; case \"]\" : openingBracket = \"[\"; break; case \"\\\"\" : openingBracket = \"\\\"\"; break; } java.lang.String bracketsRegex = \"\\\\\".concat(openingBracket).concat(\"(.*?)\\\\\").concat(closingBracket); if (!(java.util.regex.Pattern.compile(bracketsRegex).matcher(query).find())) { query = org.apache.commons.lang.StringUtils.replace(query, matcherGroup, escapedMatcherGroup); } }else { query = org.apache.commons.lang.StringUtils.replace(query, matcherGroup, escapedMatcherGroup); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8348/buggy-version/dspace-jspui.src.main.java.org.dspace.app.webui.discovery.DiscoverUtility.java", "BodyUseAPI": ["java.util.regex.Matcher.group()", "java.util.regex.Matcher.group()"], "Fixed commit": "a47844ef89f55ee7ea8cb9db1e5fc2e6e0dd9331", "Url": "https://api.github.com/repos/DSpace/DSpace", "Date": "2018-04-26T12:33:30Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (matcher.find()) { java.lang.String matcherGroup = matcher.group(); java.lang.String escapedMatcherGroup = org.apache.solr.client.solrj.util.ClientUtils.escapeQueryChars(matcherGroup); if ((((matcherGroup.equals(\")\")) || (matcherGroup.equals(\"]\"))) || (matcherGroup.equals(\"}\"))) || (matcherGroup.equals(\"\\\"\"))) { java.lang.String closingBracket = matcher.group(); java.lang.String openingBracket = new java.lang.String(); switch (closingBracket) { case \"}\" : openingBracket = \"{\"; break; case \")\" : openingBracket = \"(\"; break; case \"]\" : openingBracket = \"[\"; break; case \"\\\"\" : openingBracket = \"\\\"\"; break; } java.lang.String bracketsRegex = \"\\\\\".concat(openingBracket).concat(\"(.*?)\\\\\").concat(closingBracket); if (!(java.util.regex.Pattern.compile(bracketsRegex).matcher(query).find())) { query = org.apache.commons.lang.StringUtils.replace(query, matcherGroup, escapedMatcherGroup); } }else { query = org.apache.commons.lang.StringUtils.replace(query, matcherGroup, escapedMatcherGroup); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8348/buggy-version/dspace-xmlui.src.main.java.org.dspace.app.xmlui.aspect.discovery.DiscoveryUIUtils.java", "BodyUseAPI": ["java.util.regex.Matcher.group()", "java.util.regex.Matcher.group()"], "Fixed commit": "a47844ef89f55ee7ea8cb9db1e5fc2e6e0dd9331", "Url": "https://api.github.com/repos/DSpace/DSpace", "Date": "2018-04-26T12:33:30Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.xndroid.utils.ShellUtils.exec(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((net.xndroid.utils.ShellUtils.stdErr) != null) || (output.contains(\"error\"))) || (output.contains(\"unreachable\"))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9080/buggy-version/app.src.main.java.net.xndroid.fqrouter.FqrouterManager.java", "BodyUseAPI": [], "Fixed commit": "b2adeb07b85566689d996d35b2ba6a4ae24ed3f6", "Url": "https://api.github.com/repos/XndroidDev/Xndroid", "Date": "2018-06-04T08:55:56Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (child.getName().equalsIgnoreCase(\"MAPPING\")) { for (com.sonar.sslr.api.AstNode child2 : child.getChildren()) { if (((((child2.getTokenOriginalValue().equalsIgnoreCase(\"INVOKEINPUT\")) || (child2.getTokenOriginalValue().equalsIgnoreCase(\"INVOKEOUTPUT\"))) || (child2.getTokenOriginalValue().equalsIgnoreCase(\"MAPDELETE\"))) || (child2.getTokenOriginalValue().equalsIgnoreCase(\"MAPCOPY\"))) || (child2.getTokenOriginalValue().equalsIgnoreCase(\"MAPSET\"))) { be.i8c.codequality.sonar.plugins.sag.webmethods.flow.check.EmptyMapCheck.logger.debug(\"++ This is not an empty map ++\"); isEmptyMap = false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4621/buggy-version/sonar-flow-plugin.src.main.java.be.i8c.codequality.sonar.plugins.sag.webmethods.flow.check.EmptyMapCheck.java", "BodyUseAPI": ["com.sonar.sslr.api.AstNode.getChildren()"], "Fixed commit": "4a12f947a2da9832b16bd589830967587205acb9", "Url": "https://api.github.com/repos/I8C/sonar-flow-plugin", "Date": "2017-12-13T19:40:58Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((plotSize.x) <= 0) | ((plotSize.y) <= 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9075/buggy-version/SciDraw.src.main.java.scidraw.drawing.plot.PlotDrawing.java", "BodyUseAPI": [], "Fixed commit": "81da9b6e280f17065cdf56d13b428c1251ff97fc", "Url": "https://api.github.com/repos/nsherry4/Libraries", "Date": "2018-04-13T17:54:39Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (budikpet.cvut.cz.semestralwork.data.config.Config.isCheckWifiEnabled()) { android.widget.CheckBox box = findViewById(R.id.isWifiCheckRequired); box.setChecked(budikpet.cvut.cz.semestralwork.data.config.Config.isCheckWifiEnabled()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6265/buggy-version/app.src.main.java.budikpet.cvut.cz.semestralwork.screens.preferences.ActivityPreferences.java", "BodyUseAPI": [], "Fixed commit": "b27d4657fcaa3693f37cebc8769e880d88a19661", "Url": "https://api.github.com/repos/TheDarkOne11/AndroidSemestralWork", "Date": "2018-05-09T13:44:24Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (stmt != null) { stmt.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8047/buggy-version/microbat.src.main.microbat.sql.DbService.java", "BodyUseAPI": ["java.sql.Statement.close()"], "Fixed commit": "ae2d2fa729bee4f0b21d551d58c11aec9e84f966", "Url": "https://api.github.com/repos/llmhyy/microbat", "Date": "2018-01-10T02:09:32Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<ch.tbz.wup.Items.ItemContainer>.get(int)", "java.util.ArrayList<ch.tbz.wup.Items.Item>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(containerToPutInto.items.doesFit(itemToPut))) { return new ch.tbz.wup.Commands.CommandResponse(\"That won't fit.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6832/buggy-version/src.ch.tbz.wup.Commands.CommandPut.java", "BodyUseAPI": [], "Fixed commit": "4e985495135fd87bac690a357ad2c8525cf50826", "Url": "https://api.github.com/repos/Finrod-Amandil/Zork", "Date": "2018-04-12T09:12:45Z"},
{"Line": "=>637", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mShareFragment) != null) { mShareFragment = null; mFragmentTags.remove(getString(R.string.tag_fragment_share)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2673/buggy-version/app.src.main.java.com.example.rrty6.vcardapp.ui.Activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9219234fca9c37ce01731e0507f2d212f4c1a748", "Url": "https://api.github.com/repos/GracefulLeo/BindUpMobileApp", "Date": "2018-06-04T10:57:11Z"},
{"Line": "=>846", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentSpecialEvent[currentPlayer]) != (SpecialEvent.round4)) nextArea[currentPlayer] = Area.rollDices;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2031/buggy-version/src.games.gsClever.Logic.MainLogic.java", "BodyUseAPI": [], "Fixed commit": "b46d56cb5f6e96a66fc7a10f61375f2245a0c2fb", "Url": "https://api.github.com/repos/nicoonator/gsclever", "Date": "2018-07-14T21:44:23Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.android.justjava.MainActivity.findViewById(R.id.name_get)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (name.getText().toString().isEmpty()) { orderedTextView.setText(\"Please enter a proper name!\"); }else if ((numOfCoffees) > 0) { orderedTextView.setText(\"Order has been submitted! Thank you!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4679/buggy-version/app.src.main.java.com.example.android.justjava.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "33430e2d73b34a6fc1083f14cd6eebdbfd159ca3", "Url": "https://api.github.com/repos/ConnieJChi/PlaceOrderApp", "Date": "2018-06-10T18:05:14Z"},
{"Line": "=>688", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((turnLaneLayout.getVisibility()) == (GONE)) { turnLaneAdapter.addTurnLanes(turnLanes, maneuverViewModifier); showTurnLanes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8178/buggy-version/libandroid-navigation-ui.src.main.java.com.mapbox.services.android.navigation.ui.v5.instruction.InstructionView.java", "BodyUseAPI": [], "Fixed commit": "75421eb12b4848c17b5e90e80eb2212321e52ec6", "Url": "https://api.github.com/repos/mapbox/mapbox-navigation-android", "Date": "2018-03-05T21:23:03Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mapView) != null) { mapView.onPause(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7507/buggy-version/wiglewifiwardriving.src.main.java.net.wigle.wigleandroid.DBResultActivity.java", "BodyUseAPI": [], "Fixed commit": "b8b31e475334e333c36bcbb9e86da8f9e07e9a7e", "Url": "https://api.github.com/repos/rksh/wigle-wifi-wardriving", "Date": "2018-08-16T17:29:08Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opennars.control.GeneralInferenceControl.fireConcept(org.opennars.control.DerivationContext,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (putBackConcept) { float forgetCycles = nal.memory.cycles(nal.memory.param.conceptForgetDurations); nal.currentConcept.setQuality(org.opennars.inference.BudgetFunctions.or(nal.currentConcept.getQuality(), nal.memory.emotion.happy())); nal.memory.concepts.putBack(nal.currentConcept, forgetCycles, nal.memory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7387/buggy-version/src.main.java.org.opennars.control.GeneralInferenceControl.java", "BodyUseAPI": [], "Fixed commit": "6a6ec92b43b9d98f317f5cd5cf74bcbfa2235b52", "Url": "https://api.github.com/repos/opennars/opennars", "Date": "2018-05-04T14:06:19Z"},
{"Line": "=>851", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.ignite.internal.visor.compute.VisorGatewayTask.class.getName().equals(name)) name = ((java.lang.String) (taskReq.params().get(org.apache.ignite.internal.processors.rest.GridRestProcessor.WRAPPED_TASK_IDX)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9423/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.processors.rest.GridRestProcessor.java", "BodyUseAPI": [], "Fixed commit": "ac8b5f97acdd785779f6bbb6310ae82b68d9c28e", "Url": "https://api.github.com/repos/gridgain/apache-ignite", "Date": "2018-05-28T11:19:41Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(callSuperOnViewCreated)) { throw new java.lang.IllegalStateException(\"you should call super when override `onViewCreated`\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1585/buggy-version/navigation.src.main.java.me.listenzz.navigation.AwesomeFragment.java", "BodyUseAPI": [], "Fixed commit": "bca91ee965454db0a544fba3f5454d1aee938e98", "Url": "https://api.github.com/repos/listenzz/AndroidNavigation", "Date": "2018-06-05T08:06:00Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (prefValue == 0) { editor.putInt(\"tune\", R.raw.down_stream); editor.apply(); android.util.Log.e(\"inside if\", \"default song set\"); }else { editor.putInt(\"tune\", prefValue); editor.apply(); android.util.Log.e(\"inside else\", \"preferences song set\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9440/buggy-version/app.src.main.java.com.example.gerin.alarm.MainActivity.java", "BodyUseAPI": ["SharedPreferences.Editor.putInt(java.lang.String,int)"], "Fixed commit": "97168ddbc75964b0aadd721e18777763a7130033", "Url": "https://api.github.com/repos/gerin98/Alarm", "Date": "2018-06-18T15:52:10Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(validatorClass.EmptyRadioButton(this, binding.nh312g, binding.nh312g1, getString(R.string.nh312g)))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6203/buggy-version/app.src.main.java.edu.aku.hassannaqvi.nns_2018.ui.SectionA4Activity.java", "BodyUseAPI": [], "Fixed commit": "749eda149cbd417b3fc48f365659458909ef52fb", "Url": "https://api.github.com/repos/shznaqvi/nns_2018", "Date": "2018-03-31T14:02:38Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(ga.uuid.app.TinyDownloader.start)) pending -= 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9506/buggy-version/TinyDownloader.java", "BodyUseAPI": [], "Fixed commit": "3ed7c1a406c01be7c894337523e7b254cc1733d9", "Url": "https://api.github.com/repos/abedormancy/tinydownloader", "Date": "2018-08-16T12:47:50Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((index.getParent().getMetaDataKey()) != (org.executequery.databaseobjects.NamedObject.META_TYPES[org.executequery.databaseobjects.NamedObject.SYSTEM_INDEX])) { org.executequery.databaseobjects.impl.DefaultDatabaseMetaTag metaTag = new org.executequery.databaseobjects.impl.DefaultDatabaseMetaTag(index.getHost(), null, null, org.executequery.databaseobjects.NamedObject.META_TYPES[org.executequery.databaseobjects.NamedObject.INDEX]); currentObjectView = metaTag.getIndexFromName(index.getName()); index = ((org.executequery.databaseobjects.impl.DefaultDatabaseIndex) (currentObjectView)); }else { currentObjectView = index; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8100/buggy-version/src.org.executequery.gui.browser.BrowserIndexPanel.java", "BodyUseAPI": ["org.executequery.databaseobjects.impl.DefaultDatabaseIndex.getName()", "org.executequery.databaseobjects.impl.DefaultDatabaseIndex.getHost()", "org.executequery.databaseobjects.impl.DefaultDatabaseMetaTag.getIndexFromName(index.getName())"], "Fixed commit": "7416f03c11bc9eb05af933f0972581e9701e9e18", "Url": "https://api.github.com/repos/red-soft-ru/redexpert", "Date": "2018-01-15T07:57:23Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<javafx.util.Pair<java.util.UUID, java.lang.Object[]>>.remove(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (p != null) { com.mygdx.game.states.Entity e = getEntity(p.getKey()); if ((e != null) && (entities.contains(e))) { e.getBody().setTransform(((com.badlogic.gdx.math.Vector2) (p.getValue()[0])), ((java.lang.Float) (p.getValue()[3]))); e.getBody().setLinearVelocity(((com.badlogic.gdx.math.Vector2) (p.getValue()[1]))); e.getBody().setAngularVelocity(((java.lang.Float) (p.getValue()[2]))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/468/buggy-version/core.src.com.mygdx.game.states.PlayState.java", "BodyUseAPI": ["javafx.util.Pair<java.util.UUID, java.lang.Object[]>.getKey()", "javafx.util.Pair<java.util.UUID, java.lang.Object[]>.getValue()", "javafx.util.Pair<java.util.UUID, java.lang.Object[]>.getValue()", "com.mygdx.game.states.PlayState.getEntity(p.getKey())", "javafx.util.Pair<java.util.UUID, java.lang.Object[]>.getValue()", "e.getBody().setLinearVelocity(((com.badlogic.gdx.math.Vector2) (p.getValue()[1])))", "javafx.util.Pair<java.util.UUID, java.lang.Object[]>.getValue()", "e.getBody().setTransform(((com.badlogic.gdx.math.Vector2) (p.getValue()[0])),((java.lang.Float) (p.getValue()[3])))", "e.getBody().setAngularVelocity(((java.lang.Float) (p.getValue()[2])))"], "Fixed commit": "be2f2cbda87d6b1a238dc0616d24f2a536a3712f", "Url": "https://api.github.com/repos/irontissue/COMP460Ideas", "Date": "2018-02-16T03:03:37Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((board.getCell(toX, toY).getAnimal().getOwner()) == (JungleGame.Game.Game.getCurPlayer())) { JungleGame.Game.Command command = new JungleGame.Game.InvalidCommand(); return command.execute(board); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6527/buggy-version/src.JungleGame.Game.EatCommand.java", "BodyUseAPI": ["JungleGame.Game.Command.execute(JungleGame.Game.Board)"], "Fixed commit": "9aa32e809932602985d4525efef1828b2b0ed2a1", "Url": "https://api.github.com/repos/DouglasLiuGamer/PolyU-The-Jungle-Game", "Date": "2018-04-22T06:28:49Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["JungleGame.Game.Board.getCell(JungleGame.Game.RatEatCommand,JungleGame.Game.RatEatCommand)", "JungleGame.Game.Board.getCell(JungleGame.Game.RatEatCommand,JungleGame.Game.RatEatCommand)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(fromCell instanceof JungleGame.Game.RiverCell)) && (toCell instanceof JungleGame.Game.RiverCell)) { JungleGame.Game.Command command = new JungleGame.Game.InvalidCommand(); return command.execute(board); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6527/buggy-version/src.JungleGame.Game.RatEatCommand.java", "BodyUseAPI": [], "Fixed commit": "9aa32e809932602985d4525efef1828b2b0ed2a1", "Url": "https://api.github.com/repos/DouglasLiuGamer/PolyU-The-Jungle-Game", "Date": "2018-04-22T06:28:49Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (listener == null) { android.util.Log.e(\"YouTubePlayer\", \"null YouTubePlayerListener not allowed.\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9047/buggy-version/YouTubePlayer.src.main.java.com.pierfrancescosoffritti.youtubeplayer.player.WebViewYouTubePlayer.java", "BodyUseAPI": [], "Fixed commit": "55867d3ff746cac062efc7c8b834a968425c7e9c", "Url": "https://api.github.com/repos/PierfrancescoSoffritti/android-youtube-player", "Date": "2018-05-28T12:52:55Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.id) == null) || ((that.id) == null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4036/buggy-version/src.main.java.net.ehicks.bts.beans.IssueForm.java", "BodyUseAPI": [], "Fixed commit": "2a81f0191d20bbc3641f03961eb6b7e6e9882caa", "Url": "https://api.github.com/repos/ehicks05/puffin", "Date": "2018-10-01T17:03:05Z"},
{"Line": "=>466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (date != null) { delta = (new java.util.Date().getTime()) - (date.getTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4923/buggy-version/library.src.main.java.com.hankkin.library.utils.DateUtils.java", "BodyUseAPI": ["java.util.Date.getTime()"], "Fixed commit": "dd65b412180f7c170d5fae6e7371ade462c2516c", "Url": "https://api.github.com/repos/Hankkin/Reading", "Date": "2018-09-19T08:41:07Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.hankkin.library.http.cookies.CookiesManager.COOKIE_STORE) != null) com.hankkin.library.http.cookies.CookiesManager.COOKIE_STORE.removeAll();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4923/buggy-version/library.src.main.java.com.hankkin.library.http.cookies.CookiesManager.java", "BodyUseAPI": [], "Fixed commit": "dd65b412180f7c170d5fae6e7371ade462c2516c", "Url": "https://api.github.com/repos/Hankkin/Reading", "Date": "2018-09-19T08:41:07Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bot.BugStage.closestBugPosition(field.Field,field.getMyPosition())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (p1 != null) { if ((field.getShortestDistance(p1, field.getMyPosition())) == 1) { return new move.Move(move.MoveType.LEFT); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5281/buggy-version/src.bot.BugStage.java", "BodyUseAPI": ["field.Field.getShortestDistance(java.awt.Point,field.getMyPosition())"], "Fixed commit": "5212025cf6e3e84a2b0111729497a4d6f5322fd1", "Url": "https://api.github.com/repos/jrodzon/MsHackmanBot", "Date": "2018-02-02T00:06:32Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((entrada == null) || (entrada.isEmpty())) && (tipoDado != (br.univali.portugol.nucleo.asa.TipoDado.CADEIA))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2070/buggy-version/ide.src.main.java.br.univali.ps.ui.abas.AbaConsole.java", "BodyUseAPI": [], "Fixed commit": "24ee0a9ac297055f14d925a24e73bbf51ed19bf9", "Url": "https://api.github.com/repos/UNIVALI-LITE/Portugol-Studio", "Date": "2018-04-13T12:19:20Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(player.isJumping)) { player.isJumping = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6914/buggy-version/app.src.main.java.com.example.michael.doyouknowdeway.GameView.java", "BodyUseAPI": [], "Fixed commit": "6ba10d405873fbd152a29afe8196f89e32ec166d", "Url": "https://api.github.com/repos/MJSPollard/Code24", "Date": "2018-01-28T05:15:13Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.materialapp.ui.ArticleListActivity.Adapter.parsePublishedDate(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(publishedDate.before(startOfEpoch.getTime()))) { holder.subtitleView.setText(android.text.Html.fromHtml(android.text.format.DateUtils.getRelativeTimeSpanString(publishedDate.getTime(), java.lang.System.currentTimeMillis(), DateUtils.HOUR_IN_MILLIS, DateUtils.FORMAT_ABBREV_ALL).toString())); }else { holder.subtitleView.setText(android.text.Html.fromHtml(outputFormat.format(publishedDate))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7729/buggy-version/app.src.main.java.com.example.materialapp.ui.ArticleListActivity.java", "BodyUseAPI": ["android.text.Html.fromHtml(android.text.format.DateUtils.getRelativeTimeSpanString(publishedDate.getTime(), java.lang.System.currentTimeMillis(), DateUtils.HOUR_IN_MILLIS, DateUtils.FORMAT_ABBREV_ALL).toString())", "android.text.format.DateUtils.getRelativeTimeSpanString(publishedDate.getTime(), java.lang.System.currentTimeMillis(), DateUtils.HOUR_IN_MILLIS, DateUtils.FORMAT_ABBREV_ALL).toString()", "android.text.Html.fromHtml(java.lang.String)", "android.widget.TextView.setText(android.text.Html.fromHtml(android.text.format.DateUtils.getRelativeTimeSpanString(publishedDate.getTime(), java.lang.System.currentTimeMillis(), DateUtils.HOUR_IN_MILLIS, DateUtils.FORMAT_ABBREV_ALL).toString()))", "android.text.format.DateUtils.getRelativeTimeSpanString(long,long,DateUtils.HOUR_IN_MILLIS,DateUtils.FORMAT_ABBREV_ALL)", "java.text.SimpleDateFormat.format(java.util.Date)", "java.util.Date.getTime()", "android.widget.TextView.setText(android.text.Html.fromHtml(outputFormat.format(publishedDate)))"], "Fixed commit": "77484c8e5f89c1ae9526724c8c2cc7da05dcbf1f", "Url": "https://api.github.com/repos/Janekxyz/Udacity_MaterialApp", "Date": "2018-06-07T17:13:04Z"},
{"Line": "=>5", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((value > (node1.data)) && (value > (node2.data))) { lowestComAncestor.findLowestCommAncestor(root.leftChild, node1, node2); }else if ((value < (node1.data)) && (value < (node2.data))) { lowestComAncestor.findLowestCommAncestor(root.rightChild, node1, node2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9029/buggy-version/src.lowestComAncestor.java", "BodyUseAPI": ["lowestComAncestor.findLowestCommAncestor(root.leftChild,TreeNode,TreeNode)", "lowestComAncestor.findLowestCommAncestor(root.rightChild,TreeNode,TreeNode)"], "Fixed commit": "de64379b2d64bd197b4af2f20c3dae1b8f5ceea3", "Url": "https://api.github.com/repos/biplabku/Interview-Preparation-Guide", "Date": "2018-01-26T04:02:56Z"},
{"Line": "=>1198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getCurrentItem()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6439/buggy-version/src.me.WitherPunishment.inventories.MainPunish.java", "BodyUseAPI": [], "Fixed commit": "ba997958dff43f443435e8c4212a5f34802ea9cd", "Url": "https://api.github.com/repos/Gabriel8579/WitherPunishment", "Date": "2018-06-13T03:40:54Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (winBoy == (initNode)) { java.lang.System.out.println(\"god shit howdy fuck my lads\"); }else { while ((winBoy.parent) != (initNode)) { java.lang.System.out.println(winBoy.state); winBoy = winBoy.parent; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4453/buggy-version/src.Search.java", "BodyUseAPI": ["java.io.PrintStream.println(winBoy.state)"], "Fixed commit": "728fefbfc05601cb848f80770be6cc276f1d4588", "Url": "https://api.github.com/repos/ValgardurRI/prog2", "Date": "2018-02-18T19:10:35Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(finalScore)) if (topOfInning) setInningHalf(\"T\"); else setInningHalf(\"B\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/880/buggy-version/app.src.main.java.com.example.android.baseballscore.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2c27237a41f4252766adf52ba0b64d0753eb59c0", "Url": "https://api.github.com/repos/sshmm/BaseBallScore", "Date": "2018-06-09T21:48:50Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getOwner()) != null) { setPosition(getOwner().posX, getOwner().getEntityBoundingBox().minY, getOwner().posZ); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1421/buggy-version/src.main.java.com.crowsofwar.avatar.common.entity.EntityShield.java", "BodyUseAPI": [], "Fixed commit": "914eab4682f6e777f9074a455ddd8947a2f50b61", "Url": "https://api.github.com/repos/ProjectKorra/AvatarMod", "Date": "2018-08-07T23:59:15Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Arrays.copyOfRange(java.lang.String[],int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((param.length) > 0) { if (\"-v\".equals(param[0])) { java.lang.System.out.print((\"Version: \" + (burp.BigIpDecrypt.getVersion()))); java.lang.System.exit(0); } }else { throw new java.lang.IllegalArgumentException((\"argment err:\" + (java.lang.String.join(\" \", param)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/3719/buggy-version/src.burp.BigIpDecrypt.java", "BodyUseAPI": ["java.lang.String.join(java.lang.String,java.lang.String[])", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "65f152f83bd0f748740468f0d1b18de50f3d1519", "Url": "https://api.github.com/repos/raise-isayan/BigIPDiscover", "Date": "2018-07-09T13:02:06Z"},
{"Line": "=>458", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mAlgorithmChooser.getCurrentAlgorithm()) instanceof unii.draft.mtg.parings.buisness.algorithm.base.BaseAlgorithm) { unii.draft.mtg.parings.buisness.algorithm.base.BaseAlgorithm baseAlgorithm = ((unii.draft.mtg.parings.buisness.algorithm.base.BaseAlgorithm) (mAlgorithmChooser.getCurrentAlgorithm())); baseAlgorithm.isLoadCachedDraftWasNeeded(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6080/buggy-version/MTGDraftParingApp.draftMTGParings.src.main.java.unii.draft.mtg.parings.ScoreBoardActivity.java", "BodyUseAPI": ["unii.draft.mtg.parings.util.AlgorithmChooser.getCurrentAlgorithm()"], "Fixed commit": "4e63cb9b58bbf1966e935acf329cbb03ec24674c", "Url": "https://api.github.com/repos/apachucy/MTGDraftParingApp", "Date": "2018-01-25T11:28:17Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((\"c\".equals(name)) && ((nextDataType) == (ExcelSaxReader.CELL_DATA_TYPE_ENUM.NULL))) { columnValueMap.put(ref, \"null\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1842/buggy-version/java.excel.sax.ExcelSaxReader.java", "BodyUseAPI": [], "Fixed commit": "b9d74b8ac2f5849e2ff193eb5511f6ac5977bf62", "Url": "https://api.github.com/repos/lizebin0918/utils", "Date": "2018-05-02T10:05:38Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.xml.sax.Attributes.getValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.util.Objects.isNull(cellType)) { nextDataType = ExcelSaxReader.CELL_DATA_TYPE_ENUM.NULL; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1842/buggy-version/java.excel.sax.ExcelSaxReader.java", "BodyUseAPI": [], "Fixed commit": "b9d74b8ac2f5849e2ff193eb5511f6ac5977bf62", "Url": "https://api.github.com/repos/lizebin0918/utils", "Date": "2018-05-02T10:05:38Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (is != null) { if ((is.getAmount()) != 0) { newMatrix[i] = is; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/224/buggy-version/src.main.java.com.github.arowshot.itemexchange.listeners.ItemExchangeListener.java", "BodyUseAPI": ["org.bukkit.inventory.ItemStack.getAmount()"], "Fixed commit": "801a2cbb63c2dd38e2a1a15e57ab23bf4521e2d7", "Url": "https://api.github.com/repos/ArowShot/ItemExchange", "Date": "2018-06-30T00:54:31Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (meta == null) { meta = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4273/buggy-version/raveandroid.src.main.java.com.flutterwave.raveandroid.Payload.java", "BodyUseAPI": [], "Fixed commit": "287b2e6162a2a6e284acf8ccdb2ce1c52ebfc238", "Url": "https://api.github.com/repos/Flutterwave/rave-android", "Date": "2018-02-27T13:10:51Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (meta == null) { meta = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4273/buggy-version/raveandroid.src.main.java.com.flutterwave.raveandroid.Payload.java", "BodyUseAPI": [], "Fixed commit": "287b2e6162a2a6e284acf8ccdb2ce1c52ebfc238", "Url": "https://api.github.com/repos/Flutterwave/rave-android", "Date": "2018-02-27T13:10:51Z"},
{"Line": "=>1253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myobot.bridge.BridgeMain.myo) != null) myobot.bridge.BridgeMain.myo.lock();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1161/buggy-version/MyoBot_Java.src.myobot.bridge.BridgeMain.java", "BodyUseAPI": [], "Fixed commit": "0cbca4e5ffef53e7bea5e7950836bbc502795ef5", "Url": "https://api.github.com/repos/Arctos6135/MyoBot", "Date": "2018-07-12T04:27:44Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportFragmentManager().getBackStackEntryCount()) > 0) { android.support.v4.app.FragmentManager manager = getSupportFragmentManager(); android.support.v4.app.FragmentManager.BackStackEntry first = manager.getBackStackEntryAt(0); manager.popBackStack(first.getId(), FragmentManager.POP_BACK_STACK_INCLUSIVE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7251/buggy-version/app.src.main.java.com.hereticpurge.inventorymanager.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "fcafdf165db22b29fcbccc9f365242b69d47bc8e", "Url": "https://api.github.com/repos/DanH3945/InventoryManager", "Date": "2018-09-18T03:08:12Z"},
{"Line": "=>795", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((tempEntity.eContainer()) != null) && ((tempEntity.eContainer().eContainer()) instanceof de.gebit.integrity.dsl.PackageDefinition)) { tempPackageName = ((de.gebit.integrity.dsl.PackageDefinition) (tempEntity.eContainer().eContainer())).getName(); }else { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8681/buggy-version/de.gebit.integrity.dsl.src.de.gebit.integrity.scoping.DSLScopeProvider.java", "BodyUseAPI": ["tempEntity.eContainer().eContainer()", "((de.gebit.integrity.dsl.PackageDefinition) (tempEntity.eContainer().eContainer())).getName()", "org.eclipse.emf.ecore.EObject.eContainer()"], "Fixed commit": "73ba805f84dfbe6dd534b449587ed67bb767b03a", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2018-01-24T20:14:00Z"},
{"Line": "=>859", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.gebit.integrity.utils.IntegrityDSLUtil.findUpstreamContainer(de.gebit.integrity.dsl.PackageDefinition.class, aStatement).getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(tempImports.contains(tempCurrentPackageName))) { tempImports.add(tempCurrentPackageName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8681/buggy-version/de.gebit.integrity.dsl.src.de.gebit.integrity.scoping.DSLScopeProvider.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "73ba805f84dfbe6dd534b449587ed67bb767b03a", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2018-01-24T20:14:00Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mTodoDateTime.getTimeInMillis()) > (java.util.Calendar.getInstance().getTimeInMillis())) alarmManager.set(AlarmManager.RTC_WAKEUP, mTodoDateTime.getTimeInMillis(), pendingIntent);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7547/buggy-version/app.src.main.java.com.hitanshudhawan.todo.activities.TodoAddActivity.java", "BodyUseAPI": ["java.util.Calendar.getTimeInMillis()", "android.app.AlarmManager.set(AlarmManager.RTC_WAKEUP,long,android.app.PendingIntent)"], "Fixed commit": "8c7a33149ad8f1ea1632cfd1134856c9e57bf8c6", "Url": "https://api.github.com/repos/hitanshu-dhawan/Todo", "Date": "2018-03-08T19:09:43Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mTodoDateTime.getTimeInMillis()) > (java.util.Calendar.getInstance().getTimeInMillis())) alarmManager.set(AlarmManager.RTC_WAKEUP, mTodoDateTime.getTimeInMillis(), pendingIntent);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7547/buggy-version/app.src.main.java.com.hitanshudhawan.todo.activities.TodoDetailsActivity.java", "BodyUseAPI": ["android.app.AlarmManager.set(AlarmManager.RTC_WAKEUP,long,android.app.PendingIntent)", "java.util.Calendar.getTimeInMillis()"], "Fixed commit": "8c7a33149ad8f1ea1632cfd1134856c9e57bf8c6", "Url": "https://api.github.com/repos/hitanshu-dhawan/Todo", "Date": "2018-03-08T19:09:43Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((todoDateTime.getTimeInMillis()) > (java.util.Calendar.getInstance().getTimeInMillis())) alarmManager.set(AlarmManager.RTC_WAKEUP, todoDateTime.getTimeInMillis(), pendingIntent);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7547/buggy-version/app.src.main.java.com.hitanshudhawan.todo.activities.MainActivity.java", "BodyUseAPI": ["android.app.AlarmManager.set(AlarmManager.RTC_WAKEUP,long,android.app.PendingIntent)", "java.util.Calendar.getTimeInMillis()"], "Fixed commit": "8c7a33149ad8f1ea1632cfd1134856c9e57bf8c6", "Url": "https://api.github.com/repos/hitanshu-dhawan/Todo", "Date": "2018-03-08T19:09:43Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getAbsolutePath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((xyz.vopen.microservices.surface.ApplicationRunner.isWindows()) && (classPath.contains(\"\\\\\"))) { classPath = classPath.replaceAll(\"\\\\\\\\\", \"/\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8781/buggy-version/src.main.java.xyz.vopen.microservices.surface.ApplicationRunner.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "e3c1c5648a39e3e9a218ac15264a4743255f325c", "Url": "https://api.github.com/repos/CiNC0/tiffany-surface", "Date": "2018-08-01T08:38:12Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == (com.brownian.trumpscript.tokenizer.token.TokenType.MALFORMED_TOKEN)) { return this.name(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8626/buggy-version/src.main.java.com.brownian.trumpscript.tokenizer.token.TokenType.java", "BodyUseAPI": [], "Fixed commit": "fe01dc0faf0d0201e42c9899b3b670e9382f990c", "Url": "https://api.github.com/repos/paxromana96/TrumpScriptPlusPlus", "Date": "2018-04-13T03:43:33Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state == null) || (state.equals(\"\"))) { msg += \" state\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8558/buggy-version/src.main.java.servlets.StudentServlet.java", "BodyUseAPI": [], "Fixed commit": "e8a7b81abfaf079d42632e9bcb7a01576c0fea3e", "Url": "https://api.github.com/repos/oscarargueta98/POOSistema_NotasAPI", "Date": "2018-08-27T04:01:45Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.entity.player.EntityPlayer.getHeldItem(net.minecraft.util.EnumHand)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((stack.getItemDamage()) == (stack.getMaxDamage())) { return net.minecraft.util.ActionResult.newResult(EnumActionResult.FAIL, stack); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9744/buggy-version/src.main.java.twilightforest.item.ItemTFZombieWand.java", "BodyUseAPI": ["net.minecraft.util.ActionResult.newResult(EnumActionResult.FAIL,net.minecraft.item.ItemStack)"], "Fixed commit": "b35a6cd912e9ab9358cabff79a805483b91475e2", "Url": "https://api.github.com/repos/koh-gh/twilightforest", "Date": "2018-03-29T20:59:33Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user.getMovieCheckedOut()) != null) { return ALREADY_CHECKOUT_ELEMENT_RESPONSE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7910/buggy-version/src.main.java.com.twu.biblioteca.BibliotecaApp.java", "BodyUseAPI": [], "Fixed commit": "81e2d308393c27353cd631f6a823704261c4ebcc", "Url": "https://api.github.com/repos/berth-ita/twu-biblioteca-berta", "Date": "2018-09-18T12:33:19Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user.getBookCheckedOut()) != null) { return ALREADY_CHECKOUT_ELEMENT_RESPONSE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7910/buggy-version/src.main.java.com.twu.biblioteca.BibliotecaApp.java", "BodyUseAPI": [], "Fixed commit": "81e2d308393c27353cd631f6a823704261c4ebcc", "Url": "https://api.github.com/repos/berth-ita/twu-biblioteca-berta", "Date": "2018-09-18T12:33:19Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (request.getParameter(\"home\").isEmpty()) test.createHome(request.getParameter(\"myhome\"), java.lang.Double.parseDouble(request.getParameter(\"surface\")), java.lang.Integer.parseInt(request.getParameter(\"nbpce\")), test.getPerson(java.lang.Long.parseLong(request.getParameter(\"owner\")))); else { dao.HomeDao hd = new dao.HomeDao(); hd.deleteById(java.lang.Long.parseLong(request.getParameter(\"home\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6482/buggy-version/src.main.java.servlets.HomeDetails.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "dao.HomeDao.deleteById(long)", "java.lang.Long.parseLong(request.getParameter(\"owner\"))", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "java.lang.Integer.parseInt(request.getParameter(\"nbpce\"))", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "java.lang.Long.parseLong(request.getParameter(\"home\"))", "jpa.DAO.createHome(request.getParameter(\"myhome\"),double,int,test.getPerson(java.lang.Long.parseLong(request.getParameter(\"owner\"))))", "java.lang.Double.parseDouble(request.getParameter(\"surface\"))", "jpa.DAO.getPerson(long)"], "Fixed commit": "f17d5d3ea37ae0b08a4efccf3f9716842000e50b", "Url": "https://api.github.com/repos/anakkarsara/ConsoElectric", "Date": "2018-02-28T12:21:27Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.maxRecords) == null) this.maxRecords = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/3860/buggy-version/src.main.java.net.acesinc.data.json.generator.log.KinesisLogger.java", "BodyUseAPI": [], "Fixed commit": "fbb32fda797e6312d11493ba0f79c11dc4656eee", "Url": "https://api.github.com/repos/data-tech/json-data-generator", "Date": "2018-07-11T04:03:27Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentToast) != null) { currentToast.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7385/buggy-version/app.src.main.java.com.ezmath.main.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1d4e7e43e6e0d42c7713b96f2f67ef39fd8cfb10", "Url": "https://api.github.com/repos/Victor9704/EZMath", "Date": "2018-05-01T14:09:21Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["notesEditText.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(ed_text.isEmpty())) { notesTextView.setVisibility(View.GONE); otherNotesTextView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7170/buggy-version/app.src.main.java.com.shannoncantech.justjava.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "be7bfba8dea5e3e51f182666d0899da61f46e720", "Url": "https://api.github.com/repos/ShannonCanTech/Android-App-JustJava2", "Date": "2018-07-10T19:52:38Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((head.moveToNextItem()) != null) { head.moveToPrevItem().setNextItem(head.moveToNextItem()); head.moveToNextItem().setPrevItem(head.moveToPrevItem()); java.lang.System.out.println(((\"Item \" + (head.getHeldValue())) + \" removed.\")); head = head.moveToPrevItem(); }else { java.lang.System.out.println(((\"Item \" + (head.getHeldValue())) + \" removed.\")); head = head.moveToPrevItem(); head.setNextItem(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6276/buggy-version/src.com.timbuchalka.myownlist.MyNameLinkedList.java", "BodyUseAPI": ["java.io.PrintStream.println(((\"Item \" + (head.getHeldValue())) + \" removed.\"))", "com.timbuchalka.myownlist.MyListItem.getHeldValue()", "head.moveToNextItem().setPrevItem(head.moveToPrevItem())", "com.timbuchalka.myownlist.MyListItem.moveToPrevItem()", "com.timbuchalka.myownlist.MyListItem.moveToNextItem()", "java.io.PrintStream.println(((\"Item \" + (head.getHeldValue())) + \" removed.\"))", "com.timbuchalka.myownlist.MyListItem.moveToPrevItem()", "com.timbuchalka.myownlist.MyListItem.moveToPrevItem()", "com.timbuchalka.myownlist.MyListItem.moveToPrevItem()", "com.timbuchalka.myownlist.MyListItem.moveToNextItem()", "head.moveToPrevItem().setNextItem(head.moveToNextItem())", "com.timbuchalka.myownlist.MyListItem.getHeldValue()"], "Fixed commit": "0d0db9cd5c92aea72870bcd7b49bbf1ea2a441c5", "Url": "https://api.github.com/repos/piotrgy/udemy-java-revision", "Date": "2018-04-23T11:18:53Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (v.equals(vInQuad)) { java.lang.System.out.println(\"!!!! v = vInQuad\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5594/buggy-version/src.dt.DelaunayTriangulation.java", "BodyUseAPI": [], "Fixed commit": "ad2624e7267b21559f82a241554840ac8b667cdb", "Url": "https://api.github.com/repos/LeeGlendenning/Quadrilateral-Delaunay-Triangulation", "Date": "2018-08-20T02:43:20Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ineedwhite.diancan.dao.domain.UserDo.getUser_coupon()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(userCoupon)) { couponList = new java.util.ArrayList<java.lang.String>(); }else { couponList = new java.util.ArrayList<java.lang.String>(java.util.Arrays.asList(userCoupon.split(\"\\\\|\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7119/buggy-version/diancan-biz.src.main.java.com.ineedwhite.diancan.biz.impl.OrderServiceImpl.java", "BodyUseAPI": ["java.util.Arrays.asList(java.lang.String[])", "java.lang.String.split(java.lang.String)"], "Fixed commit": "050cf2668d1b9ac2e70a3ef49e89d25eceffb0fd", "Url": "https://api.github.com/repos/Ruan-Xin/diancan", "Date": "2018-03-19T12:39:19Z"},
{"Line": "=>599", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ineedwhite.diancan.dao.dao.OrderDao.selectOrderById(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.equals(orderDo.getOrder_status(), OrderStatus.UF.getOrderStatus())) { logger.warn((\"\u8be5\u8ba2\u5355\u5df2\u65e0\u6548\uff0c\u8bf7\u91cd\u65b0\u4e0b\u5355 orderId\uff1a\" + orderId)); com.ineedwhite.diancan.common.utils.BizUtils.setRspMap(resp, ErrorCodeEnum.DC00015); return resp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7119/buggy-version/diancan-biz.src.main.java.com.ineedwhite.diancan.biz.impl.OrderServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "050cf2668d1b9ac2e70a3ef49e89d25eceffb0fd", "Url": "https://api.github.com/repos/Ruan-Xin/diancan", "Date": "2018-03-19T12:39:19Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (collided[5]) collAngle = 67.5; else if (collided[6]) collAngle = 22.5; else if (collided[7]) collAngle = -67.5;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/3658/buggy-version/src.main.Car.java", "BodyUseAPI": [], "Fixed commit": "ee532090ec01481172918991c5799ede40600a75", "Url": "https://api.github.com/repos/StereoBeast/Project0815", "Date": "2018-07-14T07:52:14Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((me.islandscout.hawk.Hawk.getServerVersion()) == 8) nmsPackage = net.minecraft.server.v1_8_R3.MinecraftServer.class.getPackage().getName(); else if ((me.islandscout.hawk.Hawk.getServerVersion()) == 7) nmsPackage = net.minecraft.server.v1_7_R4.MinecraftServer.class.getPackage().getName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/3473/buggy-version/src.me.islandscout.hawk.command.DevArgument.java", "BodyUseAPI": [], "Fixed commit": "ba427287efdd53275e8c8728be66abb8881e9504", "Url": "https://api.github.com/repos/HawkAnticheat/Hawk", "Date": "2018-09-27T02:53:45Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (strings != null) { return strings.stream().map(( string) -> { com.isa.instaticketapi.domain.Authority auth = new com.isa.instaticketapi.domain.Authority(); auth.setName(string); return auth; }).collect(java.util.stream.Collectors.toSet()); }else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2699/buggy-version/src.main.java.com.isa.instaticketapi.service.mapper.UserMapper.java", "BodyUseAPI": ["java.util.stream.Stream<java.lang.Object>.collect(java.util.stream.Collector<java.lang.Object, ?, java.util.Set<java.lang.Object>>)", "java.util.Set<java.lang.String>.stream()", "java.util.stream.Stream<java.lang.String>.map(java.util.function.Function<? super java.lang.String, ? extends java.lang.Object>)"], "Fixed commit": "f456c4910796c39da0659101f0f71c0d3236785d", "Url": "https://api.github.com/repos/sansajn5/ISA-InstaTicketAPI", "Date": "2018-03-16T04:29:23Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userDTO.getCreatedBy()) == null) { user.setCreatedBy(user.getUsername()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2699/buggy-version/src.main.java.com.isa.instaticketapi.service.mapper.UserMapper.java", "BodyUseAPI": [], "Fixed commit": "f456c4910796c39da0659101f0f71c0d3236785d", "Url": "https://api.github.com/repos/sansajn5/ISA-InstaTicketAPI", "Date": "2018-03-16T04:29:23Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (enabled) { leftEvent.set(true); leftTrigger.setTaskEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2540/buggy-version/src.team492.CmdPortalAlign.java", "BodyUseAPI": [], "Fixed commit": "b0d92561efc0a268dd34026a0f5166baf61111a9", "Url": "https://api.github.com/repos/trc492/Frc2018FirstPowerUp", "Date": "2018-02-16T00:54:50Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (enabled) { rightEvent.set(true); rightTrigger.setTaskEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2540/buggy-version/src.team492.CmdPortalAlign.java", "BodyUseAPI": [], "Fixed commit": "b0d92561efc0a268dd34026a0f5166baf61111a9", "Url": "https://api.github.com/repos/trc492/Frc2018FirstPowerUp", "Date": "2018-02-16T00:54:50Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URI.getPort()", "java.net.URI.getScheme()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((scheme.equalsIgnoreCase(\"http\")) && (port == 80)) || ((scheme.equalsIgnoreCase(\"https\")) && (port == 443))) { return uri.getHost(); }else { return ((uri.getHost()) + \":\") + (uri.getPort()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8259/buggy-version/src.main.java.com.google.devtools.build.lib.remote.blobstore.http.AbstractHttpHandler.java", "BodyUseAPI": [], "Fixed commit": "bdeed50d161a65dfd579347e1245d8958d699554", "Url": "https://api.github.com/repos/GregBowyer/bazel", "Date": "2018-03-29T23:59:55Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((idleChannel) == null) { synchronized(this) { if ((idleChannel) == null) { if ((channel.isConnected()) && (!(channel.isClosed()))) { idleChannel = channel; } }else { channel.disconnect(); } } }else { channel.disconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8810/buggy-version/commons-vfs2.src.main.java.org.apache.commons.vfs2.provider.sftp.SftpFileSystem.java", "BodyUseAPI": [], "Fixed commit": "07c39310d707ba09daf1bb4084737bdd7a99b651", "Url": "https://api.github.com/repos/qxo/commons-vfs", "Date": "2018-04-24T05:35:26Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((idleChannel) != null) { synchronized(this) { if ((idleChannel) != null) { channel = idleChannel; idleChannel = null; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8810/buggy-version/commons-vfs2.src.main.java.org.apache.commons.vfs2.provider.sftp.SftpFileSystem.java", "BodyUseAPI": [], "Fixed commit": "07c39310d707ba09daf1bb4084737bdd7a99b651", "Url": "https://api.github.com/repos/qxo/commons-vfs", "Date": "2018-04-24T05:35:26Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (cmd != null) { cmd.setResponse(\"ERROR\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6765/buggy-version/src.main.java.vislab.no.ntnu.denon.driver.DN500AVDevice.java", "BodyUseAPI": ["vislab.no.ntnu.denon.commands.DN500AVCommand.setResponse(java.lang.String)"], "Fixed commit": "a6152ddd14076aaba97750a24ed3e858296bcc0f", "Url": "https://api.github.com/repos/Device-Controller/DenonDN500AV", "Date": "2018-05-15T08:27:28Z"},
{"Line": "=>1050", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (source == (Source.SOURCE_LOCAL_LIB)) viewHolder.checkBox.setEnabled(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/3541/buggy-version/app.src.main.java.v.blade.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d0f2fdd4318844fcd06ba40b8355ea9afd2eb670", "Url": "https://api.github.com/repos/Valou3433/blade-player", "Date": "2018-06-01T08:51:31Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wynprice.secretroomsmod.integration.ctm.SecretCompatCTM.getQuads(net.minecraft.client.renderer.block.model.IBakedModel,net.minecraft.block.state.IBlockState,net.minecraft.util.EnumFacing,long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (secList.isEmpty()) { secList = com.wynprice.secretroomsmod.integration.ctm.SecretCompatCTM.getQuads(renderInfo.renderModel, renderInfo.blockstate, quad.getFace(), rand); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/3390/buggy-version/src.main.java.com.wynprice.secretroomsmod.render.fakemodels.BaseTextureFakeModel.java", "BodyUseAPI": [], "Fixed commit": "49450e0c88b9c00b40c659c1a06bc7eb24cae7c6", "Url": "https://api.github.com/repos/AbrarSyed/SecretRoomsMod-forge", "Date": "2018-03-23T19:56:02Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(generatorTimes.isEmpty())) { new Statistics(name, generatorTimes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7950/buggy-version/Generator.java", "BodyUseAPI": [], "Fixed commit": "367154e22fac3222155d5da8a4dd70d5ab500031", "Url": "https://api.github.com/repos/roseboat/TrafficSimulatorWithThreads", "Date": "2018-03-04T22:48:31Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pos.equalsIgnoreCase(\"G\")) || (pos.equalsIgnoreCase(\"B\"))) { (numGlyphsPlaced)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5759/buggy-version/ftc_app-master.Team4042.src.main.java.org.firstinspires.ftc.team4042.drive.Cryptobox.java", "BodyUseAPI": [], "Fixed commit": "480733e456e9213b4afb97ccd6445100fd2caf31", "Url": "https://api.github.com/repos/ghs-robotics/ftc_app2017", "Date": "2018-03-04T19:35:51Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(notification)) { position = getIntent().getIntExtra(\"position\", 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7904/buggy-version/app.src.main.java.com.example.iori.mobelplayerfun.activity.AudioPlayerActivity.java", "BodyUseAPI": [], "Fixed commit": "6b59f0da454facbdf11aa2e831f465e7b8259efd", "Url": "https://api.github.com/repos/MAMAMASIYUAN/MobelPlayerFun", "Date": "2018-10-17T15:12:37Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(notification)) { service.openAudio(position); }else { showViewData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7904/buggy-version/app.src.main.java.com.example.iori.mobelplayerfun.activity.AudioPlayerActivity.java", "BodyUseAPI": [], "Fixed commit": "6b59f0da454facbdf11aa2e831f465e7b8259efd", "Url": "https://api.github.com/repos/MAMAMASIYUAN/MobelPlayerFun", "Date": "2018-10-17T15:12:37Z"},
{"Line": "=>538", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sufficientlysecure.keychain.util.Preferences.getKeyServers()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (servers.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9885/buggy-version/OpenKeychain.src.main.java.org.sufficientlysecure.keychain.util.Preferences.java", "BodyUseAPI": [], "Fixed commit": "192d87d58f6ca3bd0b9ca4267b57c02035eb5af5", "Url": "https://api.github.com/repos/open-keychain/open-keychain", "Date": "2018-07-18T14:11:42Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (localNode == null) { localNode = io.hekate.cluster.internal.DefaultClusterTopology.NOT_A_NODE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/855/buggy-version/hekate-core.src.main.java.io.hekate.cluster.internal.DefaultClusterTopology.java", "BodyUseAPI": [], "Fixed commit": "b07e62c649c98e4d0b4da1c78feb96e63006cadc", "Url": "https://api.github.com/repos/hekate-io/hekate", "Date": "2018-05-15T15:12:37Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mbusa.arts.dao.LevelsInfoDao.getKpiInformationNAPP(java.util.Map<java.lang.String, java.lang.Object>,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((kpiInfo.getKpiMonth()) != null) { if (kpiInfo.getKpiMonth().trim().equals(\"1\")) { kpiInfo.setNappActKpiMnt(\"12\"); }else { kpiInfo.setNappActKpiMnt(java.lang.String.valueOf(((java.lang.Integer.valueOf(kpiInfo.getKpiMonth().trim())) - 1))); } kpiInfo.setNappActKpiMnt(org.springframework.util.StringUtils.capitalize(java.time.Month.of(java.lang.Integer.valueOf(kpiInfo.getNappActKpiMnt().trim())).name().toLowerCase()).substring(0, 3)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5220/buggy-version/arts.src.main.java.com.mbusa.arts.serviceImpl.LevelsInfoServiceImpl.java", "BodyUseAPI": ["java.lang.String.valueOf(((java.lang.Integer.valueOf(kpiInfo.getKpiMonth().trim())) - 1))", "kpiInfo.getKpiMonth().trim().equals(java.lang.String)", "java.time.Month.name()", "org.springframework.util.StringUtils.capitalize(java.time.Month.of(java.lang.Integer.valueOf(kpiInfo.getNappActKpiMnt().trim())).name().toLowerCase())", "com.mbusa.arts.bean.KpiInfo.setNappActKpiMnt(java.lang.String)", "com.mbusa.arts.bean.KpiInfo.getNappActKpiMnt()", "kpiInfo.getKpiMonth().trim()", "java.lang.Integer.valueOf(kpiInfo.getKpiMonth().trim())", "com.mbusa.arts.bean.KpiInfo.setNappActKpiMnt(org.springframework.util.StringUtils.capitalize(java.time.Month.of(java.lang.Integer.valueOf(kpiInfo.getNappActKpiMnt().trim())).name().toLowerCase()).substring(0, 3))", "java.lang.Integer.valueOf(kpiInfo.getNappActKpiMnt().trim())", "com.mbusa.arts.bean.KpiInfo.setNappActKpiMnt(java.lang.String)", "kpiInfo.getKpiMonth().trim()", "com.mbusa.arts.bean.KpiInfo.getKpiMonth()", "com.mbusa.arts.bean.KpiInfo.getKpiMonth()", "org.springframework.util.StringUtils.capitalize(java.time.Month.of(java.lang.Integer.valueOf(kpiInfo.getNappActKpiMnt().trim())).name().toLowerCase()).substring(int,int)", "java.time.Month.of(java.lang.Integer)", "java.time.Month.of(java.lang.Integer.valueOf(kpiInfo.getNappActKpiMnt().trim())).name().toLowerCase()", "kpiInfo.getNappActKpiMnt().trim()"], "Fixed commit": "28ac51d6a1653b2c39bb38ebf0b4de0349de4803", "Url": "https://api.github.com/repos/arpjain11/ArtsRepository", "Date": "2018-10-29T15:04:29Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((localName.isEmpty()) && (prefixIdx > (-1))) { localName = qname.substring((prefixIdx + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5580/buggy-version/src.org.exist.dom.memtree.MemTreeBuilder.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "66c23d08d8946d55c28138cc8916590916b1ab36", "Url": "https://api.github.com/repos/eXist-db/exist", "Date": "2017-11-29T01:55:54Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getActiveInstance().getPlugin(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (plugin == null) { throw new java.lang.IllegalStateException((\"Cannot find Ruby plugin with id=\" + pluginid)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4694/buggy-version/src.main.java.ruby.RubyPluginRuntimeResolver.java", "BodyUseAPI": [], "Fixed commit": "ec1297279dea59d721a2b8dfcd20c63294e5a88b", "Url": "https://api.github.com/repos/oleg-nenashev/ruby-runtime-plugin", "Date": "2018-04-06T09:00:37Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.HONEYCOMB)) mainIntent = android.support.v4.content.IntentCompat.makeRestartActivityTask(componentName); else mainIntent = android.content.Intent.makeRestartActivityTask(componentName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/123/buggy-version/updater.src.main.java.com.commonsware.cwac.updater.UpdateReceiver.java", "BodyUseAPI": [], "Fixed commit": "41282defd03f89c267e79db8e3152d353c71be4e", "Url": "https://api.github.com/repos/ibogolyubskiy/Updater", "Date": "2018-10-11T21:50:03Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastCircle) != null) { for (int i = 0; i < (FIELDY); i++) { for (int j = 0; j < (FIELDX); j++) { activateCircle(Gdx.input.getX(), Gdx.input.getY(), field[j][i], special); if ((freeFields) == 0) { finishCircle = field[j][i]; checkWin(); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4450/buggy-version/core.src.com.mygdx.game.MyGdxGame.java", "BodyUseAPI": [], "Fixed commit": "72fd419701ea1d9c5ca213cd103a5e7ae8b66203", "Url": "https://api.github.com/repos/Lmeerlu/CircleBuilder", "Date": "2018-05-18T13:06:43Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.simpleName.endsWith(\"/\")) && ((this.simpleName.length()) > 1)) { this.simpleName = this.simpleName.substring(0, ((this.simpleName.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/3842/buggy-version/tools.loader.src.main.java.com.kumuluz.ee.loader.jar.FileInfo.java", "BodyUseAPI": [], "Fixed commit": "a4ac99427b386fb7a9c805025acf5e2f36f510e4", "Url": "https://api.github.com/repos/kumuluz/kumuluzee", "Date": "2018-01-24T15:01:39Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getEntity().getKiller()) != null) { org.bukkit.entity.Player killer = e.getEntity().getKiller(); pvp.getUserManager().getUser(killer).addKS(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/279/buggy-version/src.main.java.codes.matthewp.desertedpvp.event.player.DeathEvent.java", "BodyUseAPI": ["org.bukkit.event.entity.PlayerDeathEvent.getEntity()", "e.getEntity().getKiller()"], "Fixed commit": "ad7e225c87ef923dd4a60e712473b65f929066c9", "Url": "https://api.github.com/repos/DesertedPvPDev/HydrexPvP", "Date": "2018-07-25T00:39:21Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.ViewGroup.findViewById(R.id.welcomeYesButton)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((textView.getVisibility()) != (android.view.View.VISIBLE)) { textView.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9444/buggy-version/app.src.main.java.fr.free.nrw.commons.WelcomePagerAdapter.java", "BodyUseAPI": ["android.widget.TextView.setVisibility(View.VISIBLE)"], "Fixed commit": "d14fe4f3d0d868563b4f8ed4a6a1cd91a5198dad", "Url": "https://api.github.com/repos/tanvidadu/apps-android-commons", "Date": "2018-03-08T06:19:58Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(link.contains(dbs.sql.RatesDatabase.ROBOTS_TXT_APPENDIX))) { links.add(link); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8820/buggy-version/src.main.java.dbs.sql.RatesDatabase.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)"], "Fixed commit": "48f11d62750e937322b56f595a57de26d76759b7", "Url": "https://api.github.com/repos/dushechka/Crawler", "Date": "2018-06-16T06:51:57Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (state == null) { state = valkyrienwarfare.mixin.world.chunk.MixinBlockStateContainer.AIR_BLOCK_STATE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5165/buggy-version/src.main.java.valkyrienwarfare.mixin.world.chunk.MixinBlockStateContainer.java", "BodyUseAPI": [], "Fixed commit": "3c209bddf5cbd3b62257c7e955c1f239a6325c7c", "Url": "https://api.github.com/repos/ValkyrienWarfare/Valkyrien-Warfare-Revamped", "Date": "2018-04-25T13:37:07Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.authenticationService.getLoggedInUser()) != null) { return \"redirect:/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6634/buggy-version/src.main.java.com.fafc.bet4fun.controllers.UserController.java", "BodyUseAPI": [], "Fixed commit": "54170631a9e43b03eb2c1bc0f4dac07fc8dc0214", "Url": "https://api.github.com/repos/linhnm108/bet4fun", "Date": "2018-06-08T02:03:33Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pom.dashboard.service.InterviewerService.queryInterviewerList(com.pmo.dashboard.entity.Interviewer,com.pmo.dashboard.entity.User)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == list) { list = new java.util.ArrayList<com.pmo.dashboard.entity.Interviewer>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9868/buggy-version/src.main.java.com.pmo.dashboard.controller.InterviewerController.java", "BodyUseAPI": [], "Fixed commit": "7e87e8d550bf9085491b0c0d1da4c4005b5d999e", "Url": "https://api.github.com/repos/dapengchina/PMO", "Date": "2018-01-24T08:18:49Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (r == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4886/buggy-version/examples.coffeemaker.src.main.java.edu.pjatk.inn.coffeemaker.impl.Recipe.java", "BodyUseAPI": [], "Fixed commit": "bb137bcb20ee1cb354dc371578729f796aed0915", "Url": "https://api.github.com/repos/mtruszko/SORCER", "Date": "2018-01-26T21:39:01Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((forecastArray.size()) == 2) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2258/buggy-version/src.XMLReader.java", "BodyUseAPI": [], "Fixed commit": "b9270a9f38ff04db34ebd24d7edc766b159c0331", "Url": "https://api.github.com/repos/fbjerko/WeatherForecast", "Date": "2018-09-20T07:01:02Z"},
{"Line": "=>517", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (mStatusBarManager)) { mStatusBarManager.disable(((android.app.StatusBarManager.DISABLE_RECENT) | (android.app.StatusBarManager.DISABLE_HOME))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/119/buggy-version/src.com.android.phone.EmergencyDialer.java", "BodyUseAPI": [], "Fixed commit": "c15a66f30f65b509020d6b7eb30163efef46e6ff", "Url": "https://api.github.com/repos/codeaurora-unofficial/packages-services-Telephony", "Date": "2018-10-09T12:39:29Z"},
{"Line": "=>545", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (mStatusBarManager)) { mStatusBarManager.disable(StatusBarManager.DISABLE_NONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/119/buggy-version/src.com.android.phone.EmergencyDialer.java", "BodyUseAPI": [], "Fixed commit": "c15a66f30f65b509020d6b7eb30163efef46e6ff", "Url": "https://api.github.com/repos/codeaurora-unofficial/packages-services-Telephony", "Date": "2018-10-09T12:39:29Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n < 0) { throw new java.lang.IllegalArgumentException(\"Enter number greater than zero\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/566/buggy-version/01Recursion.Recursion.java", "BodyUseAPI": [], "Fixed commit": "ba6d30a2711b07e67dbdeb7fc8cb9f1e593902df", "Url": "https://api.github.com/repos/ichasen/MKS22X", "Date": "2018-03-19T23:13:19Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, java.util.ArrayList<java.lang.Character>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (x > (c.size())) { x = x % (c.size()); if (x == 0) x = c.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2529/buggy-version/src.org.kai.CodeFightteeNine.java", "BodyUseAPI": ["java.util.List<java.lang.Character>.size()", "java.util.List<java.lang.Character>.size()"], "Fixed commit": "c4c4f04426a5f8343ca9b5814f145520d75abf67", "Url": "https://api.github.com/repos/kaichang201/kaihackerrankjava", "Date": "2018-05-21T05:30:05Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (curr == null) { throw new java.lang.NullPointerException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1743/buggy-version/src.main.java.com.sinjinsong.datastructure.tree.BinarySearchTree.java", "BodyUseAPI": [], "Fixed commit": "5f9019443422e5a520c9577e32ec9a12dfc7329a", "Url": "https://api.github.com/repos/songxinjianqwe/DataStructures", "Date": "2018-08-14T04:54:59Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (scienceLab.isConnected()) { java.lang.Double frequency = scienceLab.getFrequency(knobMarker[knobState], null); saveAndSetData(java.lang.String.valueOf(frequency), getString(R.string.frequency_unit)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1124/buggy-version/app.src.main.java.org.fossasia.pslab.activity.MultimeterActivity.java", "BodyUseAPI": ["org.fossasia.pslab.communication.ScienceLab.getFrequency(java.lang.String,<nulltype>)"], "Fixed commit": "8300be9efc22acf9161649a2ff86ad6aa6863cd9", "Url": "https://api.github.com/repos/fossasia/pslab-android", "Date": "2018-07-14T01:29:06Z"},
{"Line": "=>515", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_gCtx) != null) _gCtx.clearTemporaryMemory();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5432/buggy-version/src.main.java.org.apache.sysml.api.jmlc.PreparedScript.java", "BodyUseAPI": [], "Fixed commit": "27bc5fa15af4ef32de9940ee0472cba9a8930348", "Url": "https://api.github.com/repos/thomas9t/systemml", "Date": "2018-09-19T18:01:40Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((startIdx == 0) || ((pathStr.charAt((startIdx - 1))) == ':')) { foundNonPathSeparator = true; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/728/buggy-version/src.main.java.io.github.lukehutch.fastclasspathscanner.utils.JarUtils.java", "BodyUseAPI": [], "Fixed commit": "6fca9ba6ff7297013f7adbe1de73506ea849613e", "Url": "https://api.github.com/repos/classgraph/classgraph", "Date": "2018-01-25T13:41:34Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getModifiers()) == 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8818/buggy-version/ganttproject.src.net.sourceforge.ganttproject.action.GPAction.java", "BodyUseAPI": [], "Fixed commit": "4f5f4c6f6d47fa667af886975a980fcbd9c47704", "Url": "https://api.github.com/repos/bardsoftware/ganttproject", "Date": "2018-02-10T23:45:05Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (classnames.isEmpty()) { java.lang.System.err.println((((\"Warning: no label generated in \" + (curDoc.getName())) + \" for instance \") + instAnn)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2877/buggy-version/src.main.java.gate.plugin.learningframework.features.SeqEncoder_SimpleBIO.java", "BodyUseAPI": [], "Fixed commit": "c58a41e107f449153ab40d026c8628af127c72d3", "Url": "https://api.github.com/repos/GateNLP/gateplugin-LearningFramework", "Date": "2018-05-31T11:09:21Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(session.isClosing())) { sessions.put(session.getId(), session); session.startReading(); }else { handler.sessionClosed(session); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/3090/buggy-version/sshd-core.src.main.java.org.apache.sshd.common.io.nio2.Nio2Acceptor.java", "BodyUseAPI": ["org.apache.sshd.common.io.IoHandler.sessionClosed(org.apache.sshd.common.io.nio2.Nio2Session)", "org.apache.sshd.common.io.nio2.Nio2Session.startReading()", "org.apache.sshd.common.io.nio2.Nio2Acceptor.AcceptCompletionHandler.put(session.getId(),org.apache.sshd.common.io.nio2.Nio2Session)", "org.apache.sshd.common.io.nio2.Nio2Session.getId()"], "Fixed commit": "d8f205731f45bd42ec01e56ef300c38441dc34db", "Url": "https://api.github.com/repos/lifangning/mina-sshd", "Date": "2018-01-11T01:43:50Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasResult)) { postInvalidateDelayed(com.library.zxing.client.android.view.ViewfinderView.ANIMATION_DELAY, frame.left, frame.top, frame.right, frame.bottom); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4188/buggy-version/zxing.src.main.java.com.library.zxing.client.android.view.ViewfinderView.java", "BodyUseAPI": [], "Fixed commit": "dc858ce484d7f19960f047066b26d4f2ea435c7f", "Url": "https://api.github.com/repos/panlijun/Scan", "Date": "2018-01-25T03:05:32Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((res.length()) < 8) { return res.toLowerCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7488/buggy-version/src.StringUtils.java", "BodyUseAPI": ["java.lang.String.toLowerCase()"], "Fixed commit": "d203f1e017dbba21d7bdd9372e3e3403cfa1af65", "Url": "https://api.github.com/repos/Purdue-CS193/lab-3-hughbromund", "Date": "2018-09-27T17:08:42Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(binaryExprInst.dst().varEquals(dst))) append(\"mov\", binaryExprInst.dst(), dst);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5847/buggy-version/MWCompiler.src.mwcompiler.backend.CodeGenerator.java", "BodyUseAPI": ["mwcompiler.ir.nodes.assign.BinaryExprInst.dst()", "mwcompiler.backend.CodeGenerator.append(java.lang.String,binaryExprInst.dst(),mwcompiler.backend.Operand)"], "Fixed commit": "eef20badb8ac6c725f983981ff9ee14ddbb36c01", "Url": "https://api.github.com/repos/Michaelvll/MWCompiler", "Date": "2018-06-02T16:02:17Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ngs.stash.externalhooks.hook.ExternalMergeCheckHook.runExternalHooks(java.lang.ProcessBuilder,java.util.List<com.ngs.stash.externalhooks.hook.RefChange>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (result.isRejected()) { detailMsg = result.getVetoes().get(0).getDetailedMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6929/buggy-version/src.main.java.com.ngs.stash.externalhooks.hook.ExternalMergeCheckHook.java", "BodyUseAPI": ["result.getVetoes().get(int)", "com.ngs.stash.externalhooks.hook.RepositoryHookResult.getVetoes()", "result.getVetoes().get(0).getDetailedMessage()"], "Fixed commit": "1f8103d9d1be45be96cbe6623cbfb6bd355d7498", "Url": "https://api.github.com/repos/reconquest/atlassian-external-hooks", "Date": "2018-10-31T15:19:09Z"},
{"Line": "=>669", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(originalPathPrefix.equals(movedPathPrefix))) { gr.uom.java.xmi.diff.MovedClassToAnotherSourceFolder refactoring = new gr.uom.java.xmi.diff.MovedClassToAnotherSourceFolder(originalName, originalPath, movedPath); gr.uom.java.xmi.diff.RenamePattern renamePattern = refactoring.getRenamePattern(); boolean foundInMatchingMoveSourceFolderRefactoring = false; for (gr.uom.java.xmi.diff.MoveSourceFolderRefactoring moveSourceFolderRefactoring : moveSourceFolderRefactorings) { if (moveSourceFolderRefactoring.getPattern().equals(renamePattern)) { moveSourceFolderRefactoring.addMovedClassToAnotherSourceFolder(refactoring); foundInMatchingMoveSourceFolderRefactoring = true; break; } } if (!foundInMatchingMoveSourceFolderRefactoring) { moveSourceFolderRefactorings.add(new gr.uom.java.xmi.diff.MoveSourceFolderRefactoring(refactoring)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8879/buggy-version/src.gr.uom.java.xmi.diff.UMLModelDiff.java", "BodyUseAPI": [], "Fixed commit": "7c8e87e17984b68275ed3848167e51b1ec6ab584", "Url": "https://api.github.com/repos/tsantalis/RefactoringMiner", "Date": "2018-02-18T13:57:14Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((strings.length) > 1) { readLobbyData(strings[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7001/buggy-version/core.src.com.panic.tdt4240.states.GameListState.java", "BodyUseAPI": ["com.panic.tdt4240.states.GameListState.GameListAdapter.readLobbyData(java.lang.String)"], "Fixed commit": "3a1cb7e95c822eeb8c60ee67fc7c44d1455583fe", "Url": "https://api.github.com/repos/EirikOsnes/panic", "Date": "2018-04-17T07:57:27Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!skip) { codeAttributeEditor.insertBeforeInstruction(offset, logInstruction(0, proguard.inject.FlowTraceWriter.LOG_INFO_ENTER, proguard.inject.FlowTraceWriter.LOG_FLAG_INNER_LOG, thisClassNameRef, thisMetodNameRef, callClassNameRef, callMetodNameRef, 0, calledLineNumber)); codeAttributeEditor.insertAfterInstruction(offset, logInstruction(0, proguard.inject.FlowTraceWriter.LOG_INFO_EXIT, proguard.inject.FlowTraceWriter.LOG_FLAG_INNER_LOG, thisClassNameRef, thisMetodNameRef, callClassNameRef, callMetodNameRef, 0, calledLineNumber)); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8690/buggy-version/flowtraceinjector.src.main.java.proguard.inject.FlowTraceInjector.java", "BodyUseAPI": [], "Fixed commit": "a2346c35e7590b30ef1d388c7e8af959c26a1af7", "Url": "https://api.github.com/repos/simonyanmikayel/FlowTraceAndroid", "Date": "2018-10-01T17:08:01Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, com.feeyo.redis.engine.manage.stat.BigKeyCollector.BigKey>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (oldBK == null) { oldBK = newBK; bkHashMap.put(key, oldBK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6261/buggy-version/src.main.java.com.feeyo.redis.engine.manage.stat.BigKeyCollector.java", "BodyUseAPI": [], "Fixed commit": "79d95ad4ebb9f82145c681955e5af09e0e7ec2ab", "Url": "https://api.github.com/repos/Block2/feeyo-redisproxy", "Date": "2018-06-11T06:53:22Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (schemaCache.containsKey(schemaString)) { schema = schemaCache.get(schemaString); }else { schema = parser.parse(schemaString); schemaCache.put(schemaString, schema); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1642/buggy-version/src.main.java.com.citic.sink.canal.KafkaSink.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.apache.avro.Schema>.put(java.lang.String,org.apache.avro.Schema)", "Schema.Parser.parse(java.lang.String)", "java.util.Map<java.lang.String, org.apache.avro.Schema>.get(java.lang.String)"], "Fixed commit": "dfe324dfe1aa849b67ac748606e97ea17c47eb43", "Url": "https://api.github.com/repos/blacklovebear/flume-canal-source", "Date": "2018-04-17T11:05:24Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bank.transferMoney(account2, account1, 350.0)) { java.lang.System.out.println(\"SUCCESS!\"); java.lang.System.out.println((((account1.getOwnerName()) + \" has \") + (account1.getAccountBalance()))); java.lang.System.out.println(((((account2.getOwnerName()) + \" has \") + (account2.getAccountBalance())) + \"\\n\")); }else { java.lang.System.out.println(\"Transfer failure\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4546/buggy-version/src.main.java.Bank.java", "BodyUseAPI": ["BankAccount.getAccountBalance()", "BankAccount.getAccountBalance()", "java.io.PrintStream.println((((account1.getOwnerName()) + \" has \") + (account1.getAccountBalance())))", "BankAccount.getOwnerName()", "java.io.PrintStream.println(((((account2.getOwnerName()) + \" has \") + (account2.getAccountBalance())) + \"\\n\"))", "BankAccount.getOwnerName()"], "Fixed commit": "af707ad8e5eec50c46d3b79c7d551a3b40bb0266", "Url": "https://api.github.com/repos/Scc33/Lab5", "Date": "2018-10-02T15:37:50Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.customerPath.size()) == 1) { screenController.activate(this.customerPath.get(((customerPath.size()) - 1))); }else { screenController.activate(this.customerPath.get(((customerPath.size()) - 2))); this.customerPath.remove(((customerPath.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2102/buggy-version/src.matbutik.IMatNavigationHandler.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)", "matbutik.ScreenController.activate(java.lang.String)", "matbutik.ScreenController.activate(java.lang.String)", "java.util.List<java.lang.String>.remove(int)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "30e088ab9442c65d735d0c680977e0f8baa488db", "Url": "https://api.github.com/repos/Illnoid/iMat", "Date": "2018-05-18T10:13:44Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getRhs().getExprType()) instanceof Code.AST.Type.ArrayType) { if (!((node.getLhs().getExprType()) instanceof Code.AST.Type.ArrayType)) errorHandler.addError(node.getPosition(), \"type mismatch\"); }else if ((node.getLhs().getExprType().getTypeName()) != (node.getRhs().getExprType().getTypeName())) errorHandler.addError(node.getPosition(), (((\"cannot cast from \" + (node.getLhs().getExprType().getTypeName().toString())) + \" to \") + (node.getRhs().getExprType().getTypeName().toString())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2538/buggy-version/src.Code.SemanticCheck.SemanticChecker.java", "BodyUseAPI": ["Code.SemanticCheck.AssignExprNode.getLhs()", "Code.SemanticCheck.AssignExprNode.getLhs()", "Code.SemanticCheck.AssignExprNode.getRhs()", "Code.SemanticCheck.AssignExprNode.getLhs()", "Code.SemanticCheck.AssignExprNode.getRhs()", "node.getLhs().getExprType()", "node.getLhs().getExprType().getTypeName().toString()", "Code.SemanticCheck.AssignExprNode.getPosition()", "Code.SemanticCheck.AssignExprNode.getPosition()", "node.getRhs().getExprType().getTypeName().toString()", "Code.SemanticCheck.ErrorHandler.addError(node.getPosition(),java.lang.String)", "node.getRhs().getExprType().getTypeName()", "node.getLhs().getExprType()", "Code.SemanticCheck.ErrorHandler.addError(node.getPosition(),(((\"cannot cast from \" + (node.getLhs().getExprType().getTypeName().toString())) + \" to \") + (node.getRhs().getExprType().getTypeName().toString())))", "node.getRhs().getExprType()", "node.getRhs().getExprType()", "node.getLhs().getExprType().getTypeName()", "node.getLhs().getExprType()", "node.getRhs().getExprType().getTypeName()", "node.getLhs().getExprType().getTypeName()"], "Fixed commit": "ad1ae2a340496d695be225dbb3f3965d60a42e68", "Url": "https://api.github.com/repos/TianBoyu/Mlang_Compiler", "Date": "2018-05-03T01:29:08Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eamApiService.selectTicket(ete).get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((eamTicket.getImagePath()) != null) { for (java.lang.String uuid : com.google.common.base.Splitter.on(',').trimResults().omitEmptyStrings().split(eamTicket.getImagePath())) { imageList.add((((fileUploaderService.getServerInfo().getEndpoint_show()) + \"/\") + uuid)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9584/buggy-version/kuyun-eam.kuyun-eam-admin.src.main.java.com.kuyun.eam.admin.controller.manager.EamTicketBaseController.java", "BodyUseAPI": ["com.kuyun.eam.vo.EamTicketVO.getImagePath()", "com.google.common.base.Splitter.on(',').trimResults().omitEmptyStrings().split(eamTicket.getImagePath())"], "Fixed commit": "51d41fb2e2605db60bc5ffdedb29cac8d80bb2ab", "Url": "https://api.github.com/repos/bobshi2005/kuyun", "Date": "2018-01-11T03:07:39Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((httpMethods) != null) && (!(httpMethods.contains(method)))) { return java.util.Optional.empty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7689/buggy-version/router.src.main.java.io.micronaut.web.router.DefaultFilterRoute.java", "BodyUseAPI": [], "Fixed commit": "67c57fb9caeabd8fee57221fc01ce8a183180c38", "Url": "https://api.github.com/repos/goeh/micronaut-core", "Date": "2018-09-19T03:41:38Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (BluetoothProfile.BB_VIDEO_CHANNEL_SELECT_CHARACTERISTIC.equals(characteristic.getUuid())) { int channel = ((int) ((value[0]) & 255)); l((\"Write video track characteristic: \" + channel)); mBBService.setVideoMode(channel); if (responseNeeded) { mBluetoothGattServer.sendResponse(device, requestId, BluetoothGatt.GATT_SUCCESS, 0, null); } }else if (BluetoothProfile.BB_AUDIO_VOLUME_CHARACTERISTIC.equals(characteristic.getUuid())) { int volume = ((int) ((value[0]) & 255)); l((\"Write audio volume characteristic: \" + volume)); mBBService.setRadioVolumePercent(volume); if (responseNeeded) { mBluetoothGattServer.sendResponse(device, requestId, BluetoothGatt.GATT_SUCCESS, 0, null); } }else if (BluetoothProfile.BB_AUDIO_INFO_CHARACTERISTIC.equals(characteristic.getUuid())) { int audioinfoselect = ((int) ((value[0]) & 255)); mAudioInfoSelect.put(device, audioinfoselect); l((((\"Write audio info characteristic: \" + (mAudioInfoSelect)) + \" needs reply: \") + responseNeeded)); if (responseNeeded) { mBluetoothGattServer.sendResponse(device, requestId, BluetoothGatt.GATT_SUCCESS, 0, null); } }else if (BluetoothProfile.BB_VIDEO_INFO_CHARACTERISTIC.equals(characteristic.getUuid())) { int videoinfoselect = ((int) ((value[0]) & 255)); mVideoInfoSelect.put(device, videoinfoselect); l((((\"Write video info characteristic: \" + (mVideoInfoSelect)) + \" needs reply: \") + responseNeeded)); if (responseNeeded) { mBluetoothGattServer.sendResponse(device, requestId, BluetoothGatt.GATT_SUCCESS, 0, null); } }else { l((\"Invalid Characteristic Write: \" + (characteristic.getUuid()))); mBluetoothGattServer.sendResponse(device, requestId, BluetoothGatt.GATT_FAILURE, 0, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/3243/buggy-version/bb.src.main.java.com.richardmcdougall.bb.BluetoothLEServer.java", "BodyUseAPI": ["BluetoothProfile.BB_VIDEO_INFO_CHARACTERISTIC.equals(characteristic.getUuid())", "com.richardmcdougall.bb.BluetoothLEServer.3.l((\"Invalid Characteristic Write: \" + (characteristic.getUuid())))", "android.bluetooth.BluetoothGattCharacteristic.getUuid()", "BluetoothProfile.BB_AUDIO_VOLUME_CHARACTERISTIC.equals(characteristic.getUuid())", "BluetoothProfile.BB_AUDIO_INFO_CHARACTERISTIC.equals(characteristic.getUuid())", "android.bluetooth.BluetoothGattCharacteristic.getUuid()", "android.bluetooth.BluetoothGattCharacteristic.getUuid()", "android.bluetooth.BluetoothGattCharacteristic.getUuid()"], "Fixed commit": "6e974366abeb3d6ee5e7476597a0f6fda9b374df", "Url": "https://api.github.com/repos/rjmcdougall/BB", "Date": "2018-04-01T12:25:17Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.DAO.SQLConnection.rs.isClosed()) || (com.DAO.SQLConnection.rs.wasNull())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9435/buggy-version/src.main.java.com.DAO.SQLConnection.java", "BodyUseAPI": [], "Fixed commit": "93ebb6e3a9bbac486eace774ec4fbcb99646037a", "Url": "https://api.github.com/repos/Yarad/DeadPool", "Date": "2018-04-09T09:40:41Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends java.lang.Class>.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (url == null) url = java.lang.Thread.currentThread().getContextClassLoader().getResource(org.ehcache.integrations.shiro.EhcacheShiroManager.stripPrefix(cacheManagerConfigFile));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1679/buggy-version/src.main.java.org.ehcache.integrations.shiro.EhcacheShiroManager.java", "BodyUseAPI": [], "Fixed commit": "ca771e4d0e19763e9a753ebf384911142f5aaa30", "Url": "https://api.github.com/repos/583479389/ehcache-shiro", "Date": "2018-05-31T15:37:43Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((speechRecognizer) != null) { speechRecognizer.stopListening(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/907/buggy-version/ecommerce.src.main.java.com.algolia.instantsearch.examples.ecommerce.VoiceDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "644c1472ebedbcb24da81123d19789191bd84a27", "Url": "https://api.github.com/repos/algolia/instantsearch-android-examples", "Date": "2018-05-31T09:50:20Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(isOpen(row, col))) { sites[site(row, col)] = true; (openSitesNum)++; unionWithOpenAdjacentSites(row, col); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9446/buggy-version/percolation.Percolation.java", "BodyUseAPI": ["Percolation.unionWithOpenAdjacentSites(int,int)", "Percolation.site(int,int)"], "Fixed commit": "20b27528ce3de8bcaf9345c9e9656b3683baa4b9", "Url": "https://api.github.com/repos/grzegorz-swirski/algorithms", "Date": "2018-08-10T15:36:10Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.util.GetterUtil.getBoolean(typeSettingsProperties.get(\"orSearch\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (orSearch) { for (long assetCategoryId : assetCategoryIds) { if (cpRuleAssetCategoryIds.contains(assetCategoryId)) { return true; } } }else { if (cpRuleAssetCategoryIds.containsAll(assetCategoryIds)) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/10/buggy-version/commerce-product-service.src.main.java.com.liferay.commerce.product.internal.catalog.rule.AssetCategoryCPRuleTypeImpl.java", "BodyUseAPI": [], "Fixed commit": "edc33cfe695b4092651f033ad50b8d2aae87eb4a", "Url": "https://api.github.com/repos/michaelhashimoto/com-liferay-commerce", "Date": "2018-09-27T16:05:25Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.provider.DocumentsContract.getDocumentId(android.net.Uri)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(id))) { if (id.startsWith(\"raw:\")) { return id.replaceFirst(\"raw:\", \"\"); } try { android.net.Uri contentUri = android.content.ContentUris.withAppendedId(android.net.Uri.parse(\"content://downloads/public_downloads\"), java.lang.Long.valueOf(id)); return com.seafile.seadroid2.util.UriFilePath.getDataColumn(context, contentUri, null, null); } catch (java.lang.NumberFormatException e) { return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9693/buggy-version/app.src.main.java.com.seafile.seadroid2.util.UriFilePath.java", "BodyUseAPI": ["java.lang.String.replaceFirst(java.lang.String,java.lang.String)", "android.content.ContentUris.withAppendedId(android.net.Uri.parse(\"content://downloads/public_downloads\"),java.lang.Long)", "java.lang.Long.valueOf(java.lang.String)", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "55ac6a91586daf81141641a27841228105a55ecf", "Url": "https://api.github.com/repos/haiwen/seadroid", "Date": "2018-05-25T08:10:03Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (debug) { PrintUtils.print(module, content, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7061/buggy-version/src.main.groovy.FileUtils.java", "BodyUseAPI": [], "Fixed commit": "77b53c150e15a4f2a49f49fd1139f0dff4fb8467", "Url": "https://api.github.com/repos/StringCare/GradlePlugin", "Date": "2018-02-03T15:05:11Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((factory.getScoping()) == (Scoping.DIRECT)) { depth = this.depth; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9013/buggy-version/magnet.src.main.java.magnet.MagnetScope.java", "BodyUseAPI": [], "Fixed commit": "7cd463ba627de7299cbecbf11b5600589e881690", "Url": "https://api.github.com/repos/beworker/magnet", "Date": "2018-05-10T17:54:18Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jsonObject.has(\"StudentName\")) { rfidModel.setStudentName(jsonObject.optString(\"StudentName\")); }else if (jsonObject.has(\"message\")) { rfidModel.setStudentName(jsonObject.optString(\"message\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8970/buggy-version/app.src.main.java.com.itraxhelper.parser.RFIDParser.java", "BodyUseAPI": ["org.json.JSONObject.optString(java.lang.String)", "com.itraxhelper.models.RFIDModel.setStudentName(jsonObject.optString(\"StudentName\"))", "org.json.JSONObject.optString(java.lang.String)", "com.itraxhelper.models.RFIDModel.setStudentName(jsonObject.optString(\"message\"))", "org.json.JSONObject.has(java.lang.String)"], "Fixed commit": "c971a2bbb9545048c6227e1e8e375910cee4fec4", "Url": "https://api.github.com/repos/sixscorpions/ItraxHelper", "Date": "2018-01-24T07:09:00Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((debugmodeRepository.getAll().size()) == 0) { com.finaxys.slackbot.DAL.DebugMode dm = new com.finaxys.slackbot.DAL.DebugMode(); this.save(dm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2331/buggy-version/src.main.java.com.finaxys.slackbot.services.DebugModeServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "a41279ec98b554729050b07b1784bd29960b23b7", "Url": "https://api.github.com/repos/Finaxys/Academy", "Date": "2018-05-29T08:52:35Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMode) < 2) { canvas.drawPath(mSrc, mPaint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9349/buggy-version/animatedrawable.src.main.java.com.example.drawable.anim.RoundRectAnimDrawable.java", "BodyUseAPI": [], "Fixed commit": "fb4545e0cd55113cecb8ec4458b36f48e7703ab2", "Url": "https://api.github.com/repos/threekilogram/AnimateDrawable", "Date": "2018-07-23T04:53:56Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mDashboardBaseModel.getCommon().getStatusCode().equals(DMSConstants.SUCCESS))) { com.scorg.dms.util.CommonMethods.showToast(mContext, mDashboardBaseModel.getCommon().getStatusMessage()); }else if (DMSConstants.RESPONSE_OK.equalsIgnoreCase(mDashboardBaseModel.getCommon().getSuccess())) { mDashboardDataModel = mDashboardBaseModel.getDashboardDataModel(); if ((mDashboardDataModel) != null) { pendingApprovalCount.setText(mDashboardDataModel.getPendingApprovedCount()); totalPatientsCount.setText(mDashboardDataModel.getTotalPatientCount()); todayAppointmentsCount.setText(mDashboardDataModel.getAppointmentCount()); waitingPatientCount.setText(mDashboardDataModel.getWaitingCount()); com.scorg.dms.preference.DMSPreferencesManager.putInt(DMSPreferencesManager.DMS_PREFERENCES_KEY.ARCHIVE_API_COUNT, mDashboardDataModel.getViewArchivedApiTakeCount(), mContext); android.support.v7.widget.LinearLayoutManager linearlayoutManager = new android.support.v7.widget.LinearLayoutManager(mContext, android.support.v7.widget.LinearLayoutManager.VERTICAL, false); recyclerView.setLayoutManager(linearlayoutManager); mDashBoardAppointmentListAdapter = new com.scorg.dms.adapters.dms_adapters.DashboardAppointmentListAdapter(mContext, mDashboardDataModel.getAppointmentPatientDataList(), this); recyclerView.setAdapter(mDashBoardAppointmentListAdapter); if ((mDashboardDataModel.getAppointmentPatientDataList().size()) <= 0) emptyListView.setVisibility(View.VISIBLE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6895/buggy-version/app.src.main.java.com.scorg.dms.ui.activities.HomePageActivity.java", "BodyUseAPI": ["com.scorg.dms.util.CommonMethods.showToast(android.content.Context,mDashboardBaseModel.getCommon().getStatusMessage())", "mDashboardBaseModel.getCommon().getSuccess()", "com.scorg.dms.model.dashboard.DashboardBaseModel.getCommon()", "DMSConstants.RESPONSE_OK.equalsIgnoreCase(mDashboardBaseModel.getCommon().getSuccess())", "com.scorg.dms.model.dashboard.DashboardBaseModel.getCommon()", "mDashboardBaseModel.getCommon().getStatusMessage()", "com.scorg.dms.model.dashboard.DashboardBaseModel.getDashboardDataModel()"], "Fixed commit": "f820a1632cccb4576963b25a3d4d49b44b89b7c8", "Url": "https://api.github.com/repos/sandeepbahalkar123/DMS_EMRD_repo", "Date": "2018-09-18T07:53:01Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!existe) { if (editTextSenha.getText().toString().equals(editTextCoSenha.getText().toString())) { realizarLogin(); }else { android.widget.Toast.makeText(this, \"A senha n\u00e3o bate com a senha de confirma\u00e7\u00e3o\", Toast.LENGTH_SHORT).show(); } }else if ((LoginActivity.usuarios.size()) == 0) { realizarLogin(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5028/buggy-version/ProjetoEventos.app.src.main.java.com.example.vinic.projetoeventos.app.CadastroActivity.java", "BodyUseAPI": [], "Fixed commit": "54d4d773fed42c643645c107299c89644645a5e5", "Url": "https://api.github.com/repos/vikvik98/ProjetoEventos", "Date": "2018-07-16T00:11:20Z"},
{"Line": "=>523", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jsonScanner2.hasNextLine()) { jsonFile2 += jsonScanner2.nextLine(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1598/buggy-version/src.sample.MainLoggedInController.java", "BodyUseAPI": ["java.util.Scanner.nextLine()"], "Fixed commit": "7bfd3b2e6d847c03e244330fd306935a0aac38f8", "Url": "https://api.github.com/repos/jonathan-entwistle98/noteApp1", "Date": "2018-01-29T16:42:59Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sale.getAccount()) != null) { sale.setAccount(accountConverter.convert(source.getAccount())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/3303/buggy-version/src.main.java.com.example.demo.converters.saleConverters.SaleBindingModelToSale.java", "BodyUseAPI": ["com.example.demo.entities.Sale.setAccount(accountConverter.convert(source.getAccount()))"], "Fixed commit": "5b0935c9639bd1c12a9df85afcf701fe509aebbb", "Url": "https://api.github.com/repos/Ivan-Mitkov/Project-CRM", "Date": "2018-04-08T15:02:44Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (sfx != null) { sfx.playSfx(); sfx = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1250/buggy-version/src.gameclient.SoundFx.java", "BodyUseAPI": ["gameclient.Audio.playSfx()"], "Fixed commit": "b03b1ca82e8acb57838e46c11656274caa6c9b8f", "Url": "https://api.github.com/repos/TedAhlberg/AutoMataria", "Date": "2018-05-03T12:58:47Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userCount.get()) == (eleks.mentorship.bigbang.websocket.Room.MAX_CONNECTIONS)) { gameStarted = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/3584/buggy-version/src.main.java.eleks.mentorship.bigbang.websocket.Room.java", "BodyUseAPI": [], "Fixed commit": "61534328abc5055236e1d91acede32b7d6ef87f5", "Url": "https://api.github.com/repos/Nidum/big_bang", "Date": "2018-09-23T11:02:36Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(word.isEmpty())) { out.add(new sugonedu.hadoop.Pair(word, \"1\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5791/buggy-version/simplemr.src.main.java.sugonedu.hadoop.example.WordCountMapper.java", "BodyUseAPI": ["java.util.ArrayList<sugonedu.hadoop.Pair>.add(sugonedu.hadoop.Pair)"], "Fixed commit": "d98262efe4fb75182f2385d6fb5a211f9872614a", "Url": "https://api.github.com/repos/sugonedu-moyi/hadoop-edu", "Date": "2018-09-27T13:47:08Z"},
{"Line": "=>976", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((drawerSecond) != null) { drawerSecond.getDrawerLayout().setDrawerLockMode(DrawerLayout.LOCK_MODE_LOCKED_CLOSED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7059/buggy-version/app.src.main.java.com.waymaps.fragment.GMapFragment.java", "BodyUseAPI": [], "Fixed commit": "e83f8ee71b83fd24a902e9a0360b679b5f045b3c", "Url": "https://api.github.com/repos/stashes/WayMaps", "Date": "2018-05-09T15:57:15Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == o) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/402/buggy-version/kcbq-connector.src.main.java.com.wepay.kafka.connect.bigquery.utils.PartitionedTableId.java", "BodyUseAPI": [], "Fixed commit": "34c661249e5f177b779788651710a18a6fe938de", "Url": "https://api.github.com/repos/revinate/kafka-connect-bigquery", "Date": "2018-08-23T20:43:20Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((o == null) || ((getClass()) != (o.getClass()))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/402/buggy-version/kcbq-connector.src.main.java.com.wepay.kafka.connect.bigquery.utils.PartitionedTableId.java", "BodyUseAPI": [], "Fixed commit": "34c661249e5f177b779788651710a18a6fe938de", "Url": "https://api.github.com/repos/revinate/kafka-connect-bigquery", "Date": "2018-08-23T20:43:20Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (handler == null) { java.lang.System.out.println(handler); java.lang.System.out.println(handler.id()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1933/buggy-version/src.main.java.com.crowsofwar.avatar.common.network.DataTransmitters.java", "BodyUseAPI": ["java.io.PrintStream.println(handler.id())", "java.io.PrintStream.println(com.crowsofwar.avatar.common.network.TickHandler)", "com.crowsofwar.avatar.common.network.TickHandler.id()"], "Fixed commit": "96bc2d2f77676b825f8b3083f5ffab91f2a33a05", "Url": "https://api.github.com/repos/ProjectKorra/AvatarMod", "Date": "2018-09-25T22:59:37Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (handler != null) { buf.writeInt(handler.id()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1933/buggy-version/src.main.java.com.crowsofwar.avatar.common.network.DataTransmitters.java", "BodyUseAPI": ["io.netty.buffer.ByteBuf.writeInt(handler.id())", "com.crowsofwar.avatar.common.network.TickHandler.id()"], "Fixed commit": "96bc2d2f77676b825f8b3083f5ffab91f2a33a05", "Url": "https://api.github.com/repos/ProjectKorra/AvatarMod", "Date": "2018-09-25T22:59:37Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["LivingEvent.LivingUpdateEvent.getEntityLiving()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((entity instanceof com.crowsofwar.avatar.common.entity.mob.EntityBender) || (entity instanceof net.minecraft.entity.player.EntityPlayer)) { com.crowsofwar.avatar.common.data.Bender b = com.crowsofwar.avatar.common.data.Bender.get(entity); if (b != null) { com.crowsofwar.avatar.common.data.BendingData data = b.getData(); if (data != null) { if (data.hasBendingId(Firebending.ID)) { if (((entity.ticksExisted) % 400) == 0) { entity.addPotionEffect(new net.minecraft.potion.PotionEffect(net.minecraft.init.MobEffects.FIRE_RESISTANCE, 400)); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/1933/buggy-version/src.main.java.com.crowsofwar.avatar.common.bending.fire.FirePassiveHandler.java", "BodyUseAPI": ["com.crowsofwar.avatar.common.data.Bender.get(net.minecraft.entity.EntityLivingBase)", "net.minecraft.entity.EntityLivingBase.addPotionEffect(net.minecraft.potion.PotionEffect)"], "Fixed commit": "96bc2d2f77676b825f8b3083f5ffab91f2a33a05", "Url": "https://api.github.com/repos/ProjectKorra/AvatarMod", "Date": "2018-09-25T22:59:37Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBLESupported) != (beaconTransmitter.SUPPORTED)) { callbackContext.error(\"BLE_NOT_SUPPORTED\"); return true; }else { java.lang.Integer num = args.getInt(0); java.lang.Long secret = java.lang.Long.parseLong((\"\" + num)); java.lang.String major = args.getString(1); java.lang.String minor = args.getString(2); start(callbackContext, secret, major, minor); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8416/buggy-version/src.android.BLETransmitter.java", "BodyUseAPI": [], "Fixed commit": "7ede87fda76a4fb77034af140da79efe62f8c9c8", "Url": "https://api.github.com/repos/NarDd/cordova-plugin-altbeacon", "Date": "2018-03-18T06:52:42Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gr.kalymnos.sk3m3l10.greekpodcasts.utils.LocalDatabaseUtils.queryEpisode(android.app.Activity,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((cursor != null) && ((cursor.getCount()) == (gr.kalymnos.sk3m3l10.greekpodcasts.mvc_controllers.activities.episode_play.EpisodePlayActivity.DatabaseOperations.ONE_EPISODE))) { cursor.moveToFirst(); int uriColumnIndex = cursor.getColumnIndex(UserMetadataContract.EpisodeEntry.COLUMN_NAME_DOWNLOADED_URI); java.lang.String episodeUri = cursor.getString(uriColumnIndex); if (!(android.text.TextUtils.isEmpty(episodeUri))) { return true; } return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/9497/buggy-version/app.src.main.java.gr.kalymnos.sk3m3l10.greekpodcasts.mvc_controllers.activities.episode_play.EpisodePlayActivity.java", "BodyUseAPI": ["android.database.Cursor.moveToFirst()", "android.database.Cursor.getString(int)", "android.database.Cursor.getColumnIndex(UserMetadataContract.EpisodeEntry.COLUMN_NAME_DOWNLOADED_URI)"], "Fixed commit": "d8046af717008be49ba68451cb2ebee6b0eaafa4", "Url": "https://api.github.com/repos/tomasmichael995/GreekPodcasts_2", "Date": "2018-06-28T19:24:34Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (grade > 4) { grade = 4; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2683/buggy-version/src.lessons.Lesson.java", "BodyUseAPI": [], "Fixed commit": "9826bad8049fda822f83bb82d889ab1cac87892f", "Url": "https://api.github.com/repos/lmweav/CE301_Project", "Date": "2018-02-21T17:30:47Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.getFileName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (fileName == null) { throw new org.apache.maven.plugin.MojoExecutionException((\"Failed to retrieve filename for asset - \" + assetPath)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4692/buggy-version/src.main.java.com.ragedunicorn.tools.maven.service.AssetService.java", "BodyUseAPI": [], "Fixed commit": "d2571dfc8adf255319acce8603895d3d53571666", "Url": "https://api.github.com/repos/RagedUnicorn/github-release-maven-plugin", "Date": "2018-09-01T15:55:23Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.StringTokenizer.nextToken()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(otherUser.equals(name))) { lobby.snakeBikes.updateOpponent(java.lang.Integer.parseInt(st.nextToken()), java.lang.Integer.parseInt(st.nextToken())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/8038/buggy-version/src.main.Client.java", "BodyUseAPI": [], "Fixed commit": "97de2d333472820fbb79ce8e09dd7523301470e5", "Url": "https://api.github.com/repos/Cutout1/Multiplayer-Final-Project", "Date": "2018-05-17T15:50:33Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((configuration.isDisableSubtitles()) || ((params.sid) == null)) { transcodeOptions.add(\"-sn\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/287/buggy-version/src.main.java.net.pms.encoders.FFMpegVideo.java", "BodyUseAPI": [], "Fixed commit": "e827cb929f2e668883e05819c21c3d454bf0788f", "Url": "https://api.github.com/repos/DigitalMediaServer/DigitalMediaServer", "Date": "2018-05-16T18:04:18Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.upgrad.ImageHoster.service.UserService.getByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (userExists != null) { java.lang.String error = \"username has been registered\"; model.addAttribute(\"error\", error); return \"users/signup\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5112/buggy-version/src.main.java.com.upgrad.ImageHoster.controller.UserController.java", "BodyUseAPI": [], "Fixed commit": "3437909f044b940b1fbacc7403f410aea30ee471", "Url": "https://api.github.com/repos/er-anup/Course4_Assignment", "Date": "2018-06-10T11:25:49Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (ret != null) return ret.trim();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/3733/buggy-version/src.main.java.com.apu.olxcrawler.parser.OlxAnAdwertParser.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "a4a2adcde481b6912af464cc4a40cee39570174a", "Url": "https://api.github.com/repos/anikeec/OlxCrawler", "Date": "2018-02-28T12:54:31Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(Models.TileGenerator.sampleBag.contains(new Models.Tile(letter, points)))) { Models.TileGenerator.sampleBag.add(new Models.Tile(letter, points)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6172/buggy-version/Engine.src.main.java.Models.TileGenerator.java", "BodyUseAPI": ["java.util.ArrayList<Models.Tile>.add(Models.Tile)"], "Fixed commit": "accc1cd899dd949653e8c45b0ceec2c56eac1786", "Url": "https://api.github.com/repos/William-Cook/Blue-Team", "Date": "2018-04-09T18:06:44Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((entity.getRoomUser().getCurrentItem()) != null) && ((entity.getRoomUser().getCurrentItem().getId()) == (frontItem.getId()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5878/buggy-version/Kepler-Server.src.main.java.org.alexdev.kepler.game.item.roller.EntityRollingAnalysis.java", "BodyUseAPI": [], "Fixed commit": "5159562b4c0fbccc01c771835ad4f816e87e27fa", "Url": "https://api.github.com/repos/emansom/Kepler", "Date": "2018-07-20T11:06:10Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((typeToken2) != null) { return typeToken2.getType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/2878/buggy-version/lib.src.main.java.ir.atitec.signalgo.util.GoResponseHandler.java", "BodyUseAPI": [], "Fixed commit": "c3675421dae517bbd88676777a1f9b20fedaf1eb", "Url": "https://api.github.com/repos/hamedgramzi/signalGoClient", "Date": "2018-09-21T07:32:37Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCameraAvailable()) mCamera.enableShutterSound(enable);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6963/buggy-version/cameraview.src.main.java.com.otaliastudios.cameraview.Camera1.java", "BodyUseAPI": [], "Fixed commit": "196fa05108323054138211aae2df0d72c4624cf2", "Url": "https://api.github.com/repos/gen1nya/CameraView", "Date": "2018-02-16T04:30:10Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size()) == 0) { min.add(m); }else if ((m.compareTo(getMedian())) > 0) { max.add(m); }else { min.add(m); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7362/buggy-version/13Median.RunningMedian.java", "BodyUseAPI": [], "Fixed commit": "fe624c8b777c4503392427f8dae8c1e6ef5e0d78", "Url": "https://api.github.com/repos/aimran1/MKS22X", "Date": "2018-05-01T19:31:44Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.bluemobi.dylan.http.Chain.request()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((original.body()) != null) { mMessage.append(cn.bluemobi.dylan.http.RetrofitManager.convertFileSize(responseNew.body().contentLength())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5929/buggy-version/http.src.main.java.cn.bluemobi.dylan.http.RetrofitManager.java", "BodyUseAPI": [], "Fixed commit": "d8d271f777f3770b0165d9ad1c4bed092359b11f", "Url": "https://api.github.com/repos/linglongxin24/AndroidFastDevFrame", "Date": "2018-09-08T03:52:58Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.get(MultipartBody.Part)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (requestBody != null) { return cn.bluemobi.dylan.http.RetrofitManager.convertFileSize(requestBody.contentLength()); }else { return \"0b\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5929/buggy-version/http.src.main.java.cn.bluemobi.dylan.http.RetrofitManager.java", "BodyUseAPI": ["cn.bluemobi.dylan.http.RetrofitManager.convertFileSize(requestBody.contentLength())", "okhttp3.RequestBody.contentLength()"], "Fixed commit": "d8d271f777f3770b0165d9ad1c4bed092359b11f", "Url": "https://api.github.com/repos/linglongxin24/AndroidFastDevFrame", "Date": "2018-09-08T03:52:58Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.bluemobi.dylan.http.Chain.request()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((original.body()) != null) { mMessage.append(cn.bluemobi.dylan.http.RetrofitManager.convertFileSize(original.body().contentLength())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5929/buggy-version/http.src.main.java.cn.bluemobi.dylan.http.RetrofitManager.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "cn.bluemobi.dylan.http.RetrofitManager.convertFileSize(original.body().contentLength())", "okhttp3.Request.body()", "original.body().contentLength()"], "Fixed commit": "d8d271f777f3770b0165d9ad1c4bed092359b11f", "Url": "https://api.github.com/repos/linglongxin24/AndroidFastDevFrame", "Date": "2018-09-08T03:52:58Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((requestCode == (com.owncloud.android.ui.activity.UploadFilesActivity.REQUEST_SCANNED_DOCUMENT_CROP)) && (resultCode == (RESULT_OK))) { android.os.Bundle croppedDocumentData = capturedData.getExtras(); java.lang.String croppedDocumentImagePath = ((java.lang.String) (croppedDocumentData.get(com.owncloud.android.ui.activity.UploadFilesActivity.CROPPED_SCANNED_DOCUMENT_IMAGE_PATH))); new com.owncloud.android.ui.activity.UploadFilesActivity.CheckAvailableSpaceTask(croppedDocumentImagePath).execute(); }else if (((requestCode == (com.owncloud.android.ui.activity.UploadFilesActivity.REQUEST_IMAGE_CAPTURE)) || (requestCode == (com.owncloud.android.ui.activity.UploadFilesActivity.REQUEST_DOCUMENT_SCAN))) && (resultCode == (RESULT_CANCELED))) { if ((image) != null) { image.delete(); com.owncloud.android.lib.common.utils.Log_OC.d(com.owncloud.android.ui.activity.UploadFilesActivity.TAG, \"File deleted\"); } setResult(com.owncloud.android.ui.activity.RESULT_CANCELED); finish(); }else if (resultCode == (RESULT_CANCELED)) { setResult(com.owncloud.android.ui.activity.RESULT_CANCELED); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/386/buggy-version/src.com.owncloud.android.ui.activity.UploadFilesActivity.java", "BodyUseAPI": [], "Fixed commit": "bde77744f0f5d84a0f42996e187dc772323a48ce", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-03-14T05:32:11Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, org.apache.kafka.clients.FetchSessionHandler>.get(fetchTarget.id())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (handler != null) { handler.handleError(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7779/buggy-version/clients.src.main.java.org.apache.kafka.clients.consumer.internals.Fetcher.java", "BodyUseAPI": ["org.apache.kafka.clients.FetchSessionHandler.handleError(java.lang.RuntimeException)"], "Fixed commit": "26eaff556f64fa2d8b3d6a1f2690f910a3dc74d4", "Url": "https://api.github.com/repos/cmccabe/kafka", "Date": "2018-01-31T20:04:51Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (script.equals(\"return window.name\")) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/3618/buggy-version/marathon-javafx.marathon-javafx-agent.src.main.java.net.sourceforge.marathon.javafxagent.script.JSONScriptRunner.java", "BodyUseAPI": [], "Fixed commit": "77221b8573f04a6982a23b8ef2b863aff114f0fe", "Url": "https://api.github.com/repos/onlyem91/marathonv5", "Date": "2018-06-28T07:04:25Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((neueArbeitszeit == 8.2) || (neueArbeitszeit == 4.1)) { de.ergodirekt.azr.controller.AktuellerEintrag.setArbeitszeit(((int) ((neueArbeitszeit * 60) + 1))); }else { de.ergodirekt.azr.controller.AktuellerEintrag.setArbeitszeit(((int) (neueArbeitszeit * 60))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/7167/buggy-version/src.de.ergodirekt.azr.controller.BasisrechnerController.java", "BodyUseAPI": ["de.ergodirekt.azr.controller.AktuellerEintrag.setArbeitszeit(double)", "de.ergodirekt.azr.controller.AktuellerEintrag.setArbeitszeit(double)"], "Fixed commit": "8a4f5bfea5e0bf8c1a5d23e099c9b2da2e076890", "Url": "https://api.github.com/repos/DanielMerkl/Arbeitszeitrechner-Material-Design", "Date": "2018-07-11T07:17:26Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cmpe282.UrlMap.getoURL()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(oURL.startsWith(\"https\"))) && (!(oURL.startsWith(\"http\")))) { oURL = \"http://\" + oURL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/4280/buggy-version/src.main.java.cmpe282.WebController.java", "BodyUseAPI": [], "Fixed commit": "d49ffda1fc41cd7071532470b97234ed071f1950", "Url": "https://api.github.com/repos/vjsamuel/UrlShortnerCMPE282", "Date": "2018-04-25T08:58:30Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((cdStart.after(t.getStartDate())) && (cdStart.before(t.getEndDate()))) { java.lang.System.out.println(((\"[DEBUG] Sprint: overlapping Sprints detected, \" + \"start-date conflict with: \") + (t.toString()))); javax.swing.JOptionPane.showMessageDialog(null, (\"Error, start-date overlaps with sprint: \" + (t.toString()))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5453/buggy-version/src.main.java.memoranda.ui.TaskDialog.java", "BodyUseAPI": ["java.io.PrintStream.println(((\"[DEBUG] Sprint: overlapping Sprints detected, \" + \"start-date conflict with: \") + (t.toString())))", "main.java.memoranda.Task.toString()", "javax.swing.JOptionPane.showMessageDialog(<nulltype>,(\"Error, start-date overlaps with sprint: \" + (t.toString())))", "main.java.memoranda.Task.toString()"], "Fixed commit": "d786c2df9cfdddbfe49d528eb745a39cce7df0b8", "Url": "https://api.github.com/repos/ser316asu-2018/Ahrensburg", "Date": "2018-04-08T17:49:37Z"},
{"Line": "=>449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (cdEnd.equals(t.getEndDate())) { java.lang.System.out.println(((\"[DEBUG] Sprint: overlapping Sprints detected, \" + \"end-date is the same as the one in sprint: \") + (t.toString()))); javax.swing.JOptionPane.showMessageDialog(null, (\"Error, end-date is the same as the one in sprint: \" + (t.toString()))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5453/buggy-version/src.main.java.memoranda.ui.TaskDialog.java", "BodyUseAPI": ["javax.swing.JOptionPane.showMessageDialog(<nulltype>,(\"Error, end-date is the same as the one in sprint: \" + (t.toString())))", "main.java.memoranda.Task.toString()", "main.java.memoranda.Task.toString()", "java.io.PrintStream.println(((\"[DEBUG] Sprint: overlapping Sprints detected, \" + \"end-date is the same as the one in sprint: \") + (t.toString())))"], "Fixed commit": "d786c2df9cfdddbfe49d528eb745a39cce7df0b8", "Url": "https://api.github.com/repos/ser316asu-2018/Ahrensburg", "Date": "2018-04-08T17:49:37Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (cdStart.equals(t.getStartDate())) { java.lang.System.out.println(((\"[DEBUG] Sprint: overlapping Sprints detected, \" + \"start-date is the same as the one in sprint: \") + (t.toString()))); javax.swing.JOptionPane.showMessageDialog(null, (\"Error, start-date is the same as the one in sprint: \" + (t.toString()))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/5453/buggy-version/src.main.java.memoranda.ui.TaskDialog.java", "BodyUseAPI": ["main.java.memoranda.Task.toString()", "main.java.memoranda.Task.toString()", "java.io.PrintStream.println(((\"[DEBUG] Sprint: overlapping Sprints detected, \" + \"start-date is the same as the one in sprint: \") + (t.toString())))", "javax.swing.JOptionPane.showMessageDialog(<nulltype>,(\"Error, start-date is the same as the one in sprint: \" + (t.toString())))"], "Fixed commit": "d786c2df9cfdddbfe49d528eb745a39cce7df0b8", "Url": "https://api.github.com/repos/ser316asu-2018/Ahrensburg", "Date": "2018-04-08T17:49:37Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tvCurrent.getText().toString().contains(\"Oooopsie\")) tvCurrent.setText(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6397/buggy-version/app.src.main.java.com.example.kosmos.calc.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "a6559dc420dfb253216617f3cc4b6477713067e0", "Url": "https://api.github.com/repos/Diack13/calculator", "Date": "2018-04-25T05:41:58Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((commentsVector.get(i).toString().length()) == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V151/6772/buggy-version/src.main.java.seedu.address.logic.comments.Comments.java", "BodyUseAPI": [], "Fixed commit": "b08367e33ea85e619ac1173edb7e54cf9de6da1f", "Url": "https://api.github.com/repos/Geraldcdx/addressbook-level4", "Date": "2018-10-23T12:03:16Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(htsjdk.variant.vcf.VCFHeaderVersion.isVersionString(lineFields[1]))) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7559/buggy-version/src.main.java.htsjdk.variant.vcf.VCFHeaderVersion.java", "BodyUseAPI": [], "Fixed commit": "705441d916fdf7e955a4ec90d6c9595011d4dc5c", "Url": "https://api.github.com/repos/dariober/htsjdk", "Date": "2018-05-12T19:08:38Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((contentStr.trim().length()) == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7419/buggy-version/java-tools.OsmAndMapCreatorUtilities.src.main.java.net.osmand.wiki.WikipediaByCountryDivider.java", "BodyUseAPI": [], "Fixed commit": "b75f081bf7a872e611e6218c6018be9c0d293bbf", "Url": "https://api.github.com/repos/osmandapp/OsmAnd-tools", "Date": "2018-07-12T22:05:35Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((identifier.getAppid()) != null) { values[(i + 2)].setData(net.handle.hdllib.Util.encodeString(identifier.getAppid())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5911/buggy-version/src.au.edu.apsr.pids.to.Handle.java", "BodyUseAPI": ["au.edu.apsr.pids.to.Identifier.getAppid()", "net.handle.hdllib.Util.encodeString(identifier.getAppid())", "values[(i + 2)].setData(net.handle.hdllib.Util.encodeString(identifier.getAppid()))"], "Fixed commit": "629fe414f61a1e7d53f9544807a5af5b3a1863e2", "Url": "https://api.github.com/repos/au-research/ANDS-PIDS-Service", "Date": "2018-05-02T02:31:46Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((panelsPrev) != null) { copy.panelsPrev = new java.util.ArrayList(panelsPrev); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1646/buggy-version/CutletLib.src.main.java.com.cutlet.lib.optimizer.SAOptimizationStrategy.java", "BodyUseAPI": [], "Fixed commit": "8a588cc08b83fecc34d92191cf82fcae4ff5c40c", "Url": "https://api.github.com/repos/mru00/cutlet", "Date": "2018-10-13T21:53:56Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mExitInLayoutAnimator) != null) && (!(mExitInLayoutAnimator.isRunning()))) { if ((mMenuLayout.getVisibility()) == (android.view.View.VISIBLE)) { mExitInLayoutAnimator.start(); mExitAnimator.start(); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3092/buggy-version/app.src.main.java.icbc.com.musiccut.activity.MainActivity.java", "BodyUseAPI": ["android.animation.ObjectAnimator.start()"], "Fixed commit": "1241bb80cbca049960d4b69f7749a179dee0e3ae", "Url": "https://api.github.com/repos/RedWolfChao/MusicCut", "Date": "2018-10-17T07:33:07Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.talend.core.model.process.ProcessUtils.isTestContainer(process)) { org.talend.core.model.process.IProcess basePrcess = org.talend.core.model.process.ProcessUtils.getTestContainerBaseProcess(process); jobName = basePrcess.getName(); jobVersion = basePrcess.getVersion(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/852/buggy-version/main.plugins.org.talend.designer.runprocess.src.main.java.org.talend.designer.runprocess.maven.MavenJavaProcessor.java", "BodyUseAPI": ["org.talend.core.model.process.ProcessUtils.getTestContainerBaseProcess(org.talend.designer.runprocess.maven.MavenJavaProcessor)"], "Fixed commit": "f71e7924288f1d6f34a34c381ce130179883e538", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2018-02-01T11:06:12Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.zl.lqian.client.abstracts.AbstractMessageTransponder.logger.isDebugEnabled()) { com.zl.lqian.client.abstracts.AbstractMessageTransponder.logger.debug(\"{}: \u786e\u8ba4\u6d88\u606f\u5df2\u88ab\u6d88\u8d39\uff0c\u6d88\u606fID:{}\", threadName, batchId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4104/buggy-version/LQian-springboot-canal.LQian-canal-core.src.main.java.com.zl.lqian.client.abstracts.AbstractMessageTransponder.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,java.lang.String,long)"], "Fixed commit": "edead4289239cece593925afbbf85e77936c4d56", "Url": "https://api.github.com/repos/SaberSola/LQian", "Date": "2018-09-10T03:32:28Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.devis.style4.SettingFragment.voiceOpened)) { setting_voice.setText(\"\u58f0\u97f3\uff1a \u5173\"); }else { setting_voice.setText(\"\u58f0\u97f3\uff1a \u5f00\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9598/buggy-version/style4.app.src.main.java.com.devis.style4.SettingFragment.java", "BodyUseAPI": [], "Fixed commit": "dc3fea00e6d3dd90328014bbf2e8756ab9b4ba12", "Url": "https://api.github.com/repos/PengYanY/BottomStyle", "Date": "2018-05-09T02:54:25Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<T>.getDeclaredField(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (field.getType().equals(java.lang.Boolean.TYPE)) { field.set(obj, ((cursor.getInt(cursor.getColumnIndex(column))) > 0)); }else if (field.getType().equals(java.lang.Byte.TYPE)) { field.set(obj, cursor.getInt(cursor.getColumnIndex(column))); }else if (field.getType().equals(java.lang.Long.TYPE)) { field.set(obj, cursor.getLong(cursor.getColumnIndex(column))); }else if (field.getType().equals(java.lang.Short.TYPE)) { field.set(obj, cursor.getShort(cursor.getColumnIndex(column))); }else if (field.getType().equals(java.lang.Float.TYPE)) { field.set(obj, cursor.getFloat(cursor.getColumnIndex(column))); }else if (field.getType().equals(java.lang.Double.TYPE)) { field.set(obj, cursor.getDouble(cursor.getColumnIndex(column))); }else if (field.getType().equals(java.lang.Character.TYPE)) { field.set(obj, cursor.getString(cursor.getColumnIndex(column))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5828/buggy-version/utils.src.main.java.co.com.millennialapps.utils.sqlite.SQLiteManager.java", "BodyUseAPI": ["java.lang.reflect.Field.set(T,cursor.getDouble(cursor.getColumnIndex(column)))", "java.lang.reflect.Field.getType()", "java.lang.reflect.Field.getType()", "java.lang.reflect.Field.set(T,((cursor.getInt(cursor.getColumnIndex(column))) > 0))", "java.lang.reflect.Field.getType()", "java.lang.Class<?>.equals(java.lang.Class<java.lang.Short>)", "java.lang.Class<?>.equals(java.lang.Class<java.lang.Byte>)", "java.lang.reflect.Field.getType()", "java.lang.Class<?>.equals(java.lang.Class<java.lang.Float>)", "java.lang.Class<?>.equals(java.lang.Class<java.lang.Double>)", "java.lang.Class<?>.equals(java.lang.Class<java.lang.Long>)", "java.lang.reflect.Field.getType()", "java.lang.reflect.Field.set(T,cursor.getFloat(cursor.getColumnIndex(column)))", "java.lang.Class<?>.equals(java.lang.Class<java.lang.Character>)", "java.lang.reflect.Field.getType()", "java.lang.reflect.Field.set(T,cursor.getLong(cursor.getColumnIndex(column)))", "java.lang.reflect.Field.set(T,cursor.getString(cursor.getColumnIndex(column)))", "java.lang.reflect.Field.set(T,cursor.getInt(cursor.getColumnIndex(column)))", "java.lang.reflect.Field.set(T,cursor.getShort(cursor.getColumnIndex(column)))"], "Fixed commit": "378634e1ce3e922254eda22110d7c57be87d13d9", "Url": "https://api.github.com/repos/erickvelasco11/MillennialAppsUtils", "Date": "2018-05-22T13:17:46Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mFragment.equals(new com.lailperry.android.blackwellpttrainer.WorkoutsFragment()))) { for (int i = 0; i < (mFragmentManager.getBackStackEntryCount()); i++) { mFragmentManager.popBackStack(); } updateFragment(com.lailperry.android.blackwellpttrainer.MainActivity.WORKOUTS_FRAGMENT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2957/buggy-version/app.src.main.java.com.lailperry.android.blackwellpttrainer.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b1943abe38f0c5f2138064fb15cb040e41b3a4fd", "Url": "https://api.github.com/repos/Lailanater56/capstone", "Date": "2018-03-12T18:01:54Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(password.isEmpty())) { java.lang.String encryptedPassword = ru.queue.utility.SecurityUtility.passwordEncoder().encode(password); user.setPassword(encryptedPassword); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4722/buggy-version/src.main.java.ru.queue.controller.HomeController.java", "BodyUseAPI": ["ru.queue.utility.SecurityUtility.passwordEncoder().encode(java.lang.String)"], "Fixed commit": "a9fdde2d7e8c844c09658770ddcad5a462d81f2f", "Url": "https://api.github.com/repos/shevchuk-na/ElectronicQueue", "Date": "2018-02-21T23:28:32Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.wqisland.dao.ISchoolDAO.updatePassword(java.lang.Integer,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (a != 1) { throw new cn.wqisland.exception.WqIslandException(\"\u65e7\u5bc6\u7801\u9519\u8bef\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6079/buggy-version/src.main.java.cn.wqisland.service.impl.SchoolServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "70d94f380ddc27533dc64daced3d4ce1fd434459", "Url": "https://api.github.com/repos/nihao17546/wq-island", "Date": "2018-01-18T06:40:52Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(url)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4250/buggy-version/devlib.src.main.java.com.zxzx74147.devlib.image.ImageLoader.java", "BodyUseAPI": [], "Fixed commit": "0d8a57a13721dd7eb1ab4ece7d5fab903c06d3a7", "Url": "https://api.github.com/repos/zxzx74147/ChartTest", "Date": "2018-03-14T05:36:33Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPost) == null) sb.append(\"null\"); else sb.append(currentPost.getId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5212/buggy-version/src.main.java.massey.geospider.probe.facebook.FacebookPostsProbe.java", "BodyUseAPI": [], "Fixed commit": "214260b51e9faccff6e32d9e10b555bce4bcfb17", "Url": "https://api.github.com/repos/FamingHou/geospider", "Date": "2018-01-10T07:21:14Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)", "java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((A == 'x') && (B == 'x')) { A = unlinearFunc.charAt(0); B = unlinearFunc.charAt(3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1892/buggy-version/src.Controller.java", "BodyUseAPI": [], "Fixed commit": "f8c19383d48424d13d85dfdf4a54c3f39db50678", "Url": "https://api.github.com/repos/toshytwx/Tritemius-cipher", "Date": "2018-03-04T20:47:15Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (APL.Main.colorful) APL.Main.println(((((\"\\u001b[38;5;\" + col) + \"m\") + s) + \"\\u001b[0m\")); else APL.Main.println(s);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2194/buggy-version/src.APL.Main.java", "BodyUseAPI": [], "Fixed commit": "1ea1392683d3a23e26e4169a7b421b38ebeb3b9d", "Url": "https://api.github.com/repos/dzaima/APL", "Date": "2018-10-21T19:38:37Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.gov.hmcts.reform.divorce.transformservice.client.TransformationHttpEntityFactory.createRequestEntityForSubmitCase(java.lang.String,uk.gov.hmcts.reform.divorce.transformservice.domain.model.ccd.CaseDataContent)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((httpEntity != null) && ((httpEntity.getBody()) != null)) { log.debug((\"AddressBaseUK Mapping - caseDataContent httpEntity details body\" + (httpEntity.getBody().toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1513/buggy-version/src.main.java.uk.gov.hmcts.reform.divorce.transformservice.client.SubmitCcdClient.java", "BodyUseAPI": ["uk.gov.hmcts.reform.divorce.transformservice.client.SubmitCcdClient.debug((\"AddressBaseUK Mapping - caseDataContent httpEntity details body\" + (httpEntity.getBody().toString())))", "httpEntity.getBody().toString()", "org.springframework.http.HttpEntity<uk.gov.hmcts.reform.divorce.transformservice.domain.model.ccd.CaseDataContent>.getBody()"], "Fixed commit": "2732dea21c60a3dede64b961732b47d656ce1895", "Url": "https://api.github.com/repos/hmcts/div-case-progression-service", "Date": "2018-08-06T13:43:43Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["microbat.model.trace.TraceNode.findDataDominator(microbat.model.value.VarValue)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(chain.contains(newDom))) { getAssignChain(newDom, readVar, chain); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9634/buggy-version/tregression.src.main.tregression.StepChangeTypeChecker.java", "BodyUseAPI": ["tregression.StepChangeTypeChecker.getAssignChain(microbat.model.trace.TraceNode,microbat.model.value.VarValue,java.util.List<microbat.model.trace.TraceNode>)"], "Fixed commit": "352c80818e4b06d215108cf8fbaea9ff7a39aae9", "Url": "https://api.github.com/repos/llmhyy/tregression", "Date": "2018-01-09T04:14:09Z"},
{"Line": "=>511", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!hud) { org.lwjgl.opengl.GL11.glTranslatef(0, 0, (-0.1F)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8369/buggy-version/main.java.minecraftflightsimulator.helpers.InstrumentHelper.java", "BodyUseAPI": [], "Fixed commit": "ec812a35ab4b87444182c36e3ae476960e000ea9", "Url": "https://api.github.com/repos/DonBruce64/MinecraftTransportSimulator", "Date": "2016-07-15T02:54:54Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.List<de.altenerding.biber.pinkie.business.file.entity.Mapping>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((biberFriendsMapping != null) && ((biberFriendsMapping.size()) > 0)) { text = biberFriendsMapping.get(0).getTextMapping().getText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4319/buggy-version/src.main.java.de.altenerding.biber.pinkie.presentation.club.BiberFriendsBean.java", "BodyUseAPI": ["biberFriendsMapping.get(0).getTextMapping().getText()", "biberFriendsMapping.get(0).getTextMapping()", "java.util.List<de.altenerding.biber.pinkie.business.file.entity.Mapping>.get(int)"], "Fixed commit": "a3b386ecf4cd9370aae554996129accedec6914c", "Url": "https://api.github.com/repos/AlexanderPraegla/Pinkie", "Date": "2018-05-02T08:45:16Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.altenerding.biber.pinkie.business.file.boundary.FileService.getMappingForPage(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((mappingForPage.size()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4319/buggy-version/src.main.java.de.altenerding.biber.pinkie.presentation.club.BiberFriendsBean.java", "BodyUseAPI": [], "Fixed commit": "a3b386ecf4cd9370aae554996129accedec6914c", "Url": "https://api.github.com/repos/AlexanderPraegla/Pinkie", "Date": "2018-05-02T08:45:16Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((step) == (com.mcflythekid.lazylearncore.Const.CARD_STEP_FRESH)) { step = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9587/buggy-version/src.main.java.com.mcflythekid.lazylearncore.entity.Card.java", "BodyUseAPI": [], "Fixed commit": "492f110d699cddd830f2a4108627e6b33095a8b5", "Url": "https://api.github.com/repos/mcflythekid/lazylearn-api", "Date": "2018-02-03T12:24:05Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Cryptofriends.CgramController.getCurrentlySelected()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (selectedBox != null) { clearHilights(); java.util.ArrayList<Cryptofriends.SpaceContainer.SpaceBox> incorrectSpaceBoxes = getIncorrectSpaceBoxes(); core.Spaces.LetterSpace letterSpace = null; for (int x = 0; x < (incorrectSpaceBoxes.size()); x++) { letterSpace = ((core.Spaces.LetterSpace) (incorrectSpaceBoxes.get(x).getSpace())); if (!(letterSpace.isBlank())) { incorrectSpaceBoxes.get(x).setCSS(true, true); } } showClearIncorrectBtns(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6083/buggy-version/Cryptograms.src.Cryptofriends.CgramController.java", "BodyUseAPI": [], "Fixed commit": "9e385d8443f0f9c89834cd95414d2692db71d980", "Url": "https://api.github.com/repos/Nilbmar/Cryptofriends", "Date": "2018-04-06T22:59:58Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap<com.alipay.sofa.rpc.transport.ClientTransportConfig, com.alipay.remoting.Connection>.get(com.alipay.sofa.rpc.transport.ClientTransportConfig)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((connection != null) && (!(connection.isFine()))) { closeConnection(rpcClient, transportConfig, url); connection = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2618/buggy-version/extension-impl.remoting-bolt.src.main.java.com.alipay.sofa.rpc.transport.bolt.BoltClientConnectionManager.java", "BodyUseAPI": [], "Fixed commit": "9b88f1100dcf44dc4cb84350f579d9773bf73f0a", "Url": "https://api.github.com/repos/ujjboy/sofa-rpc", "Date": "2018-08-22T10:08:07Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmpty) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/584/buggy-version/src.org.exist.xquery.value.AbstractSequence.java", "BodyUseAPI": [], "Fixed commit": "0bb9270e8778bd4f350785d598b3695ee876b9d8", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2018-07-05T11:41:42Z"},
{"Line": "=>5223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mInterpolator) != (androidx.recyclerview.widget.RecyclerView.sQuinticInterpolator)) { mInterpolator = androidx.recyclerview.widget.RecyclerView.sQuinticInterpolator; mScroller = new android.widget.OverScroller(getContext(), androidx.recyclerview.widget.RecyclerView.sQuinticInterpolator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7923/buggy-version/recyclerview.recyclerview.src.main.java.androidx.recyclerview.widget.RecyclerView.java", "BodyUseAPI": [], "Fixed commit": "46b286c1bb17ae372006bd0284f0a3c5e564fcb4", "Url": "https://api.github.com/repos/aosp-mirror/platform_frameworks_support", "Date": "2018-08-16T20:51:59Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (CloudPlatform.CLOUD_FOUNDRY.isActive(environment)) { java.util.Map<java.lang.String, java.lang.Object> map = new java.util.HashMap<>(); map.put(\"spring.boot.admin.client.auto-deregistration\", true); org.springframework.core.env.MapPropertySource propertySource = new org.springframework.core.env.MapPropertySource(\"cloudConfigPropertySource\", map); environment.getPropertySources().addFirst(propertySource); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/478/buggy-version/spring-boot-admin-client.src.main.java.de.codecentric.boot.admin.client.config.CloudFoundryEnvironmentPostProcessor.java", "BodyUseAPI": ["environment.getPropertySources().addFirst(org.springframework.core.env.MapPropertySource)", "org.springframework.core.env.ConfigurableEnvironment.getPropertySources()"], "Fixed commit": "246c118be1b2803adc0de7b3bb58a407649b4f48", "Url": "https://api.github.com/repos/tetsushiawano/spring-boot-admin", "Date": "2018-02-28T12:11:58Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sqlName instanceof com.alibaba.fastsql.sql.ast.expr.SQLCharExpr) { return ((com.alibaba.fastsql.sql.ast.expr.SQLCharExpr) (sqlName)).getText(); }else if (sqlName instanceof com.alibaba.fastsql.sql.ast.expr.SQLMethodInvokeExpr) { return com.alibaba.otter.canal.parse.inbound.mysql.ddl.DruidDdlParser.unescapeName(((com.alibaba.fastsql.sql.ast.expr.SQLMethodInvokeExpr) (sqlName)).getMethodName()); }else { return sqlName.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5961/buggy-version/parse.src.main.java.com.alibaba.otter.canal.parse.inbound.mysql.tsdb.MemoryTableMeta.java", "BodyUseAPI": ["com.alibaba.fastsql.sql.ast.SQLExpr.toString()"], "Fixed commit": "a2241e25217f7ffdd8824502a47bf3b18623dc2f", "Url": "https://api.github.com/repos/zmyer/canal", "Date": "2018-06-05T07:41:03Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (s.toString().equals(\"\")) return; else mSeekBar.setMax(java.lang.Integer.parseInt(s.toString()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4439/buggy-version/app.src.main.java.com.aduen.nauzet.debtcontrol.AddDebtActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(s.toString())", "android.widget.SeekBar.setMax(int)", "android.text.Editable.toString()"], "Fixed commit": "cfdca66db81254117a70cb45a81a110c345bb2b5", "Url": "https://api.github.com/repos/NauzetAduen/DebtControl", "Date": "2018-08-27T14:50:12Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((groups == null) || (groups.isEmpty())) { return java.util.Collections.emptyList(); }else { return java.util.Arrays.asList(groups.split(hu.dbx.kompot.impl.DataHandling.GROUP_SEPARATOR_CHAR)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3813/buggy-version/src.hu.dbx.kompot.impl.DataHandling.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.util.Arrays.asList(java.lang.String[])"], "Fixed commit": "227426d3141e3c0e9b9bf43cd6ce9f66d1a979f9", "Url": "https://api.github.com/repos/dbx/kompot", "Date": "2018-08-13T14:00:19Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((a.length) == 1) { if (((a[0].contains(\"h\")) || (a[0].contains(\"m\"))) || (a[0].contains(\"s\"))) { expireTime += \"T\" + (a[0]); }else { expireTime += (a[0]) + \"d\"; } }else if ((a.length) == 2) { expireTime = ((a[0]) + \"dT\") + (a[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4654/buggy-version/src.java.net.firecraftmc.core.managers.PunishmentManager.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "77f6ae72d29741adc846de2baf624d60eb8b4b65", "Url": "https://api.github.com/repos/Firestar311/FirecraftCore", "Date": "2018-05-19T06:50:50Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((a.length) == 1) { if (((a[0].contains(\"h\")) || (a[0].contains(\"m\"))) || (a[0].contains(\"s\"))) { expireTime += \"T\" + (a[0]); }else { expireTime += (a[0]) + \"d\"; } }else if ((a.length) == 2) { expireTime = ((a[0]) + \"dT\") + (a[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4654/buggy-version/src.java.net.firecraftmc.core.managers.PunishmentManager.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "77f6ae72d29741adc846de2baf624d60eb8b4b65", "Url": "https://api.github.com/repos/Firestar311/FirecraftCore", "Date": "2018-05-19T06:50:50Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.provectus.taxmanagement.entity.Quarter.getTaxRecords()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((taxRecords.size()) > 1) { summary.addMergedRegion(new org.apache.poi.ss.util.CellRangeAddress(3, ((3 + (taxRecords.size())) - 1), 7, 7)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3802/buggy-version/tax-management-core.src.main.java.com.provectus.taxmanagement.service.impl.ReportServiceImpl.java", "BodyUseAPI": ["org.apache.poi.ss.usermodel.Sheet.addMergedRegion(org.apache.poi.ss.util.CellRangeAddress)", "java.util.List<com.provectus.taxmanagement.entity.TaxRecord>.size()"], "Fixed commit": "22c5c9d6b7b66748db048eb906f2b7a60b2a8472", "Url": "https://api.github.com/repos/AiRmode/provectus-finance", "Date": "2018-07-21T18:57:42Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ClassLoader.getResourceAsStream(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (tldFile != null) { n = edu.uci.ics.crawler4j.url.TLDList.readStream(tldFile, tldSet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9756/buggy-version/crawler4j.src.main.java.edu.uci.ics.crawler4j.url.TLDList.java", "BodyUseAPI": ["edu.uci.ics.crawler4j.url.TLDList.readStream(java.io.InputStream,java.util.Set<java.lang.String>)"], "Fixed commit": "2e26030835d0089ff61aaf26c78a309d45ea70f5", "Url": "https://api.github.com/repos/abgelehnt/crawler4j", "Date": "2018-07-11T07:00:31Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jdon.controller.events.EventModel.getModelIF()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((forumBuilder.getForum(forumMessagePostDTO.getForum().getForumId())) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9574/buggy-version/src.main.java.com.jdon.jivejdon.service.imp.message.ForumMessageShell.java", "BodyUseAPI": [], "Fixed commit": "d950e93ed7a0a81f1bc2d753454aeae2ccfdd9e0", "Url": "https://api.github.com/repos/banq/jivejdon", "Date": "2018-10-20T14:05:16Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(iter.hasNext())) { atEOF = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6082/buggy-version/src.main.java.io.anserini.collection.CarCollection.java", "BodyUseAPI": [], "Fixed commit": "d2ef25db2c1b5b3005fac221bacdc49538c99613", "Url": "https://api.github.com/repos/Victor0118/Anserini", "Date": "2018-08-19T20:38:00Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(email.equals(\"\"))) && (!(password.equals(\"\")))) { com.google.firebase.auth.AuthCredential credential = com.google.firebase.auth.EmailAuthProvider.getCredential(email, password); currentUserAuth.reauthenticate(credential).addOnCompleteListener(new com.google.android.gms.tasks.OnCompleteListener<java.lang.Void>() { @java.lang.Override public void onComplete(@android.support.annotation.NonNull com.google.android.gms.tasks.Task<java.lang.Void> task) { if (task.isSuccessful()) { deleteAllChats(); }else { max.convives.MApplication.makeToast(getResources().getString(R.string.invalid_email_password), max.convives.MainActivity.this); progressDialog.dismiss(); } } }); }else { max.convives.MApplication.makeToast(getResources().getString(R.string.invalid_email_password), this); progressDialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6333/buggy-version/app.src.main.java.max.convives.MainActivity.java", "BodyUseAPI": ["com.google.firebase.auth.EmailAuthProvider.getCredential(java.lang.String,java.lang.String)"], "Fixed commit": "b31172bbcb37364dd6118bbff3e6ee6b1e2287b9", "Url": "https://api.github.com/repos/MaximSt85/convives", "Date": "2018-03-06T15:19:09Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(destinationNumber)) { log.error(\"Error! Called send SMS with null number, returning error\"); return za.org.grassroot.messaging.service.sms.aat.AatResponseInterpreter.makeErrorResponse(SmsResponseType.COMMUNICATION_ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8666/buggy-version/src.main.java.za.org.grassroot.messaging.service.sms.aat.AatSmsSendingManager.java", "BodyUseAPI": [], "Fixed commit": "330b8a6a54268b1ac98d1a92eb98ec843f29a507", "Url": "https://api.github.com/repos/grassrootza/grassroot-messaging", "Date": "2018-03-20T10:24:08Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { initializeMediaSession(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8696/buggy-version/app.src.main.java.com.example.shaol.bakingapp.StepsFragment.java", "BodyUseAPI": [], "Fixed commit": "6cad241013177f4e886f70f079c2bf5238c91bec", "Url": "https://api.github.com/repos/TangoWolf/BakingApp", "Date": "2018-05-23T05:47:55Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { initializePlayer(android.net.Uri.parse(mURL)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8696/buggy-version/app.src.main.java.com.example.shaol.bakingapp.StepsFragment.java", "BodyUseAPI": [], "Fixed commit": "6cad241013177f4e886f70f079c2bf5238c91bec", "Url": "https://api.github.com/repos/TangoWolf/BakingApp", "Date": "2018-05-23T05:47:55Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nbActivitiesRealisees != 0) { return totalCompletion / nbActivitiesRealisees; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4040/buggy-version/src.main.java.smart.Entities.Programme.java", "BodyUseAPI": [], "Fixed commit": "bda97dc0979abba83fcfbb393dccad4227cfc04f", "Url": "https://api.github.com/repos/heptastique/onlygo", "Date": "2018-05-02T13:21:22Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((directon.size()) > 1) { directon.setStrand(); directons.add(directon); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8932/buggy-version/src.Utils.Utils.java", "BodyUseAPI": ["java.util.ArrayList<Words.Directon>.add(Words.Directon)", "Words.Directon.setStrand()"], "Fixed commit": "f463995cba33845116a8e2f5b558e97ac98922ce", "Url": "https://api.github.com/repos/dinasv/CSBFinder", "Date": "2018-06-28T09:09:43Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.mrletsplay.streamdeckapi.StreamDeck.getButton(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (button == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6313/buggy-version/src.me.mrletsplay.streamdeckapi.StreamDeck.java", "BodyUseAPI": [], "Fixed commit": "b42a19e73836691c6899a2785a362727d335e78e", "Url": "https://api.github.com/repos/MrLetsplay2003/StreamDeckJavaAPI", "Date": "2018-05-25T21:29:43Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (lengths != null) { int length = java.lang.Integer.parseInt(lengths.get(0)); log.info(\"length:{}\", length); parseParams(new java.lang.String(bytes, 0, length, com.sinjinsong.webserver.core.constant.CharsetProperties.UTF_8_CHARSET)); }else { parseParams(body.trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7164/buggy-version/core.src.main.java.com.sinjinsong.webserver.core.request.Request.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "00f57072fb77001696122621865c4b97057254b2", "Url": "https://api.github.com/repos/songxinjianqwe/WebServer", "Date": "2018-04-13T13:16:21Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cfApplicationProperties.getUris().isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/757/buggy-version/spring-boot-admin-client.src.main.java.de.codecentric.boot.admin.client.registration.CloudFoundryApplicationFactory.java", "BodyUseAPI": [], "Fixed commit": "180193c1ebb5f25ad3dc7e981045efac36a42db4", "Url": "https://api.github.com/repos/tetsushiawano/spring-boot-admin", "Date": "2018-07-02T14:31:51Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getConfig()) == null) || ((getConfig().getConfigurationSection(\"timed\")) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5694/buggy-version/src.main.java.com.ruinscraft.permissiontimer.PermissionTimer.java", "BodyUseAPI": [], "Fixed commit": "aedff93f7e1f23eb728f01a23d08682a86f392d5", "Url": "https://api.github.com/repos/Ruinscraft/PermissionTimer", "Date": "2018-07-01T05:10:31Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (object instanceof upsimulator.rules.conditions.ObjectCondition) object = new upsimulator.core.PObject(((upsimulator.core.PObject) (object)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1205/buggy-version/src.upsimulator.core.PMembrane.java", "BodyUseAPI": [], "Fixed commit": "a7695bc3ed399426b6f98f35df75ca72462f41c6", "Url": "https://api.github.com/repos/quancs/UPSimulator", "Date": "2018-05-17T06:39:01Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.nikr.eve.jeveasset.gui.tabs.tracker.EveKitTrackImportUpdateTask.getLifeStart()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (lifeStart == null) { returnValue = net.nikr.eve.jeveasset.gui.tabs.tracker.EveKitTrackImportUpdateTask.ReturnValue.ERROR; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2634/buggy-version/src.main.java.net.nikr.eve.jeveasset.gui.tabs.tracker.EveKitTrackImportUpdateTask.java", "BodyUseAPI": [], "Fixed commit": "1dcdb14c98299c08d058fe21a0e6bdfdfc010b6a", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2018-01-25T10:32:41Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((database) == null) { database = com.mongodb.memphis.config.Root.DEFAULT_DATABASE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4751/buggy-version/src.main.java.com.mongodb.memphis.config.Root.java", "BodyUseAPI": [], "Fixed commit": "6b9baf98e76d949f1e846201d59d629fa882b11f", "Url": "https://api.github.com/repos/dioxic/memphis", "Date": "2018-01-17T14:36:32Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((collection) == null) { collection = com.mongodb.memphis.config.Root.DEFAULT_COLLECTION; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4751/buggy-version/src.main.java.com.mongodb.memphis.config.Root.java", "BodyUseAPI": [], "Fixed commit": "6b9baf98e76d949f1e846201d59d629fa882b11f", "Url": "https://api.github.com/repos/dioxic/memphis", "Date": "2018-01-17T14:36:32Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openRealmOfStars.utilities.IOUtilities.readString(java.io.DataInputStream)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((name.lastIndexOf(' ')) != (-1)) { name = name.substring(0, name.lastIndexOf(' ')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2654/buggy-version/src.main.java.org.openRealmOfStars.utilities.repository.PlanetRepository.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.lastIndexOf(char)"], "Fixed commit": "d86fbb26f37bb1136d9a01d8ae91305b60959e12", "Url": "https://api.github.com/repos/tuomount/Open-Realms-of-Stars", "Date": "2018-04-15T19:31:26Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(userService.isUserNameValid(command.getUsername()))) { model.addAttribute(\"error\", \"Kullan\u0131c\u0131 ad\u0131 zaten kullan\u0131lmakta.\"); return \"register\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6663/buggy-version/src.main.java.com.tuncerb.controllers.AuthenticationController.java", "BodyUseAPI": [], "Fixed commit": "77df0fb9f9182e30864b3d95729110fde4aba7cd", "Url": "https://api.github.com/repos/tuncerb17/SpringProductProject", "Date": "2018-05-29T21:03:48Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(Data.tasks.contains(temp))) { data.add(temp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1073/buggy-version/app.src.main.java.com.example.yl.c1_hack.MainActivity.java", "BodyUseAPI": ["java.util.List<com.example.yl.c1_hack.Task>.add(com.example.yl.c1_hack.Task)"], "Fixed commit": "50a8daa2a04c12170f7fb17860f2755be6fe6807", "Url": "https://api.github.com/repos/he135/c1-hack-app", "Date": "2018-01-12T07:14:48Z"},
{"Line": "=>509", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isServerRootOptionSet) { serverSharedDirConfig = new com.ibm.ws.kernel.boot.archive.DirEntryConfig((((packageArchiveEntryPrefix) + (com.ibm.ws.kernel.boot.internal.BootstrapConstants.LOC_AREA_NAME_SHARED)) + \"/\"), sharedDir, true, com.ibm.ws.kernel.boot.archive.DirPattern.PatternStrategy.IncludePreference); }else { serverSharedDirConfig = new com.ibm.ws.kernel.boot.archive.DirEntryConfig((((((packageArchiveEntryPrefix) + (com.ibm.ws.kernel.boot.internal.BootstrapConstants.LOC_AREA_NAME_USR)) + \"/\") + (com.ibm.ws.kernel.boot.internal.BootstrapConstants.LOC_AREA_NAME_SHARED)) + \"/\"), sharedDir, true, com.ibm.ws.kernel.boot.archive.DirPattern.PatternStrategy.IncludePreference); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1520/buggy-version/dev.com.ibm.ws.kernel.boot.core.src.com.ibm.ws.kernel.boot.internal.commands.PackageProcessor.java", "BodyUseAPI": [], "Fixed commit": "58c3f570df577b0b3c7e57fdb3ababc94c6a7e89", "Url": "https://api.github.com/repos/jmstephensgit/open-liberty", "Date": "2018-10-19T15:08:59Z"},
{"Line": "=>497", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["elementStack.peek().getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((isComplexType) && (isSimpleType)) && (typeToCheck instanceof be.nabu.libs.types.api.ComplexType)) { typeToCheck = ((((be.nabu.libs.types.api.ComplexType) (typeToCheck)).get(ComplexType.SIMPLE_TYPE_VALUE)) == null) ? null : ((be.nabu.libs.types.api.ComplexType) (typeToCheck)).get(ComplexType.SIMPLE_TYPE_VALUE).getType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5973/buggy-version/src.main.java.be.nabu.libs.types.binding.xml.XMLParserSAX.java", "BodyUseAPI": [], "Fixed commit": "1ba3780b19673005f45421cb96e0dc05f37b37c9", "Url": "https://api.github.com/repos/nabu-platform/types-binding-xml", "Date": "2018-09-04T07:08:03Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(\"true\".equals(getRequestParameter(\"isPreview\")))) { menu += ((((\"<form id=\\\"menu_\" + escapedId) + \"_form\\\" method=\\\"POST\\\" action=\\\"\") + url) + \"?_action=run\") + \"\\\" style=\\\"display:none\\\"></form>\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6438/buggy-version/wflow-core.src.main.java.org.joget.apps.userview.lib.RunProcess.java", "BodyUseAPI": [], "Fixed commit": "d0e721f51100d7fcdcf1e631349002ea16962bf8", "Url": "https://api.github.com/repos/jogetworkflow/jw-community", "Date": "2018-05-07T09:58:06Z"},
{"Line": "=>825", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lexer.token()) == (com.alibaba.druid.sql.parser.Token.LITERAL_ALIAS)) { expr = this.exprParser.name(); expr = this.exprParser.primaryRest(expr); }else { expr = this.exprParser.expr(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4754/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.mysql.parser.MySqlCreateTableParser.java", "BodyUseAPI": [], "Fixed commit": "f50c14d9ea87fe0f7bdaad50199d50cabb462c54", "Url": "https://api.github.com/repos/ChangFeng2015/druid", "Date": "2018-01-17T13:26:39Z"},
{"Line": "=>709", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lexer.token()) == (Token.LITERAL_ALIAS)) { expr = this.name(); }else { expr = this.expr(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4754/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.java", "BodyUseAPI": [], "Fixed commit": "f50c14d9ea87fe0f7bdaad50199d50cabb462c54", "Url": "https://api.github.com/repos/ChangFeng2015/druid", "Date": "2018-01-17T13:26:39Z"},
{"Line": "=>541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((grantResults.length) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3531/buggy-version/mobile.src.main.java.mycroft.ai.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ef9117225b62d978405d547e05fa9e3d73976828", "Url": "https://api.github.com/repos/skraynick/Mycroft-Android", "Date": "2018-02-20T17:05:25Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edu.usu.sdl.openstorefront.security.SecurityUtil.hasPermission(SecurityPermission.ADMIN_EVALUATION_TEMPLATE_CHECKLIST_QUESTION_DELETE)) { service.getChecklistService().deleteQuestion(questionId); return javax.ws.rs.core.Response.noContent().build(); }else { return javax.ws.rs.core.Response.status(Response.Status.FORBIDDEN).type(MediaType.TEXT_PLAIN).entity(\"User does not have permission to delete.\").build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4823/buggy-version/server.openstorefront.openstorefront-web.src.main.java.edu.usu.sdl.openstorefront.web.rest.resource.ChecklistQuestionResource.java", "BodyUseAPI": [], "Fixed commit": "da496febef46862d44e39888a8c4a043a360048b", "Url": "https://api.github.com/repos/di2e/openstorefront", "Date": "2018-07-13T16:46:47Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bboxdb.commons.math.BoundingBox.getIntervalForDimension(int)", "org.bboxdb.commons.math.BoundingBox.getIntervalForDimension(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(tupleInterval.isOverlappingWith(groupInterval))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9525/buggy-version/bboxdb-server.src.main.java.org.bboxdb.distribution.partitioner.regionsplit.SamplingBasedSplitStrategy.java", "BodyUseAPI": [], "Fixed commit": "bb98974348e835f91f903e9c54738c041f9eb883", "Url": "https://api.github.com/repos/jnidzwetzki/bboxdb", "Date": "2018-03-14T06:31:39Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sign_email.getText().toString()", "sign_password.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(isEmpty(temp_email, temp_password))) { fireSignIn(temp_email, temp_password); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2556/buggy-version/app.src.main.java.com.example.steffen.rememo.Activities.LoginActivity.java", "BodyUseAPI": ["com.example.steffen.rememo.Activities.LoginActivity.fireSignIn(java.lang.String,java.lang.String)"], "Fixed commit": "7ecf7148e5b8479c2e4a6acadda70326f3972f2a", "Url": "https://api.github.com/repos/steffenbirkis/ReMemo", "Date": "2018-05-03T09:06:04Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Double.parseDouble(view.p0Field.getText())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (p0 > 1) { view.p0ValidationLabel.setText(\"Validation error: p0 must be < 1\"); }else if (p1 > 1) { view.p0ValidationLabel.setText(\"Validation error: p1 must be < 1\"); }else if ((p0 + p1) != 1) { view.p0ValidationLabel.setText(\"Validation error: p0 + p1 must equal 1\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1532/buggy-version/src.presentation.presenter.SaltAndPepperNoisePresenter.java", "BodyUseAPI": [], "Fixed commit": "a050375a7e55c956c3224e2590db42f11153a9ae", "Url": "https://api.github.com/repos/GabrielPenaU3F/ProcesamientoImagenes", "Date": "2018-05-15T04:12:36Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (auth instanceof org.springframework.security.authentication.AnonymousAuthenticationToken) return \"/index.html\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9445/buggy-version/src.main.java.ee.ut.cs.web.kaabel.web.DefaultController.java", "BodyUseAPI": [], "Fixed commit": "361e7748355cb68cb142aab05c9d17429a7ede6f", "Url": "https://api.github.com/repos/Starrimus/Kaabel", "Date": "2018-03-18T13:03:47Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (auth instanceof org.springframework.security.authentication.AnonymousAuthenticationToken) return \"/index.html\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9445/buggy-version/src.main.java.ee.ut.cs.web.kaabel.web.DefaultController.java", "BodyUseAPI": [], "Fixed commit": "361e7748355cb68cb142aab05c9d17429a7ede6f", "Url": "https://api.github.com/repos/Starrimus/Kaabel", "Date": "2018-03-18T13:03:47Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, org.apache.commons.math3.stat.descriptive.DescriptiveStatistics[]>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((stats[i].getStandardDeviation()) <= 0) { stats[i].addValue(java.lang.Double.MIN_VALUE); stats[i].addValue(java.lang.Double.MIN_VALUE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7838/buggy-version/Banichka.src.ml.GaussianNB.java", "BodyUseAPI": ["stats[i].addValue(double)", "stats[i].addValue(double)"], "Fixed commit": "6df6afb860985939eaa0af29c4dc80ba2031ed92", "Url": "https://api.github.com/repos/TeodorDyakov/Banichka", "Date": "2018-03-06T21:10:27Z"},
{"Line": "=>632", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getTag(R.id.TAG_PROJECT)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (project == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7214/buggy-version/iNaturalist.src.main.java.org.inaturalist.android.ProjectSelectorActivity.java", "BodyUseAPI": [], "Fixed commit": "0c5abd92ff027c3a3600ef24fe37390f9cf2cb40", "Url": "https://api.github.com/repos/inaturalist/iNaturalistAndroid", "Date": "2018-10-24T20:43:54Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (getResources().getResourceEntryName(option.getId()).equals(currentQuestion.getCorrect())) { option.setBackgroundColor(android.graphics.Color.rgb(69, 235, 165)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/411/buggy-version/app.src.main.java.codepath.flashcard.MainActivity.java", "BodyUseAPI": ["android.widget.Button.setBackgroundColor(android.graphics.Color.rgb(69, 235, 165))"], "Fixed commit": "6bd6bbbf2dca0bf9954110914f83b84c3a90c4e3", "Url": "https://api.github.com/repos/sanderhelleso/flashcard", "Date": "2018-10-14T06:12:55Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((requestCode == (com.owncloud.android.ui.activity.UploadFilesActivity.REQUEST_SCANNED_DOCUMENT_CROP)) && (resultCode == (RESULT_OK))) { android.os.Bundle croppedDocumentData = capturedData.getExtras(); java.lang.String croppedDocumentImagePath = ((java.lang.String) (croppedDocumentData.get(com.owncloud.android.ui.activity.UploadFilesActivity.CROPPED_SCANNED_DOCUMENT_IMAGE_PATH))); new com.owncloud.android.ui.activity.UploadFilesActivity.CheckAvailableSpaceTask(croppedDocumentImagePath).execute(); }else if (((requestCode == (com.owncloud.android.ui.activity.UploadFilesActivity.REQUEST_IMAGE_CAPTURE)) || (requestCode == (com.owncloud.android.ui.activity.UploadFilesActivity.REQUEST_DOCUMENT_SCAN))) && (resultCode == (RESULT_CANCELED))) { if ((image) != null) { image.delete(); com.owncloud.android.lib.common.utils.Log_OC.d(com.owncloud.android.ui.activity.UploadFilesActivity.TAG, \"File deleted\"); } setResult(com.owncloud.android.ui.activity.RESULT_CANCELED); finish(); }else if (resultCode == (RESULT_CANCELED)) { setResult(com.owncloud.android.ui.activity.RESULT_CANCELED); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3000/buggy-version/src.com.owncloud.android.ui.activity.UploadFilesActivity.java", "BodyUseAPI": [], "Fixed commit": "4a85f969e826e670defa81bea400c1b747a8e762", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-03-14T05:32:11Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((t.getCause()) != null) { message += \":\" + (t.getCause().getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5717/buggy-version/stdlib.database.sql.src.main.java.org.ballerinalang.database.sql.SQLDatasource.java", "BodyUseAPI": ["java.lang.Throwable.getCause()", "java.lang.Throwable.getMessage()"], "Fixed commit": "b5050eeb9aa90689933b4ce9b0ea64c31e4d01ad", "Url": "https://api.github.com/repos/Manuri/ballerina", "Date": "2018-10-26T03:15:29Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (end != 12) { end += 12; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/44/buggy-version/CalendarProject.src.scheduler.MainGUI.java", "BodyUseAPI": [], "Fixed commit": "4826aa44192e1ae2b67b220074e89759427c52d8", "Url": "https://api.github.com/repos/Hangry9090/CalendarProject", "Date": "2018-04-19T16:52:04Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (end != 12) { end += 12; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/44/buggy-version/CalendarProject.src.scheduler.MainGUI.java", "BodyUseAPI": [], "Fixed commit": "4826aa44192e1ae2b67b220074e89759427c52d8", "Url": "https://api.github.com/repos/Hangry9090/CalendarProject", "Date": "2018-04-19T16:52:04Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((from.getCoordinates().getY()) > (to.getCoordinates().getY())) { return org.thelhonir.drawing.point.Orientation.LEFT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1445/buggy-version/src.main.java.org.thelhonir.drawing.point.Orientation.java", "BodyUseAPI": [], "Fixed commit": "8fc939a3301839c8fb84cf31fb926ccd6a22d5c9", "Url": "https://api.github.com/repos/thelhonir/text-drawing", "Date": "2018-07-09T14:33:17Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((from.getCoordinates().getX()) > (to.getCoordinates().getX())) { return org.thelhonir.drawing.point.Orientation.UP; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1445/buggy-version/src.main.java.org.thelhonir.drawing.point.Orientation.java", "BodyUseAPI": [], "Fixed commit": "8fc939a3301839c8fb84cf31fb926ccd6a22d5c9", "Url": "https://api.github.com/repos/thelhonir/text-drawing", "Date": "2018-07-09T14:33:17Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.gov.hmcts.reform.coh.controller.validators.Validation.execute(uk.gov.hmcts.reform.coh.controller.validators.QuestionValidator.values(),uk.gov.hmcts.reform.coh.controller.UpdateQuestionRequest)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(result.isValid())) { return org.springframework.http.ResponseEntity.status(HttpStatus.UNPROCESSABLE_ENTITY).body(result.getReason()); }else if (org.springframework.util.StringUtils.isEmpty(request.getQuestionState())) { return org.springframework.http.ResponseEntity.status(HttpStatus.UNPROCESSABLE_ENTITY).body(\"Question state is required\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4080/buggy-version/src.main.java.uk.gov.hmcts.reform.coh.controller.QuestionController.java", "BodyUseAPI": ["org.springframework.http.ResponseEntity.status(HttpStatus.UNPROCESSABLE_ENTITY).body(result.getReason())", "uk.gov.hmcts.reform.coh.controller.validators.ValidationResult.getReason()"], "Fixed commit": "a95856883dc9dc962cecd7050c3619da351f0153", "Url": "https://api.github.com/repos/hmcts/rpa-coh-continuous-online-resolution", "Date": "2018-07-19T07:38:52Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lastException.get()) != null) { log.error(\"Can't update cluster state\", lastException.get()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2560/buggy-version/redisson.src.main.java.org.redisson.cluster.ClusterConnectionManager.java", "BodyUseAPI": ["org.slf4j.Logger.error(java.lang.String,java.lang.Throwable)", "java.util.concurrent.atomic.AtomicReference<java.lang.Throwable>.get()"], "Fixed commit": "bcdc19d7dbbdfa9ff52c6c7a045dad0a862e473f", "Url": "https://api.github.com/repos/mosoft521/redisson", "Date": "2018-03-29T12:54:41Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lastException.get()) != null) { log.error(\"Can't update cluster state\", lastException.get()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2560/buggy-version/redisson.src.main.java.org.redisson.connection.SentinelConnectionManager.java", "BodyUseAPI": ["java.util.concurrent.atomic.AtomicReference<java.lang.Throwable>.get()", "org.slf4j.Logger.error(java.lang.String,java.lang.Throwable)"], "Fixed commit": "bcdc19d7dbbdfa9ff52c6c7a045dad0a862e473f", "Url": "https://api.github.com/repos/mosoft521/redisson", "Date": "2018-03-29T12:54:41Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["importJson.getJSONObject(net.victium.xelg.notatry.utilities.ImportCharacterJsonUtils.SHIELD_BLOCK).getJSONArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((shieldsJsonArray.length()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6104/buggy-version/app.src.main.java.net.victium.xelg.notatry.utilities.ImportCharacterJsonUtils.java", "BodyUseAPI": [], "Fixed commit": "4ed8eb284d8aa6c51be117c707adbc33b06b305b", "Url": "https://api.github.com/repos/xelgvoras/notatry", "Date": "2018-09-26T10:34:25Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(importJson.getJSONObject(net.victium.xelg.notatry.utilities.ImportCharacterJsonUtils.SHIELD_BLOCK).has(net.victium.xelg.notatry.utilities.ImportCharacterJsonUtils.SHIELD_LIST))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6104/buggy-version/app.src.main.java.net.victium.xelg.notatry.utilities.ImportCharacterJsonUtils.java", "BodyUseAPI": [], "Fixed commit": "4ed8eb284d8aa6c51be117c707adbc33b06b305b", "Url": "https://api.github.com/repos/xelgvoras/notatry", "Date": "2018-09-26T10:34:25Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nodeId == null) books.add(bookSnapshot.getValue(mad24.polito.it.fragments.Book.class)); else if (flag) books.add(bookSnapshot.getValue(mad24.polito.it.fragments.Book.class));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/362/buggy-version/app.src.main.java.mad24.polito.it.fragments.BooksFragment.java", "BodyUseAPI": [], "Fixed commit": "97a076fa230afbe3839711355675e664655e8557", "Url": "https://api.github.com/repos/SunSince90/Libre", "Date": "2018-04-26T14:43:19Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { android.net.Uri uri = android.net.Uri.parse((\"package:\" + (getActivity().getPackageName()))); intent.setData(uri); getActivity().startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5012/buggy-version/app.src.main.java.com.dentacoin.dentacare.fragments.DCSignupFragment.java", "BodyUseAPI": [], "Fixed commit": "c643a23a5cc096a00d4baed99260a5ec3abb9b6d", "Url": "https://api.github.com/repos/Dentacoin/aftercare-app-android", "Date": "2017-12-04T08:54:42Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.app.FragmentManager.findFragmentById(R.id.fragment_container_fVCust1)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (fragment_fVCust1 == null) { fragment_fVCust1 = new com.rmeijer.trainman.UserFragment(); fm.beginTransaction().add(R.id.fragment_container_fVCust1, fragment_fVCust1).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1247/buggy-version/app.src.main.java.com.rmeijer.trainman.CustomerPagerActivity.java", "BodyUseAPI": [], "Fixed commit": "00982d3592d1c76096f3560d47d30d44ebfb6660", "Url": "https://api.github.com/repos/rmeijer61/TrainMan", "Date": "2018-09-01T21:15:25Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (path.contains(java.io.File.separator)) { result = new java.io.File(((basePath) + path)); if (!(result.exists())) throw new java.io.FileNotFoundException(); return new java.io.File(((basePath) + path)); }else { result = new java.io.File((((basePath) + (java.io.File.separator)) + path)); if (!(result.exists())) throw new java.io.FileNotFoundException(); return new java.io.File((((basePath) + (java.io.File.separator)) + path)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4341/buggy-version/src.main.java.DataTier.FileAcces.FileManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "6af57448aaaa0f9e6456e30d61cca2012e24571e", "Url": "https://api.github.com/repos/LordSkin/CloudDrive-Server", "Date": "2018-04-19T16:54:44Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (path.contains(java.io.File.separator)) { out = new java.io.FileOutputStream(new java.io.File(((basePath) + path))); }else { out = new java.io.FileOutputStream(new java.io.File((((basePath) + (java.io.File.separator)) + path))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4341/buggy-version/src.main.java.DataTier.FileAcces.FileManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "6af57448aaaa0f9e6456e30d61cca2012e24571e", "Url": "https://api.github.com/repos/LordSkin/CloudDrive-Server", "Date": "2018-04-19T16:54:44Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((body.getDockerized()) == null) { body.setDockerized(Dictionary.DOCKERIZED_NO); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9461/buggy-version/eim.eim-rest-api.src.main.java.io.swagger.api.impl.AgentApiServiceImpl.java", "BodyUseAPI": ["io.swagger.model.AgentConfiguration.setDockerized(Dictionary.DOCKERIZED_NO)"], "Fixed commit": "cf8c17c04c7c25fed17c9303ebfc435b891731f2", "Url": "https://api.github.com/repos/elastest/elastest-instrumentation-manager", "Date": "2018-06-06T14:52:24Z"},
{"Line": "=>570", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.entity.item.EntityItem.getThrower()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (thrower == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/40/buggy-version/src.main.java.capsule.items.CapsuleItem.java", "BodyUseAPI": [], "Fixed commit": "efc1e68eeac4984e4c2b7cf922a8fc7ad7b76e0b", "Url": "https://api.github.com/repos/Lythom/capsule", "Date": "2018-04-27T19:01:40Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((response.getStatusCode()) == 410) { Window.Location.reload(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/51/buggy-version/touchkit.src.main.java.org.vaadin.touchkit.gwt.client.communication.TouchKitConnectionStateHandler.java", "BodyUseAPI": [], "Fixed commit": "f3edac505e07bf228ae4afd78e134d870a52dee7", "Url": "https://api.github.com/repos/parttio/touchkit", "Date": "2018-01-30T16:31:02Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getView()) != null) { ((android.widget.TextView) (getView().findViewById(R.id.myDistance))).setText(newText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9301/buggy-version/app.src.main.java.edu.fsu.cs.mobile.mobileliveracing.RaceFragment.java", "BodyUseAPI": [], "Fixed commit": "c9ae3dbcc56bc28747627b436e9cb6173965964b", "Url": "https://api.github.com/repos/apj11c/MobileLiveRacing", "Date": "2018-07-17T13:39:15Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(data.getString(\"status\").equals(\"success\"))) cb.called(((org.json.JSONObject) (data)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1309/buggy-version/chainsql.src.main.java.com.peersafe.chainsql.core.Submit.java", "BodyUseAPI": [], "Fixed commit": "f95f63f64bd043b962eb8e1abd728dec194757a7", "Url": "https://api.github.com/repos/ChainSQL/java-chainsql-api", "Date": "2018-09-19T02:58:29Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (os.contains(\"win\")) { java.awt.Desktop.getDesktop().browse(uri); }else if (((os.contains(\"nix\")) || (os.contains(\"nux\"))) || ((os.indexOf(\"aix\")) > 0)) if ((java.lang.Runtime.getRuntime().exec(new java.lang.String[]{ \"which\", \"xdg-open\" }).getInputStream().read()) != (-1)) { java.lang.Runtime.getRuntime().exec(new java.lang.String[]{ \"xdg-open\", org.aion.gui.controller.HeaderPaneControls.AION_URL }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5257/buggy-version/modGui.src.org.aion.gui.controller.HeaderPaneControls.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "0e7e69c1d33e90cd12f47ae4d4537f9fb9584393", "Url": "https://api.github.com/repos/aionnetwork/aion", "Date": "2018-07-31T17:59:39Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((padding) != null) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/895/buggy-version/kk-view.src.main.java.cn.kkmofang.view.TextView.java", "BodyUseAPI": [], "Fixed commit": "e9bc902d5ad7c32437fc507372b518d7d0fd2dfc", "Url": "https://api.github.com/repos/hailongz/kk-view", "Date": "2018-06-01T03:33:40Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.udea.ejb.MateriaFacadeLocal.findAll()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((materias.size()) > 0) { com.udea.entity.Materia ultimo = ((com.udea.entity.Materia) (materias.get(((materias.size()) - 1)))); materia = new com.udea.entity.Materia(((ultimo.getIdMateria()) + 1)); }else { materia = new com.udea.entity.Materia(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5074/buggy-version/src.java.com.udea.servlet.MateriaServlet.java", "BodyUseAPI": ["java.util.List<com.udea.entity.Materia>.size()", "java.util.List<com.udea.entity.Materia>.get(((materias.size()) - 1))"], "Fixed commit": "fc82c15252a66151f3040b4e851bf06d7d374bc6", "Url": "https://api.github.com/repos/alejocas/Matriculas_Lab", "Date": "2018-03-04T05:11:21Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.ignite.IgniteCluster.disableWal(tbl.cacheName())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!res) throw new org.apache.ignite.internal.processors.query.IgniteSQLException((\"Logging already disabled for table: \" + (cmd0.tableName())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2865/buggy-version/modules.indexing.src.main.java.org.apache.ignite.internal.processors.query.h2.ddl.DdlStatementsProcessor.java", "BodyUseAPI": [], "Fixed commit": "97fed2b7fd3af20bc919c0fd782fa8fa8adb7a41", "Url": "https://api.github.com/repos/ptupitsyn/ignite", "Date": "2018-01-26T08:20:06Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.ignite.IgniteCluster.enableWal(tbl.cacheName())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!res) throw new org.apache.ignite.internal.processors.query.IgniteSQLException((\"Logging already enabled for table: \" + (cmd0.tableName())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2865/buggy-version/modules.indexing.src.main.java.org.apache.ignite.internal.processors.query.h2.ddl.DdlStatementsProcessor.java", "BodyUseAPI": [], "Fixed commit": "97fed2b7fd3af20bc919c0fd782fa8fa8adb7a41", "Url": "https://api.github.com/repos/ptupitsyn/ignite", "Date": "2018-01-26T08:20:06Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.evensgn.emcompiler.backend.BasicBlock.getLastInst()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (inst instanceof com.evensgn.emcompiler.backend.IRBranch) { if ((((com.evensgn.emcompiler.backend.IRBranch) (inst)).getThenBB().getFirstInst()) == null) { java.lang.System.err.println((\"?? how come: \" + (((com.evensgn.emcompiler.backend.IRBranch) (inst)).getThenBB().getName()))); } liveOut.addAll(((com.evensgn.emcompiler.backend.IRBranch) (inst)).getThenBB().getFirstInst().liveIn); liveOut.addAll(((com.evensgn.emcompiler.backend.IRBranch) (inst)).getElseBB().getFirstInst().liveIn); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6958/buggy-version/src.com.evensgn.emcompiler.backend.RegLivelinessAnalysis.java", "BodyUseAPI": [], "Fixed commit": "e097c78d8bcab154bdaad32d3ce019136457098a", "Url": "https://api.github.com/repos/Evensgn/EM-Compiler", "Date": "2018-06-05T21:07:38Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getDatabaseVersion()) >= 3) sql = ((((\"select prc.rdb$procedure_name,\\n\" + (((((((((((((((((((((((((((((((((((\"prc.rdb$procedure_source,\\n\" + \"prc.rdb$description, \\n\") + \"pp.rdb$parameter_name,\\n\") + \"pp.rdb$parameter_type,\\n\") + \"fs.rdb$field_name, \\n\") + \"fs.rdb$field_type, \\n\") + \"fs.rdb$field_length, \\n\") + \"fs.rdb$field_scale, \\n\") + \"fs.rdb$field_sub_type, \\n\") + \"fs.rdb$segment_length as segment_length, \\n\") + \"fs.rdb$dimensions, \\n\") + \"cr.rdb$character_set_name as character_set_name, \\n\") + \"co.rdb$collation_name, \\n\") + \"pp.rdb$parameter_number,\\n\") + \"fs.rdb$character_length, \\n\") + \"pp.rdb$description,\\n\") + \"pp.rdb$default_source as default_source,\\n\") + \"fs.rdb$field_precision, \\n\") + \"pp.rdb$parameter_mechanism as AM,\\n\") + \"pp.rdb$field_source as FS,\\n\") + \"fs.rdb$default_source, \\n\") + \"pp.rdb$null_flag as null_flag,\\n\") + \"pp.rdb$relation_name as RN,\\n\") + \"pp.rdb$field_name as FN,\\n\") + \"co2.rdb$collation_name, \\n\") + \"cr.rdb$default_collate_name, \\n\") + \"prc.rdb$engine_name, \\n\") + \"prc.rdb$entrypoint \\n\") + \"from rdb$procedures prc\\n\") + \"left join rdb$procedure_parameters pp on pp.rdb$procedure_name = prc.rdb$procedure_name\\n\") + \"and (pp.rdb$package_name is null)\\n\") + \"left join rdb$fields fs on fs.rdb$field_name = pp.rdb$field_source\\n\") + \"left join rdb$character_sets cr on fs.rdb$character_set_id = cr.rdb$character_set_id \\n\") + \"left join rdb$collations co on ((fs.rdb$collation_id = co.rdb$collation_id) and (fs.rdb$character_set_id = co.rdb$character_set_id)) \\n\") + \"left join rdb$collations co2 on ((pp.rdb$collation_id = co2.rdb$collation_id) and (fs.rdb$character_set_id = co2.rdb$character_set_id))\\n\") + \"where prc.rdb$procedure_name = '\")) + name) + \"\\'\\n\") + \"and (prc.rdb$package_name is null) \\n\") + \"order by pp.rdb$parameter_number\"; else sql = (((\"select prc.rdb$procedure_name,\\n\" + ((((((((((((((((((((((((((((((((\"prc.rdb$procedure_source,\\n\" + \"prc.rdb$description, \\n\") + \"pp.rdb$parameter_name,\\n\") + \"pp.rdb$parameter_type,\\n\") + \"fs.rdb$field_name, \\n\") + \"fs.rdb$field_type, \\n\") + \"fs.rdb$field_length, \\n\") + \"fs.rdb$field_scale, \\n\") + \"fs.rdb$field_sub_type, \\n\") + \"fs.rdb$segment_length as segment_length, \\n\") + \"fs.rdb$dimensions, \\n\") + \"cr.rdb$character_set_name as character_set_name, \\n\") + \"co.rdb$collation_name, \\n\") + \"pp.rdb$parameter_number,\\n\") + \"fs.rdb$character_length, \\n\") + \"pp.rdb$description,\\n\") + \"pp.rdb$default_source as default_source,\\n\") + \"fs.rdb$field_precision, \\n\") + \"pp.rdb$parameter_mechanism as AM,\\n\") + \"pp.rdb$field_source as FS,\\n\") + \"fs.rdb$default_source, \\n\") + \"pp.rdb$null_flag as null_flag,\\n\") + \"pp.rdb$relation_name as RN,\\n\") + \"pp.rdb$field_name as FN,\\n\") + \"co2.rdb$collation_name, \\n\") + \"cr.rdb$default_collate_name \\n\") + \"from rdb$procedures prc\\n\") + \"left join rdb$procedure_parameters pp on pp.rdb$procedure_name = prc.rdb$procedure_name\\n\") + \"left join rdb$fields fs on fs.rdb$field_name = pp.rdb$field_source\\n\") + \"left join rdb$character_sets cr on fs.rdb$character_set_id = cr.rdb$character_set_id \\n\") + \"left join rdb$collations co on ((fs.rdb$collation_id = co.rdb$collation_id) and (fs.rdb$character_set_id = co.rdb$character_set_id)) \\n\") + \"left join rdb$collations co2 on ((pp.rdb$collation_id = co2.rdb$collation_id) and (fs.rdb$character_set_id = co2.rdb$character_set_id))\\n\") + \"where prc.rdb$procedure_name = '\")) + name) + \"\\'\\n\") + \"order by pp.rdb$parameter_number\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5702/buggy-version/src.org.executequery.databaseobjects.impl.DefaultDatabaseExecutable.java", "BodyUseAPI": [], "Fixed commit": "43b14f89add362207cf318820f44f48177488aa8", "Url": "https://api.github.com/repos/red-soft-ru/redexpert", "Date": "2018-02-05T14:40:07Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controllers.TeamController.getAllTeams(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((teamsOfUpdatingChamp.size()) < 2) { other.ConsoleHelper.writeEmptyLine(); other.ConsoleHelper.writeMessage(\"Not enought teams for a match.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2708/buggy-version/src.main.java.controllers.ChampionshipController.java", "BodyUseAPI": [], "Fixed commit": "257c9507f86ca46daddc1647f07dfbbd7fdee9cb", "Url": "https://api.github.com/repos/Fargys/SoccerStatWeb", "Date": "2018-02-23T07:57:46Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (communicationLayer.isRoot()) { token = new ibis.ipl.apps.safraExperiment.safra.faultSensitive.TokenFS(0, ((communicationLayer.getIbisCount()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9855/buggy-version/ibisImplementation.src.ibis.ipl.apps.safraExperiment.safra.faultSensitive.SafraFS.java", "BodyUseAPI": [], "Fixed commit": "f5442dbb53401654df3973c0f64d7df4a2ac9d21", "Url": "https://api.github.com/repos/PerFuchs/safra-termination-detection-fault-tolerant", "Date": "2018-10-04T11:03:07Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((linedText.length()) > 0) { textOutput.setText(linedText.toString().substring(0, ((linedText.length()) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7636/buggy-version/SimpleTextGUI.src.com.saturn91.simple.gui.GUI.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.StringBuilder.toString()", "java.lang.StringBuilder.length()", "javax.swing.JTextPane.setText(java.lang.String)"], "Fixed commit": "7bdec53ce19bf19aa45e144558fa4d6d1a07c002", "Url": "https://api.github.com/repos/Saturn91/SimpleGUI", "Date": "2018-02-07T19:11:47Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mShowAztecEditor) { android.view.View overlay = findViewById(R.id.view_overlay); android.widget.RelativeLayout.LayoutParams layoutParams = ((android.widget.RelativeLayout.LayoutParams) (overlay.getLayoutParams())); layoutParams.bottomMargin = getResources().getDimensionPixelOffset(R.dimen.aztec_format_bar_height); overlay.setLayoutParams(layoutParams); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9365/buggy-version/WordPress.src.main.java.org.wordpress.android.ui.posts.EditPostActivity.java", "BodyUseAPI": [], "Fixed commit": "4d2016c8177a18876be72be34d5f6b04d15b2cdc", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2018-01-12T01:42:15Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isDFA) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5362/buggy-version/src.main.java.practical.automata.calculations.indicate_dfa.DfaIndicator.java", "BodyUseAPI": [], "Fixed commit": "36de3d79da4a6b8c5f0ecfbf46023e0fdf606437", "Url": "https://api.github.com/repos/dmarkov00/practical-automata", "Date": "2018-07-05T15:08:31Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.O)) { @android.annotation.SuppressLint(\"WrongConstant\") android.app.NotificationChannel notificationChannel = new android.app.NotificationChannel(NOTIFICATION_CHANNEL_ID, \"My Notifications\", android.app.NotificationManager.IMPORTANCE_MAX); notificationChannel.setDescription(\"Channel description\"); notificationChannel.enableLights(true); notificationChannel.setLightColor(Color.CYAN); notificationChannel.setVibrationPattern(new long[]{ 0, 1000, 500, 1000 }); notificationChannel.enableVibration(true); notificationManager.createNotificationChannel(notificationChannel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/33/buggy-version/app.src.main.java.com.example.user.minipro5997secondapp.controller.MyReceiver.java", "BodyUseAPI": [], "Fixed commit": "ccc62edec9f2b3573bf614e62fee3113f19f5adc", "Url": "https://api.github.com/repos/neriyabl/mini-pro-android-5779-second-app", "Date": "2018-09-04T18:37:15Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flagForBackslash) { word.append(letter); flagForBackslash = false; }else if ((letter == '\\\\') && ((original[0]) == '\"')) { word.append(letter); }else if (letter == '\\\\') { flagForBackslash = true; }else if (flagChecker(letter, '\"', (!flagForQuote), false)) { flagForQuote = false; word.append(letter); }else if (letter == '\"') { flagForQuote = true; }else { word.append(letter); flagForBackslash = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4599/buggy-version/SA.src.edu.hm.peither_bartolov.a04_resiliance.MyCSVReaderDeluxe.java", "BodyUseAPI": [], "Fixed commit": "2fab424f141683180cd4d8f9b39210dc1668f630", "Url": "https://api.github.com/repos/EduardBartolovic/SA", "Date": "2018-04-19T12:15:22Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.holger.mashpit.prefs.TempChartSettings.findPreference(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (etp != null) { etp.setSummary(prefs.getString(key, \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2626/buggy-version/app.src.main.java.com.holger.mashpit.prefs.TempChartSettings.java", "BodyUseAPI": ["android.preference.Preference.setSummary(prefs.getString(key, \"\"))"], "Fixed commit": "e8e84e31f90c5a255c8c48111cfcf00dcb26d0cf", "Url": "https://api.github.com/repos/HolgerWirth/MashPit", "Date": "2018-01-05T14:03:22Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.nio.file.Files.exists(java.nio.file.Paths.get(((parser.FilesController.SCHEDULE_PATH) + \"aktualny.xlsx\")))) { parser.FilesController.renameFile(((parser.FilesController.SCHEDULE_PATH) + \"aktualny.xlsx\"), (newName + \".xlsx\")); parser.FilesController.renameFile(((parser.FilesController.DATA_INFO_PATH) + \"aktualny\"), (newName + \"\")); java.nio.file.Files.copy(java.nio.file.Paths.get(((parser.FilesController.DATA_INFO_PATH) + newName)), java.nio.file.Paths.get(((parser.FilesController.DATA_INFO_PATH) + \"aktualny\")), java.nio.file.StandardCopyOption.REPLACE_EXISTING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/89/buggy-version/src.main.java.parser.FilesController.java", "BodyUseAPI": ["parser.FilesController.renameFile(java.lang.String,java.lang.String)"], "Fixed commit": "80a5d060965e8927f7e44f713af56d291b31cc00", "Url": "https://api.github.com/repos/karager09/Web_Excel_filter_for_schedule", "Date": "2018-05-15T12:47:40Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((carte) != null) { carte.LireGraphe(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4841/buggy-version/TP1.tp1-graphes.src.Menu.java", "BodyUseAPI": [], "Fixed commit": "6535968b5bb9d19c7aaa655e244d54089c4675f8", "Url": "https://api.github.com/repos/julierousseau/LOG2810", "Date": "2018-03-01T20:29:56Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, com.shlezy.locationserver.Main.ClientThread>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (otherClient == null) out.println(\"locResult:Error3\"); else out.println((((\"locResult:\" + otherIP) + \";\") + (clients.get(otherIP).checkLocation(clientLocation))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2266/buggy-version/LocationServer.src.com.shlezy.locationserver.Main.java", "BodyUseAPI": [], "Fixed commit": "ddd2622143cfcbd3547c696a4c41eae00765d34b", "Url": "https://api.github.com/repos/YiftShlez/MyLocationServer", "Date": "2018-02-10T17:50:26Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((aca.com.remote.tunes.daap.Status.currentMusicService.contains(\"SHOUTcast\")) != true) { if ((progressRemain) <= 0) { android.util.Log.d(aca.com.remote.tunes.daap.Status.TAG, \"suggesting that we fetch new song\"); fetchUpdate(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4689/buggy-version/app.src.main.java.aca.com.remote.tunes.daap.Status.java", "BodyUseAPI": [], "Fixed commit": "468526859b103ad420ffc7cce390866b334a3725", "Url": "https://api.github.com/repos/PATHozhentoudemajia/android_remote", "Date": "2018-01-24T08:16:40Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.child(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (postSnapshot.exists()) { com.mikechoch.prism.attribute.PrismPost prismPost = com.mikechoch.prism.helper.Helper.constructPrismPostObject(postSnapshot); prismPost.setPrismUser(prismUser); prismUserUploadedPostsArrayList.add(prismPost); }else { usersReference.child(prismUser.getUid()).child(Key.DB_REF_USER_UPLOADS).child(postId).removeValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1321/buggy-version/app.src.main.java.com.mikechoch.prism.activity.PrismUserProfileActivity.java", "BodyUseAPI": ["com.mikechoch.prism.helper.Helper.constructPrismPostObject(com.google.firebase.database.DataSnapshot)"], "Fixed commit": "b437a784e34509b0047bf75d1128c7f7a44d1f73", "Url": "https://api.github.com/repos/mikechoch/Prism", "Date": "2018-02-17T02:49:32Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((progress % 1000000) == 0) { java.lang.System.out.println(((\"Read \" + progress) + \" lines\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7854/buggy-version/src.DiffCalc.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "64b4ba7bc547a3ec14ba6e1829f582d70c2fbb56", "Url": "https://api.github.com/repos/HunterNacho/sparql-versioning", "Date": "2018-08-24T16:33:55Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(DBConstants.KEY.DATE_DOSE_ONE_GIVEN)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(dateDoseOneGiven)) { doseOneGivenTextView.setText(java.lang.String.format(context.getString(R.string.dose_given_date), Constants.HPV_DOSE.NUMBER_1, org.smartregister.ug.hpv.util.Utils.formatDate(dateDoseOneGiven))); doseOneGivenTextView.setVisibility(View.VISIBLE); java.lang.String locationDoseOne = patientDetails.get(DBConstants.KEY.DOSE_ONE_GIVEN_LOCATION); if (org.apache.commons.lang3.StringUtils.isNotBlank(locationDoseOne)) { locationTextView.setVisibility(View.VISIBLE); locationTextView.setText(java.lang.String.format(context.getString(R.string.patient_location), org.apache.commons.lang3.StringUtils.capitalize(org.smartregister.ug.hpv.helper.LocationHelper.getInstance().getOpenMrsLocationName(locationDoseOne)))); } renderUndoVaccinationButton(true, undoVaccineButton); }else if (org.apache.commons.lang3.StringUtils.isBlank(dateDoseOneGiven)) { doseOneGivenTextView.setVisibility(View.GONE); locationTextView.setVisibility(View.GONE); followUpView.setEnabled(true); renderUndoVaccinationButton(false, undoVaccineButton); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3604/buggy-version/opensrp-uganda-hpv.src.main.java.org.smartregister.ug.hpv.helper.view.RenderPatientFollowupCardHelper.java", "BodyUseAPI": ["org.smartregister.ug.hpv.util.Utils.formatDate(java.lang.String)", "org.apache.commons.lang3.StringUtils.isBlank(java.lang.String)", "java.lang.String.format(context.getString(R.string.dose_given_date),Constants.HPV_DOSE.NUMBER_1,org.smartregister.ug.hpv.util.Utils.formatDate(dateDoseOneGiven))", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "928c5c4debcf779aaf9793501280309a44eba6e5", "Url": "https://api.github.com/repos/OpenSRP/opensrp-client-uganda-hpv", "Date": "2018-05-29T09:43:48Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSocket) != null) { mSocket.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7104/buggy-version/PtiChatApp.app.src.main.java.fr.centralesupelec.ptichatapp.NativeSocketClient.SocketClient.java", "BodyUseAPI": [], "Fixed commit": "43becba12ddb60ddc98ed4cb5350bb77eea55231", "Url": "https://api.github.com/repos/CS-POOA-2018/PtiChat", "Date": "2018-10-26T07:39:34Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mScc) != null) { mScc.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7104/buggy-version/PtiChatApp.app.src.main.java.fr.centralesupelec.ptichatapp.NativeSocketClient.SocketClient.java", "BodyUseAPI": [], "Fixed commit": "43becba12ddb60ddc98ed4cb5350bb77eea55231", "Url": "https://api.github.com/repos/CS-POOA-2018/PtiChat", "Date": "2018-10-26T07:39:34Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((bitmap.getHeight()) > 250) || ((bitmap.getWidth()) > 250)) { bitmap = android.graphics.Bitmap.createScaledBitmap(bitmap, 250, 250, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2603/buggy-version/app.src.main.java.com.example.owner.petbetter.activities.MessageActivity.java", "BodyUseAPI": ["android.graphics.Bitmap.createScaledBitmap(android.graphics.Bitmap,int,int,boolean)"], "Fixed commit": "1f79d4ed1dd4c8dbaf093f0d4e62c4a58c08313a", "Url": "https://api.github.com/repos/DwardTiro/PetBetter", "Date": "2018-03-07T20:08:59Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.receiver.isRunning()) { getLogger().debug(\"Receiver started successfully\"); }else { throw new java.lang.RuntimeException(\"Cannot start receiver\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2228/buggy-version/NHBCommonMessaging.src.main.java.com.nhb.messaging.zmq.producer.ZMQRPCProducer.java", "BodyUseAPI": [], "Fixed commit": "1605e65f342916d899c5695af2037ee6a97b6748", "Url": "https://api.github.com/repos/bachden/nhb-common", "Date": "2018-08-08T04:02:53Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result.hasErrors()) { modelAndView.setViewName(\"delivery_location\"); return modelAndView; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5209/buggy-version/SpringCaseStudy.src.main.java.com.syntinel.controller.ItemController.java", "BodyUseAPI": [], "Fixed commit": "b14444eb16f7bce950d846385e7fdf4be4582e6e", "Url": "https://api.github.com/repos/DManuel010/Syntel-Website", "Date": "2018-06-13T19:37:15Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eventsBasePaths.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4864/buggy-version/metastore.src.java.org.apache.hadoop.hive.metastore.HiveProtoEventsCleanerTask.java", "BodyUseAPI": [], "Fixed commit": "3f1c5fca79d11c155077b2f87bf7c212389c01d8", "Url": "https://api.github.com/repos/sankarh/hive", "Date": "2018-07-02T12:36:52Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hive.conf.HiveConf.getVar(org.apache.hadoop.conf.Configuration,ConfVars.HIVE_PROTO_EVENTS_BASE_PATH)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(hiveEventsDir)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4864/buggy-version/metastore.src.java.org.apache.hadoop.hive.metastore.HiveProtoEventsCleanerTask.java", "BodyUseAPI": [], "Fixed commit": "3f1c5fca79d11c155077b2f87bf7c212389c01d8", "Url": "https://api.github.com/repos/sankarh/hive", "Date": "2018-07-02T12:36:52Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((continuation) != null) { result += getContinuationProgramState().hashCode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3005/buggy-version/src.main.java.il.ac.bgu.cs.bp.bpjs.model.BThreadSyncSnapshot.java", "BodyUseAPI": [], "Fixed commit": "65f1a077d7c7847ce5dd3b2b7dd79b01fd3314c6", "Url": "https://api.github.com/repos/acepace/BPjs", "Date": "2018-05-02T15:28:30Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.nantes.eni.alterplanning.util.JwtTokenUtil.getIdFromToken(java.lang.String)", "javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((authorizationToken != null) && (id == null)) { response.sendError(HttpStatus.UNAUTHORIZED.value(), \"Token is not valid\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2161/buggy-version/src.main.java.fr.nantes.eni.alterplanning.config.filter.AuthenticationTokenFilter.java", "BodyUseAPI": [], "Fixed commit": "9da1ad9877b5076cf23bb2491758bd1b23948324", "Url": "https://api.github.com/repos/Ms2iSi7-Groupe-E/AlterPlanning", "Date": "2018-05-21T15:33:32Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((authorizationToken != null) && (!(\"Bearer\".equals(tokenType)))) { response.sendError(HttpStatus.UNAUTHORIZED.value(), (\"Token format is not valid. \" + \"Authorization header should have a token formatted like: Bearer <token>\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2161/buggy-version/src.main.java.fr.nantes.eni.alterplanning.config.filter.AuthenticationTokenFilter.java", "BodyUseAPI": [], "Fixed commit": "9da1ad9877b5076cf23bb2491758bd1b23948324", "Url": "https://api.github.com/repos/Ms2iSi7-Groupe-E/AlterPlanning", "Date": "2018-05-21T15:33:32Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.calcite.util.ImmutableBitSet.shift(int)", "org.apache.calcite.rex.RexNode.getIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(belowAggregateKey.get(idx))) { projects.add(singleton); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1563/buggy-version/core.src.main.java.org.apache.calcite.rel.rules.AggregateJoinTransposeRule.java", "BodyUseAPI": [], "Fixed commit": "d4d46e122ea41ab0824905cfc5a65ff61cda449b", "Url": "https://api.github.com/repos/hsyuan/calcite", "Date": "2018-04-24T22:28:31Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (allStories.isEmpty()) { allStories.addAll(stories); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8114/buggy-version/tools.storyteller.StoryWriter.java", "BodyUseAPI": ["java.util.List<tools.storyteller.service.Protos.Story>.addAll(java.util.List<tools.storyteller.service.Protos.Story>)"], "Fixed commit": "d9cbdaa1b2fd1ddd1b0ea602a80b26f118652d8e", "Url": "https://api.github.com/repos/hasadna/hasadna", "Date": "2018-06-06T17:22:27Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((a == 0) && (b == 0)) throw new java.lang.IllegalArgumentException(\"One of the arguments should be nonzero\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8547/buggy-version/src.algorithms.numbers.EuclideanAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "c6dec6e5313c677728882d37559d5b0be661a8cd", "Url": "https://api.github.com/repos/aTan-aka-Xellos/java-algorithms", "Date": "2018-10-15T13:51:26Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mjr.extraplanets.Config.USE_DEFAULT_BOSSES) return new com.mjr.extraplanets.tileEntities.dungeonSpawners.TileEntityDungeonSpawnerErisDefault(); else return new com.mjr.extraplanets.tileEntities.dungeonSpawners.TileEntityDungeonSpawnerEris();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4820/buggy-version/src.main.java.com.mjr.extraplanets.blocks.dungeonSpawners.BlockErisDungeonSpawner.java", "BodyUseAPI": [], "Fixed commit": "5e2d4f47dbe33497988f40d539f32fe4bebba0a0", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-02-01T19:57:31Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ballerinalang.mime.util.EntityBodyHandler.getByteChannel(org.ballerinalang.model.values.BStruct)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (byteChannel != null) { byteChannelStruct.addNativeData(IOConstants.BYTE_CHANNEL_NAME, byteChannel); }else { if ((org.ballerinalang.mime.util.EntityBodyHandler.getMessageDataSource(entityStruct)) != null) { return this.getBValues(org.ballerinalang.mime.util.MimeUtil.createEntityError(context, (\"Byte channel is not available but payload can be obtain either as xml, \" + \"json, string or blob type\"))); }else if ((org.ballerinalang.mime.util.EntityBodyHandler.getBodyPartArray(entityStruct)) != null) { return this.getBValues(org.ballerinalang.mime.util.MimeUtil.createEntityError(context, \"Byte channel is not available since payload contains a set of body parts\")); }else { return this.getBValues(org.ballerinalang.mime.util.MimeUtil.createEntityError(context, \"Byte channel is not available as payload\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5788/buggy-version/stdlib.ballerina-mime.src.main.java.org.ballerinalang.mime.nativeimpl.GetByteChannel.java", "BodyUseAPI": ["org.ballerinalang.model.values.BStruct.addNativeData(IOConstants.BYTE_CHANNEL_NAME,org.ballerinalang.nativeimpl.io.channels.base.Channel)"], "Fixed commit": "16f2c8a61e03565f18afac3663510afd25a0669b", "Url": "https://api.github.com/repos/arukshani/ballerina", "Date": "2018-03-05T10:30:51Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cronapi.rest.CronapiREST.translatePathVars(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((translationPath.filter) != null) { return cronapi.QueryManager.executeBlockly(query, \"FILTER\", translationPath.params).getObjectAsPOJOList(); }else { return cronapi.QueryManager.executeBlockly(query, \"GET\", translationPath.params).getObjectAsPOJOList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8431/buggy-version/src.main.java.cronapi.rest.CronapiREST.java", "BodyUseAPI": ["cronapi.QueryManager.executeBlockly(com.google.gson.JsonObject,java.lang.String,cronapi.Var[])", "cronapi.QueryManager.executeBlockly(query, \"GET\", translationPath.params).getObjectAsPOJOList()", "cronapi.QueryManager.executeBlockly(query, \"FILTER\", translationPath.params).getObjectAsPOJOList()", "cronapi.QueryManager.executeBlockly(com.google.gson.JsonObject,java.lang.String,cronapi.Var[])"], "Fixed commit": "9370bb95296fce1e8f32abd1e03db9240065a178", "Url": "https://api.github.com/repos/technecloud/cronapi-java", "Date": "2018-05-10T18:22:34Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((translationPath.params.length) == 0) && ((translationPath.filter) != null)) && ((translationPath.filter.getItems()) != null)) && ((translationPath.filter.getItems().size()) > 0)) { translationPath.params = toVarArray(translationPath.filter.getItems()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8431/buggy-version/src.main.java.cronapi.rest.CronapiREST.java", "BodyUseAPI": ["cronapi.rest.CronapiREST.toVarArray(translationPath.filter.getItems())", "cronapi.database.DataSourceFilter.getItems()"], "Fixed commit": "9370bb95296fce1e8f32abd1e03db9240065a178", "Url": "https://api.github.com/repos/technecloud/cronapi-java", "Date": "2018-05-10T18:22:34Z"},
{"Line": "=>607", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(item.isDisposed())) list.add(item.getText());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9286/buggy-version/eu.stamp.eclipse.descartes.wizard.src.eu.stamp.wp4.descartes.wizard.DescartesWizardPage1.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(item.getText())", "org.eclipse.swt.widgets.TreeItem.getText()"], "Fixed commit": "a91befac68c357141797a2b8b7c3274ff0376ae5", "Url": "https://api.github.com/repos/STAMP-project/stamp-ide", "Date": "2018-10-08T08:42:27Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fossasia.phimpme.gallery.util.PreferenceUtil.getString(getString(R.string.upload_view_choice),getString(R.string.last_first))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (choiceofdisply.equals(getString(R.string.last_first))) { uploadHistoryAdapter.setResults(loadData(getString(R.string.last_first))); }else if (choiceofdisply.equals(getString(R.string.latest_first))) { uploadHistoryAdapter.setResults(loadData(getString(R.string.latest_first))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9129/buggy-version/app.src.main.java.org.fossasia.phimpme.uploadhistory.UploadHistory.java", "BodyUseAPI": ["java.lang.String.equals(getString(R.string.latest_first))"], "Fixed commit": "b3a9f832fc3fa98201193d3918d05dd5ba08dad5", "Url": "https://api.github.com/repos/sauravvishal8797/phimpme-android", "Date": "2018-06-29T09:13:23Z"},
{"Line": "=>748", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!(favphotomode)) && (!(allPhotoMode))) && (upoadhis)) { int c = current_image_pos; realm = io.realm.Realm.getDefaultInstance(); realm.executeTransaction(new io.realm.Realm.Transaction() { @java.lang.Override public void execute(io.realm.Realm realm) { io.realm.RealmResults<org.fossasia.phimpme.data.local.UploadHistoryRealmModel> uploadHistoryImagesModels = realm.where(org.fossasia.phimpme.data.local.UploadHistoryRealmModel.class).equalTo(\"pathname\", uploadhistory.get(current_image_pos).getPath()).findAll(); uploadHistoryImagesModels.deleteAllFromRealm(); } }); deletefromuploadhistorylist(uploadhistory.get(current_image_pos).getPath()); size_all = uploadhistory.size(); if ((size_all) > 0) { adapter.notifyDataSetChanged(); getSupportActionBar().setTitle((((((c + 1) + \" \") + (getString(R.string.of))) + \" \") + (size_all))); org.fossasia.phimpme.utilities.SnackBarHandler.show(parentView, getApplicationContext().getString(R.string.photo_deleted_from_fav_msg)); }else { onBackPressed(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9129/buggy-version/app.src.main.java.org.fossasia.phimpme.gallery.activities.SingleMediaActivity.java", "BodyUseAPI": [], "Fixed commit": "b3a9f832fc3fa98201193d3918d05dd5ba08dad5", "Url": "https://api.github.com/repos/sauravvishal8797/phimpme-android", "Date": "2018-06-29T09:13:23Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((terminal.getModifier()) & ((javax0.geci.fluent.tree.Node.OPTIONAL) | (javax0.geci.fluent.tree.Node.ZERO_OR_MORE))) != 0) { actualExtendedInterfaces = new java.util.HashSet<>(extendedInterfaces); actualExtendedInterfaces.add(nextInterface); }else { actualExtendedInterfaces = new java.util.HashSet<>(extendedInterfaces); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2414/buggy-version/core.src.main.java.javax0.geci.fluent.internal.ClassBuilder.java", "BodyUseAPI": [], "Fixed commit": "4383e51c7bf2a0485708d0e97dfbd622d9852c63", "Url": "https://api.github.com/repos/verhas/javageci", "Date": "2018-10-19T17:06:05Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(actualExtendedInterfaces.isEmpty())) { extendsList = \" extends \" + (java.lang.String.join(\",\", actualExtendedInterfaces)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2414/buggy-version/core.src.main.java.javax0.geci.fluent.internal.ClassBuilder.java", "BodyUseAPI": ["java.lang.String.join(java.lang.String,java.util.Set<java.lang.String>)"], "Fixed commit": "4383e51c7bf2a0485708d0e97dfbd622d9852c63", "Url": "https://api.github.com/repos/verhas/javageci", "Date": "2018-10-19T17:06:05Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (o == (org.json.JSONObject.NULL)) o = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9324/buggy-version/server.src.main.java.lsfusion.server.data.type.AbstractType.java", "BodyUseAPI": [], "Fixed commit": "0b83658658cea8d1f3ebea1ca403f0533dd40b18", "Url": "https://api.github.com/repos/lsfusion/platform", "Date": "2018-10-04T16:04:58Z"},
{"Line": "=>662", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.noiseContext.getNotConsideredTransitVehicleIDs().contains(vehicleId)) { }else { org.matsim.contrib.noise.events.NoiseEventCaused noiseEvent = new org.matsim.contrib.noise.events.NoiseEventCaused(eventTime, currentTimeBinEndTime, this.noiseContext.getLinkId2vehicleId2lastEnterTime().get(linkId).get(vehicleId), this.noiseContext.getVehicleId2PersonId().get(vehicleId), vehicleId, amount, linkId); events.processEvent(noiseEvent); if (this.collectNoiseEvents) { this.noiseEventsCaused.add(noiseEvent); } totalCausedNoiseCost = (totalCausedNoiseCost) + amount; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6411/buggy-version/contribs.noise.src.main.java.org.matsim.contrib.noise.handler.NoiseTimeTracker.java", "BodyUseAPI": ["this.noiseContext.getLinkId2vehicleId2lastEnterTime().get(linkId).get(org.matsim.api.core.v01.Id<org.matsim.vehicles.Vehicle>)", "this.noiseContext.getVehicleId2PersonId().get(org.matsim.api.core.v01.Id<org.matsim.vehicles.Vehicle>)", "this.noiseContext.getLinkId2vehicleId2lastEnterTime().get(org.matsim.api.core.v01.Id<org.matsim.api.core.v01.network.Link>)", "org.matsim.contrib.noise.data.NoiseContext.getLinkId2vehicleId2lastEnterTime()", "org.matsim.contrib.noise.data.NoiseContext.getVehicleId2PersonId()"], "Fixed commit": "43a9018380c40709658d600890d106edaa77c137", "Url": "https://api.github.com/repos/matsim-org/matsim", "Date": "2018-07-25T10:24:36Z"},
{"Line": "=>697", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dspace.app.webui.jsptag.ItemTag.getViewOptions(org.dspace.core.Context,javax.servlet.http.HttpServletRequest,org.dspace.app.webui.jsptag.ItemTag,java.lang.String,bitstreams[k])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((viewOptions.size()) > 2) { out.print(\"<li role=\\\"separator\\\" class=\\\"divider\\\"></li> \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2438/buggy-version/dspace-jspui.src.main.java.org.dspace.app.webui.jsptag.ItemTag.java", "BodyUseAPI": [], "Fixed commit": "522d920c804203a7b0e5dc177e5fcb3183f8741b", "Url": "https://api.github.com/repos/4Science/DSpace", "Date": "2018-06-06T14:37:46Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (amo_str.matches(\"\")) { android.widget.Toast.makeText(this, (\"devided amount \" + (total_amount)), Toast.LENGTH_SHORT).show(); }else { temp = java.lang.Integer.parseInt(amo_str); amo[i] = temp; total_amount += amo[i]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1978/buggy-version/app.src.main.java.com.example.dell.myapplication.friendslist.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "0534568cbfe4644183cc312530d025821c63c31f", "Url": "https://api.github.com/repos/Jasmit6310/Appvala", "Date": "2018-06-04T20:21:56Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(txtDisplay.getText().contains(\".\"))) actOnNumber('.');", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8400/buggy-version/src.view.frmDisplay.java", "BodyUseAPI": [], "Fixed commit": "21310d05abcac4f6e6c2e08f8f53618b05ea1344", "Url": "https://api.github.com/repos/hoanthiennguyen/SimpleCalculator", "Date": "2018-08-17T12:26:04Z"},
{"Line": "=>564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((opp) == '=') tmp = kq;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8400/buggy-version/src.view.frmDisplay.java", "BodyUseAPI": [], "Fixed commit": "21310d05abcac4f6e6c2e08f8f53618b05ea1344", "Url": "https://api.github.com/repos/hoanthiennguyen/SimpleCalculator", "Date": "2018-08-17T12:26:04Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hibernate.Session.createQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((query.uniqueResult()) != null) { response = ((hibernate.User) (query.uniqueResult())).getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5953/buggy-version/src.main.java.dao.UserDAO.java", "BodyUseAPI": ["((hibernate.User) (query.uniqueResult())).getId()", "org.hibernate.query.Query.uniqueResult()"], "Fixed commit": "fcda48f8355423982bbf45be622522798f646ac1", "Url": "https://api.github.com/repos/oscarargueta98/POOSistema_NotasAPI", "Date": "2018-10-13T03:43:27Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.example.jeliu.bipawallet.UserInfo.UserInfoManager.getInst().isEmptyWallet()) { startActivity(new android.content.Intent(this, com.example.jeliu.bipawallet.Splash.WelcomeActivity.class)); finish(); return; }else { if (((getIntent().getData()) != null) && ((getIntent().getData().getQueryParameter(\"params\")) != null)) { scanDone(getIntent().getData().getQueryParameter(\"params\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6301/buggy-version/bipawallet.app.src.main.java.com.example.jeliu.bipawallet.Main.NavActivity.java", "BodyUseAPI": [], "Fixed commit": "f4b35fcbb7d0c6c150b02de84c34a003787b41f7", "Url": "https://api.github.com/repos/aaaking/androidProjects", "Date": "2018-08-20T10:43:41Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.aakriti.box.activity.ActivityAddRoom.3.getArrayOfAlreadyPairedBluetoothDevices()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((pairedRooms != null) && ((pairedRooms.size()) > 0)) { for (com.aakriti.box.model.Room searchDevice : pairedRooms) { if (!(searchDevice.getMacID().equalsIgnoreCase(bluetoothObject.getMacID()))) { rooms.add(bluetoothObject); unpairedBTDevices.add(device); } } }else { rooms.add(bluetoothObject); unpairedBTDevices.add(device); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2952/buggy-version/app.src.main.java.com.aakriti.box.activity.ActivityAddRoom.java", "BodyUseAPI": [], "Fixed commit": "5de59ad60517f9783392f4200300ed9ab7505553", "Url": "https://api.github.com/repos/raisahab-ritwik/BoX", "Date": "2018-06-04T07:29:10Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type.getSort()) != (org.objectweb.asm.Type.OBJECT)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8344/buggy-version/src.main.java.de.thetaphi.forbiddenapis.ClassScanner.java", "BodyUseAPI": [], "Fixed commit": "b2479bfafb29d2e4dfe133baa16a686eac7a6a4c", "Url": "https://api.github.com/repos/policeman-tools/forbidden-apis", "Date": "2018-09-16T21:49:45Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String,message.getHeader(),message.getBody(),java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rowsAffected <= 0) { throw new org.forum.api.exception.DataNotFoundException(org.forum.api.commons.ErrorUtility.getDataNotFoundExceptionMessage(id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5700/buggy-version/src.main.java.org.forum.api.jdbc.dao.MessageDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "4d5312ddd32e9b63dc90c0851d26f6ce091a2444", "Url": "https://api.github.com/repos/muradbax/forum-rest-api", "Date": "2018-04-14T19:27:54Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String,java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rowsAffected <= 0) { throw new org.forum.api.exception.DataNotFoundException(org.forum.api.commons.ErrorUtility.getDataNotFoundExceptionMessage(id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5700/buggy-version/src.main.java.org.forum.api.jdbc.dao.MessageDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "4d5312ddd32e9b63dc90c0851d26f6ce091a2444", "Url": "https://api.github.com/repos/muradbax/forum-rest-api", "Date": "2018-04-14T19:27:54Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getTileEntity(net.minecraft.util.math.BlockPos)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (te != null) te.invalidate();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/932/buggy-version/src.main.java.dalapo.factech.block.BlockBase.java", "BodyUseAPI": ["net.minecraft.tileentity.TileEntity.invalidate()"], "Fixed commit": "0e72274848ca29e9fe2dab0dd7fad555d247fca9", "Url": "https://api.github.com/repos/dalapo/FactoryTech", "Date": "2018-01-12T18:07:26Z"},
{"Line": "=>899", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["view.getForm().getCustomField(Folder.OPENING_DATE)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (openingDateField != null) { setFieldReadonly(openingDateField, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1303/buggy-version/app.src.com.constellio.app.modules.rm.ui.pages.folder.AddEditFolderPresenter.java", "BodyUseAPI": ["com.constellio.app.modules.rm.ui.pages.folder.AddEditFolderPresenter.setFieldReadonly(com.constellio.app.modules.rm.ui.components.folder.fields.FolderOpeningDateField,boolean)"], "Fixed commit": "aa6304110c44aea4c65011cb21a4ae5a3aa360a8", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2018-01-15T20:42:50Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isHDMI) { shell.run(((\"cat '\" + (emicbHdmi)) + \"' > /dev/elan-iap\")); }else { shell.run(((\"cat '\" + (emicbNormal)) + \"' > /dev/elan-iap\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5754/buggy-version/app.src.main.java.com.parrotgeek.parrotmodfloapp.MyService.java", "BodyUseAPI": [], "Fixed commit": "f04011984495ffae3197be84185e8dc39701de8b", "Url": "https://api.github.com/repos/parrotgeek1/ParrotMod_Nexus_7_2013", "Date": "2018-03-25T00:07:58Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (source != null) { if (source instanceof java.util.Date) { return ((java.util.Date) (source)); }else if (source instanceof java.lang.String) { if (org.apache.commons.lang3.StringUtils.isNotBlank(((java.lang.String) (source)))) { java.util.Date result = org.structr.schema.parser.DatePropertyParser.parse(((java.lang.String) (source)), format); if (result != null) { return result; } throw new org.structr.common.error.FrameworkException(422, (\"Cannot parse input for property \" + (jsonName())), new org.structr.common.error.DateFormatToken(declaringClass.getSimpleName(), this)); } }else if (source.getClass().getName().equals(\"org.mozilla.javascript.NativeDate\")) { final java.lang.Double value = org.mozilla.javascript.ScriptRuntime.toNumber(source); return new java.util.Date(value.longValue()); }else { throw new org.structr.common.error.FrameworkException(422, (((\"Unkown input type for date property \" + (jsonName())) + \": \") + (source.getClass().getName())), new org.structr.common.error.DateFormatToken(declaringClass.getSimpleName(), this)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2691/buggy-version/structr-core.src.main.java.org.structr.core.property.DateProperty.java", "BodyUseAPI": ["org.mozilla.javascript.ScriptRuntime.toNumber(java.lang.Object)", "java.lang.String.equals(java.lang.String)", "java.lang.Object.getClass()", "java.lang.Class<? extends java.lang.Object>.getName()", "java.lang.Object.getClass()", "java.lang.Class<? extends java.lang.Object>.getName()"], "Fixed commit": "578a5e1d0fa782ef17a6a83f4d155c57cc0e1a13", "Url": "https://api.github.com/repos/structr/structr", "Date": "2018-04-09T13:16:31Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mFrameLayoutNoInternetConnection.getVisibility()) == (android.view.View.VISIBLE)) { mFrameLayoutNoInternetConnection.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8479/buggy-version/app.src.main.java.com.example.baeza.bakingapp.ui.view.SelectRecipeActivity.java", "BodyUseAPI": ["android.widget.FrameLayout.setVisibility(View.GONE)"], "Fixed commit": "4fb8614e8779ff4da9ea2c2a12e124f38c5cea54", "Url": "https://api.github.com/repos/cbaezenko/BakingApp", "Date": "2018-05-16T09:44:30Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.quartz.JobDataMap.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (rowVarsUnsorted != null) { rowVars.putAll(rowVarsUnsorted); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/163/buggy-version/maddash-server.src.main.java.net.es.maddash.jobs.RunCheckJob.java", "BodyUseAPI": ["net.es.maddash.checks.TemplateVariableMap.putAll(java.util.Map<java.lang.String, java.lang.String>)"], "Fixed commit": "bf81576a18b21ff6f135b943cf22ae00719d07bb", "Url": "https://api.github.com/repos/perfsonar/maddash", "Date": "2018-08-01T19:58:28Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.quartz.JobDataMap.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (colVarsUnsorted != null) { colVars.putAll(colVarsUnsorted); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/163/buggy-version/maddash-server.src.main.java.net.es.maddash.jobs.RunCheckJob.java", "BodyUseAPI": ["net.es.maddash.checks.TemplateVariableMap.putAll(java.util.Map<java.lang.String, java.lang.String>)"], "Fixed commit": "bf81576a18b21ff6f135b943cf22ae00719d07bb", "Url": "https://api.github.com/repos/perfsonar/maddash", "Date": "2018-08-01T19:58:28Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.eliavmenachi.myapplication.ViewModels.CityMallAndStoreViewModel.GetCityByCityId(currentUser.city,com.example.eliavmenachi.myapplication.Entities.ListData)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (city != null) { android.widget.ArrayAdapter<java.lang.String> adapterString = ((android.widget.ArrayAdapter<java.lang.String>) (spCity.getAdapter())); if (adapterString != null) { int selectedCityIndex = adapterString.getPosition(city.name); spCity.setSelection(selectedCityIndex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6543/buggy-version/app.src.main.java.com.example.eliavmenachi.myapplication.Fragments.EditUserProfileFragment.java", "BodyUseAPI": ["android.widget.ArrayAdapter<java.lang.String>.getPosition(city.name)"], "Fixed commit": "97fc665f1d6b8910d083e2fc8415e6f123353057", "Url": "https://api.github.com/repos/OrForte/Sale-App", "Date": "2018-08-01T19:53:27Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.eliavmenachi.myapplication.ViewModels.CityMallAndStoreViewModel.GetCityByCityId(user.city,com.example.eliavmenachi.myapplication.Entities.ListData)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (city != null) { android.widget.ArrayAdapter<java.lang.String> adapterString = ((android.widget.ArrayAdapter<java.lang.String>) (spCity.getAdapter())); if (adapterString != null) { int selectedCityIndex = adapterString.getPosition(city.name); spCity.setSelection(selectedCityIndex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6543/buggy-version/app.src.main.java.com.example.eliavmenachi.myapplication.Fragments.EditUserProfileFragment.java", "BodyUseAPI": ["android.widget.ArrayAdapter<java.lang.String>.getPosition(city.name)"], "Fixed commit": "97fc665f1d6b8910d083e2fc8415e6f123353057", "Url": "https://api.github.com/repos/OrForte/Sale-App", "Date": "2018-08-01T19:53:27Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!result) { dbFile.delete(); backupFile.renameTo(dbFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2773/buggy-version/app.src.main.java.ru.qdev.lnotes.ui.activity.QDVBackupActivity.java", "BodyUseAPI": [], "Fixed commit": "5b708df2460d55ca3a397c9fc1e47918ad0f09d6", "Url": "https://api.github.com/repos/wn1/LNotes", "Date": "2018-10-09T19:54:19Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["opencontacts.open.com.opencontacts.domain.Contact.getLastAccessed()", "opencontacts.open.com.opencontacts.domain.Contact.getLastAccessed()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((lastAccessedDate1 == null) && (lastAccessedDate2 == null)) return 0; else if (lastAccessedDate1 == null) return 1; else if (lastAccessedDate2 == null) return -1; else return lastAccessedDate2.compareTo(lastAccessedDate1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5915/buggy-version/app.src.main.java.opencontacts.open.com.opencontacts.ContactsListView.java", "BodyUseAPI": ["java.lang.String.compareTo(java.lang.String)"], "Fixed commit": "fc63f9583f03a6d46d2406b31b4189de666c0a43", "Url": "https://api.github.com/repos/sultanahamer/OpenContacts", "Date": "2018-01-18T21:31:39Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.nav_main)) { fragmentClass = com.example.myapplication.fragments.HomeFragment.class; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2730/buggy-version/app.src.main.java.com.example.myapplication.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "be0c4951225ed1b87e3610bde4ab33484f73e6bd", "Url": "https://api.github.com/repos/rachelbo/Yuda-new", "Date": "2018-05-24T22:16:17Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.context.ApplicationContext.getParentBeanFactory()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.springframework.beans.factory.ListableBeanFactory.class.isAssignableFrom(beanFactory.getClass())) { final java.util.Map<java.lang.String, T> candidate = ((org.springframework.beans.factory.ListableBeanFactory) (beanFactory)).getBeansOfType(type); if ((candidate.size()) > 0) { return candidate; } }else { final java.util.Map<java.lang.String, T> candidate = org.nrg.framework.services.ContextService._applicationContext.getBeansOfType(type); if ((candidate.size()) > 0) { return candidate; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7175/buggy-version/src.main.java.org.nrg.framework.services.ContextService.java", "BodyUseAPI": [], "Fixed commit": "4c30e1de8213833037f3d57fe5f0590b538fcaaa", "Url": "https://api.github.com/repos/kelseym/framework-events", "Date": "2018-08-21T16:00:12Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.ide.gradle.action.BuildServiceTaskAction.getFile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.liferay.ide.core.util.FileUtil.exists(classpathFile)) { org.eclipse.core.resources.IProject[] projects = com.liferay.ide.core.util.CoreUtil.getClasspathProjects(project); for (org.eclipse.core.resources.IProject project : projects) { java.util.List<org.eclipse.core.resources.IFolder> folders = com.liferay.ide.core.util.CoreUtil.getSourceFolders(org.eclipse.jdt.core.JavaCore.create(project)); if (folders.isEmpty()) { refresh = true; }else { try { project.refreshLocal(IResource.DEPTH_INFINITE, null); } catch (org.eclipse.core.runtime.CoreException ce) { } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7981/buggy-version/tools.plugins.com.liferay.ide.gradle.ui.src.com.liferay.ide.gradle.action.BuildServiceTaskAction.java", "BodyUseAPI": [], "Fixed commit": "2f1e7adeb5689533905d7af817f29e34a71f36dd", "Url": "https://api.github.com/repos/JoyeLuo/liferay-ide", "Date": "2018-02-06T03:41:11Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.getWidth()) != (prevWid)) || ((this.getHeight()) != (prevHeight))) { image = createImage(this.getSize().width, this.getSize().height); graphicsBuffer = image.getGraphics(); prevWid = this.getWidth(); prevHeight = this.getHeight(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4683/buggy-version/src.game.Game.java", "BodyUseAPI": [], "Fixed commit": "5cc75b7ac878fc69c7cbab98a6bdfd0ed8da891c", "Url": "https://api.github.com/repos/AlexanderADietrich/Grarpg", "Date": "2018-04-21T03:09:07Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((registry) != null) { com.netflix.servo.DefaultMonitorRegistry.getInstance().unregister(registry); globalRegistry.remove(registry); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4929/buggy-version/metrics.metrics-core.src.main.java.org.apache.servicecomb.metrics.core.DefaultRegistryInitializer.java", "BodyUseAPI": [], "Fixed commit": "ae25d4bbce40ac6470e8320c170dc9d8033aacd3", "Url": "https://api.github.com/repos/yhs0092/ServiceComb-Java-Chassis", "Date": "2018-06-20T16:06:34Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tokens == null) || (tokens.isEmpty())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8281/buggy-version/core.src.main.java.com.taobao.arthas.core.util.TokenUtils.java", "BodyUseAPI": [], "Fixed commit": "d8b843f1c68a5c24be73f3ba2f77ecdfb7fa6d63", "Url": "https://api.github.com/repos/alibaba/arthas", "Date": "2018-09-27T06:59:41Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tokens == null) || (tokens.isEmpty())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8281/buggy-version/core.src.main.java.com.taobao.arthas.core.util.TokenUtils.java", "BodyUseAPI": [], "Fixed commit": "d8b843f1c68a5c24be73f3ba2f77ecdfb7fa6d63", "Url": "https://api.github.com/repos/alibaba/arthas", "Date": "2018-09-27T06:59:41Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tokens == null) || (tokens.isEmpty())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8281/buggy-version/core.src.main.java.com.taobao.arthas.core.util.TokenUtils.java", "BodyUseAPI": [], "Fixed commit": "d8b843f1c68a5c24be73f3ba2f77ecdfb7fa6d63", "Url": "https://api.github.com/repos/alibaba/arthas", "Date": "2018-09-27T06:59:41Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (script != null) { cmd.setScripts(com.google.common.collect.Lists.newArrayList(script)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6671/buggy-version/core.src.main.java.com.flowci.core.job.manager.CmdManagerImpl.java", "BodyUseAPI": ["com.flowci.domain.Cmd.setScripts(com.google.common.collect.Lists.newArrayList(script))", "com.google.common.collect.Lists.newArrayList(java.lang.String)"], "Fixed commit": "2a1355d64328cbffac5ea74d238cd099d0e077be", "Url": "https://api.github.com/repos/FlowCI/flow-platform-x", "Date": "2018-10-17T08:29:27Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<org.apache.poi.ss.usermodel.Cell>.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (cell.getCellTypeEnum().equals(CellType.STRING)) { packItem.setVendorCode(cell.getRichStringCellValue().getString()); }else if (cell.getCellTypeEnum().equals(CellType.NUMERIC)) { packItem.setVendorCode(java.lang.String.valueOf(cell.getNumericCellValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3048/buggy-version/src.main.java.com.equuleus.conformityexplorer.controllers.UploadFileController.java", "BodyUseAPI": ["org.apache.poi.ss.usermodel.Cell.getRichStringCellValue()", "cell.getCellTypeEnum().equals(CellType.NUMERIC)", "java.lang.String.valueOf(cell.getNumericCellValue())", "cell.getRichStringCellValue().getString()", "com.equuleus.conformityexplorer.models.PackItemDTO.setVendorCode(cell.getRichStringCellValue().getString())", "org.apache.poi.ss.usermodel.Cell.getCellTypeEnum()", "org.apache.poi.ss.usermodel.Cell.getNumericCellValue()", "com.equuleus.conformityexplorer.models.PackItemDTO.setVendorCode(java.lang.String)"], "Fixed commit": "232ff4a9c51621d9761a19717a67801b4810209b", "Url": "https://api.github.com/repos/yottabyte-zettabyte/ConformityExplorer", "Date": "2018-09-04T23:26:34Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((((((packItem.getItemNo()) == null) && ((packItem.getTnved()) == null)) && ((packItem.getConformityType()) == null)) && ((packItem.getDeterminativeContent()) == null)) && ((packItem.getGender()) == null)) && ((packItem.getTrademark()) == null)) && ((packItem.getManufacturer()) == null)) && ((packItem.getCountry()) == null)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3048/buggy-version/src.main.java.com.equuleus.conformityexplorer.controllers.UploadFileController.java", "BodyUseAPI": [], "Fixed commit": "232ff4a9c51621d9761a19717a67801b4810209b", "Url": "https://api.github.com/repos/yottabyte-zettabyte/ConformityExplorer", "Date": "2018-09-04T23:26:34Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (firstLine.startsWith(\"package\")) { packageName = firstLine; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8999/buggy-version/src.com.github.wangjin252.commontools.RepositoryGeneratorAction.java", "BodyUseAPI": [], "Fixed commit": "e0f48ec4e6be34c46c7bed42fa57d871c7678e69", "Url": "https://api.github.com/repos/wangjin252/common-tools-plugin", "Date": "2018-08-03T02:46:36Z"},
{"Line": "=>441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event.getContents().contains(Material.BLAZE_POWDER)) { for (int i = 0; i < 4; i++) { if ((event.getContents().getItem(i).getType()) == (org.bukkit.Material.BLAZE_POWDER)) { event.setCancelled(true); return; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8930/buggy-version/civcraft.src.com.avrgaming.civcraft.listener.PlayerListener.java", "BodyUseAPI": ["event.getContents().getItem(int)", "org.bukkit.event.inventory.BrewEvent.getContents()", "org.bukkit.event.inventory.BrewEvent.setCancelled(boolean)", "event.getContents().getItem(i).getType()"], "Fixed commit": "9ddf8960af5c958d24c4abd0f6e9d73be5213c74", "Url": "https://api.github.com/repos/YourCoal/civcraft", "Date": "2018-03-28T01:46:51Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controllers.calculator.ExchangeRateCalculator.GetBestExchangeRate(exchangeRateRequest.GetSourceExchangeCurrencyIndex(),exchangeRateRequest.GetDestinationExchangeCurrencyIndex())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (bestRate > 0) { java.util.List<models.structures.ExchangeCurrencyVertex> bestPathTaken = exchangeRateCalculator.pathTaken(exchangeRateRequest.GetSourceExchangeCurrencyIndex(), exchangeRateRequest.GetDestinationExchangeCurrencyIndex()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2189/buggy-version/src.handlers.ExchangeRequestHandler.java", "BodyUseAPI": [], "Fixed commit": "339296247c11a829adccbdc2501d6f988d00953e", "Url": "https://api.github.com/repos/raghavendra-udyavar/JavaWorkshop", "Date": "2018-02-19T04:20:21Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.http.ResponseEntity<java.util.Map>.getBody()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((body.size()) > 0) { java.nio.file.Files.write(filePath, barcodesAndCustomerCodesForReportFileBytes, java.nio.file.StandardOpenOption.APPEND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8639/buggy-version/src.main.java.org.recap.camel.accessionreconciliation.AccessionReconciliationProcessor.java", "BodyUseAPI": [], "Fixed commit": "f6e1e7c11004217533f3f00421a8899622e4b47d", "Url": "https://api.github.com/repos/Hari-Krishnan19/scsb-circ", "Date": "2018-06-07T10:57:27Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Paths.get(((((((((accessionFilePath) + \"/\") + (institutionCode)) + \"/\") + (org.recap.ReCAPConstants.ACCESSION_RECONCILATION_FILE_NAME)) + (institutionCode)) + (simpleDateFormat.format(new java.util.Date()))) + \".csv\"))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (filePath.toFile().exists()) { noOfLinesInFile = java.nio.file.Files.readAllLines(filePath).size(); java.lang.System.out.println((\"No of lines: \" + (noOfLinesInFile))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8639/buggy-version/src.main.java.org.recap.camel.accessionreconciliation.AccessionReconciliationProcessor.java", "BodyUseAPI": ["java.nio.file.Files.readAllLines(java.nio.file.Path)", "java.util.List<java.lang.String>.size()"], "Fixed commit": "f6e1e7c11004217533f3f00421a8899622e4b47d", "Url": "https://api.github.com/repos/Hari-Krishnan19/scsb-circ", "Date": "2018-06-07T10:57:27Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.univaq.disim.sose.boredweekend.boredweekendservice.util.DateUtils.getDaysBetweenDates(event.getStart(),event.getEnd())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (eventDays.isEmpty()) { eventDays.add(event.getStart()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1117/buggy-version/boredWeekendService.src.main.java.it.univaq.disim.sose.boredweekend.boredweekendservice.controller.BoredWeekendProsumerCore.java", "BodyUseAPI": ["java.util.List<java.util.Date>.add(event.getStart())"], "Fixed commit": "d8b1b950b91efe11c80d6cbd89a81891739204eb", "Url": "https://api.github.com/repos/enGeneus/BoredWeekend", "Date": "2018-02-23T13:46:16Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.moment.logconverge.download.FileDownloaderManager.mLocalBroadcastManager) != null) { com.moment.logconverge.download.FileDownloaderManager.mLocalBroadcastManager.unregisterReceiver(com.moment.logconverge.download.FileDownloaderManager.mBroadcastReceiver); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1184/buggy-version/logconverge.src.main.java.com.moment.logconverge.download.FileDownloaderManager.java", "BodyUseAPI": [], "Fixed commit": "f1178fd600dd7552e9e788638371afb65f46a220", "Url": "https://api.github.com/repos/momentslz/logconverge", "Date": "2018-06-29T06:26:06Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(user.sendMsg(msg))) { java.lang.System.out.println(\"\\n\\u670d\\u52a1\\u5668\\u5df2\\u65ad\\u5f00\\u8fde\\u63a5!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7240/buggy-version/src.client.Main.java", "BodyUseAPI": [], "Fixed commit": "4982b63fc1d7316c6c7ac8171b8f6d2c66407b01", "Url": "https://api.github.com/repos/InverseBlade/ChatApp", "Date": "2018-01-13T05:52:53Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["services.TaskPersistenceService.fetchTaskByID(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((tasks.size()) == 1) { t = tasks.get(0); }else if ((tasks.size()) > 1) { controllers.Application.log.error(\"non unique ID found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5660/buggy-version/app.controllers.Application.java", "BodyUseAPI": ["java.util.List<models.Task>.get(int)", "java.util.List<models.Task>.size()"], "Fixed commit": "130296c0e242b4d93a400fc2daf9c88beffc76f4", "Url": "https://api.github.com/repos/AndrewJohnson150/play2torial", "Date": "2018-03-13T21:05:19Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isCancelled())) { processServerMessage(get()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5838/buggy-version/modules.desktop.src.com.haulmont.cuba.desktop.gui.SessionMessagesNotifier.java", "BodyUseAPI": [], "Fixed commit": "eab4e3f845a05001b2f8b741aefe8d7d135c2029", "Url": "https://api.github.com/repos/cuba-platform/cuba", "Date": "2018-01-26T12:36:27Z"},
{"Line": "=>540", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mikepenz.fastadapter.FastAdapter<com.mikepenz.materialdrawer.model.interfaces.IDrawerItem>.getItemById(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (res != null) { java.lang.Integer position = res.second; notifySelect((position != null ? position : -1), fireOnClick); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9897/buggy-version/library.src.main.java.com.mikepenz.materialdrawer.Drawer.java", "BodyUseAPI": [], "Fixed commit": "6c1915648bb86eb811804c8c25e745a060c2cbf6", "Url": "https://api.github.com/repos/mikepenz/MaterialDrawer", "Date": "2018-01-28T14:50:36Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mikepenz.fastadapter.FastAdapter<com.mikepenz.materialdrawer.model.interfaces.IDrawerItem>.getItemById(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (res != null) { return res.first; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9897/buggy-version/library.src.main.java.com.mikepenz.materialdrawer.Drawer.java", "BodyUseAPI": [], "Fixed commit": "6c1915648bb86eb811804c8c25e745a060c2cbf6", "Url": "https://api.github.com/repos/mikepenz/MaterialDrawer", "Date": "2018-01-28T14:50:36Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(parser.isAutoIncrement())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3838/buggy-version/dal-client.src.main.java.com.ctrip.platform.dal.dao.task.InsertTaskAdapter.java", "BodyUseAPI": [], "Fixed commit": "3a1f09e487b6157ebae16aaddc02e35127801481", "Url": "https://api.github.com/repos/ctripcorp/dal", "Date": "2018-10-14T09:37:41Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (additionalDiceTime) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2139/buggy-version/src.games.gsClever.Logic.MainLogic.java", "BodyUseAPI": [], "Fixed commit": "6b98ba2467cdd7282c0d4b102e5c6d38bf321c3b", "Url": "https://api.github.com/repos/nicoonator/gsclever", "Date": "2018-07-15T16:54:17Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((merchant.getAppKey()) == 10000L) { rowValueList.add(\"H5:\u5851\u6599\u59d0\u59b9\u60c5\"); }else if ((merchant.getAppKey()) == 10001L) { rowValueList.add(com.modelink.common.enums.HXSourceTypeEnum.getTextByValue(reservation.getSourceType())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/296/buggy-version/src.main.java.com.modelink.admin.controller.basedata.AdminReservationController.java", "BodyUseAPI": ["com.modelink.usercenter.bean.Merchant.getAppKey()"], "Fixed commit": "481d09dcad8be9673dd1bf65bce1d65571a1efe3", "Url": "https://api.github.com/repos/modelink/modelink-api", "Date": "2018-09-21T02:01:29Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(generatedDraw)) generateDraw(font);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5780/buggy-version/src.gfx.gameFont.characters.InputCustomCharacter.java", "BodyUseAPI": [], "Fixed commit": "376aa2869d5e6635164900e009caf0ad98cc5407", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2018-04-26T16:10:55Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(entry.getValue()))) { builder.addHeader(entry.getKey(), entry.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4190/buggy-version/networklibrary.src.main.java.com.yanxing.networklibrary.intercepter.ParameterInterceptor.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()", "Request.Builder.addHeader(java.lang.String,java.lang.String)", "java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()"], "Fixed commit": "6c10fcdf908c1c54cb4696d5e0d1908fa18b8987", "Url": "https://api.github.com/repos/yanxing/android-util", "Date": "2018-03-14T02:44:34Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (leftValue == null) { left = 0; }else { left = leftValue.valueToDouble(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3428/buggy-version/src.rowdy.nodes.expression.FactorMinus.java", "BodyUseAPI": ["rowdy.Value.valueToDouble()"], "Fixed commit": "10e6829e1242f355b497fed2cf8e85cae27769f4", "Url": "https://api.github.com/repos/redferret/rowdy", "Date": "2018-02-26T20:52:03Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (leftValue == null) { left = 0; }else { left = leftValue.valueToDouble(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3428/buggy-version/src.rowdy.nodes.expression.TermMinus.java", "BodyUseAPI": ["rowdy.Value.valueToDouble()"], "Fixed commit": "10e6829e1242f355b497fed2cf8e85cae27769f4", "Url": "https://api.github.com/repos/redferret/rowdy", "Date": "2018-02-26T20:52:03Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(isIllegalMove(currentMove))) { MovePiece(currentMove); board[currentMove.getY2()][currentMove.getX2()] = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6979/buggy-version/Assignment3.src.Game.java", "BodyUseAPI": ["Game.MovePiece(Move)", "Move.getY2()", "Move.getX2()"], "Fixed commit": "8170e63ff0fe45bafc69b0bbdc25343bc3493488", "Url": "https://api.github.com/repos/bigcat2014/Artificial_Intelligence", "Date": "2018-05-20T22:55:41Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result != null) { for (org.linuxprobe.crud.core.sql.field.ColumnField columnField : result) { if (!(distinctResult.contains(columnField))) { distinctResult.add(columnField); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4634/buggy-version/src.main.java.org.linuxprobe.crud.core.sql.generator.InsertSqlGenerator.java", "BodyUseAPI": [], "Fixed commit": "fd8cf604e676fd3a9575905b652499558006df22", "Url": "https://api.github.com/repos/linuxprobe-org/mybatis-universal-crud-simple", "Date": "2018-08-30T07:31:34Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sm.getVersionId()) > 1) { if ((entity.getEquipment().getItemInMainHand().equals(drop)) || (entity.getEquipment().getItemInOffHand().equals(drop))) { return true; } }else { if (entity.getEquipment().getItemInHand().equals(drop)) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8809/buggy-version/src.main.java.uk.antiperson.stackmob.tools.DropTools.java", "BodyUseAPI": [], "Fixed commit": "7d422cbd5afc9d14cfcbb9f5c4f9145cc5b362ee", "Url": "https://api.github.com/repos/Nathat23/StackMob-2", "Date": "2018-10-14T09:39:53Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nums.length) > 0) { Msg = Msg.replace(\"%minExp%\", java.lang.String.valueOf(nums[0])); Msg = Msg.replace(\"%maxExp%\", java.lang.String.valueOf(nums[1])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1541/buggy-version/src.main.java.com.mycompany.expcube.ExpCube.java", "BodyUseAPI": ["java.lang.String.valueOf(int)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.valueOf(int)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "51bd562ff90ab0d378bae235450f8a51d7f6eca1", "Url": "https://api.github.com/repos/kumaisu/ExpCube", "Date": "2018-03-26T22:02:48Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (io.nuls.core.utils.str.StringUtils.isBlank(str)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5685/buggy-version/core.src.main.java.io.nuls.core.utils.str.StringUtils.java", "BodyUseAPI": [], "Fixed commit": "e00b4f8048d954740db5d7e290b33515f6eff0e0", "Url": "https://api.github.com/repos/nuls-io/nuls", "Date": "2018-04-02T11:31:43Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (io.nuls.core.utils.str.StringUtils.isBlank(str)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5685/buggy-version/core.src.main.java.io.nuls.core.utils.str.StringUtils.java", "BodyUseAPI": [], "Fixed commit": "e00b4f8048d954740db5d7e290b33515f6eff0e0", "Url": "https://api.github.com/repos/nuls-io/nuls", "Date": "2018-04-02T11:31:43Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.usfirst.frc.team4737.robot.Robot.getInstance()) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9261/buggy-version/src.org.usfirst.frc.team4737.robot.OI.java", "BodyUseAPI": [], "Fixed commit": "0448e77ea67b2da3e94077c361de6fae09aa3763", "Url": "https://api.github.com/repos/WBHSRobotics4737/FRC-4737-2018", "Date": "2018-03-23T19:08:35Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.usfirst.frc.team4737.robot.Robot.getInstance()) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9261/buggy-version/src.org.usfirst.frc.team4737.robot.OI.java", "BodyUseAPI": [], "Fixed commit": "0448e77ea67b2da3e94077c361de6fae09aa3763", "Url": "https://api.github.com/repos/WBHSRobotics4737/FRC-4737-2018", "Date": "2018-03-23T19:08:35Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.usfirst.frc.team4737.robot.Robot.getInstance()) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9261/buggy-version/src.org.usfirst.frc.team4737.robot.OI.java", "BodyUseAPI": [], "Fixed commit": "0448e77ea67b2da3e94077c361de6fae09aa3763", "Url": "https://api.github.com/repos/WBHSRobotics4737/FRC-4737-2018", "Date": "2018-03-23T19:08:35Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.aegisa.project.model.CustomerInfo.getId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (id == null) { log.info(\"\u65b0\u589e\u4eba\u5458\u4fe1\u606f\"); commonService.save(customerInfo); }else { log.info(\"\u66f4\u65b0\u4eba\u5458\u4fe1\u606f\"); commonService.update(customerInfo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3837/buggy-version/project-provider.src.main.java.cn.aegisa.project.service.impl.CustomerServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "35123c3186e9b3e4e6a581eaa3847d07d9e9a8b0", "Url": "https://api.github.com/repos/daegis/project-soa", "Date": "2018-02-13T03:59:28Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(DBConstants.KEY.DOB)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(dobString)) { java.util.Date dob = org.smartregister.anc.util.Utils.dobStringToDate(dobString); if (dob != null) { jsonObject.put(VALUE, org.smartregister.anc.util.JsonFormUtils.DATE_FORMAT.format(dob)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5341/buggy-version/opensrp-anc.src.main.java.org.smartregister.anc.util.JsonFormUtils.java", "BodyUseAPI": ["org.smartregister.anc.util.Utils.dobStringToDate(java.lang.String)"], "Fixed commit": "74de2d88a1edd0753343f0354ea05a66a5c6bc85", "Url": "https://api.github.com/repos/OpenSRP/opensrp-client-anc", "Date": "2018-10-18T07:41:19Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(womanClient.get(DBConstants.KEY.DOB))) { jsonObject.put(VALUE, org.smartregister.anc.util.Utils.getAgeFromDate(womanClient.get(DBConstants.KEY.DOB))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5341/buggy-version/opensrp-anc.src.main.java.org.smartregister.anc.util.JsonFormUtils.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(DBConstants.KEY.DOB)", "org.smartregister.anc.util.Utils.getAgeFromDate(java.lang.String)", "org.json.JSONObject.put(VALUE,org.smartregister.anc.util.Utils.getAgeFromDate(womanClient.get(DBConstants.KEY.DOB)))"], "Fixed commit": "74de2d88a1edd0753343f0354ea05a66a5c6bc85", "Url": "https://api.github.com/repos/OpenSRP/opensrp-client-anc", "Date": "2018-10-18T07:41:19Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bCryptPasswordEncoder) == null) { bCryptPasswordEncoder = new org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8641/buggy-version/src.main.java.com.heli.sampledemo.SampleDemo.service.UserService.java", "BodyUseAPI": [], "Fixed commit": "6c49245c26cb27acd06f9eb872937f11dfe1f1a7", "Url": "https://api.github.com/repos/heliOpenxCell/sampleCrudDemo", "Date": "2018-07-17T11:14:44Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.isDirectory())) { java.lang.System.out.println(file.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4232/buggy-version/src.ru.javawebinar.basejava.MainFile.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.io.File.getName()"], "Fixed commit": "a4d49f46d97828653310d4706e888407b65f0d20", "Url": "https://api.github.com/repos/raisa-ryzbekova/basejava", "Date": "2018-07-24T14:32:36Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (holder.service.isAcknowledged()) { android.widget.Toast.makeText(context, \"Service is already Acknowledged\", Toast.LENGTH_SHORT).show(); }else { se.standersson.icingalert.AcknowledgementDialogFragment dialog = se.standersson.icingalert.AcknowledgementDialogFragment.newInstance(host, holder.service); try { final android.support.v7.app.AppCompatActivity activity = ((android.support.v7.app.AppCompatActivity) (context)); dialog.show(activity.getFragmentManager(), \"acknowledgementDialog\"); } catch (java.lang.ClassCastException e) { android.util.Log.d(\"Error\", \"Can't get the fragment manager with this\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8210/buggy-version/app.src.main.java.se.standersson.icingalert.mainServiceRecyclerViewAdapter.java", "BodyUseAPI": ["se.standersson.icingalert.AcknowledgementDialogFragment.newInstance(se.standersson.icingalert.HostAbstract,se.standersson.icingalert.Service)"], "Fixed commit": "fd8e4b7661ff3fed5dd37c68512a62bf4ce7b920", "Url": "https://api.github.com/repos/MrSAndersson/IcingAlert", "Date": "2018-02-27T10:12:08Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (holder.host.isAcknowledged()) { android.widget.Toast.makeText(context, \"Host is already Acknowledged\", Toast.LENGTH_SHORT).show(); }else { se.standersson.icingalert.AcknowledgementDialogFragment dialog = se.standersson.icingalert.AcknowledgementDialogFragment.newInstance(holder.host); try { final android.support.v7.app.AppCompatActivity activity = ((android.support.v7.app.AppCompatActivity) (context)); dialog.show(activity.getFragmentManager(), \"acknowledgementDialog\"); } catch (java.lang.ClassCastException e) { android.util.Log.d(\"Error\", \"Can't get the fragment manager with this\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8210/buggy-version/app.src.main.java.se.standersson.icingalert.mainHostRecyclerViewAdapter.java", "BodyUseAPI": ["se.standersson.icingalert.AcknowledgementDialogFragment.newInstance(se.standersson.icingalert.HostAbstract)"], "Fixed commit": "fd8e4b7661ff3fed5dd37c68512a62bf4ce7b920", "Url": "https://api.github.com/repos/MrSAndersson/IcingAlert", "Date": "2018-02-27T10:12:08Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (id != null) { return researcherDAO.getById(id, lock); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9747/buggy-version/ir_service.src.edu.ur.ir.researcher.service.DefaultResearcherService.java", "BodyUseAPI": ["edu.ur.ir.researcher.ResearcherDAO.getById(java.lang.Long,boolean)"], "Fixed commit": "4915c7ad837bab88bfe8758526db441f9729aadf", "Url": "https://api.github.com/repos/rochester-rcl/irplus", "Date": "2018-06-11T14:17:31Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9747/buggy-version/ir_core.src.edu.ur.ir.repository.Repository.java", "BodyUseAPI": [], "Fixed commit": "4915c7ad837bab88bfe8758526db441f9729aadf", "Url": "https://api.github.com/repos/rochester-rcl/irplus", "Date": "2018-06-11T14:17:31Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (c.isNullable()) { cpp.core.instruction.IfBlock ifNull = _if(pValue.callMethod(Nullable.isNull)); ifNull.thenBlock()._return(_this().callMethod(ClsAbstractBeanQuery.where, cpp.core.QString.fromStringConstant(((c.getEscapedName()) + \" is null\")))); ifNull.elseBlock()._return(_this().callMethod(ClsAbstractBeanQuery.where, cpp.core.QString.fromStringConstant(((c.getEscapedName()) + \"=?\")), Types.QVariant.callStaticMethod(ClsQVariant.fromValue, pValue.callMethod(Nullable.val)))); }else { _return(_this().callMethod(ClsAbstractBeanQuery.where, cpp.core.QString.fromStringConstant(((c.getEscapedName()) + \"=?\")), Types.QVariant.callStaticMethod(ClsQVariant.fromValue, pValue))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1079/buggy-version/cpp.beanquery.method.MethodBeanQueryWhereEquals.java", "BodyUseAPI": ["_this().callMethod(ClsAbstractBeanQuery.where,cpp.core.QString.fromStringConstant(((c.getEscapedName()) + \"=?\")),Types.QVariant.callStaticMethod(ClsQVariant.fromValue, pValue))", "cpp.beanquery.method.MethodBeanQueryWhereEquals._return(_this().callMethod(ClsAbstractBeanQuery.where, cpp.core.QString.fromStringConstant(((c.getEscapedName()) + \"=?\")), Types.QVariant.callStaticMethod(ClsQVariant.fromValue, pValue)))", "cpp.core.QString.fromStringConstant(((c.getEscapedName()) + \" is null\"))", "cpp.core.QString.fromStringConstant(((c.getEscapedName()) + \"=?\"))", "database.column.Column.getEscapedName()", "_this().callMethod(ClsAbstractBeanQuery.where,cpp.core.QString.fromStringConstant(((c.getEscapedName()) + \" is null\")))", "ifNull.elseBlock()._return(_this().callMethod(ClsAbstractBeanQuery.where, cpp.core.QString.fromStringConstant(((c.getEscapedName()) + \"=?\")), Types.QVariant.callStaticMethod(ClsQVariant.fromValue, pValue.callMethod(Nullable.val))))", "cpp.core.QString.fromStringConstant(((c.getEscapedName()) + \"=?\"))", "database.column.Column.getEscapedName()", "_this().callMethod(ClsAbstractBeanQuery.where,cpp.core.QString.fromStringConstant(((c.getEscapedName()) + \"=?\")),Types.QVariant.callStaticMethod(ClsQVariant.fromValue, pValue.callMethod(Nullable.val)))", "database.column.Column.getEscapedName()", "ifNull.thenBlock()._return(_this().callMethod(ClsAbstractBeanQuery.where, cpp.core.QString.fromStringConstant(((c.getEscapedName()) + \" is null\"))))"], "Fixed commit": "a1eeb44208bb75ab8b56dd5a71e9d0eddd55f13d", "Url": "https://api.github.com/repos/thecodemonkey86/orm2", "Date": "2018-05-11T14:36:58Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fifth && sixth) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5493/buggy-version/src.main.java.hu.mta.sztaki.lpds.cloud.simulator.examples.jobhistoryprocessor.ConsolidationController.java", "BodyUseAPI": [], "Fixed commit": "cff1e9235eadc29c9f2593cd8ebbc33ab2cf56fe", "Url": "https://api.github.com/repos/RenePonto/dissect-cf-examples", "Date": "2018-03-04T23:29:15Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fifth && sixth) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5493/buggy-version/src.main.java.hu.mta.sztaki.lpds.cloud.simulator.examples.jobhistoryprocessor.ConsolidationController.java", "BodyUseAPI": [], "Fixed commit": "cff1e9235eadc29c9f2593cd8ebbc33ab2cf56fe", "Url": "https://api.github.com/repos/RenePonto/dissect-cf-examples", "Date": "2018-03-04T23:29:15Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fifth && sixth) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5493/buggy-version/src.main.java.hu.mta.sztaki.lpds.cloud.simulator.examples.jobhistoryprocessor.ConsolidationController.java", "BodyUseAPI": [], "Fixed commit": "cff1e9235eadc29c9f2593cd8ebbc33ab2cf56fe", "Url": "https://api.github.com/repos/RenePonto/dissect-cf-examples", "Date": "2018-03-04T23:29:15Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSwipeRefreshLayout) != null) mSwipeRefreshLayout.setRefreshing(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5121/buggy-version/app.src.main.java.com.example.android.news.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "39794933deeb086c5988caee2642c62163ff42a2", "Url": "https://api.github.com/repos/eugenmarcu/News", "Date": "2018-01-24T09:28:40Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listener) != null) { databaseReference.removeEventListener(listener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3792/buggy-version/app.src.main.java.com.mtech.parttimeone.photolearn.data.repository.FirebaseDatabaseRepository.java", "BodyUseAPI": [], "Fixed commit": "35a2250754fe300455df195d89347b80804b4fa7", "Url": "https://api.github.com/repos/ChangLingSg/PhotoLearn", "Date": "2018-03-30T08:10:41Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (password == null) { password = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/37/buggy-version/src.servlet.customer.LogIn.java", "BodyUseAPI": [], "Fixed commit": "51dc4a58662ebaf67b5858470e515ec955f77f95", "Url": "https://api.github.com/repos/johnnymillergh/MTMSWebServer", "Date": "2018-01-16T04:05:12Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (email == null) { email = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/37/buggy-version/src.servlet.customer.LogIn.java", "BodyUseAPI": [], "Fixed commit": "51dc4a58662ebaf67b5858470e515ec955f77f95", "Url": "https://api.github.com/repos/johnnymillergh/MTMSWebServer", "Date": "2018-01-16T04:05:12Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.os.Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) filePath = com.example.dell.diary.DiaryWriteActivity.SD_PATH;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4352/buggy-version/app.src.main.java.com.example.dell.diary.SearchResultAdapter.java", "BodyUseAPI": [], "Fixed commit": "157a7ac5a53353157654a8a2f35d91146a5678a2", "Url": "https://api.github.com/repos/shirley-wu/HeartTrace", "Date": "2018-08-04T09:27:12Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.os.Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) filePath = com.example.dell.diary.DiaryWriteActivity.SD_PATH;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4352/buggy-version/app.src.main.java.com.example.dell.diary.DiaryCardAdapter.java", "BodyUseAPI": [], "Fixed commit": "157a7ac5a53353157654a8a2f35d91146a5678a2", "Url": "https://api.github.com/repos/shirley-wu/HeartTrace", "Date": "2018-08-04T09:27:12Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((files.size()) > 0) { files.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7916/buggy-version/app.src.main.java.org.sil.bloom.reader.FindBundlesRecursively.java", "BodyUseAPI": ["java.util.ArrayList<java.io.File>.clear()"], "Fixed commit": "7b494fbd6d8b3d347249bfd190625ebe2c5b07be", "Url": "https://api.github.com/repos/eomerdws/BloomReader", "Date": "2018-03-21T07:49:18Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.isEmpty()) { result.addAll(alertPolicyMap.get(SendToXPipeAdminAlertPolicy.ID).queryRecipients(alert)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2453/buggy-version/redis.redis-console.src.main.java.com.ctrip.xpipe.redis.console.alert.manager.AlertPolicyManager.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.addAll(alertPolicyMap.get(SendToXPipeAdminAlertPolicy.ID).queryRecipients(alert))"], "Fixed commit": "ee2de9bd754a938ff124b071943e266058c685cd", "Url": "https://api.github.com/repos/ctripcorp/x-pipe", "Date": "2018-03-22T09:25:26Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (context instanceof com.easyapp.lib.drawer.BaseDrawerMainActivity) { try { drawerCallback = ((com.easyapp.lib.callback.iDrawerCallback) (context)); } catch (java.lang.ClassCastException e) { throw new java.lang.ClassCastException(((context.toString()) + \" must implement OnHeadlineSelectedListener\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5231/buggy-version/lib.src.main.java.com.easyapp.lib.drawer.BaseDrawerFragment.java", "BodyUseAPI": ["android.content.Context.toString()"], "Fixed commit": "99591e5a2ee56104c9016f4b2020f5ac40d26d8d", "Url": "https://api.github.com/repos/JimRoid/BaseSupportAndroidModel", "Date": "2018-05-29T04:09:30Z"},
{"Line": "=>578", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((packetsToSend % 10) != 0) { com.nfehs.librarygames.net.Packet07GetGames returnPacket = new com.nfehs.librarygames.net.Packet07GetGames(packet.getUuidKey(), packetsToSend, (++packetsSent), gameInformation, true); returnPacket.writeData(this, address, port); gameInformation = new java.lang.String[10]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1671/buggy-version/src.main.java.com.nfehs.librarygames.net.GameServer.java", "BodyUseAPI": [], "Fixed commit": "9cfe58fc92dcbafc84d17015cf71f2f2a9932637", "Url": "https://api.github.com/repos/patrickkenney9801/librarygames", "Date": "2018-08-21T21:21:13Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (source == null) return org.jppf.process.AbstractProcessLauncher.NO_OPTIONS;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3028/buggy-version/common.src.java.org.jppf.process.AbstractProcessLauncher.java", "BodyUseAPI": [], "Fixed commit": "4fea5feeae5cb4ecc1c3aae99e6c1582236fc842", "Url": "https://api.github.com/repos/jppf-grid/JPPF", "Date": "2018-05-18T03:50:47Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.equals(id, \"me\")) { org.wso2.carbon.identity.scim.common.utils.SCIMCommonUtils.setThreadLocalToIdentifyMeEndpointCall(true); if (org.wso2.carbon.identity.scim.provider.resources.UserResource.logger.isDebugEnabled()) { org.wso2.carbon.identity.scim.provider.resources.UserResource.logger.debug(\"Thread Local to identify Me Endpoint Call is set.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3949/buggy-version/components.org.wso2.carbon.identity.scim.provider.src.main.java.org.wso2.carbon.identity.scim.provider.resources.UserResource.java", "BodyUseAPI": [], "Fixed commit": "0a5e7c5846c39441c6b92fed9f4c8f93a07b09be", "Url": "https://api.github.com/repos/emswbandara/identity-inbound-provisioning-scim", "Date": "2018-02-23T17:56:38Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.equals(id, \"me\")) { org.wso2.carbon.identity.scim.common.utils.SCIMCommonUtils.setThreadLocalToIdentifyMeEndpointCall(true); if (org.wso2.carbon.identity.scim.provider.resources.UserResource.logger.isDebugEnabled()) { org.wso2.carbon.identity.scim.provider.resources.UserResource.logger.debug(\"Thread Local to identify Me Endpoint Call is set.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3949/buggy-version/components.org.wso2.carbon.identity.scim.provider.src.main.java.org.wso2.carbon.identity.scim.provider.resources.UserResource.java", "BodyUseAPI": [], "Fixed commit": "0a5e7c5846c39441c6b92fed9f4c8f93a07b09be", "Url": "https://api.github.com/repos/emswbandara/identity-inbound-provisioning-scim", "Date": "2018-02-23T17:56:38Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(integratedScoreList.isEmpty())) intergratedScores.add(integratedScoreList);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/601/buggy-version/src.main.java.edu.whu.pllab.buglocator.evaluation.SimpleEvaluator.java", "BodyUseAPI": ["java.util.List<java.util.List<edu.whu.pllab.buglocator.rankingmodel.IntegratedScore>>.add(java.util.List<edu.whu.pllab.buglocator.rankingmodel.IntegratedScore>)"], "Fixed commit": "e9d7076a25267fdcd468e30c0fc4e2c7ab936d5c", "Url": "https://api.github.com/repos/LeeeWee/BugLocator", "Date": "2018-04-24T14:16:04Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasValidIndex) { android.util.Log.d(com.example.marekulip.droidsor.logs.LogsDetailFragment.TAG, (\"resolveWeight: indexed \" + (com.example.marekulip.droidsor.sensorlogmanager.SensorLog.weights[validIndex]))); return com.example.marekulip.droidsor.sensorlogmanager.SensorLog.weights[validIndex]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7920/buggy-version/app.src.main.java.com.example.marekulip.droidsor.logs.LogsDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "ad988167a7191e079af8f1e6d23aa2d2dd10d802", "Url": "https://api.github.com/repos/MarekUlip/Droidsor", "Date": "2018-04-07T14:07:42Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((prefferedCount) <= 0) prefferedCount = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7920/buggy-version/app.src.main.java.com.example.marekulip.droidsor.logs.LogsDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "ad988167a7191e079af8f1e6d23aa2d2dd10d802", "Url": "https://api.github.com/repos/MarekUlip/Droidsor", "Date": "2018-04-07T14:07:42Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (countedCount > (prefferedCount)) { android.util.Log.d(com.example.marekulip.droidsor.logs.LogsDetailFragment.TAG, (\"resolveWeight: ouch \" + (com.example.marekulip.droidsor.sensorlogmanager.SensorLog.weights[i]))); return com.example.marekulip.droidsor.sensorlogmanager.SensorLog.weights[i]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7920/buggy-version/app.src.main.java.com.example.marekulip.droidsor.logs.LogsDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "ad988167a7191e079af8f1e6d23aa2d2dd10d802", "Url": "https://api.github.com/repos/MarekUlip/Droidsor", "Date": "2018-04-07T14:07:42Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(authorizeService.isAdmin(context))) { throw new org.dspace.app.rest.exception.RESTAuthorizationException(\"The EPerson collection endpoint is reserved to system administrators\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5006/buggy-version/dspace-spring-rest.src.main.java.org.dspace.app.rest.repository.EPersonRestRepository.java", "BodyUseAPI": [], "Fixed commit": "1d7efbd89d6e18605101350362d1a8baa9bec9c6", "Url": "https://api.github.com/repos/4Science/DSpace", "Date": "2018-05-31T05:59:21Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((domains.size()) > 0) { sleep /= domains.size(); if (sleep > (10 * 1000)) { sleep = 10 * 1000; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4153/buggy-version/src.main.java.com.xwkj.customer.component.DomainComponent.java", "BodyUseAPI": ["java.util.List<com.xwkj.customer.domain.Domain>.size()"], "Fixed commit": "f0b7c935208873e351a275e1eee328ca87ecabc3", "Url": "https://api.github.com/repos/lm2343635/Customer", "Date": "2018-05-24T03:03:37Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (os.startsWith(\"Windows\")) { java.lang.String[] parts = path.split(\":\"); if ((parts.length) == 1) { continue; } if ((parts[1].length()) > 8) { java.lang.String pathNoVolume = parts[1]; if (pathNoVolume.substring(1, 8).equalsIgnoreCase(\"Windows\")) { DuxCLI.logger.debug(\"skipping file in Windows directory: {}\", path); continue; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2379/buggy-version/src.org.dux.cli.DuxBuildTracer.java", "BodyUseAPI": [], "Fixed commit": "8674910a4320c36828b925061e4e3626ac7b7b49", "Url": "https://api.github.com/repos/omag01/dux", "Date": "2018-03-18T20:51:39Z"},
{"Line": "=>521", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((transferSupport) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7732/buggy-version/src.openCVHarness.OpenCVHarnessWindow.java", "BodyUseAPI": [], "Fixed commit": "a57b55a839446f6a57ed1f24db8d763cd228d031", "Url": "https://api.github.com/repos/andrewlemaitre/OpenCVGUI", "Date": "2018-03-25T20:20:22Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.jena.sparql.expr.NodeValue.getString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (queryStr.contains(\"tripId\")) { java.lang.System.out.println(\"here\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1645/buggy-version/jena-sparql-api-sparql-ext.src.main.java.org.aksw.jena_sparql_api.sparql.ext.json.E_JsonPath.java", "BodyUseAPI": [], "Fixed commit": "955deb8320c610cac9f5f154948e53c74c2e294b", "Url": "https://api.github.com/repos/SmartDataAnalytics/jena-sparql-api", "Date": "2018-03-03T17:13:40Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selectedItemLoc) < (availableRecipes.length)) { availableRecipes[selectedItemLoc].craftRecipe(inv, invLength, invHeight); }else { selectedItemLoc = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2071/buggy-version/core.src.items.RecipeList.java", "BodyUseAPI": ["availableRecipes[selectedItemLoc].craftRecipe(items.InvItem[][],int,int)"], "Fixed commit": "c10d04fdaca6f9b29fc2077fc36d1cf1dedf80b5", "Url": "https://api.github.com/repos/CuseCose/Aeronef", "Date": "2018-06-10T18:49:40Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Throwable.getExceptionPointInfo()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (exceptionPointInfo != null) { exceptionPointInfo = exceptionPointInfo.replaceAll(\"\\n\", \"<br/>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4355/buggy-version/impl.web.jsf7.src.main.java.be.atbash.ee.security.octopus.exception.AuthorizationExceptionHandler.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "1c520e14beb2bf11306864559d3538ead1161158", "Url": "https://api.github.com/repos/atbashEE/atbash-octopus", "Date": "2018-03-27T19:42:44Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getBoolean(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isFilterApplied) { org.ekstep.genieservices.commons.bean.SunbirdContentSearchCriteria.FilterBuilder builder = org.ekstep.genieservices.commons.utils.GsonUtil.fromJson(requestJson, SunbirdContentSearchCriteria.FilterBuilder.class); criteria = builder.build(); }else { org.ekstep.genieservices.commons.bean.SunbirdContentSearchCriteria.SearchBuilder builder = org.ekstep.genieservices.commons.utils.GsonUtil.fromJson(requestJson, SunbirdContentSearchCriteria.SearchBuilder.class); criteria = builder.build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1932/buggy-version/src.android.org.genie.ContentHandler.java", "BodyUseAPI": [], "Fixed commit": "e33817f5dbb68dc0efbb92f9197985f9d4818437", "Url": "https://api.github.com/repos/project-sunbird/cordova-plugin-genie-sdk", "Date": "2018-04-17T13:17:16Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(folder.exists())) { folder.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3354/buggy-version/src.main.java.com.fomenko.webmplayer.api.controller.FileOperation.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "0fcd759a8be3625647e2b8992990fa86a3fbadbb", "Url": "https://api.github.com/repos/sasfmlzr/dvachparser", "Date": "2018-01-23T15:00:34Z"},
{"Line": "=>1414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (child == (getScrollableCoreChild())) { childHeightMeasureSpec = android.support.v4.widget.MeasureSpec.makeMeasureSpec(((lp.topMargin) + (lp.bottomMargin)), MeasureSpec.UNSPECIFIED); }else { childHeightMeasureSpec = getChildMeasureSpec(parentHeightMeasureSpec, (((((getPaddingTop()) + (getPaddingBottom())) + (lp.topMargin)) + (lp.bottomMargin)) + heightUsed), lp.height); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9055/buggy-version/widget.multirvcontainer.src.main.java.android.support.v4.widget.NestedScrollViewExtend.java", "BodyUseAPI": [], "Fixed commit": "bd375258dc968a8b330cfa0aaa2536073244f5a9", "Url": "https://api.github.com/repos/lsjwzh/MultiRVScrollView", "Date": "2018-07-20T01:04:47Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.activity.CropActivity.findPoints()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (points != null) { mSelectionImageView.setPoints(points); }else { com.owncloud.android.lib.common.utils.Log_OC.d(com.owncloud.android.ui.activity.CropActivity.TAG, getResources().getString(R.string.no_contour_found)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7231/buggy-version/src.com.owncloud.android.ui.activity.CropActivity.java", "BodyUseAPI": ["com.owncloud.android.ui.QuadrilateralSelectionImageView.setPoints(java.util.List<android.graphics.PointF>)"], "Fixed commit": "09647cf0e053c865c79efe867a1308959fdf76b3", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-03-12T06:43:04Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["category.getSelectedItem().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((android.text.TextUtils.isEmpty(deviceCategory)) || (deviceCategory.equals(\"Select Category\"))) { android.widget.Toast.makeText(getApplicationContext(), \"Please Select a Category\", Toast.LENGTH_LONG).show(); return; }else { deviceName = device.getSelectedItem().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8777/buggy-version/app.src.main.java.group.hashtag.projectelo.Activities.NewReviewActivity.java", "BodyUseAPI": [], "Fixed commit": "265f180341ce2f80a941339152f83f658bdb0522", "Url": "https://api.github.com/repos/amantewary/Elo-Community-Based-Product-Reviewing-Android-Application", "Date": "2018-04-09T02:01:45Z"},
{"Line": "=>989", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (childContext != null) { childContext.object = object; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8118/buggy-version/src.main.java.com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.java", "BodyUseAPI": [], "Fixed commit": "9cd314a9de5efe00d4747a56b8be41a429e91cf3", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2018-10-25T12:53:42Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((queryResponse == null) || ((queryResponse.getResults()) == null)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6316/buggy-version/src.main.java.com.micro.services.search.bl.impl.QueryServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "2763c800cc361b11cc7906c57cf69fd848ff01dd", "Url": "https://api.github.com/repos/sekhrivijay/search-service", "Date": "2017-11-04T22:16:29Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kylantraynor.civilizations.settings.PlotSettings.getSettlementId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (setId == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2206/buggy-version/src.main.java.com.kylantraynor.civilizations.groups.settlements.plots.Plot.java", "BodyUseAPI": [], "Fixed commit": "c4f2b40815779100055c0572fc9dfb94c69f658b", "Url": "https://api.github.com/repos/KylanTraynor/Civilizations", "Date": "2018-09-09T21:38:14Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isGoodAnswer) { android.media.MediaPlayer ring = android.media.MediaPlayer.create(this, R.raw.bravo); ring.start(); }else { android.media.MediaPlayer ring = android.media.MediaPlayer.create(this, R.raw.error); ring.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4322/buggy-version/app.src.main.java.com.example.lastwerewolf.projekt_ip.Level3CountingActivity.java", "BodyUseAPI": [], "Fixed commit": "069b9b51d30116684392018ed28bd04b453be998", "Url": "https://api.github.com/repos/dszeliga/projekt_IP", "Date": "2018-06-13T09:47:27Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (src.isDirectory()) { allSources = ((java.util.Collection<java.io.File>) (org.apache.commons.io.FileUtils.listFiles(src, fileFilter, dirFilter))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9035/buggy-version/src.main.java.hudson.plugins.filesystem_scm.FolderDiff.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.listFiles(java.io.File,org.apache.commons.io.filefilter.AndFileFilter,org.apache.commons.io.filefilter.IOFileFilter)"], "Fixed commit": "0563dbbd27e28ebaf586c068f5d47fdd669260bc", "Url": "https://api.github.com/repos/jenkinsci/filesystem_scm-plugin", "Date": "2018-02-22T22:47:18Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (schema.endsWith(\"\\n\")) { tmp = schema.substring(0, schema.lastIndexOf(\"\\n\")); }else { tmp = schema; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2544/buggy-version/server.src.main.java.org.schemarepo.server.RESTRepository.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "9190309e54403d28fc132173e2e1eb69a9e48cda", "Url": "https://api.github.com/repos/chekore/schema-repo", "Date": "2018-09-19T06:54:04Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.bukkit.Material.matchMaterial(mat.split(\":\", 2)[0]).isBlock()) { debug(\"defBlocks.get(i).isBlock() = true\"); return true; }else { getLogger().info((((\"Item \" + mat) + \" of Blocks is a material, but not a block! \") + (removeInvalidValues ? \"Removing.\" : \"Ignoring.\"))); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4063/buggy-version/src.me.AlanZ.CommandMineRewards.java", "BodyUseAPI": ["getLogger().info(java.lang.String)"], "Fixed commit": "ca492238cdc735eb04a0781fdba3b287fca172dc", "Url": "https://api.github.com/repos/datatags/CommandMineRewards", "Date": "2018-04-19T20:39:49Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (qName.equalsIgnoreCase(\"node\")) { inNode = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2543/buggy-version/src.main.java.com.codingcompetition.statefarm.utility.PointOfInterestParser.java", "BodyUseAPI": [], "Fixed commit": "8253130f4eeb38277f8f5ccad38dd917b4e6f7bd", "Url": "https://api.github.com/repos/TrySickle/2018-StateFarm-CodingCompetitionProblem", "Date": "2018-10-14T03:03:38Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.getDisabled(0)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/370/buggy-version/src.main.java.com.mjr.planetprogression.tileEntities.TileEntityTelescope.java", "BodyUseAPI": [], "Fixed commit": "935a6e765ef097cd28562c9e80e1c73f291535cd", "Url": "https://api.github.com/repos/MJRLegends/Planet-Progression", "Date": "2018-06-15T23:34:43Z"},
{"Line": "=>498", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.bcel.generic.InvokeInstruction.getClassName(org.apache.bcel.generic.ConstantPoolGen)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (sav.common.core.utils.SignatureUtils.isSignature(className)) { className = sav.common.core.utils.SignatureUtils.signatureToName(className); className = className.replace(\"[]\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4483/buggy-version/tregression.src.main.tregression.empiricalstudy.TrialGenerator0.java", "BodyUseAPI": ["sav.common.core.utils.SignatureUtils.signatureToName(java.lang.String)"], "Fixed commit": "22797efdf8f38c05102ed1ae0d5114839d0691ed", "Url": "https://api.github.com/repos/llmhyy/tregression", "Date": "2018-03-20T08:14:59Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((crypto) == null) { addAlert.setText(\"Alerts\"); }else { addAlert.setText((\"Add alert for \" + (crypto))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/899/buggy-version/app.src.main.java.at.ac.univie.hci.bitcointracker.AlertActivity.java", "BodyUseAPI": ["at.ac.univie.hci.bitcointracker.TextView.setText(java.lang.String)"], "Fixed commit": "6cadb1d635ea9daaeb7ba83e16bde2d9dcdc4be8", "Url": "https://api.github.com/repos/gvazharov/BitcoinTracker", "Date": "2018-05-13T23:11:29Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.benberi.cadesim.server.model.player.PlayerManager.getPlayerByPosition(position.getX(),position.getY())", "p.getMoves().getMove(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((move == (com.benberi.cadesim.server.model.player.move.MoveType.FORWARD)) && (outOfBump(p, claimed, turn, phase))) { collide(p, claimed, turn, phase); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2498/buggy-version/src.com.benberi.cadesim.server.model.player.collision.CollisionCalculator.java", "BodyUseAPI": ["com.benberi.cadesim.server.model.player.collision.CollisionCalculator.collide(com.benberi.cadesim.server.model.player.Player,com.benberi.cadesim.server.model.player.Player,int,int)"], "Fixed commit": "c43095d6071ecff74aef4417a68f26dcf1499534", "Url": "https://api.github.com/repos/mdjong1/Obsidio-Server", "Date": "2018-01-14T14:01:15Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSingleVisitAdapter.getListDataList().size()) == 0) { mNoRecordAvailable.setVisibility(View.VISIBLE); mHistoryExpandableListView.setVisibility(View.INVISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7897/buggy-version/app.src.main.java.com.rescribe.doctor.ui.activities.patient_details.SingleVisitDetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "6912d8446fc3f604fd6bca94f0c1fbf6e4c4911c", "Url": "https://api.github.com/repos/sandeepbahalkar123/rescribeDoctor_repo", "Date": "2018-05-11T11:33:43Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(canPluginBeDisabledOrRemoved())) { mSwitchActive.setVisibility(View.GONE); }else { mSwitchActive.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener() { @java.lang.Override public void onCheckedChanged(android.widget.CompoundButton compoundButton, boolean b) { if (compoundButton.isPressed()) { mIsActive = b; dispatchConfigurePluginAction(false); } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4484/buggy-version/WordPress.src.main.java.org.wordpress.android.ui.plugins.PluginDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "55e25e249cfa72176fa08b57b2f915fcbcb666f8", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2018-01-10T01:22:37Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((amount.intValue()) < 1) { return \"Give a real amount\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/586/buggy-version/src.main.java.com.github.lrhel.rabbot.command.money.GiveMoneyCommand.java", "BodyUseAPI": [], "Fixed commit": "2de77417944e4bed6de048fe578cd9ba1e5a7025", "Url": "https://api.github.com/repos/lrhel/RabBot", "Date": "2018-08-09T16:08:41Z"},
{"Line": "=>574", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.initialDirectory) != null) fileChooser.setCurrentDirectory(new java.io.File(this.initialDirectory));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9814/buggy-version/src.main.java.epigraph.GUI.MainWindow.java", "BodyUseAPI": [], "Fixed commit": "9d8e6b7a09ce62a98dc3d3727f9bb91c4006b3e4", "Url": "https://api.github.com/repos/ComplexOrganizationOfLivingMatter/Epigraph", "Date": "2018-03-14T10:05:35Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (world.isRemote) { Dungeons2.log.debug(java.lang.String.format(\"[%s] is not a valid biome.\", biome.getBiomeName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8203/buggy-version/Dungeons2-1.12.src.com.someguyssoftware.dungeons2.worldgen.DungeonsWorldGen.java", "BodyUseAPI": [], "Fixed commit": "0a3f48dd9c2c6c8aee92ab764194ea6bdbc25a08", "Url": "https://api.github.com/repos/gottsch/gottsch-minecraft-Dungeons2", "Date": "2018-04-09T03:10:57Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (world.isRemote) { Dungeons2.log.debug(java.lang.String.format(\"[%s] is not a valid biome.\", biome.getBiomeName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8203/buggy-version/Dungeons2-1.12.2.src.com.someguyssoftware.dungeons2.worldgen.DungeonsWorldGen.java", "BodyUseAPI": [], "Fixed commit": "0a3f48dd9c2c6c8aee92ab764194ea6bdbc25a08", "Url": "https://api.github.com/repos/gottsch/gottsch-minecraft-Dungeons2", "Date": "2018-04-09T03:10:57Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sensor) != null) { android.util.Log.d(com.sasi.rainbowhat.OnHat.HatActivity.TAG, (\"temperature:\" + (sensor.readTemperature()))); setupAlphanumericDisplay(java.lang.String.valueOf(sensor.readTemperature())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1782/buggy-version/app.src.main.java.com.sasi.rainbowhat.OnHat.HatActivity.java", "BodyUseAPI": [], "Fixed commit": "6dfe59427a9a863c1ee3a19074abd55a13210e86", "Url": "https://api.github.com/repos/sasindroid/Android_Things-RainbowHAT", "Date": "2018-02-25T01:14:15Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sj.gv.androidexercise.model.NewsFeed.getDescription()", "com.sj.gv.androidexercise.view.adapter.NewsFeedAdapter.getImg(com.sj.gv.androidexercise.model.NewsFeed)", "com.sj.gv.androidexercise.model.NewsFeed.getTitle()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((title == null) && (description == null)) && (imageUrl == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7993/buggy-version/app.src.main.java.com.sj.gv.androidexercise.view.adapter.NewsFeedAdapter.java", "BodyUseAPI": [], "Fixed commit": "a9c92965de4f7411280d8c2571a5e9e1a9b044d9", "Url": "https://api.github.com/repos/JeevithaBalasundaram/AndroidExercise", "Date": "2018-08-23T11:30:36Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((mSelection.length) - 1) > spinnerWhich) || (((mSelection.length) - 1) > (checkedIndex))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/781/buggy-version/android_library.feedbacklibrary.src.main.java.ch.uzh.supersede.feedbacklibrary.views.CustomSpinner.java", "BodyUseAPI": [], "Fixed commit": "f4d3993fc8111a3021509f491fa323d51cd206f7", "Url": "https://api.github.com/repos/supersede-project/monitor_feedback", "Date": "2018-01-30T13:48:17Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tasks.get(column.getName())) != null) { java.util.Collections.sort(tasks.get(column.getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5601/buggy-version/src.Model.ProjectModel.java", "BodyUseAPI": ["java.util.Collections.sort(tasks.get(column.getName()))", "Model.Column.getName()", "java.util.HashMap<java.lang.String, java.util.ArrayList<Model.TaskModel>>.get(column.getName())"], "Fixed commit": "613f3ab0925aee49b1056099e868b2e44c4a0d3a", "Url": "https://api.github.com/repos/sgedwardlim/TaskBoard", "Date": "2018-05-10T05:58:08Z"},
{"Line": "=>466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTextRecognizer) != null) { mTextRecognizer.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6108/buggy-version/android.src.main.java.org.reactnative.camera.RNCameraView.java", "BodyUseAPI": [], "Fixed commit": "71a535571e4d06d8368bd46987f3878831a14c07", "Url": "https://api.github.com/repos/react-native-community/react-native-camera", "Date": "2018-04-15T20:23:44Z"},
{"Line": "=>460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFaceDetector) != null) { mFaceDetector.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6108/buggy-version/android.src.main.java.org.reactnative.camera.RNCameraView.java", "BodyUseAPI": [], "Fixed commit": "71a535571e4d06d8368bd46987f3878831a14c07", "Url": "https://api.github.com/repos/react-native-community/react-native-camera", "Date": "2018-04-15T20:23:44Z"},
{"Line": "=>463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mGoogleBarcodeDetector) != null) { mGoogleBarcodeDetector.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6108/buggy-version/android.src.main.java.org.reactnative.camera.RNCameraView.java", "BodyUseAPI": [], "Fixed commit": "71a535571e4d06d8368bd46987f3878831a14c07", "Url": "https://api.github.com/repos/react-native-community/react-native-camera", "Date": "2018-04-15T20:23:44Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.thoughtcrime.securesms.util.TextSecurePreferences.getLocalNumber(android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(localNumber)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8111/buggy-version/src.org.thoughtcrime.securesms.util.Util.java", "BodyUseAPI": [], "Fixed commit": "d895d19418afe0a806de0e032d629cb103387087", "Url": "https://api.github.com/repos/deltachat/deltachat-android-ii", "Date": "2018-09-12T11:04:12Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (address.isDcChat()) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8111/buggy-version/src.org.thoughtcrime.securesms.util.Util.java", "BodyUseAPI": [], "Fixed commit": "d895d19418afe0a806de0e032d629cb103387087", "Url": "https://api.github.com/repos/deltachat/deltachat-android-ii", "Date": "2018-09-12T11:04:12Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((length) == 1) { head = null; this.setLength(((length) - 1)); }else if (position == 1) { io.goginenis.DoublyLinkedList.Node node = head; head = node.getNextNode(); head.setPrevNode(null); this.setLength(((length) - 1)); }else { io.goginenis.DoublyLinkedList.Node node = head; int index = 1; while (index < position) { node = node.getNextNode(); index++; } node.getNextNode().setPrevNode(node.getPrevNode()); node.getPrevNode().setNextNode(node.getNextNode()); this.setLength(((length) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6649/buggy-version/src.main.java.io.goginenis.DoublyLinkedList.DoublyLinkedList.java", "BodyUseAPI": ["io.goginenis.DoublyLinkedList.DoublyLinkedList.setLength(int)", "io.goginenis.DoublyLinkedList.DoublyLinkedList.setLength(int)", "io.goginenis.DoublyLinkedList.DoublyLinkedList.setLength(int)"], "Fixed commit": "d9c7e280ee485a833660dab0b01fea0cd899758e", "Url": "https://api.github.com/repos/sagogine/DataStructures", "Date": "2018-02-18T04:45:59Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((length) == 1) { head = null; this.setLength(((length) - 1)); }else { if (position == 1) { head = head.getNextNode(); this.setLength(((length) - 1)); }else { io.goginenis.LinkedList.Node node = head; io.goginenis.LinkedList.Node prevNode = null; int index = 1; while (index < position) { prevNode = node; node = node.getNextNode(); index++; } if (position == (length)) { prevNode.setNextNode(null); tail = prevNode; }else { prevNode.setNextNode(node.getNextNode()); } this.setLength(((length) - 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6649/buggy-version/src.main.java.io.goginenis.LinkedList.LinkedList.java", "BodyUseAPI": ["io.goginenis.LinkedList.LinkedList.setLength(int)", "io.goginenis.LinkedList.LinkedList.setLength(int)", "io.goginenis.LinkedList.LinkedList.setLength(int)"], "Fixed commit": "d9c7e280ee485a833660dab0b01fea0cd899758e", "Url": "https://api.github.com/repos/sagogine/DataStructures", "Date": "2018-02-18T04:45:59Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (counter == 10) { java.lang.System.out.println((\"Congrats! You made a sum of $\" + (Player.money))); }else { java.lang.System.out.println(\"You are out of money. Don't gamble!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8339/buggy-version/Blackjack.src.blackjack.Blackjack.java", "BodyUseAPI": [], "Fixed commit": "b9ff14c1bfbd99a9eb6c023fbbc6b0bcd7e9037c", "Url": "https://api.github.com/repos/MonicaD16/BlackjackProject", "Date": "2018-04-26T02:39:13Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getQueryString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (urlQuery != null) { queryId = parseQueryString(httpServletRequest.getQueryString()).getOrDefault(\"session_id\", null); }else { queryId = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5342/buggy-version/src.main.java.nl.utwente.ing.authorization.SessionIdFilter.java", "BodyUseAPI": [], "Fixed commit": "b63687682a5671221a017c529d92c2fd241afb3e", "Url": "https://api.github.com/repos/agilitytestbed/Team-C", "Date": "2018-05-15T17:09:28Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.incture.metrodata.util.ServicesUtil.isEmpty(dto.getUserId()))) { responseDto.setStatus(false); responseDto.setCode(HttpStatus.SC_INTERNAL_SERVER_ERROR); responseDto.setMessage((((\"Failed : user with email '\" + (dto.getEmail())) + \"' is already exits with user Id \") + (dto.getUserId()))); return responseDto; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7963/buggy-version/MetroData_Container.MetroData_Container.MetroData_Services.src.main.java.com.incture.metrodata.service.UserService.java", "BodyUseAPI": ["com.incture.metrodata.dto.UserDetailsDTO.getEmail()", "com.incture.metrodata.dto.ResponseDto.setMessage((((\"Failed : user with email '\" + (dto.getEmail())) + \"' is already exits with user Id \") + (dto.getUserId())))", "com.incture.metrodata.dto.UserDetailsDTO.getUserId()"], "Fixed commit": "3ff8d23679fa4b2df264aea3e9a7b2add3b634e3", "Url": "https://api.github.com/repos/amit48sabat/MetrodataNew", "Date": "2018-04-13T12:49:33Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JComboBox<com.android.ddmlib.IDevice>.getSelectedItem()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (item != null) { configService.selectedDeviceId = item.getSerialNumber(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3811/buggy-version/launcher.src.main.java.io.xnc.plugins.android_act_launcher.ActivityLauncher.java", "BodyUseAPI": ["com.android.ddmlib.IDevice.getSerialNumber()"], "Fixed commit": "2156bf65aa7415911f16ef95513117c6071d9e71", "Url": "https://api.github.com/repos/xncHung/intelij_activity_launcher_plugin", "Date": "2018-10-26T10:59:41Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.geoRequests) != null) { this.geoRequests.insert(gr.cite.earthserver.wcs.geo.GeoUtils.convertDataToCoverageGeo(coverage, dataElement)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/493/buggy-version/wcs-adapter.src.main.java.gr.cite.earthserver.wcs.adapter.WCSAdapter.java", "BodyUseAPI": [], "Fixed commit": "90d834605531107597059d581620ae2084707b63", "Url": "https://api.github.com/repos/cite-sa/femme", "Date": "2018-03-02T18:02:50Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rs.next()) sql = ((\"UPDATE attendance SET astate ='\" + 2) + \"' WHERE adate =\") + tmp; else sql = (((((\"INSERT INTO attendance(eno,adate,astate) VALUES ('\" + mno) + \"', '\") + tmp) + \"', '\") + 2) + \"')\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8939/buggy-version/src.com.company.PersonnelManager.java", "BodyUseAPI": [], "Fixed commit": "fced050cb75d283b14ebfd4c20e91024a1655b23", "Url": "https://api.github.com/repos/Point178/Attendance_Management_System", "Date": "2018-01-12T14:44:38Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rs.next()) sql = ((\"UPDATE attendance SET astate ='\" + 3) + \"' WHERE adate =\") + tmp; else sql = (((((\"INSERT INTO attendance(eno,adate,astate) VALUES ('\" + mno) + \"', '\") + tmp) + \"', '\") + 3) + \"')\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8939/buggy-version/src.com.company.PersonnelManager.java", "BodyUseAPI": [], "Fixed commit": "fced050cb75d283b14ebfd4c20e91024a1655b23", "Url": "https://api.github.com/repos/Point178/Attendance_Management_System", "Date": "2018-01-12T14:44:38Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (data.has(\"BotNick\")) botNick = data.getString(\"BotNick\"); else botNick = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/331/buggy-version/core.src.main.java.org.dreamexposure.discal.core.object.web.WebGuild.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "4f20981be52ef680b76cb86025c988652bcb2528", "Url": "https://api.github.com/repos/NovaFox161/DisCal-Discord-Bot", "Date": "2018-09-17T20:10:07Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((botNick) != null) && (!(botNick.equals(\"\")))) data.put(\"BotNick\", botNick);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/331/buggy-version/core.src.main.java.org.dreamexposure.discal.core.object.web.WebGuild.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,java.lang.String)"], "Fixed commit": "4f20981be52ef680b76cb86025c988652bcb2528", "Url": "https://api.github.com/repos/NovaFox161/DisCal-Discord-Bot", "Date": "2018-09-17T20:10:07Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.inject.Provider<org.pmiops.workbench.db.model.User>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (user == null) { throw new org.pmiops.workbench.exceptions.NotFoundException(\"Could not find record for authenticated user\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1664/buggy-version/api.src.main.java.org.pmiops.workbench.db.dao.UserService.java", "BodyUseAPI": [], "Fixed commit": "e1acb49246404754ac6f7735dac79a327131e9ed", "Url": "https://api.github.com/repos/all-of-us/workbench", "Date": "2018-01-02T21:31:47Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.getMapPosX()) < 380) { player.setMapPosX(400); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5529/buggy-version/src.plains_E7.java", "BodyUseAPI": ["java.lang.Character.setMapPosX(int)"], "Fixed commit": "8ea9530ed3ec7e33623b18e8ac294311e3bcf86d", "Url": "https://api.github.com/repos/Bupton64/GroupAssignment", "Date": "2018-01-28T21:39:31Z"},
{"Line": "=>709", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (usesByteBuffer()) { seedBuffer = java.nio.ByteBuffer.wrap(seed); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8447/buggy-version/betterrandom.src.main.java.io.github.pr0methean.betterrandom.prng.BaseRandom.java", "BodyUseAPI": [], "Fixed commit": "5b6b3ff7ef646b16cbb56f652d9edc3c3ca08ace", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2018-08-18T00:29:17Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT)) { android.webkit.WebView.setWebContentsDebuggingEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9440/buggy-version/app.src.main.java.co.epitre.aelf_lectures.SectionBibleFragment.java", "BodyUseAPI": [], "Fixed commit": "e1c8b441277999ac60acc937baeba8d1e2a67376", "Url": "https://api.github.com/repos/nath5394/aelf-dailyreadings", "Date": "2018-03-25T18:42:15Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((categories.size()) == 0) { categories = com.ncuhome.QandA.api.resource.QuestionModel.getAllCategories(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6126/buggy-version/src.main.java.com.ncuhome.QandA.api.resource.Question.java", "BodyUseAPI": [], "Fixed commit": "09e87d7648adf1ca871e3b1855a05d878b3ae8ab", "Url": "https://api.github.com/repos/a5467021/QandA-Rebuild-Java", "Date": "2018-08-01T00:57:36Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.biojava.nbio.structure.io.PDBFileReader.getStructure(java.io.ByteArrayInputStream)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((structure.getChains()) != null) && ((structure.getChains().size()) == 1)) { if (structure.getChains().get(0).getChainID().equals(\" \")) structure.getChains().get(0).setChainID(\"_\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7770/buggy-version/proxl_web_app.src.org.yeastrc.xlink.www.webservices.PairwiseSequenceAlignmentService.java", "BodyUseAPI": ["structure.getChains().get(int)", "structure.getChains().get(int)", "structure.getChains().get(0).getChainID().equals(java.lang.String)", "structure.getChains().get(0).getChainID()", "org.biojava.nbio.structure.Structure.getChains()", "org.biojava.nbio.structure.Structure.getChains()", "structure.getChains().get(0).setChainID(java.lang.String)"], "Fixed commit": "12d09a9dcd74cebadbbab281a6cbf6a80d42bf24", "Url": "https://api.github.com/repos/yeastrc/proxl-web-app", "Date": "2018-03-29T18:49:05Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mergeParams.getMergeMode().isReplace()) { targetObject.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9001/buggy-version/dhis-2.dhis-services.dhis-service-core.src.main.java.org.hisp.dhis.schema.DefaultMergeService.java", "BodyUseAPI": [], "Fixed commit": "4d93689140fec7ba9fbc301d2331f1f5d6333133", "Url": "https://api.github.com/repos/vietnguyen/dhis2-core", "Date": "2018-02-11T19:15:10Z"},
{"Line": "=>2141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (j < (original.length())) { javax.swing.text.StyleConstants.setForeground(set, java.awt.Color.GRAY); doc.setCharacterAttributes(j, 1, set, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6433/buggy-version/src.WisdomInWords.wTeacher.java", "BodyUseAPI": ["javax.swing.text.StyledDocument.setCharacterAttributes(int,int,javax.swing.text.SimpleAttributeSet,boolean)"], "Fixed commit": "0e347b6c70f144c65fb307499f413f23f7b4a128", "Url": "https://api.github.com/repos/deLimes/Wisdom-in-words-swing-", "Date": "2018-03-22T16:40:56Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lVariable == null) { return \"null\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4858/buggy-version/src.clearcontrol.microscope.lightsheet.timelapse.io.ScheduleWriter.java", "BodyUseAPI": [], "Fixed commit": "c01118f01777e2f2b4653c5942c009011f0c463b", "Url": "https://api.github.com/repos/ClearControl/clearcontrol-lightsheet", "Date": "2018-08-29T09:39:21Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (lVariable != null) { result = (((result + (clearcontrol.microscope.lightsheet.timelapse.io.ScheduleWriter.variableNameToString(lVariable))) + \"=[\") + (lVariable.get())) + \"] \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4858/buggy-version/src.clearcontrol.microscope.lightsheet.timelapse.io.ScheduleWriter.java", "BodyUseAPI": ["clearcontrol.microscope.lightsheet.timelapse.io.ScheduleWriter.variableNameToString(clearcontrol.core.variable.Variable)", "clearcontrol.core.variable.Variable.get()"], "Fixed commit": "c01118f01777e2f2b4653c5942c009011f0c463b", "Url": "https://api.github.com/repos/ClearControl/clearcontrol-lightsheet", "Date": "2018-08-29T09:39:21Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.getLocalizationDataSource()) != null) { parameters.add(new edu.mit.scansite.client.ui.view.features.Parameter(\"Localization data source\", result.getLocalizationDataSource().getDisplayName())); }else { if (((((result.getProtein()) == null) || ((result.getProtein().getDataSource()) == null)) || ((result.getProtein().getDataSource().getIdentifierType()) == null)) || ((result.getProtein().getDataSource().getIdentifierType().getName()) == null)) { parameters.add(new edu.mit.scansite.client.ui.view.features.Parameter(\"Localization data source\", \"Not available for specified protein identifier type (null/undefined)\", false, true)); }else { parameters.add(new edu.mit.scansite.client.ui.view.features.Parameter(\"Localization data source\", ((\"Not available for specified protein identifier type (\" + (result.getProtein().getDataSource().getIdentifierType().getName())) + \")\"), false, true)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6654/buggy-version/Scansite4.Scansite4Application.src.main.java.edu.mit.scansite.client.ui.view.features.ScanProteinResultPageViewImpl.java", "BodyUseAPI": ["result.getProtein().getDataSource().getIdentifierType().getName()", "edu.mit.scansite.client.ui.view.features.ScanResults.getProtein()", "edu.mit.scansite.client.ui.view.features.ScanResults.getProtein()", "result.getProtein().getDataSource().getIdentifierType()", "result.getLocalizationDataSource().getDisplayName()", "result.getProtein().getDataSource()", "result.getProtein().getDataSource().getIdentifierType()", "java.util.List<edu.mit.scansite.client.ui.view.features.Parameter>.add(edu.mit.scansite.client.ui.view.features.Parameter)", "edu.mit.scansite.client.ui.view.features.ScanResults.getProtein()", "result.getProtein().getDataSource()", "edu.mit.scansite.client.ui.view.features.ScanResults.getLocalizationDataSource()", "java.util.List<edu.mit.scansite.client.ui.view.features.Parameter>.add(edu.mit.scansite.client.ui.view.features.Parameter)", "result.getProtein().getDataSource()", "result.getProtein().getDataSource().getIdentifierType().getName()", "result.getProtein().getDataSource()", "edu.mit.scansite.client.ui.view.features.ScanResults.getProtein()", "edu.mit.scansite.client.ui.view.features.ScanResults.getProtein()", "result.getProtein().getDataSource().getIdentifierType()"], "Fixed commit": "6bc1393cef6f52f60bccc73e1f89881335174625", "Url": "https://api.github.com/repos/kkrismer/scansite4", "Date": "2018-03-17T16:57:11Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.util.ArrayList<org.eurovision.model.CountryPoints>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((countryPoints.size()) < 10) { throw new java.lang.IllegalArgumentException(((((\"Can't get the results due to incorrect \" + \"loaded a data set for the country : [\") + country) + \"]\") + \". Please reload the data set.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4498/buggy-version/src.main.java.org.eurovision.command.ResultsCommand.java", "BodyUseAPI": [], "Fixed commit": "2a70c331cee5bb9c99165bb4a49ec5d6425425b5", "Url": "https://api.github.com/repos/kallura/eurovision-votes", "Date": "2018-04-23T11:45:52Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.equals(\"INT\")) { return java.lang.Integer.class; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2793/buggy-version/src.main.java.com.zach.sqlautomodel.JavaToSQLTypes.java", "BodyUseAPI": [], "Fixed commit": "f806aa8a274722ebae6aa29be288ca20701919e7", "Url": "https://api.github.com/repos/zach-bright/SQLAutoModel", "Date": "2018-01-25T12:55:03Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(this.ambienceMusicPlaying)) && (this.topLayerAmbience.canPlay())) { if (this.mc.getSoundHandler().isSoundPlaying(this.topLayerAmbience)) { this.mc.getSoundHandler().stopSound(this.topLayerAmbience); return; } this.mc.getSoundHandler().playSound(this.topLayerAmbience); this.ambienceMusicPlaying = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9591/buggy-version/src.main.java.com.legacy.glacidus.client.sounds.MusicHandler.java", "BodyUseAPI": ["this.mc.getSoundHandler().playSound(com.legacy.glacidus.client.sounds.ambient.LayerAmbientSound)", "this.mc.getSoundHandler().stopSound(com.legacy.glacidus.client.sounds.ambient.LayerAmbientSound)", "this.mc.getSoundHandler().isSoundPlaying(com.legacy.glacidus.client.sounds.ambient.LayerAmbientSound)"], "Fixed commit": "855317e8a99e9c68c30b5c750e0162e173d79c3b", "Url": "https://api.github.com/repos/Modding-Legacy/Glacidus", "Date": "2018-01-27T04:17:21Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((triple.getObject().isBlank()) || (triple.getSubject().isBlank())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8231/buggy-version/src.main.java.org.aksw.simba.squirrel.deduplication.hashing.impl.IntervalBasedMinHashFunction.java", "BodyUseAPI": [], "Fixed commit": "cba7630f4a9864c795dd3b2f3edb8d11892764ad", "Url": "https://api.github.com/repos/varunmaitreya/Squirrel", "Date": "2018-06-04T12:32:26Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (waypoints.isEmpty()) { subTrajectory.add().setConstant(0.0, subTrajectoryDuration, us.ihmc.commonWalkingControlModules.capturePoint.smoothCMPBasedICPPlanner.AMGeneration.CommandBasedAngularMomentumTrajectoryGenerator.zeroPoint); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3085/buggy-version/ihmc-common-walking-control-modules.src.main.java.us.ihmc.commonWalkingControlModules.capturePoint.smoothCMPBasedICPPlanner.AMGeneration.CommandBasedAngularMomentumTrajectoryGenerator.java", "BodyUseAPI": [], "Fixed commit": "9451c21e4d69dcc15f975118315936d877eeafd2", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-open-robotics-software", "Date": "2018-09-14T02:11:09Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((loadedTrackableSets) != null) && ((loadedTrackableSets.size()) > 0)) { org.firstinspires.ftc.robotcore.internal.vuforia.VuforiaTrackablesImpl trackables = loadedTrackableSets.get(0); int count = 0; for (org.firstinspires.ftc.robotcore.external.navigation.VuforiaTrackable trackable : trackables) { if ((trackable == null) || (((org.firstinspires.ftc.robotcore.external.navigation.VuforiaTrackableDefaultListener) (trackable.getListener())) == null)) { continue; } if (((org.firstinspires.ftc.robotcore.external.navigation.VuforiaTrackableDefaultListener) (trackable.getListener())).isVisible()) { org.opencv.imgproc.Imgproc.putText(outMat, (\"Vuforia: \" + (trackable.getName())), new org.opencv.core.Point(10, ((50 * count) + 50)), 0, 2, new org.opencv.core.Scalar(0, 255, 0), 3); count++; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4912/buggy-version/DogeCV.src.main.java.com.disnodeteam.dogecv.Dogeforia.java", "BodyUseAPI": ["com.disnodeteam.dogecv.Dogeforia.get(int)"], "Fixed commit": "2976dc3843c23498a6a9d53cb975157344a2dd60", "Url": "https://api.github.com/repos/MechanicalMemes/DogeCV", "Date": "2018-10-10T18:29:28Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Constructor<?>.getParameterTypes()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((constrParams.length) == 0) throw new java.lang.InstantiationException(\"Constructor with parameters must have at least one\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/703/buggy-version/src.main.java.instantiator.Instantiator.java", "BodyUseAPI": [], "Fixed commit": "f2b8f5094b87f4c0741738a9a4b54f531eb7049e", "Url": "https://api.github.com/repos/pp2-2018/wirelessanalyzer", "Date": "2018-05-23T22:16:55Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.boxymoron.request.Request8.isDebug) { java.lang.String content = java.nio.charset.StandardCharsets.US_ASCII.decode(buffer).toString(); if (com.boxymoron.request.Request8.isDebug) com.boxymoron.request.Request8.log.debug((\"in body: \\n\" + content)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6590/buggy-version/src.main.java.com.boxymoron.request.Request8.java", "BodyUseAPI": [], "Fixed commit": "047432f9b54d671c43b82e188c382bee0298b444", "Url": "https://api.github.com/repos/boxymoron/Layer7Router", "Date": "2018-02-14T22:28:06Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (positive) { this.number = number.toCharArray(); }else { this.number = number.split(\"-\")[((number.split(\"-\").length) - 1)].toCharArray(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4411/buggy-version/src.pkg2wf90.assignment.pkg1.Number.java", "BodyUseAPI": [], "Fixed commit": "b61ab6dfeb48bb190d39c2aacab53eb6e82cb5ad", "Url": "https://api.github.com/repos/VortexAI/2WF90-Assignment-1", "Date": "2018-09-16T16:41:32Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (listOfFiles[index].getName().contains(\".xml\")) { fileNames.add(listOfFiles[index].getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9689/buggy-version/src.main.java.ilie.vlad.iulian.application.service.impl.AppServiceImpl.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.io.File.getName()"], "Fixed commit": "1e652c4792db457711ffc579fdb7b7779a67d1f5", "Url": "https://api.github.com/repos/ilievladiulian/driversed", "Date": "2018-03-18T20:55:00Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mViewModel) != null) { mViewModel.detachView(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1988/buggy-version/Client.lib.mvvm.src.main.java.com.weapon.joker.lib.mvvm.common.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "943448d04bf539dcfb81b64617b55fd56fb31c40", "Url": "https://api.github.com/repos/G-Joker/WeaponApp", "Date": "2018-02-23T10:59:22Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tokenRequest.isMerchantToken()) { intPaymentTokenDelete.setTokenScope(\"merchant\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8491/buggy-version/hybris.bin.y-ext.ext-worldpay.worldpayapi.src.com.worldpay.service.model.token.DeleteTokenRequest.java", "BodyUseAPI": [], "Fixed commit": "9f91298e6bb6b52277f81ffc79898ca0c38cc994", "Url": "https://api.github.com/repos/Worldpay/hybris", "Date": "2018-07-03T11:52:28Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (umiTag == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6785/buggy-version/src.main.java.picard.sam.markduplicates.UmiUtil.java", "BodyUseAPI": [], "Fixed commit": "d3d5456f51f83beb674274ab83da4140611adc4d", "Url": "https://api.github.com/repos/broadinstitute/picard", "Date": "2018-10-18T19:28:25Z"},
{"Line": "=>2568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (binColumnName != null) { strPlotDataSelect = (strPlotDataSelect + \", ld.\") + binColumnName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3513/buggy-version/java.edu.ucar.metviewer.db.MysqlAppDatabaseManager.java", "BodyUseAPI": [], "Fixed commit": "d91fd280d413f5a5349582eec330f60faa0da7c9", "Url": "https://api.github.com/repos/NCAR/METviewer", "Date": "2018-10-11T16:05:47Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args == null) || ((args.length) < 1)) { return sql; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7564/buggy-version/entity.queryable.src.entity.tool.util.DBUtils.java", "BodyUseAPI": [], "Fixed commit": "dfec80a71ee8a771111fafcad5e0600dd1da923b", "Url": "https://api.github.com/repos/linlurui/entityQueryable", "Date": "2018-09-24T17:50:34Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.fileProvider.addNextPrimitive(source, destination))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3598/buggy-version/src.gui.cipherModule.FileEncryptor.java", "BodyUseAPI": [], "Fixed commit": "18c99c75cc7d8306798e69e6786309e90c908334", "Url": "https://api.github.com/repos/dart1277/software_eng_project", "Date": "2018-04-26T10:25:38Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fileToSave.exists()) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3598/buggy-version/src.gui.cipherModule.FileProvider.java", "BodyUseAPI": [], "Fixed commit": "18c99c75cc7d8306798e69e6786309e90c908334", "Url": "https://api.github.com/repos/dart1277/software_eng_project", "Date": "2018-04-26T10:25:38Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.ImageView.getWidth()", "android.widget.ImageView.getHeight()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((targetW > 0) || (targetH > 0)) { scaleFactor = java.lang.Math.min((photoW / targetW), (photoH / targetH)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6286/buggy-version/app.src.main.java.com.example.android.bookstore.PhotoUtility.java", "BodyUseAPI": ["java.lang.Math.min(int,int)"], "Fixed commit": "27f0d4312fa42c681e1c0766fbb4bbab6ee50db1", "Url": "https://api.github.com/repos/ahmedhassanfarrag/Book_Store", "Date": "2018-07-22T13:56:21Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cdt) != null) { cdt.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9661/buggy-version/app.src.main.java.com.addie.timesapp.service.AppTimeDialogService.java", "BodyUseAPI": [], "Fixed commit": "f324b5d309e3f49d80ab659bfbfc9fb060b36deb", "Url": "https://api.github.com/repos/addiegupta/TimesApp", "Date": "2018-07-22T06:31:47Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((taskPanel) != null) { taskPanel.setTagColor(tagIndex, tagColor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8350/buggy-version/OrganizerClient.src.View.edition.EditionPanel.java", "BodyUseAPI": [], "Fixed commit": "4c3310c6ae6cb36ad24e30683828a2813c7569a7", "Url": "https://api.github.com/repos/guerrero2016/DPOOclient", "Date": "2018-04-23T07:31:10Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((taskPanel) != null) { taskPanel.setTagName(tagIndex, tagName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8350/buggy-version/OrganizerClient.src.View.edition.EditionPanel.java", "BodyUseAPI": [], "Fixed commit": "4c3310c6ae6cb36ad24e30683828a2813c7569a7", "Url": "https://api.github.com/repos/guerrero2016/DPOOclient", "Date": "2018-04-23T07:31:10Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((badendmusic) != null) { badendmusic.dispose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5333/buggy-version/core.src.main.java.com.missionbit.game.states.GameOverState.java", "BodyUseAPI": [], "Fixed commit": "e3a9058f09fd71c0c73de54e80668fd7872860de", "Url": "https://api.github.com/repos/temei817/Needle", "Date": "2018-07-26T21:03:46Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((goodendmusic) != null) { goodendmusic.dispose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5333/buggy-version/core.src.main.java.com.missionbit.game.states.GameOverState.java", "BodyUseAPI": [], "Fixed commit": "e3a9058f09fd71c0c73de54e80668fd7872860de", "Url": "https://api.github.com/repos/temei817/Needle", "Date": "2018-07-26T21:03:46Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bunnymusic) != null) { bunnymusic.dispose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5333/buggy-version/core.src.main.java.com.missionbit.game.states.GameOverState.java", "BodyUseAPI": [], "Fixed commit": "e3a9058f09fd71c0c73de54e80668fd7872860de", "Url": "https://api.github.com/repos/temei817/Needle", "Date": "2018-07-26T21:03:46Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (panda.lang.Strings.isEmpty(key)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4658/buggy-version/panda-demo.src.main.java.panda.demo.action.pet.PetSearchAction.java", "BodyUseAPI": [], "Fixed commit": "2f986c0b55a1c6437bdf5ab578469e561de2fe88", "Url": "https://api.github.com/repos/pandafw/panda", "Date": "2018-06-06T13:22:15Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasGUI) { if (state) { countryGUI.setImageOpacity(1); }else { countryGUI.setImageOpacity(0.1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5883/buggy-version/MainProject.Country.java", "BodyUseAPI": [], "Fixed commit": "bcce2fc777c5ea47a63bc56ad2054b0a6bb1722a", "Url": "https://api.github.com/repos/pjmchale/cpsc", "Date": "2018-03-16T17:21:06Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasGUI) { countryGUI.updateOwnerVisual(ownerName, ownerID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5883/buggy-version/MainProject.Country.java", "BodyUseAPI": [], "Fixed commit": "bcce2fc777c5ea47a63bc56ad2054b0a6bb1722a", "Url": "https://api.github.com/repos/pjmchale/cpsc", "Date": "2018-03-16T17:21:06Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((start) == null) throw new java.lang.IllegalStateException(\"Race has not started.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7330/buggy-version/src.chronoTimer.GRP.java", "BodyUseAPI": [], "Fixed commit": "f07323f340f419eb1d86f378282f0cbae4a0caf1", "Url": "https://api.github.com/repos/Fastwatch/FastWatch361", "Date": "2018-04-17T12:26:11Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mStateMapItems) == (android.view.View.INVISIBLE)) { toggleAnimationOverlayItems(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/240/buggy-version/app.src.main.java.de.p72b.mocklation.map.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "e9d6f6865e18b070c3fe70e5d66171bd1d1df2b7", "Url": "https://api.github.com/repos/P72B/Mocklation", "Date": "2018-01-13T13:40:33Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["se.vgregion.alfresco.mellanarkiv.platform.pipeline.ingest.impl.convert.AbstractConvertWorker.getCoreRepresentationValue(org.alfresco.service.cmr.repository.NodeRef,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((preservationPlanningText != null) && (!(preservationPlanningText.isEmpty()))) { mapping.put(\"{ITEM_CORE_DISPOSE_TEXT}\", preservationPlanningText); }else { mapping.put(\"{ITEM_CORE_DISPOSE_TEXT}\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8709/buggy-version/platform-mellanarkiv.src.main.java.se.vgregion.alfresco.mellanarkiv.platform.pipeline.ingest.impl.convert.AbstractConvertWorker.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "a7a1388f60573c89a33d5532f206d33a23360ca8", "Url": "https://api.github.com/repos/Vastra-Gotalandsregionen/alfresco-mellanarkiv", "Date": "2018-01-23T12:03:45Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(i.equals(\"\"))) { setOfPlayers.add(new edu.eci.arsw.eciwar.model.Player(java.lang.Integer.valueOf(i))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3936/buggy-version/src.main.java.edu.eci.arsw.eciwar.services.impl.REDISGameServices.java", "BodyUseAPI": ["java.util.Set<edu.eci.arsw.eciwar.model.Player>.add(edu.eci.arsw.eciwar.model.Player)", "java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "e135d62945448dc4a109080221cc0e8bcec0b241", "Url": "https://api.github.com/repos/AnonymousGamesECI/BackendECIWAR", "Date": "2018-05-07T14:28:08Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.alfresco.service.cmr.repository.NodeService.getProperty(org.alfresco.service.cmr.repository.NodeRef,RlArchiveModel.PROP_DEFAULT_PREVIEW_NODE)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (node != null) { object.put(se.vgregion.alfresco.mellanarkiv.platform.webscripts.GetArchiveObjectsIndexStatusWebscript.PREVIEW_NODE, node.toString()); }else { object.put(se.vgregion.alfresco.mellanarkiv.platform.webscripts.GetArchiveObjectsIndexStatusWebscript.PREVIEW_NODE, \"undefined\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6060/buggy-version/platform-mellanarkiv.src.main.java.se.vgregion.alfresco.mellanarkiv.platform.webscripts.GetArchiveObjectsIndexStatusWebscript.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.io.Serializable>.put(java.lang.String,node.toString())", "org.alfresco.service.cmr.repository.NodeRef.toString()"], "Fixed commit": "1e928b3891eec9d0ef8f61bb4d490e6568da3ead", "Url": "https://api.github.com/repos/Vastra-Gotalandsregionen/alfresco-mellanarkiv", "Date": "2018-07-04T08:05:07Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((res.length()) >= 8) { res = res.substring(0, 8); }else { res = res.substring(0, res.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7310/buggy-version/src.StringUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "0ce1933b569ee1b0677a5d6c490416a4b201a8f0", "Url": "https://api.github.com/repos/Purdue-CS193/lab-3-gmlee2920", "Date": "2018-10-05T14:29:35Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((groupId) == (-1)) { com.mifos.mifosxdroid.core.util.Toaster.show(rootView, getString(R.string.error_select_group)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9744/buggy-version/mifosng-android.src.main.java.com.mifos.mifosxdroid.online.generatecollectionsheet.GenerateCollectionSheetFragment.java", "BodyUseAPI": [], "Fixed commit": "4bb3055689b2a1f5bfb41f85c9b2b8676316500b", "Url": "https://api.github.com/repos/himanshu112/android-client", "Date": "2018-02-12T15:22:56Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gregtech.common.tileentities.machines.multi.GT_MetaTileEntity_DrillerBase.getStackInSlot(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((pipes != null) && (!(pipes.isItemEqual(gregtech.common.tileentities.machines.multi.GT_MetaTileEntity_DrillerBase.miningPipe)))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2319/buggy-version/src.main.java.gregtech.common.tileentities.machines.multi.GT_MetaTileEntity_DrillerBase.java", "BodyUseAPI": [], "Fixed commit": "b2393ce4060724f17efa4945f8d9eb0eb35ea725", "Url": "https://api.github.com/repos/IdealIndustrial/GT5Unofficial", "Date": "2018-05-11T20:21:55Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (null == user) throw new org.springframework.security.oauth2.common.exceptions.OAuth2Exception(\"User Not Found.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1827/buggy-version/core.egov-user.src.main.java.org.egov.user.security.oauth2.custom.CustomUserDetailsService.java", "BodyUseAPI": [], "Fixed commit": "7db0f48474482e88857299d4b13d10bf1b9f8887", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2018-04-13T06:07:43Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.egov.user.domain.service.UserService.getUserByUsername(java.lang.String,org.egov.user.security.oauth2.custom.CustomAuthenticationProvider.getTenantId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == user) user = userService.getUserByUsernameAndTenantId(username, org.egov.user.security.oauth2.custom.CustomAuthenticationProvider.getTenantId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1827/buggy-version/core.egov-user.src.main.java.org.egov.user.security.oauth2.custom.CustomUserDetailsService.java", "BodyUseAPI": [], "Fixed commit": "7db0f48474482e88857299d4b13d10bf1b9f8887", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2018-04-13T06:07:43Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (org.egov.user.security.oauth2.custom.CustomAuthenticationProvider.getTenantId())) throw new org.springframework.security.oauth2.common.exceptions.OAuth2Exception(\"User Session not availble (There was a server re-start.) .Please login again\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1827/buggy-version/core.egov-user.src.main.java.org.egov.user.security.oauth2.custom.CustomUserDetailsService.java", "BodyUseAPI": [], "Fixed commit": "7db0f48474482e88857299d4b13d10bf1b9f8887", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2018-04-13T06:07:43Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(sovietstruggle.SovietStruggleGUI,java.lang.String,java.lang.String,int,<nulltype>,areas.toArray(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (choice == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6181/buggy-version/src.sovietstruggle.SovietStruggleGUI.java", "BodyUseAPI": [], "Fixed commit": "bb2d9456b78ea5a3c4e94ef610f01c94db7099af", "Url": "https://api.github.com/repos/Superchig/sovietstruggle", "Date": "2018-05-23T15:24:05Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (needScores) { for (org.apache.lucene.search.grouping.GroupDocs<?> group : topGroups.groups) { org.apache.lucene.search.TopFieldCollector.populateScores(group.scoreDocs, searcher, query); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5303/buggy-version/solr.core.src.java.org.apache.solr.search.grouping.distributed.command.TopGroupsFieldCommand.java", "BodyUseAPI": [], "Fixed commit": "d010cdd87eec89bf6308351b817d9ec1d5c6e14e", "Url": "https://api.github.com/repos/michaelbraun/lucene-solr", "Date": "2018-07-24T10:10:25Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getValue()) != null) { doc.addText((\"\" + (item.getValue()))); break; }else { if (org.lorislab.corn.xml.RandomUtil.randomBoolean(config.generateDefaultElementValues)) { doc.addText(elem.getValueConstraintValue().getNormalizedValue()); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9605/buggy-version/corn.src.main.java.org.lorislab.corn.xml.Generator.java", "BodyUseAPI": ["org.lorislab.corn.xml.StackItem.getValue()", "org.lorislab.corn.xml.XMLDocument.addText((\"\" + (item.getValue())))"], "Fixed commit": "a5a2140e9362f2328a4560e7b5a9bf2113b6a612", "Url": "https://api.github.com/repos/lorislab/corn", "Date": "2018-05-17T21:17:04Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(term.getName())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (\"xxx\".equals(val)) { java.lang.System.out.println(val); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9605/buggy-version/corn.src.main.java.org.lorislab.corn.xml.Generator.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.Object)"], "Fixed commit": "a5a2140e9362f2328a4560e7b5a9bf2113b6a612", "Url": "https://api.github.com/repos/lorislab/corn", "Date": "2018-05-17T21:17:04Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Throwable.getLocalizedMessage()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (message == null) { message = failure.getClass().getSimpleName(); message = removeSuffix(message, \"Exception\"); message = CaseFormat.UPPER_CAMEL.to(CaseFormat.LOWER_UNDERSCORE, message).replace('_', ' '); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6414/buggy-version/bdio-tool.src.main.java.com.blackducksoftware.bdio2.tool.Tool.java", "BodyUseAPI": [], "Fixed commit": "e653b5c2d4db9ceaf3e3d0874ea3b0cc5110fd46", "Url": "https://api.github.com/repos/blackducksoftware/bdio", "Date": "2018-05-21T19:10:08Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(content.getRequestParameters().get(AttributeName.PRICE.getAttribute()).equals(\"\"))) { medicineTemp.setPrice(new java.math.BigDecimal(content.getRequestParameters().get(AttributeName.PRICE.getAttribute()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7119/buggy-version/src.main.java.by.epam.pharmacy.service.impl.MedicineServiceImpl.java", "BodyUseAPI": ["by.epam.pharmacy.entity.Medicine.setPrice(java.math.BigDecimal)", "by.epam.pharmacy.command.SessionRequestContent.getRequestParameters()", "content.getRequestParameters().get(AttributeName.PRICE.getAttribute())"], "Fixed commit": "cdf9ef234c71435770c89f50cf859123f77c0c8e", "Url": "https://api.github.com/repos/IvanStrazhevich/pharmacy", "Date": "2018-08-16T12:31:37Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(content.getRequestParameters().get(AttributeName.DOSAGE.getAttribute()).equals(\"\"))) { medicineTemp.setDosage(new java.math.BigDecimal(content.getRequestParameters().get(AttributeName.DOSAGE.getAttribute()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7119/buggy-version/src.main.java.by.epam.pharmacy.service.impl.MedicineServiceImpl.java", "BodyUseAPI": ["content.getRequestParameters().get(AttributeName.DOSAGE.getAttribute())", "by.epam.pharmacy.command.SessionRequestContent.getRequestParameters()", "by.epam.pharmacy.entity.Medicine.setDosage(java.math.BigDecimal)"], "Fixed commit": "cdf9ef234c71435770c89f50cf859123f77c0c8e", "Url": "https://api.github.com/repos/IvanStrazhevich/pharmacy", "Date": "2018-08-16T12:31:37Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(content.getRequestParameters().get(AttributeName.QUANTITY_AT_STORAGE.getAttribute()).equals(\"\"))) { medicineTemp.setQuantityAtStorage(java.lang.Integer.valueOf(content.getRequestParameters().get(AttributeName.QUANTITY_AT_STORAGE.getAttribute()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7119/buggy-version/src.main.java.by.epam.pharmacy.service.impl.MedicineServiceImpl.java", "BodyUseAPI": ["by.epam.pharmacy.command.SessionRequestContent.getRequestParameters()", "content.getRequestParameters().get(AttributeName.QUANTITY_AT_STORAGE.getAttribute())", "java.lang.Integer.valueOf(content.getRequestParameters().get(AttributeName.QUANTITY_AT_STORAGE.getAttribute()))", "by.epam.pharmacy.entity.Medicine.setQuantityAtStorage(java.lang.Integer)"], "Fixed commit": "cdf9ef234c71435770c89f50cf859123f77c0c8e", "Url": "https://api.github.com/repos/IvanStrazhevich/pharmacy", "Date": "2018-08-16T12:31:37Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StackTraceElement.getMethodName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((ste.getLineNumber()) < 0) & (Constants.Util.isSamShim(name))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5998/buggy-version/src.kilim.Task.java", "BodyUseAPI": [], "Fixed commit": "a8ea7f79cd30ca04765df8a2ed0161b78c38a786", "Url": "https://api.github.com/repos/nqzero/kilim", "Date": "2017-12-29T21:11:12Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t < 0) { t = tca + thc; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7234/buggy-version/Ex2.src.edu.cg.scene.objects.Sphere.java", "BodyUseAPI": [], "Fixed commit": "096abff0e1f00f868797dd62da1c503c251e7b8b", "Url": "https://api.github.com/repos/mullerik/ComputerGraphics", "Date": "2018-05-25T08:42:23Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((yAxisArray.get(0)) != 0) { resultsGraph.getViewport().setMinY(0); }else { resultsGraph.getViewport().setMinY(yAxisArray.get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/126/buggy-version/app.src.main.java.com.example.masonrussell.firedynamics.OxygenLevels.java", "BodyUseAPI": ["resultsGraph.getViewport().setMinY(java.lang.Double)", "java.util.ArrayList<java.lang.Double>.get(int)"], "Fixed commit": "23599762141caf8057596dc09d73e4da5c6dda0d", "Url": "https://api.github.com/repos/msrusse/FireDynamics", "Date": "2018-03-06T03:49:34Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((afterJsessionidStr == null) || (afterJsessionidStr.isEmpty())) return finalUrl; else return finalUrl + afterJsessionidStr;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1359/buggy-version/src.main.java.eu.openaire.doc_urls_retriever.util.url.UrlUtils.java", "BodyUseAPI": [], "Fixed commit": "a34fd16a6b09c97a161e840870b69ee0478120b1", "Url": "https://api.github.com/repos/LSmyrnaios/DocUrlsRetriever", "Date": "2018-03-09T00:09:07Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (usePreOrder) { evolutionaryProcessDelegate = new dr.evomodel.treedatalikelihood.HomogenousSubstitutionModelDelegate(tree, branchModel, 0, true); }else { evolutionaryProcessDelegate = new dr.evomodel.treedatalikelihood.HomogenousSubstitutionModelDelegate(tree, branchModel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8127/buggy-version/src.dr.evomodel.treedatalikelihood.BeagleDataLikelihoodDelegate.java", "BodyUseAPI": [], "Fixed commit": "e08436537d4523abd7358c43bc6ac3ab44382328", "Url": "https://api.github.com/repos/beast-dev/beast-mcmc", "Date": "2018-04-18T23:01:27Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listener) != null) { listener.onPlaying(\"PLAYING\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5094/buggy-version/jcvideoplayer-lib.src.main.java.fm.jiecao.jcvideoplayer_lib.JCVideoPlayer.java", "BodyUseAPI": [], "Fixed commit": "2d8fe5f9fec930f4faebff8b13729b80bbddc872", "Url": "https://api.github.com/repos/sachinvarma/JiaoZiVideoPlayer", "Date": "2018-03-05T12:26:01Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.coachingdigital.foodstorm.repo.IngredientRepository.findRandomByGroup(groupIngredient.getId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (ingredient != null) { if ((ingredient.getGroups().size()) > 1) { ingredient.getGroups().clear(); ingredient.getGroups().add(groupIngredient); } menu.add(ingredient); java.lang.System.out.println(ingredient); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3895/buggy-version/src.main.java.fr.coachingdigital.foodstorm.service.MenuService.java", "BodyUseAPI": ["fr.coachingdigital.foodstorm.model.Ingredient.getGroups()", "java.util.List<fr.coachingdigital.foodstorm.model.Ingredient>.add(fr.coachingdigital.foodstorm.model.Ingredient)", "ingredient.getGroups().size()", "fr.coachingdigital.foodstorm.model.Ingredient.getGroups()", "ingredient.getGroups().clear()", "java.io.PrintStream.println(fr.coachingdigital.foodstorm.model.Ingredient)", "fr.coachingdigital.foodstorm.model.Ingredient.getGroups()", "ingredient.getGroups().add(fr.coachingdigital.foodstorm.model.GroupIngredient)"], "Fixed commit": "bc81e293bcffc91874989984fc63b57835b8da48", "Url": "https://api.github.com/repos/sleray/Foodstorm-back", "Date": "2018-05-23T15:55:25Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPoiSearch) != null) { mPoiSearch.destroy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5288/buggy-version/app.src.main.java.com.starstudio.loser.phrapp.item.map.HospitalMapActivity.java", "BodyUseAPI": [], "Fixed commit": "b9654abe3335142902edbe640a1224d39eab248f", "Url": "https://api.github.com/repos/a1198375223/PHRapp", "Date": "2018-08-12T13:13:46Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isVertical) { if (((x + shipLength) > 11) || (x < 1)) return false; else { if ((y >= 75) || (y < 65)) { return false; } ship.setOccupiedSquares(x, y, isVertical); return true; } }else { if (((y + shipLength) > 75) || (y < 65)) { return false; }else { if ((x >= 10) || (x < 1)) { return false; } ship.setOccupiedSquares(x, y, isVertical); return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6727/buggy-version/src.main.java.cs361.battleships.models.Board.java", "BodyUseAPI": ["cs361.battleships.models.Ship.setOccupiedSquares(int,char,boolean)", "cs361.battleships.models.Ship.setOccupiedSquares(int,char,boolean)"], "Fixed commit": "99a6251179d6269627de31a54a2678ec111979b0", "Url": "https://api.github.com/repos/cs361fall2018/project-dixonallstars", "Date": "2018-10-04T01:09:21Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (kind == \"DESTROYER\") { this.occupiedSquares.add(new cs361.battleships.models.Square(0, 'A')); this.occupiedSquares.add(new cs361.battleships.models.Square(0, 'A')); this.occupiedSquares.add(new cs361.battleships.models.Square(0, 'A')); this.length = 3; }else if (kind == \"BATTLESHIP\") { this.occupiedSquares.add(new cs361.battleships.models.Square(0, 'A')); this.occupiedSquares.add(new cs361.battleships.models.Square(0, 'A')); this.occupiedSquares.add(new cs361.battleships.models.Square(0, 'A')); this.occupiedSquares.add(new cs361.battleships.models.Square(0, 'A')); this.length = 4; }else { this.occupiedSquares.add(new cs361.battleships.models.Square(0, 'A')); this.occupiedSquares.add(new cs361.battleships.models.Square(0, 'A')); this.length = 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6727/buggy-version/src.main.java.cs361.battleships.models.Ship.java", "BodyUseAPI": [], "Fixed commit": "99a6251179d6269627de31a54a2678ec111979b0", "Url": "https://api.github.com/repos/cs361fall2018/project-dixonallstars", "Date": "2018-10-04T01:09:21Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.equals(source, modification)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4136/buggy-version/uiview.src.main.java.com.angcyo.uiview.widget.CharInputFilter.java", "BodyUseAPI": [], "Fixed commit": "e7bdd4aa7114a622b1b3ec0d4d196152cddad9c4", "Url": "https://api.github.com/repos/angcyo/RLibrary", "Date": "2018-10-20T10:13:17Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, cn.hutool.core.bean.BeanDesc.PropDesc>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((null == sourcePd) && (((java.lang.Boolean.class) == valueType) || ((boolean.class) == valueType))) { sourcePd = sourcePdMap.get(cn.hutool.core.util.StrUtil.upperFirstAndAddPre(key, \"is\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9716/buggy-version/hutool-core.src.main.java.cn.hutool.core.bean.copier.provider.BeanValueProvider.java", "BodyUseAPI": [], "Fixed commit": "f35185c123484aeccc69c019d0924712f24c6cb2", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2018-01-12T15:58:49Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 24) { try { java.lang.reflect.Method m = android.os.StrictMode.class.getMethod(\"disableDeathOnFileUriExposure\"); m.invoke(null); } catch (java.lang.Exception e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2933/buggy-version/app.src.main.java.com.mydroidtechnology.embaralhado.view.InsertNewCategoriesActivity.java", "BodyUseAPI": [], "Fixed commit": "5b0bbbf753618169081d190f145ee57d993ea8eb", "Url": "https://api.github.com/repos/JefersonSilva20/Embaralhado", "Date": "2018-06-04T21:21:04Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((requestCode == (com.owncloud.android.ui.activity.UploadFilesActivity.REQUEST_SCANNED_DOCUMENT_CROP)) && (resultCode == (RESULT_OK))) { android.os.Bundle croppedDocumentData = capturedData.getExtras(); java.lang.String croppedDocumentImagePath = ((java.lang.String) (croppedDocumentData.get(com.owncloud.android.ui.activity.UploadFilesActivity.CROPPED_SCANNED_DOCUMENT_IMAGE_PATH))); new com.owncloud.android.ui.activity.UploadFilesActivity.CheckAvailableSpaceTask(croppedDocumentImagePath).execute(); }else if (((requestCode == (com.owncloud.android.ui.activity.UploadFilesActivity.REQUEST_IMAGE_CAPTURE)) || (requestCode == (com.owncloud.android.ui.activity.UploadFilesActivity.REQUEST_DOCUMENT_SCAN))) && (resultCode == (RESULT_CANCELED))) { if ((image) != null) { image.delete(); com.owncloud.android.lib.common.utils.Log_OC.d(com.owncloud.android.ui.activity.UploadFilesActivity.TAG, \"File deleted\"); } setResult(com.owncloud.android.ui.activity.RESULT_CANCELED); finish(); }else if (resultCode == (RESULT_CANCELED)) { setResult(com.owncloud.android.ui.activity.RESULT_CANCELED); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6638/buggy-version/src.com.owncloud.android.ui.activity.UploadFilesActivity.java", "BodyUseAPI": [], "Fixed commit": "8981abd91af1492612b0441f9247a4ccd5d613d4", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-03-14T05:32:11Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (div == 0) div = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9197/buggy-version/1.12.src.main.java.com.rwtema.extrautils2.modcompat.XUTConTextureMagicWood.java", "BodyUseAPI": [], "Fixed commit": "788113aa3018fb8bcbc81fcf3381542707876466", "Url": "https://api.github.com/repos/rwtema/Extra-Utilities-2-Source", "Date": "2018-07-08T19:50:01Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ip.contains(\":\")) { ip = ip.substring(0, ip.indexOf(\":\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8066/buggy-version/src.main.java.me.hippo.network.vpndetection.network.VpnDetectingService.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "22991786f4e8cd86d4f376e38fe0e10ef6468ae6", "Url": "https://api.github.com/repos/Hippah/JavaVpnOrProxyChecker", "Date": "2018-09-29T00:46:08Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.mosaicnetworks.chatr.db.Contact.getContactName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (contactName == null) { holder.nameTextView.setText(((\"\\\"\" + (member.getUserName())) + \"\\\"\")); }else { holder.nameTextView.setText(contactName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/31/buggy-version/app.src.main.java.io.mosaicnetworks.chatr.adapters.ContactsListAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "2ac425a5df38d7d922d496f84ed3561128703ee4", "Url": "https://api.github.com/repos/mosaicnetworks/chatr", "Date": "2018-07-23T18:06:42Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.edplan.framework.resource.AResource.openBufferedReader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (r == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6537/buggy-version/EdGameFramework.src.main.java.com.edplan.framework.resource.AResource.java", "BodyUseAPI": [], "Fixed commit": "5b2394421f266c8d605a09eb5b578c049c8a1eb2", "Url": "https://api.github.com/repos/EdrowsLuo/EdGame", "Date": "2018-06-30T07:38:57Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((((startdate.compareTo(book.getStartdate())) < 0) && ((startdate.compareTo(book.getEnddate())) < 0)) || ((startdate.compareTo(book.getEnddate())) > 0))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2045/buggy-version/src.main.java.com.sahariar.TripPlanner.Service.BookingService.java", "BodyUseAPI": [], "Fixed commit": "96b9cd2bc25b393eca192afcc65dfeb9f0eb4f78", "Url": "https://api.github.com/repos/sahariardev/Trip-Planer", "Date": "2018-02-27T15:50:20Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isRoomAvailable(b.getRoom().getId(), b.getStartdate(), b.getEnddate()))) { throw new com.sahariar.TripPlanner.Exceptions.BadRequest(\"Room is already booked\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2045/buggy-version/src.main.java.com.sahariar.TripPlanner.Service.BookingService.java", "BodyUseAPI": [], "Fixed commit": "96b9cd2bc25b393eca192afcc65dfeb9f0eb4f78", "Url": "https://api.github.com/repos/sahariardev/Trip-Planer", "Date": "2018-02-27T15:50:20Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tomato.tuantt.tomatoapp.SharedPreferenceConfig.getInstance(this).getAvatarLink()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(avatar)) { civAvatar.setImageResource(R.drawable.ic_avatar); }else { com.squareup.picasso.Picasso.with(this).load(avatar).error(R.drawable.ic_avatar).fit().centerInside().into(civAvatar); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/746/buggy-version/app.src.main.java.com.tomato.tuantt.tomatoapp.activity.ProfileActivity.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(this).load(avatar).error(R.drawable.ic_avatar)", "com.squareup.picasso.Picasso.with(this).load(avatar).error(R.drawable.ic_avatar).fit().centerInside()", "com.squareup.picasso.Picasso.with(this).load(avatar).error(R.drawable.ic_avatar).fit()", "com.squareup.picasso.Picasso.with(this).load(avatar).error(R.drawable.ic_avatar).fit().centerInside().into(de.hdodenhof.circleimageview.CircleImageView)", "com.squareup.picasso.Picasso.with(this).load(java.lang.String)"], "Fixed commit": "0e1f7c140b23b28ae87eed36f132479385b89a0a", "Url": "https://api.github.com/repos/tranthanhtuan269/tomatoAndroid", "Date": "2018-10-31T07:03:51Z"},
{"Line": "=>1239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jetbrains.jetpad.vclang.typechecking.visitor.Expression.normalize(NormalizeVisitor.Mode.WHNF)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(type.isInstance(com.jetbrains.jetpad.vclang.typechecking.visitor.ErrorExpression.class))) { myErrorReporter.report(new com.jetbrains.jetpad.vclang.typechecking.visitor.TypeMismatchError(com.jetbrains.jetpad.vclang.error.doc.DocFactory.text(\"a class instance\"), type, statement.implementation)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9419/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.typechecking.visitor.CheckTypeVisitor.java", "BodyUseAPI": ["com.jetbrains.jetpad.vclang.typechecking.error.LocalErrorReporter.report(com.jetbrains.jetpad.vclang.typechecking.visitor.TypeMismatchError)"], "Fixed commit": "7ef7ada3188a0cdd4cbcfafaf10cd3dfbb089f18", "Url": "https://api.github.com/repos/JetBrains/Arend", "Date": "2018-07-19T15:31:50Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (queryStartIndex != (-1)) { queryString = resourcePath.substring(queryStartIndex); resourcePath = resourcePath.substring(0, queryStartIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8888/buggy-version/src.main.java.com.github.kospiotr.bundler.CssTagProcessor.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int)"], "Fixed commit": "4be87eb49a9bfe6d4b66fbee944490aafdb43bc2", "Url": "https://api.github.com/repos/CH3CHO/bundler-maven-plugin", "Date": "2018-05-03T07:03:19Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (vr instanceof com.lmxyy.mxcompiler.ir.StaticData) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1137/buggy-version/src.com.lmxyy.mxcompiler.AST.Node.java", "BodyUseAPI": [], "Fixed commit": "d69907c2e3b664c1b48e6996e398c5db237b4a10", "Url": "https://api.github.com/repos/lmxyy/Mx_star-Compiler", "Date": "2018-06-07T18:34:15Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(\"index\".equals(model))) { user.setSource(redisService.get(model)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4899/buggy-version/src.main.java.com.love.controller.WechatConfigController.java", "BodyUseAPI": ["com.love.service.RedisService.get(java.lang.String)", "com.love.model.User.setSource(redisService.get(model))"], "Fixed commit": "4164671b65c1bb5804d46594afdf2d26b74ed0d3", "Url": "https://api.github.com/repos/NiccoLiu/name_of_love_web", "Date": "2018-04-08T02:55:02Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((username.length()) > 10) || ((username.length()) < 1)) || ((password.length()) > 10)) || ((password.length()) < 1)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7403/buggy-version/app.src.main.java.edu.gatech.cs2340.team67.homelessshelter.Models.Model.java", "BodyUseAPI": [], "Fixed commit": "0942339b21084fca99ca8aadfe943306196c93a0", "Url": "https://api.github.com/repos/jmeyers35/2340-Team-67", "Date": "2018-02-27T23:46:21Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (response.isSuccessful()) { android.widget.Toast.makeText(no.schedule.javazone.v3.feedback.FeedbackApiHelper.context, \"Thank you for the feedback!\", Toast.LENGTH_SHORT).show(); }else { android.widget.Toast.makeText(no.schedule.javazone.v3.feedback.FeedbackApiHelper.context, \"Vote failed! Please try again\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/927/buggy-version/JZAndroid.app.src.main.java.no.schedule.javazone.v3.feedback.FeedbackApiHelper.java", "BodyUseAPI": [], "Fixed commit": "d1f1003caba7f4cfad9db05effbacf3fa07c31be", "Url": "https://api.github.com/repos/javaBin/jz-native-mobile-apps", "Date": "2018-09-04T20:06:56Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(input.equals(\"\"))) { java.util.List<webseeker.controller.WebModel> webSearchList = theWebRepository.findByWebNameContainingIgnoreCaseOrUrlContainingIgnoreCaseOrDescriptionContainingIgnoreCase(input, input, input); java.util.List<webseeker.controller.UserModel> userSearchList = theUserRepository.findByNameContainingIgnoreCase(input); model.addAttribute(\"input\", input); model.addAttribute(\"webList\", webSearchList); model.addAttribute(\"userList\", userSearchList); }else { java.util.List<webseeker.controller.WebModel> webSearchList = new java.util.ArrayList<webseeker.controller.WebModel>(); java.util.List<webseeker.controller.UserModel> userSearchList = new java.util.ArrayList<webseeker.controller.UserModel>(); model.addAttribute(\"input\", input); model.addAttribute(\"webList\", webSearchList); model.addAttribute(\"userList\", userSearchList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7580/buggy-version/src.main.java.webseeker.controller.MainController.java", "BodyUseAPI": ["webseeker.controller.WebRepository.findByWebNameContainingIgnoreCaseOrUrlContainingIgnoreCaseOrDescriptionContainingIgnoreCase(java.lang.String,java.lang.String,java.lang.String)", "org.springframework.ui.Model.addAttribute(java.lang.String,java.lang.String)", "org.springframework.ui.Model.addAttribute(java.lang.String,java.lang.String)", "webseeker.controller.UserRepository.findByNameContainingIgnoreCase(java.lang.String)"], "Fixed commit": "9d3898720ac488b10a8bffef0c65a7f4ff2dfeca", "Url": "https://api.github.com/repos/fitexmage/Webest", "Date": "2018-05-01T03:29:16Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.royale.compiler.internal.parsing.as.ConfigProcessor.evaluateConstNodeExpressionToJavaObject(org.apache.royale.compiler.internal.tree.as.ConfigExpressionNode)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result instanceof org.apache.royale.compiler.internal.tree.as.MemberAccessExpressionNode) { org.apache.royale.compiler.internal.tree.as.MemberAccessExpressionNode mae = ((org.apache.royale.compiler.internal.tree.as.MemberAccessExpressionNode) (result)); return mae; }else if (result instanceof org.apache.royale.compiler.internal.tree.as.IdentifierNode) { org.apache.royale.compiler.internal.tree.as.IdentifierNode id = ((org.apache.royale.compiler.internal.tree.as.IdentifierNode) (result)); return id; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2568/buggy-version/compiler.src.main.java.org.apache.royale.compiler.internal.parsing.as.ConfigProcessor.java", "BodyUseAPI": [], "Fixed commit": "ce9a250d2b80007fa7bfcdc6e0145aaeecd764b7", "Url": "https://api.github.com/repos/ajwfrost/royale-compiler", "Date": "2018-07-30T21:57:48Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.ConnectivityManager.getActiveNetworkInfo()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (netInfo != null) { myBackgroundTask.execute(); }else { android.widget.Toast.makeText(getBaseContext(), R.string.network_issue_message, Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3137/buggy-version/app.src.main.java.com.andalus.abomed7at55.popularmoviesstage1.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1d458324fc2108a4b9d990a61298591af2e161a4", "Url": "https://api.github.com/repos/MohamedMedhat1998/PopularMoviesStage1", "Date": "2018-02-24T10:59:41Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<fr.polytechtours.prd.multiagent.heuristic.meta.Individual>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sizeTemp < (Constant.SIZE_POPULATION)) { fr.polytechtours.prd.multiagent.heuristic.meta.CrowdingDistanceAssignment.distanceCalculator(nds.get(iteration)); nds.set(iteration, fr.polytechtours.prd.multiagent.heuristic.meta.CrowdingDistanceAssignment.sortByDistance(nds.get(iteration))); int size = newGroup.size(); for (int j = 0; j < ((Constant.SIZE_POPULATION) - size); j++) { newGroup.add(nds.get(iteration).get(j)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7054/buggy-version/src.fr.polytechtours.prd.multiagent.heuristic.meta.NSGA2.java", "BodyUseAPI": [], "Fixed commit": "20d33b8c1ee49de7c828384a0dd3045eda2bf831", "Url": "https://api.github.com/repos/boyang666/PRD", "Date": "2018-03-16T10:02:14Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasNext())) { throw new java.util.NoSuchElementException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3402/buggy-version/src.main.java.com.nobodyhub.transcendence.request.FetchPeriod.java", "BodyUseAPI": [], "Fixed commit": "9ae6f45249b25b573d892f7a38c5490c2b10b17b", "Url": "https://api.github.com/repos/nobodyhub/transcendence", "Date": "2018-07-09T13:21:23Z"},
{"Line": "=>500", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((newYeast != null) && (oldYeast != null)) { if (((newYeast.getYeastGenID()) != 0) && ((oldYeast.getYeastGenID()) != 0)) { if (!(java.util.Objects.equals(oldYeast.getYeastGenID(), newYeast.getYeastGenID()))) { im.doYeastGenReturn(en, oldYeast.getYeastGenID(), oldYeastQty); im.doYeastGenRemoval(en, newYeast.getYeastGenID(), newYeastQty); }else if (!(utils.Calcs.areFloatsEqual(oldYeastQty, newYeastQty))) { if (oldYeastQty > newYeastQty) { im.doYeastGenReturn(en, newYeast.getYeastGenID(), (oldYeastQty - newYeastQty)); }else { im.doYeastGenRemoval(en, newYeast.getYeastGenID(), (newYeastQty - oldYeastQty)); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5139/buggy-version/src.main.java.tools.BrewsTools.java", "BodyUseAPI": ["com.openbrew.openbrewrf.YeastGens.getYeastGenID()", "tools.InventoryModifiers.doYeastGenReturn(javax.persistence.EntityManager,oldYeast.getYeastGenID(),float)", "com.openbrew.openbrewrf.YeastGens.getYeastGenID()", "tools.InventoryModifiers.doYeastGenRemoval(javax.persistence.EntityManager,newYeast.getYeastGenID(),float)", "com.openbrew.openbrewrf.YeastGens.getYeastGenID()", "com.openbrew.openbrewrf.YeastGens.getYeastGenID()", "com.openbrew.openbrewrf.YeastGens.getYeastGenID()", "tools.InventoryModifiers.doYeastGenRemoval(javax.persistence.EntityManager,newYeast.getYeastGenID(),float)", "com.openbrew.openbrewrf.YeastGens.getYeastGenID()", "tools.InventoryModifiers.doYeastGenReturn(javax.persistence.EntityManager,newYeast.getYeastGenID(),float)", "com.openbrew.openbrewrf.YeastGens.getYeastGenID()", "com.openbrew.openbrewrf.YeastGens.getYeastGenID()", "java.util.Objects.equals(oldYeast.getYeastGenID(),newYeast.getYeastGenID())"], "Fixed commit": "d9342dfd1df842342bdf82a4b57b1e624f83105e", "Url": "https://api.github.com/repos/donaldchapman/openbrewrf", "Date": "2018-02-25T19:18:50Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPostable) { editButton.setVisibility(View.VISIBLE); editButton.setOnClickListener(editClickListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1436/buggy-version/Stately.app.src.main.java.com.lloydtorres.stately.region.MessageBoardRecyclerAdapter.java", "BodyUseAPI": [], "Fixed commit": "4c836902bcd4532b6a0cf95654b5fbdb80cd9d1e", "Url": "https://api.github.com/repos/lloydtorres/stately", "Date": "2018-01-06T02:55:50Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.System.getProperty(\"os.name\").contains(\"Windows\")) { scanner.nextLine(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2902/buggy-version/src.main.java.main.Console.java", "BodyUseAPI": [], "Fixed commit": "fd418919195bf25a392c983fb720622847e93403", "Url": "https://api.github.com/repos/JakubGornickii/orderReader", "Date": "2018-09-20T10:29:07Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.toFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (replaceFile && (!(file.delete()))) { newFileName = ((new java.util.Date().getTime()) + \"_\") + newFileName; file = this.rootLocation.resolve(newFileName).toFile(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6508/buggy-version/server.webportal.src.main.java.ru.kolaer.server.webportal.mvc.model.servirces.impl.UploadFileServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "c44df96068741c4c188a0d7da8782439bef08729", "Url": "https://api.github.com/repos/danilovEY/Kolaer-systems", "Date": "2018-09-03T08:33:06Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entry.getValue().getType()) == (Rank.Type.LEADER)) { abbrievRank = \"[L\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2295/buggy-version/src.main.java.com.EmpireMod.Empires.API.container.CitizenRankMap.java", "BodyUseAPI": [], "Fixed commit": "2f0590e31709c0170f3c5a1414ea3726d4848cd8", "Url": "https://api.github.com/repos/Andrew2070/Empires-Mod", "Date": "2018-05-05T12:11:06Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entry.getValue().getType()) == (Rank.Type.OFFICER)) { abbrievRank = \"O\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2295/buggy-version/src.main.java.com.EmpireMod.Empires.API.container.CitizenRankMap.java", "BodyUseAPI": [], "Fixed commit": "2f0590e31709c0170f3c5a1414ea3726d4848cd8", "Url": "https://api.github.com/repos/Andrew2070/Empires-Mod", "Date": "2018-05-05T12:11:06Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.egov.wtms.application.service.WaterConnectionDetailsService.getWaterConnectionDetailsByDemand(org.egov.demand.model.EgDemand)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.egov.wtms.application.service.collection.APPLICATION_STATUS_ESTIMATENOTICEGEN.equalsIgnoreCase(waterConnectionDetails.getStatus().getCode())) waterConnectionDetails.setStatus(waterTaxUtils.getStatusByCodeAndModuleType(WaterTaxConstants.APPLICATION_STATUS_FEEPAID, WaterTaxConstants.MODULETYPE));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9144/buggy-version/egov.egov-wtms.src.main.java.org.egov.wtms.application.service.collection.WaterTaxCollection.java", "BodyUseAPI": ["org.egov.wtms.application.entity.WaterConnectionDetails.setStatus(waterTaxUtils.getStatusByCodeAndModuleType(WaterTaxConstants.APPLICATION_STATUS_FEEPAID, WaterTaxConstants.MODULETYPE))"], "Fixed commit": "8fec234e0491c6af5d1a0139a8b94ac5a8b29da7", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2018-07-20T07:51:14Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((info.bioinfweb.libralign.model.utils.indextranslation.SequentialAccessIndexTranslator.getModel().getSequenceLength(sequenceID)) > 0) && (info.bioinfweb.libralign.model.utils.indextranslation.SequentialAccessIndexTranslator.getGapTokens().contains(info.bioinfweb.libralign.model.utils.indextranslation.SequentialAccessIndexTranslator.getModel().getTokenAt(sequenceID, 0)))) { unalignedIndex = IndexRelation.OUT_OF_RANGE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/375/buggy-version/main.info.bioinfweb.libralign.core.src.info.bioinfweb.libralign.model.utils.indextranslation.SequentialAccessIndexTranslator.java", "BodyUseAPI": [], "Fixed commit": "7213d3c780f8d855af57d6342c4d16586e42862c", "Url": "https://api.github.com/repos/bioinfweb/LibrAlign", "Date": "2018-02-12T11:03:16Z"},
{"Line": "=>796", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.applitools.eyes.selenium.EyesSeleniumUtils.isMobileDevice(driver.getRemoteWebDriver())) { logger.log(\"NATIVE context identified, skipping 'ensure element visible'\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3674/buggy-version/eyes.selenium.java.src.main.java.com.applitools.eyes.selenium.Eyes.java", "BodyUseAPI": [], "Fixed commit": "0cbe7998c04e473a96ada5db22c71532c85658bf", "Url": "https://api.github.com/repos/itaibh/eyes.sdk.java3", "Date": "2018-03-09T10:47:24Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (cartDTO == null) { com.halo.service.CartService.LOGGER.info(\"\u5f53\u524d\u8d2d\u7269\u8f66\u4e3a\u7a7a\"); cartDTO = new com.halo.dto.CartDTO(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9920/buggy-version/src.main.java.com.halo.service.CartService.java", "BodyUseAPI": [], "Fixed commit": "f195720ac6007c92441ea40c881a1cee667ab062", "Url": "https://api.github.com/repos/MelloChan/halo-server", "Date": "2018-06-11T04:10:51Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(talentURL.substring(0, 4).equals(\"http\"))) { talentURL = \"http://\" + (talentURL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2293/buggy-version/app.src.main.java.org.codefordenver.encorelink.PendingMusicianInfoAdapter.java", "BodyUseAPI": [], "Fixed commit": "09d13adb68ffe5a2bfdfd6b7d07b779fcc3b83d0", "Url": "https://api.github.com/repos/abw1914/EncoreLink", "Date": "2018-05-24T05:42:12Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(path.toString().equals(zipFilePath))) { java.util.zip.ZipEntry zipEntry = new java.util.zip.ZipEntry(sourceDirP.relativize(path).toString()); try { zipOutputStrem.putNextEntry(zipEntry); java.nio.file.Files.copy(path, zipOutputStrem); zipOutputStrem.closeEntry(); } catch (java.io.IOException e) { java.lang.System.err.println(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7938/buggy-version/src.p2.submibot.util.Zip.java", "BodyUseAPI": ["java.nio.file.Path.toString()", "java.nio.file.Path.relativize(java.nio.file.Path)", "java.nio.file.Files.copy(java.nio.file.Path,java.util.zip.ZipOutputStream)"], "Fixed commit": "fbfef333dd65f9d5281bc58a3d4cdd525f4bfb64", "Url": "https://api.github.com/repos/SubmiBot/SubmiBot", "Date": "2018-10-13T16:35:20Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((interests) == null) return new java.util.Date(); else return new java.util.Date(interests.get(\"date\").getAsLong());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1475/buggy-version/src.main.java.org.magic.api.dashboard.impl.MTGStockDashBoard.java", "BodyUseAPI": [], "Fixed commit": "a873f2e994d74b798556d4e416bf460213ed162a", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2018-05-03T20:59:11Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(xyz.the_dodo.bot.utils.ServerUtils.serverExist(p_guild))) xyz.the_dodo.bot.utils.ServerUtils.createServer(p_guild);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/140/buggy-version/src.main.java.xyz.the_dodo.bot.utils.BannedUtils.java", "BodyUseAPI": ["xyz.the_dodo.bot.utils.ServerUtils.createServer(net.dv8tion.jda.core.entities.Guild)"], "Fixed commit": "b977385d7743aaef65a19ebad033bfeeb66a86c5", "Url": "https://api.github.com/repos/ExidCuter/JDodoBot-2.0", "Date": "2018-09-22T20:52:20Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(xyz.the_dodo.bot.utils.UserUtils.userExists(p_user))) xyz.the_dodo.bot.utils.UserUtils.createDodoUser(p_user);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/140/buggy-version/src.main.java.xyz.the_dodo.bot.utils.BannedUtils.java", "BodyUseAPI": ["xyz.the_dodo.bot.utils.UserUtils.createDodoUser(net.dv8tion.jda.core.entities.User)"], "Fixed commit": "b977385d7743aaef65a19ebad033bfeeb66a86c5", "Url": "https://api.github.com/repos/ExidCuter/JDodoBot-2.0", "Date": "2018-09-22T20:52:20Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (trackPosition != null) { xResidual = (trackPosition.x()) - (stereoHitPositionDetector.x()); yResidual = (trackPosition.y()) - (stereoHitPositionDetector.y()); trackResidualsX.add(xResidual); trackResidualsY.add(((float) (yResidual))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6888/buggy-version/tracking.src.main.java.org.hps.recon.tracking.TrackDataDriver.java", "BodyUseAPI": ["hep.physics.vec.Hep3Vector.x()", "hep.physics.vec.Hep3Vector.y()"], "Fixed commit": "6ac034a628ab1f411e6c46b56e2de66a8ad9a689", "Url": "https://api.github.com/repos/JeffersonLab/hps-java", "Date": "2018-01-07T09:28:58Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((str1 == null) || (str2 == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9665/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Util.Misc.StringUtils.java", "BodyUseAPI": [], "Fixed commit": "fc3d37b218e4499a98e361ad562c13128143c814", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2018-02-18T01:35:46Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.modernmt.facade.TranslationFacade.TranslationTaskImpl.translate(sentences[i],eu.modernmt.facade.Decoder)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(translation.hasAlignment())) { eu.modernmt.aligner.Aligner aligner = engine.getAligner(); eu.modernmt.model.Alignment alignment = aligner.getAlignment(direction, sentences[i], translation); translation.setWordAlignment(alignment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1958/buggy-version/src.core.src.main.java.eu.modernmt.facade.TranslationFacade.java", "BodyUseAPI": ["eu.modernmt.model.Translation.setWordAlignment(eu.modernmt.model.Alignment)", "eu.modernmt.aligner.Aligner.getAlignment(eu.modernmt.lang.LanguagePair,sentences[i],eu.modernmt.model.Translation)"], "Fixed commit": "73db17e3f9fd4d583a2b4bf4c0e207e7e7810d91", "Url": "https://api.github.com/repos/ModernMT/MMT", "Date": "2018-05-23T16:21:58Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (date instanceof cn.hutool.core.date.DateTime) { return ((cn.hutool.core.date.DateTime) (date)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3896/buggy-version/hutool-core.src.main.java.cn.hutool.core.date.DateTime.java", "BodyUseAPI": [], "Fixed commit": "4a5be74d4b9740ea932b3cfb2f4a1d1d0546afd1", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2018-02-07T13:20:25Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.hutool.core.date.DateUtil.year(java.util.Date)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sYear > 2000) { sYear -= 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3896/buggy-version/hutool-core.src.main.java.cn.hutool.core.util.IdcardUtil.java", "BodyUseAPI": [], "Fixed commit": "4a5be74d4b9740ea932b3cfb2f4a1d1d0546afd1", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2018-02-07T13:20:25Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (delay != 0) { count = ((count) + 1) % (cn.edu.nju.switcher.SimpleSwitcher.STEP); totalDelay += delay; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6758/buggy-version/src.main.java.cn.edu.nju.switcher.SimpleSwitcher.java", "BodyUseAPI": [], "Fixed commit": "469df859ec501a4b5a189266829adebedbb9db7d", "Url": "https://api.github.com/repos/njucjc/graduation-project", "Date": "2018-09-07T03:54:02Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPlayer) != null) { playerPosition = mPlayer.getCurrentPosition(); outState.putLong(\"PLAYER_POSITION\", playerPosition); getPlayerWhenReady = mPlayer.getPlayWhenReady(); outState.putBoolean(\"PLAY_WHEN_READY\", getPlayerWhenReady); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5030/buggy-version/app.src.main.java.com.hussain.podcastapp.ui.PlayerActivity.java", "BodyUseAPI": [], "Fixed commit": "5ccf5be8a4a10e4055eddaed7e4fd1554f81bb45", "Url": "https://api.github.com/repos/Akramhussain4/podcast-app", "Date": "2018-10-23T10:41:11Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Statement.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((rs.getString(\"CONDITION\").length()) > 0) { questionIDs.add(rs.getString(\"ID_GLOBAL_2\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9435/buggy-version/src.main.java.koeko.database_management.DbTableRelationQuestionQuestion.java", "BodyUseAPI": ["java.util.Vector<java.lang.String>.add(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)"], "Fixed commit": "9f0377b3049e21a4a40ec21d6f7d2d1074bb8369", "Url": "https://api.github.com/repos/maximerchrd/KoekoTeacher", "Date": "2018-08-09T18:10:06Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.wandri.android.wandri_app.Data.AppGlobals.getThisUser().getFacebookId().equals(operation.getByUser())) { wandriOperation.setByUser(com.wandri.android.wandri_app.Data.AppGlobals.getThisUser()); if ((wandriOperation.getOpType()) == (com.wandri.android.wandri_app.Data.Enums.WandriOperationType.LIKE)) { wandriOperation.getWandriPlace().setLiked(true); }else if ((operation.getAlsoReviewed()) || ((wandriOperation.getOpType()) == (com.wandri.android.wandri_app.Data.Enums.WandriOperationType.REVIEW))) { wandriOperation.getWandriPlace().setLiked(true); wandriOperation.getWandriPlace().setReviewed(true); } }else { wandriOperation.setByUser(com.wandri.android.wandri_app.Data.AppGlobals.getFriendsList().get(operation.getByUser())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3560/buggy-version/app.src.main.java.com.wandri.android.wandri_app.Data.Mappers.WandriOperationMapper.java", "BodyUseAPI": ["com.wandri.android.wandri_app.Data.AppGlobals.getFriendsList().get(operation.getByUser())", "com.wandri.engine.services.databaseService.model.UserPlaceOperation.getByUser()", "com.wandri.engine.services.databaseService.model.UserPlaceOperation.getAlsoReviewed()", "com.wandri.android.wandri_app.Data.WandriOperation.setByUser(com.wandri.android.wandri_app.Data.AppGlobals.getFriendsList().get(operation.getByUser()))"], "Fixed commit": "400441ae97e16c6eda9fd48e1def59f931f49981", "Url": "https://api.github.com/repos/couturmi/Wandri", "Date": "2018-09-30T20:43:20Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dataVersion == (org.moire.opensudoku.game.CellCollection.DATA_VERSION_2)) { return org.moire.opensudoku.game.CellCollection.DATA_PATTERN_VERSION_2.matcher(data).matches(); }else if (dataVersion == (org.moire.opensudoku.game.CellCollection.DATA_VERSION_3)) { return org.moire.opensudoku.game.CellCollection.DATA_PATTERN_VERSION_3.matcher(data).matches(); }else { throw new java.lang.IllegalArgumentException((\"Unknown version: \" + dataVersion)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9915/buggy-version/app.src.main.java.org.moire.opensudoku.game.CellCollection.java", "BodyUseAPI": [], "Fixed commit": "b4f9b9f846c7a421d426eaff98778e3752a4b3e7", "Url": "https://api.github.com/repos/spimanov/opensudoku", "Date": "2018-02-16T10:54:58Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getSession(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (session != null) { session.invalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7932/buggy-version/src.main.java.codeu.controller.LogoutServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpSession.invalidate()"], "Fixed commit": "63d04ee8d8452e9d2d0f9cc45d33a6144f9a1b94", "Url": "https://api.github.com/repos/sunbini0823/CodeU-Spring-2018", "Date": "2018-05-11T03:49:27Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (responseBody != null) { tv.append(new java.lang.String(responseBody)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/557/buggy-version/app.src.main.java.com.example.michael.myapplication.LEDActivity.java", "BodyUseAPI": ["android.widget.TextView.append(java.lang.String)"], "Fixed commit": "31441328f3198875221c6fe4a8119cc316496227", "Url": "https://api.github.com/repos/Yuds2003/MyApplication", "Date": "2018-01-14T18:02:52Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.nasa.jpf.vm.StackFrame.popDouble()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (v1 == 0) { return ti.createAndThrowException(\"java.lang.ArithmeticException\", \"division by zero\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5753/buggy-version/src.main.gov.nasa.jpf.jvm.bytecode.DDIV.java", "BodyUseAPI": [], "Fixed commit": "17de7776c97b63ca72d89c5b05ad2404ebeff03d", "Url": "https://api.github.com/repos/gayanW/jpf-core", "Date": "2018-01-23T20:47:37Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((migGender) != null) { if (migGender.equals(\"male\")) ivUserAvatar.setImageResource(R.drawable.ic_male); else ivUserAvatar.setImageResource(R.drawable.ic_female); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9624/buggy-version/app.src.main.java.com.vysh.subairoma.activities.ActivityTileHome.java", "BodyUseAPI": [], "Fixed commit": "5f609e169e4282c9cf65f8b399a0ce100150d21b", "Url": "https://api.github.com/repos/Tiny-Hands/subairoma", "Date": "2018-04-06T03:39:50Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.wolfpeng.media.Libaray.FileMeta>.get(java.lang.String)", "com.wolfpeng.media.Libaray.read(java.io.File,fileDO.getId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((subFileMeta == null) || ((((subFileMeta.getMetadataDOs()) != null) && ((subMeta.getMetadataDOs()) != null)) && ((subFileMeta.getMetadataDOs().size()) < (subMeta.getMetadataDOs().size())))) { submetas.put(fileName, subMeta); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/189/buggy-version/core.src.main.java.com.wolfpeng.media.Libaray.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.wolfpeng.media.Libaray.FileMeta>.put(java.lang.String,com.wolfpeng.media.Libaray.FileMeta)"], "Fixed commit": "1875122a8b1572d02b4ebef27aafc719d8d02fea", "Url": "https://api.github.com/repos/PengHao/Account", "Date": "2018-09-01T09:52:55Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((duration.getSeconds()) == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7348/buggy-version/maestro-common.src.main.java.org.maestro.common.worker.ThroughputStats.java", "BodyUseAPI": [], "Fixed commit": "41913ce43e5b66d450925e6cb3fe939b4cfede75", "Url": "https://api.github.com/repos/maestro-performance/maestro-java", "Date": "2018-06-15T16:03:12Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((previousp.packageShortStatus) != null) && ((p.packageShortStatus) != null)) { if (!(previousp.packageShortStatus.equals(p.packageShortStatus))) { android.content.Intent notificationIntent = new android.content.Intent(getApplicationContext(), io.github.samarthdesai01.ares.MainActivity.class); notificationIntent.setAction(\"Open App\"); notificationIntent.setFlags(((android.content.Intent.FLAG_ACTIVITY_NEW_TASK) | (android.content.Intent.FLAG_ACTIVITY_CLEAR_TASK))); android.app.PendingIntent contentPendingIntent = android.app.PendingIntent.getActivity(this, 0, notificationIntent, 0); mBuilder = new android.support.v4.app.NotificationCompat.Builder(this, \"orderUpdates\").setSmallIcon(R.drawable.ic_markunread_mailbox_black_24dp).setContentTitle(\"Out for Delivery\").setContentText(p.packageName).setContentIntent(contentPendingIntent).setPriority(NotificationCompat.PRIORITY_HIGH); notificationManager.notify((uniqueNotifID + 100), mBuilder.build()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6670/buggy-version/app.src.main.java.io.github.samarthdesai01.ares.OrderUpdates.java", "BodyUseAPI": ["new android.support.v4.app.NotificationCompat.Builder(this, \"orderUpdates\").setSmallIcon(R.drawable.ic_markunread_mailbox_black_24dp).setContentTitle(\"Out for Delivery\").setContentText(p.packageName).setContentIntent(contentPendingIntent).setPriority(NotificationCompat.PRIORITY_HIGH)", "new android.support.v4.app.NotificationCompat.Builder(this, \"orderUpdates\").setSmallIcon(R.drawable.ic_markunread_mailbox_black_24dp).setContentTitle(\"Out for Delivery\").setContentText(p.packageName)", "previousp.packageShortStatus.equals(p.packageShortStatus)", "new android.support.v4.app.NotificationCompat.Builder(this, \"orderUpdates\").setSmallIcon(R.drawable.ic_markunread_mailbox_black_24dp).setContentTitle(\"Out for Delivery\").setContentText(p.packageName).setContentIntent(android.app.PendingIntent)"], "Fixed commit": "a480b582f41850f74e0c953b0c68fb492ec8bb29", "Url": "https://api.github.com/repos/SamarthDesai01/Ares", "Date": "2018-08-09T05:58:57Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (validationQueryTimeout > 0) { stmt.setQueryTimeout(validationQueryTimeout); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2876/buggy-version/src.main.java.com.alibaba.druid.pool.vendor.MSSQLValidConnectionChecker.java", "BodyUseAPI": ["java.sql.Statement.setQueryTimeout(int)"], "Fixed commit": "67b5e9cdc6eb8d7d00a2a70d01140c11c7428e46", "Url": "https://api.github.com/repos/FlakyTestDetection/druid", "Date": "2018-02-05T09:43:55Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (take1) { for (notepatternanalyzer.HeldNote n : c1.getNotes()) { this.NoteOn(n.getStartTime(), n.getRawValue(), true, n.getTrack()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2204/buggy-version/notepatternanalyzer.src.notepatternanalyzer.NoteTrack.java", "BodyUseAPI": [], "Fixed commit": "0b05278d5c35744d73e32e91d3f8741d168ad332", "Url": "https://api.github.com/repos/dpham123/notepatternanalyzer", "Date": "2018-09-26T05:01:27Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (take2) { for (notepatternanalyzer.HeldNote n : c2.getNotes()) { this.NoteOn(n.getStartTime(), n.getRawValue(), true, n.getTrack()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2204/buggy-version/notepatternanalyzer.src.notepatternanalyzer.NoteTrack.java", "BodyUseAPI": [], "Fixed commit": "0b05278d5c35744d73e32e91d3f8741d168ad332", "Url": "https://api.github.com/repos/dpham123/notepatternanalyzer", "Date": "2018-09-26T05:01:27Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (strDate.equals(PassMeasurement.DEFAULT_VALUE)) { common.Log.println(\"TCA Could not be measured\"); measuredTCA = telemetry.Frame.NONE; }else if (strDate != null) { common.Log.println((\"Got TCA: \" + strDate)); java.util.Date date = null; try { date = FoxFramePart.fileDateFormat.parse(strDate); } catch (java.text.ParseException e) { common.Log.println(\"Error parsing TCA date:\"); e.printStackTrace(common.Log.getWriter()); date = null; } if (date != null) { telemetry.Frame.stpDateFormat.setTimeZone(java.util.TimeZone.getTimeZone(\"UTC\")); measuredTCA = telemetry.Frame.stpDateFormat.format(date); common.Log.println((\"STP TCA set as: \" + (measuredTCA))); }else { measuredTCA = telemetry.Frame.NONE; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2505/buggy-version/src.telemetry.Frame.java", "BodyUseAPI": ["FoxFramePart.fileDateFormat.parse(java.lang.String)", "common.Log.println(java.lang.String)"], "Fixed commit": "213be362e6bfc8b79d5151d29622e3584e5087cb", "Url": "https://api.github.com/repos/ac2cz/FoxTelem", "Date": "2018-10-12T01:15:53Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentSide) == 1) { blockWide = 3; }else if (((currentSide) == 0) || ((currentSide) == 2)) { blockWide = 2; }else { blockWide = 3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9013/buggy-version/src.JBlock.java", "BodyUseAPI": [], "Fixed commit": "20a2f91876a933a35e1c5f5d0a2cd87a615aed6c", "Url": "https://api.github.com/repos/poisonivy2003/Tetris", "Date": "2018-05-17T04:32:07Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) != null) { final android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder(this); builder.setMessage(\"GPS dalam kondisi mati. Mohon nyalakan GPS\").setCancelable(false).setPositiveButton(\"Ok\", new android.content.DialogInterface.OnClickListener() { @java.lang.Override public void onClick(android.content.DialogInterface dialogInterface, int i) { startActivity(new android.content.Intent(android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS)); } }); final android.app.AlertDialog alert = builder.create(); alert.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1484/buggy-version/app.src.main.java.com.example.user.myapplication.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "4948fc1d13b483414d8b537420b4495694064d73", "Url": "https://api.github.com/repos/ProIfUNPAR/train-tracker-ellena-angelica", "Date": "2018-04-29T14:49:33Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((customer.getLocation()) != null) { this.city = customer.getLocation().getCity().getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5123/buggy-version/src.main.java.creativei.vo.CustomerVO.java", "BodyUseAPI": [], "Fixed commit": "da6e9bd50ea6d015d0c6dee916388447feda6c28", "Url": "https://api.github.com/repos/aayushKhandpur/weightmaster", "Date": "2018-04-24T19:09:01Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((customerVO.getLocationId()) != null) { customer.setLocation(new creativei.helper.Location(customerVO.getLocationId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5123/buggy-version/src.main.java.creativei.helper.ResponseHelper.java", "BodyUseAPI": ["creativei.helper.CustomerVO.getLocationId()", "creativei.helper.Customer.setLocation(creativei.helper.Location)"], "Fixed commit": "da6e9bd50ea6d015d0c6dee916388447feda6c28", "Url": "https://api.github.com/repos/aayushKhandpur/weightmaster", "Date": "2018-04-24T19:09:01Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.apache.commons.collections4.CollectionUtils.isEmpty(getSensoryDataImages())) && (org.apache.commons.collections4.CollectionUtils.isEmpty(getSensoryDataScans()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3035/buggy-version/web.src.main.java.org.tdar.struts.action.sensoryData.SensoryDataController.java", "BodyUseAPI": [], "Fixed commit": "ad3d721b9737bb091dacf02b4c7550be027c9628", "Url": "https://api.github.com/repos/digital-antiquity/tdar", "Date": "2018-10-08T17:27:55Z"},
{"Line": "=>848", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isNeedShowFloatLableText)) { setFloatLableTextMaxLines(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2783/buggy-version/superedittextlib.src.main.java.com.vv.superedittextlib.SuperEditText.java", "BodyUseAPI": [], "Fixed commit": "05cb1ad57b3b3723866da26f6b9cc47812d56d1b", "Url": "https://api.github.com/repos/pvphero/SuperEditText", "Date": "2018-09-17T05:36:49Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((AgentEngine.pluginMap.get(key).getStatus_code()) == 40) { AgentEngine.pluginMap.get(key).setStatus_code(10); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6789/buggy-version/src.main.java.plugins.PluginHealthWatcher.java", "BodyUseAPI": ["AgentEngine.pluginMap.get(java.lang.String)", "AgentEngine.pluginMap.get(key).setStatus_code(int)"], "Fixed commit": "ac41ee435d5766f3b3877321467c0aedc96f6b7a", "Url": "https://api.github.com/repos/ResearchWorx/Cresco-Agent", "Date": "2018-05-30T15:33:47Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position < 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/295/buggy-version/app.src.main.java.me.sunzheng.mana.home.episode.EpisodePresenterImpl.java", "BodyUseAPI": [], "Fixed commit": "b8927857a85c12e679e0ac4d42c4783acbd7fbf1", "Url": "https://api.github.com/repos/WindFi/mana", "Date": "2018-04-11T17:52:45Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.endicott.edu.simulators.StudentModel>.size()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (currentSize > 0) { retentionRate = java.lang.Math.max((((currentSize - studentsWithdrawn) * 100) / currentSize), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4924/buggy-version/src.com.endicott.edu.simulators.StudentManager.java", "BodyUseAPI": ["java.lang.Math.max(int,int)"], "Fixed commit": "491b90296659723dd0fd9eafe239bbdb6d94bed5", "Url": "https://api.github.com/repos/allanbrock/enccollegeworld", "Date": "2018-10-30T18:43:21Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((src == null) || ((src.getHeight()) == 0)) || ((src.getWidth()) == 0)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4622/buggy-version/musiclibrary.src.main.java.com.lzx.musiclibrary.helper.BitmapHelper.java", "BodyUseAPI": [], "Fixed commit": "d40ae21df73751c63d3728a9159496e8994f957c", "Url": "https://api.github.com/repos/liziPATHn18/MusicLibrary", "Date": "2018-10-22T12:34:34Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dayNotAvailable(eventDto)) throw new java.lang.IllegalArgumentException(\"User must be available to register shift\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6792/buggy-version/src.main.java.com.sap.service.impl.EventServiceImp.java", "BodyUseAPI": [], "Fixed commit": "711bc3e1eca5ee3d4210bce37e203a023acbb762", "Url": "https://api.github.com/repos/tiagonmello/poc_spring", "Date": "2018-10-08T16:15:52Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bHeightValue < (aad.assignment.strokeassistant.AddHealthRecord.MIN_HEIGHT)) invalidFieldHint(bodyHeight, aad.assignment.strokeassistant.AddHealthRecord.WEIGHT_HEIGHT_ERROR); else if ((bSugarValue < (aad.assignment.strokeassistant.AddHealthRecord.MIN_BLOOD_SUGAR)) || (bSugarValue > (aad.assignment.strokeassistant.AddHealthRecord.MAX_BLOOD_SUGAR))) invalidFieldHint(bloodSugar, aad.assignment.strokeassistant.AddHealthRecord.BLOOD_SUGAR_ERROR); else if ((bPressureValue < (aad.assignment.strokeassistant.AddHealthRecord.MIN_BLOOD_PRESSURE)) || (bPressureValue > (aad.assignment.strokeassistant.AddHealthRecord.MAX_BLOOD_PRESSURE))) invalidFieldHint(bloodPressure, aad.assignment.strokeassistant.AddHealthRecord.BLOOD_PRESSURE_ERROR); else { aad.assignment.strokeassistant.model.HealthRecord newRecord = new aad.assignment.strokeassistant.model.HealthRecord(bPressureValue, bSugarValue, bWeightValue, bHeightValue); records.add(newRecord); aad.assignment.strokeassistant.model.HealthRecord.save(this, records); android.widget.Toast.makeText(context, R.string.health_rec_saved, Toast.LENGTH_SHORT).show(); if ((records.size()) == 1) setResult(aad.assignment.strokeassistant.AddHealthRecord.SHOW_NEXT_VIEW); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5823/buggy-version/app.src.main.java.aad.assignment.strokeassistant.AddHealthRecord.java", "BodyUseAPI": [], "Fixed commit": "91efcabc037c351cf0b5cea4775b152bbffbfca3", "Url": "https://api.github.com/repos/johnsiah/Stroke-Assistant", "Date": "2018-02-13T08:07:39Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (attributes != null) { this.attributes = attributes; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1903/buggy-version/java-sdk.src.main.java.com.baidu.dueros.data.request.Session.java", "BodyUseAPI": [], "Fixed commit": "54ae1e0a19b923d82f6fe993af272a8dc46c8c71", "Url": "https://api.github.com/repos/dueros/bot-sdk-java", "Date": "2018-04-04T12:45:40Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((TypeVal) == (Attribute.tTHES)) Value = Cont; else Value = new java.lang.Integer(Cont);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/402/buggy-version/Prodoc.src.prodoc.Condition.java", "BodyUseAPI": [], "Fixed commit": "57f4f24f35f83ae3f4c37489549ed42511b228bf", "Url": "https://api.github.com/repos/JHierrot/openprodoc", "Date": "2018-01-05T17:30:42Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.hisp.dhis.rules.RuleVariableValue>.get(org.hisp.dhis.rules.RuleExpression.unwrapVariableName(variable))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (variableValue != null) { ruleExpressionBinder.bindVariable(variable, ((variableValue.value()) == null ? variableValue.type().defaultValue() : variableValue.value())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7159/buggy-version/core-rules.src.main.java.org.hisp.dhis.rules.RuleEngineExecution.java", "BodyUseAPI": ["org.hisp.dhis.rules.RuleVariableValue.type()", "org.hisp.dhis.rules.RuleVariableValue.value()", "org.hisp.dhis.rules.RuleVariableValue.value()", "variableValue.type().defaultValue()", "org.hisp.dhis.rules.RuleExpressionBinder.bindVariable(java.lang.String,((variableValue.value()) == null ? variableValue.type().defaultValue() : variableValue.value()))"], "Fixed commit": "4c8d0bad0c81e3dfbe2a0411b033407c7ec9e12a", "Url": "https://api.github.com/repos/dhis2/dhis2-android-sdk", "Date": "2018-07-27T11:02:41Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mc.getTo().getAddress()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (to.startsWith(\"/t/\")) { org.wso2.carbon.tenant.dispatcher.MultitenantDispatcher.getService(mc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/223/buggy-version/components.tenant-mgt.org.wso2.carbon.tenant.dispatcher.src.main.java.org.wso2.carbon.tenant.dispatcher.MultitenantDispatcher.java", "BodyUseAPI": [], "Fixed commit": "129393c31135283c845c5f37a855c60544dd827c", "Url": "https://api.github.com/repos/ThishaniLucas/carbon-multitenancy", "Date": "2018-03-05T16:28:52Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (s.startsWith(\"e\")) { com.pennypincherbank.Bank.Terminal.goToMainMenu(); }else if (s.startsWith(\"h\")) { java.lang.System.out.println(((com.pennypincherbank.Bank.Terminal.user.getUser_role()) > 0 ? com.pennypincherbank.Bank.Terminal.ADMIN_TRANSACTIONS : com.pennypincherbank.Bank.Terminal.CUSTOMER_TRANSACTIONS)); }else if (s.startsWith(\"q\")) { java.lang.System.out.println((\"Thanks for banking with Penny Pinchers! \" + \"\\n Please visit us again!\")); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7258/buggy-version/Terminal.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "be1f0524725c4f28c73ed2eb8fa5d05f9aa57905", "Url": "https://api.github.com/repos/PantherHawk/bank-jar", "Date": "2018-10-23T11:30:33Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (choice.toLowerCase().equals(\"u\")) { com.pennypincherbank.Bank.Terminal.viewAnyoneUsersTxs(); }else if (choice.toLowerCase().startsWith(\"y\")) { com.pennypincherbank.Bank.Terminal.viewMyTx(); }else if (choice.toLowerCase().startsWith(\"w\")) { com.pennypincherbank.Bank.Terminal.viewMyWithdrawalTx(); }else if (choice.toLowerCase().startsWith(\"d\")) { com.pennypincherbank.Bank.Terminal.viewMyDepositTx(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7258/buggy-version/Terminal.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.toLowerCase()", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.toLowerCase()"], "Fixed commit": "be1f0524725c4f28c73ed2eb8fa5d05f9aa57905", "Url": "https://api.github.com/repos/PantherHawk/bank-jar", "Date": "2018-10-23T11:30:33Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["baritone.bot.utils.BlockStateInterface.get(dest.down()).getBlock()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ladder && ((destDown instanceof net.minecraft.block.BlockVine) || (destDown instanceof net.minecraft.block.BlockLadder))) { new baritone.bot.pathing.movement.movements.MovementPillar(dest.down(), dest).updateState(state); return state; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1999/buggy-version/src.main.java.baritone.bot.pathing.movement.movements.MovementTraverse.java", "BodyUseAPI": [], "Fixed commit": "0f56af65b16bbd680bb558b23dd48bfb80f04758", "Url": "https://api.github.com/repos/cabaletta/baritone", "Date": "2018-08-18T03:46:53Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (status.equals(\"not started\")) { android.content.Intent nextIntent = new android.content.Intent(this, is.hi.hbv601.pubquiz.WaitActivity.class); startActivity(nextIntent); this.finish(); }else if (status.equals(\"in progress\")) { }else if (status.equals(\"review\")) { android.content.Intent nextIntent = new android.content.Intent(this, is.hi.hbv601.pubquiz.ReviewPagerActivity.class); startActivity(nextIntent); this.finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3381/buggy-version/app.src.main.java.is.hi.hbv601.pubquiz.QuestionPagerActivity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "a6f46062f5bacac50ef351ce6b3380072d05db7a", "Url": "https://api.github.com/repos/The-Fantastic-Four/pub-quiz-master", "Date": "2018-04-04T17:12:14Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (status.equals(\"not started\")) { android.content.Intent nextIntent = new android.content.Intent(this, is.hi.hbv601.pubquiz.WaitActivity.class); startActivity(nextIntent); this.finish(); }else if (status.equals(\"in progress\")) { android.content.Intent nextIntent = new android.content.Intent(this, is.hi.hbv601.pubquiz.QuestionPagerActivity.class); startActivity(nextIntent); this.finish(); }else if (status.equals(\"review\")) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3381/buggy-version/app.src.main.java.is.hi.hbv601.pubquiz.ReviewPagerActivity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "a6f46062f5bacac50ef351ce6b3380072d05db7a", "Url": "https://api.github.com/repos/The-Fantastic-Four/pub-quiz-master", "Date": "2018-04-04T17:12:14Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (status.equals(\"review\")) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3381/buggy-version/app.src.main.java.is.hi.hbv601.pubquiz.ReviewPagerActivity.java", "BodyUseAPI": [], "Fixed commit": "a6f46062f5bacac50ef351ce6b3380072d05db7a", "Url": "https://api.github.com/repos/The-Fantastic-Four/pub-quiz-master", "Date": "2018-04-04T17:12:14Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (status == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3381/buggy-version/app.src.main.java.is.hi.hbv601.pubquiz.ReviewPagerActivity.java", "BodyUseAPI": [], "Fixed commit": "a6f46062f5bacac50ef351ce6b3380072d05db7a", "Url": "https://api.github.com/repos/The-Fantastic-Four/pub-quiz-master", "Date": "2018-04-04T17:12:14Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (status.equals(\"not started\")) { quizIntent = new android.content.Intent(this.getActivity(), is.hi.hbv601.pubquiz.WaitActivity.class); }else if (status.equals(\"review\")) { quizIntent = new android.content.Intent(this.getActivity(), is.hi.hbv601.pubquiz.ReviewPagerActivity.class); }else { quizIntent = new android.content.Intent(this.getActivity(), is.hi.hbv601.pubquiz.QuestionPagerActivity.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3381/buggy-version/app.src.main.java.is.hi.hbv601.pubquiz.RegisterTeamFragment.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "a6f46062f5bacac50ef351ce6b3380072d05db7a", "Url": "https://api.github.com/repos/The-Fantastic-Four/pub-quiz-master", "Date": "2018-04-04T17:12:14Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(lastMessageSenderId.equals(userId))) { long lastUserActivity = usersSeen.get(userId); if ((lastUserActivity == (nsi.firechatter.activities.ChatActivity.SECRET_DATE)) || (lastUserActivity > (lastMessageTime))) { if (text.isEmpty()) { text = members.get(userId).name; }else { text = (text + \", \") + (members.get(userId).name); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2450/buggy-version/app.src.main.java.nsi.firechatter.activities.ChatActivity.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, nsi.firechatter.models.User>.get(java.lang.String)", "java.util.HashMap<java.lang.String, nsi.firechatter.models.User>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Long>.get(java.lang.String)"], "Fixed commit": "e0d3a24784c1eef98e6112140d28f72610539b3c", "Url": "https://api.github.com/repos/milosjajac/FireChatter", "Date": "2018-01-07T05:47:03Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selectedCityList.size()) == 0) { selectedCityList.add(new com.mobven.weatherforecast.core.api.model.City(\"35\", \"\u0130zmir\", \"311046\", 0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/976/buggy-version/app.src.main.java.com.mobven.weatherforecast.weather.WeatherFragment.java", "BodyUseAPI": ["java.util.List<com.mobven.weatherforecast.core.api.model.City>.add(com.mobven.weatherforecast.core.api.model.City)"], "Fixed commit": "06a0dbf9ac0a19af7232c01201259fa86d4d5a57", "Url": "https://api.github.com/repos/sukriyeKilic/weatherForecast", "Date": "2018-01-22T07:44:39Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((counter.getConfirmedCount()) > 0) { counter.reset(); hbec.intellitrade.strategy.domain.condition.delayconfirm.ContinuousDelayConfirmCondition.logger.trace(\"Confirmed count reset due to NONE signal\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5238/buggy-version/condition-order-domain.src.main.java.hbec.intellitrade.strategy.domain.condition.delayconfirm.ContinuousDelayConfirmCondition.java", "BodyUseAPI": ["hbec.intellitrade.strategy.domain.condition.delayconfirm.ContinuousDelayConfirmCondition.reset()"], "Fixed commit": "a111cfa3cb53da1b31930fb24d36ba8e0401d1ff", "Url": "https://api.github.com/repos/shuhaoc/condition-order-sample", "Date": "2018-03-30T13:53:14Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.y_spd) >= 0) { this.y_spd *= -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6988/buggy-version/src.main.java.com.mark.Ball.java", "BodyUseAPI": [], "Fixed commit": "d9bc30e30e10cb6b2f24be8fe8bf8abffff42012", "Url": "https://api.github.com/repos/CodingGuruInTraining/Breakout_FinalProject", "Date": "2018-01-14T21:14:16Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)", "java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cs != ct) { isMissing = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1616/buggy-version/src.main.java.twilio.MissingWords.java", "BodyUseAPI": [], "Fixed commit": "1dbd6528be9c42e0c3c652d4423e94d1e076a1ad", "Url": "https://api.github.com/repos/Tony-Hu/OAPractice", "Date": "2018-10-27T07:55:32Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((productRequestToBeUpdated.getImageContent()) != null) { product.setImageContent(productRequestToBeUpdated.getImageContent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6885/buggy-version/src.main.java.com.phoenix.ecom.service.product.ProductService.java", "BodyUseAPI": ["com.phoenix.ecom.model.Product.setImageContent(productRequestToBeUpdated.getImageContent())", "com.phoenix.ecom.model.Product.getImageContent()"], "Fixed commit": "a4fac6ae7cbe2d35db4b607a32b33c5911e55884", "Url": "https://api.github.com/repos/sakthiiv/phoenix-ecom-server", "Date": "2018-10-25T10:34:25Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.rawQuery(((((((((((((\"SELECT AVG(\" + (Storage.Leq.COLUMN_LATITUDE)) + \") LATAVG, AVG(\") + (Storage.Leq.COLUMN_LONGITUDE)) + \") LONGAVG FROM \") + (Storage.Leq.TABLE_NAME)) + \" L \") + \"WHERE L.\") + (Storage.Leq.COLUMN_RECORD_ID)) + \" = ? AND \") + (Storage.Leq.COLUMN_ACCURACY)) + \" BETWEEN 1 AND \") + \"? \"),java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (cursor.moveToNext()) { java.lang.Double latavg = cursor.getDouble(0); java.lang.Double longavg = cursor.getDouble(1); if ((latavg.equals(0.0)) && (longavg.equals(0.0))) { return null; }else { return new double[]{ latavg, longavg }; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8154/buggy-version/app.src.main.java.org.noise_planet.noisecapture.MeasurementManager.java", "BodyUseAPI": ["android.database.Cursor.getDouble(int)", "android.database.Cursor.getDouble(int)"], "Fixed commit": "21d8b639dd9864d5927b110ebc2fc473785a97fd", "Url": "https://api.github.com/repos/Ifsttar/NoiseCapture", "Date": "2018-10-19T07:15:56Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)", "java.lang.String.indexOf(char)", "java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((spaceIdx + tabIdx) + commentIdx) == (-3)) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4888/buggy-version/dockerfile-image-update.src.main.java.com.salesforce.dockerfileimageupdate.utils.DockerfileGitHubUtil.java", "BodyUseAPI": [], "Fixed commit": "838d8405410212c5762b7ad0fa093ac8a33b599f", "Url": "https://api.github.com/repos/salesforce/dockerfile-image-update", "Date": "2018-08-17T02:28:00Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (btAdapter.isEnabled()) { btConnector.execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1709/buggy-version/app.src.main.java.binta.smartroomv3.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3c3f24d3e129eba39a414c4bf0f97c76f3c704a3", "Url": "https://api.github.com/repos/binodmx/SmartRoom", "Date": "2018-08-12T06:02:04Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isConnected) { btSocket.close(); android.widget.Toast.makeText(getApplicationContext(), \"Disconnected\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1709/buggy-version/app.src.main.java.binta.smartroomv3.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3c3f24d3e129eba39a414c4bf0f97c76f3c704a3", "Url": "https://api.github.com/repos/binodmx/SmartRoom", "Date": "2018-08-12T06:02:04Z"},
{"Line": "=>919", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (log.shouldDebug()) log.debug((((\"CW.FNM connected? \" + connected) + \" found? \") + found));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6264/buggy-version/apps.susimail.src.src.i2p.susi.webmail.WebMail.java", "BodyUseAPI": ["net.i2p.util.Log.debug(java.lang.String)"], "Fixed commit": "a7db82a1faa36b4b72862cb9c6c21a0b654c2fae", "Url": "https://api.github.com/repos/i2p/i2p.i2p", "Date": "2018-05-30T19:46:51Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (endindex == (-1)) { endindex = user.indexOf(\"@example.com\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2787/buggy-version/rocdevcursussen.src.main.java.jquery.JQueryServlet.java", "BodyUseAPI": [], "Fixed commit": "0dc4bb9b60bae85130ad8f372d2db663cb239a08", "Url": "https://api.github.com/repos/pieeet/ao-roc-dev", "Date": "2018-06-04T14:33:30Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((foundLadder) == null)) { while (!(foundLadder.empty())) { ladder.add(foundLadder.pop()); } return ladder; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1378/buggy-version/wordladderproject.src.main.java.AikawaSatoshi.WordLadder.java", "BodyUseAPI": [], "Fixed commit": "85ca3a8aab42eef8422609f813cfb9b43a6816be", "Url": "https://api.github.com/repos/satooooshi/se417", "Date": "2018-03-08T05:28:25Z"},
{"Line": "=>623", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ifNotExists) { java.lang.Throwable cause = e.getCause(); java.lang.String message = cause.getMessage(); java.lang.String databaseName = databaseType.getDatabaseName(); if (databaseName.equals(\"DB2\")) { if (message.contains(\"SQLCODE=-601\")) { return 0; } }else if (databaseName.equals(\"SQL Server\")) { java.sql.SQLException mssqle = ((java.sql.SQLException) (cause)); if ((mssqle.getErrorCode()) == 2714) { return 0; } }else if (databaseName.equals(\"Oracle\")) { if ((message.contains(\"ORA-00955\")) || (message.contains(\"ORA-01031\"))) { return 0; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2246/buggy-version/src.main.java.com.j256.ormlite.table.TableUtils.java", "BodyUseAPI": [], "Fixed commit": "a084c0091b7529a9c1982739d7180ad0c3ae1324", "Url": "https://api.github.com/repos/juankb1024/ormlite-core", "Date": "2018-09-25T21:31:19Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.lang.String>.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((!(android.text.TextUtils.isEmpty(nextKey))) && (nextKey.toLowerCase().equals(\"authorization\"))) { connection.setRequestProperty(nextKey, (\"Token \" + (headers.get(nextKey).toString()))); }else { connection.setRequestProperty(nextKey, headers.get(nextKey).toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9647/buggy-version/android.src.main.java.com.localz.pinch.utils.HttpUtil.java", "BodyUseAPI": ["javax.net.ssl.HttpsURLConnection.setRequestProperty(java.lang.String,(\"Token \" + (headers.get(nextKey).toString())))", "javax.net.ssl.HttpsURLConnection.setRequestProperty(java.lang.String,headers.get(nextKey).toString())", "headers.get(nextKey).toString()", "headers.get(nextKey).toString()", "org.json.JSONObject.get(java.lang.String)", "org.json.JSONObject.get(java.lang.String)"], "Fixed commit": "19aa579a19db2a65f76543777f7ac1b71da3805d", "Url": "https://api.github.com/repos/xpbtmusic/react-native-pinch", "Date": "2018-01-04T02:51:00Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.lang.String>.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((!(android.text.TextUtils.isEmpty(nextKey))) && (nextKey.toLowerCase().equals(\"authorization\"))) { connection.setRequestProperty(nextKey, (\"Token \" + (headers.get(nextKey).toString()))); }else { connection.setRequestProperty(nextKey, headers.get(nextKey).toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9647/buggy-version/android.src.main.java.com.localz.pinch.utils.HttpUtil.java", "BodyUseAPI": ["headers.get(nextKey).toString()", "headers.get(nextKey).toString()", "org.json.JSONObject.get(java.lang.String)", "org.json.JSONObject.get(java.lang.String)", "java.net.HttpURLConnection.setRequestProperty(java.lang.String,(\"Token \" + (headers.get(nextKey).toString())))", "java.net.HttpURLConnection.setRequestProperty(java.lang.String,headers.get(nextKey).toString())"], "Fixed commit": "19aa579a19db2a65f76543777f7ac1b71da3805d", "Url": "https://api.github.com/repos/xpbtmusic/react-native-pinch", "Date": "2018-01-04T02:51:00Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (str.startsWith(\",\")) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5963/buggy-version/pda-parsers.src.main.java.de.nmichael.pda.parser.HotSpot.java", "BodyUseAPI": [], "Fixed commit": "acd2eccd03b1c32949fabd38bfcf6b5bf1504310", "Url": "https://api.github.com/repos/nicmichael/pda", "Date": "2018-05-31T21:21:38Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (str == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5963/buggy-version/pda-parsers.src.main.java.de.nmichael.pda.parser.HotSpot.java", "BodyUseAPI": [], "Fixed commit": "acd2eccd03b1c32949fabd38bfcf6b5bf1504310", "Url": "https://api.github.com/repos/nicmichael/pda", "Date": "2018-05-31T21:21:38Z"},
{"Line": "=>1534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((c instanceof com.codename1.ui.Form) && (c == (getCurrent()))) { return com.codename1.ui.Display.impl.isEditingText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6713/buggy-version/CodenameOne.src.com.codename1.ui.Display.java", "BodyUseAPI": [], "Fixed commit": "0af8e42301481b904fcd9bda96e806b488553db7", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2018-10-10T15:53:12Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.weblyzard.sparql.StreamingResultSet.readNextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(line.endsWith(\"\\\"\"))) && (hasNext)) line += readNextLine();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1087/buggy-version/src.main.java.com.weblyzard.sparql.StreamingResultSet.java", "BodyUseAPI": [], "Fixed commit": "f8f2b330988b2ebbaf175f0d44f5cd9dba4568cf", "Url": "https://api.github.com/repos/weblyzard/streaming-sparql", "Date": "2018-08-29T11:22:19Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((data.get(i).CustPo) == null) rowDataReport[i][2] = \"\"; else rowDataReport[i][2] = data.get(i).CustPo;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6931/buggy-version/src.spirit.fitness.scanner.report.DailyShippingReport.java", "BodyUseAPI": ["java.util.List<spirit.fitness.scanner.model.DailyShippingReportbean>.get(int)"], "Fixed commit": "01892872be08d157b0be5267fa0feb10f23e2295", "Url": "https://api.github.com/repos/geminihsu/SpiritFitFinishGoodsClient", "Date": "2018-08-07T21:38:00Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ar.edu.unlam.tallerweb1.usuario.UsuarioDao.list()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((usuarios.size()) == 0) { ar.edu.unlam.tallerweb1.usuario.Usuario dePietro = new ar.edu.unlam.tallerweb1.usuario.Usuario(\"maximiliano.depietro\", \"123456\", 0, ar.edu.unlam.tallerweb1.util.SalahProperties.ROL_ADMIN); usuarioDao.create(dePietro); ar.edu.unlam.tallerweb1.usuario.Usuario marconi = new ar.edu.unlam.tallerweb1.usuario.Usuario(\"daniel.marconi\", \"123456\", 0, ar.edu.unlam.tallerweb1.util.SalahProperties.ROL_ADMIN); usuarioDao.create(marconi); ar.edu.unlam.tallerweb1.usuario.Usuario murano = new ar.edu.unlam.tallerweb1.usuario.Usuario(\"juan.murano\", \"123456\", 0, ar.edu.unlam.tallerweb1.util.SalahProperties.ROL_ADMIN); usuarioDao.create(murano); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6821/buggy-version/src.main.java.ar.edu.unlam.tallerweb1.usuario.UsuarioServicio.java", "BodyUseAPI": [], "Fixed commit": "3ddee3714222effa3f4cda68035de4dc8e951af0", "Url": "https://api.github.com/repos/Max-UNLaM/dev-betsalah", "Date": "2018-07-12T21:11:27Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.oscim.utils.Parameters.POLY_SYMBOL)) { if (centroid == null) return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1523/buggy-version/vtm.src.org.oscim.layers.tile.vector.labeling.LabelTileLoaderHook.java", "BodyUseAPI": [], "Fixed commit": "1ba83801e994d78682b2ceeb31ca4f8d617392e6", "Url": "https://api.github.com/repos/mapsforge/vtm", "Date": "2018-01-28T09:33:37Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event instanceof com.playposse.landoftherooster.contentprovider.business.event.consequenceTriggered.PostBattleEvent) { item = ((com.playposse.landoftherooster.contentprovider.business.event.consequenceTriggered.PostBattleEvent) (event)).getConquestPrizeItem(); }else { throw new java.lang.IllegalArgumentException((\"The event is of an unexpected type: \" + (event.getClass().getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/883/buggy-version/app.src.main.java.com.playposse.landoftherooster.contentprovider.business.precondition.UpdateProductionBuildingMarkerPrecondition.java", "BodyUseAPI": ["event.getClass().getName()", "com.playposse.landoftherooster.contentprovider.business.BusinessEvent.getClass()"], "Fixed commit": "0eac4017f8bfb1d3d334f9cf7409b02c44c7f641", "Url": "https://api.github.com/repos/thomasfischersm/LandOfTheRooster", "Date": "2018-06-29T21:34:12Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (size == (-1)) { java.lang.System.out.println(\"size == 0\"); fileOutStream.close(); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/4041/buggy-version/Server.src.Server.CreateFileServerThread.java", "BodyUseAPI": [], "Fixed commit": "500055dcf3d592d0737c061894972e9e9640ef4e", "Url": "https://api.github.com/repos/leemanwhelan/AmazingMusic", "Date": "2018-07-24T09:50:10Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((writeFunction) != null) { try { ctx.setConstant(\"value\", value); result = ((T) (org.structr.core.script.Scripting.evaluate(ctx, obj, \"${\".concat(writeFunction).concat(\"}\"), ((\"setProperty(\" + (jsonName)) + \")\")))); } catch (java.lang.Throwable t) { org.structr.core.property.FunctionProperty.logger.warn(\"Exception while evaluating write function in Function property \\\"{}\\\": {}\", org.structr.core.property.FunctionProperty.jsonName(), t.getMessage()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/775/buggy-version/structr-core.src.main.java.org.structr.core.property.FunctionProperty.java", "BodyUseAPI": [], "Fixed commit": "4b941ea5bc52b9c04d5b02987dd1c83cf2fbe00c", "Url": "https://api.github.com/repos/ckramp/structr", "Date": "2018-08-29T10:45:22Z"},
{"Line": "=>1090", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (information.containsValue(interactionData)) { temp.addAll(information.get(((seemoo.fitbit.information.InformationList) (interactionData)).getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6894/buggy-version/app.src.main.java.seemoo.fitbit.activities.WorkActivity.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, seemoo.fitbit.information.InformationList>.get(((seemoo.fitbit.information.InformationList) (interactionData)).getName())", "seemoo.fitbit.information.InformationList.addAll(information.get(((seemoo.fitbit.information.InformationList) (interactionData)).getName()))"], "Fixed commit": "ac362ba36a0c59f6eb336e9a77ad427b9b2faee1", "Url": "https://api.github.com/repos/seemoo-lab/fitness-app", "Date": "2018-07-12T12:50:27Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mBluetoothInteractionQueue.isBluetoothInteractionsEmpty())) { result = mBluetoothInteractionQueue.getFirstBluetoothInteraction().finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6894/buggy-version/app.src.main.java.seemoo.fitbit.interactions.Interactions.java", "BodyUseAPI": ["seemoo.fitbit.interactions.BluetoothInteractionQueue.getFirstBluetoothInteraction()", "mBluetoothInteractionQueue.getFirstBluetoothInteraction().finish()"], "Fixed commit": "ac362ba36a0c59f6eb336e9a77ad427b9b2faee1", "Url": "https://api.github.com/repos/seemoo-lab/fitness-app", "Date": "2018-07-12T12:50:27Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (informationList != null) { list.addAll(informationList.getList()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/6894/buggy-version/app.src.main.java.seemoo.fitbit.information.InformationList.java", "BodyUseAPI": ["java.util.ArrayList<seemoo.fitbit.information.Information>.addAll(java.util.ArrayList<seemoo.fitbit.information.Information>)", "seemoo.fitbit.information.InformationList.getList()"], "Fixed commit": "ac362ba36a0c59f6eb336e9a77ad427b9b2faee1", "Url": "https://api.github.com/repos/seemoo-lab/fitness-app", "Date": "2018-07-12T12:50:27Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (endMin == 0) result = endHour + \":00\"; else result = (endHour + \":\") + endMin;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/577/buggy-version/SWDESPA-UDC.src.ultimatedesignchallenge.controller.SlotBuilder.java", "BodyUseAPI": [], "Fixed commit": "9788b33fabfc1f439c6b4bae80c9cf9bc5134bc7", "Url": "https://api.github.com/repos/luigirivera/SWDESPA-UDC", "Date": "2018-04-13T20:05:36Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRunning()) throw new java.lang.IllegalStateException(\"The execution is still running cannot be cleared.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2924/buggy-version/src.main.java.org.nerd4j.thread.BoundedResourcesAsyncTaskExecutor.java", "BodyUseAPI": [], "Fixed commit": "3c71ff339b57d0ca54faf51f7599864f7cd6c0ad", "Url": "https://api.github.com/repos/nerd4j/nerd4j-utils", "Date": "2018-04-25T14:31:06Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"INLINE\".equals(api.getImplementation())) { client.deleteApi(tenantDomain, api.getId()); undeployCustomSequences(client, api, tenantDomain, environment); }else { client.deleteEndpoint(api, tenantDomain); client.deleteApi(tenantDomain, api.getId()); undeployCustomSequences(client, api, tenantDomain, environment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/3469/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.APIGatewayManager.java", "BodyUseAPI": ["org.wso2.carbon.apimgt.api.model.API.getId()", "org.wso2.carbon.apimgt.impl.utils.APIGatewayAdminClient.deleteApi(java.lang.String,api.getId())", "org.wso2.carbon.apimgt.api.model.API.getId()", "org.wso2.carbon.apimgt.impl.APIGatewayManager.undeployCustomSequences(org.wso2.carbon.apimgt.impl.utils.APIGatewayAdminClient,org.wso2.carbon.apimgt.api.model.API,java.lang.String,org.wso2.carbon.apimgt.impl.dto.Environment)", "org.wso2.carbon.apimgt.impl.utils.APIGatewayAdminClient.deleteApi(java.lang.String,api.getId())", "org.wso2.carbon.apimgt.impl.APIGatewayManager.undeployCustomSequences(org.wso2.carbon.apimgt.impl.utils.APIGatewayAdminClient,org.wso2.carbon.apimgt.api.model.API,java.lang.String,org.wso2.carbon.apimgt.impl.dto.Environment)", "org.wso2.carbon.apimgt.impl.utils.APIGatewayAdminClient.deleteEndpoint(org.wso2.carbon.apimgt.api.model.API,java.lang.String)"], "Fixed commit": "919dd01191347106ad708dd9cbb87a0ac3600d39", "Url": "https://api.github.com/repos/wso2/carbon-apimgt", "Date": "2018-08-28T08:44:06Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((displayName) != null) && (!(displayName.trim().isEmpty()))) { displayName = (org.bukkit.ChatColor.RESET) + (displayName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/9012/buggy-version/src.de.syscy.kagecore.factory.itemstack.ItemStackFactoryTemplate.java", "BodyUseAPI": [], "Fixed commit": "60676b657318008d6541ce35dce7e1b5bffdb96f", "Url": "https://api.github.com/repos/Kage0x3B/KageCore", "Date": "2018-02-21T20:21:41Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.currentlyMockedClasses.size()) > 0) { this.resetClasses(this.currentlyMockedClasses.toArray(new java.lang.Class<?>[this.currentlyMockedClasses.size()])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1648/buggy-version/core.src.main.java.com.roscopeco.moxy.impl.asm.classmock.ASMClassMockEngine.java", "BodyUseAPI": ["java.util.HashSet<java.lang.Class<?>>.size()", "com.roscopeco.moxy.impl.asm.classmock.ASMClassMockEngine.resetClasses(java.lang.Class<?>[])", "java.util.HashSet<java.lang.Class<?>>.toArray(java.lang.Class<?>[])"], "Fixed commit": "48519fd9dd4d2fc1d68bb1557b9b860ffecb65aa", "Url": "https://api.github.com/repos/roscopeco/moxy", "Date": "2018-06-30T12:10:19Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getCookies()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((cookies == null) || ((cookies.length) <= 0)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8372/buggy-version/seckill.src.main.java.com.zhsheng.seckill.config.UserArgumentReslover.java", "BodyUseAPI": [], "Fixed commit": "f360e1841feb707013f9ab2f7a16ed045adf956b", "Url": "https://api.github.com/repos/ShengZhang2016/SecKill", "Date": "2018-07-03T22:12:32Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scoreOwner) != null) scoreOwner = null; else { scoreOwner = gm.getCurrentPlayer(); scoreOwner.AddScore(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/8386/buggy-version/src.sokoban.Goal.java", "BodyUseAPI": [], "Fixed commit": "e517d3abde5a33c85316d59e16e29b8920ec2491", "Url": "https://api.github.com/repos/csipetcsapat/killersokoban", "Date": "2018-05-15T20:20:29Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selectedObjects.size()) > 0) { getPropertyMap().put(this.selectionProperty, selectedObjects.get(0)); }else { getPropertyMap().put(this.selectionProperty, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2375/buggy-version/src.main.java.org.formula.swing.binding.JTableBinding.java", "BodyUseAPI": ["getPropertyMap().put(java.lang.String,java.lang.Object)", "java.util.List.get(int)"], "Fixed commit": "6445c37e2f1f6e31711ec71083ccc28a4d8728cc", "Url": "https://api.github.com/repos/githubpeon/formula", "Date": "2018-07-04T05:58:26Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((colony) != null) { compound.setInteger(com.minecolonies.coremod.tileentities.TAG_COLONY_ID, colony.getID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7738/buggy-version/src.main.java.com.minecolonies.coremod.tileentities.ScarecrowTileEntity.java", "BodyUseAPI": [], "Fixed commit": "24c12257b2ac24bce4b44788e87b59d76673553e", "Url": "https://api.github.com/repos/ldtteam/minecolonies", "Date": "2018-01-02T21:00:15Z"},
{"Line": "=>471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.network.play.server.SPacketUpdateTileEntity.getNbtCompound()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (compound.hasKey(com.minecolonies.coremod.tileentities.TAG_COLONY_ID)) { setOwner(ownerId, com.minecolonies.coremod.colony.ColonyManager.getColonyView(compound.getInteger(com.minecolonies.coremod.tileentities.TAG_COLONY_ID))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7738/buggy-version/src.main.java.com.minecolonies.coremod.tileentities.ScarecrowTileEntity.java", "BodyUseAPI": ["net.minecraft.nbt.NBTTagCompound.getInteger(com.minecolonies.coremod.tileentities.TAG_COLONY_ID)", "com.minecolonies.coremod.tileentities.ScarecrowTileEntity.setOwner(int,com.minecolonies.coremod.colony.ColonyManager.getColonyView(compound.getInteger(com.minecolonies.coremod.tileentities.TAG_COLONY_ID)))", "com.minecolonies.coremod.colony.ColonyManager.getColonyView(compound.getInteger(com.minecolonies.coremod.tileentities.TAG_COLONY_ID))"], "Fixed commit": "24c12257b2ac24bce4b44788e87b59d76673553e", "Url": "https://api.github.com/repos/ldtteam/minecolonies", "Date": "2018-01-02T21:00:15Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (aWidget != (device.mPreviousWidget)) { org.mozilla.vrbrowser.MotionEventGenerator.generateEvent(aWidget, device, MotionEvent.ACTION_HOVER_ENTER, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/5241/buggy-version/app.src.common.shared.org.mozilla.vrbrowser.MotionEventGenerator.java", "BodyUseAPI": ["org.mozilla.vrbrowser.MotionEventGenerator.generateEvent(org.mozilla.vrbrowser.Widget,org.mozilla.vrbrowser.MotionEventGenerator.Device,MotionEvent.ACTION_HOVER_ENTER,boolean)"], "Fixed commit": "547ee9a4f7f372fff301b6e2495d96fd5cb1a825", "Url": "https://api.github.com/repos/MozillaReality/FirefoxReality", "Date": "2018-06-08T08:58:08Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["QrySopOr.docIteratorGetMatch()", "this.args.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((qry.docIteratorHasMatch(r)) && ((qry.docIteratorGetMatch()) == docId)) score = java.lang.Math.max(score, qry.getScore(r));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2250/buggy-version/QrySopOr.java", "BodyUseAPI": ["java.lang.Math.max(double,qry.getScore(r))", "QrySop.getScore(RetrievalModel)"], "Fixed commit": "53de12b55636c00f71cd01bdb1e426f5198a1e3c", "Url": "https://api.github.com/repos/SilhDing/QryEval-3.3.3", "Date": "2018-09-14T05:23:53Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.O)) startForegroundService(serviceIntent); else startService(serviceIntent);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/7561/buggy-version/app.src.main.java.gis2018.udacity.pomodoro.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "605eb7ca0dea93330fce5d5c162af6ee0aa0667d", "Url": "https://api.github.com/repos/google-udacity-india-scholars/abnd-track-pomodoro-timer-app", "Date": "2018-10-18T13:38:51Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scannedChip) != null) { scannedChip.setState(ChipState.DNS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/1034/buggy-version/application.classes.view.PrepareView.java", "BodyUseAPI": [], "Fixed commit": "351411f7f147601d758e592443028e4a6bd7d106", "Url": "https://api.github.com/repos/tpoerschke/Project_Hellweglauf", "Date": "2018-10-06T08:04:27Z"},
{"Line": "=>519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vicinity) != null) handleGyroImpediment(gyro);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2709/buggy-version/core.src.com.esbjon.entities.Storm.java", "BodyUseAPI": [], "Fixed commit": "f5009c88e7e514e50e3389289013c7e35b80a7e0", "Url": "https://api.github.com/repos/k-o-r-t-o/gdxDune", "Date": "2018-01-02T21:04:06Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vicinity) != null) handleSquadImpediment(squad);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V152/2709/buggy-version/core.src.com.esbjon.entities.Storm.java", "BodyUseAPI": [], "Fixed commit": "f5009c88e7e514e50e3389289013c7e35b80a7e0", "Url": "https://api.github.com/repos/k-o-r-t-o/gdxDune", "Date": "2018-01-02T21:04:06Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (docDetail.getDocInfo().isEmpty()) { aboutLayout.setVisibility(View.INVISIBLE); }else { aboutLayout.setVisibility(View.VISIBLE); aboutDoctorDescription.setText(docDetail.getDocInfo()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2209/buggy-version/app.src.main.java.com.rescribe.doctor.ui.activities.ProfileActivity.java", "BodyUseAPI": ["com.rescribe.doctor.model.login.DocDetail.getDocInfo()", "com.rescribe.doctor.ui.customesViews.CustomTextView.setText(docDetail.getDocInfo())"], "Fixed commit": "47ef0b09fb15805b19dc7d1fd2ff020b06857317", "Url": "https://api.github.com/repos/sandeepbahalkar123/rescribeDoctor_repo", "Date": "2018-04-24T10:09:56Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (ents.contains(null)) { java.lang.System.err.println((((\"Error constructing composite physical entity: \" + \"entity list (\") + (rels.size())) + \") contained null entry.\")); }else if (((ents.size()) - 1) != (rels.size())) { java.lang.System.err.println((((((\"Error constructing composite physical entity: \" + \"length of relations array (\") + (rels.size())) + \") must be one less than entity array (\") + (ents.size())) + \").\")); }else { setArrayListOfEntities(ents); setArrayListOfStructuralRelations(rels); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4135/buggy-version/src.semsim.model.physical.object.CompositePhysicalEntity.java", "BodyUseAPI": [], "Fixed commit": "2f0b54a17b5e142932bef9d6f45cd05749d7a6b4", "Url": "https://api.github.com/repos/SemBioProcess/SemGen", "Date": "2018-03-20T18:42:04Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((table.size()) < 1) { throw new java.lang.IllegalArgumentException(\"The table must not be empty!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4826/buggy-version/org.knime.knip.hough.src.org.knime.knip.hough.nodes.learner.HoughForestLearnerNodeModel.java", "BodyUseAPI": [], "Fixed commit": "1ea2eedfab11381c3af5431adfec56449df919a3", "Url": "https://api.github.com/repos/knime-ip/knip-hough-forest", "Date": "2018-03-29T15:07:17Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.picfood.server.service.impl.DishRepository.findByDishId(post.getDishId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((dish.getPostNum()) <= 1) { dish.setAvgRate(0); dish.setPostNum(0); }else { dish.setAvgRate(((((dish.getAvgRate()) * (dish.getPostNum())) - (post.getRate())) / ((dish.getPostNum()) - 1))); dish.setPostNum(((dish.getPostNum()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7276/buggy-version/src.main.java.com.picfood.server.service.impl.PostServiceImpl.java", "BodyUseAPI": ["com.picfood.server.service.impl.Dish.getPostNum()", "com.picfood.server.service.impl.Dish.setPostNum(((dish.getPostNum()) - 1))", "com.picfood.server.service.impl.Dish.getAvgRate()", "com.picfood.server.service.impl.Dish.setAvgRate(int)", "com.picfood.server.service.impl.Dish.setAvgRate(((((dish.getAvgRate()) * (dish.getPostNum())) - (post.getRate())) / ((dish.getPostNum()) - 1)))", "com.picfood.server.service.impl.Dish.getPostNum()", "com.picfood.server.service.impl.Dish.getPostNum()", "com.picfood.server.service.impl.Dish.setPostNum(int)"], "Fixed commit": "9522ab56946565109083d18a6f69d25648ecfc3d", "Url": "https://api.github.com/repos/song-hao/picfood-server", "Date": "2018-04-03T14:56:04Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.lang.PsiBuilder.getLatestDoneMarker()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (latestDoneMarker != null) { com.intellij.psi.tree.IElementType tokenType = latestDoneMarker.getTokenType(); if (tokenType == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.RECORD_KEY_VALUE)) { return false; } return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7717/buggy-version/src.main.gen.org.ballerinalang.plugins.idea.parser.BallerinaParserUtil.java", "BodyUseAPI": ["com.intellij.lang.LighterASTNode.getTokenType()"], "Fixed commit": "2b436f00518a766c7ec996399e5de6f53a5fb317", "Url": "https://api.github.com/repos/Shan1024/ballerina-idea-plugin", "Date": "2018-04-13T19:47:03Z"},
{"Line": "=>697", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.languagetool.rules.de.GermanSpellerRule.misspelled(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (isMisspelled && (super.ignoreWord(word))) { isMisspelled = false; }else if ((isMisspelled && (word.endsWith(\"s\"))) && (org.languagetool.rules.de.GermanSpellerRule.ENDINGS_NEEDING_FUGENS.matcher(org.apache.commons.lang3.StringUtils.removeEnd(word, \"s\")).matches())) { isMisspelled = hunspellDict.misspelled(org.apache.commons.lang3.StringUtils.removeEnd(word, \"s\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2721/buggy-version/languagetool-language-modules.de.src.main.java.org.languagetool.rules.de.GermanSpellerRule.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)", "org.apache.commons.lang3.StringUtils.removeEnd(java.lang.String,java.lang.String)", "org.apache.commons.lang3.StringUtils.removeEnd(java.lang.String,java.lang.String)", "org.languagetool.rules.de.GermanSpellerRule.misspelled(org.apache.commons.lang3.StringUtils.removeEnd(word, \"s\"))", "java.util.regex.Matcher.matches()", "java.util.regex.Pattern.matcher(org.apache.commons.lang3.StringUtils.removeEnd(word, \"s\"))"], "Fixed commit": "26df1bb20d0077d1f265ac204f785274a98099e8", "Url": "https://api.github.com/repos/strn/languagetool-sr", "Date": "2018-01-15T17:52:51Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getDeptId()) == null) user.setDeptId(0L);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/419/buggy-version/src.main.java.cc.mrbird.system.service.impl.UserServiceImpl.java", "BodyUseAPI": ["cc.mrbird.system.domain.User.setDeptId(long)"], "Fixed commit": "98ae1484f6106e9c1d1f5c08242b4bfade67d4d7", "Url": "https://api.github.com/repos/wuyouzhuguli/FEBS-Shiro", "Date": "2018-03-26T01:33:27Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<ap.basetypes.IdealInt, ap.parser.ITerm>.get(ap.basetypes.IdealInt)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (arrayF == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4794/buggy-version/src.org.sosy_lab.java_smt.solvers.princess.PrincessModel.java", "BodyUseAPI": [], "Fixed commit": "1ee8546a4c561aa8cb0e78e8907d36f2ef935df7", "Url": "https://api.github.com/repos/sosy-lab/java-smt", "Date": "2018-02-02T08:37:50Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentTokenBuffer.length()) > 1) { throw new java.lang.Exception(\"wrong character\"); }else { if (java.lang.Character.isDefined(currentTokenBuffer.charAt(0))) { (index)++; return new Token(currentTokenBuffer, Token.LITERAL); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/878/buggy-version/src.main.java.Tokenizer.java", "BodyUseAPI": ["java.lang.Character.isDefined(char)", "java.lang.String.charAt(int)"], "Fixed commit": "0f632874a0f4ad0d105da8b3fc9ec870d609ab95", "Url": "https://api.github.com/repos/Dilschat/Lexical-analyzer", "Date": "2018-09-20T17:28:04Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (unityRunner.agent.line.UnityLineListParser.ignoredLines.isEmpty()) { unityRunner.agent.line.UnityLineListParser.ignoredLines = java.util.Arrays.asList(new unityRunner.agent.line.Line(\"Assertion failed: Failed to insert item. Name:.*?, Command:.*\", Line.Type.Normal)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/131/buggy-version/agent.src.unityRunner.agent.line.UnityLineListParser.java", "BodyUseAPI": [], "Fixed commit": "124083d1d033a1a27ac0d8067d5ea8419f28b811", "Url": "https://api.github.com/repos/ArtOfSettling/Teamcity-unity3d-build-runner-plugin", "Date": "2018-05-12T13:25:23Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (status == (jetbrains.buildServer.messages.Status.ERROR)) { status = jetbrains.buildServer.messages.Status.FAILURE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/131/buggy-version/agent.src.unityRunner.agent.LogParser.java", "BodyUseAPI": [], "Fixed commit": "124083d1d033a1a27ac0d8067d5ea8419f28b811", "Url": "https://api.github.com/repos/ArtOfSettling/Teamcity-unity3d-build-runner-plugin", "Date": "2018-05-12T13:25:23Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cloud.bolte.thbmailbot.Bot.db.get(\"old\").equalsIgnoreCase(cloud.bolte.thbmailbot.Bot.db.get(\"new\")))) { cloud.bolte.thbmailbot.Bot.db.put(\"old\", cloud.bolte.thbmailbot.Bot.db.get(\"new\")); java.lang.System.out.println((time + \" [MailBot] New cancellations detected.\")); return true; }else if (cloud.bolte.thbmailbot.Bot.db.get(\"old\").equalsIgnoreCase(cloud.bolte.thbmailbot.Bot.db.get(\"new\"))) { java.lang.System.out.println((time + \" [MailBot] No new cancellations detected.\")); return false; }else { java.lang.System.out.println((time + \" [MailBot] Unknown case.\")); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7144/buggy-version/src.cloud.bolte.thbmailbot.Bot.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "ec00c93ae5321261bbfe209a9cb43ad177ae869e", "Url": "https://api.github.com/repos/strumswell/THB-MailBot", "Date": "2018-06-01T14:56:02Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Data.Repository.QuestRepository.GetQuestByID(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(quest.getMapNoteTag().equals(\"\"))) { Helper.MapPinHelper.AddWaypointMapPin(oPC, quest.getMapNoteTag(), quest.getName(), (\"QST_MAP_NOTE_\" + questID)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3082/buggy-version/src.main.java.GameSystems.QuestSystem.java", "BodyUseAPI": ["GameSystems.QuestEntity.getMapNoteTag()", "GameSystems.QuestEntity.getName()", "Helper.MapPinHelper.AddWaypointMapPin(org.nwnx.nwnx2.jvm.NWObject,quest.getMapNoteTag(),quest.getName(),java.lang.String)"], "Fixed commit": "798497f54c298cd3e4b69b6e67b81aa39f82aec6", "Url": "https://api.github.com/repos/zunath/CyberpunkZombieSurvival_JVM", "Date": "2018-01-31T16:17:32Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Data.Repository.QuestRepository.GetQuestByID(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(quest.getMapNoteTag().equals(\"\"))) { Helper.MapPinHelper.DeleteMapPin(oPC, (\"QST_MAP_NOTE_\" + questID)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3082/buggy-version/src.main.java.GameSystems.QuestSystem.java", "BodyUseAPI": [], "Fixed commit": "798497f54c298cd3e4b69b6e67b81aa39f82aec6", "Url": "https://api.github.com/repos/zunath/CyberpunkZombieSurvival_JVM", "Date": "2018-01-31T16:17:32Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id.equals(\"NEW PROBLEM\")) { if (response.equals(ConnectivityUtils.SUCCESS)) { new com.jmp.atendimentoaocidadao.utils.DialogUtils(this).showProblemReportedDialog(); }else com.jmp.atendimentoaocidadao.utils.DialogUtils.showAlert(this, response.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9395/buggy-version/app.src.main.java.com.jmp.atendimentoaocidadao.main.NewProblemActivity.java", "BodyUseAPI": [], "Fixed commit": "ca86e1b715cdff44a06385e508f32c7502d96239", "Url": "https://api.github.com/repos/joaoroberto01/AtendimentoAoCidadao", "Date": "2018-03-15T16:58:48Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.bqc.uss.uetgrade_server.repository.CourseRepository.findByCode(course.getCode())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (existedCourse == null) { if (reqCourseCode.matches(\".*\\\\s1$\")) { reqCourseCode = reqCourseCode.substring(0, ((reqCourseCode.length()) - 2)); existedCourse = courseRepository.findByCode(reqCourseCode); }else { existedCourse = courseRepository.findByCode(java.lang.String.format(\"%s 1\", reqCourseCode)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4107/buggy-version/uetgrade-server.src.main.java.net.bqc.uss.uetgrade_server.service.SubscribeGradeService.java", "BodyUseAPI": [], "Fixed commit": "04dce3c970d725220b02330be0bef22f16094d2d", "Url": "https://api.github.com/repos/uetscholarship/uss-server", "Date": "2018-01-08T09:08:29Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pref.getString(\"language\", \"\").equalsIgnoreCase(\"en\")) { shareBodyText = (\"Do you want to check your private financial security ? \\n\" + (\"Let\\'s download this app right now : \\n\" + \"http://play.google.com/store/apps/details?id=\")) + (getApplicationContext().getPackageName()); }else { shareBodyText = (\"Mau periksa seberapa sehat Keuangan Pribadi anda ?\\n\" + (\"Silahkan download aplikasi ini sekarang juga : \\n\" + \"http://play.google.com/store/apps/details?id=\")) + (getApplicationContext().getPackageName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8687/buggy-version/app.src.main.java.com.luckynineapps.financialchecker.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "83af1a00ec2dcbde7d79da037af3af2e21a6c1eb", "Url": "https://api.github.com/repos/NikkoES/Financial-Checker", "Date": "2018-10-10T12:43:29Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i == ((idsForErrorsNotInRange.size()) - 1)) { wrongElementID += idsForErrorsNotInRange.get(i); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/1955/buggy-version/src.main.java.puzzle.Puzzle.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.get(int)"], "Fixed commit": "218b5af0bf33774a175d0867e9ceae234c5fe962", "Url": "https://api.github.com/repos/tufman/jigsaw1", "Date": "2018-04-17T14:02:09Z"},
{"Line": "=>1126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((content.indexOf(end)) > 0) { content = content.substring(((content.indexOf(start)) + (start.length())), content.indexOf(end)).replace(\"amp;\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5469/buggy-version/news.src.main.java.com.example.news.mvp.news.NewsListPresenter.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "d3aae10aad892ba109879822fe86c137b2828584", "Url": "https://api.github.com/repos/HelloChenJinJun/NewFastFrame", "Date": "2018-08-04T14:28:23Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pfg.kraken.astar.tentacles.BezierComputer.constructBezierQuad(cinematiqueInitiale.getPosition(),pointB[indexThread],arrivee.getPosition(),cinematiqueInitiale.enMarcheAvant,pfg.kraken.robot.Cinematique,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (out == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5459/buggy-version/core.src.main.java.pfg.kraken.astar.tentacles.BezierComputer.java", "BodyUseAPI": [], "Fixed commit": "1e2be727c0f6907e9ebe34635113ad26faaca40b", "Url": "https://api.github.com/repos/PFGimenez/The-Kraken-Pathfinding", "Date": "2018-04-05T10:28:34Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pfg.kraken.astar.tentacles.BezierComputer.constructBezierCubique(pfg.kraken.utils.XY,pointB[indexThread],pointC[indexThread],pfg.kraken.utils.XY,cinematiqueInitiale.enMarcheAvant,pfg.kraken.robot.Cinematique,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (out == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5459/buggy-version/core.src.main.java.pfg.kraken.astar.tentacles.BezierComputer.java", "BodyUseAPI": [], "Fixed commit": "1e2be727c0f6907e9ebe34635113ad26faaca40b", "Url": "https://api.github.com/repos/PFGimenez/The-Kraken-Pathfinding", "Date": "2018-04-05T10:28:34Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (source != null) { org.springframework.beans.BeanUtils.copyProperties(source, target, ignoreProperties); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/1913/buggy-version/lichkin-spring-boot-starter-base.src.main.java.com.lichkin.springframework.utils.LKBeanUtils.java", "BodyUseAPI": ["org.springframework.beans.BeanUtils.copyProperties(java.lang.Object,B,java.lang.String[])"], "Fixed commit": "5bbfd3222d2a19cd356b8c0a69c6bafcf95ab576", "Url": "https://api.github.com/repos/LichKinContributor/lichkin-spring-boot", "Date": "2018-07-06T07:17:24Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((door) == null) door = me.therealdan.elevators.mechanics.Elevator.defaultDoor;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/549/buggy-version/src.me.therealdan.elevators.mechanics.Elevator.java", "BodyUseAPI": [], "Fixed commit": "0093aa9ae6102261c788972a8a470b71516c4ab0", "Url": "https://api.github.com/repos/TheRealDan/Elevators", "Date": "2018-05-23T07:15:56Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) != null ? !(type.equals(that.type)) : (that.type) != null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5549/buggy-version/core-library.src.main.java.org.silverpeas.core.index.search.model.SearchResult.java", "BodyUseAPI": [], "Fixed commit": "e3d3b0ff590e0ca8b0e80224666669e79a9fcd89", "Url": "https://api.github.com/repos/SilverTeamWork/Silverpeas-Core", "Date": "2018-09-05T12:27:21Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!(isSecondNumberSet)) && (isDecimalMarkSet)) && ((firstNumber.scale()) == 0)) { line.append(\".\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2618/buggy-version/app.src.main.java.de.philippveit.curcal.mvp.MainPresentor.java", "BodyUseAPI": [], "Fixed commit": "04dd34b57d33c5a204022d98ffc5e2c3062a7533", "Url": "https://api.github.com/repos/kruemelnerd/curcal", "Date": "2018-02-14T14:57:49Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSecondNumberSet) { line.append(secondNumber); if ((isDecimalMarkSet) && ((secondNumber.scale()) == 0)) { line.append(\".\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2618/buggy-version/app.src.main.java.de.philippveit.curcal.mvp.MainPresentor.java", "BodyUseAPI": [], "Fixed commit": "04dd34b57d33c5a204022d98ffc5e2c3062a7533", "Url": "https://api.github.com/repos/kruemelnerd/curcal", "Date": "2018-02-14T14:57:49Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lstCell.get(4).getFirstChild()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((txtLocationType.getSelectedItem()) != null) { location.setLocationType(txtLocationType.getSelectedItem().getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/1188/buggy-version/CKPManagement.src.main.java.com.dvd.ckp.controller.LocationController.java", "BodyUseAPI": ["org.zkoss.zul.Combobox.getSelectedItem()", "txtLocationType.getSelectedItem().getValue()", "com.dvd.ckp.domain.Location.setLocationType(txtLocationType.getSelectedItem().getValue())"], "Fixed commit": "4f8423b311aecc43f53872a0bd785f4eb62e72f9", "Url": "https://api.github.com/repos/stfc3/CKP", "Date": "2018-02-07T03:24:00Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ch.crearex.json.impl.JsonNullValue.class.isAssignableFrom(propertyType)) { if (possibleTypes[0].isNullable()) { return possibleTypes[0]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4079/buggy-version/src.main.java.ch.crearex.json.schema.ObjectType.java", "BodyUseAPI": [], "Fixed commit": "29693007629126b78f4eb4c1456e53ffed0c9491", "Url": "https://api.github.com/repos/crearex/Json", "Date": "2018-01-28T18:44:58Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ch.crearex.json.impl.JsonNullValue.class.isAssignableFrom(entryType)) { if (possibleItemTypes[0].isNullable()) { return possibleItemTypes[0]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4079/buggy-version/src.main.java.ch.crearex.json.schema.ArrayType.java", "BodyUseAPI": [], "Fixed commit": "29693007629126b78f4eb4c1456e53ffed0c9491", "Url": "https://api.github.com/repos/crearex/Json", "Date": "2018-01-28T18:44:58Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (row == 1) { firstMove = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/1169/buggy-version/src.game.Pawn.java", "BodyUseAPI": [], "Fixed commit": "dc5b712cad42414d4458495581045572ad63022f", "Url": "https://api.github.com/repos/dyl10s/ChessGame", "Date": "2018-03-29T02:45:39Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (row == 6) { firstMove = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/1169/buggy-version/src.game.Pawn.java", "BodyUseAPI": [], "Fixed commit": "dc5b712cad42414d4458495581045572ad63022f", "Url": "https://api.github.com/repos/dyl10s/ChessGame", "Date": "2018-03-29T02:45:39Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.UserService.findByUserName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((user.WishList) != null) result.IsWishProduct = user.WishList.contains(idProduct); else result.IsWishProduct = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/861/buggy-version/src.main.java.com.example.UserController.java", "BodyUseAPI": ["user.WishList.contains(java.lang.String)"], "Fixed commit": "7b2b203aac53d600578e4caaaa23656a2263b1fd", "Url": "https://api.github.com/repos/huannxdev/Eshop", "Date": "2018-06-17T06:12:31Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.UserService.findByUserName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((user.WishList) == null) user.WishList = new java.util.ArrayList<java.lang.String>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/861/buggy-version/src.main.java.com.example.UserController.java", "BodyUseAPI": [], "Fixed commit": "7b2b203aac53d600578e4caaaa23656a2263b1fd", "Url": "https://api.github.com/repos/huannxdev/Eshop", "Date": "2018-06-17T06:12:31Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((free[0]) < (0.7 * (total[0]))) { org.apache.sysml.runtime.instructions.gpu.context.GPUMemoryManager.LOG.warn(((((((\"Potential under-utilization: GPU memory - Total: \" + ((total[0]) * 1.0E-6)) + \" MB, Available: \") + ((free[0]) * 1.0E-6)) + \" MB on \") + gpuCtx) + \". This can happen if there are other processes running on the GPU at the same time.\")); }else org.apache.sysml.runtime.instructions.gpu.context.GPUMemoryManager.LOG.info((((((\"GPU memory - Total: \" + ((total[0]) * 1.0E-6)) + \" MB, Available: \") + ((free[0]) * 1.0E-6)) + \" MB on \") + gpuCtx));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4530/buggy-version/src.main.java.org.apache.sysml.runtime.instructions.gpu.context.GPUMemoryManager.java", "BodyUseAPI": [], "Fixed commit": "7b2e97f325b2620197d1b646b3b89f2bafb3e783", "Url": "https://api.github.com/repos/niketanpansare/systemml", "Date": "2018-02-24T17:43:56Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((null == (description.getAnnotation(org.junit.Test.class))) && (description.getMethodName().contains(\"#\"))) { handler.startTestMethod(description); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3170/buggy-version/src.main.java.com.epam.reportportal.junit.ReportPortalListener.java", "BodyUseAPI": ["com.epam.reportportal.junit.IListenerHandler.startTestMethod(org.junit.runner.Description)"], "Fixed commit": "34b2bb57a6cb8eb21be5f4838129539fbac3745f", "Url": "https://api.github.com/repos/reportportal/agent-java-junit", "Date": "2018-06-15T11:17:47Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (description.getMethodName().contains(\"#\")) { handler.stopTestMethod(description); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3170/buggy-version/src.main.java.com.epam.reportportal.junit.ReportPortalListener.java", "BodyUseAPI": ["com.epam.reportportal.junit.IListenerHandler.stopTestMethod(org.junit.runner.Description)"], "Fixed commit": "34b2bb57a6cb8eb21be5f4838129539fbac3745f", "Url": "https://api.github.com/repos/reportportal/agent-java-junit", "Date": "2018-06-15T11:17:47Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["analysis.getContents().length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((element.mainAreaBegin) > 0) || ((element.mainAreaEnd) < textLength)) { if (((index) >= (element.mainAreaBegin)) && ((index) < (element.mainAreaEnd))) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7800/buggy-version/WikipediaCleaner.src.org.wikipediacleaner.api.data.PageElementFormatting.java", "BodyUseAPI": [], "Fixed commit": "21b2e45ddb9c56d340e5ec4a6212dd5859a0b5e8", "Url": "https://api.github.com/repos/WPCleaner/wpcleaner", "Date": "2018-01-23T11:47:58Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (actionType == (fr.inria.spirals.features.detector.spoon.CtElementAnalyzer.ACTION_TYPE.UPDATE)) { output.incrementFeatureCounter(\"mdParRem\"); }else { output.incrementFeatureCounter((\"mdPar\" + (actionType.name))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3802/buggy-version/src.main.java.fr.inria.spirals.features.detector.spoon.CtElementAnalyzer.java", "BodyUseAPI": ["fr.inria.spirals.entities.RepairActions.incrementFeatureCounter(java.lang.String)"], "Fixed commit": "27d8ad4d2b8c77cf5e139fbd7f606e188992e29c", "Url": "https://api.github.com/repos/lascam-UFU/automatic-diff-dissection", "Date": "2018-04-21T17:06:46Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parent) != null) { parent.sync(authentication); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8220/buggy-version/hsweb-system.hsweb-system-authorization.hsweb-system-authorization-local.src.main.java.org.hswebframework.web.service.authorization.simple.SimpleAuthenticationManager.java", "BodyUseAPI": [], "Fixed commit": "98a7f7d442b204bbffc11b7ad34e13a2ee32b6fa", "Url": "https://api.github.com/repos/JiaRG/hsweb-framework", "Date": "2018-10-10T07:08:03Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (authentication == null) { authentication = authenticationInitializeService.initUserAuthorization(userId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8220/buggy-version/hsweb-system.hsweb-system-authorization.hsweb-system-authorization-local.src.main.java.org.hswebframework.web.service.authorization.simple.SimpleAuthenticationManager.java", "BodyUseAPI": [], "Fixed commit": "98a7f7d442b204bbffc11b7ad34e13a2ee32b6fa", "Url": "https://api.github.com/repos/JiaRG/hsweb-framework", "Date": "2018-10-10T07:08:03Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parent) != null) { authentication = parent.getByUserId(userId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8220/buggy-version/hsweb-system.hsweb-system-authorization.hsweb-system-authorization-local.src.main.java.org.hswebframework.web.service.authorization.simple.SimpleAuthenticationManager.java", "BodyUseAPI": [], "Fixed commit": "98a7f7d442b204bbffc11b7ad34e13a2ee32b6fa", "Url": "https://api.github.com/repos/JiaRG/hsweb-framework", "Date": "2018-10-10T07:08:03Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getPower(\"KnivesPower\").amount) >= 1) { AbstractDungeon.actionManager.addToBottom(new com.megacrit.cardcrawl.actions.utility.SFXAction(\"ATTACK_HEAVY\")); AbstractDungeon.actionManager.addToBottom(new com.megacrit.cardcrawl.actions.animations.VFXAction(p, new com.megacrit.cardcrawl.vfx.combat.MindblastEffect(p.dialogX, p.dialogY), 0.1F)); AbstractDungeon.actionManager.addToBottom(new com.megacrit.cardcrawl.actions.common.DamageAllEnemiesAction(com.megacrit.cardcrawl.dungeons.AbstractDungeon.player, this.multiDamage, this.damageTypeForTurn, AbstractGameAction.AttackEffect.FIRE)); AbstractDungeon.actionManager.addToBottom(new com.megacrit.cardcrawl.actions.common.ApplyPowerAction(p, p, new blackrusemod.powers.KnivesPower(p, (-1)), (-1))); if (p.hasPower(\"SurpressingFirePower\")) AbstractDungeon.actionManager.addToBottom(new com.megacrit.cardcrawl.actions.common.GainBlockAction(p, p, p.getPower(\"SurpressingFirePower\").amount)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5925/buggy-version/src.main.java.blackrusemod.cards.Sunlight.java", "BodyUseAPI": ["AbstractDungeon.actionManager.addToBottom(com.megacrit.cardcrawl.actions.common.ApplyPowerAction)", "com.megacrit.cardcrawl.characters.AbstractPlayer.hasPower(java.lang.String)", "com.megacrit.cardcrawl.characters.AbstractPlayer.getPower(java.lang.String)", "AbstractDungeon.actionManager.addToBottom(com.megacrit.cardcrawl.actions.animations.VFXAction)", "AbstractDungeon.actionManager.addToBottom(com.megacrit.cardcrawl.actions.common.GainBlockAction)"], "Fixed commit": "e4e130f7612ea229c4ea94dbca191edc7a5050bc", "Url": "https://api.github.com/repos/lionpkqq/StS-BlackRuseMod", "Date": "2018-07-11T11:22:16Z"},
{"Line": "=>951", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((null != (cachedPreparedStatementHandle)) && (hasPreparedStatementHandle())) && ((prepStmtHandle) == (cachedPreparedStatementHandle.getHandle()))) { cachedPreparedStatementHandle.removeReference(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2145/buggy-version/src.main.java.com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.java", "BodyUseAPI": ["com.microsoft.sqlserver.jdbc.SQLServerConnection.PreparedStatementHandle.removeReference()"], "Fixed commit": "f091eff8e05abe5e53e0c8f5969df267638658eb", "Url": "https://api.github.com/repos/cheenamalhotra/mssql-jdbc", "Date": "2018-03-12T23:41:18Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (publicKey == null) { publicKey = toPublicKey(java.lang.System.getenv(JsonKey.SSO_PUBLIC_KEY)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7574/buggy-version/common-util.src.main.java.org.sunbird.services.sso.impl.KeyCloakServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "0cf2bdfc0d709297d621043d734bdf4cb94a3891", "Url": "https://api.github.com/repos/project-sunbird/sunbird-utils", "Date": "2018-09-27T07:30:37Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(lock.isLocked())) { try { lock.lock(); if ((applicationDBList.size()) > (applicationLuceneList.size())) { for (net.whydah.sso.application.types.Application application : applicationDBList) { luceneApplicationIndexer.addToIndex(application); } } } catch (java.lang.InterruptedException e) { } finally { lock.unlock(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6124/buggy-version/src.main.java.net.whydah.identity.application.ApplicationService.java", "BodyUseAPI": ["net.whydah.sso.util.Lock.unlock()", "net.whydah.sso.util.Lock.lock()"], "Fixed commit": "75b99ddc4077806fe81269bb17a202a3f4706566", "Url": "https://api.github.com/repos/Cantara/Whydah-UserIdentityBackend", "Date": "2018-02-23T04:05:41Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (size <= 65535) { return new byte[]{ ((byte) (130)), ((byte) (size >>> 8)), ((byte) (size)) }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8017/buggy-version/src.yadi.dlms.cosem.Cosem.java", "BodyUseAPI": [], "Fixed commit": "efb5bf04662670f686f6a04c994b9fd0d89481bf", "Url": "https://api.github.com/repos/pfaco/yadi.java", "Date": "2018-04-16T19:42:18Z"},
{"Line": "=>693", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPub) != null) { if ((mPub.getName()) == null) { outputError(\"Please enter a name for location.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4042/buggy-version/app.src.main.java.com.evans.dale.finalyearproject.Activities.AddPub.java", "BodyUseAPI": [], "Fixed commit": "9b2eb9130d8965b06e2542c51a1c6cf467d3186c", "Url": "https://api.github.com/repos/thesymbolx/final_year_project", "Date": "2018-03-24T17:31:47Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (outdest.equals(\"out\")) { output = java.lang.System.out; outdest = \"System.out\"; }else if (!(outdest.equals(\"System.out\"))) { output = new java.lang.StringBuilder(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4040/buggy-version/src.cs3500.animator.EasyAnimator.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "ebe5d037be6df10ad10e52178d735d4427f5e2ae", "Url": "https://api.github.com/repos/az0977776/EasyAnimator", "Date": "2018-03-20T02:00:32Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["kalambury.mainWindow.drawingBoard.DrawingBoard.floodFillOwn(int,int,colorWidget.getColor())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (floodFillData != null) { sendToServer(floodFillData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4061/buggy-version/Kalambury.src.kalambury.mainWindow.drawingBoard.DrawingBoard.java", "BodyUseAPI": ["kalambury.mainWindow.drawingBoard.DrawingBoard.sendToServer(kalambury.sendableData.FloodFillData)"], "Fixed commit": "2855b6354de079a9388ad8823943c11f0c88694e", "Url": "https://api.github.com/repos/PiotrTrawinski/Kalambury", "Date": "2018-04-30T18:03:28Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (title == null) { com.greenfoxacademy.restexercises.models.ErrorHandler errorHandler = new com.greenfoxacademy.restexercises.models.ErrorHandler(); errorHandler.setError(\"Please provide a title!\"); return errorHandler; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6646/buggy-version/week-09.day-01.restexercises.src.main.java.com.greenfoxacademy.restexercises.controllers.MainRestController.java", "BodyUseAPI": [], "Fixed commit": "0bdac74c4d66fb1efbacaef8b33a9b878a830395", "Url": "https://api.github.com/repos/green-fox-academy/IstvanN", "Date": "2018-10-01T11:39:13Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timeElapsed == 0) { timeElapsed = 1; if (com.ibm.streamsx.objectstorage.internal.sink.OSObjectRegistryListener.TRACE.isLoggable(TraceLevel.TRACE)) { com.ibm.streamsx.objectstorage.internal.sink.OSObjectRegistryListener.TRACE.log(TraceLevel.TRACE, \"increasing the elapsed time from 0 to 1 milliseconds. This may slightly distort metrics\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/564/buggy-version/com.ibm.streamsx.objectstorage.impl.java.src.com.ibm.streamsx.objectstorage.internal.sink.OSObjectRegistryListener.java", "BodyUseAPI": [], "Fixed commit": "31574a8b794cc01106d9d67e81c9c919d7023b76", "Url": "https://api.github.com/repos/IBMStreams/streamsx.objectstorage", "Date": "2018-08-13T12:52:38Z"},
{"Line": "=>501", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (studies != null) { java.util.List<java.lang.String> solrFieldsToInclude = getSolrFieldsFromVariantIncludes(query, java.util.Arrays.asList(studies)); if (org.opencb.commons.utils.ListUtils.isNotEmpty(solrFieldsToInclude)) { for (java.lang.String solrField : solrFieldsToInclude) { solrQuery.addField(solrField); } } }else { solrQuery.addField(\"fileInfo_*\"); solrQuery.addField(\"sampleFormat_*\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/708/buggy-version/opencga-storage.opencga-storage-core.src.main.java.org.opencb.opencga.storage.core.variant.search.solr.SolrQueryParser.java", "BodyUseAPI": ["java.util.Arrays.asList(java.lang.String[])", "org.opencb.opencga.storage.core.variant.search.solr.SolrQueryParser.getSolrFieldsFromVariantIncludes(org.opencb.commons.datastore.core.Query,java.util.List<java.lang.String>)"], "Fixed commit": "543db6db70120bd7878863795c23bb36b88e4535", "Url": "https://api.github.com/repos/opencb/opencga", "Date": "2018-08-08T12:01:51Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (engineInfoService.clientPayExist(processId)) { return \"error\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6516/buggy-version/src.main.java.bpmnproject.bpmn.api.RepairController.java", "BodyUseAPI": [], "Fixed commit": "473bead512b526d62a7879cfc63bf72e202fb4c9", "Url": "https://api.github.com/repos/weeia-bpmn/bpmn", "Date": "2018-06-11T22:19:28Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["FileManager.readFile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (res.accessViolation) errorHandler.sendAccessViolationErrorPacket(java.lang.String.format(\"read access denied to file: %s\", fileName), serverAddress, serverPort); else if (res.fileNotFound) errorHandler.sendFileNotFoundErrorPacket(java.lang.String.format(\"file not found: %s\", fileName), serverAddress, serverPort);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4761/buggy-version/SYSC3303_Project.SYSC3303_Project.src.Client.java", "BodyUseAPI": [], "Fixed commit": "7224071a15e097334c56bc529127ee8e094c067c", "Url": "https://api.github.com/repos/saijan95/SYSC3303-Group-8", "Date": "2018-07-24T17:05:59Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playerNames.size()) > 1) { java.lang.System.out.print(\"Now be a good sport and let the AI finish...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/1098/buggy-version/src.commandline.ViewHumanBooted.java", "BodyUseAPI": [], "Fixed commit": "016b9cbe9c2ff934597fd473c91f5dd6a3bbf324", "Url": "https://api.github.com/repos/2320989B/top-trumps", "Date": "2018-01-27T15:18:55Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nums[m]) > (nums[hi])) lo = m + 1; else { hi = m; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2460/buggy-version/src.com.company.BinarySearch.java", "BodyUseAPI": [], "Fixed commit": "f74a8269e33b6ba2f84ee0935d8fcb8a15c2696c", "Url": "https://api.github.com/repos/raof01/Prep", "Date": "2018-04-16T12:54:53Z"},
{"Line": "=>583", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.setWritable(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!success) { org.wso2.apimgt.gateway.cli.utils.GatewayCmdUtils.logger.debug(\"Setting write permission failed for {}\", destinationFolder.getAbsolutePath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2572/buggy-version/components.micro-gateway-cli.src.main.java.org.wso2.apimgt.gateway.cli.utils.GatewayCmdUtils.java", "BodyUseAPI": [], "Fixed commit": "449e3eb6e5794c3f92c43330e19b3d48fd6cb9c3", "Url": "https://api.github.com/repos/tmkasun/product-microgateway", "Date": "2018-06-29T06:09:57Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((count.getValue()) > (occurrencesThreshold)) { problematicSubsystems.add(((((count.getKey()) + \" \") + (count.getValue())) + \" time(s)\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5526/buggy-version/src.main.java.rcms.utilities.daqexpert.reasoning.logic.failures.fixingSoftErrors.ContinouslySoftError.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)", "java.util.Map.Entry<java.lang.String, java.lang.Integer>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.Integer>.getKey()"], "Fixed commit": "f6ae2dbf0628c663fd794ad2913e87d0ec69a598", "Url": "https://api.github.com/repos/cmsdaq/DAQExpert", "Date": "2018-05-07T14:53:33Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.app.Activity.getIntent()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (intent.hasExtra(\"notification\")) { bundle = intent.getBundleExtra(\"notification\"); java.lang.String bundleString = mJsDelivery.convertJSON(bundle); params.putString(\"dataJSON\", bundleString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8950/buggy-version/android.src.main.java.com.dieam.reactnativepushnotification.modules.RNPushNotification.java", "BodyUseAPI": ["android.content.Intent.getBundleExtra(java.lang.String)"], "Fixed commit": "39f24631105fb46ebf30831c41b38309930502cf", "Url": "https://api.github.com/repos/surialabs/react-native-push-notification", "Date": "2018-07-05T05:13:21Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.gigaspaces.lrmi.LRMIInvocationContext.getEndpointLogicalVersion().greaterOrEquals(PlatformLogicalVersion.v14_0_0))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2947/buggy-version/xap-core.xap-datagrid.src.main.java.com.gigaspaces.internal.cluster.node.impl.packets.BatchReplicatedDataPacket.java", "BodyUseAPI": [], "Fixed commit": "d9d043854df938349c0534bf082230892d9d9de8", "Url": "https://api.github.com/repos/xap/xap", "Date": "2018-09-04T03:27:21Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((file.isHidden()) || (!(file.exists()))) { java.io.File resourcesDirectory = new java.io.File(((new java.io.File(com.blade.mvc.Const.class.getResource(\"/\").getPath()).getParent()) + \"/resources\")); if (resourcesDirectory.isDirectory()) { file = new java.io.File((((resourcesDirectory.getPath()) + \"/resources/\") + (uri.substring(1)))); if ((file.isHidden()) || (!(file.exists()))) { log.warn(\"Not Found\\t{}\", uri); throw new com.blade.exception.NotFoundException(uri); } }else { log.warn(\"Not Found\\t{}\", uri); throw new com.blade.exception.NotFoundException(uri); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5747/buggy-version/src.main.java.com.blade.server.netty.StaticFileHandler.java", "BodyUseAPI": [], "Fixed commit": "ddc24798109a9e013ff562f492bbcbfcd8060def", "Url": "https://api.github.com/repos/ccqy66/blade", "Date": "2018-03-09T05:57:58Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((set.size()) > 0) { java.lang.Integer[] obj = set.toArray(new java.lang.Integer[set.size()]); return obj[((int) ((java.lang.Math.random()) * (obj.length)))]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6788/buggy-version/src.main.java.ink.lichen.leecode.medium.RandomizedSet.java", "BodyUseAPI": ["java.util.Set<java.lang.Integer>.toArray(java.lang.Integer[])", "java.util.Set<java.lang.Integer>.size()"], "Fixed commit": "119a232c586fc59151ebf3082c2cf7ea402b3d7c", "Url": "https://api.github.com/repos/lllichen/leecode", "Date": "2018-10-30T10:11:04Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (m_jName.getText().isEmpty()) { m_jTitle.setText(uk.chromis.pos.forms.AppLocal.getIntString(\"label.recordnew\")); }else { m_jTitle.setText(m_jName.getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8392/buggy-version/src-pos.uk.chromis.pos.inventory.ProductsEditor.java", "BodyUseAPI": ["javax.swing.JLabel.setText(java.lang.String)", "javax.swing.JTextField.getText()"], "Fixed commit": "2bab24b7de452405953ba7bfa8dc5239f86cec9f", "Url": "https://api.github.com/repos/Hedydd/ChromisPOS", "Date": "2018-04-14T16:20:06Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.stream.Stream<java.lang.Double>.reduce(java.util.function.BinaryOperator<java.lang.Double>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(ratingOP.isPresent())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5187/buggy-version/src.main.java.org.corrige.ai.models.review.MinimalReview.java", "BodyUseAPI": [], "Fixed commit": "4ff5596088bb4b5ff88f0627f7815767368d9155", "Url": "https://api.github.com/repos/corrigeai/corrigeai-api", "Date": "2018-09-23T13:42:58Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((request.getRequest().get(JsonKey.SKILLS)) == null) { throw new org.sunbird.common.exception.ProjectCommonException(ResponseCode.mandatoryParamsMissing.getErrorCode(), ResponseCode.mandatoryParamsMissing.getErrorMessage(), ResponseCode.CLIENT_ERROR.getResponseCode(), org.sunbird.common.models.util.JsonKey.SKILLS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4632/buggy-version/service.app.controllers.skills.validator.UserSkillRequestValidator.java", "BodyUseAPI": [], "Fixed commit": "61bf7e0dc0b0971996379a0e9335d21ac543b051", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-service", "Date": "2018-08-20T07:18:30Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vel.lengthSquared()) > 0) vel.normalize();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3374/buggy-version/src.main.java.vision.Vision.java", "BodyUseAPI": ["org.joml.Vector2f.normalize()"], "Fixed commit": "81d6b62ef3103d7de2e91cdf07d8ee3de4c6fa76", "Url": "https://api.github.com/repos/Suduki/Foxibar", "Date": "2018-10-03T16:21:39Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Float.isNaN(a)) { java.lang.System.err.println(\"Trying to wrap a NaN pos!!!\"); a = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3374/buggy-version/src.main.java.world.World.java", "BodyUseAPI": [], "Fixed commit": "81d6b62ef3103d7de2e91cdf07d8ee3de4c6fa76", "Url": "https://api.github.com/repos/Suduki/Foxibar", "Date": "2018-10-03T16:21:39Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.oracle.app.parser.ir.GoTruffle.LexicalScope.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (frameSlot == null) { frameSlot = frame.findOrAddFrameSlot(name); scope.put(name, frameSlot); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5719/buggy-version/golang.src.main.java.com.oracle.app.parser.ir.GoWriteVisitor.java", "BodyUseAPI": [], "Fixed commit": "1ce72e330ff57f29e8caffea12ca6fc4fdff2eb9", "Url": "https://api.github.com/repos/PDZaninov/GoLang-Compiler", "Date": "2018-05-23T06:18:21Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clientQueueList.size()) == 1) { snapShots.get(iteration).setCompletedStatus(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8770/buggy-version/src.Controller.java", "BodyUseAPI": [], "Fixed commit": "5e4467d2cc39ba126af43d212d0f8fcb767d2423", "Url": "https://api.github.com/repos/mattroberts1/AOSProject1", "Date": "2018-07-03T05:49:47Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.constructor) == null) { try { this.constructor = this.managedClass.getConstructor(((java.lang.Class<?>[]) (null))); } catch (java.lang.NoSuchMethodException e) { throw new java.lang.IllegalStateException(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2288/buggy-version/dev.com.ibm.ws.managedobject.src.com.ibm.ws.managedobject.internal.ManagedObjectFactoryImpl.java", "BodyUseAPI": [], "Fixed commit": "6bb9a35e59552c49d45d0928217b748885033670", "Url": "https://api.github.com/repos/tevans78/open-liberty", "Date": "2018-06-05T12:36:21Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((displaySymbol) == null) { return code; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5099/buggy-version/app.src.main.java.org.mifos.mobilebanking.models.client.Currency.java", "BodyUseAPI": [], "Fixed commit": "92ebc7107d7327f381e8612f103b4b88aefdddba", "Url": "https://api.github.com/repos/openMF/mifos-mobile", "Date": "2018-02-16T20:17:44Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((y.length()) == 1) y = \"0\" + y;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7959/buggy-version/src.main.java.eu.maciejfijalkowski.Generator.Kont.Bankowych2.models.FinalBankAcount.java", "BodyUseAPI": [], "Fixed commit": "741bc2c3b0c92a97a228824bf9667853b0ff8ced", "Url": "https://api.github.com/repos/mf81/Generator_2", "Date": "2018-01-25T08:11:19Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (jsonValue == null) { jsonValue = new java.util.HashMap<>(); entityJson.put(attributeName, jsonValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2115/buggy-version/YadaWeb.src.main.java.net.yadaframework.persistence.YadaDataTableDao.java", "BodyUseAPI": [], "Fixed commit": "5a637b700e1f6f844a8173913c5c14a00a1045cf", "Url": "https://api.github.com/repos/xtianus/yadaframework", "Date": "2018-09-26T20:41:01Z"},
{"Line": "=>984", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (input != null) { if (!(input.startsWith(\"/\"))) { input = \"/\" + input; } if ((input.startsWith(contextRoot)) && ((input.charAt(contextRoot.length())) == '/')) { output = input.substring(contextRoot.length()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8035/buggy-version/dev.com.ibm.ws.security.javaeesec.cdi.src.com.ibm.ws.security.javaeesec.cdi.extensions.JavaEESecCDIExtension.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "cf4e093c4e97571996a52247fc9265043140e067", "Url": "https://api.github.com/repos/teddyjtorres/open-liberty", "Date": "2018-01-30T19:44:57Z"},
{"Line": "=>944", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (errorURL != null) { props.put(JavaEESecConstants.LOGIN_TO_CONTINUE_ERRORPAGE, errorURL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8035/buggy-version/dev.com.ibm.ws.security.javaeesec.cdi.src.com.ibm.ws.security.javaeesec.cdi.extensions.JavaEESecCDIExtension.java", "BodyUseAPI": ["java.util.Properties.put(JavaEESecConstants.LOGIN_TO_CONTINUE_ERRORPAGE,java.lang.String)"], "Fixed commit": "cf4e093c4e97571996a52247fc9265043140e067", "Url": "https://api.github.com/repos/teddyjtorres/open-liberty", "Date": "2018-01-30T19:44:57Z"},
{"Line": "=>949", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (contextRoot != null) { props.put(JavaEESecConstants.LOGIN_TO_CONTINUE_LOGIN_FORM_CONTEXT_ROOT, contextRoot); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8035/buggy-version/dev.com.ibm.ws.security.javaeesec.cdi.src.com.ibm.ws.security.javaeesec.cdi.extensions.JavaEESecCDIExtension.java", "BodyUseAPI": ["java.util.Properties.put(JavaEESecConstants.LOGIN_TO_CONTINUE_LOGIN_FORM_CONTEXT_ROOT,java.lang.String)"], "Fixed commit": "cf4e093c4e97571996a52247fc9265043140e067", "Url": "https://api.github.com/repos/teddyjtorres/open-liberty", "Date": "2018-01-30T19:44:57Z"},
{"Line": "=>941", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (loginURL != null) { props.put(JavaEESecConstants.LOGIN_TO_CONTINUE_LOGINPAGE, loginURL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8035/buggy-version/dev.com.ibm.ws.security.javaeesec.cdi.src.com.ibm.ws.security.javaeesec.cdi.extensions.JavaEESecCDIExtension.java", "BodyUseAPI": ["java.util.Properties.put(JavaEESecConstants.LOGIN_TO_CONTINUE_LOGINPAGE,java.lang.String)"], "Fixed commit": "cf4e093c4e97571996a52247fc9265043140e067", "Url": "https://api.github.com/repos/teddyjtorres/open-liberty", "Date": "2018-01-30T19:44:57Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.O)) { notification = new android.app.Notification.Builder(getApplicationContext(), \"\").build(); }else { notification = new android.app.Notification(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8248/buggy-version/app.src.main.java.com.alex.miet.mobile.schedule_widget.ScheduleUpdateService.java", "BodyUseAPI": [], "Fixed commit": "d0d72dd8ca6d8b57426d323bf62d950a2a4554ca", "Url": "https://api.github.com/repos/HeyAlex/miet-schedule", "Date": "2018-05-23T06:47:56Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Jowil.Statistics.getSpecificQuestionChoices(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (Jowil.Utils.checkListContainArabic(questionChoices)) addedClass = \"arabic-font\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/435/buggy-version/src.main.java.Jowil.Reports.Report2.java", "BodyUseAPI": [], "Fixed commit": "2d058ae0a8f05e66e5da1c15ba2b8474e4c55321", "Url": "https://api.github.com/repos/youssefhossam95/Jowil-Stats", "Date": "2018-10-28T18:57:30Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (itf) { mv.visitMethodInsn(kilim.analysis.INVOKEINTERFACE, interfaceName, methodName, fiberDesc, true); }else { mv.visitMethodInsn(kilim.analysis.INVOKEVIRTUAL, interfaceName, methodName, fiberDesc, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6459/buggy-version/src.kilim.analysis.SAMweaver.java", "BodyUseAPI": [], "Fixed commit": "728372f095292bdc3ffe154179d71e8042816d68", "Url": "https://api.github.com/repos/nqzero/kilim", "Date": "2018-09-27T09:08:16Z"},
{"Line": "=>1958", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (subject instanceof com.ge.research.sadl.sADL.Declaration) { com.ge.research.sadl.sADL.SadlTypeReference str = ((com.ge.research.sadl.sADL.Declaration) (subject)).getType(); if (str instanceof com.ge.research.sadl.sADL.SadlSimpleTypeReference) { java.lang.String className = declarationExtensions.getConceptUri(((com.ge.research.sadl.sADL.SadlSimpleTypeReference) (str)).getType()); addEffectiveRangeUnit(className, predicateType); } }else if (subject instanceof com.ge.research.sadl.sADL.ElementInList) { com.ge.research.sadl.jena.JenaBasedSadlModelValidator.TypeCheckInfo tci = getType(((com.ge.research.sadl.sADL.ElementInList) (subject))); addEffectiveRangeByTypeCheckInfo(predicateType, tci); }else if (subject instanceof com.ge.research.sadl.sADL.SubjHasProp) { com.ge.research.sadl.jena.JenaBasedSadlModelValidator.TypeCheckInfo tci; tci = getType(((com.ge.research.sadl.sADL.SubjHasProp) (subject)).getLeft()); addEffectiveRangeByTypeCheckInfo(predicateType, tci); }else { throw new com.ge.research.sadl.reasoner.InvalidNameException(((\"addEffectiveRange given a subject of type '\" + (subject.getClass().getCanonicalName())) + \"', not yet handled.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3642/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.JenaBasedSadlModelValidator.java", "BodyUseAPI": ["subject.getClass().getCanonicalName()", "com.ge.research.sadl.sADL.Expression.getClass()"], "Fixed commit": "89a1727e0c76d6d5fe90e41d085d35261803f7bf", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2018-02-19T21:02:08Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mainModel) == null) { parent.getTaskBoardModel().addProjects(projectModel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8557/buggy-version/CreateEditProjectDialog.java", "BodyUseAPI": [], "Fixed commit": "99934ba949dc5e27f1f22ee1c73130fb219886ba", "Url": "https://api.github.com/repos/slivermasterz/taskScheduler", "Date": "2018-05-03T19:52:41Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (name.equals(receipientName)) { javax.swing.JOptionPane.showMessageDialog(frame, \"You can't choose yourself. Choose another person\"); }else { privateMessages.add(new PrivateMessage(name, receipientName, in, out)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/198/buggy-version/src.Client.java", "BodyUseAPI": ["java.util.ArrayList<PrivateMessage>.add(PrivateMessage)"], "Fixed commit": "d813cc04f20e71f3c4f290f4db9044e959d5a949", "Url": "https://api.github.com/repos/ryanroque17/-NETWORK-Sockets", "Date": "2018-02-24T07:09:27Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTable.getSelectedRow()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (row == (-1)) { javax.swing.JOptionPane.showMessageDialog(frame, \"Choose a recepient first\"); }else { out.println((((\"INITIATEPM \" + (name)) + \",\") + row)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/198/buggy-version/src.Client.java", "BodyUseAPI": ["java.io.PrintWriter.println(java.lang.String)"], "Fixed commit": "d813cc04f20e71f3c4f290f4db9044e959d5a949", "Url": "https://api.github.com/repos/ryanroque17/-NETWORK-Sockets", "Date": "2018-02-24T07:09:27Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (report.isAuxPioneer()) { setTextField((\"remarksForMonth\" + (report.getMonth())), (((getLocale(\"auxPioneerAbbr\")) + \"; \") + (report.getRemarks()))); }else { setTextField((\"remarksForMonth\" + (report.getMonth())), report.getRemarks()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9233/buggy-version/src.main.java.org.arvat.crmi.service.PublisherCardService.java", "BodyUseAPI": ["org.arvat.crmi.model.Report.getRemarks()", "org.arvat.crmi.model.Report.getMonth()", "org.arvat.crmi.service.PublisherCardService.setTextField((\"remarksForMonth\" + (report.getMonth())),(((getLocale(\"auxPioneerAbbr\")) + \"; \") + (report.getRemarks())))", "org.arvat.crmi.model.Report.getMonth()", "org.arvat.crmi.model.Report.getRemarks()", "org.arvat.crmi.service.PublisherCardService.setTextField((\"remarksForMonth\" + (report.getMonth())),report.getRemarks())"], "Fixed commit": "080adcac8fb3ce32354c32b6aaed390c58b7b0a6", "Url": "https://api.github.com/repos/arvat/crmi", "Date": "2018-10-17T12:52:28Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (endpointMetric != null) { if (endpointMetric != (socketMetric.getEndpointMetric())) { socketMetric.setEndpointMetric(endpointMetric); } endpointMetric.onConnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2571/buggy-version/foundations.foundation-vertx.src.main.java.org.apache.servicecomb.foundation.vertx.metrics.DefaultHttpClientMetrics.java", "BodyUseAPI": ["org.apache.servicecomb.foundation.vertx.metrics.metric.DefaultClientEndpointMetric.onConnect()", "org.apache.servicecomb.foundation.vertx.metrics.metric.DefaultHttpSocketMetric.setEndpointMetric(org.apache.servicecomb.foundation.vertx.metrics.metric.DefaultClientEndpointMetric)"], "Fixed commit": "ec96894c803b76801d69a5386422c07b3d74e47f", "Url": "https://api.github.com/repos/heyile/incubator-servicecomb-java-chassis", "Date": "2018-10-10T09:39:56Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.uci.rest.db.DatabaseUtils.retrieveQueryResults(java.sql.Connection,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (resultSet != null) { try { while (resultSet.next()) { com.uci.rest.model.Plushie product = new com.uci.rest.model.Plushie(); product.setPlushie_id(resultSet.getInt(\"plushie_id\")); product.setName(resultSet.getString(\"name\")); product.setDescription(resultSet.getString(\"description\")); product.setAbout(resultSet.getString(\"about\")); product.setPrice(resultSet.getInt(\"price\")); product.setMaterial(resultSet.getString(\"material\")); product.setIn_stock(resultSet.getString(\"in_stock\")); product.setNum_stock(resultSet.getInt(\"num_stock\")); product.setMade_in(resultSet.getString(\"made_in\")); products.add(product); } } catch (java.sql.SQLException e) { e.printStackTrace(); } finally { try { connection.close(); } catch (java.sql.SQLException e) { e.printStackTrace(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7696/buggy-version/inf124hw4.src.main.java.com.uci.rest.service.OrderService.java", "BodyUseAPI": ["java.sql.ResultSet.getString(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "java.sql.ResultSet.getInt(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "com.uci.rest.model.Plushie.setName(java.lang.String)", "com.uci.rest.model.Plushie.setMaterial(java.lang.String)", "java.sql.ResultSet.next()", "java.sql.ResultSet.getInt(java.lang.String)", "com.uci.rest.model.Plushie.setDescription(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "java.sql.ResultSet.getInt(java.lang.String)", "com.uci.rest.model.Plushie.setAbout(java.lang.String)", "com.uci.rest.model.Plushie.setPlushie_id(int)", "com.uci.rest.model.Plushie.setNum_stock(int)", "java.sql.ResultSet.getString(java.lang.String)", "com.uci.rest.model.Plushie.setIn_stock(java.lang.String)", "com.uci.rest.model.Plushie.setPrice(int)", "com.uci.rest.model.Plushie.setMade_in(java.lang.String)"], "Fixed commit": "07cce18a71a25aed5fa6fd8c99b642fa79d62806", "Url": "https://api.github.com/repos/fongkayen/inf124pr4", "Date": "2018-06-04T22:03:35Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.uci.rest.db.DatabaseUtils.retrieveQueryResults(java.sql.Connection,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (resultSet != null) { try { while (resultSet.next()) { com.uci.rest.model.Plushie product = new com.uci.rest.model.Plushie(); product.setPlushie_id(resultSet.getInt(\"plushie_id\")); product.setName(resultSet.getString(\"name\")); product.setDescription(resultSet.getString(\"description\")); product.setAbout(resultSet.getString(\"about\")); product.setPrice(resultSet.getInt(\"price\")); product.setMaterial(resultSet.getString(\"material\")); product.setIn_stock(resultSet.getString(\"in_stock\")); product.setNum_stock(resultSet.getInt(\"num_stock\")); product.setMade_in(resultSet.getString(\"made_in\")); return product; } } catch (java.sql.SQLException e) { e.printStackTrace(); } finally { try { connection.close(); } catch (java.sql.SQLException e) { e.printStackTrace(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7696/buggy-version/inf124hw4.src.main.java.com.uci.rest.service.OrderService.java", "BodyUseAPI": ["com.uci.rest.model.Plushie.setMaterial(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "com.uci.rest.model.Plushie.setDescription(java.lang.String)", "java.sql.ResultSet.getInt(java.lang.String)", "com.uci.rest.model.Plushie.setName(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "com.uci.rest.model.Plushie.setPrice(int)", "com.uci.rest.model.Plushie.setAbout(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "java.sql.ResultSet.getInt(java.lang.String)", "java.sql.ResultSet.getInt(java.lang.String)", "com.uci.rest.model.Plushie.setPlushie_id(int)", "java.sql.ResultSet.getString(java.lang.String)", "com.uci.rest.model.Plushie.setNum_stock(int)", "com.uci.rest.model.Plushie.setMade_in(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "java.sql.ResultSet.next()", "com.uci.rest.model.Plushie.setIn_stock(java.lang.String)"], "Fixed commit": "07cce18a71a25aed5fa6fd8c99b642fa79d62806", "Url": "https://api.github.com/repos/fongkayen/inf124pr4", "Date": "2018-06-04T22:03:35Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.dy.kata.stringcompare.model.SplitUnit>.size()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((i + 1) < size) { mergedContent = originalUnits.get((i + 1)).content(); mergedLength = originalUnits.get((i + 1)).length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/983/buggy-version/stringcompare.src.main.java.com.dy.kata.stringcompare.analyze.merge.MergeImpl.java", "BodyUseAPI": ["originalUnits.get((i + 1)).length()", "originalUnits.get((i + 1)).content()", "java.util.List<com.dy.kata.stringcompare.model.SplitUnit>.get(int)", "java.util.List<com.dy.kata.stringcompare.model.SplitUnit>.get(int)"], "Fixed commit": "806c6a414f465cbd666989fcec9dedd3b363b392", "Url": "https://api.github.com/repos/oracs/codekata", "Date": "2018-03-17T12:35:06Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Integer.valueOf(binding.wrb04.getText().toString())) > 10) { if (!(validatorClass.EmptyRadioButton(this, binding.wrb05, binding.wrb06e, getString(R.string.wrb05)))) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9686/buggy-version/app.src.main.java.edu.aku.hassannaqvi.wfp_recruit_form.ui.SectionBActivity.java", "BodyUseAPI": ["edu.aku.hassannaqvi.wfp_recruit_form.ui.SectionBActivity.EmptyRadioButton(edu.aku.hassannaqvi.wfp_recruit_form.ui.SectionBActivity,binding.wrb05,binding.wrb06e,getString(R.string.wrb05))"], "Fixed commit": "91032112e7112df3c79e1bd8a01abef87b701250", "Url": "https://api.github.com/repos/AliAzaz/WFP-Phisin-Recruitment-Form", "Date": "2018-05-31T04:55:23Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4149/buggy-version/event.VoidChat.java", "BodyUseAPI": [], "Fixed commit": "69eac8a94a03b6eeddceafee40be12e9bdf573c3", "Url": "https://api.github.com/repos/vossnarrator/TheNarrator", "Date": "2018-05-19T09:23:54Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entry.hasContent()) { return com.linecorp.centraldogma.server.internal.api.DtoConverter.convert(repository, entry.path(), entry.type(), entry.content()); }else { return com.linecorp.centraldogma.server.internal.api.DtoConverter.convert(repository, entry.path(), entry.type()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2865/buggy-version/server.src.main.java.com.linecorp.centraldogma.server.internal.api.DtoConverter.java", "BodyUseAPI": ["com.linecorp.centraldogma.common.Entry<T>.type()", "com.linecorp.centraldogma.server.internal.api.DtoConverter.convert(com.linecorp.centraldogma.server.internal.storage.repository.Repository,entry.path(),entry.type(),entry.content())", "com.linecorp.centraldogma.common.Entry<T>.content()", "com.linecorp.centraldogma.common.Entry<T>.path()", "com.linecorp.centraldogma.common.Entry<T>.path()", "com.linecorp.centraldogma.common.Entry<T>.type()", "com.linecorp.centraldogma.server.internal.api.DtoConverter.convert(com.linecorp.centraldogma.server.internal.storage.repository.Repository,entry.path(),entry.type())"], "Fixed commit": "01b0c195765d1725778137b0a9dd1ba88ea4ca27", "Url": "https://api.github.com/repos/trustin/centraldogma", "Date": "2018-04-04T09:48:11Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.example.project.mobilecapstone.Fragment.MapFragment.corners) != null) && ((com.example.project.mobilecapstone.Fragment.MapFragment.corners.length) == 4)) { first = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7053/buggy-version/app.src.main.java.com.example.project.mobilecapstone.Fragment.MapFragment.java", "BodyUseAPI": [], "Fixed commit": "b4f98bca248cb38f93805639f11fa455a5936321", "Url": "https://api.github.com/repos/hieutn212/CapstoneMobile", "Date": "2018-03-27T19:00:47Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (valueStr.matches(\"[0-9]+\")) { return valueStr; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/15/buggy-version/src.main.java.com.arm.mbed.cloud.sdk.common.listing.filtering.FilterMarshaller.java", "BodyUseAPI": [], "Fixed commit": "f597bed13fc0c7d14319088195f0b8131aa3479c", "Url": "https://api.github.com/repos/ARMmbed/mbed-cloud-sdk-java", "Date": "2018-01-26T19:03:12Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.jiguang.common.connection.CloseableHttpResponse.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (entity != null) { responseContent = org.apache.http.util.EntityUtils.toString(entity, \"utf-8\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6220/buggy-version/src.main.java.cn.jiguang.common.connection.ApacheHttpClient.java", "BodyUseAPI": ["org.apache.http.util.EntityUtils.toString(cn.jiguang.common.connection.HttpEntity,java.lang.String)"], "Fixed commit": "ddad38174513dbfca33089c8d866625ff00c7d26", "Url": "https://api.github.com/repos/jpush/jiguang-java-client-common", "Date": "2018-07-26T08:34:26Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tsD.isSetValue()) { org.metachart.xml.chart.Data cd = new org.metachart.xml.chart.Data(); cd.setRecord(tsD.getRecord()); cd.setY(tsD.getValue()); ds.getData().add(cd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2457/buggy-version/util.src.main.java.org.jeesl.factory.xml.system.util.mc.XmlMcDataSetFactory.java", "BodyUseAPI": ["org.metachart.xml.chart.Data.setY(tsD.getValue())", "org.metachart.xml.chart.Data.getValue()", "org.metachart.xml.chart.Data.getRecord()", "org.metachart.xml.chart.Data.setRecord(tsD.getRecord())"], "Fixed commit": "d31341763fe42833b1550fe54e88e8ea93e682f5", "Url": "https://api.github.com/repos/aht-group/jeesl", "Date": "2018-03-16T14:08:03Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(record.getMilkWeight().isEmpty())) { totalVolume += java.lang.Double.valueOf(record.getMilkWeight()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/956/buggy-version/TransporterApp.app.src.main.java.com.transporterapp.syde.transporterapp.History.HistOverviewMonthly.java", "BodyUseAPI": ["java.lang.Double.valueOf(record.getMilkWeight())", "com.transporterapp.syde.transporterapp.DataStructures.MilkRecord.getMilkWeight()"], "Fixed commit": "8372313da518a6567555e96005634c3468a5e6b7", "Url": "https://api.github.com/repos/ln375/SYDE461-462", "Date": "2018-03-17T19:23:45Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(record.getMilkWeight().isEmpty())) { totalVolume += java.lang.Double.valueOf(record.getMilkWeight()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/956/buggy-version/TransporterApp.app.src.main.java.com.transporterapp.syde.transporterapp.History.HistOverviewDaily.java", "BodyUseAPI": ["java.lang.Double.valueOf(record.getMilkWeight())", "com.transporterapp.syde.transporterapp.DataStructures.MilkRecord.getMilkWeight()"], "Fixed commit": "8372313da518a6567555e96005634c3468a5e6b7", "Url": "https://api.github.com/repos/ln375/SYDE461-462", "Date": "2018-03-17T19:23:45Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["faciItem.getContactInfo().split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((contactArray.length) > 1) && ((contactArray[1].length()) > 0)) { faciPage.setText(contactArray[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3676/buggy-version/app.src.main.java.com.example.owner.petbetter.activities.EditFacilityActivity.java", "BodyUseAPI": ["android.widget.EditText.setText(java.lang.String)"], "Fixed commit": "96d6562d2233e4a54c6dc7ba3648e1a3f6b2d168", "Url": "https://api.github.com/repos/DwardTiro/PetBetter", "Date": "2018-04-16T03:47:36Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["faciItem.getContactInfo().split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((contactArray.length) > 0) && ((contactArray[0].length()) > 0)) { phoneNum.setText(contactArray[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3676/buggy-version/app.src.main.java.com.example.owner.petbetter.activities.EditFacilityActivity.java", "BodyUseAPI": ["android.widget.EditText.setText(java.lang.String)"], "Fixed commit": "96d6562d2233e4a54c6dc7ba3648e1a3f6b2d168", "Url": "https://api.github.com/repos/DwardTiro/PetBetter", "Date": "2018-04-16T03:47:36Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["faciItem.getContactInfo().split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((contactArray.length) > 2) && ((contactArray[2].length()) > 0)) { faciWebsite.setText(contactArray[2]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3676/buggy-version/app.src.main.java.com.example.owner.petbetter.activities.EditFacilityActivity.java", "BodyUseAPI": ["android.widget.EditText.setText(java.lang.String)"], "Fixed commit": "96d6562d2233e4a54c6dc7ba3648e1a3f6b2d168", "Url": "https://api.github.com/repos/DwardTiro/PetBetter", "Date": "2018-04-16T03:47:36Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["faciItem.getContactInfo().split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((contactArray.length) > 3) && ((contactArray[3].length()) > 0)) { faciEmail.setText(contactArray[3]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3676/buggy-version/app.src.main.java.com.example.owner.petbetter.activities.EditFacilityActivity.java", "BodyUseAPI": ["android.widget.EditText.setText(java.lang.String)"], "Fixed commit": "96d6562d2233e4a54c6dc7ba3648e1a3f6b2d168", "Url": "https://api.github.com/repos/DwardTiro/PetBetter", "Date": "2018-04-16T03:47:36Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentVideoId) == null) currentVideoId = edu.tacoma.uw.css.group7.e_time.TimerActivity.DEFAULT_VIDEO;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3638/buggy-version/app.src.main.java.edu.tacoma.uw.css.group7.e_time.TimerActivity.java", "BodyUseAPI": [], "Fixed commit": "8812f4c6e88d348d58fe721675023272a0b9ece1", "Url": "https://api.github.com/repos/dglines/E-Time", "Date": "2018-05-18T21:00:35Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.iot.dsa.dslink.modbus.slave.SlavePointNode.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (parent == null) throw new java.lang.RuntimeException(\"Child SlavePointNode is missing a parent.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9678/buggy-version/src.main.java.org.iot.dsa.dslink.modbus.slave.SlavePointNode.java", "BodyUseAPI": [], "Fixed commit": "d6df2a8be99794b663ca94e6a202885d90babbdd", "Url": "https://api.github.com/repos/iot-dsa-v2/dslink-java-v2-modbus", "Date": "2018-02-02T03:07:56Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((a.isLoyal()) == (b.isLoyal())) { if ((a.getArivalTime()) < (b.getArivalTime())) { return -1; } if ((a.getArivalTime()) == (b.getArivalTime())) { return 0; } return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6799/buggy-version/src.PiorityLine.java", "BodyUseAPI": ["Cart.getArivalTime()", "Cart.getArivalTime()", "Cart.getArivalTime()", "Cart.getArivalTime()"], "Fixed commit": "0c016a71bf1f852c8001f295abeda4f45895e0a4", "Url": "https://api.github.com/repos/linmaogeng/StoreSimulation", "Date": "2018-01-20T04:00:17Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (msg instanceof shared.client.PlayerChangedStateMessage) decoder.msgReceived(((shared.client.PlayerChangedStateMessage) (msg))); else if (msg instanceof shared.client.PlayerMovedToTableInfoMessage) decoder.msgReceived(((shared.client.PlayerMovedToTableInfoMessage) (msg))); else if (msg instanceof shared.client.TurnInfoMessage) decoder.msgReceived(((shared.client.TurnInfoMessage) (msg))); else if (msg instanceof shared.client.WiisInfoMessage) decoder.msgReceived(((shared.client.WiisInfoMessage) (msg))); else if (msg instanceof shared.client.ChooseGameModeMessage) decoder.msgReceived(((shared.client.ChooseGameModeMessage) (msg))); else if (msg instanceof shared.client.GameStateMessage) decoder.msgReceived(((shared.client.GameStateMessage) (msg))); else if (msg instanceof shared.client.HandOutCardsMessage) decoder.msgReceived(((shared.client.HandOutCardsMessage) (msg))); else if (msg instanceof shared.client.LobbyStateMessage) decoder.msgReceived(((shared.client.LobbyStateMessage) (msg)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7358/buggy-version/src.shared.client.ClientMessageDecoder.java", "BodyUseAPI": [], "Fixed commit": "9473cbd54ab22f4a1c8d0ab5a018ce906037f60c", "Url": "https://api.github.com/repos/mcalzaferri/Schieber", "Date": "2018-04-01T18:49:34Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((timeOut) == null) || ((timeOut) < 0)) { return 60 * 24L; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7512/buggy-version/opencron-common.src.main.java.org.opencron.common.job.Request.java", "BodyUseAPI": [], "Fixed commit": "3f075a807bfa21b7d34162457f91d90590da68b1", "Url": "https://api.github.com/repos/wolfboys/JobX-dev", "Date": "2018-03-25T14:08:05Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getJsonBody()) != null) { request.contentType(\"application/json\").send(getJsonBody()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8137/buggy-version/src.main.java.no.cantara.base.command.BaseHttpPostHystrixCommand.java", "BodyUseAPI": [], "Fixed commit": "ebffa412b1bece68f05bd6ed8fb92f8e344237fe", "Url": "https://api.github.com/repos/Cantara/Hystrix-BaseCommands", "Date": "2018-04-13T11:59:40Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xandryex.utils.TextReplacer.replaceRunTextStart(runs.get((currentRun - 1)))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (replacedInPreviousRun) { deleteTextFromRun(runs.get(currentRun)); }else { replaceRunTextStart(runs.get(currentRun)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8334/buggy-version/src.main.java.com.xandryex.utils.TextReplacer.java", "BodyUseAPI": [], "Fixed commit": "7d7944cf6c752a6035a9a98c7a2aed274bb43f03", "Url": "https://api.github.com/repos/deividasstr/docx-word-replacer", "Date": "2018-04-16T06:47:33Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (norm < 0.01) { norm = 1.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8688/buggy-version/src.main.java.io.anserini.util.FeatureVector.java", "BodyUseAPI": [], "Fixed commit": "a0eee9fa366abec9767a8bb92020b27d09e6da0c", "Url": "https://api.github.com/repos/Victor0118/Anserini", "Date": "2018-08-02T17:34:39Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(line.contains(\":\"))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/184/buggy-version/src.main.java.net.brinkervii.jewel.core.frontmatter.FrontMatter.java", "BodyUseAPI": [], "Fixed commit": "bf3bf9c07663041a6f62a3bacf956883e86ed21e", "Url": "https://api.github.com/repos/BrinkerVII/jewel", "Date": "2018-05-11T00:16:03Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.baomidou.mybatisplus.core.toolkit.ArrayUtils.isNotEmpty(page.ascs())) { qw.orderByAsc(page.ascs()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2776/buggy-version/mybatis-plus-core.src.main.java.com.baomidou.mybatisplus.core.toolkit.sql.SqlHelper.java", "BodyUseAPI": ["com.baomidou.mybatisplus.core.conditions.query.QueryWrapper.orderByAsc(page.ascs())", "com.baomidou.mybatisplus.core.metadata.IPage<?>.ascs()"], "Fixed commit": "b0b72f995a824c558ac3779c57c63385bfae3595", "Url": "https://api.github.com/repos/baomidou/mybatis-plus", "Date": "2018-07-13T02:08:43Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.baomidou.mybatisplus.core.toolkit.ArrayUtils.isNotEmpty(page.descs())) { qw.orderByDesc(page.descs()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2776/buggy-version/mybatis-plus-core.src.main.java.com.baomidou.mybatisplus.core.toolkit.sql.SqlHelper.java", "BodyUseAPI": ["com.baomidou.mybatisplus.core.conditions.query.QueryWrapper.orderByDesc(page.descs())", "com.baomidou.mybatisplus.core.metadata.IPage<?>.descs()"], "Fixed commit": "b0b72f995a824c558ac3779c57c63385bfae3595", "Url": "https://api.github.com/repos/baomidou/mybatis-plus", "Date": "2018-07-13T02:08:43Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.baomidou.mybatisplus.core.toolkit.ObjectUtils.isEmpty(page.condition())) { qw.allEq(page.condition()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2776/buggy-version/mybatis-plus-core.src.main.java.com.baomidou.mybatisplus.core.toolkit.sql.SqlHelper.java", "BodyUseAPI": ["com.baomidou.mybatisplus.core.conditions.query.QueryWrapper.allEq(page.condition())", "com.baomidou.mybatisplus.core.metadata.IPage<?>.condition()"], "Fixed commit": "b0b72f995a824c558ac3779c57c63385bfae3595", "Url": "https://api.github.com/repos/baomidou/mybatis-plus", "Date": "2018-07-13T02:08:43Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (internalTimeout == 0L) { internalTimeout--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8326/buggy-version/common.src.main.java.com.tc.util.concurrent.TCFuture.java", "BodyUseAPI": [], "Fixed commit": "97b2bb7f8fd625a14fc94e6173dcf4f5054a65f5", "Url": "https://api.github.com/repos/chaktatha/terracotta-core", "Date": "2018-02-15T06:38:31Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((pl.getConstituentVxF().getVxfref()) != null) && ((pl.getInfrastructure()) != null)) { description.append((((\"\\n Constituent VxF: \" + (pl.getConstituentVxF().getVxfref().getName())) + \" - Infrastructure: \") + (pl.getInfrastructure().getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7866/buggy-version/src.main.java.portal.api.bugzilla.BugzillaClient.java", "BodyUseAPI": ["java.lang.StringBuilder.append((((\"\\n  Constituent VxF: \" + (pl.getConstituentVxF().getVxfref().getName())) + \" - Infrastructure: \") + (pl.getInfrastructure().getName())))", "pl.getConstituentVxF().getVxfref().getName()", "pl.getConstituentVxF().getVxfref()", "portal.api.model.DeploymentDescriptorVxFPlacement.getInfrastructure()", "portal.api.model.DeploymentDescriptorVxFPlacement.getConstituentVxF()", "pl.getInfrastructure().getName()"], "Fixed commit": "afca56755a1ffe2c65404602bd1deda3dc5fe3d1", "Url": "https://api.github.com/repos/5GinFIRE/eu.5ginfire.portal.api", "Date": "2018-08-28T11:12:17Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mc.getImageName().startsWith(\"http\")) build.addParameter(\"artwork\", mc.getImageName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6498/buggy-version/src.main.java.org.magic.api.pictureseditor.impl.MTGDesignPicturesProvider.java", "BodyUseAPI": ["org.apache.http.client.utils.URIBuilder.addParameter(java.lang.String,mc.getImageName())", "org.magic.api.beans.MagicCard.getImageName()"], "Fixed commit": "5d937c27936e4ea8a22ab226c8e2cc3dc4cd4886", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2018-09-02T19:32:53Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tmpLength + (mDownloadTask.getFile().length())) != (this.mTotals)) { return com.just.agentweb.download.Downloader.ERROR_LOAD; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8753/buggy-version/agentweb-download.src.main.java.com.just.agentweb.download.Downloader.java", "BodyUseAPI": [], "Fixed commit": "0bf429e36fc5827351f639e8fcdda66b85aa7a33", "Url": "https://api.github.com/repos/Justson/AgentWeb", "Date": "2018-03-06T14:57:10Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((input.length) > 0) { storage = new double[input.length]; capacity = input.length; numItems = 0; for (double d : input) { sequential_add(d); } }else { storage = new double[6]; capacity = 6; numItems = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5457/buggy-version/Lab05.src.lab05.BinarySearchSet.java", "BodyUseAPI": [], "Fixed commit": "215b60090517b68e149029cf4bcee7ca1f423593", "Url": "https://api.github.com/repos/harryy88/UM_CSC220", "Date": "2018-09-26T02:59:30Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numItems) == 0) { add(newVal, 0); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5457/buggy-version/Lab05.src.lab05.BinarySearchSet.java", "BodyUseAPI": [], "Fixed commit": "215b60090517b68e149029cf4bcee7ca1f423593", "Url": "https://api.github.com/repos/harryy88/UM_CSC220", "Date": "2018-09-26T02:59:30Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getView()) != null) { android.support.design.widget.Snackbar.make(getView(), \"Location not detected. Check that your location is turned on and try again.\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/1401/buggy-version/app.src.main.java.bw.co.josephmpe.handyman_directory.directory.fragments.AutoLocationSearchFragment.java", "BodyUseAPI": [], "Fixed commit": "e48c1b2deb847f6523fdcef1c0e1bf506c21fc41", "Url": "https://api.github.com/repos/jaympe/demo_app", "Date": "2018-08-26T23:42:30Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (objects == null) { showGoogleButtonOnly(); }else if (((objects[0]) != null) && ((objects[1]) != null)) { showWikiDataView(); mWikiButton.setText(((java.lang.CharSequence) (objects[0]))); mLandmarkThumbnail.setImageBitmap(((android.graphics.Bitmap) (objects[1]))); }else if ((objects[1]) != null) { showGoogleButtonWithThumbnail(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7907/buggy-version/app.src.main.java.com.codecool.zibi.landmarker.activities.LandmarkDetailsActivity.java", "BodyUseAPI": ["android.widget.ImageView.setImageBitmap(java.lang.Object)", "android.widget.Button.setText(java.lang.Object)"], "Fixed commit": "51e7190388cd909c7554b1ee5dbf49f7fda1f1a0", "Url": "https://api.github.com/repos/andrasZibar/LandmarkER", "Date": "2018-10-24T20:36:46Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (toAnimate) { if ((this.currentY) < (this.targetY)) { if (((this.currentY) + 10) < (this.targetY)) { this.currentY += 10; }else { this.currentY = this.targetY; } }else if ((this.currentY) > (this.targetY)) { if (((this.currentY) - 10) > (this.targetY)) { this.currentY -= 10; }else { this.currentY = this.targetY; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9077/buggy-version/core.src.com.spacejunk.game.characters.Character.java", "BodyUseAPI": [], "Fixed commit": "160eb0f3431e3db6f7b54f2a38c67b44a7063f35", "Url": "https://api.github.com/repos/SalarUW/SpaceJunk", "Date": "2018-03-21T19:43:50Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.chirpedin.dao.UsersDao.getFavorites(com.chirpedin.dto.UserDto)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(favorites.isEmpty())) { java.util.List<com.chirpedin.dto.UserDto> favoriteDtoList = dao.convertListOfFavDtosToListOfUserDtos(favorites); java.lang.System.out.println((((\"method: dashboardPage \\n favoriteDtoList has size of: \" + (favoriteDtoList.size())) + \"\\n is empty? \") + (favoriteDtoList.isEmpty()))); com.chirpedin.util.ChirpedIn.setPersonalAndMatchFields(user, favoriteDtoList); model.addAttribute(\"favorites\", favoriteDtoList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8048/buggy-version/src.com.chirpedin.controllers.HomeController.java", "BodyUseAPI": ["com.chirpedin.dao.UsersDao.convertListOfFavDtosToListOfUserDtos(java.util.List<com.chirpedin.dto.FavoriteDto>)"], "Fixed commit": "b85e0b34b44ee2f59c33d0cff1a07c011b62f106", "Url": "https://api.github.com/repos/EmanuelPelean/ChirpedIn", "Date": "2018-02-03T17:27:30Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["top.trumeet.mipushframework.MainFragment.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fragmentActivity == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8320/buggy-version/app.src.main.java.top.trumeet.mipushframework.MainFragment.java", "BodyUseAPI": [], "Fixed commit": "cf59e48962551e125d08d5ff2cd1c7ffdfe5aa41", "Url": "https://api.github.com/repos/Trumeet/MiPushFramework", "Date": "2018-07-12T13:08:35Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((salaGUI) != null) salaGUI.quitarCliente(cliente);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9519/buggy-version/ClienteV1.src.com.salas.Sala.java", "BodyUseAPI": [], "Fixed commit": "f45dd8754114da27c4e4c8d05c8953085d19b36c", "Url": "https://api.github.com/repos/gsiles54/Broccoli-Chat", "Date": "2018-07-07T00:30:28Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCoreferenceModelListener()) != null) cModel.addCoreferenceModelListener(getCoreferenceModelListener());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/344/buggy-version/src.main.java.de.unistuttgart.ims.coref.annotator.worker.DocumentModelLoader.java", "BodyUseAPI": [], "Fixed commit": "f764d945ad6ade8690ea66023607b95efd21a2a6", "Url": "https://api.github.com/repos/nilsreiter/CorefAnnotator", "Date": "2018-03-17T18:34:47Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((lines.contains(\"\\n\")) || (lines.contains(\"\\r\"))) || (lines.contains(\"\\r\\n\"))) { for (int i = 0; i < (cbuf.length); i++) { if (firstLine) { output[0] += cbuf[i]; if (((cbuf[i]) == '\\n') || (((cbuf[i]) == '\\r') && ((i == ((cbuf.length) - 1)) || ((cbuf[(i + 1)]) != '\\n')))) { firstLine = false; } }else { output[1] += cbuf[i]; } } }else { output[1] = lines; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9708/buggy-version/Lab01App-build.Lab01App-code.src.main.java.ch.heigvd.res.lab01.impl.Utils.java", "BodyUseAPI": [], "Fixed commit": "d5d810afaca8b65c442642add401300046eee94d", "Url": "https://api.github.com/repos/Pacco1217/Teaching-HEIGVD-RES-2018-Labo-01", "Date": "2018-03-08T08:16:02Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((column == 0) && (table.getShowRowColumn())) return javax.swing.SwingConstants.CENTER;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2839/buggy-version/adams-core.src.main.java.adams.gui.core.spreadsheettable.AbstractCellRenderingCustomizer.java", "BodyUseAPI": [], "Fixed commit": "fe500b3079f5b3dc9c87b7a2c4a7a7a17f2a60cb", "Url": "https://api.github.com/repos/waikato-datamining/adams-base", "Date": "2018-03-18T23:51:36Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(logThread.isAlive())) { logThread.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/953/buggy-version/app.src.main.java.top.easelink.mob.utils.LogCatHelper.java", "BodyUseAPI": ["java.lang.Thread.start()"], "Fixed commit": "7d29540913e3481d72da2706ff846c12f975606b", "Url": "https://api.github.com/repos/fabricezhang/Mob", "Date": "2018-09-25T14:53:20Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.exists()) { file.delete(); android.widget.Toast.makeText(this, \"Agenda zerada com sucesso!\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8517/buggy-version/app.src.main.java.com.developer.bianca.agendaapplication.MainActivity.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "36d61efdbf6f6057c765a40f1231e5c4ac9c6398", "Url": "https://api.github.com/repos/biancagotaski/AgendaApplication", "Date": "2018-08-16T21:48:51Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.EnumSet.of(ruter.getSeverity(), yr.getSeverity()).contains(Severity.HIGH)) { return com.github.tingstad.weather.service.api.Status.Severity.HIGH; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9551/buggy-version/domain.src.main.java.com.github.tingstad.weather.domain.Weather.java", "BodyUseAPI": [], "Fixed commit": "b370053c60ed16062fbca17c424ba198ddc30bb8", "Url": "https://api.github.com/repos/tingstad/weather", "Date": "2018-04-13T10:43:23Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(c.getPackage().getName().contains(\"java.\"))) && (!(c.getPackage().getName().contains(\"javax.\")))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9805/buggy-version/src.OpenDocumentation.java", "BodyUseAPI": [], "Fixed commit": "283a2ffdf07cfa77a794d5b1356b24816d8081b7", "Url": "https://api.github.com/repos/EgoRedMC/DocSearchPlugin", "Date": "2018-05-11T00:06:48Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (task instanceof za.org.grassroot.core.domain.task.Todo) { za.org.grassroot.core.domain.task.Todo todo = ((za.org.grassroot.core.domain.task.Todo) (task)); this.todoType = todo.getType(); }else this.todoType = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5773/buggy-version/grassroot-core.src.main.java.za.org.grassroot.core.dto.task.TaskFullDTO.java", "BodyUseAPI": [], "Fixed commit": "0159f0964b945d05ab35b16179fb5ff8f4ea81fc", "Url": "https://api.github.com/repos/grassrootza/grassroot-platform", "Date": "2018-01-10T21:33:37Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (classAnnotation == null) { return java.util.Optional.empty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7571/buggy-version/core.modules.cloud.src.main.java.org.onetwo.cloud.feign.EnhanceSpringMvcContract.java", "BodyUseAPI": [], "Fixed commit": "59131c8c313c8f7b729cb826e9806551f6389b9f", "Url": "https://api.github.com/repos/wayshall/onetwo", "Date": "2018-01-04T05:21:16Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event.content.equals(\"\")) { android.util.Log.i(\"gh_feed\", (\"no comment!! type: \" + (event.type))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4645/buggy-version/YokoMasa.app.src.main.java.com.example.masato.githubfeed.model.event.EventMapper.java", "BodyUseAPI": ["android.util.Log.i(java.lang.String,(\"no comment!! type: \" + (event.type)))"], "Fixed commit": "305ba87fe9fed1e80670c4ea473bb471c0f32856", "Url": "https://api.github.com/repos/YokoMasa/git-push-hackathon", "Date": "2018-02-15T11:05:27Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.Double>.get(message.getDestination())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (numberDestinationDistribution != null) { numberDestinationDistribution = numberDestinationDistribution + 1; this.destinationDistribution.put(message.getDestination(), numberDestinationDistribution); }else { this.destinationDistribution.put(message.getDestination(), new java.lang.Double(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4773/buggy-version/analyzer.src.main.java.model.statistics.StatisticalNode.java", "BodyUseAPI": [], "Fixed commit": "7134c4e2494084319ea7e8a649cf330197642aa1", "Url": "https://api.github.com/repos/maze36/AISAnalyzer", "Date": "2018-01-31T10:23:00Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((goods.get(good)) == null) { goods.put(good, 1); }else { goods.put(good, ((goods.get(good)) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9824/buggy-version/src.main.java.ru.xaero.javacore.entity.windows.Order.java", "BodyUseAPI": ["java.util.Map<ru.xaero.javacore.entity.windows.Good, java.lang.Integer>.put(ru.xaero.javacore.entity.windows.Good,int)", "java.util.Map<ru.xaero.javacore.entity.windows.Good, java.lang.Integer>.put(ru.xaero.javacore.entity.windows.Good,((goods.get(good)) + 1))", "java.util.Map<ru.xaero.javacore.entity.windows.Good, java.lang.Integer>.get(ru.xaero.javacore.entity.windows.Good)"], "Fixed commit": "bb97d00d525138ca3a8d64164c963de578f09fd2", "Url": "https://api.github.com/repos/xaero31/ShopProject", "Date": "2018-08-03T06:15:30Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.uci.qa.tasker.util.ParserUtils.relativeFind(data.getDirectory(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.nio.file.Files.isSameFile(file.toPath(), data.getFile().toPath())) { throw new edu.uci.qa.tasker.parser.InvalidSyntaxException(\"A library file cannot import itself!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/1085/buggy-version/src.main.java.edu.uci.qa.tasker.parser.ImportLine.java", "BodyUseAPI": [], "Fixed commit": "8011f38fa0908fd981ef7f21ba0c51147a847281", "Url": "https://api.github.com/repos/OITQA/Tasker", "Date": "2018-09-13T22:37:46Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((ac.getType()) == 1) || ((ac.getType()) == 4)) { com.zes.squad.gmh.entity.po.CustomerActivityContentPo cacPo = com.zes.squad.gmh.common.converter.CommonConverter.map(ac, com.zes.squad.gmh.entity.po.CustomerActivityContentPo.class); cacPo.setCustomerActivityId(caPo.getId()); customerActivityContentMapper.insert(cacPo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/1783/buggy-version/gmh-service.src.main.java.com.zes.squad.gmh.service.impl.ConsumeRecordServiceImpl.java", "BodyUseAPI": ["com.zes.squad.gmh.common.converter.CommonConverter.map(com.zes.squad.gmh.entity.po.ActivityContentPo,java.lang.Class)"], "Fixed commit": "dd7a9b0e0e78e17fa87de2b103828eee1c754215", "Url": "https://api.github.com/repos/ZES-BJTU/gmh", "Date": "2018-04-15T05:41:57Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ac.getType()) == 2) { com.zes.squad.gmh.entity.po.MemberCardPo memberCardPo = memberCardMapper.selectById(ac.getRelatedId()); com.zes.squad.gmh.entity.po.CustomerMemberCardPo customerMemberCardPo = new com.zes.squad.gmh.entity.po.CustomerMemberCardPo(); if (customerPo == null) throw new com.zes.squad.gmh.common.exception.GmhException(com.zes.squad.gmh.common.exception.ErrorCodeEnum.BUSINESS_EXCEPTION_OPERATION_NOT_ALLOWED, \"\u8bf7\u5148\u5efa\u7acb\u5ba2\u6237\u4fe1\u606f\"); customerMemberCardPo.setCustomerId(customerPo.getId()); customerMemberCardPo.setIsReturned(0); customerMemberCardPo.setIsTurned(0); customerMemberCardPo.setIsValid(1); customerMemberCardPo.setStoreId(com.zes.squad.gmh.context.ThreadContext.getUserStoreId()); customerMemberCardPo.setUniqueIdentifier(tradeSerialNumber); customerMemberCardPo.setMemberCardId(memberCardPo.getId()); customerMemberCardPo.setProductDiscount(memberCardPo.getProductDiscount()); customerMemberCardPo.setProjectDiscount(memberCardPo.getProjectDiscount()); customerMemberCardPo.setRemainingMoney(memberCardPo.getAmount()); customerMemberCardMapper.insert(customerMemberCardPo); com.zes.squad.gmh.entity.po.CustomerMemberCardContentPo customerMemberCardContentPo = new com.zes.squad.gmh.entity.po.CustomerMemberCardContentPo(); customerMemberCardContentPo.setCustomerMemberCardId(customerMemberCardPo.getId()); if ((memberCardPo.getType()) != 2) { customerMemberCardContentPo.setRelatedId(memberCardPo.getProjectId()); customerMemberCardContentPo.setAmount(memberCardPo.getTimes()); customerMemberCardContentMapper.insert(customerMemberCardContentPo); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/1783/buggy-version/gmh-service.src.main.java.com.zes.squad.gmh.service.impl.ConsumeRecordServiceImpl.java", "BodyUseAPI": ["com.zes.squad.gmh.mapper.MemberCardMapper.selectById(ac.getRelatedId())", "com.zes.squad.gmh.entity.po.ActivityContentPo.getRelatedId()"], "Fixed commit": "dd7a9b0e0e78e17fa87de2b103828eee1c754215", "Url": "https://api.github.com/repos/ZES-BJTU/gmh", "Date": "2018-04-15T05:41:57Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.navercorp.pinpoint.common.util.CodeSourceUtils.getCodeLocation(java.lang.Class<? extends java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (pluginURL == null) { throw new java.lang.IllegalStateException((\"pluginURL not found plugin:\" + (plugin.getClass()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/1914/buggy-version/commons.src.main.java.com.navercorp.pinpoint.common.plugin.ServerPluginLoader.java", "BodyUseAPI": [], "Fixed commit": "d5c6bed9cf2d1fd3ca1221be49337e1fd85d9b5b", "Url": "https://api.github.com/repos/minwoo-jung/pinpoint", "Date": "2018-07-03T09:07:10Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.navercorp.pinpoint.thrift.util.SerializationUtils.deserialize(byte[],com.navercorp.pinpoint.thrift.io.HeaderTBaseDeserializer,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (deserialize == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/1914/buggy-version/profiler.src.main.java.com.navercorp.pinpoint.profiler.sender.AbstractDataSender.java", "BodyUseAPI": [], "Fixed commit": "d5c6bed9cf2d1fd3ca1221be49337e1fd85d9b5b", "Url": "https://api.github.com/repos/minwoo-jung/pinpoint", "Date": "2018-07-03T09:07:10Z"},
{"Line": "=>529", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((wsURL.getRef()) != null) { path = (path + \"#\") + (wsURL.getRef()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5999/buggy-version/src.main.java.eu.luminis.websocket.WebSocketClient.java", "BodyUseAPI": ["java.net.URL.getRef()"], "Fixed commit": "1f58539d84a8f248923c98c5ced1d0ea3217c7e7", "Url": "https://api.github.com/repos/ptrd/jmeter-websocket-samplers", "Date": "2018-02-11T21:30:05Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((sort.getDirection()) == (SortBy.Direction.ASC)) && ((sort.getKey()) == (com.zimbra.cs.index.SortBy.Key.UNREAD))) { orderBy.append(\" DESC\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5208/buggy-version/store.src.java.com.zimbra.cs.db.DbSearch.java", "BodyUseAPI": [], "Fixed commit": "919bf852db02c453a214144e5ae9d2c8552a833c", "Url": "https://api.github.com/repos/Zimbra/zm-mailbox", "Date": "2018-07-23T03:07:45Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Document.select(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((first.size()) < 2) { return java.util.Optional.empty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3992/buggy-version/src.main.java.sk.hudak.prco.eshop.AlzaProductParser.java", "BodyUseAPI": [], "Fixed commit": "205e7a2932dbd6119b573186f4be9d62fcb32c1b", "Url": "https://api.github.com/repos/jano333/prco", "Date": "2018-09-03T13:24:27Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.world.isRemote)) { this.world.setEntityState(this, ((byte) (3))); this.setDead(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4492/buggy-version/src.main.java.org.jurassicraft.server.entity.TranquilizerDartEntity.java", "BodyUseAPI": ["this.world.setEntityState(org.jurassicraft.server.entity.TranquilizerDartEntity,int)"], "Fixed commit": "68283e000ab8a507f747a72ae9da8b18c9e0822c", "Url": "https://api.github.com/repos/JurassiCraftTeam/JurassiCraft2", "Date": "2018-05-12T14:53:23Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (scanRunning) { StopScan(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/220/buggy-version/app.src.main.java.eu.irnas.piraapp.PiraConnect.java", "BodyUseAPI": [], "Fixed commit": "c03ca2f23cc059381664011049bd4fea8af9fa76", "Url": "https://api.github.com/repos/IRNAS/pira-smart-app", "Date": "2018-08-14T15:03:14Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.shibboleth.idp.profile.context.RelyingPartyContext.getProfileConfig()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((pc != null) && (pc instanceof org.geant.idpextension.oidc.config.OIDCUserInfoConfiguration)) { pairwise = ((org.geant.idpextension.oidc.config.OIDCUserInfoConfiguration) (pc)).getPairwiseSubject().apply(input); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8160/buggy-version/idp-oidc-extension-impl.src.main.java.org.geant.idpextension.oidc.profile.logic.DefaultSubjectTypeStrategy.java", "BodyUseAPI": [], "Fixed commit": "ad698f2062424f099f3ce912253156c9319ac777", "Url": "https://api.github.com/repos/CSCfi/shibboleth-idp-oidc-extension", "Date": "2018-03-06T06:30:17Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (output.exists()) { output.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8735/buggy-version/rest_cat.src.main.java.nl.uva.sne.vre4eic.service.ConvertService.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "5e90000d247affaffecd739b0f25376751e6f9d3", "Url": "https://api.github.com/repos/skoulouzis/eVRECatalogueIntegration", "Date": "2018-09-26T14:36:19Z"},
{"Line": "=>497", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["simpledb.BufferPool.LRUCache.get(simpledb.PageId)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (page != null) { page.setBeforeImage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5811/buggy-version/src.java.simpledb.BufferPool.java", "BodyUseAPI": ["simpledb.Page.setBeforeImage()"], "Fixed commit": "753ddcf48ad476c3dcded514fc4e153ef5d57847", "Url": "https://api.github.com/repos/springfieldking/mit-6.830-simpledb-2017", "Date": "2018-02-11T09:30:27Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"true\".equals(error)) return new org.springframework.web.servlet.ModelAndView(\"/login\", \"status\", \"Bad username or password\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6357/buggy-version/get2018.src.meta.abhay.ead.www.assgn13.EmployeePortal.src.main.java.com.metacube.training.controller.HomeController.java", "BodyUseAPI": [], "Fixed commit": "d1bbcb7b3d55e638c98dd271fd658220ad6e927c", "Url": "https://api.github.com/repos/meta-abhay-verma/GET2018", "Date": "2018-09-19T05:49:49Z"},
{"Line": "=>993", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nl.nn.adapterframework.util.JdbcUtil.jdbcProperties) != null) { nl.nn.adapterframework.util.JdbcUtil.jdbcProperties.clear(); nl.nn.adapterframework.util.JdbcUtil.jdbcProperties = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3877/buggy-version/core.src.main.java.nl.nn.adapterframework.util.JdbcUtil.java", "BodyUseAPI": [], "Fixed commit": "f19aed6ad424de233b155e27090030a75eccd508", "Url": "https://api.github.com/repos/ibissource/iaf", "Date": "2018-07-06T13:33:07Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.auth.FirebaseAuth.getCurrentUser()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (currentUser != null) { android.content.Intent intent = new android.content.Intent(this, com.susa.ajayioluwatobi.susa.FeedActivity.class); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7936/buggy-version/app.src.main.java.com.susa.ajayioluwatobi.susa.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "0c95556aadbd5f87ebb923ce919291a80d4cf596", "Url": "https://api.github.com/repos/COP4656-G1/Susa", "Date": "2018-04-22T22:26:07Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.auth.FirebaseAuth.getCurrentUser()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (currentUser != null) { android.content.Intent intent = new android.content.Intent(this, com.susa.ajayioluwatobi.susa.FeedActivity.class); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7936/buggy-version/app.src.main.java.com.susa.ajayioluwatobi.susa.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "0c95556aadbd5f87ebb923ce919291a80d4cf596", "Url": "https://api.github.com/repos/COP4656-G1/Susa", "Date": "2018-04-22T22:26:07Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (distanceYToSubtract > maxYDistance) distanceYToSubtract = maxYDistance;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/434/buggy-version/app.src.main.java.saulmm.myapplication.AvatarImageBehavior.java", "BodyUseAPI": [], "Fixed commit": "1b0839d7384bfbbac6b15bd9229304a461914b46", "Url": "https://api.github.com/repos/paolorotolo/CoordinatorBehaviorExample", "Date": "2018-01-29T00:07:44Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cards.get(0).getRank()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((cards.get(1).getRank()) == (highRank - 1)) && ((cards.get(2).getRank()) == (highRank - 2))) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9083/buggy-version/src.poker.Hand.java", "BodyUseAPI": [], "Fixed commit": "9eefef2cac4a089798d6c6302f66d2c55a4c0da3", "Url": "https://api.github.com/repos/kdlugosz/KatePoker", "Date": "2018-01-02T22:50:37Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((cards.get(2).getRank()) == 2) && ((cards.get(1).getRank()) == 3)) && ((cards.get(0).getRank()) == 14)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9083/buggy-version/src.poker.Hand.java", "BodyUseAPI": [], "Fixed commit": "9eefef2cac4a089798d6c6302f66d2c55a4c0da3", "Url": "https://api.github.com/repos/kdlugosz/KatePoker", "Date": "2018-01-02T22:50:37Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((x == 0) && (y == 0)) && (z == 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4443/buggy-version/globe.src.main.java.me.huntto.gl.globe.shape.Globe.java", "BodyUseAPI": [], "Fixed commit": "d972262732e755a82ea325e2ba17d8ec06c68fd1", "Url": "https://api.github.com/repos/huntto/android-opengles-2.0", "Date": "2018-09-26T11:07:02Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (theObject == null) { result = false; }else if ((this.getClass()) == (theObject.getClass())) { model.Job theOtherJob = ((model.Job) (theObject)); result = ((((((((((((java.util.Objects.equals(this.myJobTitle, theOtherJob.myJobTitle)) && (java.util.Objects.equals(this.myMaxVolunteers, theOtherJob.myMaxVolunteers))) && (java.util.Objects.equals(this.myStartDate, theOtherJob.myStartDate))) && (java.util.Objects.equals(this.myEndDate, theOtherJob.myEndDate))) && (java.util.Objects.equals(this.myVolunteers, theOtherJob.myVolunteers))) && (java.util.Objects.equals(this.myJobLocation, theOtherJob.myJobLocation))) && (java.util.Objects.equals(this.myContactName, theOtherJob.myContactName))) && (java.util.Objects.equals(this.myContactNumber, theOtherJob.myContactNumber))) && (java.util.Objects.equals(this.myContactEmail, theOtherJob.myContactEmail))) && (java.util.Objects.equals(this.myJobDifficulty, theOtherJob.myJobDifficulty))) && (java.util.Objects.equals(this.myJobDescription, theOtherJob.myJobDescription))) && (java.util.Objects.equals(this.myJobRole, theOtherJob.myJobRole))) && (java.util.Objects.equals(this.myJobRoleDescription, theOtherJob.myJobRoleDescription)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5946/buggy-version/src.model.Job.java", "BodyUseAPI": ["java.lang.Object.getClass()"], "Fixed commit": "58c93c6939d9f5984bc5736412d4e4f82eaa4bfa", "Url": "https://api.github.com/repos/tcss360win2018group5/T360WIN18-GROUP5-PROJECT", "Date": "2018-03-02T21:54:41Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dest.getFile().getName().contains(\".ust\"))) { dest.setFile(new java.io.File(((dest.getUri()) + \".ust\"))); dest.setUri(dest.getFile().getAbsolutePath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/1633/buggy-version/src.dodgerakame.view.View.java", "BodyUseAPI": ["dest.getFile().getAbsolutePath()", "dodgerakame.model.UST.setFile(java.io.File)", "dodgerakame.model.UST.setUri(dest.getFile().getAbsolutePath())", "dodgerakame.model.UST.getUri()", "dodgerakame.model.UST.getFile()"], "Fixed commit": "e73f17a0aa29dbc30a1d7655fa40f0b0d6c26a9b", "Url": "https://api.github.com/repos/DodgerAkame/UtauHarmonizer", "Date": "2018-03-26T05:40:09Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (socket.isConnected()) socket.disconnect();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4340/buggy-version/src.com.g4mesoft.net.client.ClientNetworkManager.java", "BodyUseAPI": ["com.g4mesoft.net.client.ClientNetworkManager.disconnect()"], "Fixed commit": "fb863f264baa59cd17d5cf980dcbb75ed43e8f1b", "Url": "https://api.github.com/repos/G4me4u/platporter", "Date": "2018-04-10T08:46:45Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((socket) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/88/buggy-version/src.main.java.org.academiadecodigo.ladybug.client.model.UserHandler.java", "BodyUseAPI": [], "Fixed commit": "07f747c273240746ed9c1a0804f46906f0eaeb2d", "Url": "https://api.github.com/repos/jpdsdc/Ladybug", "Date": "2018-03-25T21:57:36Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (message == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/88/buggy-version/src.main.java.org.academiadecodigo.ladybug.client.model.UserHandler.java", "BodyUseAPI": [], "Fixed commit": "07f747c273240746ed9c1a0804f46906f0eaeb2d", "Url": "https://api.github.com/repos/jpdsdc/Ladybug", "Date": "2018-03-25T21:57:36Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { getCoordinator().onInitialize(); }else { getCoordinator().onUpdate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6671/buggy-version/ucs-platform-android.src.main.java.com.cjsoftware.library.platform.android.ucs.BaseUiDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "90f43f11f335731567eeaf636f73a7be9202df24", "Url": "https://api.github.com/repos/cjsoftware-lib/ucsFramework", "Date": "2018-02-25T08:03:25Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { getCoordinator().onInitialize(); }else { getCoordinator().onUpdate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6671/buggy-version/ucs-platform-android.src.main.java.com.cjsoftware.library.platform.android.ucs.BaseUiActivity.java", "BodyUseAPI": [], "Fixed commit": "90f43f11f335731567eeaf636f73a7be9202df24", "Url": "https://api.github.com/repos/cjsoftware-lib/ucsFramework", "Date": "2018-02-25T08:03:25Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { getCoordinator().onInitialize(); }else { getCoordinator().onUpdate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6671/buggy-version/ucs-platform-android.src.main.java.com.cjsoftware.library.platform.android.ucs.BaseUiFragment.java", "BodyUseAPI": [], "Fixed commit": "90f43f11f335731567eeaf636f73a7be9202df24", "Url": "https://api.github.com/repos/cjsoftware-lib/ucsFramework", "Date": "2018-02-25T08:03:25Z"},
{"Line": "=>1295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Statement.executeQuery(((\"select dpt_cont_email as info from Case_table where Case_ID='\" + (request.getParameter(\"CaseIDtocarryover\"))) + \"'\"))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((rstRec.getString(\"info\")) != null) { DigitalForensicsForms.GpdForensicsForms.RECIPIENT[countx] = rstRec.getString(\"info\"); countx++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3107/buggy-version/GPDSpring_PD.src.main.java.DigitalForensicsForms.GpdForensicsForms.java", "BodyUseAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Fixed commit": "23e7cd84db99261df943baacf2676a4c7e753191", "Url": "https://api.github.com/repos/mrahman2549/GPDSpring_PD", "Date": "2018-07-20T14:49:32Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((holders.size()) == 1) && ((holders.firstElement()) == trans)) { return false; }else if ((!(lockType.isWrite)) && (!(requestedLockType.isWrite))) { return false; }else { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6066/buggy-version/Assignment2.Lock.java", "BodyUseAPI": [], "Fixed commit": "20f34e25479b4a44364b5cb402b2f1172182a40a", "Url": "https://api.github.com/repos/agrzesiak33/Distributed-Systems", "Date": "2018-03-29T02:25:56Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (false) { java.lang.System.out.println(\"Setting option to stop TLSv1 hello \"); java.lang.System.setProperty(\"https.protocols\", \"TLSv1,TLSv1.1,TLSv1.2,SSLv2Hello\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7204/buggy-version/src.main.java.org.immregistries.smm.mover.ConnectionManager.java", "BodyUseAPI": [], "Fixed commit": "5397454d40e95a1844023224c6e0715c7f86a4c0", "Url": "https://api.github.com/repos/immregistries/smm-tester", "Date": "2017-03-30T12:36:00Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (pos > (-1)) { encodedPath = path.substring(0, pos); query = path.substring((pos + 1)); }else { encodedPath = path; query = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7608/buggy-version/src.main.java.com.marklogic.mgmt.ManageClient.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.substring(int,int)"], "Fixed commit": "341689fcef1efb7e1eecaa52af56ab68cef64792", "Url": "https://api.github.com/repos/marklogic-community/ml-app-deployer", "Date": "2018-03-19T16:40:01Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gk.model.GKInstance.getAttributeValue(ReactomeJavaConstants.regulator)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (regulator != null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5093/buggy-version/src.org.gk.qualityCheck.ReactionQACheckHelper.java", "BodyUseAPI": [], "Fixed commit": "70c5b56206f50e72399a51673e0338efd1ebe764", "Url": "https://api.github.com/repos/reactome/CuratorTool", "Date": "2018-04-27T00:41:00Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ij.IJ.debugMode) reader.lines().forEach(IJ::log);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/587/buggy-version/Legacy.bonej.src.main.java.org.bonej.plugins.UsageReporter.java", "BodyUseAPI": [], "Fixed commit": "7308b79f1b018b3b1e8021b1aae2047ee04e548e", "Url": "https://api.github.com/repos/mdoube/BoneJ2", "Date": "2018-09-13T10:02:22Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ij.IJ.debugMode) ij.IJ.log(uc.getRequestProperty(\"User-Agent\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/587/buggy-version/Legacy.bonej.src.main.java.org.bonej.plugins.UsageReporter.java", "BodyUseAPI": [], "Fixed commit": "7308b79f1b018b3b1e8021b1aae2047ee04e548e", "Url": "https://api.github.com/repos/mdoube/BoneJ2", "Date": "2018-09-13T10:02:22Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (builder.mIsOutsideTouchable) { dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3688/buggy-version/ekpopwindowlib.src.main.java.com.ekwong.lib.CustomPopWindow.java", "BodyUseAPI": [], "Fixed commit": "ff525d010813f1b3d907198554e7954216cc8751", "Url": "https://api.github.com/repos/EKwongChum/EkPopWindow", "Date": "2018-08-09T18:24:52Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((status) == (com.workdawn.speedlib.Status.RESUME)) && ((priority) == (com.workdawn.speedlib.load.RequestTask.CHANGE_NETWORK_PRIORITY))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8951/buggy-version/speedlib.src.main.java.com.workdawn.speedlib.load.RequestTask.java", "BodyUseAPI": [], "Fixed commit": "81e6388b513406ccf37d192c13415adc6692ecfb", "Url": "https://api.github.com/repos/workdawn/Speed", "Date": "2018-05-29T06:35:23Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(CustomMediaType.APPLICATION_SCHEMA_REGISTRY_JSON.equalsIgnoreCase(accept))) { logger.error(\"Accept is not set correctly, subject: {}\", subject); acknowledgement = new org.schemarepo.utils.MessageAcknowledgement(StatusCodes.INVALID_REQUEST.getStatusCode(), org.schemarepo.Message.ACCEPT_ERROR, null); }else if (org.apache.commons.lang3.StringUtils.isAnyBlank(subject)) { logger.error(\"Invalid Parameter Passed to function, subject: {}\", subject); acknowledgement = new org.schemarepo.utils.MessageAcknowledgement(StatusCodes.INVALID_REQUEST.getStatusCode(), StatusCodes.INVALID_REQUEST.getReasonPhrase(), null); }else { try { org.schemarepo.Subject s = getSubject(subject); acknowledgement = new org.schemarepo.utils.MessageAcknowledgement(StatusCodes.OK.getStatusCode(), StatusCodes.OK.getReasonPhrase(), s.getName()); logger.info(\"Get the subject is successful. subject: {}\", subject); } catch (com.sun.jersey.api.NotFoundException e) { logger.warn(\"Get the subject is failed, {}, subject: {}\", e.getMessage(), subject); acknowledgement = new org.schemarepo.utils.MessageAcknowledgement(StatusCodes.GONE.getStatusCode(), e.getMessage(), null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/266/buggy-version/server.src.main.java.org.schemarepo.server.RESTRepository.java", "BodyUseAPI": [], "Fixed commit": "820eedfc67d05da714a773d971c0c4bea68ba74e", "Url": "https://api.github.com/repos/chekore/schema-repo", "Date": "2018-09-18T03:00:24Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == ((ligne.length()) - 1)) { throw new SyllabeImpossible(\"La ligne ne termine pas par une syllabe valide...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7388/buggy-version/src.Roomaji2html.java", "BodyUseAPI": [], "Fixed commit": "f6fc768228ca779756ca620753e5e8686e4521be", "Url": "https://api.github.com/repos/bibtown-ssal/INF2120TP1", "Date": "2018-05-18T22:52:48Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adg) != null) adg.start();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7447/buggy-version/android.src.main.java.com.github.chuross.rn.RNAdGenerationBanner.java", "BodyUseAPI": [], "Fixed commit": "58263d80fd921cdfb420848a13ffff16fe7c368d", "Url": "https://api.github.com/repos/chuross/react-native-adgeneration", "Date": "2018-06-16T13:31:12Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (parent == null) { root = null; }else { if (deleted == (parent.getLeftChild())) { parent.setLeftChild(null); }else { parent.setRightChild(null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3361/buggy-version/src.eg.edu.alexu.csd.filestructure.avl.cs.AVLTree.java", "BodyUseAPI": ["eg.edu.alexu.csd.filestructure.avl.cs.Node<T>.setLeftChild(<nulltype>)", "eg.edu.alexu.csd.filestructure.avl.cs.Node<T>.setRightChild(<nulltype>)", "eg.edu.alexu.csd.filestructure.avl.cs.Node<T>.getLeftChild()"], "Fixed commit": "50deffda7a8ceb461d46c9b5044f53c14a5e233f", "Url": "https://api.github.com/repos/abdelhakeem/cs223-lab02", "Date": "2018-03-22T16:21:41Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(ret.getMessage()))) { android.widget.Toast.makeText(mContext, ret.getMessage(), Toast.LENGTH_SHORT).show(); }else { android.widget.Toast.makeText(mContext, ret.getDesc(), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9126/buggy-version/app.src.main.java.com.yanxiu.gphone.faceshowadmin_android.login.activity.LoginActivity.java", "BodyUseAPI": ["com.yanxiu.gphone.faceshowadmin_android.net.login.SignInResponse.getMessage()", "android.widget.Toast.makeText(android.content.Context,ret.getDesc(),Toast.LENGTH_SHORT)", "android.widget.Toast.makeText(mContext, ret.getDesc(), Toast.LENGTH_SHORT).show()", "com.yanxiu.gphone.faceshowadmin_android.net.login.SignInResponse.getDesc()", "android.widget.Toast.makeText(mContext, ret.getMessage(), Toast.LENGTH_SHORT).show()", "android.widget.Toast.makeText(android.content.Context,ret.getMessage(),Toast.LENGTH_SHORT)"], "Fixed commit": "0fb2ad2755d4f176862645b3fd1066d8dfe7b73c", "Url": "https://api.github.com/repos/caileiYanxiu/FaceShowAdmin_Android", "Date": "2018-07-31T08:40:35Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (categorize) { selectionCategory = mouseToSelection(categoryLists.size(), 9, selectionCategory, (3 + (textWidth)), 100); if ((selectionCategory) != oldCategory) selection = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/296/buggy-version/src.main.java.ure.ui.modals.UModalEntityPick.java", "BodyUseAPI": [], "Fixed commit": "dccc702bc10fd528c85f6205c433b0545b13f488", "Url": "https://api.github.com/repos/gilmore606/ure", "Date": "2018-08-06T03:44:54Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.receiver.equals(myAddr)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/1342/buggy-version/rapid.src.main.java.com.vrg.rapid.GossipBroadcaster.java", "BodyUseAPI": [], "Fixed commit": "3640f2f757a3cdbf516e2e969d7656a9e1246b2e", "Url": "https://api.github.com/repos/p-kar/rapid", "Date": "2018-05-01T22:42:37Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pos3 != null) { meaning = pos3.ucd[0][1]; switch (meaning) { case \"parallax\" : disttype = \"PLX\"; break; case \"distance\" : disttype = \"DIST\"; break; } }else { disttype = \"PLX\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7609/buggy-version/core.src.gaia.cu9.ari.gaiaorbit.util.ucd.UCDParser.java", "BodyUseAPI": [], "Fixed commit": "cdbd46921615b82b561c1b18b4d742e51449a017", "Url": "https://api.github.com/repos/vga101/gaiasky", "Date": "2018-06-19T13:50:09Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tagsAsString.length()) != 0) { return tagsAsString.substring(0, ((tagsAsString.length()) - 2)); }else { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5456/buggy-version/src.main.java.nl.cookplanner.domain.Recipe.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "6109d92a6949acdaaa2924e49de268102c7e4ded", "Url": "https://api.github.com/repos/hwkeizer/CookPlanner", "Date": "2018-10-02T18:58:12Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Configuration.adapters.get(thing.adapterId)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (adapter == null) { throw new java.lang.Exception((\"MISSING EVENT RECEIVING ADAPTER FOR THING: \" + (thing.toSimpleString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7202/buggy-version/agent-service.src.main.java.sk.intersoft.vicinity.agent.service.resource.ReceiveEventResource.java", "BodyUseAPI": [], "Fixed commit": "c54afab0f991ab487f3f13380cb3d6858da2301a", "Url": "https://api.github.com/repos/vicinityh2020/vicinity-agent", "Date": "2018-06-12T09:18:27Z"},
{"Line": "=>1374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((panels[pac.getY()][pac.getX()].getComponentCount()) > 0) { checkPower(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3822/buggy-version/Game.java", "BodyUseAPI": [], "Fixed commit": "3e9e1bff59f7cf6b04ac465687404a912adc1b12", "Url": "https://api.github.com/repos/rkhuda/Final-Project", "Date": "2018-01-21T04:22:10Z"},
{"Line": "=>1390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((panels[pac.getY()][pac.getX()].getComponentCount()) > 0) { checkPower(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3822/buggy-version/Game.java", "BodyUseAPI": [], "Fixed commit": "3e9e1bff59f7cf6b04ac465687404a912adc1b12", "Url": "https://api.github.com/repos/rkhuda/Final-Project", "Date": "2018-01-21T04:22:10Z"},
{"Line": "=>1341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((panels[pac.getY()][pac.getX()].getComponentCount()) > 0) { checkPower(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3822/buggy-version/Game.java", "BodyUseAPI": [], "Fixed commit": "3e9e1bff59f7cf6b04ac465687404a912adc1b12", "Url": "https://api.github.com/repos/rkhuda/Final-Project", "Date": "2018-01-21T04:22:10Z"},
{"Line": "=>1359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((panels[pac.getY()][pac.getX()].getComponentCount()) > 0) { checkPower(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3822/buggy-version/Game.java", "BodyUseAPI": [], "Fixed commit": "3e9e1bff59f7cf6b04ac465687404a912adc1b12", "Url": "https://api.github.com/repos/rkhuda/Final-Project", "Date": "2018-01-21T04:22:10Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.datavaultplatform.common.model.User.getProperties()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (props != null) { java.lang.System.out.println(\"Props is not null\"); for (java.lang.String key : props.keySet()) { java.lang.System.out.println((((((\"key is :'\" + \"'\") + key) + \" value is :'\") + (props.get(key))) + \"'\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2198/buggy-version/datavault-broker.src.main.java.org.datavaultplatform.broker.services.ExternalMetadataService.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.keySet()"], "Fixed commit": "fced576d84bb1faa23590406ca0a544977a86776", "Url": "https://api.github.com/repos/DataVault/datavault", "Date": "2018-05-28T13:51:30Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(line.contains(\"_\"))) { return line; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2553/buggy-version/src.main.java.org.utopiavip.blink.util.StringUtil.java", "BodyUseAPI": [], "Fixed commit": "683d397b41350604543ab1bb7e83b3cf06bf38e5", "Url": "https://api.github.com/repos/utopiavip/blink", "Date": "2018-09-27T06:48:32Z"},
{"Line": "=>493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opensourcephysics.cabrillo.tracker.TapeMeasure.getStep(trackerPanel.getFrameNumber())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (step != null) step.getTapeLength((!(isStickMode())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/554/buggy-version/src.org.opensourcephysics.cabrillo.tracker.TapeMeasure.java", "BodyUseAPI": ["org.opensourcephysics.cabrillo.tracker.TapeStep.getTapeLength(boolean)"], "Fixed commit": "38e69e06639accb4db944e58cba4ebeaca1a79bb", "Url": "https://api.github.com/repos/OpenSourcePhysics/tracker", "Date": "2018-04-03T23:51:18Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (repeated && ((adapter) != null)) { adapter.notifyDataSetChanged(); }else { adapter = new com.wblachowski.swarzedzkibus.adapters.FavouritesAdapter(stops, fragment); mRecycler.setAdapter(adapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/1570/buggy-version/SwarzedzkiBus.app.src.main.java.com.wblachowski.swarzedzkibus.fragments.FavouritesFragment.java", "BodyUseAPI": [], "Fixed commit": "4621d5be43dbcd305cad4e9ebd43426d3997b9c7", "Url": "https://api.github.com/repos/wblachowski/SwarzedzkiBusV2", "Date": "2018-03-27T09:28:36Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list.size()) == 0) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4068/buggy-version/daon-core.src.main.java.daon.core.Daon.java", "BodyUseAPI": [], "Fixed commit": "3d72f11207df96fc550f9c17c7c1cceb06120c8f", "Url": "https://api.github.com/repos/rasoio/daon", "Date": "2018-02-01T05:58:43Z"},
{"Line": "=>844", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((contextStore) == null) { setContextStore(new org.structr.common.ContextStore()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7835/buggy-version/structr-core.src.main.java.org.structr.common.SecurityContext.java", "BodyUseAPI": [], "Fixed commit": "f0fffb5ef8b651ba6832731492e811157de5718f", "Url": "https://api.github.com/repos/structr/structr", "Date": "2018-03-01T16:44:05Z"},
{"Line": "=>5065", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!r) r = consumeToken(b, org.ballerinalang.plugins.idea.parser.CHECK);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7850/buggy-version/src.main.gen.org.ballerinalang.plugins.idea.parser.BallerinaParser.java", "BodyUseAPI": [], "Fixed commit": "ad245e530a5bc27aabc8263fc3fbe79c36e8bc4d", "Url": "https://api.github.com/repos/Shan1024/ballerina-idea-plugin", "Date": "2018-04-12T06:29:19Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parkour.checkpoint) == 0) { cc.plugin.listeners.ParkourListener.inParkour.remove(parkour); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5345/buggy-version/src.cc.plugin.listeners.ParkourListener.java", "BodyUseAPI": ["java.util.List<cc.plugin.util.parkour.Parkour>.remove(cc.plugin.util.parkour.Parkour)"], "Fixed commit": "ebe640cdd459be709717c5f198132bd5dbc2bee0", "Url": "https://api.github.com/repos/ExcelCyphernia/CypherniaCore", "Date": "2018-09-13T14:26:47Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((view) != null) view.dismiss();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/1471/buggy-version/app.src.main.java.phonerecorder.kivsw.com.faithphonerecorder.ui.player.PlayerPresenter.java", "BodyUseAPI": [], "Fixed commit": "6a306a34e29f412884881c2d25177b6f6f951048", "Url": "https://api.github.com/repos/IvanKovalchuk/PhoneRecorderN", "Date": "2018-06-04T10:03:57Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((data.size) > (newStart + 2)) { T tempValue1 = data[(newStart + 1)]; T tempValue2 = data[(newStart + 2)]; if (((tempValue2.compareTo(val)) > 0) && ((tempValue2.compareTo(tempValue1)) > 0)) { swap(data, start, (newStart + 2)); pushDown(val, (newStart + 2)); }else if (((tempValue1.compareTo(val)) > 0) && ((tempValue1.compareTo(tempValue2)) > 0)) { swap(data, start, (newStart + 1)); pushDown(val, (newStart + 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9160/buggy-version/12MyHeap.MyHeap.java", "BodyUseAPI": ["MyHeap<T>.pushDown(T,int)", "MyHeap<T>.swap(T[],int,int)", "MyHeap<T>.swap(T[],int,int)", "MyHeap<T>.pushDown(T,int)"], "Fixed commit": "32ecb1d5475de27f4213876e7e3bc377658b1367", "Url": "https://api.github.com/repos/narang-amit/MKS22X", "Date": "2018-05-23T00:07:59Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Matcher.group(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (spec.startsWith(new java.lang.String(org.apache.commons.httpclient.HttpsURL.DEFAULT_SCHEME))) { result = new org.apache.commons.httpclient.HttpsURL(spec); }else if (spec.startsWith(new java.lang.String(org.apache.commons.httpclient.HttpURL.DEFAULT_SCHEME))) { result = new org.apache.commons.httpclient.HttpURL(spec); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4352/buggy-version/src.main.java.org.codebrewer.intellijplatform.plugin.dilbert.http.DilbertDailyStripFetcher.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "017f2e4f874dcfd0307863feefa5d9255e6893fb", "Url": "https://api.github.com/repos/codebrewer/intellij-platform-dilbert-daily-strip-plugin", "Date": "2018-05-04T11:21:24Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (documentSnapshot != null) { if (documentSnapshot.exists()) { dk.adamino.rehabilitation.BE.Client client = documentSnapshot.toObject(dk.adamino.rehabilitation.BE.Client.class); firestoreCallback.onClientResponse(client); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8573/buggy-version/app.src.main.java.dk.adamino.rehabilitation.DAL.FirestoreDAO.java", "BodyUseAPI": ["com.google.firebase.firestore.DocumentSnapshot.toObject(java.lang.Class)", "com.google.firebase.firestore.DocumentSnapshot.exists()"], "Fixed commit": "5881d17248975158d4265947defefe70c1f266d8", "Url": "https://api.github.com/repos/onero/Rehabilitation-Android", "Date": "2018-05-22T11:29:51Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((source.getVat()) != null) { voucher.setVat(new java.math.BigDecimal(source.getVat())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8368/buggy-version/src.main.java.ph.royaltek.inventory.util.InventoryConverter.java", "BodyUseAPI": ["ph.royaltek.inventory.util.VoucherDTO.getVat()", "ph.royaltek.inventory.util.Voucher.setVat(java.math.BigDecimal)"], "Fixed commit": "5b505f7c4283fbf4328566cc713603c5e35271a1", "Url": "https://api.github.com/repos/borgytan/inventory2", "Date": "2018-03-01T08:06:20Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["urbanutility.design.kaleidoscope.exchange.binance.model.BinanceOrder.getSymbol()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (rawSymbol.contains(\"USDT\")) { return io.reactivex.Observable.just(1.0); }else if (rawSymbol.contains(\"BTC\")) { return gdaxService.getHistoricBtc2Usd(startTime, endTime, 60).map(mapGdaxBtcUsdRate()); }else { java.lang.String altBtcSymbol = \"\"; for (java.lang.String baseAlt : urbanutility.design.kaleidoscope.model.BaseAlts.supportedAlts) { if (guess.contains(baseAlt)) altBtcSymbol = baseAlt + \"BTC\"; } return gdaxService.getHistoricBtc2Usd(startTime, endTime, 60).map(mapGdaxBtcUsdRate()).zipWith(binanceService.getHistoricPrice(altBtcSymbol, 1, \"1m\", binanceOrder.getTime()).subscribeOn(io.reactivex.schedulers.Schedulers.io()), bifuncGdaxBinanceRates()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9820/buggy-version/app.src.main.java.urbanutility.design.kaleidoscope.exchange.binance.client.BinanceChainRequestor.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)"], "Fixed commit": "d48c768022577dc13ffa978f7dcc004c1745bb2b", "Url": "https://api.github.com/repos/hsukev/Kaleidoscope", "Date": "2018-01-28T23:42:29Z"},
{"Line": "=>493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.apache.commons.lang.StringUtils.isNotBlank(decodedCertificate)) && (!(decodedCertificate.startsWith(IdentityUtil.PEM_BEGIN_CERTFICATE)))) { return createCertificateInfoForNoBeginCertificate(certificateValue); }else { return createEncodedCertificateInfo(decodedCertificate, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4085/buggy-version/components.application-mgt.org.wso2.carbon.identity.application.common.src.main.java.org.wso2.carbon.identity.application.common.model.IdentityProvider.java", "BodyUseAPI": ["org.wso2.carbon.identity.application.common.model.IdentityProvider.createEncodedCertificateInfo(java.lang.String,boolean)"], "Fixed commit": "2b59583844907c6fea10d8ca46871d290160ba12", "Url": "https://api.github.com/repos/sahanruwanga/carbon-identity-framework", "Date": "2018-07-13T12:43:03Z"},
{"Line": "=>555", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEncoded) { certificateVal = java.util.Base64.getEncoder().encodeToString(org.wso2.carbon.identity.application.common.util.IdentityApplicationManagementUtil.extractCertificate(decodedCertificate, ordinal).getBytes(java.nio.charset.StandardCharsets.UTF_8)); }else { certificateVal = org.wso2.carbon.identity.application.common.util.IdentityApplicationManagementUtil.extractCertificate(decodedCertificate, ordinal).replace(IdentityUtil.PEM_BEGIN_CERTFICATE, \"\").replace(IdentityUtil.PEM_END_CERTIFICATE, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4085/buggy-version/components.application-mgt.org.wso2.carbon.identity.application.common.src.main.java.org.wso2.carbon.identity.application.common.model.IdentityProvider.java", "BodyUseAPI": [], "Fixed commit": "2b59583844907c6fea10d8ca46871d290160ba12", "Url": "https://api.github.com/repos/sahanruwanga/carbon-identity-framework", "Date": "2018-07-13T12:43:03Z"},
{"Line": "=>642", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (inheritedFacet.isLocalFacet()) { ghostFacet.setOwningLibrary(facetOwner.getOwningLibrary()); }else { ghostFacet.setOwningLibrary(inheritedFacet.getOwningLibrary()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5982/buggy-version/schema-compiler.src.main.java.org.opentravel.schemacompiler.codegen.util.FacetCodegenUtils.java", "BodyUseAPI": ["org.opentravel.schemacompiler.model.TLContextualFacet.setOwningLibrary(inheritedFacet.getOwningLibrary())", "org.opentravel.schemacompiler.model.TLContextualFacet.getOwningLibrary()"], "Fixed commit": "8061107baffae6864f79681fbc4c9821ffb012f1", "Url": "https://api.github.com/repos/OpenTravel/OTM-DE-Compiler", "Date": "2018-07-23T19:05:30Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(Fold)) { timer.restart(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3028/buggy-version/src.edu.ucsb.cs56.projects.games.poker.PokerSinglePlayer.java", "BodyUseAPI": [], "Fixed commit": "369d954c2355ca26976006198fe3a17c5fecbf89", "Url": "https://api.github.com/repos/anniiebaii/cs56-games-poker", "Date": "2018-03-13T05:26:23Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.activity.CropActivity.findPoints()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (points != null) { mSelectionImageView.setPoints(points); }else { com.owncloud.android.lib.common.utils.Log_OC.d(com.owncloud.android.ui.activity.CropActivity.TAG, getResources().getString(R.string.no_contour_found)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2010/buggy-version/src.com.owncloud.android.ui.activity.CropActivity.java", "BodyUseAPI": ["com.owncloud.android.ui.QuadrilateralSelectionImageView.setPoints(java.util.List<android.graphics.PointF>)"], "Fixed commit": "b2ca4e75e694e53d3f3a3c536fe09cd28e3dda1f", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-03-12T06:43:04Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (user.isPromotionalEmails()) { user.unsubscribeFromPromotionalEmails(); wrapperFactory.wrap(user).isPromotionalEmails(); }else { user.subscribeToPromotionalEmails(); wrapperFactory.wrap(user).unsubscribeFromPromotionalEmails(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4120/buggy-version/application.src.main.java.org.incode.eurocommercial.ecpcrm.module.loyaltycards.dom.user.UserRepository.java", "BodyUseAPI": ["org.incode.eurocommercial.ecpcrm.module.loyaltycards.dom.user.User.unsubscribeFromPromotionalEmails()", "wrapperFactory.wrap(user).isPromotionalEmails()", "org.apache.isis.applib.services.wrapper.WrapperFactory.wrap(org.incode.eurocommercial.ecpcrm.module.loyaltycards.dom.user.User)", "org.incode.eurocommercial.ecpcrm.module.loyaltycards.dom.user.User.subscribeToPromotionalEmails()", "wrapperFactory.wrap(user).unsubscribeFromPromotionalEmails()", "org.apache.isis.applib.services.wrapper.WrapperFactory.wrap(org.incode.eurocommercial.ecpcrm.module.loyaltycards.dom.user.User)"], "Fixed commit": "f314f9e17b6df0be452caba07cabd3a006bed141", "Url": "https://api.github.com/repos/incodehq/ecpcrm", "Date": "2018-10-01T14:23:38Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(image.isMutable())) image = image.copy(image.getConfig(), true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/47/buggy-version/app.src.main.java.com.bignerdranch.android.criminalintent.SuspectFaceDetector.java", "BodyUseAPI": ["android.graphics.Bitmap.copy(image.getConfig(),boolean)", "android.graphics.Bitmap.getConfig()"], "Fixed commit": "11a054f2ea7bb65d4db3645aad523a0a6daea61e", "Url": "https://api.github.com/repos/jtstegeman/CS4518D18Team5", "Date": "2018-01-30T23:04:27Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((strs.length) <= 0) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8278/buggy-version/src.main.java.com.summer.base.utils.StringUtils.java", "BodyUseAPI": [], "Fixed commit": "73ed2609a3c7f68091ab084d9d252430823a1cd5", "Url": "https://api.github.com/repos/summer1897/common-utils", "Date": "2018-06-08T08:03:06Z"},
{"Line": "=>542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (component instanceof com.valkryst.VTerminal.component.Layer) { removeLayerListeners(((com.valkryst.VTerminal.component.Layer) (component))); }else { for (final java.util.EventListener listener : component.getEventListeners()) { removeListener(listener); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9492/buggy-version/src.com.valkryst.VTerminal.Screen.java", "BodyUseAPI": ["java.awt.Component.getEventListeners()"], "Fixed commit": "303709d25f33beb71875362170aff7eb524ca2b2", "Url": "https://api.github.com/repos/Valkryst/VTerminal", "Date": "2018-08-29T04:29:46Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.fml.common.FMLCommonHandler.instance().getMinecraftServerInstance()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (server == null) worlds = new net.minecraft.world.World[]{ net.minecraft.client.Minecraft.getMinecraft().world }; else worlds = server.worlds;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4423/buggy-version/src.main.java.mineguard.util.EntityUtil.java", "BodyUseAPI": [], "Fixed commit": "e758e44a7bf2cda03e92e1ef7d8f792ae6ee3604", "Url": "https://api.github.com/repos/Tumlinh/Mineguard", "Date": "2018-10-25T17:58:00Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((view.getTag()) != null) bundle.putLong(DatePickerDialogFragment.KEY_DISPLAY_DATE, ((java.util.Date) (view.getTag())).getTime()); else bundle.putLong(DatePickerDialogFragment.KEY_DISPLAY_DATE, new java.util.Date().getTime());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8472/buggy-version/app.src.main.java.com.example.android.employeesmanagementapp.utils.AppUtils.java", "BodyUseAPI": ["android.view.View.getTag()", "android.os.Bundle.putLong(DatePickerDialogFragment.KEY_DISPLAY_DATE,long)", "((java.util.Date) (view.getTag())).getTime()"], "Fixed commit": "f97fff204d00402f04c7b5e4b1ec1227daf30817", "Url": "https://api.github.com/repos/MostafaYousry/Ultimate-Manager", "Date": "2018-08-20T01:24:52Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((view.getTag()) != null) bundle.putLong(TimePickerFragment.KEY_DISPLAY_TIME, ((java.util.Date) (view.getTag())).getTime()); else bundle.putLong(TimePickerFragment.KEY_DISPLAY_TIME, new java.util.Date().getTime());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8472/buggy-version/app.src.main.java.com.example.android.employeesmanagementapp.utils.AppUtils.java", "BodyUseAPI": ["android.view.View.getTag()", "android.os.Bundle.putLong(TimePickerFragment.KEY_DISPLAY_TIME,long)", "((java.util.Date) (view.getTag())).getTime()"], "Fixed commit": "f97fff204d00402f04c7b5e4b1ec1227daf30817", "Url": "https://api.github.com/repos/MostafaYousry/Ultimate-Manager", "Date": "2018-08-20T01:24:52Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fab == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9056/buggy-version/app.src.main.java.linusfessler.alarmtiles.fragments.SchedulerFragment.java", "BodyUseAPI": [], "Fixed commit": "af230a3081c1a4b4f41930d573098c413e452f03", "Url": "https://api.github.com/repos/linusfessler/alarm-tiles", "Date": "2018-01-02T10:24:36Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["LaneEvent.getCumulScore()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((lescores[k][i]) != 0) scoreLabel[k][i].setText(new java.lang.Integer(lescores[k][i]).toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6393/buggy-version/src.LaneView.java", "BodyUseAPI": ["java.lang.Integer.toString()", "javax.swing.JLabel.setText(java.lang.String)"], "Fixed commit": "794b3a4e80bc08db34000386b41137cd807bae2f", "Url": "https://api.github.com/repos/olucomedy/G5Refactoring", "Date": "2018-04-23T12:51:49Z"},
{"Line": "=>567", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.sling.api.resource.ResourceResolver.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (candidatePathResource != null) { return candidatePathResource; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9727/buggy-version/bundle.src.main.java.com.adobe.acs.commons.errorpagehandler.impl.ErrorPageHandlerImpl.java", "BodyUseAPI": [], "Fixed commit": "3a416fad8c4ef11b6bf0083a3b4c39571bc66f74", "Url": "https://api.github.com/repos/kwin/acs-aem-commons", "Date": "2018-09-26T13:43:39Z"},
{"Line": "=>441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (allowBroadcast) { super.publishChosenWiis(model.getPossibleWiis()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2086/buggy-version/src.client.ClientController.java", "BodyUseAPI": [], "Fixed commit": "9bbe9314572ad303ba48deaf708ab1e610f12a92", "Url": "https://api.github.com/repos/mcalzaferri/Schieber", "Date": "2018-05-23T21:37:45Z"},
{"Line": "=>869", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(de.gebit.integrity.scoping.DSLScopeProvider.insideFullBuildCycle)) { java.util.List<org.eclipse.xtext.resource.IEObjectDescription> tempImportedGlobalVariablesFromLocalPackages = new java.util.ArrayList<org.eclipse.xtext.resource.IEObjectDescription>(); for (de.gebit.integrity.dsl.Statement tempStatement : tempRootModel.getStatements()) { if (tempStatement instanceof de.gebit.integrity.dsl.PackageDefinition) { for (de.gebit.integrity.dsl.PackageStatement tempPackageStatement : ((de.gebit.integrity.dsl.PackageDefinition) (tempStatement)).getStatements()) { if (tempPackageStatement instanceof de.gebit.integrity.dsl.VariableDefinition) { tempImportedGlobalVariablesFromLocalPackages.add(org.eclipse.xtext.resource.EObjectDescription.create(((de.gebit.integrity.dsl.VariableDefinition) (tempPackageStatement)).getName().getName(), ((de.gebit.integrity.dsl.VariableDefinition) (tempPackageStatement)).getName())); }else if (tempPackageStatement instanceof de.gebit.integrity.dsl.ConstantDefinition) { tempImportedGlobalVariablesFromLocalPackages.add(org.eclipse.xtext.resource.EObjectDescription.create(((de.gebit.integrity.dsl.ConstantDefinition) (tempPackageStatement)).getName().getName(), ((de.gebit.integrity.dsl.ConstantDefinition) (tempPackageStatement)).getName())); } } } } tempScope = new org.eclipse.xtext.scoping.impl.SimpleScope(tempImportedGlobalVariablesScope, tempImportedGlobalVariablesFromLocalPackages); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7432/buggy-version/de.gebit.integrity.dsl.src.de.gebit.integrity.scoping.DSLScopeProvider.java", "BodyUseAPI": [], "Fixed commit": "fc804dc5f031ff5d30c2d62204ee07830915b52f", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2018-01-26T14:29:06Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((checkarray[i]) == 0) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9602/buggy-version/app.src.main.java.cn.ac.futurenet.vitype.keyboard.TypeSnapShot.SnapShot.java", "BodyUseAPI": [], "Fixed commit": "e2e36e784151a670a4b5f7b6da9f1cd2ba9b8cb0", "Url": "https://api.github.com/repos/IoT-SZU/ViType-demo-android-wear", "Date": "2018-06-28T14:45:49Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ClassLoader.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (url == null) { return new java.security.cert.X509Certificate[]{ }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6628/buggy-version/psd2-validator.src.main.java.de.adorsys.psd2.validator.certificate.CertificateUtils.java", "BodyUseAPI": [], "Fixed commit": "b82fe0ffe6ca6ed5b361187588741fce929b051c", "Url": "https://api.github.com/repos/adorsys/xs2a", "Date": "2018-05-17T13:51:36Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.isEmpty(title))) { info.append(\"<tr>\"); info.append(\"<th class = 'attr' colspan = '2'>\").append(title).append(\"</th>\"); info.append(\"</tr>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/847/buggy-version/eca-client.src.main.java.eca.gui.service.ClassifierInputOptionsService.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "873699d2187581af40931a4d6cb511db0abc4cac", "Url": "https://api.github.com/repos/Stonnos/eca", "Date": "2018-02-04T20:39:33Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((enemies.size()) > 0) { if (enemies.get(i).isAttacking()) { if (enemies.get(i).isWithinAttackRange(p1.getPlayerSprite())) { p1.takeDamage(enemies.get(i).getAttackDamage(), enemies.get(i).getBasicKnockBackStrength()); checkIfPlayerDead(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/1928/buggy-version/core.src.map.Map.java", "BodyUseAPI": ["enemies.get(i).isAttacking()", "enemies.get(i).isWithinAttackRange(p1.getPlayerSprite())", "java.util.ArrayList<entities.Entity>.get(int)", "java.util.ArrayList<entities.Entity>.get(int)", "java.lang.Character.takeDamage(enemies.get(i).getAttackDamage(),enemies.get(i).getBasicKnockBackStrength())", "java.util.ArrayList<entities.Entity>.get(int)", "java.util.ArrayList<entities.Entity>.get(int)", "enemies.get(i).getAttackDamage()", "enemies.get(i).getBasicKnockBackStrength()"], "Fixed commit": "b304b34d99ca737aa4f4ea555cbc5c3d46b18d69", "Url": "https://api.github.com/repos/CuseCose/Aeronef", "Date": "2018-08-17T17:32:22Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(BuildConfig.DEBUG)) { io.fabric.sdk.android.Fabric.with(this, new com.crashlytics.android.Crashlytics()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/1578/buggy-version/app.src.main.java.me.liaoheng.bingwallpaper.MApplication.java", "BodyUseAPI": [], "Fixed commit": "9066285bea6a7cb0d3f6dd6993e1c7d4048409df", "Url": "https://api.github.com/repos/liaoheng/BingWallpaper", "Date": "2018-01-02T10:45:12Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((iab.getOwnedItems()) != null) mIsPurchasedLive.setValue(iab.getOwnedItems().contains(itemId)); else mIsPurchasedLive.setValue(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4428/buggy-version/af-ext.src.main.java.ru.uxapps.af.iab.SinglePurchaseHelperImp.java", "BodyUseAPI": ["iab.getOwnedItems().contains(java.lang.String)", "ru.uxapps.af.iab.Iab.getOwnedItems()", "android.arch.lifecycle.MutableLiveData<java.lang.Boolean>.setValue(iab.getOwnedItems().contains(itemId))"], "Fixed commit": "696193fd5b71873fbb54af9fa5025799bf6007a1", "Url": "https://api.github.com/repos/j2esu/af-ux", "Date": "2018-10-16T08:55:15Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.feeyo.redis.engine.RedisEngineCtx.INSTANCE().getPoolMap().get(userCfg.getPoolId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((pool.getType()) == 1) { physicalNode = pool.getPhysicalNode(cmd, key); }else { physicalNode = pool.getPhysicalNode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8509/buggy-version/src.main.java.com.feeyo.redis.engine.manage.stat.BigLengthCollector.java", "BodyUseAPI": ["com.feeyo.redis.net.backend.pool.AbstractPool.getPhysicalNode(java.lang.String,java.lang.String)", "com.feeyo.redis.net.backend.pool.AbstractPool.getPhysicalNode()"], "Fixed commit": "32c4791bf8cb488e510214a542b98c1f403719ad", "Url": "https://api.github.com/repos/Block2/feeyo-redisproxy", "Date": "2018-01-11T07:54:26Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["top.evodb.core.heap.CharChunk.getLimit0()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (reqSize >= limit) { reqSize = limit; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7340/buggy-version/core.src.main.java.top.evodb.core.heap.CharChunk.java", "BodyUseAPI": [], "Fixed commit": "b947bbfe81891927b2bd247cacad403172f10889", "Url": "https://api.github.com/repos/evodb/evodb", "Date": "2018-04-16T06:13:19Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reqSize < (getEnd())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7340/buggy-version/core.src.main.java.top.evodb.core.heap.CharChunk.java", "BodyUseAPI": [], "Fixed commit": "b947bbfe81891927b2bd247cacad403172f10889", "Url": "https://api.github.com/repos/evodb/evodb", "Date": "2018-04-16T06:13:19Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["top.evodb.core.heap.CharChunk.getLimit0()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (newSize > limit) { newSize = limit; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7340/buggy-version/core.src.main.java.top.evodb.core.heap.CharChunk.java", "BodyUseAPI": [], "Fixed commit": "b947bbfe81891927b2bd247cacad403172f10889", "Url": "https://api.github.com/repos/evodb/evodb", "Date": "2018-04-16T06:13:19Z"},
{"Line": "=>836", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (c0 == '`') { normalizeName = normalizeName.replaceAll(\"`\\\\.`\", \".\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5425/buggy-version/src.main.java.com.alibaba.druid.sql.SQLUtils.java", "BodyUseAPI": [], "Fixed commit": "7ced41022881aa4796ab4779b98d82b89a022300", "Url": "https://api.github.com/repos/FlakyTestDetection/druid", "Date": "2018-02-04T05:59:16Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (graphType == (Constants.MONTHLY_GRAPH)) { cal.set(java.util.Calendar.DAY_OF_MONTH, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4441/buggy-version/ColorfulDays.app.src.main.java.com.zhengxunw.colorfuldays.commons.GraphTab.java", "BodyUseAPI": [], "Fixed commit": "1f30ba7ba4a02d69df19df273bf9648098c5be99", "Url": "https://api.github.com/repos/zenXun/colorful-days-android", "Date": "2018-04-15T19:25:27Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gwt.user.client.ui.TextBox.getName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((name != null) && (name.equals(\"expression\"))) { if ((text != null) && (!(text.isEmpty()))) { text = text.replaceAll(\"\\\\+\", \"_ps_\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/77/buggy-version/JavaSource.gov.noaa.pmel.tmap.las.client.laswidget.OptionsWidget.java", "BodyUseAPI": [], "Fixed commit": "47d64f46a43ae713acfd8a635ee24893ba5748bf", "Url": "https://api.github.com/repos/NOAA-PMEL/LAS", "Date": "2018-10-24T16:35:36Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jdom.Element.getAttributeValue(java.lang.String)", "org.jdom.Element.getChildText(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((type.equals(\"ferret\")) && (name.equals(\"expression\"))) { if ((value != null) && (!(value.isEmpty()))) { value = value.replaceAll(\"_ps_\", \"+\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/77/buggy-version/JavaSource.gov.noaa.pmel.tmap.las.jdom.LASBackendRequest.java", "BodyUseAPI": [], "Fixed commit": "47d64f46a43ae713acfd8a635ee24893ba5748bf", "Url": "https://api.github.com/repos/NOAA-PMEL/LAS", "Date": "2018-10-24T16:35:36Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(orderBooks.containsKey(name))) { market = new fractalfintech.orderbook.OrderBook(name); orderBooks.put(name, market); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9505/buggy-version/src.main.java.fractalfintech.orderbook.MarketList.java", "BodyUseAPI": ["java.util.Map<java.lang.String, fractalfintech.orderbook.OrderBook>.put(java.lang.String,fractalfintech.orderbook.OrderBook)"], "Fixed commit": "e077b9c8a91f7c69c248e5d689ea44a5bfb19860", "Url": "https://api.github.com/repos/FractalFinTech/OrderBook", "Date": "2018-05-07T07:04:36Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.marcanti.ecommerce.dao.CommandeGroupeeDAO.getIdDerniereCdeGoupee(userSessionBean.getIdOrga())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (cmdgroupeeId != null) { com.marcanti.ecommerce.model.CommandeGroupee currentCmdGroupee = commandeGroupeeDAO.find(cmdgroupeeId); com.marcanti.ecommerce.model.Membre membre = membreDAO.find(userSessionBean.getIdMembre()); if ((membre != null) && (currentCmdGroupee != null)) { commandeIndividuel = commandeIndividuelleDAO.getCommandeIndividuellByMembreAndCmdGroupe(membre, currentCmdGroupee); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9094/buggy-version/src.main.java.com.marcanti.ecommerce.service.actions.impl.PanierServiceActionImpl.java", "BodyUseAPI": ["com.marcanti.ecommerce.dao.CommandeGroupeeDAO.find(java.lang.Long)"], "Fixed commit": "e82e4d63d72d14d8f5c1881c63b2077bb4091523", "Url": "https://api.github.com/repos/Lezreg/eMarcanti", "Date": "2018-03-22T21:37:42Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((principal) < 0) { errorMessage = (errorMessage) + \"Principal value cannot be negative. \\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8621/buggy-version/studentCalc3.src.ctrl.Start.java", "BodyUseAPI": [], "Fixed commit": "a4f88fddc66f33546064e6796e8477ac90168480", "Url": "https://api.github.com/repos/SaeedS28/EECS4413", "Date": "2018-01-29T18:13:40Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((interest) < 0) { errorMessage = (errorMessage) + \"Interest value cannot be negative.\\n \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8621/buggy-version/studentCalc3.src.ctrl.Start.java", "BodyUseAPI": [], "Fixed commit": "a4f88fddc66f33546064e6796e8477ac90168480", "Url": "https://api.github.com/repos/SaeedS28/EECS4413", "Date": "2018-01-29T18:13:40Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((period) < 0) { errorMessage = (errorMessage) + \"Period value cannot be negative. \\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8621/buggy-version/studentCalc3.src.ctrl.Start.java", "BodyUseAPI": [], "Fixed commit": "a4f88fddc66f33546064e6796e8477ac90168480", "Url": "https://api.github.com/repos/SaeedS28/EECS4413", "Date": "2018-01-29T18:13:40Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.currentTimeMillis()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sunriseTime < currentTime) { sunriseTime += (3600L * 24L) * 1000L; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/1059/buggy-version/app.src.main.java.com.solaomi.sunrise.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "93582e101c3577c0c55becc998180c69b86e2393", "Url": "https://api.github.com/repos/SolaOmi/Sunrise", "Date": "2018-01-15T19:38:58Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(convKey.isEmpty())) connection.readMessage(convKey);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7262/buggy-version/src.application.Conversation_View_controller.java", "BodyUseAPI": ["connection.ServerConnection.readMessage(java.lang.String)"], "Fixed commit": "36d9a2e3a02d580a86ce3fad63b35c58f3e6f220", "Url": "https://api.github.com/repos/JohnPaul44/cen3031project", "Date": "2018-04-10T19:54:46Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lastName.length()) < 7) { for (int x = 0; x < (lastName.length()); x++) { temp += (lastName.charAt(x)) + \"\"; } res = res + temp; res = res.toLowerCase(); }else { res = (firstName.substring(0, 1)) + lastName; res = res.substring(0, 8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7820/buggy-version/src.StringUtils.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.lang.String.length()"], "Fixed commit": "5708eb8bc69aa9371432d571ff1186d0fa01db3c", "Url": "https://api.github.com/repos/Purdue-CS193/lab-3-agladde", "Date": "2018-09-27T13:37:19Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (daysToRepeat[i]) { android.app.PendingIntent pendingIntent = android.app.PendingIntent.getBroadcast(context, notificationIds.get(i), intent, PendingIntent.FLAG_UPDATE_CURRENT); com.example.techbate.capstonestage2.notification.NotificationHelper.scheduleAlarm((i + 1), context, pendingIntent, calendar); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5397/buggy-version/app.src.main.java.com.example.techbate.capstonestage2.notification.NotificationHelper.java", "BodyUseAPI": ["com.example.techbate.capstonestage2.notification.NotificationHelper.scheduleAlarm(int,android.content.Context,android.app.PendingIntent,java.util.Calendar)", "java.util.List<java.lang.Integer>.get(int)", "android.app.PendingIntent.getBroadcast(android.content.Context,java.lang.Integer,android.content.Intent,PendingIntent.FLAG_UPDATE_CURRENT)"], "Fixed commit": "f9fa9840b845dd7f16c6e04667379d9c7e630bda", "Url": "https://api.github.com/repos/syeuddd/CapstoneStage2", "Date": "2018-10-23T22:36:15Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((strongPrecond.getExpressions(0).equals(weakPrecond.getExpressions(0))) && (strongPrecond.getExpressions(1).equals(weakPrecond.getExpressions(1)))) if ((mergedPreconditions.get(strongPrecond).size()) <= (mergedPreconditions.get(weakPrecond).size())) mergedPreconditions.get(weakPrecond).addAll(mergedPreconditions.get(strongPrecond));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8659/buggy-version/src.java.boa.aggregators.PreconditionAggregator.java", "BodyUseAPI": ["java.util.Map<boa.types.Ast.Expression, java.util.Set<java.lang.String>>.get(boa.types.Ast.Expression)", "java.util.Map<boa.types.Ast.Expression, java.util.Set<java.lang.String>>.get(boa.types.Ast.Expression)", "java.util.Map<boa.types.Ast.Expression, java.util.Set<java.lang.String>>.get(boa.types.Ast.Expression)", "mergedPreconditions.get(strongPrecond).size()", "java.util.Map<boa.types.Ast.Expression, java.util.Set<java.lang.String>>.get(boa.types.Ast.Expression)", "mergedPreconditions.get(weakPrecond).size()", "mergedPreconditions.get(weakPrecond).addAll(mergedPreconditions.get(strongPrecond))"], "Fixed commit": "bdd4f4bf336ede3ae9411cc43ed913bccd2a7f2e", "Url": "https://api.github.com/repos/boalang/compiler", "Date": "2018-02-06T01:51:41Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((strongPrecond.getExpressions(0).equals(weakPrecond.getExpressions(0))) && (strongPrecond.getExpressions(1).equals(weakPrecond.getExpressions(1)))) if ((mergedPreconditions.get(strongPrecond).size()) <= (mergedPreconditions.get(weakPrecond).size())) { mergedPreconditions.get(weakPrecond).addAll(mergedPreconditions.get(strongPrecond)); mergedPreconditions.get(strongPrecond).clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8659/buggy-version/src.java.boa.aggregators.PreconditionAggregator.java", "BodyUseAPI": ["java.util.Map<boa.types.Ast.Expression, java.util.Set<java.lang.String>>.get(boa.types.Ast.Expression)", "mergedPreconditions.get(weakPrecond).addAll(mergedPreconditions.get(strongPrecond))", "java.util.Map<boa.types.Ast.Expression, java.util.Set<java.lang.String>>.get(boa.types.Ast.Expression)", "java.util.Map<boa.types.Ast.Expression, java.util.Set<java.lang.String>>.get(boa.types.Ast.Expression)", "mergedPreconditions.get(strongPrecond).clear()", "mergedPreconditions.get(strongPrecond).size()", "java.util.Map<boa.types.Ast.Expression, java.util.Set<java.lang.String>>.get(boa.types.Ast.Expression)", "mergedPreconditions.get(weakPrecond).size()", "java.util.Map<boa.types.Ast.Expression, java.util.Set<java.lang.String>>.get(boa.types.Ast.Expression)"], "Fixed commit": "bdd4f4bf336ede3ae9411cc43ed913bccd2a7f2e", "Url": "https://api.github.com/repos/boalang/compiler", "Date": "2018-02-06T01:51:41Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.weaverplatform.postgresql.controllers.DatabaseController.isLegalDatabaseName(database))) throw new com.weaverplatform.postgresql.util.WeaverError(443, (\"Illegal database name: \" + database));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8244/buggy-version/src.main.java.com.weaverplatform.postgresql.database.Postgres.java", "BodyUseAPI": [], "Fixed commit": "a54cb03d936b37af0734e147ff9f02024b053dc2", "Url": "https://api.github.com/repos/weaverplatform/weaver-database-postgresql", "Date": "2018-03-26T08:16:54Z"},
{"Line": "=>819", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (unknownWords.isEmpty()) { unknownWords.add(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7487/buggy-version/OsmAnd-java.src.main.java.net.osmand.search.core.SearchCoreFactory.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "7bf70697a696e21b0c97e631cd22ad20c7c40d92", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2018-09-27T08:11:21Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((projectDevice.getActualDevice()) != null) { for (io.makerplayground.device.Property property : projectDevice.getActualDevice().getProperty()) { java.lang.String value = projectDevice.getPropertyValue(property); jsonGenerator.writeStartObject(); jsonGenerator.writeStringField(\"name\", property.getName()); jsonGenerator.writeStringField(\"value\", value); jsonGenerator.writeEndObject(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8914/buggy-version/src.main.java.io.makerplayground.project.ProjectDeviceSerializer.java", "BodyUseAPI": ["io.makerplayground.project.ProjectDevice.getActualDevice()", "projectDevice.getActualDevice().getProperty()", "io.makerplayground.project.ProjectDevice.getPropertyValue(io.makerplayground.device.Property)"], "Fixed commit": "0ff4d40fee6d60baeec665ed98bc591b5786c2f0", "Url": "https://api.github.com/repos/InGarage/MakerPlayGround", "Date": "2018-10-02T12:52:26Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value instanceof com.velocitypowered.api.proxy.messages.MinecraftChannelIdentifier) { ids.add(value.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5499/buggy-version/proxy.src.main.java.com.velocitypowered.proxy.util.VelocityChannelRegistrar.java", "BodyUseAPI": ["com.velocitypowered.api.proxy.messages.ChannelIdentifier.getId()", "java.util.Collection<java.lang.String>.add(value.getId())"], "Fixed commit": "5af09f906a197769735cf5fe9cb13b06f4c3c3f7", "Url": "https://api.github.com/repos/VelocityPowered/Velocity", "Date": "2018-09-29T18:53:04Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((iServerThreadManagerListener) != null) { iServerThreadManagerListener.shutDown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3353/buggy-version/src.com.hb.pocket.server.thread.ServerReadThread.java", "BodyUseAPI": [], "Fixed commit": "12c9170ae64583214f75c1b381ce5f61784090a0", "Url": "https://api.github.com/repos/hbinboy/PocketSocketPipeline", "Date": "2018-07-10T07:41:27Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((responseString.length()) > 1) responseString.setLength(((responseString.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9840/buggy-version/app.src.main.java.com.rohithyeravothula.homophones.MainActivity.java", "BodyUseAPI": ["java.lang.StringBuilder.setLength(int)", "java.lang.StringBuilder.length()"], "Fixed commit": "0457964d2b8b7a0c61c04c5a4994fecca76e99e0", "Url": "https://api.github.com/repos/Rohithyeravothula/Homonyms", "Date": "2018-08-13T07:02:25Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["app.tasknearby.yashcreations.com.tasknearby.models.TaskModel.getEndDate()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((endDate != null) && ((endDate.compareTo(org.joda.time.LocalDate.fromDateFields(new java.util.Date()))) == 0)) { return app.tasknearby.yashcreations.com.tasknearby.utils.TaskStateUtil.STATE_EXPIRED; }else { return app.tasknearby.yashcreations.com.tasknearby.utils.TaskStateUtil.STATE_UPCOMING; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9376/buggy-version/app.src.main.java.app.tasknearby.yashcreations.com.tasknearby.utils.TaskStateUtil.java", "BodyUseAPI": [], "Fixed commit": "2b987dd25bb8b4498eed4f5dfaba8861e00515f2", "Url": "https://api.github.com/repos/vermayash8/TaskNearby", "Date": "2018-01-20T14:29:58Z"},
{"Line": "=>725", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (odd) { last -= 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9251/buggy-version/net.solarnetwork.node.io.modbus.src.net.solarnetwork.node.io.modbus.ModbusData.java", "BodyUseAPI": [], "Fixed commit": "473ce38fd91f1638683bdfd99a6d060e6879b4bb", "Url": "https://api.github.com/repos/SolarNetwork/solarnetwork-node", "Date": "2018-05-17T19:45:47Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mainGUI.getCurrentEvent().getStart().getMinute()) < 10) { startTimeBuilder.append(\"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9244/buggy-version/src.main.java.edu.oakland.GUI.UpdateEventController.java", "BodyUseAPI": [], "Fixed commit": "9e2b10d2c4b3b1bf93451cb8b9c6557d1a47ff2e", "Url": "https://api.github.com/repos/eramocki/Calendar1998", "Date": "2018-03-26T20:12:09Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mainGUI.getCurrentEvent().getEnd().getMinute()) < 10) { endTimeBuilder.append(\"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9244/buggy-version/src.main.java.edu.oakland.GUI.UpdateEventController.java", "BodyUseAPI": [], "Fixed commit": "9e2b10d2c4b3b1bf93451cb8b9c6557d1a47ff2e", "Url": "https://api.github.com/repos/eramocki/Calendar1998", "Date": "2018-03-26T20:12:09Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((unit.getType()) == (UnitType.Terran_Barracks)) { helpers.BuildingsManager.MilitaryBuildings.remove(unit); helpers.ResourcesManager.MilitaryMineralUnitCost -= 50; (helpers.BuildingsManager.BarracksCount)--; }else if ((unit.getType()) == (UnitType.Terran_Supply_Depot)) { helpers.ResourcesManager.PotentialSupply -= UnitType.Terran_Supply_Depot.supplyProvided(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/607/buggy-version/src.helpers.BuildingsManager.java", "BodyUseAPI": ["java.util.List<helpers.Unit>.remove(helpers.Unit)", "helpers.Unit.getType()"], "Fixed commit": "dcad41d93d93a2d5483a8d8f04eae3d763dce90a", "Url": "https://api.github.com/repos/allscorpion/StarcraftBW-AI", "Date": "2018-05-03T08:51:13Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.landyking.link.util.Texts.toStr(request.getAttribute(name))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.github.landyking.link.util.Texts.hasText(attribute)) { return attribute; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/1798/buggy-version/link-core.src.main.java.com.github.landyking.link.pot.WebInputPot.java", "BodyUseAPI": [], "Fixed commit": "cbea81e6fd6ac194a4e1afe5dd838024cca04acb", "Url": "https://api.github.com/repos/landyking/link", "Date": "2018-08-30T10:43:59Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (left instanceof org.opencds.cqf.cql.runtime.Interval) { java.lang.Object startEquivalence = org.opencds.cqf.cql.elm.execution.EquivalentEvaluator.equivalent(((org.opencds.cqf.cql.runtime.Interval) (left)).getStart(), ((org.opencds.cqf.cql.runtime.Interval) (right)).getStart()); java.lang.Object endEquivalence = org.opencds.cqf.cql.elm.execution.EquivalentEvaluator.equivalent(((org.opencds.cqf.cql.runtime.Interval) (left)).getEnd(), ((org.opencds.cqf.cql.runtime.Interval) (right)).getEnd()); return ((startEquivalence == null) && (endEquivalence == null)) || ((((startEquivalence != null) && (endEquivalence != null)) && ((java.lang.Boolean) (startEquivalence))) && ((java.lang.Boolean) (endEquivalence))); }else if (left instanceof org.opencds.cqf.cql.runtime.Tuple) { java.util.HashMap<java.lang.String, java.lang.Object> leftMap = ((org.opencds.cqf.cql.runtime.Tuple) (left)).getElements(); java.util.HashMap<java.lang.String, java.lang.Object> rightMap = ((org.opencds.cqf.cql.runtime.Tuple) (right)).getElements(); for (java.lang.String key : rightMap.keySet()) { if (leftMap.containsKey(key)) { java.lang.Object areKeyValsSame = org.opencds.cqf.cql.elm.execution.EquivalentEvaluator.equivalent(rightMap.get(key), leftMap.get(key)); if (areKeyValsSame == null) { return null; }else if (!((java.lang.Boolean) (areKeyValsSame))) { return false; } }else { return false; } } return true; }else if ((left instanceof org.opencds.cqf.cql.runtime.DateTime) && (right instanceof org.opencds.cqf.cql.runtime.DateTime)) { org.opencds.cqf.cql.runtime.DateTime leftDT = ((org.opencds.cqf.cql.runtime.DateTime) (left)); org.opencds.cqf.cql.runtime.DateTime rightDT = ((org.opencds.cqf.cql.runtime.DateTime) (right)); if ((leftDT.getPartial().size()) != (rightDT.getPartial().size())) { return false; } for (int i = 0; i < (leftDT.getPartial().size()); ++i) { if ((leftDT.getPartial().getValue(i)) != (rightDT.getPartial().getValue(i))) { return false; } } return true; }else if ((left instanceof org.opencds.cqf.cql.runtime.Time) && (right instanceof org.opencds.cqf.cql.runtime.Time)) { org.opencds.cqf.cql.runtime.Time leftT = ((org.opencds.cqf.cql.runtime.Time) (left)); org.opencds.cqf.cql.runtime.Time rightT = ((org.opencds.cqf.cql.runtime.Time) (right)); if ((leftT.getPartial().size()) != (rightT.getPartial().size())) { return false; } for (int i = 0; i < (leftT.getPartial().size()); ++i) { if ((leftT.getPartial().getValue(i)) != (rightT.getPartial().getValue(i))) { return false; } } return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8456/buggy-version/cql-engine.src.main.java.org.opencds.cqf.cql.elm.execution.EquivalentEvaluator.java", "BodyUseAPI": [], "Fixed commit": "ffce49525175b42a0840a8a904ff573f9fdf9966", "Url": "https://api.github.com/repos/DBCG/cql_engine", "Date": "2018-02-05T05:20:19Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((com.industry.printer.object.BaseObject.mFonts) != null) && ((com.industry.printer.object.BaseObject.mFonts.length) > 0)) { mFont = com.industry.printer.object.BaseObject.mFonts[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3313/buggy-version/src.com.industry.printer.object.BaseObject.java", "BodyUseAPI": [], "Fixed commit": "04d7877228f1ddae6f0f9b3cd33a2a70619b08ac", "Url": "https://api.github.com/repos/kevin-zhaotk/Printer", "Date": "2018-06-12T06:08:16Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showOptionDialog(uk.chromis.pos.inventory.WebScrapeBookers,uk.chromis.pos.forms.AppLocal.getIntString(\"message.pricechangeaccept\"),uk.chromis.pos.forms.AppLocal.getIntString(\"Menu.Products\"),int,int,<nulltype>,java.lang.Object[],java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nSel == 2) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3009/buggy-version/src-pos.uk.chromis.pos.inventory.WebScrapeBookers.java", "BodyUseAPI": [], "Fixed commit": "1b4c0572e83c7451bd4e1c90a65a88f80c673e37", "Url": "https://api.github.com/repos/Hedydd/ChromisPOS", "Date": "2018-05-16T10:49:59Z"},
{"Line": "=>2181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.chromis.pos.inventory.WebScrapeBookers.decodeCurrentPage(uk.chromis.pos.ticket.ProductInfoExt)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (info == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3009/buggy-version/src-pos.uk.chromis.pos.inventory.ProductsEditor.java", "BodyUseAPI": [], "Fixed commit": "1b4c0572e83c7451bd4e1c90a65a88f80c673e37", "Url": "https://api.github.com/repos/Hedydd/ChromisPOS", "Date": "2018-05-16T10:49:59Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hbase.client.Table.get(org.apache.hadoop.hbase.client.Get)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((result != null) && ((result.size()) > 0)) { clusteringList = ((java.util.List<com.hzgc.dubbo.clustering.ClusteringAttribute>) (com.hzgc.util.common.ObjectUtil.byteToObject(result.getValue(ClusteringTable.ClUSTERINGINFO_COLUMNFAMILY, ClusteringTable.ClUSTERINGINFO_COLUMN_YES)))); if ((sortParam != null) && ((sortParam.length()) > 0)) { com.hzgc.util.sort.SortParam sortParams = com.hzgc.util.sort.ListUtils.getOrderStringBySort(sortParam); com.hzgc.util.sort.ListUtils.sort(clusteringList, sortParams.getSortNameArr(), sortParams.getIsAscArr()); } }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5110/buggy-version/Service.src.main.java.com.hzgc.service.clustering.ClusteringSearchServiceImpl.java", "BodyUseAPI": ["org.apache.hadoop.hbase.client.Result.getValue(ClusteringTable.ClUSTERINGINFO_COLUMNFAMILY,ClusteringTable.ClUSTERINGINFO_COLUMN_YES)", "com.hzgc.util.common.ObjectUtil.byteToObject(result.getValue(ClusteringTable.ClUSTERINGINFO_COLUMNFAMILY, ClusteringTable.ClUSTERINGINFO_COLUMN_YES))"], "Fixed commit": "69e38779e0482f9f717ff07f478716ba6a84681d", "Url": "https://api.github.com/repos/Zz897426182/RealTimeFaceCompare", "Date": "2018-03-23T00:58:04Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["searchRequestBuilder.get().getHits().getHits()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((results != null) && ((results.length) > 0)) { for (org.elasticsearch.search.SearchHit result : results) { alarmIdList.add(((int) (result.getSource().get(DynamicTable.ALARM_ID)))); } }else { com.hzgc.service.clustering.ClusteringSearchServiceImpl.LOG.info(\"no data get from es\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5110/buggy-version/Service.src.main.java.com.hzgc.service.clustering.ClusteringSearchServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "69e38779e0482f9f717ff07f478716ba6a84681d", "Url": "https://api.github.com/repos/Zz897426182/RealTimeFaceCompare", "Date": "2018-03-23T00:58:04Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data < (-100)) { data = java.lang.Integer.MAX_VALUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5977/buggy-version/src.main.java.com.eziosoft.floatzel.Util.Database.java", "BodyUseAPI": [], "Fixed commit": "f2675b1a4c73d67365fc52d4ddaaf85cc984dac5", "Url": "https://api.github.com/repos/EzioisAwesome56/Floatzel", "Date": "2018-08-29T00:24:42Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bookMode) { text.setColor(\"black\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/1974/buggy-version/src.io.github.skylerdev.McWiki.CommandWiki.java", "BodyUseAPI": [], "Fixed commit": "dbb9dba8e594c8d3de0e63afccb210c4e57d0ae3", "Url": "https://api.github.com/repos/skylerdev/McWiki", "Date": "2018-03-14T08:04:01Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cover.isOpaqueCube()) eState = ((net.minecraftforge.common.property.IExtendedBlockState) (state));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5861/buggy-version/src.java.cd4017be.lib.block.BlockCoveredPipe.java", "BodyUseAPI": [], "Fixed commit": "ed611ed53c89f7387787b14e9bec5d5e17b8a852", "Url": "https://api.github.com/repos/CD4017BE/CD4017BE_lib", "Date": "2018-01-22T16:54:01Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((programName.equals(\"ehentai\")) || (programName.equals(\"e-hentai\"))) { try { new Ehentai(command, msgChannel, user); } catch (Exceptions.InvalidTokenException exc) { exc.printStackTrace(); } catch (java.io.IOException exc) { exc.printStackTrace(); } catch (java.util.NoSuchElementException exc) { java.lang.System.out.println(\"Token problem here.\"); exc.printStackTrace(); } }else if (programName.equals(\"danbooru\")) { try { new Danbooru(command, msgChannel, user); } catch (Exceptions.InvalidTokenException exc) { exc.printStackTrace(); } catch (java.io.IOException exc) { exc.printStackTrace(); } catch (java.util.NoSuchElementException exc) { java.lang.System.out.println(\"Token problem here.\"); exc.printStackTrace(); } }else if (programName.equals(\"konachan\")) { try { new Konachan(command, msgChannel, user); } catch (Exceptions.InvalidTokenException exc) { exc.printStackTrace(); } catch (java.io.IOException exc) { exc.printStackTrace(); } catch (java.util.NoSuchElementException exc) { java.lang.System.out.println(\"Token problem here.\"); exc.printStackTrace(); } }else if (programName.equals(\"clear\")) { try { new Clear(java.lang.Integer.parseInt(command.nextToken()), msgChannel); } catch (java.lang.Exception exc) { } }else if (programName.equals(\"sudo\")) { if (!((((user.getName()) + '#') + (user.getDiscriminator())).equals(\"Slipper#3012\"))) { msgChannel.sendMessage((\"You are not a super user. \" + \"This incident will be reported to the administrator of the bot.\")); return; } java.lang.String sudoProgramName = command.nextToken(); if (sudoProgramName.equals(\"shutdown\")) { msgChannel.sendMessage(\"Shutting down the system...\\r\\n\").queue(); java.lang.System.exit(0); }else if (sudoProgramName.equals(\"clear\")) { try { java.lang.Runtime.getRuntime().exec(\"clear\"); } catch (java.io.IOException e) { e.printStackTrace(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4252/buggy-version/src.main.java.App.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "08e3ca1342d92e669dd1fd94847dfeb2b0a1b97a", "Url": "https://api.github.com/repos/TheSlipper/Kitsune", "Date": "2018-08-10T01:27:51Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(Client.TCPClient.debug)) { Client.Client client = new Client.Client(new Client.TCPClient(Client.TCPClient.s_serverHost, Client.TCPClient.s_serverPort)); client.start(); }else { Client.ClientTest client = new Client.ClientTest(new Client.TCPClient(Client.TCPClient.s_serverHost, Client.TCPClient.s_serverPort)); client.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/664/buggy-version/TCP.Client.Client.TCPClient.java", "BodyUseAPI": [], "Fixed commit": "dd844162ef5c42a6a19fc667f150ea399198595c", "Url": "https://api.github.com/repos/sheldon-benard/DistributedSystem", "Date": "2018-09-30T15:50:34Z"},
{"Line": "=>1055", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (roleId != null) input.put(\"roleId\", roleId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5877/buggy-version/ofbiz-release12.04.hot-deploy.bkeuniv.src.org.ofbiz.bkeuniv.paperdeclaration.PaperDeclarationService.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.String)"], "Fixed commit": "e6e1113be34a7e623b38aad94374aa60bda66fbd", "Url": "https://api.github.com/repos/dungkhmt/bkofbiz", "Date": "2018-03-15T08:48:16Z"},
{"Line": "=>990", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, ? extends java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((roleIds != null) && ((roleIds.size()) > 0)) roleId = ((java.lang.String) (roleIds.get(0)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5877/buggy-version/ofbiz-release12.04.hot-deploy.bkeuniv.src.org.ofbiz.bkeuniv.paperdeclaration.PaperDeclarationService.java", "BodyUseAPI": ["java.util.List<java.lang.Object>.get(int)"], "Fixed commit": "e6e1113be34a7e623b38aad94374aa60bda66fbd", "Url": "https://api.github.com/repos/dungkhmt/bkofbiz", "Date": "2018-03-15T08:48:16Z"},
{"Line": "=>1168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((roleId != null) && (!(roleId.equals(\"\")))) { java.util.List<org.ofbiz.entity.condition.EntityCondition> conds = javolution.util.FastList.newInstance(); conds.add(org.ofbiz.entity.condition.EntityCondition.makeCondition(\"paperId\", paperId)); conds.add(org.ofbiz.entity.condition.EntityCondition.makeCondition(\"staffId\", staffId)); java.util.List<org.ofbiz.entity.GenericValue> spl = delegator.findList(\"StaffPaperDeclaration\", org.ofbiz.entity.condition.EntityCondition.makeCondition(conds), null, null, null, false); if ((spl != null) && ((spl.size()) > 0)) { for (org.ofbiz.entity.GenericValue sp : spl) { org.ofbiz.base.util.Debug.log(((org.ofbiz.bkeuniv.paperdeclaration.PaperDeclarationService.module) + \"::updatePaper, START update role\")); sp.put(\"roleId\", roleId); delegator.store(sp); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5877/buggy-version/ofbiz-release12.04.hot-deploy.bkeuniv.src.org.ofbiz.bkeuniv.paperdeclaration.PaperDeclarationService.java", "BodyUseAPI": ["org.ofbiz.entity.GenericValue.put(java.lang.String,java.lang.String)"], "Fixed commit": "e6e1113be34a7e623b38aad94374aa60bda66fbd", "Url": "https://api.github.com/repos/dungkhmt/bkofbiz", "Date": "2018-03-15T08:48:16Z"},
{"Line": "=>1095", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, ? extends java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((roleIds != null) && ((roleIds.size()) > 0)) roleId = ((java.lang.String) (roleIds.get(0)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5877/buggy-version/ofbiz-release12.04.hot-deploy.bkeuniv.src.org.ofbiz.bkeuniv.paperdeclaration.PaperDeclarationService.java", "BodyUseAPI": ["java.util.List<java.lang.Object>.get(int)"], "Fixed commit": "e6e1113be34a7e623b38aad94374aa60bda66fbd", "Url": "https://api.github.com/repos/dungkhmt/bkofbiz", "Date": "2018-03-15T08:48:16Z"},
{"Line": "=>1266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (roleId != null) gv.put(\"roleId\", roleId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5877/buggy-version/ofbiz-release12.04.hot-deploy.bkeuniv.src.org.ofbiz.bkeuniv.paperdeclaration.PaperDeclarationUtil.java", "BodyUseAPI": ["org.ofbiz.entity.GenericValue.put(java.lang.String,java.lang.String)"], "Fixed commit": "e6e1113be34a7e623b38aad94374aa60bda66fbd", "Url": "https://api.github.com/repos/dungkhmt/bkofbiz", "Date": "2018-03-15T08:48:16Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getTitle()) == \"\u00c1rea Cura\") { isDefaultDialog = true; selectedPosition = 4; }else if ((item.getTitle()) == \"Mat\u00e3o\") { isDefaultDialog = true; selectedPosition = 5; }else if ((item.getTitle()) == \"Rural\") { isDefaultDialog = true; selectedPosition = 6; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9403/buggy-version/app.src.main.java.com.jmp.atendimentoaocidadao.fragments.ContactsFragment.java", "BodyUseAPI": ["android.view.MenuItem.getTitle()", "android.view.MenuItem.getTitle()"], "Fixed commit": "e4af0a7da123a7f3b964d301c881041165df770e", "Url": "https://api.github.com/repos/joaoroberto01/AtendimentoAoCidadao", "Date": "2018-03-07T19:45:20Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (waitOver) { com.gstrzal.insects.tools.ScreenManager.getInstance().showScreen(ScreenEnum.GAME_SCREEN, game, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4017/buggy-version/core.src.com.gstrzal.insects.screens.StoryScreen.java", "BodyUseAPI": [], "Fixed commit": "5b7b3ec1a596886635cd030864b0fda69dee4768", "Url": "https://api.github.com/repos/GabrielStrzal/InsectsLifeQuest", "Date": "2018-04-11T01:25:01Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((phoneIntent.resolveActivity(getPackageManager())) != null) { startActivity(phoneIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5856/buggy-version/app.src.main.java.com.example.natasa.inventoryapp.EditorActivity.java", "BodyUseAPI": ["com.example.natasa.inventoryapp.EditorActivity.4.startActivity(android.content.Intent)"], "Fixed commit": "d5ae95918e7612ea12760c94ce152e6da3d9c4eb", "Url": "https://api.github.com/repos/natasak/InventoryApp", "Date": "2018-08-05T06:39:45Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.name().startsWith(\"STRING\")) return \" DEFAULT ''\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6618/buggy-version/src.jdz.bukkitUtils.sql.SqlColumnType.java", "BodyUseAPI": [], "Fixed commit": "da80ae93ed5450f93b239b3d078348c3440a1460", "Url": "https://api.github.com/repos/Jonodonozym/JonosBukkitUtils", "Date": "2018-01-27T00:06:51Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jajimenez.workpage.TaskListHostActivity.getActionMode()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (mode != null) mode.finish();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5506/buggy-version/workpage.app.src.main.java.jajimenez.workpage.DateTaskListFragment.java", "BodyUseAPI": ["android.view.ActionMode.finish()"], "Fixed commit": "ffa1219da954f1a3865a6947ac0a249a09e5954a", "Url": "https://api.github.com/repos/jajimenez/workpage", "Date": "2018-01-30T08:17:04Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tech.tablesaw.api.Table.create((((\"Crosstab Counts: \" + (column1.name())) + \" x \") + (column2.name())))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (t.column(0).type().equals(ColumnType.STRING)) { t.column(0).appendCell(\"Total\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/309/buggy-version/core.src.main.java.tech.tablesaw.aggregate.CrossTab.java", "BodyUseAPI": ["tech.tablesaw.api.Table.column(int)", "t.column(0).appendCell(java.lang.String)"], "Fixed commit": "7c7203f47af4f3020691fc94149b8703c657ca40", "Url": "https://api.github.com/repos/jtablesaw/tablesaw", "Date": "2018-04-11T16:33:22Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mygdx.game.comp460game.serverMode) { state.loadLevel((\"maps/\" + (level))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7391/buggy-version/core.src.com.mygdx.game.event.LevelWarp.java", "BodyUseAPI": [], "Fixed commit": "f22a1eff7271aff712ac1c00f3bfc03f04bc020e", "Url": "https://api.github.com/repos/irontissue/COMP460Ideas", "Date": "2018-02-26T20:28:08Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tickets.client.gui.presenters.GamePresenter.getFaceUpCards()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((cards.get(i)) == null) { faceUpCard[i].setImageResource(R.color.transparent); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4099/buggy-version/app.src.main.java.tickets.client.gui.activities.GameActivity.java", "BodyUseAPI": ["faceUpCard[i].setImageResource(R.color.transparent)"], "Fixed commit": "fc6cc016017a78e81521f55a9cc8ffc392094096", "Url": "https://api.github.com/repos/Spencer-Smith/tickets", "Date": "2018-04-18T23:31:23Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!found) { java.lang.System.out.println(((\"[WARN] There is an offer for product \" + newSku) + \", but it's not in the database! Ignoring..\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/1099/buggy-version/src.main.java.com.alexmaurizio.ITV.Business.FileLoader.java", "BodyUseAPI": [], "Fixed commit": "6b5032f3e3d944d4bc2a47f596c9ef16fa3496c3", "Url": "https://api.github.com/repos/alexmaurizio/ITV-Test", "Date": "2018-02-05T22:51:33Z"},
{"Line": "=>495", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (f2 == null) { mekhq.MekHQ.getLogger().log(this.getClass(), \"RandomFactionGenerator.UpdateBorders\", LogLevel.ERROR, (\"Invalid faction code in planets.xml: \" + f2)); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6491/buggy-version/MekHQ.src.mekhq.campaign.universe.RandomFactionGenerator.java", "BodyUseAPI": ["mekhq.MekHQ.getLogger().log(java.lang.Class<? extends mekhq.campaign.universe.RandomFactionGenerator>,java.lang.String,LogLevel.ERROR,(\"Invalid faction code in planets.xml: \" + f2))"], "Fixed commit": "e91f543a04d17681be04a65ee15176922f3f5dcd", "Url": "https://api.github.com/repos/pheonixstorm/MekHQ-storm", "Date": "2018-01-04T03:38:32Z"},
{"Line": "=>799", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(state instanceof com.github.bkhezry.searchablespinner.SearchableSpinner.SavedState)) { super.onRestoreInstanceState(state); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8939/buggy-version/persiansearchablespinner.src.main.java.com.github.bkhezry.searchablespinner.SearchableSpinner.java", "BodyUseAPI": ["android.widget.RelativeLayout.onRestoreInstanceState(android.os.Parcelable)"], "Fixed commit": "236321032c4101147fa1963e507feaa3288aae2a", "Url": "https://api.github.com/repos/bkhezry/PersianSearchableSpinner", "Date": "2018-07-21T21:06:36Z"},
{"Line": "=>1019", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.dataTable(cmd.schemaName(),cmd.tableName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tbl == null) { idx.kernalContext().cache().createMissingQueryCaches(); tbl = idx.dataTable(cmd.schemaName(), cmd.tableName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4508/buggy-version/modules.indexing.src.main.java.org.apache.ignite.internal.processors.query.h2.DmlStatementsProcessor.java", "BodyUseAPI": [], "Fixed commit": "1185993ee7cd83695388f698f18f95b43e15de06", "Url": "https://api.github.com/repos/gridgain/apache-ignite", "Date": "2018-02-15T11:00:42Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.hydrogen2oxygen.markdowntohomepage.transformator.MarkdownToHtmlTransformator.extractMarkdownDocumentAndMetaData(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((markDownDocument.getMetaData().get(\"title\")) != null) { h1Title = (\"<h1>\" + (markDownDocument.getMetaData().get(\"title\"))) + \"</h1>\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7677/buggy-version/src.main.java.net.hydrogen2oxygen.markdowntohomepage.transformator.MarkdownToHtmlTransformator.java", "BodyUseAPI": ["net.hydrogen2oxygen.markdowntohomepage.domain.MarkDownDocument.getMetaData()", "markDownDocument.getMetaData().get(java.lang.String)"], "Fixed commit": "57f74d393be7ce06527f5dda3f0445166f81b2b5", "Url": "https://api.github.com/repos/hydrogen2oxygen/markdownToHomepage", "Date": "2018-07-13T14:47:20Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.springframework.util.StringUtils.isEmpty(date)) { return null; }else { return java.time.LocalDate.parse(date, ru.javawebinar.topjava.util.DateTimeUtil.DATE_FORMATTER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/61/buggy-version/src.main.java.ru.javawebinar.topjava.util.DateTimeUtil.java", "BodyUseAPI": ["java.time.LocalDate.parse(java.lang.String,java.time.format.DateTimeFormatter)"], "Fixed commit": "7c26174723ca054fe87c19f4d47ff59dd430e62c", "Url": "https://api.github.com/repos/ArthursGitHub/topjava", "Date": "2018-03-12T17:23:21Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.springframework.util.StringUtils.isEmpty(time)) { return null; }else { return java.time.LocalTime.parse(time, ru.javawebinar.topjava.util.DateTimeUtil.TIME_FORMATTER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/61/buggy-version/src.main.java.ru.javawebinar.topjava.util.DateTimeUtil.java", "BodyUseAPI": ["java.time.LocalTime.parse(java.lang.String,java.time.format.DateTimeFormatter)"], "Fixed commit": "7c26174723ca054fe87c19f4d47ff59dd430e62c", "Url": "https://api.github.com/repos/ArthursGitHub/topjava", "Date": "2018-03-12T17:23:21Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(typesInString)) { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6387/buggy-version/mvp.src.main.java.com.quadible.mvp.ActionsCache.java", "BodyUseAPI": [], "Fixed commit": "1f18aa40a0db297ee8cffdc6707a0607728ffded", "Url": "https://api.github.com/repos/St4B/mvp", "Date": "2018-10-22T06:56:01Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parent) != null) { is = parent.getResourceAsStream(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7611/buggy-version/src.main.java.org.jboss.ws.common.utils.DelegateClassLoader.java", "BodyUseAPI": [], "Fixed commit": "54cc74b6c8eb7feab73867d6167f609afc49e548", "Url": "https://api.github.com/repos/ivassile/jbossws-common", "Date": "2018-02-15T18:08:53Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ibm.research.rdf.store.sparql11.semantics.Drivers.check(com.ibm.research.rdf.store.sparql11.semantics.BasicUniverse,com.ibm.wala.util.collections.Pair.make(f, com.ibm.wala.util.collections.Pair.make(s1, s2)))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((t.get(\"literal_languages\")) != null) { for (kodkod.instance.Tuple m : t.get(\"literal_languages\")) { if (((m.atom(1)) instanceof com.ibm.wala.util.collections.Pair) && ((((com.ibm.wala.util.collections.Pair<?, ?>) (m.atom(1))).fst) instanceof java.lang.String)) { langs.put(m.atom(0), ((java.lang.String) (((com.ibm.wala.util.collections.Pair<?, ?>) (m.atom(1))).fst))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8610/buggy-version/lsd-checker.source.com.ibm.lsd.checker.drivers.LSDExpanderBase.java", "BodyUseAPI": ["java.util.Map<java.lang.String, kodkod.instance.TupleSet>.get(java.lang.String)"], "Fixed commit": "c58632fab3a079a752b60566e8d89ba9ec8cf08a", "Url": "https://api.github.com/repos/vthost/qed", "Date": "2018-07-26T19:49:01Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((setTNT) == true) { SplashOutput.printError(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/301/buggy-version/JAVA.SplashParser.java", "BodyUseAPI": [], "Fixed commit": "d52769b0a7c5d0b4859d494401d17192ef0335cc", "Url": "https://api.github.com/repos/Oz-otR/Paradigms", "Date": "2018-02-06T21:44:00Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4493/buggy-version/src.igwmod.gui.GuiWiki.java", "BodyUseAPI": [], "Fixed commit": "63bf3cc5b9d7972fb19e8049f5bef7081988f608", "Url": "https://api.github.com/repos/MineMaarten/IGW-mod", "Date": "2018-04-14T14:11:35Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mShowAztecEditor) { android.view.View overlay = findViewById(R.id.view_overlay); android.widget.RelativeLayout.LayoutParams layoutParams = ((android.widget.RelativeLayout.LayoutParams) (overlay.getLayoutParams())); layoutParams.bottomMargin = getResources().getDimensionPixelOffset(R.dimen.aztec_format_bar_height); overlay.setLayoutParams(layoutParams); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6351/buggy-version/WordPress.src.main.java.org.wordpress.android.ui.posts.EditPostActivity.java", "BodyUseAPI": [], "Fixed commit": "74fa12b6c76e6828fd430f257ec8449898a2dc10", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2018-01-12T01:42:15Z"},
{"Line": "=>861", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (tmp.endsWith(\"\\u2026\")) { tmp = tmp.substring(0, ((tmp.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2640/buggy-version/multiline-collapsingtoolbar.src.main.java.net.opacapp.multilinecollapsingtoolbar.CollapsingTextHelper.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "c266f835466895027e536d4cfbc5e47735c23c14", "Url": "https://api.github.com/repos/SimonSchubert/multiline-collapsingtoolbar", "Date": "2018-02-27T12:08:46Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((org.apache.bcel.Const.ACC_SYNTHETIC) & (mg.getAccessFlags())) > 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5423/buggy-version/agent.replacecall.src.main.java.randoop.instrument.CallReplacementTransformer.java", "BodyUseAPI": [], "Fixed commit": "8302c0617f46a8f2ade54a3aab07d0a688ffad0a", "Url": "https://api.github.com/repos/caseyxing/randoop", "Date": "2018-05-23T19:09:58Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ElasticSearchUserController.GetUsersTask.get()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((users.size()) == 1) { return users.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/515/buggy-version/app.src.main.java.ca.ualberta.cs.w18t11.whoselineisitanyway.model.datasource.RemoteDataSource.java", "BodyUseAPI": ["java.util.ArrayList<ca.ualberta.cs.w18t11.whoselineisitanyway.model.user.User>.get(int)"], "Fixed commit": "c33b06137ec3dc5a6fc1e2b2b592e468f32a7b47", "Url": "https://api.github.com/repos/CMPUT301W18T11/WhoseLineIsItAnyway", "Date": "2018-03-24T20:19:33Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSalvaging()) { time = 600; }else { time = 90; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/1559/buggy-version/MekHQ.src.mekhq.campaign.parts.Thrusters.java", "BodyUseAPI": [], "Fixed commit": "c3d1c2cf1183b53215630e1c0f5032904a100ca5", "Url": "https://api.github.com/repos/pheonixstorm/MekHQ-storm", "Date": "2018-03-07T19:21:54Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((width != 0) && (height != 0)) { resized = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8231/buggy-version/core.src.main.java.piengine.visual.window.interpreter.WindowInterpreter.java", "BodyUseAPI": [], "Fixed commit": "b635cd037165f02d50af4362aeec12afdf6389a1", "Url": "https://api.github.com/repos/pipiczistvan/pi-engine", "Date": "2018-02-07T20:16:01Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ctx.magic.ready(Magic.Spell.TELEKINETIC_GRAB)) { ctx.input.click(665, 350, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2520/buggy-version/src.main.java.org.powerbot.bot.rt4.RandomEvents.java", "BodyUseAPI": [], "Fixed commit": "02e8a7ff401ada04769fb37f7a0a316d456f87b5", "Url": "https://api.github.com/repos/kThisIsCvpv/powerbot", "Date": "2018-02-01T12:42:45Z"},
{"Line": "=>1424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["CyObjectManager.INSTANCE.getCurrentNetworkView()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (view != null) { org.cytoscape.cyndex2.io.cxio.CxExporter.writeCartesianLayout(view, w, write_siblings, cxInfoHolder); org.cytoscape.cyndex2.io.cxio.CxExporter.writeVisualProperties(view, _visual_mapping_manager, _lexicon, w, write_siblings, cxInfoHolder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/880/buggy-version/src.main.java.org.cytoscape.cyndex2.io.cxio.CxExporter.java", "BodyUseAPI": ["org.cytoscape.cyndex2.io.cxio.CxExporter.writeVisualProperties(org.cytoscape.view.model.CyNetworkView,org.cytoscape.view.vizmap.VisualMappingManager,org.cytoscape.view.model.VisualLexicon,org.cxio.core.CxWriter,boolean,org.cytoscape.cyndex2.internal.singletons.CXInfoHolder)", "org.cytoscape.cyndex2.io.cxio.CxExporter.writeCartesianLayout(org.cytoscape.view.model.CyNetworkView,org.cxio.core.CxWriter,boolean,org.cytoscape.cyndex2.internal.singletons.CXInfoHolder)"], "Fixed commit": "6a1537aa0f72767d7aa1ff3e056af5d956dc7c64", "Url": "https://api.github.com/repos/cytoscape/cy-ndex-2", "Date": "2018-03-29T21:46:22Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.umn.cs.crisys.safety.analysis.ast.visitors.AddFaultsToNodeVisitor.findVar(node.outputs,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (out == null) { throw new edu.umn.cs.crisys.safety.analysis.SafetyException((((\"A fault defined for \" + (node.id)) + \"has a connection\") + \" that is not a valid output for this component.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/1554/buggy-version/safety_annex.plugins.edu.umn.cs.crisys.safety.analysis.src.edu.umn.cs.crisys.safety.analysis.ast.visitors.AddFaultsToNodeVisitor.java", "BodyUseAPI": [], "Fixed commit": "3e96cfbff9a1f4460c0764179de6df8804cf8641", "Url": "https://api.github.com/repos/loonwerks/AMASE", "Date": "2018-08-01T10:10:10Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(comm.getSources().contains(source))) { throw new java.lang.RuntimeException(\"Source is not in the communicator\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7913/buggy-version/twister2.comms.src.java.edu.iu.dsc.tws.comms.op.Partition.java", "BodyUseAPI": [], "Fixed commit": "73861e7a744734882be9d0b156b86380c5687f75", "Url": "https://api.github.com/repos/DSC-SPIDAL/twister2", "Date": "2018-06-17T03:27:24Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mApp.isLocationPermissionGranted()) { mMap.setMyLocationEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3103/buggy-version/iNaturalist.src.main.java.org.inaturalist.android.LocationDetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "7feca475833bb3a8a5d7d8346430f1e2f5b5ba7d", "Url": "https://api.github.com/repos/inaturalist/iNaturalistAndroid", "Date": "2018-10-24T20:45:04Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((textsDBQuery) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8032/buggy-version/app.src.main.java.org.beiwe.app.listeners.CallLogger.java", "BodyUseAPI": [], "Fixed commit": "3b2909c9d9721b5a3014c5f3126ab1bd3b483d8a", "Url": "https://api.github.com/repos/onnela-lab/beiwe-android", "Date": "2018-05-10T21:11:57Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (box.isCompletelyFilled()) return isVecInsideBox(vec.x, vec.y, vec.z);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/663/buggy-version/src.main.java.com.creativemd.littletiles.common.tiles.vec.advanced.LittleTileSlicedOrdinaryBox.java", "BodyUseAPI": [], "Fixed commit": "457734494499017bc59bc617bd42d3b99a87b0a9", "Url": "https://api.github.com/repos/CreativeMD/LittleTiles", "Date": "2018-03-05T15:21:31Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!doesCommitOffset) { databus.network.kafka.AutoRebalanceListener.log.fatal(\"Can not commit offset\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7119/buggy-version/src.databus.network.kafka.AutoRebalanceListener.java", "BodyUseAPI": [], "Fixed commit": "c47d4353a4e72dea8da0d15892d3d70e9ba75dfd", "Url": "https://api.github.com/repos/QuChunhe/databus", "Date": "2018-10-26T15:14:20Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (net.minecraftforge.fml.common.FMLCommonHandler.instance().getSide().isClient()) { com.mrcrayfish.vehicle.entity.vehicle.EntityMoped.interactionBoxMapStatic.put(com.mrcrayfish.vehicle.entity.vehicle.EntityMoped.CHEST_BOX, com.mrcrayfish.vehicle.client.EntityRaytracer.boxToTriangles(com.mrcrayfish.vehicle.entity.vehicle.EntityMoped.CHEST_BOX.getBox(), null)); com.mrcrayfish.vehicle.entity.vehicle.EntityMoped.interactionBoxMapStatic.put(com.mrcrayfish.vehicle.entity.vehicle.EntityMoped.TRAY_BOX, com.mrcrayfish.vehicle.client.EntityRaytracer.boxToTriangles(com.mrcrayfish.vehicle.entity.vehicle.EntityMoped.TRAY_BOX.getBox(), null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3473/buggy-version/src.main.java.com.mrcrayfish.vehicle.entity.vehicle.EntityMoped.java", "BodyUseAPI": [], "Fixed commit": "968f115c2279ca34a789fcf60971974a96d2785a", "Url": "https://api.github.com/repos/MrCrayfish/MrCrayfishVehicleMod", "Date": "2018-07-19T12:35:47Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mapbox.services.android.telemetry.location.LocationEngine.getLastLocation()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (lastLocation != null) { setCameraPosition(lastLocation); }else { android.support.design.widget.Snackbar.make(view, \"I am Here button not working. Did you enable Location services?\", Snackbar.LENGTH_LONG).setAction(\"Action\", null).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3021/buggy-version/app.src.main.java.sea_it_rise.com.seaitrisev03.MainActivity.java", "BodyUseAPI": ["sea_it_rise.com.seaitrisev03.MainActivity.2.setCameraPosition(android.location.Location)"], "Fixed commit": "2fc7268ff81a1c64f3dd8d8c1767c708d5314d01", "Url": "https://api.github.com/repos/cpsarason/SeaItRiseV03", "Date": "2018-01-05T00:20:40Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.ibatis.reflection.MetaObject.getSetterType(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.util.List.class) == type) { metaCache.setValue(name, java.util.Arrays.asList(value.split(\",\"))); }else { throw new org.apache.ibatis.cache.CacheException((((\"Unsupported property type: '\" + name) + \"' of type \") + type)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/1811/buggy-version/src.main.java.org.mybatis.caches.redis.RedisConfigurationBuilder.java", "BodyUseAPI": [], "Fixed commit": "18fffa73097203cff4b4c30cc8bd2f48974537f5", "Url": "https://api.github.com/repos/Pulit/redis-cache", "Date": "2018-09-27T06:11:17Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (round == true) { doubleDice = false; controller.setDoubleDown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5486/buggy-version/app.src.main.java.com.project.wirelessteam.Views.BoardActivity.java", "BodyUseAPI": [], "Fixed commit": "be392a5026f27ee062b41a9fc1bc40ad2fff526d", "Url": "https://api.github.com/repos/Ponty93/WirelessProjectPala", "Date": "2018-09-17T11:05:57Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fq1.length()) == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6485/buggy-version/src.main.java.jease.site.Solr.java", "BodyUseAPI": [], "Fixed commit": "2225e867239e66c32af9e506f90d7499152f4c29", "Url": "https://api.github.com/repos/jease/jease", "Date": "2018-06-13T21:53:49Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.support.v4.content.ContextCompat.checkSelfPermission(this, Manifest.permission.BLUETOOTH_ADMIN)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { if (android.support.v4.app.ActivityCompat.shouldShowRequestPermissionRationale(this, Manifest.permission.BLUETOOTH_ADMIN)) { }else { android.support.v4.app.ActivityCompat.requestPermissions(this, new java.lang.String[]{ Manifest.permission.BLUETOOTH_ADMIN }, 1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5624/buggy-version/app.src.main.java.com.pixel.mas.ishara.telepresence.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5f5ec05553aea7fb1736d5a4256830bb260daf27", "Url": "https://api.github.com/repos/isharaux/vr_telepresence", "Date": "2018-02-03T12:42:50Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((layout) != null) { layout.removeAllViews(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8108/buggy-version/MyFrame2.coremodule.corelib.src.main.java.com.wtk.corelib.baseadapter.CommonRecyclerAdapter.java", "BodyUseAPI": [], "Fixed commit": "36f010c315d34feaf869e317d98a266c3ba7dfa7", "Url": "https://api.github.com/repos/giswangsj/myrepository", "Date": "2018-03-29T12:38:56Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fbUser) != null) userName.setText(users.get(fbUser.getUid())); else userName.setText(\"Offer Up\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2580/buggy-version/app.src.main.java.com.teamandroid.offerup.HomePage.java", "BodyUseAPI": [], "Fixed commit": "c257579eb995bd7406e8dbd61ea38f76de9704b1", "Url": "https://api.github.com/repos/ericsmarcelo/OfferUp_teamAndroid", "Date": "2018-03-06T00:27:10Z"},
{"Line": "=>717", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((strLogData.length) >= 2) ChameleonIO.DEVICE_RESPONSE = java.util.Arrays.copyOfRange(strLogData, 1, strLogData.length); else ChameleonIO.DEVICE_RESPONSE[0] = strLogData[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6381/buggy-version/app.src.main.java.com.maxieds.chameleonminilivedebugger.LiveLoggerActivity.java", "BodyUseAPI": ["java.util.Arrays.copyOfRange(java.lang.String[],int,int)"], "Fixed commit": "259883b4fc7731613a951361919e31d4dcbc96a5", "Url": "https://api.github.com/repos/maxieds/ChameleonMiniLiveDebugger", "Date": "2018-05-19T01:33:38Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getPackageManager().getLaunchIntentForPackage(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (launchGettIntent != null) { startActivity(launchGettIntent); }else { android.net.Uri playStoreGettPage = android.net.Uri.parse(\"http://play.google.com/store/apps/details?id=com.gettaxi.android\"); android.content.Intent playStoreGettIntent = new android.content.Intent(android.content.Intent.ACTION_VIEW, playStoreGettPage); startActivity(playStoreGettIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6121/buggy-version/app.src.main.java.com.googleworkshop.taxipool.EndTripActivity.java", "BodyUseAPI": ["com.googleworkshop.taxipool.EndTripActivity.1.startActivity(android.content.Intent)"], "Fixed commit": "4f71ee62d510c818a505944affe8a9501a6cebf3", "Url": "https://api.github.com/repos/Jaja321/GoogleWorkshop", "Date": "2018-01-02T13:57:47Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getPackageManager().getLaunchIntentForPackage(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (launchPepperIntent != null) { startActivity(launchPepperIntent); }else { android.net.Uri playStorePepperPage = android.net.Uri.parse(\"http://play.google.com/store/apps/details?id=com.pepper.pay\"); android.content.Intent playStorePepperIntent = new android.content.Intent(android.content.Intent.ACTION_VIEW, playStorePepperPage); startActivity(playStorePepperIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6121/buggy-version/app.src.main.java.com.googleworkshop.taxipool.EndTripActivity.java", "BodyUseAPI": ["com.googleworkshop.taxipool.EndTripActivity.2.startActivity(android.content.Intent)"], "Fixed commit": "4f71ee62d510c818a505944affe8a9501a6cebf3", "Url": "https://api.github.com/repos/Jaja321/GoogleWorkshop", "Date": "2018-01-02T13:57:47Z"},
{"Line": "=>583", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (str.startsWith(\"regionlist\")) { return WikivoyageTemplates.REGION_LIST.getType(); }else if (str.startsWith(\"warningbox\")) { return WikivoyageTemplates.WARNING.getType(); }else if (str.startsWith(\"cite\")) { return WikivoyageTemplates.CITATION.getType(); }else if ((str.startsWith(\"m|\")) || (str.startsWith(\"km|\"))) { return WikivoyageTemplates.METRIC_DATA.getType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7344/buggy-version/java-tools.OsmAndMapCreatorUtilities.src.main.java.net.osmand.wiki.WikiDatabasePreparation.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "6a1ae2bf037535adfef5e2e9cbc7dc5dc78fafeb", "Url": "https://api.github.com/repos/osmandapp/OsmAnd-tools", "Date": "2018-07-24T09:26:50Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.osmand.wiki.WikiDatabasePreparation.getKey(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (key.equals(WikivoyageTemplates.WARNING.getType())) { net.osmand.wiki.WikiDatabasePreparation.appendWarning(bld, val); }else if (key.equals(WikivoyageTemplates.CITATION.getType())) { net.osmand.wiki.WikiDatabasePreparation.parseAndAppendCitation(val, bld); }else if (key.equals(WikivoyageTemplates.METRIC_DATA.getType())) { net.osmand.wiki.WikiDatabasePreparation.parseAndAppendMetricData(val, bld); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7344/buggy-version/java-tools.OsmAndMapCreatorUtilities.src.main.java.net.osmand.wiki.WikiDatabasePreparation.java", "BodyUseAPI": ["java.lang.String.equals(WikivoyageTemplates.CITATION.getType())", "java.lang.String.equals(WikivoyageTemplates.METRIC_DATA.getType())"], "Fixed commit": "6a1ae2bf037535adfef5e2e9cbc7dc5dc78fafeb", "Url": "https://api.github.com/repos/osmandapp/OsmAnd-tools", "Date": "2018-07-24T09:26:50Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(key.endsWith(\"_date\"))) key += \"_date\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7825/buggy-version/app.src.main.java.org.oregongoestocollege.itsaplan.data.CalendarEvent.java", "BodyUseAPI": [], "Fixed commit": "6f9bd2fa51532b864d5856f02e0d00092dfe502a", "Url": "https://api.github.com/repos/OregonGEARUP/Android", "Date": "2018-10-07T17:47:31Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args[0]) == \"-\") { BurrowsWheeler.transform(); }else { BurrowsWheeler.inverseTransform(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2318/buggy-version/coursera.Burrows-Wheeler.BurrowsWheeler.java", "BodyUseAPI": [], "Fixed commit": "67947090c52c0d53a590499a6c473829260a546d", "Url": "https://api.github.com/repos/JinLingChristopher/Algorithms", "Date": "2018-04-06T17:52:34Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3125/buggy-version/com.synet.tool.rsc.src.com.synet.tool.rsc.service.BaseService.java", "BodyUseAPI": [], "Fixed commit": "c8ef7deb5a586f6e6137935ce10fd9e1281b45b0", "Url": "https://api.github.com/repos/ChalmersA/RSC50", "Date": "2018-10-09T03:25:00Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((newPosts != null) && ((newPosts.length) == 1)) builder.setStyle(new android.support.v4.app.NotificationCompat.BigTextStyle().bigText(newPosts[0])); else if ((newPosts != null) && ((newPosts.length) > 0)) builder.setStyle(inboxStyle);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/1104/buggy-version/app.src.main.java.de.fwpm.android.fefesblog.backgroundsync.NotificationHelper.java", "BodyUseAPI": ["android.support.v4.app.NotificationCompat.BigTextStyle.bigText(java.lang.String)", "NotificationCompat.Builder.setStyle(new android.support.v4.app.NotificationCompat.BigTextStyle().bigText(newPosts[0]))"], "Fixed commit": "6c9524e6a930760f917dad20d946114a00072fe8", "Url": "https://api.github.com/repos/Der4x/fefesblog", "Date": "2018-05-03T21:31:34Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (callSuper()) { super.onCreate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/1472/buggy-version/app.src.main.java.com.example.haihesheng.chuckjokes.JokesApplication.java", "BodyUseAPI": [], "Fixed commit": "884a15baeb7694dded459d902ef9bb13fb11f1ac", "Url": "https://api.github.com/repos/iamwindy/ChuckJokes", "Date": "2018-04-30T23:59:24Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (drawingsOutput.exists()) { javax.imageio.ImageIO.write(drawings, \"png\", drawingsOutput); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2045/buggy-version/src.main.java.net.itarray.automotion.internal.DrawableScreenshot.java", "BodyUseAPI": ["javax.imageio.ImageIO.write(java.awt.image.BufferedImage,java.lang.String,java.io.File)"], "Fixed commit": "6373b05edf7860c62649ed637720486146e89bfe", "Url": "https://api.github.com/repos/ITArray/automotion-java", "Date": "2018-01-13T21:06:35Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(s.getStorageType().equals(StorageType.PROVIDED))) { sids.add(s.getSid()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5541/buggy-version/hadoop-hdfs-project.hadoop-hdfs.src.main.java.org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.add(s.getSid())", "org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo.getSid()"], "Fixed commit": "d3aceffa73d5583c14223c4abf904fddd3b56054", "Url": "https://api.github.com/repos/Gabbe1993/hops", "Date": "2018-07-16T16:04:16Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<android.location.Address>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((address.getPhone()) != null) ((android.widget.EditText) (findViewById(R.id.phone_add))).setText(address.getPhone());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8699/buggy-version/app.src.main.java.com.example.kudos.CS426Project.AddChangePlaceActivity.java", "BodyUseAPI": ["android.location.Address.getPhone()", "((android.widget.EditText) (findViewById(R.id.phone_add))).setText(address.getPhone())"], "Fixed commit": "a55e575926b770a294082d0dd57792b083ef77cf", "Url": "https://api.github.com/repos/ntrnghia24/CS426Project", "Date": "2018-07-29T12:40:21Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<android.location.Address>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((address.getUrl()) != null) ((android.widget.EditText) (findViewById(R.id.url_add))).setText(address.getUrl());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8699/buggy-version/app.src.main.java.com.example.kudos.CS426Project.AddChangePlaceActivity.java", "BodyUseAPI": ["((android.widget.EditText) (findViewById(R.id.url_add))).setText(address.getUrl())", "android.location.Address.getUrl()"], "Fixed commit": "a55e575926b770a294082d0dd57792b083ef77cf", "Url": "https://api.github.com/repos/ntrnghia24/CS426Project", "Date": "2018-07-29T12:40:21Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<android.location.Address>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((address.getUrl()) != null) ((android.widget.EditText) (findViewById(R.id.url_add))).setText(address.getUrl());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8699/buggy-version/app.src.main.java.com.example.kudos.CS426Project.AddChangePlaceActivity.java", "BodyUseAPI": ["((android.widget.EditText) (findViewById(R.id.url_add))).setText(address.getUrl())", "android.location.Address.getUrl()"], "Fixed commit": "a55e575926b770a294082d0dd57792b083ef77cf", "Url": "https://api.github.com/repos/ntrnghia24/CS426Project", "Date": "2018-07-29T12:40:21Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<android.location.Address>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((address.getPhone()) != null) ((android.widget.EditText) (findViewById(R.id.phone_add))).setText(address.getPhone());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8699/buggy-version/app.src.main.java.com.example.kudos.CS426Project.AddChangePlaceActivity.java", "BodyUseAPI": ["android.location.Address.getPhone()", "((android.widget.EditText) (findViewById(R.id.phone_add))).setText(address.getPhone())"], "Fixed commit": "a55e575926b770a294082d0dd57792b083ef77cf", "Url": "https://api.github.com/repos/ntrnghia24/CS426Project", "Date": "2018-07-29T12:40:21Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((firstPos >= 0) && (lastPos >= 0)) && (firstPos < lastPos)) { this.term = term.substring((firstPos + 1), lastPos); }else { this.term = term; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3654/buggy-version/src.main.java.za.co.wstoop.jatalog.Term.java", "BodyUseAPI": [], "Fixed commit": "be817e3fe54c4de98ac410d44a79252310c42d7f", "Url": "https://api.github.com/repos/MNCC/Jatalog", "Date": "2018-06-11T09:38:18Z"},
{"Line": "=>1328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((!(mRestoredSettings)) && (!onlyCore)) { mSettings.readDefaultPreferredAppsLPw(this, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8812/buggy-version/services.java.com.android.server.pm.PackageManagerService.java", "BodyUseAPI": [], "Fixed commit": "006c633896e6738297e7bc96128c56b03fbf8d01", "Url": "https://api.github.com/repos/sudosurootdev/frameworks_base", "Date": "2013-04-02T19:01:18Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (PeriodSecEnd.Run.containsKey(player.getUniqueId().toString())) { PeriodSecEnd.Run.get(player.getUniqueId().toString()).cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2815/buggy-version/src.main.java.com.jaoafa.PeriodMatch.Command.Period.java", "BodyUseAPI": ["PeriodSecEnd.Run.get(player.getUniqueId().toString())", "player.getUniqueId().toString()", "PeriodSecEnd.Run.get(player.getUniqueId().toString()).cancel()", "org.bukkit.entity.Player.getUniqueId()"], "Fixed commit": "e2d37eacb0c2f55d3ad9164ac034c2f8ea971f79", "Url": "https://api.github.com/repos/jaoafa/PeriodMatch", "Date": "2018-04-01T11:43:19Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tName == null) && ((util.Catalog.uniqueAliases.size()) == 1)) return util.Catalog.uniqueAliases.values().toString().replaceAll(\"\\\\[\", \"\").replaceAll(\"\\\\]\", \"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7194/buggy-version/src.util.Catalog.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.values()", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.util.Collection<java.lang.String>.toString()", "java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "400c042758dc20428ab3b4f918951c78476ccdba", "Url": "https://api.github.com/repos/Alexcyx/CS4321-Project", "Date": "2018-10-03T23:10:21Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["node.items.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (item == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/182/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.impl.local.paginated.wal.cas.deque.MPSCFAAArrayDequeue.java", "BodyUseAPI": [], "Fixed commit": "9468e44bd00e1a7e7c6b8188bbd0d78a0c47665e", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2018-03-23T12:38:55Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["node.items.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (item == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/182/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.impl.local.paginated.wal.cas.deque.MPSCFAAArrayDequeue.java", "BodyUseAPI": [], "Fixed commit": "9468e44bd00e1a7e7c6b8188bbd0d78a0c47665e", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2018-03-23T12:38:55Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.eyeseetea.malariacare.data.database.iomodules.dhis.importer.models.DataElementExtended.isLoadedDataElementTypeCodes())) org.eyeseetea.malariacare.data.database.iomodules.dhis.importer.models.DataElementExtended.reloadDataElementTypeCodes();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/1312/buggy-version/app.src.main.java.org.eyeseetea.malariacare.data.database.iomodules.dhis.importer.ConvertFromSDKVisitor.java", "BodyUseAPI": [], "Fixed commit": "a5bd582f628d0abeba274bc844c5fb9ad1a5a459", "Url": "https://api.github.com/repos/EyeSeeTea/malariapp", "Date": "2018-04-16T10:08:51Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.spongepowered.api.event.network.ClientConnectionEvent.Join.getTargetEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (player.hasPermission(\"storeys.guard.creative\")) { newGameMode = org.spongepowered.api.entity.living.player.gamemode.GameModes.CREATIVE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3814/buggy-version/storeys.src.main.java.ch.vorburger.minecraft.storeys.guard.GuardGameModeJoinListener.java", "BodyUseAPI": [], "Fixed commit": "392e5585fc13975b118258a54dbe8d094898a323", "Url": "https://api.github.com/repos/vorburger/minecraft-storeys-maker", "Date": "2018-05-09T23:49:47Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((shot.location) == null) { shotInfoViewHolder.shotLocation.setText(\"not known\"); }else { shotInfoViewHolder.shotLocation.setText(shot.location.name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9266/buggy-version/app.src.main.java.com.jiuzhang.yeyuan.dribbbo.shot_detail.ShotDetailAdapter.java", "BodyUseAPI": ["shotInfoViewHolder.shotLocation.setText(shot.location.name)"], "Fixed commit": "6fd3536d1bb7d68b0fb93200c92fc94b16dc8cf7", "Url": "https://api.github.com/repos/field0917/Dribbbo", "Date": "2018-10-04T21:28:41Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["co.tinode.tindroid.ContactListFragment.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (activity == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4139/buggy-version/app.src.main.java.co.tinode.tindroid.ContactListFragment.java", "BodyUseAPI": [], "Fixed commit": "9fde8cef696ca5bd9b60ebcfedbc925f14589e5a", "Url": "https://api.github.com/repos/tinode/tindroid", "Date": "2018-08-24T05:38:48Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (url.contains(\"jsp\")) ref = url.substring(((url.lastIndexOf(\"/\")) + 1), url.lastIndexOf(\".jsp\")); else ref = \"Login\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7271/buggy-version/src.main.Controller.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.lastIndexOf(java.lang.String)"], "Fixed commit": "15f26aaf85badd9cd0be7661271e0f23d91b4169", "Url": "https://api.github.com/repos/stuartkeech/Module_3", "Date": "2018-08-21T14:04:30Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (teamNames != null) droidTeams.add(new DroidTeam(teamNames[w]));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9611/buggy-version/src.DroidGame.java", "BodyUseAPI": [], "Fixed commit": "b27fd12cfc9fcd34ef9fb517100447cc6ad44fb2", "Url": "https://api.github.com/repos/moth-man/Droid-Wars", "Date": "2018-08-27T07:22:15Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (length > 1) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/222/buggy-version/node.src.main.java.io.nuls.client.processor.SystemProcessors.java", "BodyUseAPI": [], "Fixed commit": "5381b1641c65812371f8dac6516f9d34453eee26", "Url": "https://api.github.com/repos/nuls-io/nuls", "Date": "2018-03-30T12:49:05Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (length > 1) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/222/buggy-version/node.src.main.java.io.nuls.client.processor.SystemProcessors.java", "BodyUseAPI": [], "Fixed commit": "5381b1641c65812371f8dac6516f9d34453eee26", "Url": "https://api.github.com/repos/nuls-io/nuls", "Date": "2018-03-30T12:49:05Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.Menu.findItem(R.id.publish_guide)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (item != null) { view = android.support.v4.view.MenuItemCompat.getActionView(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5869/buggy-version/App.src.com.dozuki.ifixit.ui.guide.create.StepEditActivity.java", "BodyUseAPI": ["android.support.v4.view.MenuItemCompat.getActionView(android.view.MenuItem)"], "Fixed commit": "6ea8ae6f28e4b209b86ba417fda5ac3412a6c003", "Url": "https://api.github.com/repos/avivlaban/iFixitAndroid", "Date": "2018-01-16T09:31:02Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.Menu.findItem(R.id.publish_guide)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (visibilityToggle != null) { view = android.support.v4.view.MenuItemCompat.getActionView(visibilityToggle); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5869/buggy-version/App.src.com.dozuki.ifixit.ui.guide.create.StepEditActivity.java", "BodyUseAPI": ["android.support.v4.view.MenuItemCompat.getActionView(android.view.MenuItem)"], "Fixed commit": "6ea8ae6f28e4b209b86ba417fda5ac3412a6c003", "Url": "https://api.github.com/repos/avivlaban/iFixitAndroid", "Date": "2018-01-16T09:31:02Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((personMutableLiveData) == null) { personMutableLiveData = new android.arch.lifecycle.MutableLiveData<com.example.jkb.myapplication.Person>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2256/buggy-version/app.src.main.java.com.example.jkb.myapplication.MyViewModel.java", "BodyUseAPI": [], "Fixed commit": "d3787e4b35badad428551306ebaf232974d74cb5", "Url": "https://api.github.com/repos/robotwai/ComponentsLearn", "Date": "2018-03-05T13:51:13Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.firebase.ui.auth.IdpResponse.fromResultIntent(android.content.Intent)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (response == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2805/buggy-version/app.src.main.java.com.lf.appcare.StartupActivity.java", "BodyUseAPI": [], "Fixed commit": "db75e748cc87b5a6fd2568481e0fa88e249ef4a9", "Url": "https://api.github.com/repos/Lucas-Cerqueira/AppCare", "Date": "2018-05-16T01:53:10Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.batfish.datamodel.IpAccessList.getLines()", "org.batfish.datamodel.FilterResult.getMatchLine()", "org.batfish.datamodel.IpAccessList.filter(org.batfish.datamodel.Flow)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((((fr.getMatchLine()) == null) || (matchLine >= (lines.size()))) || (matchLine < 0)) { note = java.lang.String.format(\"DENIED_OUT{%s}\", acl.getName()); }else { org.batfish.datamodel.IpAccessListLine line = lines.get(matchLine); note = java.lang.String.format(\"DENIED_OUT{%s}{%s}\", acl.getName(), line.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8247/buggy-version/projects.batfish.src.main.java.org.batfish.symbolic.smt.CounterExample.java", "BodyUseAPI": ["java.util.List<org.batfish.datamodel.IpAccessListLine>.get(java.lang.Integer)"], "Fixed commit": "aed8fcd5590dd3d729ed829094c3e81ba144d548", "Url": "https://api.github.com/repos/batfish/batfish", "Date": "2018-01-28T03:42:53Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dictionary.get(i).isEmpty())) { if ((dictionary.get(i).get(0)) instanceof com.sbnvw.artemis.animal_kingdom.treeOfLife.Animal) { com.sbnvw.artemis.managers.AnimalManager.setAnimals(dictionary.get(i)); }else if ((dictionary.get(i).get(0)) instanceof java.util.ArrayList) { com.sbnvw.artemis.managers.TraitsManager.setTraitsStoreAndUpdate(dictionary.get(i)); }else if ((dictionary.get(i).get(0)) instanceof com.sbnvw.artemis.animal_kingdom.treeOfLife.classifications.Classification) { com.sbnvw.artemis.managers.ClassificationManager.setClassifications(dictionary.get(i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2794/buggy-version/src.main.java.com.sbnvw.artemis.managers.CEO.java", "BodyUseAPI": ["com.sbnvw.artemis.managers.ClassificationManager.setClassifications(java.util.ArrayList)", "java.util.List<java.util.ArrayList>.get(int)", "java.util.ArrayList.get(int)", "com.sbnvw.artemis.managers.TraitsManager.setTraitsStoreAndUpdate(java.util.ArrayList)", "java.util.List<java.util.ArrayList>.get(int)", "java.util.List<java.util.ArrayList>.get(int)", "com.sbnvw.artemis.managers.AnimalManager.setAnimals(java.util.ArrayList)", "java.util.List<java.util.ArrayList>.get(int)", "java.util.List<java.util.ArrayList>.get(int)", "java.util.List<java.util.ArrayList>.get(int)", "java.util.ArrayList.get(int)", "java.util.ArrayList.get(int)"], "Fixed commit": "2f145ccfdc2320354aecbc4f09cafdb8c00be107", "Url": "https://api.github.com/repos/djmbritt/Artemis", "Date": "2018-10-29T20:11:29Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.activity.CropActivity.findPoints()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (points != null) { mSelectionImageView.setPoints(points); }else { com.owncloud.android.lib.common.utils.Log_OC.d(com.owncloud.android.ui.activity.CropActivity.TAG, getResources().getString(R.string.no_contour_found)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9146/buggy-version/src.com.owncloud.android.ui.activity.CropActivity.java", "BodyUseAPI": ["com.owncloud.android.ui.QuadrilateralSelectionImageView.setPoints(java.util.List<android.graphics.PointF>)"], "Fixed commit": "1c0895fde807e68e5526565a24938f39661512cb", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-03-12T06:43:04Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id < 0) throw new java.lang.IllegalArgumentException(\"Image id is less than 0\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6888/buggy-version/src.main.java.com.inst.service.impl.ImageServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "b50eff7574029ae3a59db7f38d6c13bf7aa105be", "Url": "https://api.github.com/repos/Elektronikerv/InstClone-2", "Date": "2018-07-25T14:01:52Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (user == null) throw new com.inst.exception.EntityNotFoundException(\"User entity is null\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6888/buggy-version/src.main.java.com.inst.service.impl.ImageServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "b50eff7574029ae3a59db7f38d6c13bf7aa105be", "Url": "https://api.github.com/repos/Elektronikerv/InstClone-2", "Date": "2018-07-25T14:01:52Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (tree.isLeaf()) set(tree.getLeaf());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4795/buggy-version/src.algebraic.manipulator.PathTree.java", "BodyUseAPI": [], "Fixed commit": "99d2780e9db1b04e5f7a4bc798f66cfa38f9afc9", "Url": "https://api.github.com/repos/adamAndMath/AlgebraicManipulator", "Date": "2018-01-27T12:41:18Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (key.matches(org.patriques.output.technicalindicators.DATE_WITH_TIME_PATTERN)) { return java.time.LocalDate.parse(key, org.patriques.output.technicalindicators.DATE_WITH_TIME_FORMAT).atStartOfDay(); }else if (key.matches(org.patriques.output.technicalindicators.DATE_WITH_SIMPLE_TIME_PATTERN)) { return java.time.LocalDate.parse(key, org.patriques.output.technicalindicators.DATE_WITH_SIMPLE_TIME_FORMAT).atStartOfDay(); }else if (key.matches(org.patriques.output.technicalindicators.SIMPLE_DATE_PATTERN)) { return java.time.LocalDate.parse(key, org.patriques.output.technicalindicators.SIMPLE_DATE_FORMAT).atStartOfDay(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2291/buggy-version/src.main.java.org.patriques.output.technicalindicators.TechnicalIndicatorParser.java", "BodyUseAPI": ["java.lang.String.matches(org.patriques.output.technicalindicators.DATE_WITH_SIMPLE_TIME_PATTERN)", "java.time.LocalDate.atStartOfDay()", "java.lang.String.matches(org.patriques.output.technicalindicators.SIMPLE_DATE_PATTERN)", "java.time.LocalDate.parse(java.lang.String,org.patriques.output.technicalindicators.DATE_WITH_TIME_FORMAT)", "java.time.LocalDate.atStartOfDay()", "java.time.LocalDate.parse(java.lang.String,org.patriques.output.technicalindicators.SIMPLE_DATE_FORMAT)", "java.time.LocalDate.parse(java.lang.String,org.patriques.output.technicalindicators.DATE_WITH_SIMPLE_TIME_FORMAT)", "java.time.LocalDate.atStartOfDay()"], "Fixed commit": "9e3bea09df03c26a3cc85ce109eb407db6347c9b", "Url": "https://api.github.com/repos/patriques82/alphavantage4j", "Date": "2018-08-22T18:22:42Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((commandLine.getOptions().length) == 0) { modes.add(Mode.Help); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/1060/buggy-version/src.checkAIR.OptionsParser.java", "BodyUseAPI": [], "Fixed commit": "cfeda35fa41ba5923e56e5714cfce37b4d640dc5", "Url": "https://api.github.com/repos/szbrnl/checkAIR", "Date": "2018-01-24T14:58:22Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((surveyFragment) == null) { surveyFragment = new org.eyeseetea.malariacare.fragments.SurveyFragment(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3290/buggy-version/app.src.main.java.org.eyeseetea.malariacare.DashboardActivity.java", "BodyUseAPI": [], "Fixed commit": "07bf52e08ec192f6383821b840c687194d27d3fc", "Url": "https://api.github.com/repos/EyeSeeTea/pictureapp", "Date": "2018-05-07T17:31:40Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["codeu.model.data.User.getLastSeenNotifications()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (last_seen_notifications != null) { userEntity.setProperty(\"last_seen_notifications\", last_seen_notifications.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8935/buggy-version/src.main.java.codeu.model.store.persistence.PersistentDataStore.java", "BodyUseAPI": ["com.google.appengine.api.datastore.Entity.setProperty(java.lang.String,java.lang.String)", "java.time.Instant.toString()"], "Fixed commit": "18b20ccd019cb4764e72d3e6a2a0a8705d041abd", "Url": "https://api.github.com/repos/vocatwk/CodeU-Nemo", "Date": "2018-07-19T13:43:24Z"},
{"Line": "=>1041", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (preserveCaseForResources) { statement = dbConnection.prepareStatement(DBConstants.GET_EXISTING_ROLE_PERMISSIONS_BY_RESOURCE_ID_CASE_SENSITIVE); }else { statement = dbConnection.prepareStatement(DBConstants.GET_EXISTING_ROLE_PERMISSIONS_BY_RESOURCE_ID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/558/buggy-version/core.org.wso2.carbon.user.core.src.main.java.org.wso2.carbon.user.core.authorization.PermissionTree.java", "BodyUseAPI": [], "Fixed commit": "c6320feb95808988005e810c4e5f3f249e777688", "Url": "https://api.github.com/repos/dushansilva/carbon-kernel", "Date": "2018-06-26T05:29:42Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((andor.length()) == 0) andor = \"AND\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3304/buggy-version/src.phase2.DbCarService.java", "BodyUseAPI": [], "Fixed commit": "a683e8cbd1f51ccb3ec49b74a48f4969c83e9a75", "Url": "https://api.github.com/repos/cs5530spring2018/phase2.2", "Date": "2018-03-25T07:02:18Z"},
{"Line": "=>975", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(result.contains(tempId))) { result.add(tempId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/363/buggy-version/src.main.java.com.pratilipi.recommendations.service.PratilipiService.java", "BodyUseAPI": ["java.util.List<java.lang.Long>.add(java.lang.Long)"], "Fixed commit": "c66e9ad1a1921a9937c16e8385ca408bd559fe25", "Url": "https://api.github.com/repos/Pratilipi/ecs-recommendation", "Date": "2018-05-15T09:56:40Z"},
{"Line": "=>980", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(userMinReadPratilipiIds.isEmpty())) { tempId = userMinReadPratilipiIds.get(0); if (!(result.contains(tempId))) { result.add(tempId); } userMinReadPratilipiIds.remove(0); i++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/363/buggy-version/src.main.java.com.pratilipi.recommendations.service.PratilipiService.java", "BodyUseAPI": ["java.util.List<java.lang.Long>.remove(int)", "java.util.List<java.lang.Long>.get(int)"], "Fixed commit": "c66e9ad1a1921a9937c16e8385ca408bd559fe25", "Url": "https://api.github.com/repos/Pratilipi/ecs-recommendation", "Date": "2018-05-15T09:56:40Z"},
{"Line": "=>992", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(result.contains(tempId))) { result.add(tempId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/363/buggy-version/src.main.java.com.pratilipi.recommendations.service.PratilipiService.java", "BodyUseAPI": ["java.util.List<java.lang.Long>.add(java.lang.Long)"], "Fixed commit": "c66e9ad1a1921a9937c16e8385ca408bd559fe25", "Url": "https://api.github.com/repos/Pratilipi/ecs-recommendation", "Date": "2018-05-15T09:56:40Z"},
{"Line": "=>997", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(popularAuthorPratilipiIds.isEmpty())) && (i < limit)) { tempId = popularAuthorPratilipiIds.get(0); if (!(result.contains(tempId))) { result.add(tempId); } popularAuthorPratilipiIds.remove(0); i++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/363/buggy-version/src.main.java.com.pratilipi.recommendations.service.PratilipiService.java", "BodyUseAPI": ["java.util.List<java.lang.Long>.remove(int)", "java.util.List<java.lang.Long>.get(int)"], "Fixed commit": "c66e9ad1a1921a9937c16e8385ca408bd559fe25", "Url": "https://api.github.com/repos/Pratilipi/ecs-recommendation", "Date": "2018-05-15T09:56:40Z"},
{"Line": "=>515", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.zimbra.common.util.StringUtil.isNullOrEmpty(zd.getZimbraXCompatibleSemVer()))) { attrs.put(Provisioning.A_zimbraXZimletCompatibleSemVer, zd.getZimbraXCompatibleSemVer()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3054/buggy-version/store.src.java.com.zimbra.cs.zimlet.ZimletUtil.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(Provisioning.A_zimbraXZimletCompatibleSemVer,zd.getZimbraXCompatibleSemVer())", "com.zimbra.cs.zimlet.ZimletDescription.getZimbraXCompatibleSemVer()"], "Fixed commit": "0faaeca04fb629a8b89684bcd6510e247b0534b3", "Url": "https://api.github.com/repos/Zimbra/zm-mailbox", "Date": "2018-04-25T08:36:24Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.kanonizo.MavenAnalyser.testMavenInstallation())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9353/buggy-version/client.src.main.java.org.kanonizo.MavenAnalyser.java", "BodyUseAPI": [], "Fixed commit": "c4170eec505e71bc6c544729246a4a05a8cd2b03", "Url": "https://api.github.com/repos/kanonizo/kanonizo", "Date": "2018-02-23T11:36:53Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((requestHeaders) == null) { return new java.util.ArrayList<org.jenkinsci.plugins.urltrigger.URLTriggerRequestHeader>(); }else { return requestHeaders; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9322/buggy-version/src.main.java.org.jenkinsci.plugins.urltrigger.URLTriggerEntry.java", "BodyUseAPI": [], "Fixed commit": "7ac18dfa30578ae6f3873c0aebf6883e3600f85e", "Url": "https://api.github.com/repos/jenkinsci/urltrigger-plugin", "Date": "2018-07-30T22:34:23Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getNumberOfRatings()) > 0) { this.ratingAverage += (user.getRatingAverage()) * (user.getNumberOfRatings()); averageCount += user.getNumberOfRatings(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5426/buggy-version/src.cf4j.Kernel.java", "BodyUseAPI": ["cf4j.User.getRatingAverage()", "cf4j.User.getNumberOfRatings()", "cf4j.User.getNumberOfRatings()"], "Fixed commit": "9222a61b4d0a986b9c4ee6364830f897b5d7318a", "Url": "https://api.github.com/repos/ferortega/cf4j", "Date": "2018-04-09T11:43:58Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((marker) != null) { shelterMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(marker.getPosition(), 11)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8450/buggy-version/app.src.main.java.com.example.team38.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "fc110c2ab934d180e36f36c58326f17328700a47", "Url": "https://api.github.com/repos/johnsk95/cs2340_spring2018_team38", "Date": "2018-03-10T22:23:57Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (source != target) { com.kloudtek.util.SortUtils.TopologicalSortRelationship dependency = comparator.getRelationship(source.obj, target.obj); if (dependency == (com.kloudtek.util.SortUtils.TopologicalSortRelationship.STRONG)) { source.outDependencies.add(target); target.inDependencies.add(source); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7982/buggy-version/core.src.main.java.com.kloudtek.util.SortUtils.java", "BodyUseAPI": ["java.util.HashSet<com.kloudtek.util.SortUtils.Node<X>>.add(com.kloudtek.util.SortUtils.Node<X>)", "com.kloudtek.util.TopologicalSortComparator<X>.getRelationship(X,X)", "java.util.HashSet<com.kloudtek.util.SortUtils.Node<X>>.add(com.kloudtek.util.SortUtils.Node<X>)"], "Fixed commit": "a1f7826cc31d24d95df782d540d9f25db3448496", "Url": "https://api.github.com/repos/kloudtek/ktutils", "Date": "2018-01-27T03:48:04Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (other == (this)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5951/buggy-version/src.main.java.seedu.address.logic.commands.ListAppointmentCommand.java", "BodyUseAPI": [], "Fixed commit": "8c015a21632f8291f99e5c5bdbbad352efe348dc", "Url": "https://api.github.com/repos/CS2103JAN2018-F14-B2/main", "Date": "2018-04-11T00:10:13Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seedu.address.logic.commands.ListAppointmentCommand.isTheSame(java.time.YearMonth,java.time.YearMonth)", "seedu.address.logic.commands.ListAppointmentCommand.isTheSame(java.time.Year,java.time.Year)", "seedu.address.logic.commands.ListAppointmentCommand.isTheSame(java.time.LocalDate,java.time.LocalDate)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((yearSame || yearMonthSame) || dateSame) { return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5951/buggy-version/src.main.java.seedu.address.logic.commands.ListAppointmentCommand.java", "BodyUseAPI": [], "Fixed commit": "8c015a21632f8291f99e5c5bdbbad352efe348dc", "Url": "https://api.github.com/repos/CS2103JAN2018-F14-B2/main", "Date": "2018-04-11T00:10:13Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((lds.getFileHeaderLine()) || (lds.getSkipFirstRow())) { file_reader.readLine(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2989/buggy-version/api.src.main.java.org.regenstrief.linkage.io.OrderedCharDelimFileReader.java", "BodyUseAPI": [], "Fixed commit": "8541aec1f7e174dc1e96580c98205822457eb6d0", "Url": "https://api.github.com/repos/am202/openmrs-module-patientmatching", "Date": "2018-09-19T19:32:23Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["top.trumeet.common.db.RegisteredApplicationDb.registerApplication(java.lang.String,boolean,com.PATHomi.xmsf.push.service.XMPushService,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (application == null) { me.pqpo.librarylog4a.Log4a.w(com.PATHomi.xmsf.push.service.XMPushService.TAG, (\"registerApplication failed \" + pkg)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5873/buggy-version/push.src.main.java.com.PATHomi.xmsf.push.service.XMPushService.java", "BodyUseAPI": [], "Fixed commit": "2254c911ce5e12fe621c79958e822673a244fd5e", "Url": "https://api.github.com/repos/Trumeet/MiPushFramework", "Date": "2018-07-13T14:48:10Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(text.equals(\"\"))) { java.lang.String time = com.kelfan.utillibrary.TimeWorker.getDatetime(Replacer.DATE_TIME_FORMAT); if (!(text.contains(\"@create_\"))) { text = com.kelfan.utillibrary.AtSign.set(text, \"create\").updateValue(time).toString(); } text = com.kelfan.utillibrary.AtSign.set(text, \"modify\").updateValue(time).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8897/buggy-version/EditorA.todofile.src.main.java.com.example.todofile.TodoFragment.java", "BodyUseAPI": ["com.kelfan.utillibrary.AtSign.set(text, \"create\").updateValue(java.lang.String)", "com.kelfan.utillibrary.AtSign.set(text, \"create\").updateValue(time).toString()", "java.lang.String.contains(java.lang.String)", "com.kelfan.utillibrary.AtSign.set(java.lang.String,java.lang.String)"], "Fixed commit": "4828df5a1e6e0b458130448957930bf3692341fd", "Url": "https://api.github.com/repos/kelfan/EditorA", "Date": "2018-07-05T01:06:54Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.databinding.ObservableArrayList<ch.epfl.sweng.favors.database.Favor>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((favor.get(Favor.StringFields.description)) != null) holder.description.setText(favor.get(Favor.StringFields.description));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6464/buggy-version/app.src.main.java.ch.epfl.sweng.favors.FavorListAdapter.java", "BodyUseAPI": ["ch.epfl.sweng.favors.database.Favor.get(Favor.StringFields.description)", "android.widget.TextView.setText(favor.get(Favor.StringFields.description))"], "Fixed commit": "353dc7b89372b4ee270ebaa3ed8476101a48e22f", "Url": "https://api.github.com/repos/basbeu/theSofties", "Date": "2018-10-17T10:49:35Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.databinding.ObservableArrayList<ch.epfl.sweng.favors.database.Favor>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((favor.get(Favor.IntegerFields.creationTimestamp)) != null) holder.timestamp.setText(favor.get(Favor.IntegerFields.creationTimestamp));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6464/buggy-version/app.src.main.java.ch.epfl.sweng.favors.FavorListAdapter.java", "BodyUseAPI": ["ch.epfl.sweng.favors.database.Favor.get(Favor.IntegerFields.creationTimestamp)", "android.widget.TextView.setText(favor.get(Favor.IntegerFields.creationTimestamp))"], "Fixed commit": "353dc7b89372b4ee270ebaa3ed8476101a48e22f", "Url": "https://api.github.com/repos/basbeu/theSofties", "Date": "2018-10-17T10:49:35Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.databinding.ObservableArrayList<ch.epfl.sweng.favors.database.Favor>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((favor.get(Favor.StringFields.title)) != null) holder.title.setText(favor.get(Favor.StringFields.title));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6464/buggy-version/app.src.main.java.ch.epfl.sweng.favors.FavorListAdapter.java", "BodyUseAPI": ["ch.epfl.sweng.favors.database.Favor.get(Favor.StringFields.title)", "android.widget.TextView.setText(favor.get(Favor.StringFields.title))"], "Fixed commit": "353dc7b89372b4ee270ebaa3ed8476101a48e22f", "Url": "https://api.github.com/repos/basbeu/theSofties", "Date": "2018-10-17T10:49:35Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.codename1.impl.javase.JavaFXLoader.main(com.codename1.designer.ResourceEditorApp.class, args)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6196/buggy-version/CodenameOneDesigner.src.com.codename1.designer.ResourceEditorApp.java", "BodyUseAPI": [], "Fixed commit": "7830ac55a970e7ea35e91afee6a9d542dc2dc093", "Url": "https://api.github.com/repos/jsfan3/CodenameOne", "Date": "2018-07-27T15:35:44Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Float.parseFloat(nota.getText().toString())) > 100) { android.widget.Toast.makeText(getContext(), \"Nota erronea\", Toast.LENGTH_SHORT).show(); limpiar(); }else { DBHelper.myDB.editUser(new com.example.charl.basealumnos.Data.Alumno(id.getText().toString(), nombre.getText().toString(), nota.getText().toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5168/buggy-version/app.src.main.java.com.example.charl.basealumnos.Fragments.Modify.java", "BodyUseAPI": ["DBHelper.myDB.editUser(com.example.charl.basealumnos.Data.Alumno)", "android.widget.EditText.getText()", "nota.getText().toString()"], "Fixed commit": "9468868b2d4d81a1566331b94d2e3fc2391ccc18", "Url": "https://api.github.com/repos/00198216/BaseAlumnos", "Date": "2018-05-20T09:53:43Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((args.length) > 0) && (args[0].equals(\"test\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9399/buggy-version/java-mqtt-kafka-bridge.src.main.java.pw.oliver.jmkb.Main.java", "BodyUseAPI": [], "Fixed commit": "25efa225da37c342c4d5b11c0d1728adef1e85ec", "Url": "https://api.github.com/repos/PaVoS-TECO/java-mqtt-kafka-bridge", "Date": "2018-08-31T22:08:39Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((topic == null) || (message == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9399/buggy-version/java-mqtt-kafka-bridge.src.main.java.pw.oliver.jmkb.JmkbMqttConsumer.java", "BodyUseAPI": [], "Fixed commit": "25efa225da37c342c4d5b11c0d1728adef1e85ec", "Url": "https://api.github.com/repos/PaVoS-TECO/java-mqtt-kafka-bridge", "Date": "2018-08-31T22:08:39Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 49) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3225/buggy-version/app.src.main.java.org.jak_linux.dns66.db.RuleDatabase.java", "BodyUseAPI": [], "Fixed commit": "5adc361d9dabe42b584dc2133ecb9e1d285df6ba", "Url": "https://api.github.com/repos/SvobodaJakub/dns66", "Date": "2018-04-23T04:26:28Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.matrix) == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4947/buggy-version/pi.leetcode.RangeQuerySum2DImmutable.java", "BodyUseAPI": [], "Fixed commit": "a7f826d45f7abd8991a7bb98e43c402404f71db5", "Url": "https://api.github.com/repos/r3t2/practice_ds_algos", "Date": "2018-01-24T07:10:19Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((nR) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4947/buggy-version/pi.leetcode.RangeQuerySum2DImmutable.java", "BodyUseAPI": [], "Fixed commit": "a7f826d45f7abd8991a7bb98e43c402404f71db5", "Url": "https://api.github.com/repos/r3t2/practice_ds_algos", "Date": "2018-01-24T07:10:19Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["searchForRange.extremeInsertionIndex(int[],int,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((leftIdx == (nums.length)) || ((nums[leftIdx]) != target)) { return targetRange; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/1701/buggy-version/src.searchForRange.java", "BodyUseAPI": [], "Fixed commit": "fe92a7fb13cb11d993759fcf1c520e0282968833", "Url": "https://api.github.com/repos/biplabku/Interview-Preparation-Guide", "Date": "2018-02-03T18:14:52Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (category != null) { return dao.findByIdReportCategory(com.fradou.accounting.utils.OperationCategory.valueOf(category)); }else { java.lang.System.out.println(\"On est la !\"); return ((java.util.List<com.fradou.accounting.model.Report>) (dao.findAll())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7900/buggy-version/src.main.java.com.fradou.accounting.controller.ReportController.java", "BodyUseAPI": ["com.fradou.accounting.model.ReportRepository.findByIdReportCategory(com.fradou.accounting.utils.OperationCategory.valueOf(category))", "com.fradou.accounting.utils.OperationCategory.valueOf(java.lang.String)"], "Fixed commit": "5c7a4cca468d58a17ae5308421a2d247c8ad0aca", "Url": "https://api.github.com/repos/Fradou/my_microserv-accounting", "Date": "2018-03-23T12:59:43Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (section == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5488/buggy-version/Sponge.src.main.java.com.plotsquared.sponge.util.block.SpongeLocalQueue.java", "BodyUseAPI": [], "Fixed commit": "ae4fdaadba0486c987ea5f7bec080d0bf16875b6", "Url": "https://api.github.com/repos/Caelin/PlotSquared", "Date": "2018-05-26T05:55:02Z"},
{"Line": "=>506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(relation.getObjectType().equals(RelationObjectType.WEB))) { org.roda.wui.client.common.utils.JavascriptUtils.scrollToTop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4056/buggy-version/roda-ui.roda-wui.src.main.java.org.roda.wui.client.planning.ShowRepresentationInformation.java", "BodyUseAPI": [], "Fixed commit": "0b85c173ded53270fab1e9fa8283a14806b63c52", "Url": "https://api.github.com/repos/keeps/roda", "Date": "2018-04-19T10:46:34Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((trialsParam.getDimension()) <= 1) { try { trialsParam.setDimension(countsParam.getDimension()); } catch (java.lang.UnsupportedOperationException uoe) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6545/buggy-version/src.dr.inferencexml.distribution.BinomialLikelihoodParser.java", "BodyUseAPI": ["dr.inference.model.Parameter.setDimension(countsParam.getDimension())"], "Fixed commit": "c195e3dc8f17b02dc32954083284b69985efe754", "Url": "https://api.github.com/repos/beast-dev/beast-mcmc", "Date": "2018-10-01T06:36:33Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tlvBox == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2229/buggy-version/src.main.java.com.leego.standard.tlv.ConcurrentTlvBox.java", "BodyUseAPI": [], "Fixed commit": "e535dda75d22a6d7170b8956c626995e27436411", "Url": "https://api.github.com/repos/yihleego/tlv", "Date": "2018-10-09T14:00:52Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((network) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5384/buggy-version/src.ctrl.LowpanNetwork.java", "BodyUseAPI": [], "Fixed commit": "f772feff4783ff95b07a22a20c8d3dca48b18f81", "Url": "https://api.github.com/repos/carleton-smart-grid/lowpan-visualizer", "Date": "2018-03-20T18:32:26Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((host) != null) { java.net.InetAddress haddr = java.net.InetAddress.getByName(host); return new java.net.ServerSocket(port, cnum, haddr); }else return new java.net.ServerSocket(port);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/1945/buggy-version/src.jeremiahlowe.fightinggame.server.Server.java", "BodyUseAPI": [], "Fixed commit": "e6d7f56ba5b53fdd3771d940b1df6c3a86377263", "Url": "https://api.github.com/repos/abc123me/FightingGame", "Date": "2018-09-12T02:59:56Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.mi.ur.de.imagecropper.MainActivity.loadBitmap(android.net.Uri.parse(mCurrentPhotoPath))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (bm != null) { mCropImageView.setImageBitmap(bm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9310/buggy-version/08_ImageCropper_Starter_Oreo.app.src.main.java.android.mi.ur.de.imagecropper.MainActivity.java", "BodyUseAPI": ["com.isseiaoki.simplecropview.CropImageView.setImageBitmap(android.graphics.Bitmap)"], "Fixed commit": "df2b4aa2c5363a4ca05e1b0f51265d9be594052c", "Url": "https://api.github.com/repos/cetceeve/uni_android_course", "Date": "2018-06-05T21:36:04Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cs492.barcrawler.Utils.YelpAPIUtils.parseYelpJSONResponse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (i < (tempList.size())) barList.add(tempList.get(i));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4118/buggy-version/app.src.main.java.cs492.barcrawler.BarListActivity.java", "BodyUseAPI": ["java.util.ArrayList<YelpAPIUtils.YelpItem>.add(tempList.get(i))", "java.util.ArrayList<YelpAPIUtils.YelpItem>.get(int)"], "Fixed commit": "a68d81cd790eb6e95764fd618c3ae271362bafdc", "Url": "https://api.github.com/repos/OSU-CS492-W18/final-project-team-1-barcrawler", "Date": "2018-03-20T20:44:49Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((s.charAt(i)) == ' ') { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5162/buggy-version/src.stringsandarrays.PalindromPermutation.java", "BodyUseAPI": [], "Fixed commit": "f3226a1b074ee975728ce066cb9f6407825e7817", "Url": "https://api.github.com/repos/shreyamdg/CTCI", "Date": "2018-10-03T04:07:10Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (movieList == null) { android.widget.Toast.makeText(getApplicationContext(), R.string.msg_internet_connection, Toast.LENGTH_LONG).show(); }else { mAdapter.loadMovies(movieList); mAdapter.notifyDataSetChanged(); if ((movieList.size()) > 0) { moviesHaveBeenLoaded = true; } android.util.Log.i(com.himebaugh.popularmovies.MainActivity.TAG, (\"moviesHaveBeenLoaded: \" + (moviesHaveBeenLoaded))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/1759/buggy-version/app.src.main.java.com.himebaugh.popularmovies.MainActivity.java", "BodyUseAPI": ["com.himebaugh.popularmovies.MovieAdapter.loadMovies(java.util.List<com.himebaugh.popularmovies.model.Movie>)", "java.util.List<com.himebaugh.popularmovies.model.Movie>.size()"], "Fixed commit": "319a49e64295823e24e23db9f847bc37128a2d20", "Url": "https://api.github.com/repos/langhimebaugh/PopularMovies", "Date": "2018-05-05T05:32:59Z"},
{"Line": "=>1196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value instanceof ca.weblite.codename1.json.JSONObject.Null) { return value.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4328/buggy-version/src.ca.weblite.codename1.json.JSONObject.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "568fe0abdc5a9c4f0dafe2793029239b76b16591", "Url": "https://api.github.com/repos/ramsestom/CN1JSON", "Date": "2018-04-20T04:01:32Z"},
{"Line": "=>1070", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.ontio.io.BinaryReader.readVarBytes()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((pubKey.length) == 33) { publicKeyMap.put(\"Type\", KeyType.ECDSA.name()); publicKeyMap.put(\"Curve\", Curve.P256); publicKeyMap.put(\"Value\", com.github.ontio.smartcontract.nativevm.Helper.toHexString(pubKey)); }else { publicKeyMap.put(\"Type\", com.github.ontio.crypto.KeyType.fromLabel(pubKey[0])); publicKeyMap.put(\"Curve\", com.github.ontio.crypto.Curve.fromLabel(pubKey[1])); publicKeyMap.put(\"Value\", com.github.ontio.smartcontract.nativevm.Helper.toHexString(pubKey)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9723/buggy-version/ontolib.src.main.java.com.github.ontio.smartcontract.nativevm.OntId.java", "BodyUseAPI": ["java.util.Map.put(java.lang.String,com.github.ontio.crypto.Curve.fromLabel(pubKey[1]))", "com.github.ontio.crypto.KeyType.fromLabel(byte)", "java.util.Map.put(java.lang.String,com.github.ontio.smartcontract.nativevm.Helper.toHexString(pubKey))", "java.util.Map.put(java.lang.String,com.github.ontio.smartcontract.nativevm.Helper.toHexString(pubKey))", "com.github.ontio.smartcontract.nativevm.Helper.toHexString(byte[])", "com.github.ontio.smartcontract.nativevm.Helper.toHexString(byte[])", "com.github.ontio.crypto.Curve.fromLabel(byte)", "java.util.Map.put(java.lang.String,com.github.ontio.crypto.KeyType.fromLabel(pubKey[0]))"], "Fixed commit": "3cbe108e84a4a831c62c0e02158a22646fdf970a", "Url": "https://api.github.com/repos/ontio-community/ontology-andriod-sdk", "Date": "2018-06-13T10:26:09Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (removeNoise) { com.apw.ImageManagement.ImageManipulator.removeNoise(mono, output, height, width); com.apw.ImageManagement.ImageManipulator.convertBWToRGB(output, rgb, output.length); }else { com.apw.ImageManagement.ImageManipulator.convertBWToRGB(mono, rgb, output.length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7414/buggy-version/src.main.java.com.apw.ImageManagement.ImageManagementModule.java", "BodyUseAPI": [], "Fixed commit": "d9789d2ee5d9df5aa74442681e6eba8d75e6ccf3", "Url": "https://api.github.com/repos/AutonomousCarProject/CarControl", "Date": "2018-07-31T16:30:05Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((!includeTransfer) && (i == ((economysimulation.classes.algorithms.Component.BUDGET_VARS.length) - 1)))) { value += economysimulation.classes.algorithms.Component.BUDGET_VARS[i]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2129/buggy-version/src.economysimulation.classes.algorithms.Formula.java", "BodyUseAPI": [], "Fixed commit": "7dfabc630aac9971c4ef37cfbd47e27052367c6f", "Url": "https://api.github.com/repos/MaxGitHubRep/EconomySimulation", "Date": "2018-06-11T13:15:35Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (node != null) { if (tableRow.containsKey(node.getValue())) { node.setBinaryValue(tableRow.get(node.getValue())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/1477/buggy-version/automata-and-logic-engineering-server.src.main.java.ale.server.ale.calculations.TruthTableBuilder.java", "BodyUseAPI": ["java.util.Map<java.lang.Character, java.lang.Byte>.containsKey(node.getValue())", "ale.server.ale.calculations.Node.getValue()", "ale.server.ale.calculations.Node.setBinaryValue(java.lang.Byte)", "java.util.Map<java.lang.Character, java.lang.Byte>.get(node.getValue())", "ale.server.ale.calculations.Node.getValue()"], "Fixed commit": "9398ad8449ec3f9fb9241cee7071a8c6362c1168", "Url": "https://api.github.com/repos/dmarkov00/logic-engineering", "Date": "2018-03-15T11:11:25Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["algorithm.GeoRecommendation.getDistance(item1.getLatitude(),item1.getLongitude(),double,double)", "algorithm.GeoRecommendation.getDistance(item2.getLatitude(),item2.getLongitude(),double,double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (distance1 < distance2) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8727/buggy-version/src.algorithm.GeoRecommendation.java", "BodyUseAPI": [], "Fixed commit": "8615fa2eb621d73839d29a8bb9712e9279be2ca0", "Url": "https://api.github.com/repos/DukeCode/JavaWebApplication_EventRec", "Date": "2018-03-31T11:41:26Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(directory2.exists())) { directory2.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9604/buggy-version/src.tetris.graphics.GFrame.java", "BodyUseAPI": [], "Fixed commit": "614a45f8d509b26b4f7d63a4dcc71c7bb1b55aed", "Url": "https://api.github.com/repos/johanhenrik/ziggers", "Date": "2018-05-24T09:42:42Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(s2.transition.keySet().isEmpty())) { gnew.setProductions(StaToStr.get(s), (key + (StaToStr.get(s2)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2113/buggy-version/regular_languagens.src.transformation.Transformation.java", "BodyUseAPI": ["java.util.Map<transformation.State, java.lang.String>.get(transformation.State)", "transformation.RegularGrammar.setProductions(StaToStr.get(s),(key + (StaToStr.get(s2))))"], "Fixed commit": "c84c7cc0c2425c2333e18523bbe19f92f9b06982", "Url": "https://api.github.com/repos/acebr1/Regular_languages", "Date": "2018-06-04T00:49:10Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((youTubePlayer) != null) { youTubePlayer.pause(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9765/buggy-version/app.src.main.java.com.wordpress.dnvsoft.youtubelite.video_player_mappers.PierFrancescoViewMapper.java", "BodyUseAPI": [], "Fixed commit": "889b9c79ad9f9b5f72a7f077472a95435c5627d1", "Url": "https://api.github.com/repos/jdinkov/YouTubeLite", "Date": "2018-09-30T16:09:51Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((youtubePlayerView) != null) { youtubePlayerView.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9765/buggy-version/app.src.main.java.com.wordpress.dnvsoft.youtubelite.video_player_mappers.PierFrancescoViewMapper.java", "BodyUseAPI": [], "Fixed commit": "889b9c79ad9f9b5f72a7f077472a95435c5627d1", "Url": "https://api.github.com/repos/jdinkov/YouTubeLite", "Date": "2018-09-30T16:09:51Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((youTubePlayer) != null) { youTubePlayer.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9765/buggy-version/app.src.main.java.com.wordpress.dnvsoft.youtubelite.video_player_mappers.DefaultPlayerViewMapper.java", "BodyUseAPI": [], "Fixed commit": "889b9c79ad9f9b5f72a7f077472a95435c5627d1", "Url": "https://api.github.com/repos/jdinkov/YouTubeLite", "Date": "2018-09-30T16:09:51Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((youTubePlayer) != null) { currentVideoTime = youTubePlayer.getCurrentTimeMillis(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9765/buggy-version/app.src.main.java.com.wordpress.dnvsoft.youtubelite.video_player_mappers.DefaultPlayerViewMapper.java", "BodyUseAPI": [], "Fixed commit": "889b9c79ad9f9b5f72a7f077472a95435c5627d1", "Url": "https://api.github.com/repos/jdinkov/YouTubeLite", "Date": "2018-09-30T16:09:51Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (amtTendered == amtOwed) { java.lang.System.out.println(\"That's the exact amount owed. Have a nice day!\"); return 0.0; }else if (amtTendered > amtOwed) { changeDue = amtTendered - amtOwed; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2389/buggy-version/src.com.skilldistillery.makechange.ChangeMaker.java", "BodyUseAPI": [], "Fixed commit": "bb36284fdfbe05a26321b92f4e5b3ccc90ab134b", "Url": "https://api.github.com/repos/thomasbroderick/MakeChangeProject", "Date": "2018-04-29T03:41:43Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.util.Objects.nonNull(csvReader)) && (csvReader.isPresent())) { csvReader.get().close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7940/buggy-version/aming-csv.src.main.java.org.aming.csv.core.CsvReader.java", "BodyUseAPI": ["csvReader.get().close()", "java.util.Optional<com.opencsv.CSVReader>.get()"], "Fixed commit": "61ea9e852b17bf4324c39226842e5a3e31a777b9", "Url": "https://api.github.com/repos/damingerdai/aming-code", "Date": "2018-01-02T11:33:26Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Card.getSuit()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((playedSuit.equals(\"Joker\")) || ((cardPlayed.getSuitValue()) == 11)) { playedSuit = gameTrump; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6821/buggy-version/src.Dealer.java", "BodyUseAPI": [], "Fixed commit": "652924bbaee9386b72cb89da7caf6386aadb5f8e", "Url": "https://api.github.com/repos/jacktwilliams/CardGame", "Date": "2018-04-09T00:16:05Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ambariRepositoryVersionService.isVersionNewerOrEqualThanLimited(ambariRepo::getVersion, com.sequenceiq.cloudbreak.service.cluster.ambari.AmbariRepositoryVersionService.AMBARI_VERSION_2_7_2_0)) { ldapConfigs.put(\"ambari.ldap.advanced.collision_behavior\", \"convert\"); }else { ldapConfigs.put(\"ambari.ldap.advance.collision_behavior\", \"convert\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/5483/buggy-version/core.src.main.java.com.sequenceiq.cloudbreak.service.cluster.ambari.AmbariLdapService.java", "BodyUseAPI": [], "Fixed commit": "1594038e0ccd73e70307142f0f34d9f4095b6a2d", "Url": "https://api.github.com/repos/hortonworks/cloudbreak", "Date": "2018-10-24T07:19:45Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.endeavourhealth.transform.tpp.csv.schema.clinical.SREvent.getContactEventLocation()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((!(contactEventLocationCell.isEmpty())) && ((contactEventLocationCell.getInt()) != (-1))) { org.hl7.fhir.instance.model.Reference locationReference = org.endeavourhealth.common.fhir.ReferenceHelper.createReference(ResourceType.Location, contactEventLocationCell.getString()); encounterBuilder.addLocation(locationReference, branchIdCell); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6680/buggy-version/src.main.java.org.endeavourhealth.transform.tpp.csv.transforms.clinical.SREventTransformer.java", "BodyUseAPI": ["org.endeavourhealth.common.fhir.ReferenceHelper.createReference(ResourceType.Location,contactEventLocationCell.getString())", "org.endeavourhealth.transform.common.CsvCell.getString()"], "Fixed commit": "5225e2b8c7ab2606a8274662064573f428de93d2", "Url": "https://api.github.com/repos/endeavourhealth/Transforms", "Date": "2018-08-06T17:13:36Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (response.isSuccessful()) { java.util.ArrayList<com.gary.android.redditg.model.RedditPost> posts = new java.util.ArrayList(response.body().data.children.size()); for (com.gary.android.redditg.api.RedditApi.RedditChildrenResponse child : response.body().data.children) { posts.add(child.data); } callback.onResult(posts); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6137/buggy-version/app.src.main.java.com.gary.android.redditg.repository.ItemKeyedSubredditDataSource.java", "BodyUseAPI": ["response.body().data.children.size()", "retrofit2.Response<RedditApi.ListingResponse>.body()", "retrofit2.Response<RedditApi.ListingResponse>.body()"], "Fixed commit": "69b5b0028da5792d4e34f779c15512647a0e4b04", "Url": "https://api.github.com/repos/kevinshine/RedditG", "Date": "2018-07-12T09:08:13Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((values[i]) instanceof java.lang.Boolean) { if (((boolean) (values[i]))) { values[i] = 1; }else { values[i] = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9133/buggy-version/src.main.java.it.mineblock.mbcore.MySQL.java", "BodyUseAPI": [], "Fixed commit": "c460fc9d86f9656c4ba134e1f53dac4764f4c967", "Url": "https://api.github.com/repos/LoreSchaeffer/MBCore", "Date": "2018-04-15T20:51:51Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (temp2.before(temp)) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7481/buggy-version/TransporterApp.app.src.main.java.com.transporterapp.syde.transporterapp.History.HistListFrag.java", "BodyUseAPI": [], "Fixed commit": "1b37d9760c63cf1a98486d69280c46a24de749be", "Url": "https://api.github.com/repos/ln375/SYDE461-462", "Date": "2018-03-19T06:23:50Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.rawQuery(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (cursor.moveToFirst()) { do { id = cursor.getString(0); if (search_id == (java.lang.Integer.parseInt(id))) { java.lang.String get_row_query = ((\"SELECT * FROM \" + (com.example.usp05.githubtry.DataModel.DBItemsHelper.ITEM_TABLE_NAME)) + \" WHERE ID = \") + search_id; found = appDB.rawQuery(get_row_query, null); return new com.example.usp05.githubtry.DataModel.Item(found.getString(0), found.getString(2), found.getString(3), found.getString(4), found.getString(5), found.getString(6), found.getString(9), java.lang.Integer.parseInt(found.getString(7))); } } while (cursor.moveToNext() ); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3850/buggy-version/app.src.main.java.com.example.usp05.githubtry.DataModel.DBItemsHelper.java", "BodyUseAPI": ["android.database.Cursor.moveToNext()", "android.database.Cursor.getString(int)"], "Fixed commit": "2ecc5318312be82f65c580fd400a1c7c5bfc2c80", "Url": "https://api.github.com/repos/ikram-hamizi/GitHubTry", "Date": "2018-04-03T20:52:25Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (dbValue == null) dbValue = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6963/buggy-version/src.main.java.jive.TangoFileReader.java", "BodyUseAPI": [], "Fixed commit": "3fae8a0179728349cdeb8e8d4357dca526294e65", "Url": "https://api.github.com/repos/tango-controls/jive", "Date": "2018-10-29T13:48:18Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((templatePos) < limit) which = websiteTemplate[templatePos][1]; else break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3192/buggy-version/Threading.java", "BodyUseAPI": [], "Fixed commit": "6f607213880fc0156a8b54ea1fde421379c1015a", "Url": "https://api.github.com/repos/NRT101/Google-Chrome-Favorites-Scrapper", "Date": "2018-08-30T02:55:08Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((templatePos) < limit) which = websiteTemplate[templatePos][2]; else break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3192/buggy-version/Threading.java", "BodyUseAPI": [], "Fixed commit": "6f607213880fc0156a8b54ea1fde421379c1015a", "Url": "https://api.github.com/repos/NRT101/Google-Chrome-Favorites-Scrapper", "Date": "2018-08-30T02:55:08Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (property != null) { if (property.equals(\"vid\")) { return ((double) (1)) / (numVertices); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2938/buggy-version/src.main.java.in.dream_lab.goffish.godb.Hueristics.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "e5864f2d02e7ec44cab9fa69eaa0ad2b8bcac3d6", "Url": "https://api.github.com/repos/abhilashsharma/CostModelSimulator", "Date": "2018-01-11T13:40:54Z"},
{"Line": "=>636", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((content.getHeight()) < (equipmentList.getHeight())) { content.setPrefHeight(((equipmentList.getHeight()) - 10)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4344/buggy-version/src.views.controllers.PartyManagementController.java", "BodyUseAPI": ["javafx.scene.control.ScrollPane.getHeight()", "javafx.scene.layout.VBox.setPrefHeight(((equipmentList.getHeight()) - 10))"], "Fixed commit": "d638d3b7dd84118bb4e42516ebd0b30a4e0a1cfc", "Url": "https://api.github.com/repos/Elithous/DeathMatch", "Date": "2018-03-08T08:11:16Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getBar()) != null) getBar().cleanR2Menu().setR2Menu(new com.volume.candle.views.ActionBar.TextAction() { @java.lang.Override public java.lang.String getText() { return getString(R.string.sign_in); } @java.lang.Override public void performAction(android.view.View view) { signIn(); } });", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/3191/buggy-version/app.src.main.java.com.volume.candle.mine.fragment.MineFragment.java", "BodyUseAPI": [], "Fixed commit": "c73242d8b8d343c39afcd37a19f2eb5fb6291963", "Url": "https://api.github.com/repos/PATHngping/canvolclient", "Date": "2018-10-13T12:03:22Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.sysml.runtime.matrix.MetaData.getMatrixCharacteristics()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((mc.getRowsPerBlock()) < 0) && ((mc.getNumColBlocks()) < 0)) { mc.setRowsPerBlock(OptimizerUtils.DEFAULT_BLOCKSIZE); mc.setColsPerBlock(OptimizerUtils.DEFAULT_BLOCKSIZE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/9014/buggy-version/src.main.java.org.apache.sysml.runtime.controlprogram.caching.CacheableData.java", "BodyUseAPI": ["org.apache.sysml.runtime.matrix.MatrixCharacteristics.setRowsPerBlock(OptimizerUtils.DEFAULT_BLOCKSIZE)", "org.apache.sysml.runtime.matrix.MatrixCharacteristics.setColsPerBlock(OptimizerUtils.DEFAULT_BLOCKSIZE)"], "Fixed commit": "f7cfa3b99db97b818944b66f0cafd64804d02449", "Url": "https://api.github.com/repos/niketanpansare/systemml", "Date": "2018-09-26T02:01:49Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.grinnell.grinnell_publications_android.Fragments.NewsfeedFragment.sGenerator()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((stories.size()) != 0) { android.widget.ListView gridview = ((android.widget.ListView) (newsfeedFragment.findViewById(R.id.newsfeed_listview))); gridview.setAdapter(new edu.grinnell.grinnell_publications_android.Adapters.NewsfeedAdapter(getActivity().getApplicationContext(), stories)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/841/buggy-version/app.src.main.java.edu.grinnell.grinnell_publications_android.Fragments.NewsfeedFragment.java", "BodyUseAPI": ["android.widget.ListView.setAdapter(edu.grinnell.grinnell_publications_android.Adapters.NewsfeedAdapter)"], "Fixed commit": "3619c071a60d41d5aad43d77701cbdbd70030202", "Url": "https://api.github.com/repos/GrinnellAppDev/Publications-Android", "Date": "2018-02-04T20:23:27Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getSerializableExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((arrayOutput[1]) != null) { int spinnerPosition = getIndexSpinner(category, arrayOutput[1]); if (spinnerPosition != (-1)) { category.setSelection(spinnerPosition); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6479/buggy-version/app.src.main.java.edu.gatech.cs2340_68b.donationtracker.View.donationViews.DonationDetailControl.java", "BodyUseAPI": ["edu.gatech.cs2340_68b.donationtracker.View.donationViews.DonationDetailControl.getIndexSpinner(android.widget.Spinner,java.lang.String)"], "Fixed commit": "d8c515a06f4f7b9ffd244c3a58d499dba1ed96a7", "Url": "https://api.github.com/repos/CS-2340-68B/DonationTracker", "Date": "2018-10-31T05:00:09Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((trump.getGameMode()) == (shared.GameMode.UNEUFE)) { c = new shared.Card((originCardID + i)); }else { c = new shared.Card((originCardID - i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6448/buggy-version/src.bot.BotIntelligence.java", "BodyUseAPI": [], "Fixed commit": "e51af52c6b6ba36de7ca43ce5636b5f606742f60", "Url": "https://api.github.com/repos/mcalzaferri/Schieber", "Date": "2018-05-19T07:26:30Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mozilla.focus.utils.FavIconUtils.getRefinedBitmap(context.getResources(),source.originalIcon,org.mozilla.focus.utils.FavIconUtils.getRepresentativeCharacter(source.url))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (refinedBitmap == (source.originalIcon)) { refinedBitmap = android.graphics.Bitmap.createBitmap(source.originalIcon); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6949/buggy-version/app.src.main.java.org.mozilla.focus.tabs.tabtray.FaviconDecoder.java", "BodyUseAPI": ["android.graphics.Bitmap.createBitmap(source.originalIcon)"], "Fixed commit": "b1c9859b88506475d791d73ad699df9f3170ed79", "Url": "https://api.github.com/repos/pharspher/Rocket", "Date": "2018-04-10T06:31:32Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPhase) != (TurnPhaseType.REINFORCEMENT)) { this.phases.get(currentPhase).enterPhase(getCurrentPlayer()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/2821/buggy-version/core.src.sepr.game.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "bf3fb6edccad4d89e7d9da6833c76569925f1de7", "Url": "https://api.github.com/repos/sdp518/Bachelors-of-Domination", "Date": "2018-02-15T14:56:38Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, io.swagger.v3.oas.models.media.Schema>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((arrayProp.getItems()) != null) && ((arrayProp.getItems().getProperties()) != null)) { processProperties(arrayProp.getItems().getProperties(), file); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/4880/buggy-version/modules.swagger-parser-v3.src.main.java.io.swagger.v3.parser.processors.ExternalRefProcessor.java", "BodyUseAPI": ["io.swagger.v3.oas.models.media.ArraySchema.getItems()", "arrayProp.getItems().getProperties()", "io.swagger.v3.parser.processors.ExternalRefProcessor.processProperties(arrayProp.getItems().getProperties(),java.lang.String)"], "Fixed commit": "6baff9cd16c966f491d0633943606da9cdfefb2c", "Url": "https://api.github.com/repos/ymohdriz/swagger-parser", "Date": "2018-09-29T10:22:09Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edu.gatech.cs2340.donationtracker.LoginActivity.addUser(new edu.gatech.cs2340.donationtracker.User(name, username.getText().toString(), password.getText().toString(), ((edu.gatech.cs2340.donationtracker.AccountType) (accountTypeSpinner.getSelectedItem()))))) { setContentView(R.layout.login); }else { snackbar2.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/7591/buggy-version/app.src.main.java.edu.gatech.cs2340.donationtracker.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "696b26929de28011204e7c123d73b5d4d505a1c5", "Url": "https://api.github.com/repos/thoughton3/Thomas-and-the-Goyls-Donation-Tracker", "Date": "2018-10-01T15:39:00Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MyString.myStrings.size()) <= 100) return MyString.myStrings;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6772/buggy-version/src.MyString.java", "BodyUseAPI": [], "Fixed commit": "b4d3a2eefb3bcbea8260eb353274e243db74bcd7", "Url": "https://api.github.com/repos/Wangmmmm/WordCountPro", "Date": "2018-04-08T14:55:23Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((m2.matches()) && ((m2.group(4).toString().length()) <= 15)) { current = current + (((android.widget.Button) (view)).getText().toString()); this.view.setText(current); }else if (m3.matches()) { if ((m3.group(1).length()) < 10) { current = current + (((android.widget.Button) (view)).getText().toString()); this.view.setText(current); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/6101/buggy-version/app.src.main.java.com.example.master.calculator.Listeners.NumberListener.java", "BodyUseAPI": [], "Fixed commit": "b7598cf5dc4b0e320fcafd2aa161bb597a026de8", "Url": "https://api.github.com/repos/masterrom/FloatingPointCalculatorApp", "Date": "2018-02-09T19:45:24Z"},
{"Line": "=>4592", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newVarName == null) && (variableMap.containsKey(varToUpdate.getVarName()))) { newVarName = generateNewVarName(varToUpdate.getVarName(), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V153/8234/buggy-version/nd4j-backends.nd4j-api-parent.nd4j-api.src.main.java.org.nd4j.autodiff.samediff.SameDiff.java", "BodyUseAPI": ["org.nd4j.autodiff.samediff.SDVariable.getVarName()", "org.nd4j.autodiff.samediff.SameDiff.generateNewVarName(varToUpdate.getVarName(),int)"], "Fixed commit": "f0e2853d25b215a4e68bff1b6c3b35b4d081a255", "Url": "https://api.github.com/repos/deeplearning4j/nd4j", "Date": "2018-01-18T04:56:53Z"},
{"Line": "=>495", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((boardService.GetCount()) > 1) { model.addAttribute(\"nextBoardItem\", nextBoardItem); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/1304/buggy-version/src.main.java.com.killi8n.board.controllers.BoardController.java", "BodyUseAPI": [], "Fixed commit": "d3b80b7b5476ee6d2fc37fe5739ea78d2ba054c7", "Url": "https://api.github.com/repos/killi8n/SpringLastTermBoard", "Date": "2018-06-17T05:37:19Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextInt()", "java.util.Queue<com.mounacheikhna.training.B.TwoButtons.TaskB.Node>.poll()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (m < (top.v)) { out.println(((java.lang.Math.max(0, ((top.v) - m))) + (top.c))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/1252/buggy-version/competitiveprogramming-java.src.com.mounacheikhna.training.B.TwoButtons.java", "BodyUseAPI": ["java.lang.Math.max(int,int)", "java.io.PrintWriter.println(int)"], "Fixed commit": "3dd3019d31f72ee8d91748d9472fc429c7ea055d", "Url": "https://api.github.com/repos/chemouna/competitiveprogramming", "Date": "2018-02-15T22:44:48Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (update) { java.util.List<java.util.Map<java.lang.String, java.lang.Object>> req = ((java.util.List<java.util.Map<java.lang.String, java.lang.Object>>) (actorMessage.getRequest().get(JsonKey.TENANT_PREFERENCE))); if ((null == req) || (req.isEmpty())) throw new org.sunbird.common.exception.ProjectCommonException(ResponseCode.invalidRequestData.getErrorCode(), ResponseCode.invalidRequestData.getErrorMessage(), ResponseCode.CLIENT_ERROR.getResponseCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9111/buggy-version/actors.core.src.main.java.org.sunbird.learner.actors.tenantpreference.TenantPreferenceManagementActor.java", "BodyUseAPI": [], "Fixed commit": "6b463f75256be7e8ae59d69a6a7da436b0c491e1", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-mw", "Date": "2018-03-22T08:48:15Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mTimerRunning) { pauseTimer(); }else { resetTimer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/142/buggy-version/app.src.main.java.ulti72.intime.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "06b73a9bc4e971f0e0fbc06586c4ab5995933460", "Url": "https://api.github.com/repos/ulti72/InTime", "Date": "2018-05-28T07:43:20Z"},
{"Line": "=>536", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((BuildConfig.VERSION_CODE) < (java.lang.Integer.parseInt(mFirebaseRemoteConfig.getString(\"app_version\")))) { new com.yarolegovich.lovelydialog.LovelyStandardDialog(this, LovelyStandardDialog.ButtonLayout.VERTICAL).setTopColorRes(R.color.medium_jungle_green).setButtonsColorRes(R.color.red_transperant).setIcon(R.drawable.vac_small).setTitle(R.string.update_application).setMessage(R.string.update_application_to_access_new_features_of_app).setCancelable(false).setPositiveButton(R.string.update, new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { final java.lang.String appPackageName = getPackageName(); try { startActivity(new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse((\"market://details?id=\" + appPackageName)))); } catch (com.imagesoftware.anubhav.vacmet.android anfe) { startActivity(new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse((\"https://play.google.com/store/apps/details?id=\" + appPackageName)))); } } }).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5228/buggy-version/app.src.main.java.com.imagesoftware.anubhav.vacmet.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "fcd41a66ff121192ae8d26429f7d8ae219078bfb", "Url": "https://api.github.com/repos/jay1493/vacmetOrder", "Date": "2018-03-06T11:12:05Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Bukkit.getPlayerExact(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (p == target) { p.sendMessage(\"\u00a7cVoc\u00ea n\u00e3o pode enviar pedidos de teleporte para si mesmo!\"); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7860/buggy-version/src.me.wolf_131.mrtpa.Commands.java", "BodyUseAPI": ["org.bukkit.entity.Player.sendMessage(java.lang.String)"], "Fixed commit": "64f6c91922c20b472e166d743c7bec6e30856443", "Url": "https://api.github.com/repos/iWolf131/MRTPA", "Date": "2018-03-31T14:59:24Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(p.hasPermission(\"mrtpa.cooldown\"))) plugin.cooldown.put(p.getName(), java.lang.System.currentTimeMillis());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7860/buggy-version/src.me.wolf_131.mrtpa.Commands.java", "BodyUseAPI": ["org.bukkit.entity.Player.getName()", "plugin.cooldown.put(p.getName(),long)"], "Fixed commit": "64f6c91922c20b472e166d743c7bec6e30856443", "Url": "https://api.github.com/repos/iWolf131/MRTPA", "Date": "2018-03-31T14:59:24Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.abraksis.appusagetracker.UsageStatsDataSource.getAppsUsageStatsByDate(java.util.Calendar,java.util.Calendar)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (apps.isEmpty()) { mostUsedApp = new net.abraksis.appusagetracker.Application(\"unknown\", 0); }else { mostUsedApp = apps.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6612/buggy-version/app.src.main.java.net.abraksis.appusagetracker.UsageStatsDataSource.java", "BodyUseAPI": ["java.util.ArrayList<net.abraksis.appusagetracker.Application>.get(int)"], "Fixed commit": "9fd71227f88727840431daa5d8f686ed3038d1a9", "Url": "https://api.github.com/repos/SergeyTonoyan/AppUsageTracker", "Date": "2018-01-25T20:11:52Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((items.findAll().size()) == 0) { items.save(new io.spring.lab.warehouse.item.Item(null, \"A\", 100, java.math.BigDecimal.valueOf(40.0))); items.save(new io.spring.lab.warehouse.item.Item(null, \"B\", 100, java.math.BigDecimal.valueOf(10.0))); items.save(new io.spring.lab.warehouse.item.Item(null, \"C\", 100, java.math.BigDecimal.valueOf(30.0))); items.save(new io.spring.lab.warehouse.item.Item(null, \"D\", 100, java.math.BigDecimal.valueOf(25.0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4693/buggy-version/warehouse.src.main.java.io.spring.lab.warehouse.WarehouseApplication.java", "BodyUseAPI": ["io.spring.lab.warehouse.item.ItemRepository.save(io.spring.lab.warehouse.item.Item)", "io.spring.lab.warehouse.item.ItemRepository.save(io.spring.lab.warehouse.item.Item)", "io.spring.lab.warehouse.item.ItemRepository.save(io.spring.lab.warehouse.item.Item)", "io.spring.lab.warehouse.item.ItemRepository.save(io.spring.lab.warehouse.item.Item)"], "Fixed commit": "e20d4a67f38e41f3792d6032755105762035ce0f", "Url": "https://api.github.com/repos/kaczynskid/spring-io-lab12", "Date": "2018-03-08T09:46:36Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/878/buggy-version/src.main.java.net.silentchaos512.borderblocks.util.XPManager.java", "BodyUseAPI": [], "Fixed commit": "b976850f67bfeb4d3d142410895e3a87fe4fe69e", "Url": "https://api.github.com/repos/SilentChaos512/Borderblocks", "Date": "2018-07-26T01:20:45Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["client.SchedulingAlgorithm.searchTutorialGroup(scheduleList.get(j).getGroupID())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (tg.getCourseCodeList().contains(courseList.get(i).getCourseCode())) { assignCourse(scheduleList.get(j).getGroupID(), scheduleList.get(j).getClassList(), courseList.get(i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3153/buggy-version/src.java.client.SchedulingAlgorithm.java", "BodyUseAPI": ["client.SchedulingAlgorithm.assignCourse(scheduleList.get(j).getGroupID(),scheduleList.get(j).getClassList(),courseList.get(i))", "java.util.ArrayList<client.CourseType>.get(int)"], "Fixed commit": "e7df60909072a3f23ebe33dfec364bcf183527c4", "Url": "https://api.github.com/repos/alexgcm97/ClaSS", "Date": "2018-10-23T09:01:49Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (modifiers.contains(PsiModifier.STATIC)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/1947/buggy-version/src.main.java.de.plushnikov.intellij.plugin.processor.modifier.ValueModifierProcessor.java", "BodyUseAPI": [], "Fixed commit": "531d0246ea2813bb014c382d69c48fe934f7f9c8", "Url": "https://api.github.com/repos/mplushnikov/lombok-intellij-plugin", "Date": "2018-10-20T14:24:16Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (modifiers.contains(PsiModifier.STATIC)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/1947/buggy-version/src.main.java.de.plushnikov.intellij.plugin.processor.modifier.FieldDefaultsModifierProcessor.java", "BodyUseAPI": [], "Fixed commit": "531d0246ea2813bb014c382d69c48fe934f7f9c8", "Url": "https://api.github.com/repos/mplushnikov/lombok-intellij-plugin", "Date": "2018-10-20T14:24:16Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sender.hasPermission(\"itemcleaner.remove\")) if (args[0].equalsIgnoreCase(\"all\")) { for (org.bukkit.World w : worlds) { clearWorld(w); } sender.sendMessage(((net.md_5.bungee.api.ChatColor.RED) + \"All worlds have been removed!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4357/buggy-version/ItemCleaner.src.de.pongy.itemcleaner.ItemCleaner.java", "BodyUseAPI": ["org.bukkit.command.CommandSender.sendMessage(((net.md_5.bungee.api.ChatColor.RED) + \"All worlds have been removed!\"))"], "Fixed commit": "341aff0ffeb50c018d69a388a700e93852844d25", "Url": "https://api.github.com/repos/pongy20/ItemCleaner", "Date": "2018-06-02T13:51:38Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.blakebr0.extendedcrafting.config.ModConfig.confSingularityEnabled) { net.minecraft.client.Minecraft.getMinecraft().getItemColors().registerItemColorHandler(new com.blakebr0.extendedcrafting.item.ItemSingularity.ColorHandler(), ModItems.itemSingularity); net.minecraft.client.Minecraft.getMinecraft().getItemColors().registerItemColorHandler(new com.blakebr0.extendedcrafting.item.ItemSingularityCustom.ColorHandler(), ModItems.itemSingularityCustom); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4812/buggy-version/src.main.java.com.blakebr0.extendedcrafting.proxy.ClientProxy.java", "BodyUseAPI": [], "Fixed commit": "fec4241bd0bdfbc3ac4b0f8c6abc6094eba5b98e", "Url": "https://api.github.com/repos/BlakeBr0/ExtendedCrafting", "Date": "2018-07-20T03:51:28Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((filterList.size()) > (movies.size())) { movies.add(position, movie); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9507/buggy-version/app.src.main.java.de.kaiwidmaier.suggestamovie.adapters.RecyclerMovieAdapter.java", "BodyUseAPI": ["java.util.List<de.kaiwidmaier.suggestamovie.data.Movie>.add(int,de.kaiwidmaier.suggestamovie.data.Movie)"], "Fixed commit": "bf3a26cd10d216da2543b0afba10cb3f45a62598", "Url": "https://api.github.com/repos/RealityTest/Suggest-a-Movie", "Date": "2018-06-14T16:07:20Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hospital.action.DeliveryService.getDeliveryInfoById(com.hospital.action.DeliveryInfo)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (deliveryInfo.getEndDate().before(retrieveDate)) { errorMsg = \"\u95ee\u5377\u5df2\u7ecf\u8fc7\u671f\uff0c\u65e0\u6cd5\u4f5c\u7b54\"; return ERROR; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3174/buggy-version/hospital-wechat.src.main.java.com.hospital.action.surveyAction.java", "BodyUseAPI": [], "Fixed commit": "6d52b058df0cbd7d32a84e135af0384be474742b", "Url": "https://api.github.com/repos/lht142934/HospitalSystem", "Date": "2018-03-17T05:12:38Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["item.getProd().leftHand().followRestriction()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((fr != null) && (!(fr.isEmptyCC()))) { final_range = final_range.difference(item.getProd().leftHand().followRestriction()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6570/buggy-version/org.metaborg.sdf2table.src.main.java.org.metaborg.sdf2table.parsetable.State.java", "BodyUseAPI": [], "Fixed commit": "893580c4bc6af0c851cae6dfc7c9082813589ce3", "Url": "https://api.github.com/repos/metaborg/sdf", "Date": "2018-03-19T13:15:19Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((res.length()) > 8) { res = res.substring(0, 8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/1841/buggy-version/src.StringUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "89447211421c64daded1eb17cb2a03b669ac7032", "Url": "https://api.github.com/repos/Purdue-CS193/lab-3-hCraker", "Date": "2018-09-25T18:44:03Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["xyz.dcme.agg.frag.article.ArticleFragment.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((activity != null) && (!(android.text.TextUtils.isEmpty(tips)))) { android.widget.Toast.makeText(activity, tips, Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5237/buggy-version/app.src.main.java.xyz.dcme.agg.frag.article.ArticleFragment.java", "BodyUseAPI": ["android.widget.Toast.makeText(android.support.v4.app.FragmentActivity,java.lang.String,Toast.LENGTH_SHORT)", "android.widget.Toast.makeText(activity, tips, Toast.LENGTH_SHORT).show()"], "Fixed commit": "c6e71dbbc33e3d6b0a45c1da8bc8e05041d83d5e", "Url": "https://api.github.com/repos/caoshen/agg", "Date": "2018-04-30T08:51:59Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((null != commitMessage) || (!(\"\".equals(commitMessage)))) { commitMessage = commitMessage.substring(1, ((commitMessage.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7064/buggy-version/src.main.java.fcu.selab.progedu.service.JenkinsService.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "28ad75fe7a36a58ff03147aa167b521375bd7d67", "Url": "https://api.github.com/repos/GJen123/selab245_gitlab", "Date": "2018-02-22T07:31:13Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (issueKeys.isEmpty()) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3400/buggy-version/src.main.java.org.apache.sling.tooling.lc.jira.IssueFinder.java", "BodyUseAPI": [], "Fixed commit": "a1d70e1431b61c101d97762c439db4832041f084", "Url": "https://api.github.com/repos/apache/sling-launchpad-comparator", "Date": "2018-10-16T14:18:44Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requestData == null) throw new org.sunbird.common.exception.ProjectCommonException(ResponseCode.contentTypeRequiredError.getErrorCode(), ResponseCode.contentTypeRequiredError.getErrorMessage(), ResponseCode.CLIENT_ERROR.getResponseCode());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/678/buggy-version/service.app.mapper.RequestMapper.java", "BodyUseAPI": [], "Fixed commit": "48eff3b9ceca31aa53dd48f71e9c4ea108fc2019", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-service", "Date": "2018-06-21T08:59:48Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((threadInfo.getFileSize()) == (threadInfo.getEndPosition())) { floatingmuseum.sonic.utils.LogUtil.d(floatingmuseum.sonic.threads.DownloadThread.TAG, ((\"getHttpHeaders()...last thread...threadID:\" + (threadInfo.getId())) + \"...omit endPosition\")); headers.put(\"Range\", ((\"bytes=\" + (threadInfo.getCurrentPosition())) + \"-\")); }else { floatingmuseum.sonic.utils.LogUtil.d(floatingmuseum.sonic.threads.DownloadThread.TAG, ((\"getHttpHeaders()...not last thread...threadID:\" + (threadInfo.getId())) + \"...add endPosition\")); headers.put(\"Range\", (((\"bytes=\" + (threadInfo.getCurrentPosition())) + \"-\") + (threadInfo.getEndPosition()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2400/buggy-version/sonic.src.main.java.floatingmuseum.sonic.threads.DownloadThread.java", "BodyUseAPI": ["floatingmuseum.sonic.threads.DownloadThread.getCurrentPosition()", "floatingmuseum.sonic.threads.DownloadThread.getId()", "floatingmuseum.sonic.threads.DownloadThread.getEndPosition()", "floatingmuseum.sonic.threads.DownloadThread.getCurrentPosition()", "floatingmuseum.sonic.utils.LogUtil.d(java.lang.String,((\"getHttpHeaders()...not last thread...threadID:\" + (threadInfo.getId())) + \"...add endPosition\"))", "floatingmuseum.sonic.utils.LogUtil.d(java.lang.String,((\"getHttpHeaders()...last thread...threadID:\" + (threadInfo.getId())) + \"...omit endPosition\"))", "floatingmuseum.sonic.threads.DownloadThread.getId()", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,((\"bytes=\" + (threadInfo.getCurrentPosition())) + \"-\"))", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,(((\"bytes=\" + (threadInfo.getCurrentPosition())) + \"-\") + (threadInfo.getEndPosition())))"], "Fixed commit": "f3dc4e6d77d78d1b48cdb9341233778bea8a1eab", "Url": "https://api.github.com/repos/floatingmuseum/Sonic", "Date": "2018-10-17T07:09:42Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.lang.String.class.isAssignableFrom(this.assets.getClass())) { this.transaction.setAsset(new com.bigchaindb.builders.Asset(((java.lang.String) (this.assets)))); }else { this.transaction.setAsset(new com.bigchaindb.builders.Asset(this.assets, this.assetsDataClass)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2178/buggy-version/src.main.java.com.bigchaindb.builders.BigchainDbTransactionBuilder.java", "BodyUseAPI": ["com.bigchaindb.builders.Transaction.setAsset(com.bigchaindb.builders.Asset)"], "Fixed commit": "6014a87c247945551a724c0d81a2b01a502a9328", "Url": "https://api.github.com/repos/Bloombox/java-bigchaindb-driver", "Date": "2018-08-14T23:55:41Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["rd.user.getAllFileHistories()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((fileHistories.size()) == 0) { java.lang.String noFile = \"There has been no file shared yet.\"; fileHistory.add(noFile); }else { android.util.Log.i(\"Export\", (\"Test \" + (fileHistories.size()))); for (com.thestreetcodecompany.roady.classes.model.FileHistory fh : fileHistories) { fileHistory.add(fh.getHistory()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9730/buggy-version/app.src.main.java.com.thestreetcodecompany.roady.ExportActivity.java", "BodyUseAPI": ["android.util.Log.i(java.lang.String,(\"Test \" + (fileHistories.size())))", "java.util.List<com.thestreetcodecompany.roady.classes.model.FileHistory>.size()"], "Fixed commit": "7ca4794307e748f0a346a0614a247b92cd78c8d0", "Url": "https://api.github.com/repos/stepheschaubes/SW-Entwicklung-XP-Morning-05", "Date": "2018-06-06T14:17:25Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (status == (OpenCLLib.CL_DEVICE_NOT_FOUND)) { java.lang.System.out.println(((\"OpenCL::getGpus no device found on plateforms[\" + i) + \"]\")); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2623/buggy-version/src.com.sheepit.client.hardware.gpu.opencl.OpenCL.java", "BodyUseAPI": [], "Fixed commit": "85e53c34e4d2685ca3b0500e3a20d12872d84e95", "Url": "https://api.github.com/repos/laurent-clouet/sheepit-client", "Date": "2018-08-08T15:41:44Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((history.size()) > 0) { TicTacToePanel.TicTacToeButton lastMarked = history.get(((history.size()) - 1)); history.remove(lastMarked); lastMarked.clear(); switchTurn(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4438/buggy-version/tic-tac-toe.TicTacToePanel.java", "BodyUseAPI": ["java.util.ArrayList<TicTacToePanel.TicTacToeButton>.remove(TicTacToePanel.TicTacToeButton)", "java.util.ArrayList<TicTacToePanel.TicTacToeButton>.size()", "java.util.ArrayList<TicTacToePanel.TicTacToeButton>.get(int)"], "Fixed commit": "d432576f0c1260a7823df17fd2bd3bc142c13f35", "Url": "https://api.github.com/repos/thesephist/java-examples", "Date": "2018-05-02T00:32:56Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((android.widget.EditText) (findViewById(R.id.player2Entry))).getText().toString().trim()", "((android.widget.EditText) (findViewById(R.id.player1Entry))).getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (winner.equals(loser)) { android.widget.Toast.makeText(this, \"Have you added the same player twice?\", Toast.LENGTH_SHORT).show(); }else if (!(db.playerExists(loser))) askForPlayer(loser, null); else if ((db.addGame(winner, loser, draw)) == (-1)) android.widget.Toast.makeText(this, \"Failed to add game.\\nHave you added the same player twice?\", Toast.LENGTH_SHORT).show(); else { android.database.Cursor player = db.getPlayer(winner); player.moveToFirst(); org.goochjs.glicko2.Rating rWinner = new org.goochjs.glicko2.Rating(winner, null, player.getFloat(1), player.getFloat(2), player.getFloat(3)); player = db.getPlayer(loser); player.moveToFirst(); org.goochjs.glicko2.Rating rLoser = new org.goochjs.glicko2.Rating(loser, null, player.getFloat(1), player.getFloat(2), player.getFloat(3)); org.goochjs.glicko2.RatingPeriodResults results = new org.goochjs.glicko2.RatingPeriodResults(); if (draw) results.addDraw(rWinner, rLoser); else results.addResult(rWinner, rLoser); android.content.SharedPreferences preferences = android.preference.PreferenceManager.getDefaultSharedPreferences(this); org.goochjs.glicko2.RatingCalculator calculator = new org.goochjs.glicko2.RatingCalculator(preferences.getFloat(\"System Tau\", 0.75F), preferences.getFloat(\"Default Volatility\", 0.06F)); calculator.updateRatings(results); db.updatePlayer(winner, ((float) (rWinner.getRating())), ((float) (rWinner.getRatingDeviation())), ((float) (rWinner.getVolatility()))); db.updatePlayer(loser, ((float) (rLoser.getRating())), ((float) (rLoser.getRatingDeviation())), ((float) (rLoser.getVolatility()))); setResult(group10.glicko2calculator.RESULT_OK); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5585/buggy-version/app.src.main.java.group10.glicko2calculator.AddGameActivity.java", "BodyUseAPI": ["group10.glicko2calculator.DatabaseHandler.getPlayer(java.lang.String)", "group10.glicko2calculator.DatabaseHandler.updatePlayer(java.lang.String,((float) (rLoser.getRating())),((float) (rLoser.getRatingDeviation())),((float) (rLoser.getVolatility())))", "group10.glicko2calculator.DatabaseHandler.getPlayer(java.lang.String)", "group10.glicko2calculator.DatabaseHandler.playerExists(java.lang.String)", "group10.glicko2calculator.DatabaseHandler.updatePlayer(java.lang.String,((float) (rWinner.getRating())),((float) (rWinner.getRatingDeviation())),((float) (rWinner.getVolatility())))", "group10.glicko2calculator.AddGameActivity.1.askForPlayer(java.lang.String,<nulltype>)", "group10.glicko2calculator.DatabaseHandler.addGame(java.lang.String,java.lang.String,boolean)"], "Fixed commit": "ed2bae1145650fe6f5036b0217c97758d6d19a47", "Url": "https://api.github.com/repos/Malikil/AndroidGlicko2Calculator", "Date": "2018-04-04T16:55:28Z"},
{"Line": "=>573", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (amount < 0) return amount;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7863/buggy-version/src.main.java.slimeknights.tconstruct.library.utils.ToolHelper.java", "BodyUseAPI": [], "Fixed commit": "53af55a67969b1b4a718c14c35d4afbe12644a05", "Url": "https://api.github.com/repos/Avatair/TinkersConstruct", "Date": "2018-10-08T15:13:43Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(selectedCourse.isEmpty())) && (ch.epfl.sweng.studdybuddy.CreateGroup.coursesDB.contains(selectedCourse))) { MainActivity.groupList1.add(new ch.epfl.sweng.studdybuddy.Group(maxParticipants, new ch.epfl.sweng.studdybuddy.Course(selectedCourse), selectedLanguage, ch.epfl.sweng.studdybuddy.activities.MainActivity.usersList1)); android.content.Intent intent = new android.content.Intent(this, ch.epfl.sweng.studdybuddy.activities.GroupsActivity.class); startActivity(intent); }else { android.widget.Toast.makeText(view.getContext(), \"The course selected doesn't exist\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8663/buggy-version/app.src.main.java.ch.epfl.sweng.studdybuddy.CreateGroup.java", "BodyUseAPI": ["MainActivity.groupList1.add(ch.epfl.sweng.studdybuddy.Group)"], "Fixed commit": "53568c39a5a5a5f6518459ee1b4498bc17274b71", "Url": "https://api.github.com/repos/geofot96/StudyBuddy", "Date": "2018-10-16T15:05:22Z"},
{"Line": "=>798", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((costs) == null) { if ((selectedFreeMessage) != null) { message = selectedFreeMessage; }else if (message == null) { message = getMessage(\"selected_free\"); } }else if (message == null) { message = getMessage(\"selected\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2998/buggy-version/Magic.src.main.java.com.elmakers.mine.bukkit.action.builtin.SelectorAction.java", "BodyUseAPI": [], "Fixed commit": "cac50996f96567d6cf82d79cdfeb26c76c6f7b40", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2018-05-09T03:43:40Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((recyclerView.getLayoutManager()) != null) { recyclerView.getLayoutManager().onRestoreInstanceState(savedScrollState); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7510/buggy-version/app.src.main.java.com.example.android.popularmovies1.MainActivity.java", "BodyUseAPI": ["android.support.v7.widget.RecyclerView.getLayoutManager()", "recyclerView.getLayoutManager().onRestoreInstanceState(android.os.Parcelable)"], "Fixed commit": "2adee68165ddde14cbeb5b41f97860b9c6acbdd7", "Url": "https://api.github.com/repos/ivanbumbak/ANDN_PopularMovies2", "Date": "2018-05-03T14:57:13Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((recyclerView.getLayoutManager()) != null) { recyclerView.getLayoutManager().onRestoreInstanceState(savedScrollState); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7510/buggy-version/app.src.main.java.com.example.android.popularmovies1.MainActivity.java", "BodyUseAPI": ["recyclerView.getLayoutManager().onRestoreInstanceState(android.os.Parcelable)", "android.support.v7.widget.RecyclerView.getLayoutManager()"], "Fixed commit": "2adee68165ddde14cbeb5b41f97860b9c6acbdd7", "Url": "https://api.github.com/repos/ivanbumbak/ANDN_PopularMovies2", "Date": "2018-05-03T14:57:13Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameterValues(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (groups == null) { groups = new java.lang.String[]{ \"0\" }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9297/buggy-version/GameBrokr.src.main.java.PlaceBetServlet.java", "BodyUseAPI": [], "Fixed commit": "00b78eb35c99073c8088eb7df7c5cfa24a1bf1a2", "Url": "https://api.github.com/repos/tylerduffy/GameBrokr", "Date": "2018-09-29T00:30:32Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (floor == ((com.sebastiandero.kata.TheLift.queues.length) - 1)) { travelingUp = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7412/buggy-version/src.com.sebastiandero.kata.TheLift.java", "BodyUseAPI": [], "Fixed commit": "c6d4ff2039048a28d8f3446f2dcd1671562799da", "Url": "https://api.github.com/repos/sebastiandero/codewars", "Date": "2018-04-16T23:19:00Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (floor == 0) { travelingUp = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7412/buggy-version/src.com.sebastiandero.kata.TheLift.java", "BodyUseAPI": [], "Fixed commit": "c6d4ff2039048a28d8f3446f2dcd1671562799da", "Url": "https://api.github.com/repos/sebastiandero/codewars", "Date": "2018-04-16T23:19:00Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedPois) != null) { addSelectedPoisInterface.removeAllPois(); selectedPois.clear(); notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6036/buggy-version/beaconbacon.src.main.java.dk.mustache.beaconbacon.adapters.PoiSelectionAdapter.java", "BodyUseAPI": [], "Fixed commit": "7c88ffe45007858b8e3b1e05d1f58e7293c633fa", "Url": "https://api.github.com/repos/mustachedk/android-beacon-bacon-lib", "Date": "2018-08-13T12:19:33Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mRNEditText.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((rollNumber.length()) < 10) || ((rollNumber.length()) > 10)) { android.widget.Toast.makeText(getApplicationContext(), \"Please Enter Valid Roll Number ! \", Toast.LENGTH_SHORT).show(); }else if (validatingRollnumber(rollNumber)) { signIn(); topnotes.nituk.com.topnotes.LoginActivity.mConnectingTextView.setVisibility(View.VISIBLE); }else { android.widget.Toast.makeText(getApplicationContext(), \"Please Enter Valid Roll Number ! \", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9838/buggy-version/app.src.main.java.topnotes.nituk.com.topnotes.LoginActivity.java", "BodyUseAPI": ["topnotes.nituk.com.topnotes.LoginActivity.1.validatingRollnumber(java.lang.String)"], "Fixed commit": "085bc094b64ccae734d0f106f2fea013fa6bd49e", "Url": "https://api.github.com/repos/AndroidBoys/TopNotes", "Date": "2018-06-30T07:33:12Z"},
{"Line": "=>617", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (prod.getManageStock()) { salesquantity = m_dlSales.getProductSalesQty(productid, SALES_INTERVAL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8627/buggy-version/src-pos.uk.chromis.pos.inventory.StockDiaryEditor.java", "BodyUseAPI": [], "Fixed commit": "03297c4a1218e20f35ee2652512dbf9f5e2e991b", "Url": "https://api.github.com/repos/Hedydd/ChromisPOS", "Date": "2018-08-26T11:42:05Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.stackTagCompound) != null) && (this.stackTagCompound.hasKey(Constants.TAG_CUSTOM))) { bauble.readFromNBT(this.stackTagCompound.getCompoundTag(Constants.TAG_CUSTOM)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3552/buggy-version/src.main.java.org.soraworld.cbaubles.mixin.item.MixinItemStack.java", "BodyUseAPI": ["net.minecraft.nbt.NBTTagCompound.getCompoundTag(Constants.TAG_CUSTOM)", "org.soraworld.cbaubles.items.Bauble.readFromNBT(this.stackTagCompound.getCompoundTag(Constants.TAG_CUSTOM))"], "Fixed commit": "88ea625964fbc89e330bade3dce5c2a9ce8ff572", "Url": "https://api.github.com/repos/Himmelt/CustomBaubles", "Date": "2018-03-04T15:44:27Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.maxieds.chameleonminilivedebugger.LiveLoggerActivity.logDataEntries) != null) com.maxieds.chameleonminilivedebugger.LiveLoggerActivity.logDataEntries.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3788/buggy-version/app.src.main.java.com.maxieds.chameleonminilivedebugger.LiveLoggerActivity.java", "BodyUseAPI": [], "Fixed commit": "df99117cd3699e29ca18b9dc168663149816a12c", "Url": "https://api.github.com/repos/maxieds/ChameleonMiniLiveDebugger", "Date": "2018-01-22T01:28:05Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (keyPart.contains(\"[\")) { if (elementKeyParts.get(j).equals(keyPart)) { tempIndex = j; } }else { java.lang.String elementPartWithoutBracket = java.util.Arrays.asList(elementKeyParts.get(j).split(\"\\\\[\")).get(0); if (elementPartWithoutBracket.equals(keyPart)) { tempIndex = j; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5566/buggy-version/src.main.java.com.ericsson.ei.jmespath.IncompletePathFilterFunction.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "4bf6d68837b131be63bff7074f2554ae3a56ef53", "Url": "https://api.github.com/repos/J-Binieda-ericsson/eiffel-intelligence", "Date": "2018-09-21T14:51:31Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.skywalking.apm.util.StringUtil.isEmpty(namespace)) { return \"/skywalking\"; }else { return (\"/\" + (namespace)) + \"/skywalking\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2981/buggy-version/apm-collector.apm-collector-cluster.collector-cluster-zookeeper-provider.src.main.java.org.apache.skywalking.apm.collector.cluster.zookeeper.ClusterZKDataMonitor.java", "BodyUseAPI": [], "Fixed commit": "afcd3314d13ca3c0ddaa70e81b8cdeda0e870536", "Url": "https://api.github.com/repos/coder-yqj/incubator-skywalking", "Date": "2018-03-19T10:03:17Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.jedlab.framework.util.StringUtil.isNotEmpty(viewName)) { if (t instanceof java.lang.reflect.ParameterizedType) { java.lang.reflect.ParameterizedType paramType = ((java.lang.reflect.ParameterizedType) (t)); java.lang.Class<?> clz = ((java.lang.Class<?>) (paramType.getActualTypeArguments()[0])); axonBuilder.addFilter(new com.jedlab.framework.json.xml.XmlConfigFilter(clz, viewName)); }else if (type instanceof java.lang.reflect.ParameterizedType) { java.lang.reflect.ParameterizedType paramType = ((java.lang.reflect.ParameterizedType) (type)); java.lang.Class<?> clz = ((java.lang.Class<?>) (paramType.getActualTypeArguments()[0])); axonBuilder.addFilter(new com.jedlab.framework.json.xml.XmlConfigFilter(clz, viewName)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6817/buggy-version/webappframework.src.main.java.com.jedlab.framework.spring.mvc.MappingAxon2HttpMessageConverter.java", "BodyUseAPI": ["org.omidbiz.core.axon.AxonBuilder.addFilter(com.jedlab.framework.json.xml.XmlConfigFilter)", "org.omidbiz.core.axon.AxonBuilder.addFilter(com.jedlab.framework.json.xml.XmlConfigFilter)"], "Fixed commit": "d3c7e3426082371199f97dbb7812a254e67bc561", "Url": "https://api.github.com/repos/jedlab/openpm", "Date": "2018-04-21T08:39:01Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ubc.pavlab.rdp.services.GOService.getTerm(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (term != null) { java.util.Collection<ubc.pavlab.rdp.model.Gene> genes = goService.getGenes(term); modelAndView.addObject(\"genes\", user.getGenesByTaxonAndTier(taxon, TierType.MANUAL_TIERS).stream().filter(genes::contains).collect(java.util.stream.Collectors.toSet())); }else { modelAndView.addObject(\"genes\", java.util.Collections.EMPTY_SET); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3955/buggy-version/src.main.java.ubc.pavlab.rdp.controllers.MainController.java", "BodyUseAPI": ["ubc.pavlab.rdp.services.GOService.getGenes(ubc.pavlab.rdp.model.GeneOntologyTerm)"], "Fixed commit": "9609f1dd7b99034707ddfd9e215e89fb87919b1d", "Url": "https://api.github.com/repos/JacobsonMT/rdp", "Date": "2018-02-15T21:32:10Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selActor) instanceof com.bladecoder.engine.model.AnchorActor) { float orgX = selActor.getX(); float orgY = selActor.getY(); float dst = com.badlogic.gdx.math.Vector2.dst(p.x, p.y, orgX, orgY); if (dst < (com.bladecoder.engine.model.Scene.ANCHOR_RADIUS)) { draggingMode = com.bladecoder.engineeditor.scneditor.ScnWidgetInputListener.DraggingModes.DRAGGING_ACTOR; undoOrg.set(selActor.getX(), selActor.getY()); return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8070/buggy-version/adventure-editor.src.main.java.com.bladecoder.engineeditor.scneditor.ScnWidgetInputListener.java", "BodyUseAPI": [], "Fixed commit": "a30939291914bc4df1f21929602d5b6e925d6ff8", "Url": "https://api.github.com/repos/bladecoder/bladecoder-adventure-engine", "Date": "2018-09-08T08:43:38Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (responseHeaders.containsKey(\"Set-Cookie\")) { com.github.alinz.reactnativewebviewbridge.CookieSyncManager cm = com.github.alinz.reactnativewebviewbridge.CookieSyncManager.createInstance(webView.getContext()); com.github.alinz.reactnativewebviewbridge.CookieManager cookieManager = com.github.alinz.reactnativewebviewbridge.CookieManager.getInstance(); cookieManager.removeSessionCookie(); java.lang.String cookieString = responseHeaders.get(\"Set-Cookie\"); cookieManager.setCookie(request.getUrl().getHost(), cookieString); com.github.alinz.reactnativewebviewbridge.CookieSyncManager.getInstance().sync(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6164/buggy-version/android.src.main.java.com.github.alinz.reactnativewebviewbridge.WebViewBridgeManager.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "6195e9c13565060823d3d565b6b442d6e88cd8a9", "Url": "https://api.github.com/repos/status-im/react-native-webview-bridge", "Date": "2018-09-03T03:40:22Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(conceptClassKeywords.isEmpty())) { for (java.lang.String keyword : conceptClassKeywords) { keywords += keyword + \",\"; } keywords = keywords.substring(0, ((keywords.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9079/buggy-version/Text_Analyzer.src.LongMemory.java", "BodyUseAPI": [], "Fixed commit": "8118b76f0ced5ec54210b5df7ac4cd972fc421ce", "Url": "https://api.github.com/repos/aimihaila/IP-Lab", "Date": "2018-05-10T13:33:46Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nodeService.hasAspect(node, VgrMaModel.ASPECT_INDEX_PUBLIC_ASPECT)) || (nodeService.hasAspect(node, VgrMaModel.ASPECT_PUBLIC_INDEX_STATE_ASPECT))) { se.vgregion.alfresco.mellanarkiv.platform.pipeline.index.publ.impl.qualifier.IndexQualifierWorkerImpl.LOG.error(((\"Node \" + node) + \" already have public index aspects, indexing already in progress\")); return new se.vgregion.alfresco.mellanarkiv.platform.pipeline.index.publ.impl.PublicIndexStatusObject(STATUS_PUBLIC_INDEX_QUALIFIER_ERROR_WRONG_STATE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7320/buggy-version/platform-mellanarkiv.src.main.java.se.vgregion.alfresco.mellanarkiv.platform.pipeline.index.publ.impl.qualifier.IndexQualifierWorkerImpl.java", "BodyUseAPI": ["org.apache.log4j.Logger.error(((\"Node \" + node) + \" already have public index aspects, indexing already in progress\"))"], "Fixed commit": "c61300de1c0ddccf00d6e7837e7384e5e8e5a61a", "Url": "https://api.github.com/repos/Vastra-Gotalandsregionen/alfresco-mellanarkiv", "Date": "2018-03-07T10:30:30Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((firstTaxonomy.getConfidence_score().doubleValue()) > (com.DecisionTree.CONFIDENCE_UPPER_LIMIT)) { database.addKeywordToSkill(keyword, firstTaxonomy.getTag()); java.lang.Thread.sleep(1000); }else if ((firstTaxonomy.getConfidence_score().doubleValue()) < (com.DecisionTree.CONFIDENCE_LOWER_LIMIT)) { database.addKeywordToNoise(keyword); java.lang.Thread.sleep(1000); }else if (com.SkillsTaxonomyHarmoniser.isDebug) java.lang.System.out.println(\"NOT SUPPOSED TO HAPPEN\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7746/buggy-version/app.src.main.java.com.Controller.java", "BodyUseAPI": ["com.Taxonomy.getConfidence_score()", "com.Taxonomy.getTag()", "com.Database.addKeywordToSkill(java.lang.String,firstTaxonomy.getTag())", "firstTaxonomy.getConfidence_score().doubleValue()"], "Fixed commit": "4c6738b010dd296595e25d043ad3d3b3ed6f2fd2", "Url": "https://api.github.com/repos/pjunwei95/STH", "Date": "2018-10-18T07:39:35Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parentOperation) != null) { net.spy.memcached.protocol.ascii.CollectionBulkStoreOperationImpl p = ((net.spy.memcached.protocol.ascii.CollectionBulkStoreOperationImpl) (parentOperation)); idx = p.getStore().getKeyList().indexOf(this.store.getKeyList().get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/499/buggy-version/src.main.java.net.spy.memcached.protocol.ascii.CollectionBulkStoreOperationImpl.java", "BodyUseAPI": [], "Fixed commit": "c60bb629e1f05c62ccd24262524bf800f1bdc9a1", "Url": "https://api.github.com/repos/MinWooJin/arcus-java-client", "Date": "2018-07-09T00:30:36Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.spring.part05.DBSingleton.getConnection()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (conn != null) java.lang.System.out.println(\"Connection is not null\"); else java.lang.System.out.println(\"Connection is null\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5250/buggy-version/src.io.spring.part05.MainApp.java", "BodyUseAPI": [], "Fixed commit": "b9ab2e8b8a727b57d147586525a84ce3f447946c", "Url": "https://api.github.com/repos/tutkuince/PracticalSpring", "Date": "2018-07-03T10:23:30Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.exists()) { return file.getAbsolutePath(); }else { try { file.createNewFile(); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/568/buggy-version/app.src.main.java.askdat.pyvela.data.local.DataWriteRead.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()", "java.io.File.createNewFile()"], "Fixed commit": "d89142c0a19122093bb91218436a3adf20fdb0d9", "Url": "https://api.github.com/repos/ietze/PyvelaJava", "Date": "2018-10-24T10:40:58Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["askdat.pyvela.main.home.SubjectsAdapter.getSelectedIndex()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (subjectId == (-1)) { throw new java.lang.RuntimeException((\"Invalid subjectId:\" + (java.lang.String.valueOf(subjectId)))); }else { subjectId += 4; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/568/buggy-version/app.src.main.java.askdat.pyvela.main.home.UntSingleFragment.java", "BodyUseAPI": ["java.lang.String.valueOf(int)"], "Fixed commit": "d89142c0a19122093bb91218436a3adf20fdb0d9", "Url": "https://api.github.com/repos/ietze/PyvelaJava", "Date": "2018-10-24T10:40:58Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((curUserCount) < (prevUserCount)) { prevUserCount = curUserCount; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8698/buggy-version/app.src.main.java.app.ultimatex.wifiroutersignal.SignalNotifyService.java", "BodyUseAPI": [], "Fixed commit": "b1691074194241898b07ed45c544098b555e4349", "Url": "https://api.github.com/repos/lakinduakash/WifiRouterSignal", "Date": "2018-06-03T19:22:36Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (request.getRequestURI().equals(\"/error\")) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/496/buggy-version/src.main.java.bg.ansr.simulator.studentsimulatorcore.interceptors.BlockingEventsInterceptor.java", "BodyUseAPI": [], "Fixed commit": "26106ff2c3f78b1fc10b923c8bb5ed45b08e8deb", "Url": "https://api.github.com/repos/ANSR-org/StudentsLifeSimulator", "Date": "2018-03-25T07:31:05Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bg.ansr.simulator.studentsimulatorcore.services.student.StudentService.current()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((student.getLastGivenIncome()) == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/496/buggy-version/src.main.java.bg.ansr.simulator.studentsimulatorcore.interceptors.LifecycleInterceptor.java", "BodyUseAPI": [], "Fixed commit": "26106ff2c3f78b1fc10b923c8bb5ed45b08e8deb", "Url": "https://api.github.com/repos/ANSR-org/StudentsLifeSimulator", "Date": "2018-03-25T07:31:05Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mArticles.isEmpty()) { mArticles = articles; notifyItemRangeInserted(0, mArticles.size()); }else { mArticles = articles; notifyItemRangeChanged(0, mArticles.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9198/buggy-version/app.src.main.java.me.clowting.thijs.zrhackathon.ArticleRecyclerViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "5376e6ffc13ecc2bd2b83950571f780ad58ba383", "Url": "https://api.github.com/repos/raymondelooff/zr-hackathon-2018-app", "Date": "2018-04-20T09:55:16Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["wyvern.target.corewyvernIL.decltype.ConcreteTypeMember.getMetadataValue()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (val != null) { val.acceptVisitor(this, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/272/buggy-version/tools.src.wyvern.target.corewyvernIL.astvisitor.TailCallVisitor.java", "BodyUseAPI": ["wyvern.target.corewyvernIL.expression.Value.acceptVisitor(wyvern.target.corewyvernIL.astvisitor.TailCallVisitor,boolean)"], "Fixed commit": "5abbc919c85f396a72df99ee778b86937386e4d5", "Url": "https://api.github.com/repos/wyvernlang/wyvern", "Date": "2018-04-29T03:29:15Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (true) { city = cityString; android.util.Log.d(to.rent.rentto.Camera.CameraActivity.TAG, (\"Inside validateCity \" + cityString)); return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6558/buggy-version/app.src.main.java.to.rent.rentto.Camera.CameraActivity.java", "BodyUseAPI": [], "Fixed commit": "28763bf0c61cc3fbdaf7c5bab676a9993f1cd640", "Url": "https://api.github.com/repos/minhwebc/Rent.To", "Date": "2018-04-04T17:16:30Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((startAfter) != null) { this.deque.addFirst(parent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8392/buggy-version/smart-hadoop-support.smart-hadoop.src.main.java.org.smartdata.hdfs.metric.fetcher.NamespaceFetcher.java", "BodyUseAPI": [], "Fixed commit": "3c8a6e1d262c18a41ac71983396867da1d012930", "Url": "https://api.github.com/repos/littlezhou/SSM-1", "Date": "2018-03-07T02:37:24Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.al.get(i)) != null) { this.al.get(i).setTipo(tipo); this.al.get(i).setStart(start); this.al.get(i).setnCanali(nCanali); this.al.get(i).setCanaleR(canaleR); this.al.get(i).setCanaleG(canaleG); this.al.get(i).setCanaleB(canaleB); }else { this.al.add(new it.filippo.stella.dmxdashboard.Model.Luce(start, nCanali, tipo, canaleR, canaleG, canaleB)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/1090/buggy-version/src.main.java.it.filippo.stella.dmxdashboard.Model.ApplicationCore.java", "BodyUseAPI": ["this.al.get(i).setCanaleR(java.lang.Integer)", "java.util.ArrayList<it.filippo.stella.dmxdashboard.Model.Luce>.add(it.filippo.stella.dmxdashboard.Model.Luce)", "this.al.get(i).setTipo(java.lang.String)", "this.al.get(i).setStart(java.lang.Integer)", "java.util.ArrayList<it.filippo.stella.dmxdashboard.Model.Luce>.get(java.lang.Integer)", "java.util.ArrayList<it.filippo.stella.dmxdashboard.Model.Luce>.get(java.lang.Integer)", "this.al.get(i).setnCanali(java.lang.Integer)", "java.util.ArrayList<it.filippo.stella.dmxdashboard.Model.Luce>.get(java.lang.Integer)", "java.util.ArrayList<it.filippo.stella.dmxdashboard.Model.Luce>.get(java.lang.Integer)", "java.util.ArrayList<it.filippo.stella.dmxdashboard.Model.Luce>.get(java.lang.Integer)", "java.util.ArrayList<it.filippo.stella.dmxdashboard.Model.Luce>.get(java.lang.Integer)", "this.al.get(i).setCanaleB(java.lang.Integer)", "this.al.get(i).setCanaleG(java.lang.Integer)"], "Fixed commit": "cffec15c40c4a7742652e607598f071038948cdf", "Url": "https://api.github.com/repos/ilofX/DMXDashboard", "Date": "2018-07-06T19:17:23Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["person.getAddress().value.trim()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((addressValue.indexOf('#')) > 2) { stringCutIndex = (addressValue.indexOf('#')) - 2; addressWithoutUnit = addressValue.substring(0, stringCutIndex); }else addressWithoutUnit = addressValue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2799/buggy-version/src.main.java.seedu.address.ui.BrowserPanel.java", "BodyUseAPI": ["java.lang.String.indexOf(char)", "java.lang.String.substring(int,int)"], "Fixed commit": "891945e40d9d46ac66bda96f717127845dee23b9", "Url": "https://api.github.com/repos/ncaminh/main", "Date": "2018-03-14T15:24:03Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((chosenDerivation) != null) { if (!(name.getText().equals(\"\"))) { chosenDerivation.setName(name.getText()); } if (!(description.getText().equals(\"\"))) { chosenDerivation.setDescription(description.getText()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/1735/buggy-version/src.main.java.edu.utah.ece.async.sboldesigner.sbol.editor.dialog.VariantEditor.java", "BodyUseAPI": [], "Fixed commit": "c0311ae25c5ea36aeb48418a9f0792ac148f2a4e", "Url": "https://api.github.com/repos/SynBioDex/SBOLDesigner", "Date": "2018-01-23T00:19:33Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(eventDTO.getStartTime().isEmpty())) && (!(eventDTO.getEndTime().isEmpty()))) { checkTime(eventDTO.getStartTime(), eventDTO.getEndTime(), errors); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6442/buggy-version/message-subsystem-webapp.src.main.java.com.bottle.event.model.DTO.validators.EventValidator.java", "BodyUseAPI": ["com.bottle.event.model.DTO.validators.EventValidator.checkTime(eventDTO.getStartTime(),eventDTO.getEndTime(),org.springframework.validation.Errors)", "com.bottle.event.model.DTO.EventDTO.getEndTime()", "com.bottle.event.model.DTO.EventDTO.getStartTime()"], "Fixed commit": "89f38986e0141479189bf774a88d2f8e4442d33a", "Url": "https://api.github.com/repos/OnTheBottle/OnTheBottle", "Date": "2018-03-27T16:09:59Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (repl != obj) { out.removeRef(obj); out.writeObject(repl); out.replaceRef(repl, obj); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6679/buggy-version/src.main.java.com.alibaba.com.caucho.hessian.io.JavaSerializer.java", "BodyUseAPI": ["com.alibaba.com.caucho.hessian.io.AbstractHessianOutput.replaceRef(java.lang.Object,java.lang.Object)", "com.alibaba.com.caucho.hessian.io.AbstractHessianOutput.removeRef(java.lang.Object)", "com.alibaba.com.caucho.hessian.io.AbstractHessianOutput.writeObject(java.lang.Object)"], "Fixed commit": "891c2b039e917cbd51606d23d934f8e11df9763b", "Url": "https://api.github.com/repos/lovepoem/hessian-lite", "Date": "2018-07-13T02:24:29Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Optional<java.lang.Object>.orElse(<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (userProperties == null) { throw new com.netflix.spinnaker.halyard.core.error.v1.HalException(Problem.Severity.FATAL, ((\"No user named '\" + user) + \"' exists in your kubeconfig file.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9521/buggy-version/halyard-deploy.src.main.java.com.netflix.spinnaker.halyard.deploy.spinnaker.v1.profile.KubernetesV2ClouddriverProfileFactory.java", "BodyUseAPI": [], "Fixed commit": "3036a340d0db45171b27a9d12107f785e7ccd0e9", "Url": "https://api.github.com/repos/dibyom/halyard", "Date": "2018-07-26T18:48:10Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.voltdb.VoltDB.instance()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (((volt != null) && ((volt.getCatalogContext()) != null)) && ((volt.getCatalogContext().getNodeSettings()) != null)) { locSitesCount = volt.getCatalogContext().getNodeSettings().getLocalSitesCount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9746/buggy-version/src.frontend.org.voltdb.export.ExecutorFactory.java", "BodyUseAPI": ["volt.getCatalogContext().getNodeSettings().getLocalSitesCount()", "volt.getCatalogContext().getNodeSettings()", "org.voltdb.VoltDBInterface.getCatalogContext()"], "Fixed commit": "58f006486aaf697b655947107b0d1744c8ac6609", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2018-10-09T16:51:02Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(((message.getChannel().getType()) == (net.dv8tion.jda.core.entities.ChannelType.TEXT)) && (message.getGuild().getSelfMember().hasPermission(message.getTextChannel(), Permission.MESSAGE_HISTORY)))) { message.getChannel().sendMessage(\"I can't add buttons due to not having the `Message History` permission!\").queue(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2751/buggy-version/src.main.java.stream.flarebot.flarebot.util.objects.ButtonGroup.java", "BodyUseAPI": ["message.getChannel().sendMessage(\"I can't add buttons due to not having the `Message History` permission!\").queue()", "message.getChannel().sendMessage(java.lang.String)", "net.dv8tion.jda.core.entities.Message.getChannel()"], "Fixed commit": "5735962a3a110ba3d2969dd5e39694834c51fb83", "Url": "https://api.github.com/repos/FlareBot/FlareBot", "Date": "2018-03-16T14:50:27Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mode != (org.jebtk.modern.theme.RenderMode.NONE)) { fill(g2, x, y, w, h); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6037/buggy-version/org.jebtk.modern.src.main.java.org.jebtk.modern.button.GenericButtonAnimation.java", "BodyUseAPI": [], "Fixed commit": "1a4b0150b13aca372b9022706e4d7b6d2733ed3c", "Url": "https://api.github.com/repos/antonybholmes/jebtk-modern", "Date": "2018-01-13T22:56:04Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tag.equals(\"<wordnet_administrative_district_108491826>\")) || (tag.startsWith(\"<wikicat_Populated_places\"))) { return \"context-location\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/417/buggy-version/src.main.java.FilterContextTag.java", "BodyUseAPI": [], "Fixed commit": "992234dda75f0b0b504436273b454875f0b3c21b", "Url": "https://api.github.com/repos/cheetah90/SummarizeMatchingResult", "Date": "2018-01-18T17:35:23Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.util.HashSet<java.lang.String>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (hypernymSet != null) { java.util.List<java.lang.String> hypernymsList = new java.util.ArrayList<>(hypernymSet); java.util.HashSet<java.lang.String> typesofHypernyms = new java.util.HashSet<>(); for (java.lang.String hypernym : hypernymsList) { typesofHypernyms.add(typeOfTag(hypernym)); } if (((typesofHypernyms.size()) == 1) && (typesofHypernyms.contains(\"context-location\"))) { return \"context-location\"; }else if (((typesofHypernyms.size()) == 1) && (typesofHypernyms.contains(\"context-time\"))) { return \"context-time\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/417/buggy-version/src.main.java.FilterContextTag.java", "BodyUseAPI": [], "Fixed commit": "992234dda75f0b0b504436273b454875f0b3c21b", "Url": "https://api.github.com/repos/cheetah90/SummarizeMatchingResult", "Date": "2018-01-18T17:35:23Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Settings.RUN_IN_INFO) java.lang.System.out.println((((run.Name()) + \" Size : \") + (run.size())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9052/buggy-version/src.IO.IORunSet.java", "BodyUseAPI": [], "Fixed commit": "30560b477a78b5461c56f374e8eafa79b91050e5", "Url": "https://api.github.com/repos/annabonaldo/IRCondorcetFuse", "Date": "2018-01-16T13:44:43Z"},
{"Line": "=>686", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fileExists) { filename = fileToOpen.getAbsolutePath(); in = new java.io.FileInputStream(filename); }else { in = org.nschmidt.ldparteditor.opengl.GLShader.class.getResourceAsStream(filename); if (in == null) { return -1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3083/buggy-version/src.org.nschmidt.ldparteditor.data.GTexture.java", "BodyUseAPI": [], "Fixed commit": "73ebdaa19c44d3960a056f103d61b8e7ec1a79d6", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2018-01-03T19:45:49Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((profile.getInterestedYearEnd()) < 2010) || ((profile.getInterestedYearEnd()) > 2017)) { profile.setInterestedYearEnd(2017); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8436/buggy-version/app.src.main.java.com.virgiel.lustrumapp.Tinder.TinderProfileTabFragment.java", "BodyUseAPI": ["com.virgiel.lustrumapp.Profile.setInterestedYearEnd(int)"], "Fixed commit": "d7dd1a9ae47dfa2c9595b4cc75409ca92d685984", "Url": "https://api.github.com/repos/JaspervanTilburg/LustrumApp", "Date": "2018-01-26T09:41:53Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((headerViewHeight) == 0) { albumArtImageView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8248/buggy-version/app.src.main.java.com.kabouzeid.gramophone.ui.activities.AlbumDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "cb444197bf18693181e19d3c5fb98f5f66d035f0", "Url": "https://api.github.com/repos/ezio84/Phonograph", "Date": "2018-04-27T22:55:27Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((requestCode == (com.owncloud.android.ui.activity.UploadFilesActivity.REQUEST_SCANNED_DOCUMENT_CROP)) && (resultCode == (RESULT_OK))) { android.os.Bundle croppedDocumentData = capturedData.getExtras(); java.lang.String croppedDocumentImagePath = ((java.lang.String) (croppedDocumentData.get(com.owncloud.android.ui.activity.UploadFilesActivity.CROPPED_SCANNED_DOCUMENT_IMAGE_PATH))); new com.owncloud.android.ui.activity.UploadFilesActivity.CheckAvailableSpaceTask(croppedDocumentImagePath).execute(); }else if (((requestCode == (com.owncloud.android.ui.activity.UploadFilesActivity.REQUEST_IMAGE_CAPTURE)) || (requestCode == (com.owncloud.android.ui.activity.UploadFilesActivity.REQUEST_DOCUMENT_SCAN))) && (resultCode == (RESULT_CANCELED))) { if ((image) != null) { image.delete(); com.owncloud.android.lib.common.utils.Log_OC.d(com.owncloud.android.ui.activity.UploadFilesActivity.TAG, \"File deleted\"); } setResult(com.owncloud.android.ui.activity.RESULT_CANCELED); finish(); }else if (resultCode == (RESULT_CANCELED)) { setResult(com.owncloud.android.ui.activity.RESULT_CANCELED); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5933/buggy-version/src.com.owncloud.android.ui.activity.UploadFilesActivity.java", "BodyUseAPI": [], "Fixed commit": "2838ce8b9e1ad37e85c988cf0ba9752c140029c9", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-03-14T05:32:11Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["utils.Utility.getSharedString(android.content.Context,appointment.getId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((event != null) && ((event.trim().length()) > 0)) { android.widget.Toast.makeText(activity, \"Event exists!!\", Toast.LENGTH_LONG); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9259/buggy-version/app.src.main.java.utils.Utility.java", "BodyUseAPI": [], "Fixed commit": "51984a86978ea5e3a9c5ccc9a3cf0e95c17ae1be", "Url": "https://api.github.com/repos/Rohit1110/Appointment", "Date": "2018-01-15T00:41:41Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.O)) { LAYOUT_FLAG = WindowManager.LayoutParams.TYPE_APPLICATION_OVERLAY; }else { LAYOUT_FLAG = WindowManager.LayoutParams.TYPE_PHONE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2867/buggy-version/app.src.main.java.vdt.com.autoairplanemode.ChatHeadService.java", "BodyUseAPI": [], "Fixed commit": "48187d748e8f14ad67961a73c801f8100a3ed09b", "Url": "https://api.github.com/repos/thatduy/VDTools", "Date": "2018-03-25T13:03:53Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (visible) { updateCurrentTimeLabelAndNeedle(((long) (clockTime))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4021/buggy-version/src.main.java.org.datavyu.views.VideoController.java", "BodyUseAPI": [], "Fixed commit": "ca7a2cf47cf3309e3fe8edf8b0d0ee69bec1b792", "Url": "https://api.github.com/repos/databrary/datavyu", "Date": "2018-02-13T05:50:13Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(Server.doesUserExist(uName))) { return new Results.Result(false, \"Invalid User\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3224/buggy-version/TicketToRideServer.serverlibrary.src.main.java.Model.TicketToRideFacade.java", "BodyUseAPI": [], "Fixed commit": "1cc0a1fcdb8a32f1ef4e76913af6ae8e6eea2cc9", "Url": "https://api.github.com/repos/massielislas/TicketToRidePhase2", "Date": "2018-05-28T19:42:51Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<Carte.CarteInondation>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((cInP.getTuile().getStatue()) == 2) { for (ille_intedite.Aventurie.Aventurier a : cInP.getTuile().getAventurie()) { deplacerUrgence(a); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2273/buggy-version/Ille_Interdite.src.ille_intedite.Controleur.java", "BodyUseAPI": ["cInP.getTuile().getAventurie()", "Carte.CarteInondation.getTuile()"], "Fixed commit": "9dbfa8d4135f8773be49f3481d59d5abea52167b", "Url": "https://api.github.com/repos/xam74er1/Ile_Intedite", "Date": "2018-06-18T14:45:45Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sebastiandine.cardcollectionmanager.ui.tables.card.CardContainerTable.convertRowIndexToView(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (selectedRow == (-1)) { selectedRow = this.getSelectedRow(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3735/buggy-version/src.org.sebastiandine.cardcollectionmanager.ui.tables.card.CardContainerTable.java", "BodyUseAPI": [], "Fixed commit": "035c715ad4d183125b08cf5a52f563c825566e5a", "Url": "https://api.github.com/repos/sebastiandine/Card-Collection-Manager", "Date": "2018-03-18T20:28:02Z"},
{"Line": "=>695", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCached) == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8420/buggy-version/library.src.main.java.io.sugo.android.viewcrawler.ViewSnapshot.java", "BodyUseAPI": [], "Fixed commit": "946d7b543383d7b7e3d19bd691161e99db7214d3", "Url": "https://api.github.com/repos/Datafruit/sugo-android-sdk", "Date": "2018-10-27T03:31:44Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (localDateTime.equals(java.time.LocalDateTime.MAX)) { this.timeProperty.set(java.lang.Long.MAX_VALUE); }else { this.timeProperty.set(localDateTime.toInstant(java.time.ZoneOffset.UTC).toEpochMilli()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7299/buggy-version/komet.gui-contracts.src.main.java.sh.komet.gui.control.PropertySheetItemDateTimeWrapper.java", "BodyUseAPI": ["javafx.beans.property.LongProperty.set(long)", "java.time.LocalDateTime.toInstant(java.time.ZoneOffset)", "java.time.Instant.toEpochMilli()"], "Fixed commit": "7e54ec7b453f82434204c6aa0f833cdf58b8e5b2", "Url": "https://api.github.com/repos/OSEHRA/ISAAC", "Date": "2018-10-01T00:05:31Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((stream.getLastIngestionTime()) == null) || ((stream.getFirstEventTimestamp()) == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4084/buggy-version/src.main.java.de.uniba.dsg.serverless.provider.aws.AWSLogHandler.java", "BodyUseAPI": [], "Fixed commit": "e9fab8eca1ca76d088dfe42c350a8d15f616ff16", "Url": "https://api.github.com/repos/johannes-manner/SeMoDe", "Date": "2018-07-12T13:37:24Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(handleCommandInternal(command))) { clear(); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7801/buggy-version/ihmc-common-walking-control-modules.src.main.java.us.ihmc.commonWalkingControlModules.controlModules.rigidBody.RigidBodyPoseController.java", "BodyUseAPI": [], "Fixed commit": "0afd4601bc864055dc1a94fd63cb41ab70e433b8", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-open-robotics-software", "Date": "2018-10-11T22:26:55Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.hasBlockedActions()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7695/buggy-version/compss.runtime.scheduler.fifoDataScheduler.src.main.java.es.bsc.compss.scheduler.fifoDataScheduler.FIFODataResourceScheduler.java", "BodyUseAPI": [], "Fixed commit": "fe52bcaac5421c6b3d700557053675b8e1aeec30", "Url": "https://api.github.com/repos/TANGO-Project/compss", "Date": "2018-07-13T16:02:45Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.hasBlockedActions()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7695/buggy-version/compss.runtime.scheduler.lifoScheduler.src.main.java.es.bsc.compss.scheduler.lifoScheduler.LIFOResourceScheduler.java", "BodyUseAPI": [], "Fixed commit": "fe52bcaac5421c6b3d700557053675b8e1aeec30", "Url": "https://api.github.com/repos/TANGO-Project/compss", "Date": "2018-07-13T16:02:45Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.hasBlockedActions()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7695/buggy-version/compss.runtime.scheduler.fifoScheduler.src.main.java.es.bsc.compss.scheduler.fifoScheduler.FIFOResourceScheduler.java", "BodyUseAPI": [], "Fixed commit": "fe52bcaac5421c6b3d700557053675b8e1aeec30", "Url": "https://api.github.com/repos/TANGO-Project/compss", "Date": "2018-07-13T16:02:45Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.hasBlockedActions()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7695/buggy-version/compss.runtime.scheduler.loadBalancingScheduler.src.main.java.es.bsc.compss.scheduler.loadBalancingScheduler.LoadBalancingResourceScheduler.java", "BodyUseAPI": [], "Fixed commit": "fe52bcaac5421c6b3d700557053675b8e1aeec30", "Url": "https://api.github.com/repos/TANGO-Project/compss", "Date": "2018-07-13T16:02:45Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.hasBlockedActions()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7695/buggy-version/compss.runtime.scheduler.dataLocalityScheduler.src.main.java.es.bsc.compss.scheduler.dataScheduler.DataResourceScheduler.java", "BodyUseAPI": [], "Fixed commit": "fe52bcaac5421c6b3d700557053675b8e1aeec30", "Url": "https://api.github.com/repos/TANGO-Project/compss", "Date": "2018-07-13T16:02:45Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((houseNumber) == null) || ((street) == null)) { return \"{\\\"Invalid format\\\"}\"; }else { return (((\"{\\\"street\\\": \\\"\" + (street.trim())) + \"\\\", \\\"housenumber\\\": \\\"\") + (houseNumber.trim())) + \"\\\"}\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6807/buggy-version/src.main.java.com.aravinda.app.AddressServicesImpl.java", "BodyUseAPI": [], "Fixed commit": "3dacfc97e02f4cf7757bf89527898bdf10804fe2", "Url": "https://api.github.com/repos/aravindaw/AddressFormatter", "Date": "2018-08-10T13:26:23Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((houseNumber) != null) { java.lang.String[] part = address.split(houseNumber); if (houseNumber.equals(splittedAddress[0])) { street = part[1]; }else { street = part[0]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6807/buggy-version/src.main.java.com.aravinda.app.AddressServicesImpl.java", "BodyUseAPI": [], "Fixed commit": "3dacfc97e02f4cf7757bf89527898bdf10804fe2", "Url": "https://api.github.com/repos/aravindaw/AddressFormatter", "Date": "2018-08-10T13:26:23Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getLine()) == null) { if ((other.getLine()) == null) { return this.getFileName().equals(other.getFileName()); }else { return false; } }else { return (this.getFileName().equals(other.getFileName())) && (this.getLine().equals(other.getLine())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5533/buggy-version/tdanalysis-db-module.src.main.java.com.td.models.CommitTD.java", "BodyUseAPI": [], "Fixed commit": "4ae83d002f894daf8a5ef2232f5a0ca151e79689", "Url": "https://api.github.com/repos/ovidiup13/tdanalysis", "Date": "2018-03-29T23:27:22Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(session.isClosing())) { sessions.put(session.getId(), session); session.startReading(); }else { handler.sessionClosed(session); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6903/buggy-version/sshd-core.src.main.java.org.apache.sshd.common.io.nio2.Nio2Acceptor.java", "BodyUseAPI": ["org.apache.sshd.common.io.IoHandler.sessionClosed(org.apache.sshd.common.io.nio2.Nio2Session)", "org.apache.sshd.common.io.nio2.Nio2Session.getId()", "org.apache.sshd.common.io.nio2.Nio2Acceptor.AcceptCompletionHandler.put(session.getId(),org.apache.sshd.common.io.nio2.Nio2Session)", "org.apache.sshd.common.io.nio2.Nio2Session.startReading()"], "Fixed commit": "2ebaaa680ee59ce21fbbf77311f38547203de9f3", "Url": "https://api.github.com/repos/lifangning/mina-sshd", "Date": "2018-01-11T01:31:04Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mapFragment) != null) { mapFragment.getMapAsync(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3395/buggy-version/app.src.main.java.com.friendlyplaces.friendlyapp.activities.detailed_place.DetailedPlaceActivity.java", "BodyUseAPI": [], "Fixed commit": "654106f65d66fb633a88572b6db225eeb148e474", "Url": "https://api.github.com/repos/tijunoi/FriendlyPlaces", "Date": "2018-05-09T22:16:28Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["locationFinder.getHealthFacilityHashMap().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((healthFacility != null) && ((healthFacility.getId()) != null)) { beneficiary.setHealthFacility(healthFacility); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5871/buggy-version/kilkari.src.main.java.org.motechproject.nms.kilkari.service.impl.MctsBeneficiaryValueProcessorImpl.java", "BodyUseAPI": ["org.motechproject.nms.kilkari.domain.MctsBeneficiary.setHealthFacility(org.motechproject.nms.region.domain.HealthFacility)"], "Fixed commit": "6ca382a78f644d76b623e4aa7c852ec5a117a951", "Url": "https://api.github.com/repos/motech-implementations/nms", "Date": "2018-07-09T13:45:18Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["locationFinder.getHealthBlockHashMap().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((healthBlock != null) && ((healthBlock.getId()) != null)) { beneficiary.setHealthBlock(healthBlock); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5871/buggy-version/kilkari.src.main.java.org.motechproject.nms.kilkari.service.impl.MctsBeneficiaryValueProcessorImpl.java", "BodyUseAPI": ["org.motechproject.nms.kilkari.domain.MctsBeneficiary.setHealthBlock(org.motechproject.nms.region.domain.HealthBlock)"], "Fixed commit": "6ca382a78f644d76b623e4aa7c852ec5a117a951", "Url": "https://api.github.com/repos/motech-implementations/nms", "Date": "2018-07-09T13:45:18Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["locationFinder.getHealthSubFacilityHashMap().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((healthSubFacility != null) && ((healthSubFacility.getId()) != null)) { beneficiary.setHealthSubFacility(healthSubFacility); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5871/buggy-version/kilkari.src.main.java.org.motechproject.nms.kilkari.service.impl.MctsBeneficiaryValueProcessorImpl.java", "BodyUseAPI": ["org.motechproject.nms.kilkari.domain.MctsBeneficiary.setHealthSubFacility(org.motechproject.nms.region.domain.HealthSubFacility)"], "Fixed commit": "6ca382a78f644d76b623e4aa7c852ec5a117a951", "Url": "https://api.github.com/repos/motech-implementations/nms", "Date": "2018-07-09T13:45:18Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["locationFinder.getTalukaHashMap().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((taluka != null) && ((taluka.getId()) != null)) { beneficiary.setTaluka(taluka); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5871/buggy-version/kilkari.src.main.java.org.motechproject.nms.kilkari.service.impl.MctsBeneficiaryValueProcessorImpl.java", "BodyUseAPI": ["org.motechproject.nms.kilkari.domain.MctsBeneficiary.setTaluka(org.motechproject.nms.region.domain.Taluka)"], "Fixed commit": "6ca382a78f644d76b623e4aa7c852ec5a117a951", "Url": "https://api.github.com/repos/motech-implementations/nms", "Date": "2018-07-09T13:45:18Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["locationFinder.getVillageHashMap().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((village != null) && ((village.getId()) != null)) { beneficiary.setVillage(village); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5871/buggy-version/kilkari.src.main.java.org.motechproject.nms.kilkari.service.impl.MctsBeneficiaryValueProcessorImpl.java", "BodyUseAPI": ["org.motechproject.nms.kilkari.domain.MctsBeneficiary.setVillage(org.motechproject.nms.region.domain.Village)"], "Fixed commit": "6ca382a78f644d76b623e4aa7c852ec5a117a951", "Url": "https://api.github.com/repos/motech-implementations/nms", "Date": "2018-07-09T13:45:18Z"},
{"Line": "=>676", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((maxTileSpecsToRender == null) || (maxTileSpecsToRender != 0)) { sourceFile = getLargeDataFile(stackMetaData, ((width + \"x\") + height), level.toString(), java.lang.String.valueOf(z.intValue()), row.toString(), ((column + \".\") + format)); }else { sourceFile = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5138/buggy-version/render-ws.src.main.java.org.janelia.render.service.RenderImageService.java", "BodyUseAPI": [], "Fixed commit": "ac1cc985d914695f828225738864439613548b14", "Url": "https://api.github.com/repos/saalfeldlab/render", "Date": "2018-10-16T21:50:16Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mPlacePresenter.getPlaces().isEmpty()) { adjustCameraZoom(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/254/buggy-version/app.src.main.java.edu.uw.medhas.aroundthecorner.presenter.impl.MapPresenterImpl.java", "BodyUseAPI": [], "Fixed commit": "fd114ad6bab8348da636e01908073d8fc3f82577", "Url": "https://api.github.com/repos/msrivastava31/around-the-corner-app", "Date": "2018-03-14T23:02:41Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((etat) == (pfg.kraken.astar.autoreplanning.DynamicPath.State.STANDBY)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2567/buggy-version/core.src.main.java.pfg.kraken.astar.autoreplanning.DynamicPath.java", "BodyUseAPI": [], "Fixed commit": "4079c6f7797e327d02fcd5c170ee4c197181caad", "Url": "https://api.github.com/repos/PFGimenez/The-Kraken-Pathfinding", "Date": "2018-05-01T19:31:18Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((etat) == (pfg.kraken.astar.autoreplanning.DynamicPath.State.STANDBY)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2567/buggy-version/core.src.main.java.pfg.kraken.astar.autoreplanning.DynamicPath.java", "BodyUseAPI": [], "Fixed commit": "4079c6f7797e327d02fcd5c170ee4c197181caad", "Url": "https://api.github.com/repos/PFGimenez/The-Kraken-Pathfinding", "Date": "2018-05-01T19:31:18Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.zoewithabang.util.HttpRequestHelper.performGetRequest(java.lang.String,java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (response == null) { throw new java.lang.IllegalStateException(\"performGetRequest returned a null response.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8423/buggy-version/src.main.java.com.github.zoewithabang.command.GetCatPicture.java", "BodyUseAPI": [], "Fixed commit": "1e1428ac4d00ad5010155c25386da55ec6027e97", "Url": "https://api.github.com/repos/zoewithabang/zerobot", "Date": "2018-07-02T20:46:21Z"},
{"Line": "=>521", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.umn.cs.spatialHadoop.mapreduce.SpatialInputFormat3<edu.umn.cs.spatialHadoop.core.Rectangle, edu.umn.cs.spatialHadoop.core.Shape>.createRecordReader(org.apache.hadoop.mapreduce.lib.input.FileSplit,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (reader instanceof edu.umn.cs.spatialHadoop.mapreduce.LocalIndexRecordReader) { ((edu.umn.cs.spatialHadoop.mapreduce.LocalIndexRecordReader) (reader)).initialize(fsplit, params); }else if (reader instanceof edu.umn.cs.spatialHadoop.nasa.HDFRecordReader) { ((edu.umn.cs.spatialHadoop.nasa.HDFRecordReader) (reader)).initialize(fsplit, params); }else { throw new java.lang.RuntimeException(\"Unknown record reader\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/826/buggy-version/src.main.java.edu.umn.cs.spatialHadoop.operations.KNN.java", "BodyUseAPI": [], "Fixed commit": "d5f40723c5536d8d135935b59e99530c4e2881c7", "Url": "https://api.github.com/repos/aseldawy/spatialhadoop2", "Date": "2018-03-16T03:14:20Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Controllers.DBController.getUser(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (user == null) { throw new java.lang.IllegalArgumentException(\"user was not found in the database\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4957/buggy-version/Controllers.DBController.java", "BodyUseAPI": [], "Fixed commit": "8358e641e267412275f286c1c166e83d36a4fe3c", "Url": "https://api.github.com/repos/jtholen001/CMC", "Date": "2018-03-29T16:29:02Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.talend.core.GlobalServiceRegister.getDefault().isServiceRegistered(org.talend.core.ui.ITestContainerProviderService.class)) { org.talend.core.ui.ITestContainerProviderService testContainerService = ((org.talend.core.ui.ITestContainerProviderService) (org.talend.core.GlobalServiceRegister.getDefault().getService(org.talend.core.ui.ITestContainerProviderService.class))); if (testContainerService.isTestContainerItem(property.getItem())) { org.talend.core.model.properties.Item jobItem = testContainerService.getParentJobItem(property.getItem()); if (jobItem != null) { property = jobItem.getProperty(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2855/buggy-version/main.plugins.org.talend.designer.runprocess.src.main.java.org.talend.designer.runprocess.java.TalendJavaProjectManager.java", "BodyUseAPI": ["org.talend.core.GlobalServiceRegister.getDefault().getService(java.lang.Class)"], "Fixed commit": "d6a6f16b0f8fc29da1d0191b40bf0b48015339c1", "Url": "https://api.github.com/repos/htyin/tdi-studio-se", "Date": "2018-03-20T08:44:41Z"},
{"Line": "=>620", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cards.get(currCard).getButtonList().isEmpty())) { cards.get(currCard).getButtonList().get(currButton).setText(buttonEditor.getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9089/buggy-version/Enamel.src.enamel.AuthoringViewer.java", "BodyUseAPI": ["cards.get(currCard).getButtonList()", "cards.get(currCard).getButtonList().get(currButton).setText(java.lang.String)", "cards.get(currCard).getButtonList().get(int)", "java.util.ArrayList<enamel.Card>.get(int)"], "Fixed commit": "09d9c6236fd8873a23317289bb7c3578573de898", "Url": "https://api.github.com/repos/NS-01/forked_enamel", "Date": "2018-02-20T18:22:48Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isDone())) { throw new com.alipay.remoting.util.FutureTaskNotCompleted(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/1056/buggy-version/src.main.java.com.alipay.remoting.util.RunStateRecordedFutureTask.java", "BodyUseAPI": [], "Fixed commit": "d42e50aa65d3db85258b0f87f41056e8539b2760", "Url": "https://api.github.com/repos/alipay/sofa-bolt", "Date": "2018-10-18T08:35:16Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.time.LocalDateTime.getDayOfMonth()", "org.json.JSONObject.getInt(java.lang.String)", "java.time.LocalDateTime.getMonthValue()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((((((((month == 1) || (month == 3)) || (month == 5)) || (month == 7)) || (month == 8)) || (month == 10)) || (month == 12)) && ((day + duration) > 31)) { d2 = finance.DateFactory.getDate(((day - 31) + duration), (month + 1), year); }else if (((((month == 4) || (month == 6)) || (month == 9)) || (month == 11)) && ((day + duration) > 30)) { d2 = finance.DateFactory.getDate(((day - 30) + duration), (month + 1), year); }else if ((((month == 2) && ((year % 4) == 0)) && (!(((year % 100) == 0) && ((year % 400) != 0)))) && ((day + duration) > 29)) { d2 = finance.DateFactory.getDate(((day - 29) + duration), (month + 1), year); }else if ((month == 2) && ((day + duration) > 28)) { d2 = finance.DateFactory.getDate(((day - 28) + duration), (month + 1), year); }else { d2 = finance.DateFactory.getDate((day + duration), month, year); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5079/buggy-version/src.finance.Parser.java", "BodyUseAPI": ["finance.DateFactory.getDate(int,int,int)", "finance.DateFactory.getDate(int,int,int)", "finance.DateFactory.getDate(int,int,int)", "finance.DateFactory.getDate(int,int,int)", "finance.DateFactory.getDate(int,int,int)"], "Fixed commit": "236f21bc83b5b06f8f1c1bf87179fd12a5399ce6", "Url": "https://api.github.com/repos/jonesc11/HebeJebe-Finance", "Date": "2018-04-25T21:03:19Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof io.confluent.ksql.parser.tree.PrimitiveType) { return (((io.confluent.ksql.parser.tree.PrimitiveType) (obj)).getKsqlType()) == (ksqlType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6322/buggy-version/ksql-parser.src.main.java.io.confluent.ksql.parser.tree.PrimitiveType.java", "BodyUseAPI": [], "Fixed commit": "87dc0dacee35e8830ce264438b6b488782edff3e", "Url": "https://api.github.com/repos/hjafarpour/ksql", "Date": "2018-05-14T20:53:28Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dataSnapshot.child(edtphone.getText().toString()).exists()) { mDialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4514/buggy-version/app.src.main.java.com.example.sawepeter.eatout.SignUp.java", "BodyUseAPI": [], "Fixed commit": "5655dce80800c73d175d3b69595f4265dd09233d", "Url": "https://api.github.com/repos/sawepeter/Eatout", "Date": "2018-05-20T14:43:15Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index < 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2305/buggy-version/src.Model.ChartDataHolder.java", "BodyUseAPI": [], "Fixed commit": "130ac0ae7fff66d211f71a1cf51ddac675a3fd74", "Url": "https://api.github.com/repos/mjschuetze102/CoCoMath", "Date": "2018-08-02T01:18:11Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getClickedBlock()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9123/buggy-version/src.main.java.me.glaremasters.guilds.listeners.SignListener.java", "BodyUseAPI": [], "Fixed commit": "5e9df16940d0f811f54131efe9b2296f5b478642", "Url": "https://api.github.com/repos/darbyjack/Guilds-Plugin", "Date": "2018-06-28T05:01:44Z"},
{"Line": "=>2870", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dragged.isDragAndDropInitialized()) { dragged.dragFinishedImpl(x, y); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9032/buggy-version/CodenameOne.src.com.codename1.ui.Form.java", "BodyUseAPI": ["com.codename1.ui.Component.dragFinishedImpl(int,int)"], "Fixed commit": "4f1bef13e332579d6c8784937637de17d84f8c52", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2018-01-26T15:56:57Z"},
{"Line": "=>2859", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dragged.isDragAndDropInitialized()) { dragged.dragFinishedImpl(x, y); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9032/buggy-version/CodenameOne.src.com.codename1.ui.Form.java", "BodyUseAPI": ["com.codename1.ui.Component.dragFinishedImpl(int,int)"], "Fixed commit": "4f1bef13e332579d6c8784937637de17d84f8c52", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2018-01-26T15:56:57Z"},
{"Line": "=>1234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.splicemachine.db.iapi.types.DataValueDescriptor.cloneValue(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (newDefault instanceof com.splicemachine.db.iapi.types.SQLChar) { newDefault.normalize(colDesc.getType(), newDefault); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5261/buggy-version/db-engine.src.main.java.com.splicemachine.db.impl.sql.compile.FromTable.java", "BodyUseAPI": ["com.splicemachine.db.iapi.types.DataValueDescriptor.normalize(colDesc.getType(),com.splicemachine.db.iapi.types.DataValueDescriptor)"], "Fixed commit": "bd50c429ec6731aaa7cce99726d11a46f712ea3b", "Url": "https://api.github.com/repos/splicemachine/spliceengine", "Date": "2018-03-07T00:26:33Z"},
{"Line": "=>667", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.splicemachine.db.iapi.types.DataTypeDescriptor.getTypeId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((columnTypeId.getTypeFormatId()) == (com.splicemachine.db.iapi.services.io.StoredFormatIds.CHAR_TYPE_ID)) && ((defaultValue) != null)) { com.splicemachine.db.iapi.types.DataValueDescriptor newDefault = defaultValue.cloneValue(false); newDefault.normalize(getType(), newDefault); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5261/buggy-version/db-engine.src.main.java.com.splicemachine.db.impl.sql.compile.ColumnDefinitionNode.java", "BodyUseAPI": [], "Fixed commit": "bd50c429ec6731aaa7cce99726d11a46f712ea3b", "Url": "https://api.github.com/repos/splicemachine/spliceengine", "Date": "2018-03-07T00:26:33Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (anzahl > 3) { final int option = javax.swing.JOptionPane.showConfirmDialog(null, ((((\"Delete Player \" + (player.getName())) + \" of Group \") + (group.getGruppenName())) + \"?\")); if (option == (javax.swing.JOptionPane.YES_OPTION)) { mainControl.getSqlGamesControl().deletePartienFromPlayer(player, group.getGruppeId()); mainControl.getSqlTournament_has_PlayerControl().deletePlayerOfGroup(player.getSpielerId(), group.getGruppeId()); playerTorunamentEditView.dispose(); loadGroup(groupId); } }else { javax.swing.JOptionPane.showMessageDialog(null, \"Weniger als 3 Spieler nicht m\u00f6glich!\", \"Hinweis\", javax.swing.JOptionPane.WARNING_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7512/buggy-version/src.de.turnierverwaltung.control.tournamentlist.ActionListenerPlayerTournamentEditControl.java", "BodyUseAPI": [], "Fixed commit": "0c56c591a2eccb76e7dc85d4d2b9b21551067518", "Url": "https://api.github.com/repos/mars7105/JKLubTV", "Date": "2018-10-15T05:50:50Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTable.getModel()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (model.getValueAt(selectedRow, 1).getClass().getSimpleName().equals(\"String\")) { key = java.lang.Integer.valueOf(((java.lang.String) (model.getValueAt(selectedRow, 1)))); }else key = ((java.lang.Integer) (model.getValueAt(selectedRow, 1)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/1563/buggy-version/src.main.java.memoranda.ui.DriverPanel.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.Object)", "javax.swing.table.DefaultTableModel.getValueAt(int,int)", "javax.swing.table.DefaultTableModel.getValueAt(int,int)"], "Fixed commit": "7df20bb6078640d3448160a2a88539a78a1dba59", "Url": "https://api.github.com/repos/ser316asu-2018/FrankfurtFall2018B", "Date": "2018-10-24T06:06:28Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (page == 1) mMovieAdapter.updateMoviesArray(mMovies); else mMovieAdapter.insertToMoviesArray(mMovies, ((page * (mMovies.size())) - 1), mMovies.size());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7731/buggy-version/app.src.main.java.com.example.android.popularmovies.MainActivity.java", "BodyUseAPI": ["com.example.android.popularmovies.MovieAdapter.insertToMoviesArray(java.util.List<com.example.android.popularmovies.model.Movie>,((page * (mMovies.size())) - 1),mMovies.size())"], "Fixed commit": "57478c9b77b91083f5adb216e79f443546c3cd32", "Url": "https://api.github.com/repos/hskocadag/PopularMovies2", "Date": "2018-03-15T06:46:05Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/628/buggy-version/src.com.android.contacts.group.GroupNameEditDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "7173594e8bff9249792b9a1698cf63420897f23e", "Url": "https://api.github.com/repos/aosp-mirror/platform_packages_apps_contacts", "Date": "2018-04-16T23:00:56Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (theboltentertainment.ear03.MainActivity.serviceBound) unbindService(theboltentertainment.ear03.MainActivity.serviceConnection);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7409/buggy-version/app.src.main.java.theboltentertainment.ear03.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "27768a6bfb6c2be46ffa0608491ebad208230c30", "Url": "https://api.github.com/repos/gray1512/E.A.R03", "Date": "2018-03-08T16:56:05Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mjr.extraplanets.Config.NUCLEAR_BOMB) { world.setBlockState(new net.minecraft.util.BlockPos((x + 3), (y + 2), (z + 3)), ExtraPlanets_Blocks.NUCLEAR_BOMB.getDefaultState(), 3); world.setBlockState(new net.minecraft.util.BlockPos((x + 3), (y + 2), (z + 4)), ExtraPlanets_Blocks.NUCLEAR_BOMB.getDefaultState(), 3); world.setBlockState(new net.minecraft.util.BlockPos((x + 3), (y + 2), (z + 5)), ExtraPlanets_Blocks.NUCLEAR_BOMB.getDefaultState(), 3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/879/buggy-version/src.main.java.com.mjr.extraplanets.world.features.WorldGenNuclearPile.java", "BodyUseAPI": [], "Fixed commit": "96ffce221bbec0916a2fe211d4a6962e276ff334", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-07-25T00:42:52Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lineEnd == (-1)) { lineEnd = (testSourceFile.length()) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5568/buggy-version/src.main.java.renaming.tools.FormattingReviewAssistant.java", "BodyUseAPI": [], "Fixed commit": "9617410e9a29b274a6da15e356f1a91132b9c58f", "Url": "https://api.github.com/repos/bloriot97/naturalize", "Date": "2018-08-31T07:51:56Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (agent.has(\"mobile\")) tookanAgentInfo.setPhone(agent.getString(\"mobile\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/282/buggy-version/src.main.java.shippo.sync.tookan.tookanapi.TookanAgentParser.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "shippo.sync.tookan.entity.TookanAgentInfo.setPhone(agent.getString(\"mobile\"))"], "Fixed commit": "ca9077f699c369468a7a274c2cc0c81ec444b667", "Url": "https://api.github.com/repos/hoalv/tookan-sync-service", "Date": "2018-07-07T02:04:13Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((message != null) && (!(message.isEmpty()))) { log(message, line.getType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5884/buggy-version/agent.src.unityRunner.agent.LogParser.java", "BodyUseAPI": ["unityRunner.agent.LogParser.log(java.lang.String,line.getType())"], "Fixed commit": "9d7b5be177724df95007b3be64d411eac1d76386", "Url": "https://api.github.com/repos/ArtOfSettling/Teamcity-unity3d-build-runner-plugin", "Date": "2018-05-12T08:19:00Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.google.common.base.Strings.isNullOrEmpty(permission)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2279/buggy-version/EngineAPI.src.main.java.unknowndomain.engine.api.permission.PermissionProvider.java", "BodyUseAPI": [], "Fixed commit": "a410eb7f30aecd73aafdf862df76a26b02aa631f", "Url": "https://api.github.com/repos/UnknownStudio/UnknownDomain", "Date": "2018-07-26T13:15:29Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.nikos410.discordBot.modules.UserGroups.getJSONForGuild(de.nikos410.discordBot.modules.IGuild)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(guildJSON.has(groupName))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3671/buggy-version/src.main.java.de.nikos410.discordBot.modules.UserGroups.java", "BodyUseAPI": [], "Fixed commit": "7b4500ad9dacd119d901a90cee2ece67a63fdc9a", "Url": "https://api.github.com/repos/DACH-Discord/de-DiscordBot", "Date": "2018-08-12T09:34:36Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (toCheck) { java.util.Objects.requireNonNull(registryPath, com.microfocus.application.automation.tools.common.Messages.HealthAnalyzerCommon_registryValueMustBeNotNull()); if (!(isRegistryExists(registryPath))) throw new hudson.AbortException(com.microfocus.application.automation.tools.common.Messages.HealthAnalyzerCommon_notInstalled(productName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4044/buggy-version/src.main.java.com.microfocus.application.automation.tools.common.HealthAnalyzerCommon.java", "BodyUseAPI": [], "Fixed commit": "c8c29a1323fb117a2006579852c5bb9a11e3bd1b", "Url": "https://api.github.com/repos/grount/hpe-application-automation-tools-plugin", "Date": "2018-10-16T10:07:00Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (toCheck) { java.util.Objects.requireNonNull(url, com.microfocus.application.automation.tools.common.Messages.HealthAnalyzerCommon_urlMustBeNotNull()); if (!(isURLExist(url))) throw new hudson.AbortException(com.microfocus.application.automation.tools.common.Messages.HealthAnalyzerCommon_serverUrlNotExist(productName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4044/buggy-version/src.main.java.com.microfocus.application.automation.tools.common.HealthAnalyzerCommon.java", "BodyUseAPI": [], "Fixed commit": "c8c29a1323fb117a2006579852c5bb9a11e3bd1b", "Url": "https://api.github.com/repos/grount/hpe-application-automation-tools-plugin", "Date": "2018-10-16T10:07:00Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((tws.zcaliptium.compositegear.common.items.ItemsCG.trCompressedAirCell) == null) || ((tws.zcaliptium.compositegear.common.items.ItemsCG.trEmptyCell) == null)) { CompositeGear.modLog.error(\"One of TechReborn cells is null! Respirators may not work!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4842/buggy-version/src.main.java.tws.zcaliptium.compositegear.common.items.ItemsCG.java", "BodyUseAPI": [], "Fixed commit": "6766c7edbbb2f95b27ed820cfd9bac9c79815d8a", "Url": "https://api.github.com/repos/TwilightWingsStudio/CompositeGear", "Date": "2018-02-07T20:58:27Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isChange) { writeTasksToCurFile(getCurrentTasksStringList()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/1326/buggy-version/Server.src.main.java.TaskManagerServer.Server.ConnectionHandler.java", "BodyUseAPI": [], "Fixed commit": "8956c43895c92c40a54116dc966b33bffd6d00f9", "Url": "https://api.github.com/repos/JavaStudentAlex/SecondLab", "Date": "2018-07-26T08:33:16Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stalary.book.service.CommentService.save(com.stalary.book.data.entity.Comment)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (save) { return com.stalary.book.data.ResponseMessage.successMessage(\"\u8bc4\u8bba\u6210\u529f\uff01\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4170/buggy-version/src.main.java.com.stalary.book.controller.CommentController.java", "BodyUseAPI": [], "Fixed commit": "e4260ccbc6627735deb8bedbfa2a37341f600c1b", "Url": "https://api.github.com/repos/stalary/BookSystem", "Date": "2018-03-22T14:48:43Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stalary.book.mapper.CommentDao.findByUserId(com.stalary.book.handle.UserContextHolder.get().getId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (oldComment != null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4170/buggy-version/src.main.java.com.stalary.book.service.CommentService.java", "BodyUseAPI": [], "Fixed commit": "e4260ccbc6627735deb8bedbfa2a37341f600c1b", "Url": "https://api.github.com/repos/stalary/BookSystem", "Date": "2018-03-22T14:48:43Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (mString)) { mMatcher = com.horcrux.svg.PropHelper.PathParser.PATH_REG_EXP.matcher(com.horcrux.svg.PropHelper.PathParser.DECIMAL_REG_EXP.matcher(mString).replaceAll(\"$1,\")); while ((mMatcher.find()) && (mValid)) { executeCommand(mMatcher.group()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7079/buggy-version/android.src.main.java.com.horcrux.svg.PropHelper.java", "BodyUseAPI": [], "Fixed commit": "2a844ba54a01aa7139e8e4b851c659bfd9a10560", "Url": "https://api.github.com/repos/codlab/react-native-svg", "Date": "2018-02-07T10:08:12Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (listener != null) { listener.onAnimationEnd(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2065/buggy-version/app.src.main.java.com.ape.material.weather.widget.dynamic.DefaultType.java", "BodyUseAPI": ["Animator.AnimatorListener.onAnimationEnd(<nulltype>)"], "Fixed commit": "3c43a1edfee499f58eaa2ff60e47c95950461135", "Url": "https://api.github.com/repos/way1989/MaterialWeather", "Date": "2018-01-31T09:47:17Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vega.automation.service.TestsuiteTestcasesService.getTestSuiteTestCases(com.vega.automation.entity.TestsuiteMaster)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.collections4.CollectionUtils.isNotEmpty(list)) { com.vega.automation.dto.TestscenarioMaster scenario = null; for (com.vega.automation.entity.TestcaseMaster testcase : list) { com.vega.automation.dto.TestcaseMaster targettestCase = new com.vega.automation.dto.TestcaseMaster(); if (((null != testcase) && (null != targettestCase)) && (null != (testcase.getTestscenarioMaster()))) { org.springframework.beans.BeanUtils.copyProperties(testcase, targettestCase); scenario = new com.vega.automation.dto.TestscenarioMaster(); org.springframework.beans.BeanUtils.copyProperties(testcase.getTestscenarioMaster(), scenario); targettestCase.setTestscenarioMaster(scenario); result.add(targettestCase); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4645/buggy-version/src.main.java.com.vega.automation.controller.VegaController.java", "BodyUseAPI": [], "Fixed commit": "2c837e15b1d71f39cde026d2b5914fc1a749f443", "Url": "https://api.github.com/repos/anandCG/vegaAutomation", "Date": "2018-08-10T13:09:52Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.app.FragmentManager.findFragmentByTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((f != null) && (f instanceof com.axel_stein.noteapp.notes.list.NotesFragment)) { ((com.axel_stein.noteapp.notes.list.NotesFragment) (f)).stopCheckMode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/1547/buggy-version/app.src.main.java.com.axel_stein.noteapp.main.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f6c7a96e8262d8dd5451660466956303ca869599", "Url": "https://api.github.com/repos/AxelStein/NoteApp", "Date": "2018-02-10T18:20:52Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(src.startsWith(\"http\"))) { throw new java.lang.RuntimeException((\"Invalid source: \" + src)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5184/buggy-version/nuxeo-jsf.nuxeo-platform-ui-web.src.main.java.org.nuxeo.ecm.platform.ui.web.component.seam.NuxeoITextImageProvider.java", "BodyUseAPI": [], "Fixed commit": "a790b336aa691ce7aa3094b8ea011feca33f04e6", "Url": "https://api.github.com/repos/nuxeo/nuxeo", "Date": "2018-10-01T13:51:32Z"},
{"Line": "=>556", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.unbi.kangleiiyek.jsonparser.jsonarray.isEmpty()) { s3 = (\"[\" + arg) + \"]\"; }else if (!(com.unbi.kangleiiyek.customword.comefromsubmit)) { s3 = (((\"[\" + (com.unbi.kangleiiyek.jsonparser.jsonarray)) + \",\") + arg) + \"]\"; }else { s3 = (\"[\" + arg) + \"]\"; com.unbi.kangleiiyek.customword.comefromsubmit = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/1560/buggy-version/app.src.main.java.com.unbi.kangleiiyek.customword.java", "BodyUseAPI": [], "Fixed commit": "27197f747b3218f03b113c7732d4c080bf687381", "Url": "https://api.github.com/repos/ProjectUNBI/KangleiIyek", "Date": "2018-04-29T09:46:37Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mSurvey.getMainScore()) != null) score = mSurvey.getMainScore().getScore();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/285/buggy-version/app.src.main.java.org.eyeseetea.malariacare.presentation.presenters.ObsActionPlanPresenter.java", "BodyUseAPI": ["mSurvey.getMainScore().getScore()", "org.eyeseetea.malariacare.data.database.model.SurveyDB.getMainScore()"], "Fixed commit": "54f7009f81c8e9a7ee2c588001987571c8cc3abd", "Url": "https://api.github.com/repos/EyeSeeTea/malariapp", "Date": "2018-09-27T10:39:45Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((survey.getMainScore()) != null) score = survey.getMainScore().getScore();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/285/buggy-version/app.src.eyeseetea.java.org.eyeseetea.malariacare.strategies.AssessmentUnsentAdapterCosmeticsStrategy.java", "BodyUseAPI": ["survey.getMainScore().getScore()", "org.eyeseetea.malariacare.data.database.model.SurveyDB.getMainScore()"], "Fixed commit": "54f7009f81c8e9a7ee2c588001987571c8cc3abd", "Url": "https://api.github.com/repos/EyeSeeTea/malariapp", "Date": "2018-09-27T10:39:45Z"},
{"Line": "=>483", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<Moon>.remove(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (m.getName().equals(\"Atop the Highest Tower\")) { for (int i = 0; i < (Randomizer.standby.size()); i++) { if (Randomizer.standby.get(i).getName().equals(\"Moon Shards in the Sand\")) { for (int j = 0; j < (source.size()); j++) { if ((source.get(j)) == m) { source.set(j, Randomizer.standby.remove(i)); } } break; } } }else if (m.getName().equals(\"RC Car Pro!\")) { for (int i = 0; i < (Randomizer.standby.size()); i++) { if (Randomizer.standby.get(i).getName().equals(\"RC Car Champ!\")) { for (int j = 0; j < (source.size()); j++) { if ((source.get(j)) == m) { source.set(j, Randomizer.standby.remove(i)); } } break; } } }else if (m.getName().equals(\"Jump-Rope Hero\")) { for (int i = 0; i < (Randomizer.standby.size()); i++) { if (Randomizer.standby.get(i).getName().equals(\"Jump-Rope Genius\")) { for (int j = 0; j < (source.size()); j++) { if ((source.get(j)) == m) { source.set(j, Randomizer.standby.remove(i)); } } break; } } }else if (m.getName().equals(\"Iceburn Circuit Class A\")) { for (int i = 0; i < (Randomizer.standby.size()); i++) { if (Randomizer.standby.get(i).getName().equals(\"Iceburn Circuit Class S\")) { for (int j = 0; j < (source.size()); j++) { if ((source.get(j)) == m) { source.set(j, Randomizer.standby.remove(i)); } } break; } } }else if (m.getName().equals(\"Beach Volleyball: Champ\")) { for (int i = 0; i < (Randomizer.standby.size()); i++) { if (Randomizer.standby.get(i).getName().equals(\"Beach Volleyball: Hero of the Beach!\")) { for (int j = 0; j < (source.size()); j++) { if ((source.get(j)) == m) { source.set(j, Randomizer.standby.remove(i)); } } break; } } }else if ((m.checkTags(\"Peach\")) && ((Randomizer.achievementProgress[14]) == 12)) { for (int i = 0; i < (Randomizer.standby.size()); i++) { if (Randomizer.standby.get(i).getName().equals(\"Peach in the Moon Kingdom\")) { for (int j = 0; j < (source.size()); j++) { if ((source.get(j)) == m) { source.set(j, Randomizer.standby.remove(i)); } } break; } } }else if (m.getName().equals(\"Peach in the Moon Kingdom\")) { for (int i = 0; i < (Randomizer.standby.size()); i++) { java.lang.String name = Randomizer.standby.get(i).getName(); if ((name.equals(\"Princess Peach, Home Again!\")) || (name.equals(\"Hat-and-Seek: Mushroom Kingdom\"))) { source.add(Randomizer.standby.remove(i)); java.util.Collections.shuffle(source, rnd); } } }else if (m.checkTags(\"Yoshi\")) { for (int i = 0; i < (Randomizer.standby.size()); i++) { if ((Randomizer.standby.get(i).checkTags(\"Yoshi\")) && ((java.lang.Integer.parseInt(m.getTags()[1])) == ((java.lang.Integer.parseInt(Randomizer.standby.get(i).getTags()[1])) - 1))) { Moon nextYoshi = Randomizer.standby.remove(i); for (int j = 0; j < (source.size()); j++) { if ((source.get(j)) == m) { source.set(j, nextYoshi); } } break; } } }else if (m.getKingdom().equals(\"Dark Side\")) { if (m.getName().equals(\"Arrival at Rabbit Ridge!\")) { for (int i = 0; i < (Randomizer.standby.size()); i++) { if ((Randomizer.standby.get(i).getKingdom().equals(\"Dark Side\")) || (Randomizer.standby.get(i).getName().matches(\"Found with Dark Side Art.*\"))) { switch (Randomizer.standby.get(i).getName().substring(0, 5)) { case \"Yoshi\" : source.add(Randomizer.standby.get(i)); source.add(Randomizer.standby.remove(i)); i--; break; case \"Fruit\" : break; default : source.add(Randomizer.standby.remove(i)); i--; } } } java.util.Collections.shuffle(source, rnd); }else if (m.getName().substring(0, 5).equals(\"Yoshi\")) { for (int i = 0; i < (Randomizer.standby.size()); i++) { switch (m.getName()) { case \"Yoshi Under Siege\" : if (Randomizer.standby.get(i).getName().equals(\"Fruit Feast Under Siege\")) { for (int j = 0; j < (source.size()); j++) { if ((source.get(j)) == m) { source.set(j, Randomizer.standby.remove(i)); i--; break; } } } break; case \"Yoshi on the Sinking Island\" : if (Randomizer.standby.get(i).getName().equals(\"Fruit Feast on the Sinking Island\")) { for (int j = 0; j < (source.size()); j++) { if ((source.get(j)) == m) { source.set(j, Randomizer.standby.remove(i)); i--; break; } } } break; case \"Yoshi's Magma Swamp\" : if (Randomizer.standby.get(i).getName().equals(\"Fruit Feast in the Magma Swamp!\")) { for (int j = 0; j < (source.size()); j++) { if ((source.get(j)) == m) { source.set(j, Randomizer.standby.remove(i)); i--; break; } } } break; default : break; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2345/buggy-version/src.Randomizer.java", "BodyUseAPI": ["Moon.checkTags(java.lang.String)", "m.getName().equals(java.lang.String)", "m.getKingdom().equals(java.lang.String)", "Moon.getName()", "Moon.getName()", "Moon.checkTags(java.lang.String)", "m.getName().equals(java.lang.String)", "Moon.getKingdom()", "Moon.getName()", "java.lang.Integer.parseInt(m.getTags()[1])", "m.getName().substring(0, 5).equals(java.lang.String)", "Moon.getName()", "Moon.getName()", "m.getName().substring(int,int)", "Moon.getName()", "m.getName().equals(java.lang.String)", "m.getName().equals(java.lang.String)", "m.getName().equals(java.lang.String)", "Moon.getName()", "Moon.getName()", "Moon.getTags()", "m.getName().equals(java.lang.String)"], "Fixed commit": "3dbcdf128eab1b96b72ef4d0d545b58c8a8750e3", "Url": "https://api.github.com/repos/JKTKops/Darker-Side-Randomizer", "Date": "2018-10-07T23:35:05Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((mouseX) >= 320) && ((mouseX) <= 470)) && ((mouseY) >= 280)) && ((mouseY) <= 330)) { DrawingSurface s = new DrawingSurface(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3559/buggy-version/src.OptionPanel.java", "BodyUseAPI": [], "Fixed commit": "bfd69ccc667d680afc6f0dfffb8522a128f5f770", "Url": "https://api.github.com/repos/BiscuitDarren/KingOfTheSkies", "Date": "2018-05-22T06:13:01Z"},
{"Line": "=>756", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((logPreType)++) < 1) { tag = \">\" + tag; }else { tag = \"<\" + tag; logPreType = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9751/buggy-version/log.src.main.java.com.yxf.log.YxfLog.java", "BodyUseAPI": [], "Fixed commit": "7e285338ff0daf2e34766108d60a1ed04914c6df", "Url": "https://api.github.com/repos/dqh147258/YxfLog", "Date": "2018-04-13T06:59:25Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fromIndex > spacesCount) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2582/buggy-version/component.core-jpa.src.main.java.org.exoplatform.social.core.jpa.updater.SpaceMemberAnyMembershipUpgradePlugin.java", "BodyUseAPI": [], "Fixed commit": "7e830b162394cb33fd759d568a53c79ddd7fae3a", "Url": "https://api.github.com/repos/exodev/social", "Date": "2018-05-30T15:29:14Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (variation > 0) { delta = (random.nextInt((variation * 2))) - variation; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7628/buggy-version/09_KPXLT.src.main.Simulation.java", "BodyUseAPI": [], "Fixed commit": "49a602806f97f92e5cfb09b512e5e86a64077543", "Url": "https://api.github.com/repos/INF16A/SE4_team01", "Date": "2018-03-04T19:19:56Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((position >= 0) && (position <= (wrapAround))) { this.position = position; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7628/buggy-version/09_KPXLT.src.main.Vehicle.java", "BodyUseAPI": [], "Fixed commit": "49a602806f97f92e5cfb09b512e5e86a64077543", "Url": "https://api.github.com/repos/INF16A/SE4_team01", "Date": "2018-03-04T19:19:56Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isRefreshing)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8475/buggy-version/app.src.main.java.com.cwt.coolpot.mainpart.MainFragment.java", "BodyUseAPI": [], "Fixed commit": "8c49024069da0609b4a75947d89ab7f459bdcb58", "Url": "https://api.github.com/repos/ULTRAKID/Cool-Pot", "Date": "2018-04-08T10:56:00Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((incomeRecContent.getIncomeContentIn().getQtyDirectInput()) == 1) { com.glvz.egais.utils.MessageUtils.playSound(R.raw.enter_qty); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8764/buggy-version/app.src.main.java.com.glvz.egais.ui.ActIncomeRecContent.java", "BodyUseAPI": [], "Fixed commit": "b985f44cc4e00f47d6bd42ad4c513e3ad5ea551a", "Url": "https://api.github.com/repos/pavel-vp/GLVZegais", "Date": "2018-08-09T18:01:48Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((incomeRecContent.getIncomeContentIn().getQtyDirectInput()) == 1) { com.glvz.egais.utils.MessageUtils.playSound(R.raw.enter_qty); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8764/buggy-version/app.src.main.java.com.glvz.egais.ui.ActIncomeRecContent.java", "BodyUseAPI": [], "Fixed commit": "b985f44cc4e00f47d6bd42ad4c513e3ad5ea551a", "Url": "https://api.github.com/repos/pavel-vp/GLVZegais", "Date": "2018-08-09T18:01:48Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((dialogView) != null) && ((mYear) > 0)) { updateMonthPickerLimits(mYear); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8813/buggy-version/backbone.src.main.java.org.researchstack.backbone.ui.views.MonthYearPickerDialog.java", "BodyUseAPI": [], "Fixed commit": "2c8afc85081a4d373fba598bb37f573df0a61db3", "Url": "https://api.github.com/repos/medaptivehealth/ResearchStack", "Date": "2018-03-28T20:58:57Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.craftercms.studio.api.v1.service.content.ContentService.getContentItem(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(item.isFolder())) { parentPaths.add(item.getUri()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6823/buggy-version/src.main.java.org.craftercms.studio.impl.v1.service.dependency.DependencyServiceImpl.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(item.getUri())", "org.craftercms.studio.api.v1.to.ContentItemTO.getUri()"], "Fixed commit": "00dc05d9ea197df8a20bb05f458b70710365c3f7", "Url": "https://api.github.com/repos/alhambrav/studio", "Date": "2018-03-13T17:29:44Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(jsonObject.has(\"pull_request\"))) { issues.add(com.example.masato.githubfeed.model.GitHubObjectMapper.mapIssue(jsonObject)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7558/buggy-version/YokoMasa.app.src.main.java.com.example.masato.githubfeed.model.GitHubObjectMapper.java", "BodyUseAPI": ["com.example.masato.githubfeed.model.GitHubObjectMapper.mapIssue(org.json.JSONObject)", "java.util.List<com.example.masato.githubfeed.model.Issue>.add(com.example.masato.githubfeed.model.Issue)"], "Fixed commit": "86d3dd33091ae5f21b17fbf99a88be59e057ccc9", "Url": "https://api.github.com/repos/YokoMasa/git-push-hackathon", "Date": "2018-02-21T05:13:00Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["exchange.getRequest().getCookies().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cookies == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2853/buggy-version/spring-cloud-gateway-core.src.main.java.org.springframework.cloud.gateway.handler.predicate.CookieRoutePredicateFactory.java", "BodyUseAPI": [], "Fixed commit": "7558cdb5ba8b10953ab75527961649f76c366959", "Url": "https://api.github.com/repos/bijukunjummen/spring-cloud-gateway", "Date": "2018-03-15T20:35:22Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (millisecond != 0) { addAlarm(java.lang.Math.abs(millisecond), title.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5095/buggy-version/app.src.main.java.com.ytam.yildirim.onlinetodo.views.AddToDoActivity.java", "BodyUseAPI": ["java.lang.Math.abs(int)", "com.ytam.yildirim.onlinetodo.views.AddToDoActivity.addAlarm(int,title.getText().toString())"], "Fixed commit": "21be110c8169327dd25f86000e7b85565b4447a9", "Url": "https://api.github.com/repos/ytam/OnlineToDo", "Date": "2018-02-18T19:10:57Z"},
{"Line": "=>1080", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((items.length) == 1) { startsWithValue = items[0]; }else { containsValues = items; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8125/buggy-version/src.main.java.com.alibaba.fastjson.JSONPath.java", "BodyUseAPI": [], "Fixed commit": "c18836bcc40e950c2d9b0fa63961b97343a338f0", "Url": "https://api.github.com/repos/severalfly/fastjson", "Date": "2018-06-18T05:25:12Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.talend.core.model.properties.DatabaseConnectionItem.getConnection()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((\"JDBC\".equals(dbConnection.getDatabaseType())) && (dbType == (org.talend.core.database.EDatabaseTypeName.GENERAL_JDBC))) { return setting; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6019/buggy-version/main.plugins.org.talend.core.runtime.src.main.java.org.talend.core.repository.RepositoryComponentManager.java", "BodyUseAPI": [], "Fixed commit": "9da58996da0fb41c801da9fd2dc034677fc776cd", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2018-01-18T09:52:07Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.errores.contains((((\"La funci\\u00f3n \" + (t.getLexema())) + \" no fue declarada. Linea \") + (t.getLinea()))))) { this.errores.add((((\"La variable \" + (t.getLexema())) + \" no fue declarada. Linea \") + (t.getLinea()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7371/buggy-version/src.compilador.Sintactico.java", "BodyUseAPI": ["complementos.Token.getLexema()", "complementos.Token.getLinea()", "java.util.ArrayList<java.lang.String>.add((((\"La variable \" + (t.getLexema())) + \" no fue declarada. Linea \") + (t.getLinea())))"], "Fixed commit": "d80051607b6e5f3e82922c7fd0cd34b124b61e5a", "Url": "https://api.github.com/repos/MuroSar/Compiladores", "Date": "2018-09-10T22:38:20Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDebugEnabled()) { logDebug(java.lang.String.format((\"User: %s denied consent to share information with the service: \" + \"provider %s\"), authenticatedUser.getAuthenticatedSubjectIdentifier(), applicationConfig.getApplicationName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6256/buggy-version/components.authentication-framework.org.wso2.carbon.identity.application.authentication.framework.src.main.java.org.wso2.carbon.identity.application.authentication.framework.handler.request.impl.consent.ConsentMgtPostAuthnHandler.java", "BodyUseAPI": [], "Fixed commit": "a559a6a28b8b8c07f106036bebcfbabb3f9ca4cb", "Url": "https://api.github.com/repos/omindu/carbon-identity-framework", "Date": "2018-03-02T04:17:55Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(geText.getText().contains(osbText))) { final net.runelite.http.api.osbuddy.GrandExchangeResult result = net.runelite.client.plugins.grandexchange.GrandExchangePlugin.CLIENT.lookupItem(itemId); if ((result.getItem_id()) != (lastItem)) { return; } final java.lang.String text = ((geText.getText()) + osbText) + (net.runelite.client.util.StackFormatter.formatNumber(result.getOverall_average())); geText.setText(text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/426/buggy-version/runelite-client.src.main.java.net.runelite.client.plugins.grandexchange.GrandExchangePlugin.java", "BodyUseAPI": ["net.runelite.api.widgets.Widget.setText(java.lang.String)", "net.runelite.api.widgets.Widget.getText()"], "Fixed commit": "7c256406c9bd6c195cb65f10a2f5be5690c6cda1", "Url": "https://api.github.com/repos/Asymons/runelite", "Date": "2018-08-20T14:08:38Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rates.stream().mapToDouble(java.lang.Double::doubleValue).distinct().count()) != 1) { throw new java.lang.IllegalStateException(\"Invalid specification of fixed rate.\"); }else { spread = rates.get(0).doubleValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2089/buggy-version/src.main.java.net.finmath.modelling.descriptor.xmlparser.FIPXMLParser.java", "BodyUseAPI": ["java.lang.Double.doubleValue()", "java.util.ArrayList<java.lang.Double>.get(int)"], "Fixed commit": "c97c32648b68f7b12b4e1028efd1cdf9a92d3c85", "Url": "https://api.github.com/repos/finmath/finmath-lib", "Date": "2018-10-11T14:34:33Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((params.length) == 3) { return params[1]; }else { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8194/buggy-version/app.src.main.java.ua.naiksoftware.j2meloader.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f4559fa2cbd94435bc2b563d735ce0195cbe4650", "Url": "https://api.github.com/repos/nikita36078/J2ME-Loader", "Date": "2018-01-28T16:04:20Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.edible)) { this.firstEdible = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/587/buggy-version/src.pacman.Character.java", "BodyUseAPI": [], "Fixed commit": "3a8470d89e8c8868e16c65de991506a3e03ee501", "Url": "https://api.github.com/repos/rainzhao2000/pacman", "Date": "2018-05-17T18:35:25Z"},
{"Line": "=>1855", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (gradients.containsKey(varName)) { return gradients.get(varName); }else if ((sameDiffFunctionInstances.containsKey(\"grad\")) && (sameDiffFunctionInstances.get(\"grad\").gradients.containsKey(varName))) { return sameDiffFunctionInstances.get(\"grad\").gradients.get(varName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2635/buggy-version/nd4j.nd4j-backends.nd4j-api-parent.nd4j-api.src.main.java.org.nd4j.autodiff.samediff.SameDiff.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.nd4j.autodiff.samediff.SDVariable>.get(java.lang.String)", "java.util.Map<java.lang.String, org.nd4j.autodiff.samediff.SDVariable>.get(java.lang.String)", "java.util.Map<java.lang.String, org.nd4j.autodiff.samediff.SDVariable>.containsKey(java.lang.String)"], "Fixed commit": "b023399f5d7f5f59fd668395eb51dc5f1e0171c5", "Url": "https://api.github.com/repos/deeplearning4j/deeplearning4j", "Date": "2018-06-26T12:21:21Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (path.equals(\".\")) { path = basePath; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/45/buggy-version/src.main.java.DataTier.FileAcces.FileManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "52f3e5d51592ed1a8e665c1dd633ff0df173fbe5", "Url": "https://api.github.com/repos/LordSkin/CloudDrive-Server", "Date": "2018-03-23T12:09:51Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lexer.token().isOperator()) { acceptText(); parseNameExpr(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9165/buggy-version/data.orm.src.main.java.leap.orm.sql.parser.SqlQueryParser.java", "BodyUseAPI": [], "Fixed commit": "ef4d3404b94f345d39669218f9f26daae1537b2a", "Url": "https://api.github.com/repos/leapframework/framework", "Date": "2018-01-03T14:20:15Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((message.getError()) != null) { parameters.add(new org.apache.http.message.BasicNameValuePair(org.restcomm.connect.sms.SmsStatusNotifier.ERROR_CODE_PARAM, message.getError().toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5704/buggy-version/restcomm.restcomm.sms.src.main.java.org.restcomm.connect.sms.SmsStatusNotifier.java", "BodyUseAPI": ["message.getError().toString()", "java.util.List<org.apache.http.NameValuePair>.add(org.apache.http.message.BasicNameValuePair)", "org.restcomm.connect.dao.entities.SmsMessage.getError()"], "Fixed commit": "a7b6662b59434f5af24bbf46f5bb7c8bab1485a2", "Url": "https://api.github.com/repos/RestComm/Restcomm-Connect", "Date": "2018-06-18T01:38:48Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ctx.attr_list()) != null) visitAttr_list(ctx.attr_list());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9393/buggy-version/src.EmmetWorkingVisitor.java", "BodyUseAPI": ["EmmetWorkingVisitor.visitAttr_list(ctx.attr_list())", "EmmetParser.TagContext.attr_list()"], "Fixed commit": "d87556a150c11639f88a79f9caf671e126bfbef2", "Url": "https://api.github.com/repos/gbalduzzi/progetto-linguaggi", "Date": "2018-05-28T16:49:59Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (with_state) { out.setContext(m_context); out.m_currentState = m_currentState; }else { for (ca.uqac.lif.cep.functions.ContextAssignment ca : m_initialAssignments) { out.addInitialAssignment(ca); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7099/buggy-version/Fsm.src.ca.uqac.lif.cep.fsm.MooreMachine.java", "BodyUseAPI": [], "Fixed commit": "74af488a570c209fbf2c02d26ed90916df3ee522", "Url": "https://api.github.com/repos/liflab/beepbeep-3-palettes", "Date": "2018-04-08T13:01:50Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.eclipse.elk.alg.rectPacking.util.RectRow>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((currentRow.numberOfStacks()) == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5111/buggy-version/org.eclipse.elk.alg.rectPacking.src.org.eclipse.elk.alg.rectPacking.seconditeration.SecondIteration.java", "BodyUseAPI": [], "Fixed commit": "f311b211b72545e8f36d409c156052520d495e55", "Url": "https://api.github.com/repos/dalu2104/rectPacking_ELK_plug-in", "Date": "2018-09-04T14:12:47Z"},
{"Line": "=>675", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((requestCode == (com.yalantis.ucrop.UCropActivity.PICK_IMAGE)) || (requestCode == (com.yalantis.ucrop.UCropActivity.CAMERA))) { finish(); android.net.Uri sourceuri = data.getData(); java.lang.String fileUri = (android.icu.util.Calendar.getInstance().getTimeInMillis()) + \".png\"; com.yalantis.ucrop.UCrop ucrop = com.yalantis.ucrop.UCrop.of(sourceuri, android.net.Uri.fromFile(new java.io.File(android.os.Environment.getExternalStorageDirectory(), fileUri))); ucrop.withAspectRatio(1024, 506).withOptions(createOptions()).start(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7609/buggy-version/ucrop.src.main.java.com.yalantis.ucrop.UCropActivity.java", "BodyUseAPI": [], "Fixed commit": "530330f676068e054458c0b48614f51272b2d492", "Url": "https://api.github.com/repos/Murerr/uCrop", "Date": "2018-05-09T13:41:48Z"},
{"Line": "=>1232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(filter.equals(org.ecocean.EncounterQueryProcessor.SELECT_FROM_ORG_ECOCEAN_ENCOUNTER_WHERE))) { filter += \" && \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3928/buggy-version/src.main.java.org.ecocean.EncounterQueryProcessor.java", "BodyUseAPI": [], "Fixed commit": "d4e201a70c795267080e275b3e4267d85e937fb1", "Url": "https://api.github.com/repos/WildbookOrg/Wildbook", "Date": "2018-07-30T22:37:08Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listener) != null) { listener.onError(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7290/buggy-version/app.src.main.java.com.thekirankumar.youtubeauto.MyRecognitionListener.java", "BodyUseAPI": [], "Fixed commit": "5d3d60b3dbf3952db72119fad48e197ef683aee5", "Url": "https://api.github.com/repos/thekirankumar/carstream-android-auto", "Date": "2018-01-03T08:25:12Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((evolutionaryProcessDelegate) instanceof dr.evomodel.treedatalikelihood.preorder.HomogenousSubstitutionModelDelegate) { evolutionaryProcessDelegate.getSubstitutionModel(0).getInfinitesimalMatrix(Q); }else { evolutionaryProcessDelegate.getSubstitutionModel(nodeNum).getInfinitesimalMatrix(Q); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8758/buggy-version/src.dr.evomodel.treedatalikelihood.preorder.AbstractDiscreteTraitDelegate.java", "BodyUseAPI": [], "Fixed commit": "5cfc58206c2c049077334737dec29d41d1872e57", "Url": "https://api.github.com/repos/beast-dev/beast-mcmc", "Date": "2018-03-02T04:50:30Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((other.getSettings()) instanceof org.openl.rules.webstudio.web.admin.CommonRepositorySettings) { org.openl.rules.webstudio.web.admin.CommonRepositorySettings otherSettings = ((org.openl.rules.webstudio.web.admin.CommonRepositorySettings) (other.getSettings())); if ((path.equals(otherSettings.getPath())) && ((settings.isSecure()) == (otherSettings.isSecure()))) { java.lang.String login = settings.getLogin(); if ((!(settings.isSecure())) || ((login != null) && (login.equals(otherSettings.getLogin())))) { java.lang.String msg = java.lang.String.format(\"Repository path '%s' already exists. Please, insert a new one\", path); throw new org.openl.rules.webstudio.web.admin.RepositoryValidationException(msg); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9842/buggy-version/STUDIO.org.openl.rules.webstudio.src.org.openl.rules.webstudio.web.admin.RepositoryValidators.java", "BodyUseAPI": ["org.openl.rules.webstudio.web.admin.RepositoryConfiguration.getSettings()"], "Fixed commit": "f594e9f78f7b1f60d299da6a79270149df4d18dd", "Url": "https://api.github.com/repos/openl-tablets/openl-tablets", "Date": "2018-01-31T10:54:42Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.lang.ASTNode.getElementType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (childElementType == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.FORK_STATEMENT_BODY)) { return com.intellij.formatting.Indent.getNormalIndent(); }else if (childElementType == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.JOIN_CLAUSE_BODY)) { return com.intellij.formatting.Indent.getNormalIndent(); }else if (childElementType == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.TIMEOUT_CLAUSE_BODY)) { return com.intellij.formatting.Indent.getNormalIndent(); }else if (childElementType == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.MATCH_STATEMENT_BODY)) { return com.intellij.formatting.Indent.getNormalIndent(); }else if ((childElementType == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.EXPRESSION_LIST)) && (parentElementType == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.ARRAY_LITERAL))) { return com.intellij.formatting.Indent.getNormalIndent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4833/buggy-version/src.main.java.org.ballerinalang.plugins.idea.formatter.BallerinaBlock.java", "BodyUseAPI": [], "Fixed commit": "eadb84cf3096185738b79261b2c47c71119d0317", "Url": "https://api.github.com/repos/Shan1024/ballerina-idea-plugin", "Date": "2018-03-31T18:36:02Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((myNode.getElementType()) == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.RECORD_LITERAL_BODY)) { childIndent = com.intellij.formatting.Indent.getNormalIndent(); }else if ((myNode.getElementType()) == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.STRUCT_BODY)) { childIndent = com.intellij.formatting.Indent.getNormalIndent(); }else if ((myNode.getElementType()) == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.ENUM_BODY)) { childIndent = com.intellij.formatting.Indent.getNormalIndent(); }else if ((myNode.getElementType()) == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.WORKER_BODY)) { childIndent = com.intellij.formatting.Indent.getNormalIndent(); }else if ((myNode.getElementType()) == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.WHILE_STATEMENT_BODY)) { childIndent = com.intellij.formatting.Indent.getNormalIndent(); }else if ((myNode.getElementType()) == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.FORK_JOIN_STATEMENT)) { childIndent = com.intellij.formatting.Indent.getNormalIndent(); }else if ((myNode.getElementType()) == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.JOIN_CLAUSE_BODY)) { childIndent = com.intellij.formatting.Indent.getNormalIndent(); }else if ((myNode.getElementType()) == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.TIMEOUT_CLAUSE_BODY)) { childIndent = com.intellij.formatting.Indent.getNormalIndent(); }else if ((myNode.getElementType()) == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.MATCH_STATEMENT_BODY)) { childIndent = com.intellij.formatting.Indent.getNormalIndent(); }else if ((myNode.getElementType()) == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.NAMED_PATTERN)) { childIndent = com.intellij.formatting.Indent.getNormalIndent(); }else if ((myNode.getElementType()) == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.UNNAMED_PATTERN)) { childIndent = com.intellij.formatting.Indent.getNormalIndent(); }else if ((myNode.getElementType()) == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.FOREACH_STATEMENT)) { childIndent = com.intellij.formatting.Indent.getNormalIndent(); }else if ((myNode.getElementType()) == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.IF_CLAUSE)) { childIndent = com.intellij.formatting.Indent.getNormalIndent(); }else if ((myNode.getElementType()) == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.ELSE_IF_CLAUSE)) { childIndent = com.intellij.formatting.Indent.getNormalIndent(); }else if ((myNode.getElementType()) == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.ELSE_CLAUSE)) { childIndent = com.intellij.formatting.Indent.getNormalIndent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4833/buggy-version/src.main.java.org.ballerinalang.plugins.idea.formatter.BallerinaBlock.java", "BodyUseAPI": ["com.intellij.lang.ASTNode.getElementType()", "com.intellij.lang.ASTNode.getElementType()", "com.intellij.lang.ASTNode.getElementType()", "com.intellij.lang.ASTNode.getElementType()", "com.intellij.lang.ASTNode.getElementType()", "com.intellij.lang.ASTNode.getElementType()", "com.intellij.lang.ASTNode.getElementType()", "com.intellij.lang.ASTNode.getElementType()", "com.intellij.lang.ASTNode.getElementType()", "com.intellij.lang.ASTNode.getElementType()", "com.intellij.lang.ASTNode.getElementType()", "com.intellij.lang.ASTNode.getElementType()", "com.intellij.lang.ASTNode.getElementType()", "com.intellij.lang.ASTNode.getElementType()"], "Fixed commit": "eadb84cf3096185738b79261b2c47c71119d0317", "Url": "https://api.github.com/repos/Shan1024/ballerina-idea-plugin", "Date": "2018-03-31T18:36:02Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (format.isEmpty()) { return value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7127/buggy-version/dhis-2.dhis-api.src.main.java.org.hisp.dhis.textpattern.StringMethodType.java", "BodyUseAPI": [], "Fixed commit": "7e2b8d27c0802f6224f402e75369c5a5ac9c962c", "Url": "https://api.github.com/repos/hispindia/dhis2-Core", "Date": "2018-05-24T12:52:34Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["artifactName.getAttribute().getValue()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (orig.contains(\"?\")) { orig = (orig.substring(0, orig.indexOf(\"?\"))) + \"}\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6849/buggy-version/provisioning.src.main.java.org.wildfly.build.provisioning.ServerProvisioner.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "6dfdeb5de77b4e7fd015c218e96db444646cc2f6", "Url": "https://api.github.com/repos/wildfly/wildfly-build-tools", "Date": "2018-01-15T21:06:12Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position >= (getItemCount())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3355/buggy-version/app.src.main.java.com.wafflestudio.snutt2.adapter.LectureListAdapter.java", "BodyUseAPI": [], "Fixed commit": "a2c60a1f69d4a19ba2e881408e69bef29917da6b", "Url": "https://api.github.com/repos/wafflestudio/SNUTT-android", "Date": "2018-01-22T14:03:22Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.zhour.utils.Utility.getSharedPrefBooleanData(this, Constants.IS_CORPORATE)) { com.zhour.utils.Utility.navigateDashBoardFragment(new com.zhour.fragments.HomeFragmentForCorporate(), HomeFragmentForCorporate.TAG, bundle, this); }else com.zhour.utils.Utility.navigateDashBoardFragment(new com.zhour.fragments.HomeFragment(), HomeFragment.TAG, bundle, this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3179/buggy-version/app.src.main.java.com.zhour.activities.DashboardActivity.java", "BodyUseAPI": [], "Fixed commit": "ac61c2be0fc37b136d4af815fc8fb6b404bab040", "Url": "https://api.github.com/repos/sixscorpions/Zhour", "Date": "2018-03-16T16:27:02Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(initializeStages())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6595/buggy-version/src.clearcontrol.microscope.lightsheet.adaptive.schedulers.SpaceTravelScheduler.java", "BodyUseAPI": [], "Fixed commit": "44965d25f5cd317e4c5c5552701679d4ca07cf11", "Url": "https://api.github.com/repos/ClearControl/clearcontrol-lightsheet", "Date": "2018-05-08T08:45:45Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((parameters.gPts) < 1) || ((parameters.gPts) > ((dataPoints.length) - 2))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7702/buggy-version/Decide.src.main.java.DD2480.decide.CMVHandler.java", "BodyUseAPI": [], "Fixed commit": "6959629ad3506af62df13b93c59466b144a92370", "Url": "https://api.github.com/repos/fkam/DD2480-decide", "Date": "2018-03-15T12:37:52Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((parameters.ePts) < 1) || ((parameters.fPts) < 1)) || ((((parameters.ePts) + (parameters.fPts)) + 3) > (dataPoints.length))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7702/buggy-version/Decide.src.main.java.DD2480.decide.CMVHandler.java", "BodyUseAPI": [], "Fixed commit": "6959629ad3506af62df13b93c59466b144a92370", "Url": "https://api.github.com/repos/fkam/DD2480-decide", "Date": "2018-03-15T12:37:52Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((parameters.nPts) < 3) || ((parameters.nPts) > (dataPoints.length))) || ((parameters.dist) < 0)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7702/buggy-version/Decide.src.main.java.DD2480.decide.CMVHandler.java", "BodyUseAPI": [], "Fixed commit": "6959629ad3506af62df13b93c59466b144a92370", "Url": "https://api.github.com/repos/fkam/DD2480-decide", "Date": "2018-03-15T12:37:52Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"pyspark\".equalsIgnoreCase(kernel)) { sb.append(nodeInfo.getPysparkCode()); }else { sb.append(nodeInfo.getSklearnCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4580/buggy-version/src.main.java.com.inspur.da.dsw.manage.controller.VizPipelineController.java", "BodyUseAPI": [], "Fixed commit": "2e998f7fa40a9c9c2399f08842d9ec57ab6b1be3", "Url": "https://api.github.com/repos/xuande/idsw", "Date": "2018-03-15T07:34:07Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (strasseKaufen.getSender().equals(spieler)) { strasseKaufen.setAntwortDaten(StrasseKaufenStatus.ANGENOMMEN, spieler); client.sendeAnServer(strasseKaufen); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3792/buggy-version/src.ai.de.dhpoly.ai.AI.java", "BodyUseAPI": ["de.dhpoly.feld.model.StrasseKaufen.setAntwortDaten(StrasseKaufenStatus.ANGENOMMEN,de.dhpoly.spieler.model.Spieler)", "de.dhpoly.netzwerk.NetzwerkClient.sendeAnServer(de.dhpoly.feld.model.StrasseKaufen)"], "Fixed commit": "465a6c4e6cfd5ef1c709151edcaf88429cf243b0", "Url": "https://api.github.com/repos/koehler1000/DHpoly", "Date": "2018-06-05T06:36:26Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((model.CommandFacade.ourInstance) == null) { model.CommandFacade.ourInstance = new model.CommandFacade(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9339/buggy-version/app.src.main.java.model.CommandFacade.java", "BodyUseAPI": [], "Fixed commit": "94ad50f699a1b78d3432416a6fa6e5d953245e5f", "Url": "https://api.github.com/repos/kjohnsen/T2R_divergent_walruses", "Date": "2018-10-31T22:29:01Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ttlInMs) != null) { properties.put(\"SERVICE_INTERVAL\", ttlInMs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/259/buggy-version/features.collection.shell-commands.src.main.java.org.opennms.netmgt.collection.commands.CollectCommand.java", "BodyUseAPI": [], "Fixed commit": "cbfee766e1a1b663dfb5c440e5278c0e917e3ffa", "Url": "https://api.github.com/repos/OpenNMS/opennms", "Date": "2018-09-25T20:08:53Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.ActionMap.keys()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (keys != null) for (final java.lang.Object o : keys) keyStrokeAdder.put(((java.lang.String) (o)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2619/buggy-version/src.main.java.org.scijava.ui.behaviour.util.Actions.java", "BodyUseAPI": [], "Fixed commit": "3854ec2f8a4856ca1086fdf3353e541c350abe79", "Url": "https://api.github.com/repos/scijava/ui-behaviour", "Date": "2018-04-04T10:39:15Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((productsTable.getSelectionModel().getSelectedItem()) != null) selectedProduct = new Model.Product(productsTable.getSelectionModel().getSelectedItem()); else return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/526/buggy-version/src.Controller.ProductPageController.java", "BodyUseAPI": ["productsTable.getSelectionModel().getSelectedItem()", "Controller.TableView<Model.Product>.getSelectionModel()"], "Fixed commit": "4b1165d8ec02cb3b74c7ac366f63b186d2d4d25f", "Url": "https://api.github.com/repos/ethanbin/Warehouse-Management-System", "Date": "2018-05-06T20:45:34Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fragments) == null) { return new java.util.ArrayList<>(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/717/buggy-version/src.main.java.org.olat.modules.ceditor.ui.component.PageFragmentsComponent.java", "BodyUseAPI": [], "Fixed commit": "1d0529e9a9793c6ee42b0dea98b27db775692e52", "Url": "https://api.github.com/repos/OpenOLAT/OpenOLAT", "Date": "2018-10-03T06:24:47Z"},
{"Line": "=>463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.edx.mobile.model.course.CourseStructureV1Model.getBlockById(courseStructureV1Model.root)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (topBlock == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9820/buggy-version/OpenEdXMobile.src.main.java.org.edx.mobile.course.CourseAPI.java", "BodyUseAPI": [], "Fixed commit": "9907cefe6b01eec0443cd2ed05059a31a4e80b3a", "Url": "https://api.github.com/repos/philanthropy-u/edx-app-android", "Date": "2018-03-08T07:09:00Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.StringTokenizer.nextToken()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(database.stopTask(taskEntryID))) { output.writeObject(\"Error stopping task\"); }else { output.writeObject((((\"stopped \" + taskEntryID) + \" to user \") + userID)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4830/buggy-version/src.ServerThread.java", "BodyUseAPI": ["java.io.ObjectOutputStream.writeObject(java.lang.String)"], "Fixed commit": "9fd32e38db9d31459687ba6d3850c13af0577195", "Url": "https://api.github.com/repos/CSUS-CSC-131-Spring2018/S3T5TM2", "Date": "2018-04-23T03:58:28Z"},
{"Line": "=>472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["m_edt_val_root_url.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (root_url.endsWith(\".json\")) { int i = root_url.lastIndexOf(\"/\"); endpoint = root_url.substring(i); root_url = root_url.substring(0, i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9112/buggy-version/android.TMHarness.TMHarnessUX.src.main.java.go_spatial.com.github.tegola.mobile.android.ux.MainActivity.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int)", "java.lang.String.lastIndexOf(java.lang.String)"], "Fixed commit": "d16ed0796ea7d0e869165c3eb4a0fa553e345298", "Url": "https://api.github.com/repos/go-spatial/tegola-mobile", "Date": "2018-06-05T07:57:49Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(TestRunArg.ICS.toString())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((pstr == null) || (pstr.isEmpty())) { pstr = this.ICS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4805/buggy-version/src.main.java.org.opengis.cite.gpkg12.CommonFixture.java", "BodyUseAPI": [], "Fixed commit": "9bd24ba84c9a47710942b08f16aab603367ff22a", "Url": "https://api.github.com/repos/bradh/ets-gpkg12", "Date": "2017-11-22T13:12:03Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (board) return attacking;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/1381/buggy-version/KingsArmy.src.main.Board.java", "BodyUseAPI": [], "Fixed commit": "6684e438609ebc50df474231af74531fc346da2a", "Url": "https://api.github.com/repos/GrayWolf-19/KingsArmy", "Date": "2018-01-14T11:40:35Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(strDrinkThumb.contains(com.dimowner.tastycocktails.data.model.Drink.HTTPS))) { this.strDrinkThumb = (com.dimowner.tastycocktails.data.model.Drink.HTTPS) + strDrinkThumb; }else { this.strDrinkThumb = strDrinkThumb; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9515/buggy-version/app.src.main.java.com.dimowner.tastycocktails.data.model.Drink.java", "BodyUseAPI": [], "Fixed commit": "3d8bcdb3e37b3963756d003a93a8279618c814f8", "Url": "https://api.github.com/repos/Dimowner/TastyCocktails", "Date": "2018-02-21T23:11:24Z"},
{"Line": "=>1109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((val instanceof java.util.Map) && ((((java.util.Map) (val)).size()) == 0)) { val = \"{}\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8168/buggy-version/src.main.java.io.choerodon.devops.infra.common.util.FileUtil.java", "BodyUseAPI": [], "Fixed commit": "4a48fb7fe09b99ccd20c67fd0673b6541120e5fe", "Url": "https://api.github.com/repos/choerodon/devops-service", "Date": "2018-07-21T05:41:12Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (line.contains(\"#begin document\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8276/buggy-version/corpusreaders.src.main.java.edu.illinois.cs.cogcomp.nlp.corpusreaders.OntonotesReader.java", "BodyUseAPI": [], "Fixed commit": "d667377a5f6e4350e04241ec0fb28485c17ff755", "Url": "https://api.github.com/repos/yxd126/cogcomp-nlp", "Date": "2018-09-17T20:02:07Z"},
{"Line": "=>1353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (matchingWordMeaning.equals(\"\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4527/buggy-version/app.src.main.java.com.japanesetoolboxapp.resources.Utilities.java", "BodyUseAPI": [], "Fixed commit": "b205ce6459620541a85c06007610c132b3bf8532", "Url": "https://api.github.com/repos/blarom/JapaneseToolbox", "Date": "2018-10-12T17:31:30Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pos > (this.size)) { throw new java.lang.Exception(((\"pos: \" + pos) + \" is greater than size\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4120/buggy-version/LinkedList.java", "BodyUseAPI": [], "Fixed commit": "5504ccb3615eb5cd527c4727bc66eb04dac08d48", "Url": "https://api.github.com/repos/USF-CS245-09-2018/practice-assignment-08-pechuong", "Date": "2018-10-27T00:51:30Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (role.equals(Constants.ROLES_EMPLOYEE)) { android.content.Intent i = new android.content.Intent(getApplicationContext(), com.example.averg.logicuniversityapp.User_MainActivity.class); startActivity(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4984/buggy-version/app.src.main.java.com.example.averg.logicuniversityapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1978f04e8183103105af125487289b7400705966", "Url": "https://api.github.com/repos/Avergrove/ADmobile", "Date": "2018-08-02T02:45:51Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["_zkUtils.getPartitionAssignmentForTopics(topicList).apply(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((partitionAssignments == null) || (partitionAssignments.isEmpty())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/777/buggy-version/src.main.java.com.linkedin.kmf.services.ConsumeService.java", "BodyUseAPI": [], "Fixed commit": "b81a13f17c0e4a7219ba519ee7801ddc259d8d9a", "Url": "https://api.github.com/repos/signalfx/kafka-monitor", "Date": "2018-08-01T20:52:14Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, kafka.cluster.Broker>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (broker != null) { java.util.Collection<scala.Tuple2<org.apache.kafka.common.protocol.SecurityProtocol, kafka.cluster.EndPoint>> endPoints = scala.collection.JavaConversions.asJavaCollection(broker.endPoints()); for (scala.Tuple2<org.apache.kafka.common.protocol.SecurityProtocol, kafka.cluster.EndPoint> tuple : endPoints) { java.lang.String brokerUrl = ((tuple._2.host()) + \":\") + (tuple._2.port()); org.apache.kafka.common.metrics.Sensor delay = _sensors.getOrCreateBrokerSensor(brokerUrl); delay.record((currMs - prevMs)); } }else { com.linkedin.kmf.services.ConsumeService.LOG.info(\"No leader found for partition : {}\", partition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/777/buggy-version/src.main.java.com.linkedin.kmf.services.ConsumeService.java", "BodyUseAPI": ["kafka.cluster.Broker.endPoints()", "scala.collection.JavaConversions.asJavaCollection(broker.endPoints())"], "Fixed commit": "b81a13f17c0e4a7219ba519ee7801ddc259d8d9a", "Url": "https://api.github.com/repos/signalfx/kafka-monitor", "Date": "2018-08-01T20:52:14Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newSize > (executor.getCorePoolSize())) { executor.setMaximumPoolSize(newSize); executor.setCorePoolSize(newSize); }else { executor.setCorePoolSize(newSize); executor.setMaximumPoolSize(newSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9492/buggy-version/src.main.java.com.codefork.refine.ThreadPool.java", "BodyUseAPI": ["java.util.concurrent.ThreadPoolExecutor.setCorePoolSize(int)", "java.util.concurrent.ThreadPoolExecutor.setCorePoolSize(int)", "java.util.concurrent.ThreadPoolExecutor.setMaximumPoolSize(int)", "java.util.concurrent.ThreadPoolExecutor.setMaximumPoolSize(int)"], "Fixed commit": "51c53d34706dacb47f0433e9d4b8c4387ec11bd6", "Url": "https://api.github.com/repos/codeforkjeff/conciliator", "Date": "2018-09-15T04:09:50Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.android.tourguideaw.PlaceAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (currentPlaceInfo.hasImage()) { placeImage.setImageResource(currentPlaceInfo.getImageResource()); placeImage.setVisibility(View.VISIBLE); }else { placeImage.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7034/buggy-version/app.src.main.java.com.example.android.tourguideaw.PlaceAdapter.java", "BodyUseAPI": ["android.widget.ImageView.setImageResource(currentPlaceInfo.getImageResource())", "com.example.android.tourguideaw.PlaceInfo.getImageResource()"], "Fixed commit": "bc1dd0af05e4baaf9ed0a5a99d32836b41393e70", "Url": "https://api.github.com/repos/lehieu30794/TourGuideAW", "Date": "2018-07-24T17:13:18Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (view.isSummaryBottomSheetHidden()) { view.showRecenterBtn(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2975/buggy-version/libandroid-navigation-ui.src.main.java.com.mapbox.services.android.navigation.ui.v5.NavigationPresenter.java", "BodyUseAPI": ["NavigationContract.View.showRecenterBtn()"], "Fixed commit": "c5a2026af677a95d58adc756d184f4e6218f8666", "Url": "https://api.github.com/repos/mapbox/mapbox-navigation-android", "Date": "2018-06-12T18:28:44Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getNumber) > 0) { queue[((getNumber) - 1)] = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3923/buggy-version/src.edu.cse.Queue.java", "BodyUseAPI": [], "Fixed commit": "945ee3e8c3567058cf53412a02e350c297efc3ad", "Url": "https://api.github.com/repos/majestictoe/user_input_queue", "Date": "2018-01-10T16:40:37Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.usermanagement.dao.repository.UserRepository.findByUsername(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (userEntity.getIs2FaEnabled()) { userEntity.setIs2FaConfigured(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4423/buggy-version/services.src.openkilda-gui.src.main.java.org.usermanagement.service.UserService.java", "BodyUseAPI": ["org.usermanagement.dao.entity.UserEntity.setIs2FaConfigured(boolean)"], "Fixed commit": "b7b360de71a19fa465180075367a2832aae8d7a0", "Url": "https://api.github.com/repos/hiteshgupta1/open-kilda", "Date": "2018-09-10T11:50:13Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (featureType != null) { org.geotools.geopkg.FeatureEntry featureEntry = new org.geotools.geopkg.FeatureEntry(); gpkg.add(featureEntry, fcToSFC(fc, featureType)); gpkg.createSpatialIndex(featureEntry); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2911/buggy-version/src.main.java.org.venice.beachfront.bfapi.services.converter.GeoPackageConverter.java", "BodyUseAPI": ["org.geotools.geopkg.GeoPackage.add(org.geotools.geopkg.FeatureEntry,fcToSFC(fc, featureType))", "org.venice.beachfront.bfapi.services.converter.GeoPackageConverter.fcToSFC(org.geotools.feature.FeatureCollection<?, ?>,org.opengis.feature.simple.SimpleFeatureType)"], "Fixed commit": "16763a815d3db139816e23efea8b706b54ceaced", "Url": "https://api.github.com/repos/venicegeo/bf-api", "Date": "2018-10-12T16:59:20Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.geotools.geojson.feature.FeatureJSON.readFeatureCollection(java.io.Reader)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((fc.getSchema().getGeometryDescriptor()) != null) { featureType = createSimpleFeatureType(fc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2911/buggy-version/src.main.java.org.venice.beachfront.bfapi.services.converter.GeoPackageConverter.java", "BodyUseAPI": ["org.venice.beachfront.bfapi.services.converter.GeoPackageConverter.createSimpleFeatureType(org.geotools.feature.FeatureCollection<?, ?>)"], "Fixed commit": "16763a815d3db139816e23efea8b706b54ceaced", "Url": "https://api.github.com/repos/venicegeo/bf-api", "Date": "2018-10-12T16:59:20Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((un.length()) == 0) { android.widget.Toast.makeText(getBaseContext(), \"No username entered\", Toast.LENGTH_LONG).show(); }else if ((pw.length()) == 0) { android.widget.Toast.makeText(getBaseContext(), \"No password entered\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7084/buggy-version/app.src.main.java.com.example.rito.groupapp.Registration_Form.java", "BodyUseAPI": [], "Fixed commit": "6b79314962ce050acde58d3917abb0e6d4e8f61a", "Url": "https://api.github.com/repos/drydenpick/3130-Repo", "Date": "2018-07-30T18:44:55Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Main.fileDir.isEmpty()) Main.fileDir = \"./\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/1220/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "08c33f740f90b1c95d734af7b0d6d62d7de28a50", "Url": "https://api.github.com/repos/HuangDongPeng/WordCount", "Date": "2018-03-20T14:48:24Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.unical.linstagram.persistence.StoryDAO.getStoryById(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (story == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5837/buggy-version/src.it.unical.linstagram.services.StoriesService.java", "BodyUseAPI": [], "Fixed commit": "16551ec1e4145d6093de294c926676aa18ddb910", "Url": "https://api.github.com/repos/lorenzobrusco/Linstagram", "Date": "2018-01-18T14:54:15Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.taskadapter.redmineapi.bean.Issue.getCustomFieldById(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (customFieldCurator == null) { customFieldCurator = com.taskadapter.redmineapi.bean.CustomFieldFactory.create(customFieldId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9022/buggy-version/cdmlib-ext.src.main.java.eu.etaxonomy.cdm.ext.registration.messages.redmine.RedmineRegistrationMessageService.java", "BodyUseAPI": [], "Fixed commit": "a1ac8acde3accb278c4763a629f50485a02b621f", "Url": "https://api.github.com/repos/cybertaxonomy/cdmlib", "Date": "2018-03-19T17:00:08Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.DBConnector.getTasks(currentUser.group.toString())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((taskList != null) && (!(taskList.isEmpty()))) answerLabel.setText(((models.Task) (answerSpinner.getValue())).getContent());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/537/buggy-version/src.windows.StudentWindow.java", "BodyUseAPI": [], "Fixed commit": "2569ff329984515f06121bcdd523ad2f5c9690f1", "Url": "https://api.github.com/repos/Mich0232/elearning-project", "Date": "2018-01-24T11:58:19Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.inventory.InventoryClickEvent.getCurrentItem()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (currentItem == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7406/buggy-version/src.logan.pickpocket.events.InventoryClick.java", "BodyUseAPI": [], "Fixed commit": "fcb350c170a8f9504a978ce94597da0420ccb092", "Url": "https://api.github.com/repos/TTGTRE/Pickpocket", "Date": "2018-03-29T03:14:49Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((participants) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9363/buggy-version/src.main.java.codeu.model.data.Conversation.java", "BodyUseAPI": [], "Fixed commit": "d69461099c5865bfa839a8018d20c03a07a7f76e", "Url": "https://api.github.com/repos/WeijiaMa/CodeU-Spring-2018", "Date": "2018-07-09T00:04:28Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.inject.Provider<org.pmiops.workbench.db.model.User>.get()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (user == null) { throw new org.pmiops.workbench.exceptions.NotFoundException(\"Could not find record for authenticated user\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9171/buggy-version/api.src.main.java.org.pmiops.workbench.db.dao.UserService.java", "BodyUseAPI": [], "Fixed commit": "90def4fe39ce61f12c9292543d9eac03e9ae7ff8", "Url": "https://api.github.com/repos/all-of-us/workbench", "Date": "2018-01-02T21:31:47Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cards.getTrainCards().size()) != (route.getLength())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/741/buggy-version/server.src.main.java.server.facades.GameServerFacade.java", "BodyUseAPI": [], "Fixed commit": "9b275b17c3e7ef6ef3f943ef1b94c84fc1c336c7", "Url": "https://api.github.com/repos/bdemann/ticket-to-ride", "Date": "2018-03-28T18:04:03Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (optionValues.containsKey(DisableTattletaleReportOption.NAME)) { disableReport = ((java.lang.Boolean) (optionValues.get(DisableTattletaleReportOption.NAME))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5636/buggy-version/bootstrap.src.main.java.org.jboss.windup.bootstrap.commands.windup.RunWindupCommand.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(DisableTattletaleReportOption.NAME)"], "Fixed commit": "9272f1a579235534f61abfe2edc2691adc454e23", "Url": "https://api.github.com/repos/mrizzi/windup", "Date": "2018-09-05T17:49:44Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (optionValues.containsKey(EnableTattletaleReportOption.NAME)) { enableReport = ((java.lang.Boolean) (optionValues.get(EnableTattletaleReportOption.NAME))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5636/buggy-version/bootstrap.src.main.java.org.jboss.windup.bootstrap.commands.windup.RunWindupCommand.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(EnableTattletaleReportOption.NAME)"], "Fixed commit": "9272f1a579235534f61abfe2edc2691adc454e23", "Url": "https://api.github.com/repos/mrizzi/windup", "Date": "2018-09-05T17:49:44Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.zeroclick.meeting.server.calendar.CalendarConfigurationService.LOG.isDebugEnabled()) { org.zeroclick.meeting.server.calendar.CalendarConfigurationService.LOG.debug(new java.lang.StringBuilder().append(\"Calendar need change ? \").append(requiredSave).append(\" (externalIdChanged : \").append(externalIdChanged).append(\", nameChanged : \").append(nameChanged).append(\" , readOnlyChanged : \").append(readOnlyChanged).append(\" , apiCredentialIdCHanged : \").append(apiCredentialIdChanged).append(')').toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2219/buggy-version/meeting.server.src.main.java.org.zeroclick.meeting.server.calendar.CalendarConfigurationService.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "c57cb2cd49995cedecd458afa3479ad3a4a39ece", "Url": "https://api.github.com/repos/jderuette/zc_meeting", "Date": "2018-02-25T12:50:54Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (args.isEmpty()) { manager.setCurrentChannel(((org.bukkit.entity.Player) (sender)), channelName); }else { channelName = args.remove(0); manager.setCurrentChannel(((org.bukkit.entity.Player) (sender)), channelName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9503/buggy-version/src.main.java.world.avatarhorizon.spigot.chatter.commands.subcommands.CmdChannelSet.java", "BodyUseAPI": ["java.util.List<java.lang.String>.remove(int)"], "Fixed commit": "a99abd1b517116dd762271e151dc63531468fb19", "Url": "https://api.github.com/repos/Bendercraft/spigot-chatter", "Date": "2018-02-20T17:08:22Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.hateoas.Resource<uk.ac.ebi.subs.repository.model.DataType>.getContent()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((dataType.getValidationSchema()) != null) { java.lang.String originalSchema = dataType.getValidationSchema(); com.fasterxml.jackson.databind.JsonNode fixedSchema = uk.ac.ebi.subs.repository.util.SchemaConverterFromMongo.fixStoredJson(originalSchema); dataType.setValidationSchema(fixedSchema); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6691/buggy-version/src.main.java.uk.ac.ebi.subs.api.processors.DataTypeResourceProcessor.java", "BodyUseAPI": ["uk.ac.ebi.subs.repository.model.DataType.setValidationSchema(com.fasterxml.jackson.databind.JsonNode)", "uk.ac.ebi.subs.repository.model.DataType.getValidationSchema()"], "Fixed commit": "9afe9a18e3bd1370c50065e02329b0d2df11d44c", "Url": "https://api.github.com/repos/EMBL-EBI-SUBS/subs-api", "Date": "2018-10-08T09:48:46Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.hateoas.Resource<uk.ac.ebi.subs.repository.model.Checklist>.getContent()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((checklist.getValidationSchema()) != null) { java.lang.String originalSchema = checklist.getValidationSchema(); com.fasterxml.jackson.databind.JsonNode fixedSchema = uk.ac.ebi.subs.repository.util.SchemaConverterFromMongo.fixStoredJson(originalSchema); checklist.setValidationSchema(fixedSchema); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6691/buggy-version/src.main.java.uk.ac.ebi.subs.api.processors.ChecklistResourceProcessor.java", "BodyUseAPI": ["uk.ac.ebi.subs.repository.model.Checklist.setValidationSchema(com.fasterxml.jackson.databind.JsonNode)", "uk.ac.ebi.subs.repository.model.Checklist.getValidationSchema()"], "Fixed commit": "9afe9a18e3bd1370c50065e02329b0d2df11d44c", "Url": "https://api.github.com/repos/EMBL-EBI-SUBS/subs-api", "Date": "2018-10-08T09:48:46Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((android.support.v7.widget.GridLayoutManager) (recyclerView.getLayoutManager())).findFirstCompletelyVisibleItemPosition()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (position > 0) { com.l3.one_up.model.User atUser = parseUsers.get(position); android.util.Log.d(com.l3.one_up.fragments.FriendsFragment.tag, (\"At user: \" + (atUser.getFacebookId()))); loadFriendEvents(atUser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7563/buggy-version/One-Up.app.src.main.java.com.l3.one_up.fragments.FriendsFragment.java", "BodyUseAPI": ["java.util.ArrayList<com.l3.one_up.model.User>.get(int)"], "Fixed commit": "2304ecf0af62b1314128241ce29afd980259fcb9", "Url": "https://api.github.com/repos/FBU2018-L3/1-Up", "Date": "2018-07-27T17:17:10Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mConnection) != null) { unbindService(mConnection); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4999/buggy-version/app.src.main.java.com.uni.stuttgart.ipvs.androidgateway.gateway.GatewayController.java", "BodyUseAPI": [], "Fixed commit": "61f24bb878678cc32db09fc342e44edc6d1a2c38", "Url": "https://api.github.com/repos/mdandyf/AndroidGateway", "Date": "2018-04-19T18:51:40Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((wakeLock) != null) && (!(wakeLock.isHeld()))) { wakeLock.acquire(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4999/buggy-version/app.src.main.java.com.uni.stuttgart.ipvs.androidgateway.gateway.GatewayActivity.java", "BodyUseAPI": ["PowerManager.WakeLock.acquire()"], "Fixed commit": "61f24bb878678cc32db09fc342e44edc6d1a2c38", "Url": "https://api.github.com/repos/mdandyf/AndroidGateway", "Date": "2018-04-19T18:51:40Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getResourceCenter()) instanceof org.openflexo.foundation.FlexoProject) { editor = getServiceManager().getProjectLoaderService().getEditorForProject(((org.openflexo.foundation.FlexoProject) (getResourceCenter()))); }else if ((getResourceCenter().getDelegatingProjectResource()) != null) { editor = getServiceManager().getProjectLoaderService().getEditorForProject(getResourceCenter().getDelegatingProjectResource().getFlexoProject()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9695/buggy-version/jdbcconnector.src.main.java.org.openflexo.technologyadapter.jdbc.hbn.rm.HbnVirtualModelInstanceResource.java", "BodyUseAPI": [], "Fixed commit": "1751a37360958ebeddbbb35199a5d3c1e926cfba", "Url": "https://api.github.com/repos/openflexo-team/openflexo-jdbc", "Date": "2018-01-01T17:43:53Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((driverStationFrontend) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7037/buggy-version/sumobots.driverstation.src.main.java.org.inspirerobotics.sumobots.driverstation.gui.GuiController.java", "BodyUseAPI": [], "Fixed commit": "0783ccf4de4e75e1093e6ed2c95cd1bdb66bd267", "Url": "https://api.github.com/repos/InspireRobotics/sumobots", "Date": "2018-05-20T19:07:50Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((driverStationFrontend) != null) { if (!(driverStationFrontend.isNonFieldMode())) disableTimePeriodButtons(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7037/buggy-version/sumobots.driverstation.src.main.java.org.inspirerobotics.sumobots.driverstation.gui.ControlBar.java", "BodyUseAPI": [], "Fixed commit": "0783ccf4de4e75e1093e6ed2c95cd1bdb66bd267", "Url": "https://api.github.com/repos/InspireRobotics/sumobots", "Date": "2018-05-20T19:07:50Z"},
{"Line": "=>1602", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.talend.core.model.process.INode.getOutgoingConnections(org.talend.core.model.process.EConnectionType)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((connList.size()) <= 1) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7246/buggy-version/main.plugins.org.talend.designer.core.src.main.java.org.talend.designer.core.ui.editor.connections.Connection.java", "BodyUseAPI": [], "Fixed commit": "43f3d9d6ae1bd502e8bfac9ea5ebb6bc1b35820b", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2018-05-31T16:41:43Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((movieDetailsModels.size()) == 0) { mTextView.setVisibility(View.VISIBLE); mImageView.setVisibility(View.VISIBLE); }else { mTextView.setVisibility(View.GONE); mImageView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7157/buggy-version/app.src.main.java.com.example.android.show_boxstage2.Activity.BookmarksActivity.java", "BodyUseAPI": [], "Fixed commit": "22aba9b0f04dfa4e236c1197f24331da293e66bf", "Url": "https://api.github.com/repos/SrikarNanduri/ShowBoxStage2", "Date": "2018-07-02T06:58:25Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (waitForTask) { ret = will.get(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/1306/buggy-version/src.main.java.bsh.BshConsoleInterpreter.java", "BodyUseAPI": [], "Fixed commit": "88c167bff46d6926b4e872d8af3b55e5b161b542", "Url": "https://api.github.com/repos/stefanofornari/BshConsole", "Date": "2018-10-28T11:33:07Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.a4tech.apparel.products.parser.ApparealProductAttributeParser.getProductCategories(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(org.springframework.util.CollectionUtils.isEmpty(listOfCategories))) { productExcelObj.setCategories(listOfCategories); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5848/buggy-version/A4techExcelConvertionTool.main.java.supplier.44620Apparel.com.a4tech.apparel.product.mapping.ApparelProductsExcelMapping.java", "BodyUseAPI": ["com.a4tech.product.model.Product.setCategories(java.util.List<java.lang.String>)"], "Fixed commit": "3baafbce408750444caca5c1b8a29496a0bba014", "Url": "https://api.github.com/repos/AMEYA4TECH/A4DataPro", "Date": "2018-07-17T06:16:35Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.trim()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (comparisonValue.startsWith(binnedPrefix)) comparisonValue = comparisonValue.replace(binnedPrefix, \"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6720/buggy-version/src.main.java.org.cowjumping.VisualFitsBrowser.FileBrowserPanel.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "038f0c6cdd8e2c80b8770c54837ec0916010a3dd", "Url": "https://api.github.com/repos/drhaz/VisualFitsBrowser", "Date": "2018-03-06T00:24:30Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bucket.getItemMeta()) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2449/buggy-version/src.com.jmistri.rtsmp.XPBucket.java", "BodyUseAPI": [], "Fixed commit": "caa440127969c5e96412499722ad18b3adb3a39e", "Url": "https://api.github.com/repos/JamsheedMistri/RTSMP", "Date": "2018-07-18T06:58:13Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bucket.getItemMeta().getLore()) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2449/buggy-version/src.com.jmistri.rtsmp.XPBucket.java", "BodyUseAPI": [], "Fixed commit": "caa440127969c5e96412499722ad18b3adb3a39e", "Url": "https://api.github.com/repos/JamsheedMistri/RTSMP", "Date": "2018-07-18T06:58:13Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIamHost) { android.util.Log.d(com.codernauti.gamebank.GameLogic.TAG, ((\"(only host) Synchronize state with the new player.\\n\" + \"Send players: \") + (mPlayers.size()))); android.content.Intent stateIntent = com.codernauti.gamebank.bluetooth.BTBundle.makeIntentFrom(new com.codernauti.gamebank.bluetooth.BTBundle(Event.Game.CURRENT_STATE).append(mPlayers)); stateIntent.putExtra(BTHostService.RECEIVER_UUID, newPlayer.getId()); mLocalBroadcastManager.sendBroadcast(stateIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3313/buggy-version/app.src.main.java.com.codernauti.gamebank.GameLogic.java", "BodyUseAPI": [], "Fixed commit": "d99803fdc3c7712b1638d619c7c7b58eca4c6503", "Url": "https://api.github.com/repos/Codernauti/GameBank", "Date": "2018-03-03T18:16:50Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (commandExecutable == null) { commandExecutable = currentNamespace.getDefaultCommand(); }else if ((currentNamespace.getSubNamespace(token)) == null) { tokens.pop(); return commandExecutable; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/431/buggy-version/commandapi.src.main.java.uk.co.drcooke.commandapi.command.lookup.CommandNamespaceSearchingCommandLookup.java", "BodyUseAPI": [], "Fixed commit": "2034d9844a7ea23d91c5d24a280fed06299c7a53", "Url": "https://api.github.com/repos/david-cooke/CommandAPI", "Date": "2018-02-11T17:50:51Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((itemBean.parent) == jsonItemBean) { itemBean.collapse = false; if (itemBean.isNode) { itemBean.isFolded = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6380/buggy-version/app.src.main.java.com.lijinshan.jsonview.JsonAdapter.java", "BodyUseAPI": [], "Fixed commit": "33c570b009b1ec0aefc5da07c299ae57ad8ac1b6", "Url": "https://api.github.com/repos/lijinshanmx/JsonView", "Date": "2018-04-02T08:49:01Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((editor) != null) editor.commit();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5891/buggy-version/app.src.main.java.com.example.android.clockcalc.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e51d4d45dad5bb1af6fffeae4d923b27c5c6f476", "Url": "https://api.github.com/repos/CannibalChoco/ClockCalc", "Date": "2018-02-05T09:39:38Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(running)) { throw new java.lang.IllegalStateException(\"Monitor is not running\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/1990/buggy-version/src.main.java.com.blueice.commons.monitor.file.FileEventMonitor.java", "BodyUseAPI": [], "Fixed commit": "ad4587c57bf926b9ab188c1a18d701e8a05481af", "Url": "https://api.github.com/repos/blueice007/commons-monitor", "Date": "2018-10-09T08:40:25Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.equals(DishType.DRINK)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9312/buggy-version/src.services.MenuGenerator.java", "BodyUseAPI": [], "Fixed commit": "c02de28a13a2cf1658074905877fd093fa4f1825", "Url": "https://api.github.com/repos/IngSW-unipv/Progetto-D18", "Date": "2018-07-21T21:55:33Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["raft.protocol.RaftNode.getRaftServer()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((serverList.size()) == 1) && ((serverList.get(raftServer.getServerId())) != null)) { logger.warn(\"there is only one node, so I will become leader!\"); becomeLeader(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6122/buggy-version/cheetah-raft.src.main.java.raft.core.RaftCore.java", "BodyUseAPI": [], "Fixed commit": "2904b60f6a6e65a51ab4c803bc126cf4d8ee3349", "Url": "https://api.github.com/repos/Ruan-Xin/cheetah", "Date": "2018-05-08T12:17:42Z"},
{"Line": "=>424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((serverNode.getAsyncProxy().getRemoteProxyStatus()) == (serverNode.getAsyncProxy().STOP)) { serverNode.getAsyncProxy().startService(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6122/buggy-version/cheetah-raft.src.main.java.raft.core.RaftCore.java", "BodyUseAPI": ["raft.core.server.ServerNode.getAsyncProxy()", "serverNode.getAsyncProxy().startService()"], "Fixed commit": "2904b60f6a6e65a51ab4c803bc126cf4d8ee3349", "Url": "https://api.github.com/repos/Ruan-Xin/cheetah", "Date": "2018-05-08T12:17:42Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Main.GameMain.gameState) == (GameMain.STATE.Game)) { int key = e.getKeyCode(); if (key == (java.awt.event.KeyEvent.VK_W)) { GUI.Game.hero.setVelY(0); } if (key == (java.awt.event.KeyEvent.VK_S)) { GUI.Game.hero.setVelY(0); } if (key == (java.awt.event.KeyEvent.VK_A)) { GUI.Game.hero.setVelX(0); } if (key == (java.awt.event.KeyEvent.VK_D)) { GUI.Game.hero.setVelX(0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9283/buggy-version/src.GUI.Game.java", "BodyUseAPI": [], "Fixed commit": "f902e2f525aac6e73abfe889130cece708e0d497", "Url": "https://api.github.com/repos/jamesCastner/HGP_RPG", "Date": "2018-03-18T19:41:44Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lsfusion.server.form.instance.FormSourceInterface<PropertyDraw, GroupObject, PropertyObject, CalcPropertyObject, Order, Obj, PropertyReaderInstance>.getPropertyCaption(PropertyDraw)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (propertyCaption != null) propertyObjects.add(propertyCaption);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8111/buggy-version/server.src.main.java.lsfusion.server.form.instance.ReportSourceGenerator.java", "BodyUseAPI": ["lsfusion.base.col.interfaces.mutable.add.MAddSet<PropertyObject>.add(PropertyObject)"], "Fixed commit": "dc8a55117720b712757a5c33170c3e5dc8460920", "Url": "https://api.github.com/repos/lsfusion/platform", "Date": "2018-07-16T08:07:30Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lsfusion.server.form.instance.FormSourceInterface<PropertyDraw, GroupObject, PropertyObject, CalcPropertyObject, Order, Obj, PropertyReaderInstance>.getPropertyFooter(PropertyDraw)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (propertyFooter != null) propertyObjects.add(propertyFooter);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8111/buggy-version/server.src.main.java.lsfusion.server.form.instance.ReportSourceGenerator.java", "BodyUseAPI": ["lsfusion.base.col.interfaces.mutable.add.MAddSet<PropertyObject>.add(PropertyObject)"], "Fixed commit": "dc8a55117720b712757a5c33170c3e5dc8460920", "Url": "https://api.github.com/repos/lsfusion/platform", "Date": "2018-07-16T08:07:30Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { startActivity(intentFirst, android.app.ActivityOptions.makeSceneTransitionAnimation(this).toBundle()); finish(); }else { startActivity(intentFirst); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2769/buggy-version/app.src.main.java.com.silicon.tareq.spash_scr.SplashActivity.java", "BodyUseAPI": [], "Fixed commit": "9e8437124635a835c436c53e2eda0c5ea2c54187", "Url": "https://api.github.com/repos/tareq3/Spash_Scr_Animated", "Date": "2018-07-26T15:52:04Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentMode == null) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5770/buggy-version/exoplayeractivity.src.main.java.com.liskovsoft.smartyoutubetv.flavors.exoplayer.player.displaymode.DisplaySyncHelper.java", "BodyUseAPI": [], "Fixed commit": "b39f3aa50215b2cef58bd3e305c953d95cf0e09c", "Url": "https://api.github.com/repos/yuliskov/SmartYouTubeTV", "Date": "2018-01-22T10:45:40Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mode == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5770/buggy-version/exoplayeractivity.src.main.java.com.liskovsoft.smartyoutubetv.flavors.exoplayer.player.displaymode.DisplaySyncHelper.java", "BodyUseAPI": [], "Fixed commit": "b39f3aa50215b2cef58bd3e305c953d95cf0e09c", "Url": "https://api.github.com/repos/yuliskov/SmartYouTubeTV", "Date": "2018-01-22T10:45:40Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.md_5.bungee.api.event.ChatEvent.getSender()", "net.md_5.bungee.BungeeCord.getInstance().getServerInfo(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(server.canAccess(player))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3050/buggy-version/src.me.bartvv.rebelnetwork.listeners.ServerListener.java", "BodyUseAPI": [], "Fixed commit": "3cbe4aa4c540eb74787d07d2555ffc6081011727", "Url": "https://api.github.com/repos/rebelnetwork/Bungeecord-Core", "Date": "2018-03-31T09:30:12Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (readAssembler) { word = rawCommand.substring(4); }else { word = rawCommand.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3811/buggy-version/04_runtime.vongvirtualmachine.src.main.java.vong.piler.her.vongruntime.virtualmachine.Steakmachine.java", "BodyUseAPI": [], "Fixed commit": "df73c3180c452dde66c78a219f3efa07699c6441", "Url": "https://api.github.com/repos/MastersOfDesaster/Vongpiler", "Date": "2018-01-01T21:00:51Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (node == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7522/buggy-version/tregression.src.main.tregression.separatesnapshots.DiffMatcher.java", "BodyUseAPI": [], "Fixed commit": "56afa713d60f063124ecce02f577451b3c718ad0", "Url": "https://api.github.com/repos/llmhyy/tregression", "Date": "2018-03-26T15:55:28Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["item.select(\"div[class=\\\"yt-lockup-meta\\\"]\").first()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((meta.select(\"li\").size()) < 2) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6962/buggy-version/extractor.src.main.java.org.schabi.newpipe.extractor.services.youtube.YoutubeStreamInfoItemExtractor.java", "BodyUseAPI": [], "Fixed commit": "bf1c7716620e1dbc2b01d29b2f5af601596ac621", "Url": "https://api.github.com/repos/TeamNewPipe/NewPipeExtractor", "Date": "2018-05-04T14:11:25Z"},
{"Line": "=>592", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userChallenges == null) { userChallenges = new java.util.ArrayList<java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8098/buggy-version/SkateTracker.app.src.main.java.sk8_is_lif3.skatetracker.CurrentSession.java", "BodyUseAPI": [], "Fixed commit": "c5b74582faf19c4abdbecfeb482281655098a3f3", "Url": "https://api.github.com/repos/PKWouters/SkateTracker", "Date": "2018-06-05T22:41:27Z"},
{"Line": "=>710", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userChallenges == null) { userChallenges = new java.util.ArrayList<java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8098/buggy-version/SkateTracker.app.src.main.java.sk8_is_lif3.skatetracker.CurrentSession.java", "BodyUseAPI": [], "Fixed commit": "c5b74582faf19c4abdbecfeb482281655098a3f3", "Url": "https://api.github.com/repos/PKWouters/SkateTracker", "Date": "2018-06-05T22:41:27Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(Woo.player.isAlive())) { java.lang.System.out.println(\"You lose. Here is who all the remaining living Characters were:\"); java.lang.System.out.println(Woo.display(Woo.livingChars)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6935/buggy-version/Woo.java", "BodyUseAPI": [], "Fixed commit": "ac9a05bd9a95140102809b031c64556a9d3d0f73", "Url": "https://api.github.com/repos/nadinejackson/Programstinators", "Date": "2018-01-15T17:05:01Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resource == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9506/buggy-version/src.main.java.techreborn.items.DynamicCell.java", "BodyUseAPI": [], "Fixed commit": "eb4ba94593a44215b2bc98da1ed8f6ada266f0b9", "Url": "https://api.github.com/repos/TechReborn/TechReborn", "Date": "2018-05-20T20:41:58Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newsTitle.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8661/buggy-version/app.src.main.java.theo.tziomakas.news.DetailActivity.java", "BodyUseAPI": [], "Fixed commit": "88213a3607bcb52b034100092d3681840cd04154", "Url": "https://api.github.com/repos/theo82/Capstone-Udacity-Android-Nanodegree", "Date": "2018-05-27T15:14:03Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((res.length()) < 8) { res = res.substring(0, res.length()); }else { res = res.substring(0, 8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6912/buggy-version/src.StringUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "76c0b70a57245d40c3116e58da0f6f60f73b3323", "Url": "https://api.github.com/repos/Purdue-CS193/lab-3-hurstjohn", "Date": "2018-10-08T05:14:55Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSame()) { person.setUserPassword(this.password); personService.updatePerson(person); javax.faces.context.FacesContext.getCurrentInstance().addMessage(null, new javax.faces.application.FacesMessage(javax.faces.application.FacesMessage.SEVERITY_INFO, \"Successfully changed!\", \"Successfully changed!\")); }else { javax.faces.context.FacesContext.getCurrentInstance().addMessage(graphValidator.getClientId(), new javax.faces.application.FacesMessage(javax.faces.application.FacesMessage.SEVERITY_ERROR, \"Password and confirm password value don't match\", \"Password and confirm password value don't match\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9150/buggy-version/server.src.main.java.org.gluu.oxtrust.action.PasswordValidationAction.java", "BodyUseAPI": [], "Fixed commit": "3304bff7d3ddb576fa49f88728f18a6ef1640f9f", "Url": "https://api.github.com/repos/GluuFederation/oxTrust", "Date": "2018-08-21T08:10:09Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (resources.getUserPreferences().getShowTutorialTips()) { resources.loadAsset(Resources.TUTORIAL_ATLAS, com.badlogic.gdx.graphics.g2d.TextureAtlas.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/1203/buggy-version/core.src.com.lastdefenders.load.LevelLoadingScreen.java", "BodyUseAPI": ["com.lastdefenders.util.Resources.loadAsset(Resources.TUTORIAL_ATLAS,java.lang.Class)"], "Fixed commit": "14095aaadd76c154992bf8c9e69f45b3988d4d87", "Url": "https://api.github.com/repos/EricLeeSanders/last-defenders", "Date": "2018-05-07T01:20:58Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(initParameters.containsKey(name))) { initParameters.put(name, value); result = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5348/buggy-version/piranha.src.main.java.com.manorrock.piranha.DefaultFilterEnvironment.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "5f39d0e4d50e4cbb7ab891d5f1727ee2520ed167", "Url": "https://api.github.com/repos/manorrock/piranha", "Date": "2018-07-26T02:21:37Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != input) input.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6425/buggy-version/src.ch8.Ex1.java", "BodyUseAPI": ["java.util.Scanner.close()"], "Fixed commit": "52abe62b8fe8a46ad04ba2e03489cf0a9b396e36", "Url": "https://api.github.com/repos/Shrek2222/Exercises", "Date": "2018-09-13T18:42:33Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != input) input.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6425/buggy-version/src.ch8.Ex8.java", "BodyUseAPI": ["java.util.Scanner.close()"], "Fixed commit": "52abe62b8fe8a46ad04ba2e03489cf0a9b396e36", "Url": "https://api.github.com/repos/Shrek2222/Exercises", "Date": "2018-09-13T18:42:33Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != input) input.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6425/buggy-version/src.ch7.Ex5.java", "BodyUseAPI": ["java.util.Scanner.close()"], "Fixed commit": "52abe62b8fe8a46ad04ba2e03489cf0a9b396e36", "Url": "https://api.github.com/repos/Shrek2222/Exercises", "Date": "2018-09-13T18:42:33Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != input) input.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6425/buggy-version/src.ch7.Ex4.java", "BodyUseAPI": ["java.util.Scanner.close()"], "Fixed commit": "52abe62b8fe8a46ad04ba2e03489cf0a9b396e36", "Url": "https://api.github.com/repos/Shrek2222/Exercises", "Date": "2018-09-13T18:42:33Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numberOfScores != 0) { average /= numberOfScores; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6425/buggy-version/src.ch7.Ex4.java", "BodyUseAPI": [], "Fixed commit": "52abe62b8fe8a46ad04ba2e03489cf0a9b396e36", "Url": "https://api.github.com/repos/Shrek2222/Exercises", "Date": "2018-09-13T18:42:33Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (other != null) { busArrivals.addAll(other.busArrivals); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/869/buggy-version/src.model.busarrival.BusStopArrival.java", "BodyUseAPI": ["java.util.ArrayList<model.busarrival.BusArrival>.addAll(java.util.ArrayList<model.busarrival.BusArrival>)"], "Fixed commit": "b88ccba74187cbecfe56f2530cbfb421ef414f3c", "Url": "https://api.github.com/repos/bernardyip/BusTimeBot", "Date": "2018-10-04T14:59:28Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (reward != null) { log.addNumberRewardsToDictionary(reward); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2245/buggy-version/src.main.java.Game.java", "BodyUseAPI": ["RewardLogger.addNumberRewardsToDictionary(Reward)"], "Fixed commit": "5bd9d08449aa0d03645faf68e44c0559a0fc4d5f", "Url": "https://api.github.com/repos/zorg9pi9/MiniGame", "Date": "2018-01-09T09:03:22Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (verticalScrollBar != null) { verticalScrollBar.addAdjustmentListener(( e) -> scrollPane.repaint()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4240/buggy-version/desktop.src.com.frostwire.gui.components.transfers.TransferDetailGeneral.java", "BodyUseAPI": [], "Fixed commit": "10d599c5327d2672e90bfc99d0222db9b45215ed", "Url": "https://api.github.com/repos/alejandroarturom/frostwire", "Date": "2018-07-07T10:03:31Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args[argsIndex].equalsIgnoreCase(\"false\")) || (args[argsIndex].equalsIgnoreCase(\"no\"))) { alert = false; argsIndex++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7405/buggy-version/server.src.org.openrsc.server.packethandler.CommandHandler.java", "BodyUseAPI": [], "Fixed commit": "e8b3153f2adc69ba3fc95ed5435725f2818f4074", "Url": "https://api.github.com/repos/Open-RSC/Game", "Date": "2018-08-04T18:59:37Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args[argsIndex].equalsIgnoreCase(\"true\")) || (args[argsIndex].equalsIgnoreCase(\"yes\"))) { alert = true; argsIndex++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7405/buggy-version/server.src.org.openrsc.server.packethandler.CommandHandler.java", "BodyUseAPI": [], "Fixed commit": "e8b3153f2adc69ba3fc95ed5435725f2818f4074", "Url": "https://api.github.com/repos/Open-RSC/Game", "Date": "2018-08-04T18:59:37Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cloud.module.course.CourseService.courseIdToCourse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (course == null) { return new cloud.common.Result(\"fail\", \"course not exist\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7400/buggy-version/src.main.java.cloud.module.course.courseComment.CourseCommentController.java", "BodyUseAPI": [], "Fixed commit": "f20106225edafc6eb40ae511090256e7e0d40297", "Url": "https://api.github.com/repos/Scientific-Mushrooms/backend", "Date": "2018-09-23T20:11:08Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jfinal.ext.plugin.activerecord.ModelExt<M>.findFirst(com.jfinal.ext.kit.SqlpKit.selectOne(this, columns))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == m) { return m; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8669/buggy-version/src.main.java.com.jfinal.ext.plugin.activerecord.ModelExt.java", "BodyUseAPI": [], "Fixed commit": "14be8dadf7f1195da6ba9889fe612cce73bea348", "Url": "https://api.github.com/repos/E7du/jfinal-ext3", "Date": "2018-07-29T02:58:46Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(\"safari\".equals(requestedCapabilities.get(org.openqa.grid.internal.utils.BROWSER_NAME)))) && (!(\"Safari Technology Preview\".equals(requestedCapabilities.get(org.openqa.grid.internal.utils.BROWSER_NAME))))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3719/buggy-version/java.server.src.org.openqa.grid.internal.utils.DefaultCapabilityMatcher.java", "BodyUseAPI": [], "Fixed commit": "b5b247cc8e8d3ff332aa24d9ab1c4c3928705d31", "Url": "https://api.github.com/repos/larkost/selenium", "Date": "2018-07-19T07:38:33Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tokens.length) < 2) { basemod.DevConsole.cmdPowerHelp(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6089/buggy-version/src.main.java.basemod.DevConsole.java", "BodyUseAPI": [], "Fixed commit": "d14badb492a9282e2986793f4f6a1445e47cd0dd", "Url": "https://api.github.com/repos/daviscook477/BaseMod", "Date": "2018-03-31T23:45:54Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((purchasePriceField.getNumber()) <= 0) { output.setText(\"Please enter a valid price\"); }else { while ((debt.getRemainingBalance()) >= 0.0) { line = ((((((Format.justify('l', debt.getMonth(), 5)) + (Format.justify('r', debt.getTotalOwed(), 12, 2))) + (Format.justify('r', debt.getInterest(), 14, 2))) + (Format.justify('r', debt.getPrincipleOwed(), 15, 2))) + (Format.justify('r', debt.getMonthlyPayment(), 9, 2))) + (Format.justify('r', debt.getRemainingBalance(), 17, 2))) + \"\\n\"; output.append(line); debt.calculate(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/1672/buggy-version/PaymentTable.src.PaymentTable.java", "BodyUseAPI": [], "Fixed commit": "1d39d0e5a3bd0269b3f40de73ef2815664197acc", "Url": "https://api.github.com/repos/Blendify/2018-Honors-Java-Programming", "Date": "2018-05-10T18:02:19Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(eventSet)) { setCalendarDay(null, null, dateMonth, dateYear, dateDay, view, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4517/buggy-version/app.src.main.java.com.jpdev.o2runninglog.CalendarAdapter.java", "BodyUseAPI": [], "Fixed commit": "05548e185bdac7d4ce734e6dabcf8e62217fd123", "Url": "https://api.github.com/repos/jpat82792/O2RunningLog", "Date": "2018-03-15T17:05:03Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((a.size()) == 0) || ((b.size()) == 0)) { return java.lang.Integer.MAX_VALUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2605/buggy-version/app.src.main.java.org.roeg.sawroeg.Dict.java", "BodyUseAPI": [], "Fixed commit": "31688d1be0da7bd801034a3d3cf866c9964e5d10", "Url": "https://api.github.com/repos/libertas/Sawroeg-Android", "Date": "2018-10-25T11:03:55Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((member) != null) { return member.getImage(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5181/buggy-version/src.main.java.de.altenerding.biber.pinkie.business.dean.entity.Dean.java", "BodyUseAPI": [], "Fixed commit": "b01777c06066ae2cd7c0ccf33ddd98179dc93ce6", "Url": "https://api.github.com/repos/AlexanderPraegla/Pinkie", "Date": "2018-10-24T16:38:53Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((member) != null) { return member.getImage(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5181/buggy-version/src.main.java.de.altenerding.biber.pinkie.business.referee.entity.Referee.java", "BodyUseAPI": [], "Fixed commit": "b01777c06066ae2cd7c0ccf33ddd98179dc93ce6", "Url": "https://api.github.com/repos/AlexanderPraegla/Pinkie", "Date": "2018-10-24T16:38:53Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sDataManager.getAccountBean().getAccount().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (accountEntity == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4584/buggy-version/app.src.main.java.com.shinnytech.futures.view.fragment.TransactionFragment.java", "BodyUseAPI": [], "Fixed commit": "e83385c11d1421f5eb592d31510c26d0e0971671", "Url": "https://api.github.com/repos/shinnytech/shinny-futures-android", "Date": "2018-08-10T01:47:10Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.shinnytech.futures.model.engine.LatestFileManager.getSearchEntities().get(mInstrumentId).getMargin()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (margin.isEmpty()) mBinding.maxVolume.setText(\"0\"); else mBinding.maxVolume.setText(com.shinnytech.futures.utils.MathUtils.round(com.shinnytech.futures.utils.MathUtils.divide(accountEntity.getAvailable(), margin), 0));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4584/buggy-version/app.src.main.java.com.shinnytech.futures.view.fragment.TransactionFragment.java", "BodyUseAPI": ["mBinding.maxVolume.setText(com.shinnytech.futures.utils.MathUtils.round(com.shinnytech.futures.utils.MathUtils.divide(accountEntity.getAvailable(), margin), 0))", "com.shinnytech.futures.utils.MathUtils.round(com.shinnytech.futures.utils.MathUtils.divide(accountEntity.getAvailable(), margin),int)", "com.shinnytech.futures.utils.MathUtils.divide(accountEntity.getAvailable(),java.lang.String)"], "Fixed commit": "e83385c11d1421f5eb592d31510c26d0e0971671", "Url": "https://api.github.com/repos/shinnytech/shinny-futures-android", "Date": "2018-08-10T01:47:10Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pointer.isMoving()) { com.lglab.merino.lgxeducontroller.connection.LGConnectionManager.getInstance().addCommandToLG((((((\"export DISPLAY=:0; \" + (((\"xdotool mouseup 1; \" + \"xdotool mousemove --polar 0 0; \") + \"xdotool mousedown 1; \") + \"xdotool mousemove --polar \")) + ((int) (pointer.getTraveledAngle()))) + \" \") + ((int) (java.lang.Math.min(pointer.getTraveledDistance(), 250)))) + \";\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9256/buggy-version/app.src.main.java.com.lglab.merino.lgxeducontroller.activities.NavigateActivity.java", "BodyUseAPI": ["com.lglab.merino.lgxeducontroller.utils.PointerDetector.getTraveledDistance()", "com.lglab.merino.lgxeducontroller.connection.LGConnectionManager.getInstance().addCommandToLG(java.lang.String)", "java.lang.Math.min(pointer.getTraveledDistance(),int)", "com.lglab.merino.lgxeducontroller.utils.PointerDetector.getTraveledAngle()"], "Fixed commit": "baa61cd3d28fab9c20255de13711248d8cc9eb16", "Url": "https://api.github.com/repos/LiquidGalaxyLAB/Liquid-Galaxy-for-Education-Controller", "Date": "2018-08-23T09:21:29Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((list.getData().getCover()) != null) { com.bumptech.glide.Glide.with(mContext).load(list.getData().getCover().getDetail()).crossFade(800).placeholder(R.drawable.cross_image).error(R.drawable.cross_image).into(itemViewBinding.jzVideoPlayer.thumbImageView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4072/buggy-version/app.src.main.java.com.example.discover.adapter.VideoRecyclerAdapter.java", "BodyUseAPI": ["com.example.discover.bean.DetailBean.ItemList.getData()", "com.bumptech.glide.Glide.with(mContext).load(list.getData().getCover().getDetail()).crossFade(800).placeholder(R.drawable.cross_image).error(R.drawable.cross_image)", "com.bumptech.glide.Glide.with(mContext).load(list.getData().getCover().getDetail()).crossFade(800).placeholder(R.drawable.cross_image)", "com.bumptech.glide.Glide.with(mContext).load(list.getData().getCover().getDetail()).crossFade(int)", "list.getData().getCover().getDetail()", "com.bumptech.glide.Glide.with(mContext).load(list.getData().getCover().getDetail())", "com.bumptech.glide.Glide.with(mContext).load(list.getData().getCover().getDetail()).crossFade(800).placeholder(R.drawable.cross_image).error(R.drawable.cross_image).into(itemViewBinding.jzVideoPlayer.thumbImageView)", "list.getData().getCover()"], "Fixed commit": "446a0b0bfcf85a5cc5d39facf5e9f041e2c7cb31", "Url": "https://api.github.com/repos/monkeywiiu/Discover", "Date": "2018-02-09T08:28:24Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((alist.get(i)) == (sNum[i])) { stCnt++; }else { ballCnt++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/1161/buggy-version/src.baseballPractice.CompareNum.java", "BodyUseAPI": [], "Fixed commit": "32216bf47afe5d428d9a31aa3595631c75937aa0", "Url": "https://api.github.com/repos/firstjaein/baseballTest", "Date": "2018-08-16T14:44:48Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pname.equals(\"chihuahua\")) { pname = \"Chihuahua\"; }else if (pname.equals(\"husky\")) { pname = \"Husky\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9391/buggy-version/android.app.src.main.java.mx.itesm.dognoscis.RankActivity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "594c58f3826e72eb92249aacd73414c510fa9a0c", "Url": "https://api.github.com/repos/carlosmartell97/Dognoscis", "Date": "2018-04-06T22:11:09Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((executorService) != null) { executorService.shutdown(); executorService = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9054/buggy-version/speedlib.src.main.java.com.workdawn.speedlib.load.RequestTask.java", "BodyUseAPI": [], "Fixed commit": "b840202631c57bbb4c868845b213fbfe090537fe", "Url": "https://api.github.com/repos/workdawn/Speed", "Date": "2018-05-22T02:39:21Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (configFile.isDirectory()) { return parse(dataConfigHomeDirectory, constructInputStream(io.github.azagniotov.stubby4j.yaml.YAMLMerger.merge(configFile))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/1957/buggy-version/main.java.io.github.azagniotov.stubby4j.yaml.YAMLParser.java", "BodyUseAPI": ["io.github.azagniotov.stubby4j.yaml.YAMLMerger.merge(java.io.File)", "io.github.azagniotov.stubby4j.yaml.YAMLParser.constructInputStream(io.github.azagniotov.stubby4j.yaml.YAMLMerger.merge(configFile))", "io.github.azagniotov.stubby4j.yaml.YAMLParser.parse(java.lang.String,constructInputStream(io.github.azagniotov.stubby4j.yaml.YAMLMerger.merge(configFile)))"], "Fixed commit": "a83b4ebfdcc3b1ae3ebccdfde2037e0de0979a68", "Url": "https://api.github.com/repos/asarkar/stubby4j", "Date": "2018-01-15T22:42:31Z"},
{"Line": "=>640", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nc.noumea.mairie.repository.IMairieRepository.getAgentCurrentCarriere(helperService.getMairieMatrFromIdAgent(idAgent),java.util.Date)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (carr == null) { logger.warn(\"Aucune carri\u00e8re active \u00e0 la date du {} pour l'agent matricule {}.\", dateLundi, idAgent); carr = mairieRepository.getAgentCurrentCarriere(helperService.getMairieMatrFromIdAgent(idAgent), new org.joda.time.DateTime(dateLundi).plusDays(7).toDate()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3464/buggy-version/src.main.java.nc.noumea.mairie.ptg.service.impl.VentilationService.java", "BodyUseAPI": [], "Fixed commit": "d87321684e2849f9b025f0d0409a9b7b814d1290", "Url": "https://api.github.com/repos/DSI-Ville-Noumea/sirh-ptg-ws", "Date": "2018-10-29T23:12:16Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (current != null) { current(response, current); }else { quiz(response, q); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8270/buggy-version/src.main.java.de.kreth.quiz.WebController.java", "BodyUseAPI": ["de.kreth.quiz.WebController.current(javax.servlet.http.HttpServletResponse,de.kreth.quiz.data.Question)"], "Fixed commit": "4fd86e1c486ffaf8bf039856006b598df3757c3d", "Url": "https://api.github.com/repos/markuskreth/quiz_webapp", "Date": "2018-02-01T17:34:16Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.google.protobuf.Value>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((statistics.getStringValue()) != null) && ((statistics.getStringValue().length()) > 0)) && (statistics.getStringValue().equals(\"Mom\"))) { java.lang.String mom = pointsDTO.getPlayerOfMatch(); answers.add(((mom + \" was man of the match in finals of season \") + year)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3933/buggy-version/src.main.java.com.example.ipl.iplstats.delegate.ChatBotTelegramDelegate.java", "BodyUseAPI": [], "Fixed commit": "a39e8f5551ab1158192f7e824776986b07cd2120", "Url": "https://api.github.com/repos/udayakiranss/iplstats", "Date": "2018-07-08T17:39:09Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.ebi.embl.api.validation.ExtendedResult<uk.ac.ebi.embl.api.translation.TranslationResult>.getExtension()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (translationResult.isFixedRightPartial()) { if (!(cds.getLocations().isComplement())) { cds.getLocations().setRightPartial(translator.isRightPartial()); }else { cds.getLocations().setLeftPartial(translator.isRightPartial()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6113/buggy-version/embl-api-core.src.main.java.uk.ac.ebi.embl.api.translation.CdsTranslator.java", "BodyUseAPI": [], "Fixed commit": "68d3fa2890b09f430c251fdd49642f4a292fa790", "Url": "https://api.github.com/repos/enasequence/sequencetools", "Date": "2018-07-11T17:27:05Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((((match.groupCount()) > 3) && ((match.group(3)) != null)) && (!(match.group(3).isEmpty()))) { org.marc.everest.datatypes.PQ group2 = new org.marc.everest.datatypes.PQ(new java.math.BigDecimal(match.group(3)), match.group(4)); retVal = new org.marc.everest.datatypes.generic.IVL<org.marc.everest.datatypes.PQ>(group1, group2); if (((match.groupCount()) > 5) && (org.apache.commons.lang.StringUtils.isNotBlank(match.group(5)))) { org.marc.everest.datatypes.PQ group3 = new org.marc.everest.datatypes.PQ(new java.math.BigDecimal(match.group(5)), match.group(6)); retVal = new org.marc.everest.datatypes.generic.IVL<org.marc.everest.datatypes.PQ>(group1, group2); retVal.setOriginalText(new org.marc.everest.datatypes.ED(((((group1 + \"/\") + group2) + \"/\") + group3))); } }else if (valueText.contains(\"{\")) retVal = new org.marc.everest.datatypes.generic.IVL<org.marc.everest.datatypes.PQ>(group1, null); else retVal = new org.marc.everest.datatypes.generic.IVL<org.marc.everest.datatypes.PQ>(group1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/1279/buggy-version/api.src.main.java.org.openmrs.module.xdssender.api.cda.entry.impl.EntryBuilderImpl.java", "BodyUseAPI": ["java.util.regex.Matcher.group(int)", "java.util.regex.Matcher.group(int)", "java.util.regex.Matcher.group(int)", "java.util.regex.Matcher.group(int)", "java.util.regex.Matcher.groupCount()", "org.apache.commons.lang.StringUtils.isNotBlank(java.lang.String)", "java.util.regex.Matcher.group(int)"], "Fixed commit": "1bb3b17237285f6f3dd9bd69507ae2337774a9ef", "Url": "https://api.github.com/repos/IsantePlus/openmrs-module-xds-sender", "Date": "2018-04-03T11:53:37Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (intent == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2636/buggy-version/iNaturalist.src.main.java.org.inaturalist.android.INaturalistService.java", "BodyUseAPI": [], "Fixed commit": "38e8a5a685e47d75f79ac05018abc7197de8d04d", "Url": "https://api.github.com/repos/inaturalist/iNaturalistAndroid", "Date": "2018-05-09T11:32:05Z"},
{"Line": "=>701", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cssWidth != (-1)) { if (borderBox) { setContentWidth(((cssWidth - ((int) (border.width()))) - ((int) (padding.width())))); }else { setContentWidth(cssWidth); } }else if ((getStyle().isAbsolute()) || (getStyle().isFixed())) { pinnedContentWidth = calcPinnedContentWidth(c); if (pinnedContentWidth != (-1)) { setContentWidth(pinnedContentWidth); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2872/buggy-version/web-k-core.src.main.java.com.earnix.webk.render.BlockBox.java", "BodyUseAPI": ["com.earnix.webk.render.BlockBox.setContentWidth(int)", "com.earnix.webk.render.BlockBox.setContentWidth(int)"], "Fixed commit": "8a0a85a6fd9cb953c691245c9bb07f61f315f49c", "Url": "https://api.github.com/repos/Earnix/Web-K", "Date": "2018-10-16T13:56:21Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((libro.getNumeroPaginas()) != null) { mainEntity.setNumberOfPages(libro.getNumeroPaginas().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3241/buggy-version/momoko-backend.src.main.java.com.momoko.es.util.JsonLDUtils.java", "BodyUseAPI": ["libro.getNumeroPaginas().toString()", "com.momoko.es.api.dto.LibroDTO.getNumeroPaginas()", "com.momoko.es.api.datosestructurados.BookMainEntity.setNumberOfPages(libro.getNumeroPaginas().toString())"], "Fixed commit": "21048bd558d5d3183658066913ba48994f5b0c18", "Url": "https://api.github.com/repos/Maetro/MomokoWeb", "Date": "2018-06-01T11:17:57Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((flag == 0) && (isLogin(msg))) || ((flag == 1) && (isLogin(msg)))) { showActivity(aty, com.yinglan.scm.loginregister.LoginActivity.class); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6201/buggy-version/SillyChildMerchant.app.src.main.java.com.yinglan.scm.main.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "035a8580e3ca40835b6b0e41b2a254f9f0bcac62", "Url": "https://api.github.com/repos/921668753/SillyChildMerchant-Android", "Date": "2018-07-08T07:39:25Z"},
{"Line": "=>800", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Object, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (value == null) { org.jkiss.dbeaver.model.preferences.DBPPropertyDescriptor defProperty = providerDescriptor.getDriverProperty(name); if (defProperty != null) { return defProperty.getDefaultValue(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9226/buggy-version/plugins.org.jkiss.dbeaver.core.src.org.jkiss.dbeaver.registry.driver.DriverDescriptor.java", "BodyUseAPI": [], "Fixed commit": "82f37770c92062bf7e2fed634be2e538f10f1881", "Url": "https://api.github.com/repos/johnatanDM/dbeaver", "Date": "2018-03-13T15:35:29Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.qwixi.tour.util.Preferences.getInstance().isLoginningFromTourInfo()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (loginningFromTourInfo) { net.qwixi.tour.ui.activity.MainActivityNew mainActivityNew = ((net.qwixi.tour.ui.activity.MainActivityNew) (getActivity())); if (mainActivityNew != null) { mainActivityNew.updateBottomBar(null); try { getFragmentManager().popBackStack(); getFragmentManager().popBackStack(); } catch (java.lang.IllegalStateException e) { android.util.Log.e(net.qwixi.tour.ui.fragment.SignUpFragment.TAG, \"handleLoginSuccessEvent: \", e); } } }else { ((net.qwixi.tour.ui.activity.MainActivityNew) (getActivity())).selectBottomBarItem(MainActivityNew.OVERVIEW); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9328/buggy-version/app.src.main.java.net.qwixi.tour.ui.fragment.SignUpFragment.java", "BodyUseAPI": [], "Fixed commit": "063b29725c7146ddfe3cef71ff05b2722d5b3ea0", "Url": "https://api.github.com/repos/Dima2407/Qwixi", "Date": "2018-06-14T19:44:23Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (row == 0) { l.setBackground(java.awt.Color.WHITE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/522/buggy-version/src.main.java.logical.MyCellRenderer.java", "BodyUseAPI": [], "Fixed commit": "06d5bad78953f1c898b972ab5340ae06016011e6", "Url": "https://api.github.com/repos/FilipWicher/My-Training-App", "Date": "2018-06-04T10:04:48Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((SERVICE_CLIENT) == null) { SERVICE_CLIENT = new com.github.dapeng.basic.api.counter.CounterServiceClient(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4238/buggy-version/dapeng-container.dapeng-container-impl.src.main.java.com.github.dapeng.impl.plugins.netty.SoaFlowCounter.java", "BodyUseAPI": [], "Fixed commit": "0ba77d31c2b52b99eb0e5310c43ab2c8689f90c8", "Url": "https://api.github.com/repos/dapeng-soa/dapeng-soa", "Date": "2018-03-20T10:57:58Z"},
{"Line": "=>1631", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position >= (tags.size())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6465/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.activities.TootActivity.java", "BodyUseAPI": [], "Fixed commit": "521476eac630edbd4c9643ca1cd648f9eb7ca405", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2018-01-10T13:39:01Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event.getRelativeElement().equals(searchForm.suggestInputText.getInputField().getElement())) { searchForm.suggestInputText.checkEmptySuggestion(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7437/buggy-version/src.main.java.org.iabako.client.ui.form.business.util.SearchActionHandler.java", "BodyUseAPI": ["searchForm.suggestInputText.checkEmptySuggestion()"], "Fixed commit": "ab70f48c9c920f2cba282722e9d96835b9b245ba", "Url": "https://api.github.com/repos/iabakoproject/iabako", "Date": "2018-07-27T14:36:16Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((canvas.getPartyStack().size()) > 0) { int index = canvas.getPartyStack().indexOf(changingParty); canvas.getPartyStack().remove(index); canvas.getPartyStack().add(index, partyToAdd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2259/buggy-version/src.Controller.SetPartyTypeHandler.java", "BodyUseAPI": ["canvas.getPartyStack().remove(int)", "Model.Canvas.getPartyStack()", "canvas.getPartyStack().indexOf(Model.Party)", "Model.Canvas.getPartyStack()", "Model.Canvas.getPartyStack()", "canvas.getPartyStack().add(int,Model.Party)"], "Fixed commit": "60eccf4128ba37a1c9ab507f195c21ba7695e60e", "Url": "https://api.github.com/repos/woutmees/SWOP2", "Date": "2018-04-02T00:46:12Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["at.aau.gloryweapons.siegeanddestroy3d.network.dto.UserNameRequestDTO.getCheckUsername()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(requestedName.equals(\"test\"))) { user = serverController.checkName(requestedName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8170/buggy-version/app.src.main.java.at.aau.gloryweapons.siegeanddestroy3d.network.asyncCommunication.ServerGameHandlerAsyncCommunication.java", "BodyUseAPI": ["at.aau.gloryweapons.siegeanddestroy3d.server.ServerController.checkName(java.lang.String)"], "Fixed commit": "c95e902d611bcc59e185be6aee30be72d7f460a6", "Url": "https://api.github.com/repos/Alexx882/SiegeAndDestroy3D", "Date": "2018-05-12T15:20:35Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.mifos.utils.Network.getConnectivityStatus(this)) != (com.mifos.utils.Network.TYPE_NOT_CONNECTED)) { startDashBoardActivity(); finish(); }else { com.mifos.mifosxdroid.core.util.Toaster.show(clRootview, R.string.error_network_not_available); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/505/buggy-version/mifosng-android.src.main.java.com.mifos.mifosxdroid.passcode.PassCodeActivity.java", "BodyUseAPI": [], "Fixed commit": "d544f8dbe056c4e56424966e0dc46b3245e19024", "Url": "https://api.github.com/repos/AkshGautam/android-client", "Date": "2018-02-08T15:10:10Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((time % (DataStore.AUTOSAVE_SECONDS)) != 0) { done = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9792/buggy-version/app.src.main.java.trc3543.trcscoutingapp.AutoSaveThread.java", "BodyUseAPI": [], "Fixed commit": "ded81e899df0318da1f4d1b530f9ab4bb70353cd", "Url": "https://api.github.com/repos/DrDab/TrcScoutingApp", "Date": "2018-01-28T00:59:03Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["page.getWebURL().getURL()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((url.equals(main.MyCrawler.START)) || (url.startsWith(main.MyCrawler.PAGE))) { util.GetArticles.getAllarticles(page); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3968/buggy-version/src.main.MyCrawler.java", "BodyUseAPI": [], "Fixed commit": "922a0824633f8c519771f1fd120367a3a171f969", "Url": "https://api.github.com/repos/tumaolin94/crawlingMyOwnBlog", "Date": "2018-01-10T23:08:54Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<cn.wow.common.domain.Task>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((task.getType()) != (TaskTypeEnum.GS.getState())) { cell7.setCellValue(task.getInfo().getParts().getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/545/buggy-version/cqc-support.src.main.java.cn.wow.support.web.QueryController.java", "BodyUseAPI": ["task.getInfo().getParts().getName()", "org.apache.poi.ss.usermodel.Cell.setCellValue(task.getInfo().getParts().getName())", "task.getInfo().getParts()", "cn.wow.common.domain.Task.getInfo()"], "Fixed commit": "a450a3d8f1b92d99945be6508da9e079ef81715a", "Url": "https://api.github.com/repos/zjz0924/cqc-car", "Date": "2018-01-04T15:12:24Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<cn.wow.common.domain.Task>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((task.getInfo().getParts().getOrg()) != null) { cell8.setCellValue(task.getInfo().getParts().getOrg().getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/545/buggy-version/cqc-support.src.main.java.cn.wow.support.web.QueryController.java", "BodyUseAPI": ["org.apache.poi.ss.usermodel.Cell.setCellValue(task.getInfo().getParts().getOrg().getName())", "cn.wow.common.domain.Task.getInfo()", "task.getInfo().getParts()", "task.getInfo().getParts().getOrg()", "task.getInfo().getParts().getOrg().getName()"], "Fixed commit": "a450a3d8f1b92d99945be6508da9e079ef81715a", "Url": "https://api.github.com/repos/zjz0924/cqc-car", "Date": "2018-01-04T15:12:24Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(code)) { map.put(\"code\", code); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/545/buggy-version/cqc-support.src.main.java.cn.wow.support.web.ApplyController.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.String)"], "Fixed commit": "a450a3d8f1b92d99945be6508da9e079ef81715a", "Url": "https://api.github.com/repos/zjz0924/cqc-car", "Date": "2018-01-04T15:12:24Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ModelCar.modelHash.contains(modelName)) { info.getSender().sendMessage(\"\u00a73[TomoriItemMythic] \u00a7c\u9519\u8bef: \u8be5\u6a21\u677f\u5df2\u7ecf\u88ab\u52a0\u8f7d\u4e86\u60f9~\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6966/buggy-version/src.main.java.com.locydragon.tim.commands.sub.CommandModelLoad.java", "BodyUseAPI": [], "Fixed commit": "972c5ab3a511464ec4fc8af1fbe5f53506279a9f", "Url": "https://api.github.com/repos/LocyDragon/TomoriItemMythic", "Date": "2018-10-26T11:27:24Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (new java.io.File(((inWhich.getPath()) + \"//Script\")).exists()) { for (java.io.File fileScript : new java.io.File(((inWhich.getPath()) + \"//Script\")).listFiles()) { if (fileScript.getName().endsWith(\".tos\")) { com.locydragon.tim.model.script.ScriptLoader.load(fileScript); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6966/buggy-version/src.main.java.com.locydragon.tim.commands.sub.CommandModelLoad.java", "BodyUseAPI": ["java.io.File.getPath()", "java.io.File.listFiles()"], "Fixed commit": "972c5ab3a511464ec4fc8af1fbe5f53506279a9f", "Url": "https://api.github.com/repos/LocyDragon/TomoriItemMythic", "Date": "2018-10-26T11:27:24Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(fromCache.contains(p))) fromCache.add(new com.biomatters.plugins.biocode.labbench.fims.biocode.Project(id, code, title, xml));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/1711/buggy-version/src.com.biomatters.plugins.biocode.labbench.fims.biocode.BiocodeFIMSConnectionOptions.java", "BodyUseAPI": ["java.util.List<com.biomatters.plugins.biocode.labbench.fims.biocode.Project>.add(com.biomatters.plugins.biocode.labbench.fims.biocode.Project)"], "Fixed commit": "bd200d53fd297f6077296664ccb578f3054ba488", "Url": "https://api.github.com/repos/biocodellc/biocode-lims", "Date": "2018-10-12T20:02:06Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cbxBudgetType.getSelectionModel().getSelectedItem()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (budgetType == null) { throw new com.homeacc.exception.ValidationException(\"all fields exept description must be filled\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8620/buggy-version/src.main.java.com.homeacc.controler.BudgetRecordsControler.java", "BodyUseAPI": [], "Fixed commit": "d841c6f1c90aadadc3e69041e702b76f743a7558", "Url": "https://api.github.com/repos/alex8586/homeacc", "Date": "2018-04-15T19:21:32Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wdcloud.utils.excel.ImportExcel.getCellValue(com.wdcloud.utils.excel.Row,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (val instanceof java.lang.Number) { val = new java.math.BigDecimal(val.toString()).toString(); }else { java.lang.String s = java.lang.String.valueOf(val.toString()); if (org.apache.commons.lang3.StringUtils.endsWith(s, \".0\")) { val = org.apache.commons.lang3.StringUtils.substringBefore(s, \".0\"); }else { val = java.lang.String.valueOf(val.toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3454/buggy-version/common-utils.src.main.java.com.wdcloud.utils.excel.ImportExcel.java", "BodyUseAPI": ["java.math.BigDecimal.toString()", "java.lang.Object.toString()", "java.lang.String.valueOf(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "c79b5a0616cf2cd178e8ba27efede106838eef88", "Url": "https://api.github.com/repos/andychen314/wd_commons", "Date": "2018-09-21T08:56:02Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6392/buggy-version/eva.src.main.java.com.exa.expression.Type.java", "BodyUseAPI": [], "Fixed commit": "6cb3d8f214ee5fcd425b8a06c138d9d4ae0d5fbe", "Url": "https://api.github.com/repos/ryvale/eva", "Date": "2018-03-09T14:03:12Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((response.isSuccessful()) && ((response.body()) != null)) { callback.onQuoteLoaded(mapQuote(response.body())); }else { callback.onDataNotAvailable(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6278/buggy-version/app.src.main.java.com.sofps.inspirationalquotes.data.source.remote.QuotesRemoteDataSource.java", "BodyUseAPI": ["com.sofps.inspirationalquotes.data.source.remote.GetQuoteCallback.onQuoteLoaded(com.sofps.inspirationalquotes.data.Quote)", "com.sofps.inspirationalquotes.data.source.remote.QuotesRemoteDataSource.1.mapQuote(response.body())", "retrofit2.Response<com.sofps.inspirationalquotes.data.QuoteApi>.body()"], "Fixed commit": "89404936d6e6e76bdc0f4c05d8346123c29162ed", "Url": "https://api.github.com/repos/sofps/inspirational-quotes", "Date": "2018-10-03T11:38:46Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opentosca.toscana.plugins.kubernetes.docker.util.DockerRegistryCredentials.getUsername()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(username.isEmpty())) { username += \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5980/buggy-version/server.src.main.java.org.opentosca.toscana.plugins.kubernetes.docker.image.PushingImageBuilder.java", "BodyUseAPI": [], "Fixed commit": "6f011dd055963a93f309e79e32fbb6c3ecafc920", "Url": "https://api.github.com/repos/StuPro-TOSCAna/TOSCAna", "Date": "2018-03-04T18:16:24Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opentosca.toscana.plugins.kubernetes.docker.util.DockerRegistryCredentials.getRegistryURL()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(registryUrl.endsWith(\"/\"))) { registryUrl = registryUrl + \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5980/buggy-version/server.src.main.java.org.opentosca.toscana.plugins.kubernetes.docker.image.PushingImageBuilder.java", "BodyUseAPI": [], "Fixed commit": "6f011dd055963a93f309e79e32fbb6c3ecafc920", "Url": "https://api.github.com/repos/StuPro-TOSCAna/TOSCAna", "Date": "2018-03-04T18:16:24Z"},
{"Line": "=>554", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sm.isDeclared()) { final soot.SootClass declaringClass = sm.getDeclaringClass(); if (declaringClass.isInScene()) declaringClass.removeMethod(sm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2/buggy-version/soot-infoflow-android.src.soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator.java", "BodyUseAPI": ["soot.SootClass.removeMethod(soot.SootMethod)", "soot.SootMethod.getDeclaringClass()"], "Fixed commit": "3eae215a271a44edff3fa8995fc115bece2a029f", "Url": "https://api.github.com/repos/MarcMil/FlowDroid", "Date": "2018-05-15T08:08:58Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getResourceCenter()) instanceof org.openflexo.foundation.FlexoProject) { editor = getServiceManager().getProjectLoaderService().getEditorForProject(((org.openflexo.foundation.FlexoProject<?>) (getResourceCenter()))); }else if ((getResourceCenter().getDelegatingProjectResource()) != null) { editor = getServiceManager().getProjectLoaderService().getEditorForProject(getResourceCenter().getDelegatingProjectResource().getFlexoProject()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4872/buggy-version/excelconnector.src.main.java.org.openflexo.technologyadapter.excel.semantics.rm.SEVirtualModelInstanceResource.java", "BodyUseAPI": [], "Fixed commit": "741679ce8540ed5634a8ede998eebbe989066b3e", "Url": "https://api.github.com/repos/openflexo-team/openflexo-technology-adapters", "Date": "2018-01-01T17:41:41Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(frog.isFinished())) map.reloadBonus();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2399/buggy-version/src.Game.java", "BodyUseAPI": [], "Fixed commit": "9b5111364fa946124dbb24d6d17ef642cd67e8fc", "Url": "https://api.github.com/repos/bingenGalartza/CrossTheRoad", "Date": "2018-10-14T22:41:21Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hints) < 8) throw new hanabAI.IllegalActionException(\"Discards cannot be made when there are 8 hint tokens\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6065/buggy-version/src.hanabAI.State.java", "BodyUseAPI": [], "Fixed commit": "53527e74b2680ad9c1e3d5c203cce9435618ab41", "Url": "https://api.github.com/repos/andrewdavis92/hanabAI", "Date": "2018-09-29T09:47:22Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getType()) == (RenderGameOverlayEvent.ElementType.ALL)) { final net.minecraft.entity.player.EntityPlayer player = net.korti.bettermuffling.client.gui.MufflingAreaIndicator.mc.player; if ((player.getEntityData().getCompoundTag(\"muffling_indicator\").getBoolean(\"render\")) && (ModConfig.mufflerIndicator.enable)) { net.korti.bettermuffling.client.gui.MufflingAreaIndicator.indicatorGui.drawIndicator(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/1139/buggy-version/src.main.java.net.korti.bettermuffling.client.gui.MufflingAreaIndicator.java", "BodyUseAPI": [], "Fixed commit": "ee62ab10accaa5371e0f8dddb64e209702efbe07", "Url": "https://api.github.com/repos/korti11/bettermuffling", "Date": "2018-02-09T19:51:59Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hb.pocket.serverv2.commandline.CommandLine.string2Array(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((mainCommandMap.get(args[0].toLowerCase())) != null) && ((mainCommandMap.get(args[0].toLowerCase()).size()) != 0)) { com.hb.pocket.serverv2.commandline.command.BroadMessageCommand broadMessageCommand = new com.hb.pocket.serverv2.commandline.command.BroadMessageCommand(\"BroadMessage\", mainCommandMap.get(args[0].toLowerCase()), commandLine, \"-:M\", server); broadMessageCommand.excute(); }else { com.hb.utils.log.MyLog.i(com.hb.pocket.serverv2.commandline.CommandLine.TAG, \"Not support this command!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2685/buggy-version/src.com.hb.pocket.serverv2.commandline.CommandLine.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.List<com.hb.pocket.parser.LongOpt>>.get(java.lang.String)", "java.lang.String.toLowerCase()"], "Fixed commit": "f8a936b6584bccc765b404bdd28bbf96fe67df5d", "Url": "https://api.github.com/repos/hbinboy/PocketSocketPipeline", "Date": "2018-10-08T01:55:21Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(directory.exists())) { directory.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3647/buggy-version/src.main.java.com.gate.barcode.check.gatepass.controller.TicketController.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "371a065ce28df7352c11f18d2cd42d61121a87e2", "Url": "https://api.github.com/repos/munaldhakal/gate-barcode-check", "Date": "2018-04-17T10:36:50Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.imperiumlabs.geofirestore.core.GeoHashQuery, org.imperiumlabs.geofirestore.GeoQuery.GeoHashQueryListener>.get(firestoreQueries.get(query))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (handle != null) { handle.childAddedListener.remove(); handle.childRemovedListener.remove(); handle.childChangedListener.remove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4943/buggy-version/GeoFirestoreExample.geofirestore.src.main.java.org.imperiumlabs.geofirestore.GeoQuery.java", "BodyUseAPI": ["com.google.firebase.firestore.ListenerRegistration.remove()", "com.google.firebase.firestore.ListenerRegistration.remove()", "com.google.firebase.firestore.ListenerRegistration.remove()"], "Fixed commit": "5fbeb3bacdc55425bc25a368c6b49ff8eada6921", "Url": "https://api.github.com/repos/cammace/GeoFirestore-Android", "Date": "2018-08-28T19:49:13Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(curDeal.getPrice().equals(0.0))) { newDealList.add(curDeal); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3823/buggy-version/app.src.main.java.com.course_project.profitmoneydiagram.model.OutputDataSet.java", "BodyUseAPI": ["java.util.ArrayList<com.course_project.profitmoneydiagram.model.Deal>.add(com.course_project.profitmoneydiagram.model.Deal)"], "Fixed commit": "43707f54fae2f4ec23f305b21602ea33f058c8ac", "Url": "https://api.github.com/repos/EmilProkopov/ProfitMoneyDiagram", "Date": "2018-06-06T19:33:28Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(curDeal.getPrice().equals(0.0))) { newDealList.add(curDeal); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3823/buggy-version/app.src.main.java.com.course_project.profitmoneydiagram.model.OutputDataSet.java", "BodyUseAPI": ["java.util.ArrayList<com.course_project.profitmoneydiagram.model.Deal>.add(com.course_project.profitmoneydiagram.model.Deal)"], "Fixed commit": "43707f54fae2f4ec23f305b21602ea33f058c8ac", "Url": "https://api.github.com/repos/EmilProkopov/ProfitMoneyDiagram", "Date": "2018-06-06T19:33:28Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentSkipListMap<java.lang.String, java.util.concurrent.ConcurrentSkipListMap<java.lang.String, java.lang.String>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (sensorValue == null) { sensorValue = new java.util.concurrent.ConcurrentSkipListMap<java.lang.String, java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/260/buggy-version/src.main.java.pivot_table_sort_of.pivot_table.PivotDataApp.java", "BodyUseAPI": [], "Fixed commit": "9b515b49032b38ad7521362d4d3270d0e2a1d94d", "Url": "https://api.github.com/repos/chrisxkeith/pivot-table-sort-of", "Date": "2018-04-01T13:32:27Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["okhttp3.Response.body()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == responseBody) { iNetCallback.onFailed(Constant.NET_BODY_NULL, \"responseBody is null!\"); chinapex.com.wallet.utils.CpLog.e(chinapex.com.wallet.net.OkHttpClientManager.TAG, \"onResponse() -> responseBody is null\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8623/buggy-version/app.src.main.java.chinapex.com.wallet.net.OkHttpClientManager.java", "BodyUseAPI": [], "Fixed commit": "23c85883a07fc916c8da269174230aebc43557a1", "Url": "https://api.github.com/repos/SteelCabbage/ApexWallet", "Date": "2018-05-30T03:02:14Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cases.get(i).getStatus()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (status != null) { switch (status) { case \"incoming\" : incomingCases.add(cases.get(i)); break; case \"active\" : activeCases.add(cases.get(i)); break; case \"completed\" : completedCases.add(cases.get(i)); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2430/buggy-version/app.src.main.java.com.simi.codestrokealert.activity.clinicians.HomeScreenActivity.java", "BodyUseAPI": [], "Fixed commit": "b8729642852b719d7d3da6053152b1491869b845", "Url": "https://api.github.com/repos/code-stroke/android-app", "Date": "2018-08-28T13:16:05Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (preference instanceof android.preference.ListPreference) { android.preference.ListPreference listPreference = ((android.preference.ListPreference) (preference)); int prefIndex = listPreference.findIndexOfValue(stringValue); if (prefIndex >= 0) { java.lang.CharSequence[] labels = listPreference.getEntries(); preference.setSummary(labels[prefIndex]); }else { preference.setSummary(stringValue); } return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7403/buggy-version/app.src.main.java.com.example.dell.newsed.SettingsActivity.java", "BodyUseAPI": ["android.preference.Preference.setSummary(java.lang.String)", "android.preference.Preference.setSummary(java.lang.CharSequence)"], "Fixed commit": "9025d55d40f3ecacdad0cc75c4adb6bd8f66a77a", "Url": "https://api.github.com/repos/FLYINGKRIPTO/NewsedTwo", "Date": "2018-10-08T01:45:01Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (len < (java.lang.Integer.parseInt(splitString[5]))) { Lines.get(size).addline(java.lang.Integer.parseInt(splitString[(i + 3)]), splitString[(i + 1)], splitString[i], java.lang.Integer.parseInt(splitString[(i + 2)])); len++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3982/buggy-version/src.CombinedFileReader.java", "BodyUseAPI": ["Lines.get(size).addline(int,java.lang.String,java.lang.String,int)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "99229a52b548d693d69cdc3b6768387e736193e7", "Url": "https://api.github.com/repos/RachelMustakis/WigleWifiProject", "Date": "2018-01-04T17:48:35Z"},
{"Line": "=>876", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerInteractEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((p.playerCommon.wandCheck(player, EquipmentSlot.HAND)) < 2) { org.bukkit.Location location = player.getLocation(); location.setY(((location.getY()) + 1.6)); player.getWorld().playEffect(location, Effect.ENDER_SIGNAL, 0); player.getWorld().playSound(location, Sound.ENTITY_PLAYER_LEVELUP, 1, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9042/buggy-version/Ollivanders.src.net.pottercraft.Ollivanders2.OllivandersListener.java", "BodyUseAPI": ["org.bukkit.entity.Player.getWorld()", "org.bukkit.entity.Player.getLocation()", "org.bukkit.entity.Player.getWorld()", "player.getWorld().playSound(org.bukkit.Location,Sound.ENTITY_PLAYER_LEVELUP,int,int)", "player.getWorld().playEffect(org.bukkit.Location,Effect.ENDER_SIGNAL,int)"], "Fixed commit": "92332c81883379c66ea3f5f939dfdd05244d9bad", "Url": "https://api.github.com/repos/Azami7/Ollivanders2", "Date": "2018-10-17T04:34:27Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (excludeHeaderRow) { csvRowList.remove(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/75/buggy-version/src.main.java.com.orasi.utils.dataProviders.CSVDataProvider.java", "BodyUseAPI": [], "Fixed commit": "929153ea2da88aa2eb2f1e346205992521d15670", "Url": "https://api.github.com/repos/Orasi/Chameleon", "Date": "2018-01-20T20:28:45Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((notch) == 0) { if ((leftRotor) != null) { leftRotor.rotateRotorOneRound(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3996/buggy-version/EnigmaMachine.src.Parts.Rotor.java", "BodyUseAPI": [], "Fixed commit": "8ada1840bf41a679c2ea806b916ddbbaddb18680", "Url": "https://api.github.com/repos/royashcenazi/Enigma-Machine-Web-Server", "Date": "2018-05-15T11:19:20Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((startAutoWalkPoint.distanceTo(location)) >= (com.maxml.timer.util.Constants.MIN_DISTANCE_START_WALK_ACTION)) { android.util.Log.d(Constants.LOG, \"Autostart WalkAction: is start WalkAction\"); actionController.autoWalkAction(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7488/buggy-version/app.src.main.java.com.maxml.timer.controllers.ReceiverService.java", "BodyUseAPI": [], "Fixed commit": "631d3098348b2fc077df408b03300464f33d3c83", "Url": "https://api.github.com/repos/maxml/AutoTimeHelper", "Date": "2018-02-01T10:14:30Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gearvrf.GVRCameraRig.getOwnerObject()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (null != head) { mSceneRoot.addChildObject(head); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/297/buggy-version/GVRf.Framework.framework.src.main.java.org.gearvrf.GVRScene.java", "BodyUseAPI": ["org.gearvrf.GVRSceneObject.addChildObject(org.gearvrf.GVRSceneObject)"], "Fixed commit": "63b62ca817ba9e2c843da96edbe7c99fa9036173", "Url": "https://api.github.com/repos/liaxim/GearVRf", "Date": "2018-02-13T22:58:23Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((list.size()) == 0) { mTextView.append(\"No scores yet to show\"); }else { for (int i = 0; i < (list.size()); i++) mTextView.append(((list.get(i)) + \"\\n\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3510/buggy-version/app.src.main.java.com.benjamincorben.android.topquiz.controller.LeaderActivity.java", "BodyUseAPI": ["android.widget.TextView.append(java.lang.String)", "java.util.LinkedList.get(int)", "java.util.LinkedList.size()"], "Fixed commit": "b274d4fe5e0f787baf8821850bf2d1cf1428fe13", "Url": "https://api.github.com/repos/benmhsc34/TopQuiz", "Date": "2018-09-05T09:27:24Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((list.size()) == 0) { mTextView.append(\"No scores yet to show\"); }else { for (int i = 0; i < (list.size()); i++) mTextView.append(((list.get(i)) + \"\\n\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3510/buggy-version/app.src.main.java.com.benjamincorben.android.topquiz.controller.LeaderActivity.java", "BodyUseAPI": ["java.util.LinkedList.size()", "android.widget.TextView.append(java.lang.String)", "java.util.LinkedList.get(int)"], "Fixed commit": "b274d4fe5e0f787baf8821850bf2d1cf1428fe13", "Url": "https://api.github.com/repos/benmhsc34/TopQuiz", "Date": "2018-09-05T09:27:24Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (scoresStringArray[0].equals(\"\")) { mTextView = findViewById(R.id.textViewName); mTextView.append(\"No scores yet to show\"); }else { for (java.lang.String aScoresStringArray : scoresStringArray) { int foo = java.lang.Integer.parseInt(aScoresStringArray); scoresArray.add(foo); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3510/buggy-version/app.src.main.java.com.benjamincorben.android.topquiz.controller.LeaderActivity.java", "BodyUseAPI": [], "Fixed commit": "b274d4fe5e0f787baf8821850bf2d1cf1428fe13", "Url": "https://api.github.com/repos/benmhsc34/TopQuiz", "Date": "2018-09-05T09:27:24Z"},
{"Line": "=>844", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((contextStore) == null) { setContextStore(new org.structr.common.ContextStore()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2061/buggy-version/structr-core.src.main.java.org.structr.common.SecurityContext.java", "BodyUseAPI": [], "Fixed commit": "cb23f5b76af513595a0d8ac8fd675f91732cf096", "Url": "https://api.github.com/repos/structr/structr", "Date": "2018-03-01T16:44:05Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(gamepad2.b)) && (!toggleon)) robot.glyphGrabRight.setPosition(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5611/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.teleOp.java", "BodyUseAPI": [], "Fixed commit": "af03b891d325ac8a93acb110f19b04e9d1389e4e", "Url": "https://api.github.com/repos/BambusaCHSR/Robot-Controller_17-18", "Date": "2018-01-30T07:04:33Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(gamepad2.x)) && (!toggleon)) robot.glyphGrabLeft.setPosition(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5611/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.teleOp.java", "BodyUseAPI": [], "Fixed commit": "af03b891d325ac8a93acb110f19b04e9d1389e4e", "Url": "https://api.github.com/repos/BambusaCHSR/Robot-Controller_17-18", "Date": "2018-01-30T07:04:33Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["posts.select().orderByDesc(posts.getColumn(\"datetime\")).collect(java.util.ArrayList<blogger.Main.Post>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (i < (results.size())) { writePost(results.get(i), writer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4652/buggy-version/src.blogger.pages.FrontPage.java", "BodyUseAPI": ["java.util.ArrayList<blogger.Main.Post>.get(int)", "blogger.pages.FrontPage.writePost(results.get(i),java.io.PrintWriter)"], "Fixed commit": "8dc2c7b8b34d6cc7052cf2257cadd481293799e9", "Url": "https://api.github.com/repos/DavePearce/Blogger", "Date": "2018-09-17T01:27:09Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pers.sdulxt.inspect.model.Constant.DEBUG) { log.info((((\"Login: \" + phoneNumber) + \"|\") + tokenString)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8913/buggy-version/src.main.java.pers.sdulxt.inspect.service.TokenService.java", "BodyUseAPI": [], "Fixed commit": "449f25c02dd0d6dd677445c8804fd247687ce2a5", "Url": "https://api.github.com/repos/Grisw/inspect", "Date": "2018-05-16T04:55:29Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.mountPoint) == null) && ((this.mountPointAsString) != null)) { this.mountPoint = new java.io.File(this.mountPointAsString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/412/buggy-version/src.main.java.org.smveloso.otof.model.LocalFileSystemAlbum.java", "BodyUseAPI": [], "Fixed commit": "b7b25eeea1b942ace74cd6f44b3159d1cd4c50b2", "Url": "https://api.github.com/repos/smveloso/otof-old", "Date": "2018-08-10T16:23:35Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (size <= 1) { pixelWriter.setColor(x, y, TRANSPARENT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2256/buggy-version/pixellent-app.src.main.java.tda367.pixellent.app.GraphicsContextWrapper.java", "BodyUseAPI": [], "Fixed commit": "7fa3529db0af22e807f5555e33c750e00dc95b9a", "Url": "https://api.github.com/repos/phiwar/TDA367", "Date": "2018-10-01T15:20:11Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.FrontServlet.isCourseCreatedWithRequiredParams(request)) { curso = new org.Curso(request.getParameter(\"titulo\"), request.getParameter(\"autor\"), request.getParameter(\"asignatura\"), request.getParameter(\"duracion\"), request.getParameter(\"video\")); cursos.add(curso); session.setAttribute(\"cursos\", cursos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8552/buggy-version/src.java.org.FrontServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Fixed commit": "2c820b701582c40e67181548cf921b53a6e1087a", "Url": "https://api.github.com/repos/YoneMoreno/ArquitecturaSoftwareFrontControllerPractica1", "Date": "2018-02-12T19:06:20Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.jeddict.repository.RepositoryPanel.getSuffix()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"Service\".equals(suffix)) { warningLabel.setText(org.openide.util.NbBundle.getMessage(io.github.jeddict.repository.RepositoryPanel.class, \"RepositoryPanel.reservedSuffix.message\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9144/buggy-version/jakarta-ee.src.main.java.io.github.jeddict.repository.RepositoryPanel.java", "BodyUseAPI": [], "Fixed commit": "7c0a45b708c80a7f678db0e7f771c4ddcc31d28f", "Url": "https://api.github.com/repos/jeddict/jeddict-extensions", "Date": "2018-09-14T17:59:25Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.jeddict.rest.controller.RESTPanel.getSuffix()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"Service\".equals(suffix)) { warningLabel.setText(getMessage(io.github.jeddict.rest.controller.RESTPanel.class, \"RESTPanel.reservedSuffix.message\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9144/buggy-version/rest.src.main.java.io.github.jeddict.rest.controller.RESTPanel.java", "BodyUseAPI": [], "Fixed commit": "7c0a45b708c80a7f678db0e7f771c4ddcc31d28f", "Url": "https://api.github.com/repos/jeddict/jeddict-extensions", "Date": "2018-09-14T17:59:25Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.hadoop.yarn.server.resourcemanager.scheduler.distributed.NodeQueueLoadMonitor.LOG.isDebugEnabled()) { org.apache.hadoop.yarn.server.resourcemanager.scheduler.distributed.NodeQueueLoadMonitor.LOG.info(((((((((((((((\"Updating ClusterNode [\" + (rmNode.getNodeID())) + \"] \") + \"with queue wait time [\") + estimatedQueueWaitTime) + \"] and \") + \"wait queue length [\") + waitQueueLength) + \"] and \") + \"allocated memory [ \") + allocatedMemory) + \" ] and \") + \"container memory [ \") + (containerUtilization.getPhysicalMemory())) + \" ]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7446/buggy-version/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-resourcemanager.src.main.java.org.apache.hadoop.yarn.server.resourcemanager.scheduler.distributed.NodeQueueLoadMonitor.java", "BodyUseAPI": ["org.apache.commons.logging.Log.info(((((((((((((((\"Updating ClusterNode [\" + (rmNode.getNodeID())) + \"] \") + \"with queue wait time [\") + estimatedQueueWaitTime) + \"] and \") + \"wait queue length [\") + waitQueueLength) + \"] and \") + \"allocated memory [ \") + allocatedMemory) + \" ] and \") + \"container memory [ \") + (containerUtilization.getPhysicalMemory())) + \" ]\"))"], "Fixed commit": "be31dad7ca95bd7c6aab76ffac20d9507f22491f", "Url": "https://api.github.com/repos/yncxcw/LS-Hadoop-3.0", "Date": "2018-03-19T23:18:59Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.nitroshare.android.ui.explorer.ExplorerActivity.getExternalFilesDirs(<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((files[i]) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/1669/buggy-version/app.src.main.java.net.nitroshare.android.ui.explorer.ExplorerActivity.java", "BodyUseAPI": [], "Fixed commit": "bb4c72d5448f5a5a9fb13a1964ef1e2b94c67139", "Url": "https://api.github.com/repos/nitroshare/nitroshare-android", "Date": "2018-02-01T21:49:45Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (listaMarcianos[i][j].vida) { rectanguloMarciano.setFrame(listaMarcianos[i][j].x, listaMarcianos[i][j].y, listaMarcianos[i][j].imagen.getWidth(null), listaMarcianos[i][j].imagen.getHeight(null)); if ((rectanguloDisparo.intersects(rectanguloMarciano)) == true) { listaMarcianos[i][j].vida = false; miDisparo.setY(2000); miDisparo.setDisparado(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4454/buggy-version/src.codigo.VentanaJuego.java", "BodyUseAPI": ["java.awt.geom.Rectangle2D.Double.setFrame(listaMarcianos[i][j].x,listaMarcianos[i][j].y,listaMarcianos[i][j].imagen.getWidth(null),listaMarcianos[i][j].imagen.getHeight(null))", "listaMarcianos[i][j].imagen.getWidth(<nulltype>)", "listaMarcianos[i][j].imagen.getHeight(<nulltype>)"], "Fixed commit": "c2ead4e2a70048baf12c06a789947f85f591ea69", "Url": "https://api.github.com/repos/camdlp/SpaceInvaders", "Date": "2018-02-28T16:17:12Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result) == \"\") { android.widget.Toast.makeText(this, \"Please, Type the second number!!\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9243/buggy-version/app.src.main.java.com.ahk.calculato.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "07aa850ba8a03f88716864268fea22861c87eeae", "Url": "https://api.github.com/repos/Abdelazeem777/Calculato", "Date": "2018-10-26T13:36:16Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nba.getFinalStates().isEmpty()) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/1373/buggy-version/src.main.java.roll.oracle.nba.sampler.TeacherNBASampler.java", "BodyUseAPI": [], "Fixed commit": "a8d1f3ebc4ddac330f96b37a50809cd7f1002360", "Url": "https://api.github.com/repos/ISCAS-PMC/roll-library", "Date": "2018-01-29T11:58:31Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((ex.getCause()) != null) && ((ex.getCause()) instanceof java.sql.SQLInvalidAuthorizationSpecException)) { throw new org.elasticsearch.cli.UserException(org.elasticsearch.cli.ExitCodes.NOPERM, (((\"Cannot establish a secure connection to the server \" + (con.connectionString())) + \" - \") + (ex.getCause().getMessage()))); }else { throw new org.elasticsearch.cli.UserException(org.elasticsearch.cli.ExitCodes.DATA_ERROR, (((\"Cannot communicate with the server \" + (con.connectionString())) + \". This version of CLI only works with Elasticsearch version \") + (Version.CURRENT.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4502/buggy-version/x-pack.plugin.sql.sql-cli.src.main.java.org.elasticsearch.xpack.sql.cli.Cli.java", "BodyUseAPI": ["ex.getCause().getMessage()", "org.elasticsearch.xpack.sql.client.ClientException.getCause()"], "Fixed commit": "f3b848a22fb59d4bdc7898f5661a3d944e06adb0", "Url": "https://api.github.com/repos/lcawl/elasticsearch", "Date": "2018-08-31T10:08:32Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((runningEntry) == timeEntry) { runningEntry = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9550/buggy-version/app.src.main.java.com.ti_zero.com.apptime.data.objects.AccountItem.java", "BodyUseAPI": [], "Fixed commit": "04441fe190f14b27765b5474ab0c6fa2af49522d", "Url": "https://api.github.com/repos/anstue/timeTracker", "Date": "2018-05-12T20:46:23Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.eclipse.jface.util.Util.isMac()) == false) { col.dispose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8935/buggy-version/com.eco.bio7.redit.src.com.eco.bio7.reditor.actions.color.ColorDialogName.java", "BodyUseAPI": [], "Fixed commit": "01bcbad93117f2651ef491afd5e5cd01b8219d3a", "Url": "https://api.github.com/repos/Bio7/EclipseREditorPlugin", "Date": "2018-02-11T11:54:07Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (place instanceof org.tanrabad.survey.repository.persistence.PlaceWithChange) { notSync.setVisibility((((org.tanrabad.survey.repository.persistence.PlaceWithChange) (place)).isNotSynced() ? android.view.View.VISIBLE : android.view.View.GONE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9446/buggy-version/app.src.main.java.org.tanrabad.survey.presenter.PlaceAdapter.java", "BodyUseAPI": [], "Fixed commit": "124b5054eb2117344bb5aa4a54b698d3fb5c9476", "Url": "https://api.github.com/repos/tanrabad/survey", "Date": "2018-03-05T09:39:33Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((voiceInBean.getContent().equals(\"\")) && ((voiceInBean.getContent()) != null)) { speechText = com.cortana.ai.util.JsonParser.parse(aiUiService.answerText(voiceInBean.getContent())); data.put(\"speechText\", speechText); data.put(\"code\", \"0\"); data.put(\"message\", \"\u5206\u6790\u6210\u529f\"); }else { data.put(\"code\", \"-1\"); data.put(\"message\", \"\u7f3a\u5c11\u5165\u53c2\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5322/buggy-version/Cortana.src.main.java.com.cortana.ai.controller.CortanaController.java", "BodyUseAPI": ["com.cortana.ai.util.JsonParser.parse(aiUiService.answerText(voiceInBean.getContent()))", "com.cortana.ai.bean.VoiceInBean.getContent()", "com.cortana.ai.service.AiUiService.answerText(voiceInBean.getContent())"], "Fixed commit": "72a71a00c28d19906134965c3d328df7505f2a13", "Url": "https://api.github.com/repos/XJ-GTD/GTD2", "Date": "2018-08-02T13:43:26Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mQuery) == null) { mQuery = mDatabase.collection(\"events\").whereEqualTo(\"eventid\", 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5665/buggy-version/app.src.main.java.neighbourhoodapp.tnap.com.tnap.EventsFragment.java", "BodyUseAPI": [], "Fixed commit": "096c83667ed0e2e02e9754cb76d38ccc0345c9ea", "Url": "https://api.github.com/repos/lawryyxD/TNAP", "Date": "2018-07-22T14:49:39Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.patel.Main.numberOfSymptoms) != (-1)) { if ((com.patel.Main.possibleConditions.size()) == 0) { java.lang.System.out.println(\"There Are No Possible Conditions\"); }else if ((com.patel.Main.possibleConditions.size()) == 1) { java.lang.System.out.println(\"There Is One Possible Condition\"); }else { java.lang.System.out.println(((\"There Are \" + (com.patel.Main.possibleConditions.size())) + \" Possible Conditions\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3550/buggy-version/src.com.patel.Main.java", "BodyUseAPI": [], "Fixed commit": "a72cb100c3630467018d7e0a5622f5a18b311426", "Url": "https://api.github.com/repos/PatelANikhil/SymptomToDrug", "Date": "2018-07-12T14:08:37Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showOptionDialog(<nulltype>,java.lang.String,java.lang.String,int,int,<nulltype>,java.lang.Object[],java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (n == (javax.swing.JOptionPane.NO_OPTION)) java.util.Locale.setDefault(java.util.Locale.GERMAN); else java.lang.System.exit(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/1189/buggy-version/src.main.java.de.fhdo.swt2.bibsoft.UI.swingImpl.swingDialogs.LanguageSwingDialog.java", "BodyUseAPI": [], "Fixed commit": "f050347c2a9160556a8936ce7ebd030d0c22b4ef", "Url": "https://api.github.com/repos/devWhyqueue/swt2-bibsoft", "Date": "2018-05-05T21:51:02Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value instanceof java.lang.Double) { valueBuilder.setDoubleValue(((java.lang.Double) (value))); }else if (value instanceof java.lang.Boolean) { valueBuilder.setBoolValue(((java.lang.Boolean) (value))); }else { valueBuilder.setStringValue(value.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/737/buggy-version/src.main.java.org.geoserver.wms.mvt.VectorTileEncoder.java", "BodyUseAPI": ["VectorTile.Tile.Value.Builder.setStringValue(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "d03881d890c6472ee4e2e4a7f501da51c639bfba", "Url": "https://api.github.com/repos/emplexed/gs-mvt", "Date": "2018-01-09T11:31:51Z"},
{"Line": "=>4396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!r) r = consumeToken(b, org.ballerinalang.plugins.idea.parser.LEFT_PARENTHESIS);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9892/buggy-version/src.main.gen.org.ballerinalang.plugins.idea.parser.BallerinaParser.java", "BodyUseAPI": [], "Fixed commit": "c988a7ba27f49ed6746d46437e8fef4ed66413ee", "Url": "https://api.github.com/repos/Shan1024/ballerina-idea-plugin", "Date": "2018-03-31T09:34:53Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (SettingsManager.config.getBoolean(\"enableVanillaEnchant\")) { pm.registerEvents(new org.pixeltime.enchantmentsenhance.VanillaEnchantHandler(), this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3403/buggy-version/src.main.java.org.pixeltime.enchantmentsenhance.Main.java", "BodyUseAPI": [], "Fixed commit": "ad00137fdd247a0f8ee7de7135e53f0ccbf8ca4e", "Url": "https://api.github.com/repos/25/EnchantmentsEnhance", "Date": "2018-05-24T19:09:13Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (SettingsManager.config.getBoolean(\"enableStackMob\")) { pm.registerEvents(new org.pixeltime.enchantmentsenhance.StackMobHandler(), this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3403/buggy-version/src.main.java.org.pixeltime.enchantmentsenhance.Main.java", "BodyUseAPI": [], "Fixed commit": "ad00137fdd247a0f8ee7de7135e53f0ccbf8ca4e", "Url": "https://api.github.com/repos/25/EnchantmentsEnhance", "Date": "2018-05-24T19:09:13Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.event.KeyEvent.getKeyCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (key == (java.awt.event.KeyEvent.VK_ALT)) swing.KeyInput.pressedALT = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6153/buggy-version/src.swing.KeyInput.java", "BodyUseAPI": [], "Fixed commit": "e8fc3dfee5a651552b5fce360e583f4935af117c", "Url": "https://api.github.com/repos/First529/Deadshot", "Date": "2018-05-07T07:26:40Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (item != null) { boolean isTestCase = testContainerService.isTestContainerItem(item); if (isTestCase) { item = ((org.talend.core.model.properties.ProcessItem) (testContainerService.getParentJobItem(item))); } testContainers = testContainerService.getAllTestContainers(item); if ((testContainers != null) && (!(testContainers.isEmpty()))) { hasTestCase = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2331/buggy-version/main.plugins.org.talend.designer.maven.src.main.java.org.talend.designer.maven.tools.ProcessorDependenciesManager.java", "BodyUseAPI": ["org.talend.core.ui.ITestContainerProviderService.isTestContainerItem(org.talend.core.model.properties.ProcessItem)", "org.talend.core.ui.ITestContainerProviderService.getParentJobItem(org.talend.core.model.properties.ProcessItem)"], "Fixed commit": "77f4bbd554e0d7e01a72f08e48961139ecec4e87", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2018-01-02T07:10:09Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.binance.framework.Framework.storage) != null) { com.binance.framework.Framework.openOrders = com.binance.framework.Framework.storage.getOpenOrders(); }else { com.binance.framework.Framework.openOrders = new java.util.HashSet(); com.binance.framework.Framework.logger.warning(\"No storage method found... Please refer to the documentation.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/1486/buggy-version/src.com.binance.framework.Framework.java", "BodyUseAPI": [], "Fixed commit": "3a0b97b062c940a4268fae37d0f9769cd94df9a5", "Url": "https://api.github.com/repos/andrewyunt/binance-framework-java", "Date": "2018-02-13T18:15:55Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentLocation) != null) { android.util.Log.d(\"locationManager\", (((\"Got position: \" + (position.getX())) + \", \") + (position.getY()))); this.position = position; android.content.Intent broadcast = new android.content.Intent(MainActivity.ServiceCallbackReceiver.BROADCAST_BeaconService); broadcast.putExtra(MainActivity.ServiceCallbackReceiver.BROADCAST_PARAM, (((((((((position.getX()) + \",\") + (position.getY())) + \",\") + (currentLocation.getStartPointX())) + \",\") + (currentLocation.getStartPointY())) + \",\") + (location.getName()))); sendBroadcast(broadcast); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6214/buggy-version/app.src.main.java.com.wienerlinienproject.bac.bnavigator.Service.BeaconService.java", "BodyUseAPI": [], "Fixed commit": "a07f53c935615b6cb8fbddac75f7730e9baab872", "Url": "https://api.github.com/repos/Fenetik/bNavigator", "Date": "2018-02-03T15:58:35Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.shangdong.hotel.net.NetCenter.getPortalDataOnThread()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (result != null) { if ((((((newPortalBeanData != null) && (oldPortalBeanData != null)) && ((newPortalBeanData.portal_id) == (oldPortalBeanData.portal_id))) && ((newPortalBeanData.template_id) == (oldPortalBeanData.template_id))) && ((newPortalBeanData.last_modify_time) != null)) && (newPortalBeanData.last_modify_time.equals(oldPortalBeanData.last_modify_time))) { android.util.Log.d(com.shangdong.hotel.SplashActivity.TAG, \"json data is the lasted data!\"); }else { com.shangdong.hotel.utils.DataUtils.clearResources(this); com.shangdong.hotel.utils.DataUtils.saveJsonData(this, result); oldPortalBeanData = newPortalBeanData; android.util.Log.d(com.shangdong.hotel.SplashActivity.TAG, \"json data is not the lasted data!\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9322/buggy-version/hotel.src.main.java.com.shangdong.hotel.SplashActivity.java", "BodyUseAPI": ["com.shangdong.hotel.utils.DataUtils.saveJsonData(com.shangdong.hotel.SplashActivity,java.lang.String)"], "Fixed commit": "2ca6ca544f695965547552a522eb95b852b7a114", "Url": "https://api.github.com/repos/WinsonZhou/hotel", "Date": "2018-07-30T04:01:19Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.esbjon.campaign.Campaigns.containsAtLeast(validatedMaps, 2, Maps.THE_CROSSING, Maps.LAKE_VIEW, Maps.FAIR_FIELDS)) com.esbjon.campaign.Campaigns.addNewMaps(out, validatedMaps, Maps.RED_RIDGES, Maps.CAPE_OF_SEALS, Maps.MOUNTAIN_LAKE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4854/buggy-version/core.src.com.esbjon.campaign.Campaigns.java", "BodyUseAPI": ["com.esbjon.campaign.Campaigns.addNewMaps(com.badlogic.gdx.utils.Array<com.esbjon.Resc.Map>,com.badlogic.gdx.utils.Array<com.esbjon.Resc.Map>,Maps.RED_RIDGES,Maps.CAPE_OF_SEALS,Maps.MOUNTAIN_LAKE)"], "Fixed commit": "618af92e4bd31364055c10f65fdfa134cad6867b", "Url": "https://api.github.com/repos/k-o-r-t-o/gdxDune", "Date": "2018-07-19T05:35:54Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (leftpart <= 0) leftpart = 0; else if (((leftpart + twidth) + 8) >= (MapResources.LOCALMAP.getWidth())) leftpart = ((MapResources.LOCALMAP.getWidth()) - twidth) - 8;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4699/buggy-version/PMDMMOc.src.com.darkxell.client.state.menu.freezone.FriendAreaSelectionMapState.java", "BodyUseAPI": [], "Fixed commit": "414780ae14d9034d3941711ae0e7f1e61c2547c8", "Url": "https://api.github.com/repos/Darkxell/PMDMMO", "Date": "2018-07-14T12:33:26Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.lang.Integer>.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (sockets.containsKey(memberId)) { java.net.DatagramPacket packet = new java.net.DatagramPacket(buffer, buffer.length, sockets.get(memberId).inetAddress, server.Server.CLIENT_UDP_PORT); java.lang.System.out.println(socket); java.lang.System.out.println(new java.lang.String(packet.getData(), 0, packet.getLength())); try { socket.send(packet); } catch (java.io.IOException e) { e.printStackTrace(); java.lang.System.err.println(\"Unable to init socket\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6731/buggy-version/server.Server.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, server.Server.Session>.get(int)"], "Fixed commit": "a46eb72af5399894ebacc09c00476d981d97469a", "Url": "https://api.github.com/repos/AndreZWei/TravellingEagles", "Date": "2018-05-01T00:51:47Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((choices.size()) > 0) { int rand = ((int) ((java.lang.Math.random()) * (choices.size()))); java.lang.String choice = choices.get(rand); output.setText(choice); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5756/buggy-version/app.src.main.java.com.example.ryanp.randomchoicegenerator.Main2Activity.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.size()", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "956721f96e131f6be644cdc80f8e9af81c77b728", "Url": "https://api.github.com/repos/ryan-pfeifer1111/Random-Choice-Generator-App", "Date": "2018-05-23T20:10:24Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.h2020.symbiote.ssp.resources.SspResource.getResource()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((dd.getLocatedAt()) == null) dd.setLocatedAt(getSSPLocation());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6332/buggy-version/src.main.java.eu.h2020.symbiote.ssp.CoreRegister.CoreRegistry.java", "BodyUseAPI": ["eu.h2020.symbiote.model.cim.Device.setLocatedAt(eu.h2020.symbiote.model.cim.Location)"], "Fixed commit": "a416dd6778616fa1fdf097c7545cece50c2f3730", "Url": "https://api.github.com/repos/symbiote-h2020/SymbioteSmartSpace", "Date": "2018-07-31T10:55:36Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["JCommander.Builder.build()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (jCommander.getParsedCommand().equals(\"help\")) { jCommander.usage(); return new client.CliParser.ParseResult(null, true, false); }else { for (client.CliParser.ParserCommand command : commands) { if (command.name().equals(jCommander.getParsedCommand())) { return new client.CliParser.ParseResult(command.buildRequest(), false, false); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/5634/buggy-version/src.main.java.client.CliParser.java", "BodyUseAPI": ["com.beust.jcommander.JCommander.getParsedCommand()", "com.beust.jcommander.JCommander.usage()", "java.lang.String.equals(jCommander.getParsedCommand())"], "Fixed commit": "3715c88ec3ea215df8e09456cfc43daf5ab99c45", "Url": "https://api.github.com/repos/ZhNV2/trading-system", "Date": "2018-06-06T08:20:20Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.aeon.aeondaemon.app.MainActivity.initDone)) copyBinaryFile();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7619/buggy-version/app.src.main.java.org.aeon.aeondaemon.app.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c5477525a045c9659b05c83de1528df15eeefe4f", "Url": "https://api.github.com/repos/enerc/Aeon-daemon", "Date": "2018-05-28T14:18:25Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Controllers.DBController.getUser(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (user instanceof entityClasses.Student) { return univDBlib.user_deleteUser(username); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8085/buggy-version/Controllers.DBController.java", "BodyUseAPI": [], "Fixed commit": "23974c54374fa0cd7dc22e4c3f99a66aa9c22e7b", "Url": "https://api.github.com/repos/jtholen001/CMC", "Date": "2018-03-29T00:57:23Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (lastLoc != null) { android.content.Intent i = new android.content.Intent(\"location_update\"); i.putExtra(\"longitude\", lastLoc.getLongitude()); i.putExtra(\"latitude\", lastLoc.getLatitude()); sendBroadcast(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9070/buggy-version/app.src.main.java.ss18.mc.positime.services.LocationService.java", "BodyUseAPI": ["android.location.Location.getLatitude()", "android.location.Location.getLongitude()", "android.content.Intent.putExtra(java.lang.String,lastLoc.getLongitude())", "android.content.Intent.putExtra(java.lang.String,lastLoc.getLatitude())"], "Fixed commit": "f6dc06d35c68f33f45dd31a8e8317d2cce64cfed", "Url": "https://api.github.com/repos/mx0c/Mobile-Computing-SS18", "Date": "2018-07-04T06:33:50Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!((beginIndex < 0) || (endIndex < 0))) { Title = link.substring((beginIndex + 1), endIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8186/buggy-version/app.src.main.java.com.example.cmq.musicapp.Song.java", "BodyUseAPI": [], "Fixed commit": "acd420e1556957f9875f624aee14eed8ee39a902", "Url": "https://api.github.com/repos/manhquynh-github/MusicApp", "Date": "2018-01-03T09:28:54Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(_lookupKey.isString())) throw new sparksoniq.exceptions.UnexpectedTypeException((\"Non numeric object lookup for \" + (_lookupKey.serialize())), getMetadata());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/1511/buggy-version/src.main.java.sparksoniq.jsoniq.runtime.iterator.postfix.ObjectLookupIterator.java", "BodyUseAPI": ["sparksoniq.jsoniq.item.Item.serialize()"], "Fixed commit": "aa0312d67be4c34699231217cd33257927137614", "Url": "https://api.github.com/repos/Sparksoniq/sparksoniq", "Date": "2018-08-27T11:09:58Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this._children.get(1).hasNext()) || (_lookupKey.isObject())) || (_lookupKey.isArray())) throw new sparksoniq.exceptions.InvalidSelectorException((\"Type error; There is not exactly one supplied parameter for an array selector: \" + (_lookupKey.serialize())), getMetadata());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/1511/buggy-version/src.main.java.sparksoniq.jsoniq.runtime.iterator.postfix.ObjectLookupIterator.java", "BodyUseAPI": ["sparksoniq.jsoniq.item.Item.serialize()"], "Fixed commit": "aa0312d67be4c34699231217cd33257927137614", "Url": "https://api.github.com/repos/Sparksoniq/sparksoniq", "Date": "2018-08-27T11:09:58Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((results.size()) == 0) { this._hasNext = false; }else { this._hasNext = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/1511/buggy-version/src.main.java.sparksoniq.jsoniq.runtime.iterator.postfix.ObjectLookupIterator.java", "BodyUseAPI": [], "Fixed commit": "aa0312d67be4c34699231217cd33257927137614", "Url": "https://api.github.com/repos/Sparksoniq/sparksoniq", "Date": "2018-08-27T11:09:58Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((lineSplit.length) < 2) { os.Loader.log.debug(\"{} >> no action taken\", line); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9827/buggy-version/src.main.java.os.Loader.java", "BodyUseAPI": [], "Fixed commit": "502fcc573d1561160cd02d918a1005eb4458b8f5", "Url": "https://api.github.com/repos/webbsmith/os-group-project", "Date": "2018-03-25T20:59:37Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (configFilename.endsWith(com.networknt.config.Config.FileConfigImpl.CONFIG_EXT_YML)) { com.networknt.config.Config.FileConfigImpl.logger.info(((\"Unable to load config \" + (org.owasp.encoder.Encode.forJava(configFilename))) + \". Looking for the same file name with extension yaml...\")); }else if (configFilename.endsWith(com.networknt.config.Config.FileConfigImpl.CONFIG_EXT_YAML)) { com.networknt.config.Config.FileConfigImpl.logger.info(((\"Unable to load config \" + (org.owasp.encoder.Encode.forJava(configFilename))) + \". Looking for the same file name with extension json...\")); }else { com.networknt.config.Config.FileConfigImpl.logger.error(((\"Unable to load config '\" + (org.owasp.encoder.Encode.forJava(configFilename.substring(0, configFilename.indexOf(\".\"))))) + \"' with extension yml, yaml and json from external config, application config and module config\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/627/buggy-version/config.src.main.java.com.networknt.config.Config.java", "BodyUseAPI": ["org.owasp.encoder.Encode.forJava(java.lang.String)", "java.lang.String.substring(int,int)", "org.slf4j.Logger.info(((\"Unable to load config \" + (org.owasp.encoder.Encode.forJava(configFilename))) + \". Looking for the same file name with extension json...\"))", "org.slf4j.Logger.info(((\"Unable to load config \" + (org.owasp.encoder.Encode.forJava(configFilename))) + \". Looking for the same file name with extension yaml...\"))", "java.lang.String.endsWith(java.lang.String)", "org.slf4j.Logger.error(((\"Unable to load config '\" + (org.owasp.encoder.Encode.forJava(configFilename.substring(0, configFilename.indexOf(\".\"))))) + \"' with extension yml, yaml and json from external config, application config and module config\"))", "org.owasp.encoder.Encode.forJava(java.lang.String)", "org.owasp.encoder.Encode.forJava(java.lang.String)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "8634609d5ec424c8f2e87bc69a6568db515b3da5", "Url": "https://api.github.com/repos/networknt/light-4j", "Date": "2018-09-22T01:11:01Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(column.computed().trim().isEmpty())) { columnName = column.value(); }else { columnName = ((joinRightTable.alias()) + \".\") + (column.value()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8536/buggy-version/src.main.java.com.pugwoo.dbhelper.utils.AnnotationSupportRowMapper.java", "BodyUseAPI": ["com.pugwoo.dbhelper.annotation.Column.value()", "com.pugwoo.dbhelper.annotation.Column.value()"], "Fixed commit": "2a5a2da0e9556227d768c5bbaf1aacb7ff2056b5", "Url": "https://api.github.com/repos/pugwoo/nimble-orm", "Date": "2018-03-01T12:49:38Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(column.computed().trim().isEmpty())) { columnName = column.value(); }else { columnName = ((joinLeftTable.alias()) + \".\") + (column.value()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8536/buggy-version/src.main.java.com.pugwoo.dbhelper.utils.AnnotationSupportRowMapper.java", "BodyUseAPI": ["com.pugwoo.dbhelper.annotation.Column.value()", "com.pugwoo.dbhelper.annotation.Column.value()"], "Fixed commit": "2a5a2da0e9556227d768c5bbaf1aacb7ff2056b5", "Url": "https://api.github.com/repos/pugwoo/nimble-orm", "Date": "2018-03-01T12:49:38Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JLabel.getMouseListeners()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((listeners.length) > 0) { website.removeMouseListener(listeners[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/1498/buggy-version/src.main.java.com.moskitol.view.View.java", "BodyUseAPI": ["javax.swing.JLabel.removeMouseListener(java.awt.event.MouseListener)"], "Fixed commit": "def41247489da6e533841e19888a473e74c4ebd7", "Url": "https://api.github.com/repos/Moskitol89/DotaCounterPicks", "Date": "2018-02-15T14:21:33Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.exist.xquery.functions.fn.LOG.isTraceEnabled()) { org.exist.xquery.functions.fn.FunExactlyOne.logger.trace(((\"fn:exactly-one called with a sequence containing \" + (result.getItemCount())) + \" items\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/1489/buggy-version/src.org.exist.xquery.functions.fn.FunExactlyOne.java", "BodyUseAPI": [], "Fixed commit": "2b5436a9899959f5aa614229a840232930fb37b6", "Url": "https://api.github.com/repos/joewiz/exist", "Date": "2018-07-12T13:33:25Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.exist.xquery.functions.fn.LOG.isTraceEnabled()) { org.exist.xquery.functions.fn.FunError.logger.trace(((errorDesc + \": \") + (errorCode.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/1489/buggy-version/src.org.exist.xquery.functions.fn.FunError.java", "BodyUseAPI": [], "Fixed commit": "2b5436a9899959f5aa614229a840232930fb37b6", "Url": "https://api.github.com/repos/joewiz/exist", "Date": "2018-07-12T13:33:25Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<com.example.lib.Platform>.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((plat instanceof com.example.lib.HPlatform) && (plat.checkBottomCollision(player))) { player.setVelocity(player.getXVelocity(), 5); }else player.setVelocity(player.getXVelocity(), (-5));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/1087/buggy-version/lib.src.main.java.com.example.lib.Game.java", "BodyUseAPI": ["com.example.lib.Player.setVelocity(player.getXVelocity(),int)", "com.example.lib.Player.getXVelocity()", "com.example.lib.Player.getXVelocity()", "com.example.lib.Player.setVelocity(player.getXVelocity(),int)"], "Fixed commit": "29853fc170200dd92b3c1e15f3f6b357f73cc208", "Url": "https://api.github.com/repos/annapoliswu/winterbeeeells", "Date": "2018-05-07T02:26:26Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (id != 0) { salaryPackage.setId(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7739/buggy-version/src.main.java.com.tv.tutorials.coolestuffvoorcheops.controllers.SalaryPackageController.java", "BodyUseAPI": ["com.tv.tutorials.coolestuffvoorcheops.models.SalaryPackage.setId(int)"], "Fixed commit": "d296b0e9dd5517aa14ab0e19d7d0fefb91a5c8bf", "Url": "https://api.github.com/repos/thomasverhulst/coolestuffvoorcheops", "Date": "2018-10-10T13:42:23Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (id != 0) { applicationProcess.setId(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7739/buggy-version/src.main.java.com.tv.tutorials.coolestuffvoorcheops.controllers.ApplicationProcessController.java", "BodyUseAPI": ["com.tv.tutorials.coolestuffvoorcheops.models.ApplicationProcess.setId(int)"], "Fixed commit": "d296b0e9dd5517aa14ab0e19d7d0fefb91a5c8bf", "Url": "https://api.github.com/repos/thomasverhulst/coolestuffvoorcheops", "Date": "2018-10-10T13:42:23Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((this.setting.isCloudApp()) || (appPath != null)) { setCapability(io.appium.java_client.remote.MobileCapabilityType.APP, appPath, this.capabilities, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4058/buggy-version/src.main.java.com.github.wasiqb.coteafs.appium.device.Device.java", "BodyUseAPI": ["com.github.wasiqb.coteafs.appium.device.Device<D, T>.setCapability(io.appium.java_client.remote.MobileCapabilityType.APP,java.lang.String,org.openqa.selenium.remote.DesiredCapabilities,boolean)"], "Fixed commit": "f37f5e6241451710400399504e26c29b9068eced", "Url": "https://api.github.com/repos/WasiqB/coteafs-appium", "Date": "2018-10-17T04:38:02Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, io.swagger.models.properties.Property>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((arrayProp.getItems()) != null) { if ((arrayProp.getItems()) instanceof io.swagger.models.properties.ObjectProperty) { io.swagger.models.properties.ObjectProperty objectProperty = ((io.swagger.models.properties.ObjectProperty) (arrayProp.getItems())); processProperties(objectProperty.getProperties(), file); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/718/buggy-version/modules.swagger-parser.src.main.java.io.swagger.parser.processors.ExternalRefProcessor.java", "BodyUseAPI": ["io.swagger.models.properties.ArrayProperty.getItems()", "io.swagger.models.properties.ArrayProperty.getItems()"], "Fixed commit": "f9bfb59eb7e84f2adb4c912abd000540713ef15c", "Url": "https://api.github.com/repos/swagger-api/swagger-parser", "Date": "2018-09-29T15:12:08Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (dbConn != null) { dbConn.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6715/buggy-version/flinkx-rdb.src.main.java.com.dtstack.flinkx.rdb.util.DBUtil.java", "BodyUseAPI": ["java.sql.Connection.close()"], "Fixed commit": "be4e489ccc975cac995122b6d5905af7563b34ca", "Url": "https://api.github.com/repos/DTStack/flinkx", "Date": "2018-06-12T11:47:01Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.carbondata.core.indexstore.blockletindex.SegmentIndexFileStore.getIndexFilesFromSegment(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((indexFiles.size()) == 0) { throw new java.lang.RuntimeException(\"Index file not present to read the carbondata file\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6811/buggy-version/hadoop.src.main.java.org.apache.carbondata.hadoop.api.CarbonFileInputFormat.java", "BodyUseAPI": [], "Fixed commit": "bc4f95d7170d8192789a09cc25d7f880bfe09f5e", "Url": "https://api.github.com/repos/sounakr/incubator-carbondata", "Date": "2018-03-05T11:07:10Z"},
{"Line": "=>576", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((rs.next()) == false) { throw new java.sql.SQLException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6746/buggy-version/CRUDlets.src.com.tna.data.Persistence.java", "BodyUseAPI": [], "Fixed commit": "32b977e572ff516aff5c04dd37f9cfb56d22b437", "Url": "https://api.github.com/repos/TareqK/CRUDlets", "Date": "2018-04-02T06:40:07Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((rs.next()) == false) { throw new java.sql.SQLException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6746/buggy-version/CRUDlets.src.com.tna.data.Persistence.java", "BodyUseAPI": [], "Fixed commit": "32b977e572ff516aff5c04dd37f9cfb56d22b437", "Url": "https://api.github.com/repos/TareqK/CRUDlets", "Date": "2018-04-02T06:40:07Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((org.bukkit.Bukkit.getPluginManager().getPlugin(\"ProtocolLib\")) != null) && (!(com.Ben12345rocks.AdvancedCore.NMSManager.NMSManager.getInstance().isVersion(\"1.8\", \"1.9\", \"1.10\", \"1.11\")))) { this.listen(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4787/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Util.Sign.SignMenu.java", "BodyUseAPI": [], "Fixed commit": "3b55b2aee714d5d9577d42a9884e2f0ff58db664", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2018-02-25T01:30:20Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((params.length) > 0) { int index = new java.util.Random().nextInt(params.length); requestPlacement(activity, params[index], placementRequestListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/4544/buggy-version/adyoandroidsdk.src.main.java.za.co.adyo.android.views.AdyoZoneView.java", "BodyUseAPI": ["java.util.Random.nextInt(params.length)", "za.co.adyo.android.views.AdyoZoneView.requestPlacement(android.app.Activity,params[index],za.co.adyo.android.listeners.PlacementRequestListener)"], "Fixed commit": "e1a479616c7c36125b1bf837cb37ae32bdac9bbf", "Url": "https://api.github.com/repos/AdyoOrg/adyo-android", "Date": "2018-09-12T04:09:04Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.util.ParamUtil.getString(javax.portlet.RenderRequest,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (eventFlagString == null) { return \"/SearchInstructions.jsp\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/7047/buggy-version/modules.amf-search.amf-search-web.src.main.java.com.liferay.training.amf.search.portlet.commands.SearchResultsRenderCommand.java", "BodyUseAPI": [], "Fixed commit": "bd7adf0435bacaa58d88f383c012aacd8eda6b34", "Url": "https://api.github.com/repos/williamdstrong/AppDev", "Date": "2018-06-15T17:39:57Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.visa.training.service.QuestionService.findById(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (q == null) { data.put(\"error\", \"No such question found!\"); return \"errorView\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2471/buggy-version/src.main.java.com.visa.training.web.QuestionController.java", "BodyUseAPI": [], "Fixed commit": "c72736efcd251ac5d95370c2cffd7248fe4a6eb3", "Url": "https://api.github.com/repos/prabhakaran9397/surveyit", "Date": "2018-08-10T04:07:56Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.visa.training.domain.Question.getSurvey()", "com.visa.training.web.LoginController.getLoggedInUser()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(survey.getUser().equals(user))) { data.put(\"error\", \"Not authorized to use it\"); return \"errorView\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2471/buggy-version/src.main.java.com.visa.training.web.QuestionController.java", "BodyUseAPI": [], "Fixed commit": "c72736efcd251ac5d95370c2cffd7248fe4a6eb3", "Url": "https://api.github.com/repos/prabhakaran9397/surveyit", "Date": "2018-08-10T04:07:56Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.visa.training.web.LoginController.getLoggedInUser()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (user == null) { return \"loginView\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2471/buggy-version/src.main.java.com.visa.training.web.QuestionController.java", "BodyUseAPI": [], "Fixed commit": "c72736efcd251ac5d95370c2cffd7248fe4a6eb3", "Url": "https://api.github.com/repos/prabhakaran9397/surveyit", "Date": "2018-08-10T04:07:56Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jppf.server.JPPFConfiguration.get(org.jppf.server.JPPFProperty<java.lang.Integer>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (port < 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6927/buggy-version/server.src.java.org.jppf.server.DriverInitializer.java", "BodyUseAPI": [], "Fixed commit": "bf6afa3c09983d251603798e132b24dd2cd9eefa", "Url": "https://api.github.com/repos/jppf-grid/JPPF", "Date": "2018-07-18T08:13:22Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (transaction.isReadOnly()) { connection.setReadOnly(transaction.isReadOnly()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/58/buggy-version/src.main.java.club.spreadme.database.core.transaction.DefaultTransactionManager.java", "BodyUseAPI": ["java.sql.Connection.setReadOnly(transaction.isReadOnly())", "club.spreadme.database.core.transaction.Transaction.isReadOnly()"], "Fixed commit": "74c804c111e9351869d2f5a890455251d43400ca", "Url": "https://api.github.com/repos/WangShuwill/SpreadDatabase", "Date": "2018-09-05T13:56:27Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pImage == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3971/buggy-version/src.fastfuse.FastFusionMemoryPool.java", "BodyUseAPI": [], "Fixed commit": "1b4f17b66826b60a00c2be2b8e9e735db072d3db", "Url": "https://api.github.com/repos/ClearControl/fastfuse", "Date": "2018-04-19T13:02:13Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8372/buggy-version/src.main.java.cz.HackerGamingCZ.HackerTools.gui.GUI.java", "BodyUseAPI": [], "Fixed commit": "7bb8feec0d0b024a2ba97825a328627daf70c110", "Url": "https://api.github.com/repos/TomasCZE7/HackerTools", "Date": "2018-09-14T14:40:03Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(item.build().getItemMeta().hasDisplayName())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8372/buggy-version/src.main.java.cz.HackerGamingCZ.HackerTools.gui.GUI.java", "BodyUseAPI": [], "Fixed commit": "7bb8feec0d0b024a2ba97825a328627daf70c110", "Url": "https://api.github.com/repos/TomasCZE7/HackerTools", "Date": "2018-09-14T14:40:03Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(item.build().hasItemMeta())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8372/buggy-version/src.main.java.cz.HackerGamingCZ.HackerTools.gui.GUI.java", "BodyUseAPI": [], "Fixed commit": "7bb8feec0d0b024a2ba97825a328627daf70c110", "Url": "https://api.github.com/repos/TomasCZE7/HackerTools", "Date": "2018-09-14T14:40:03Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tall) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8531/buggy-version/app.src.main.java.com.mikehelland.omgtechnogauntlet.DrumView.java", "BodyUseAPI": [], "Fixed commit": "28d728f2e973f18670e0acb438e7eb14fff97e75", "Url": "https://api.github.com/repos/mikehelland/techno-gauntlet", "Date": "2018-01-24T05:10:58Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mikehelland.omgtechnogauntlet.SoundSetFragment.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (context == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/8531/buggy-version/app.src.main.java.com.mikehelland.omgtechnogauntlet.SoundSetFragment.java", "BodyUseAPI": [], "Fixed commit": "28d728f2e973f18670e0acb438e7eb14fff97e75", "Url": "https://api.github.com/repos/mikehelland/techno-gauntlet", "Date": "2018-01-24T05:10:58Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (repositoryItem == null) { if (friendlyUrl.endsWith(\"*\")) { friendlyUrl = friendlyUrl.substring(0, ((friendlyUrl.length()) - 1)); } repositoryItem = repositoryItems.get(friendlyUrl); if (repositoryItem == null) { repositoryItem = removedItems.get(friendlyUrl); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/6924/buggy-version/robocode.repository.src.main.java.net.sf.robocode.repository.Repository.java", "BodyUseAPI": [], "Fixed commit": "15963592d4563b99ae9521271b94f54a764e9357", "Url": "https://api.github.com/repos/robo-code/robocode", "Date": "2018-08-27T20:14:40Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["world.hex.AbstractHex.getNumTurns(world.hex.Hex,world.hex.Hex,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (minTurns > 3) minTurns = 6 - minTurns;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/2035/buggy-version/core.src.main.java.world.hex.AbstractHex.java", "BodyUseAPI": [], "Fixed commit": "8eac25d03e6fb4a021a97c0a1dcfadc6627ebaa2", "Url": "https://api.github.com/repos/abagh0703/Critter-World", "Date": "2017-11-28T12:40:54Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Optional.get()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((artikel.getArtikelStatus()) == (Artikel.ArtikelStatus.INACTIEF)) { org.springframework.web.servlet.ModelAndView modelAndView = new org.springframework.web.servlet.ModelAndView(\"artikel\"); return modelAndView; }else { org.springframework.web.servlet.ModelAndView modelAndView = new org.springframework.web.servlet.ModelAndView(\"artikeledit\"); modelAndView.addObject(\"artikel\", artikel); return modelAndView; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9143/buggy-version/Aplikassie2.src.main.java.com.rsvier.workshop.controllers.ArtikelController.java", "BodyUseAPI": ["org.springframework.web.servlet.ModelAndView.addObject(java.lang.String,com.rsvier.workshop.domein.Artikel)"], "Fixed commit": "e1b7eb4b8497be7ee186c0c009c5ccc0ad47d481", "Url": "https://api.github.com/repos/mmedjedovic/rsvier2", "Date": "2018-05-14T14:54:00Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Paths.get(((((((((((((((com.gmail.therealkingvictoria.factions.FactionHandler.plugin.getDataFolder()) + \"\\\\backups\\\\factions_backup_\") + (now.getYear())) + \"_\") + (now.getMonth())) + \"_\") + (now.getDayOfMonth())) + \"_\") + (now.getHour())) + \"_\") + (now.getMinute())) + \"_\") + (now.getSecond())) + \".yml\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.nio.file.Files.exists(target)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9024/buggy-version/src.main.java.com.gmail.therealkingvictoria.factions.FactionHandler.java", "BodyUseAPI": [], "Fixed commit": "2d137f8ff07a833be202db9074685ec0f2ba3d57", "Url": "https://api.github.com/repos/KingVictoria/CivFactions", "Date": "2018-04-29T22:25:39Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getByEventId(location.getEvent_id())) != null) { java.lang.String sql = \"UPDATE \\\"Location\\\" SET \" + ((((((\"country = ?, \" + \"city = ?, \") + \"street = ?, \") + \"house = ?, \") + \"latitude = ?, \") + \"longitude = ? \") + \"WHERE event_id = CAST (? AS UUID)\"); java.lang.Object[] params = new java.lang.Object[]{ location.getCountry(), location.getCity(), location.getStreet(), location.getHouse(), location.getLatitude(), location.getLongitude(), location.getEvent_id() }; this.getJdbcTemplate().update(sql, params); }else { create(location); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/3529/buggy-version/backend.src.main.java.com.ncgroup2.eventmanager.dao.impl.LocationDaoImpl.java", "BodyUseAPI": ["com.ncgroup2.eventmanager.entity.Location.getEvent_id()", "com.ncgroup2.eventmanager.entity.Location.getHouse()", "com.ncgroup2.eventmanager.entity.Location.getLatitude()", "com.ncgroup2.eventmanager.entity.Location.getCity()", "com.ncgroup2.eventmanager.entity.Location.getStreet()", "com.ncgroup2.eventmanager.entity.Location.getCountry()", "com.ncgroup2.eventmanager.dao.impl.LocationDaoImpl.create(com.ncgroup2.eventmanager.entity.Location)", "com.ncgroup2.eventmanager.entity.Location.getLongitude()"], "Fixed commit": "1d7a8548c40eb80f387b27f897ee596b1bf65df8", "Url": "https://api.github.com/repos/vv0rkman/eventmanager", "Date": "2018-05-27T14:31:03Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stateManager) != null) stateManager.persistState();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/205/buggy-version/exoplayeractivity.src.main.java.com.liskovsoft.smartyoutubetv.flavors.exoplayer.player.PlayerActivity.java", "BodyUseAPI": [], "Fixed commit": "aa7bb83dd59628add4fa6c5943550a0bd47a3c11", "Url": "https://api.github.com/repos/yuliskov/SmartYouTubeTV", "Date": "2018-10-05T12:47:54Z"},
{"Line": "=>477", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stateManager) != null) stateManager.persistState();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/205/buggy-version/exoplayeractivity.src.main.java.com.liskovsoft.smartyoutubetv.flavors.exoplayer.player.PlayerActivity.java", "BodyUseAPI": [], "Fixed commit": "aa7bb83dd59628add4fa6c5943550a0bd47a3c11", "Url": "https://api.github.com/repos/yuliskov/SmartYouTubeTV", "Date": "2018-10-05T12:47:54Z"},
{"Line": "=>678", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.stijndewitt.undertow.cors.Filter.LOG.isLoggable(java.util.logging.Level.FINE)) { com.stijndewitt.undertow.cors.Filter.LOG.fine(((((\"undertow-cors-filter: NOT handling request \" + url) + \". Does not match urlPattern \\\"\") + (urlPattern)) + \"\\\".\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9018/buggy-version/src.main.java.com.stijndewitt.undertow.cors.Filter.java", "BodyUseAPI": ["java.util.logging.Logger.fine(java.lang.String)"], "Fixed commit": "9968c319d0857b85de3bcc4fac38b7f18c4aab76", "Url": "https://api.github.com/repos/Download/undertow-cors-filter", "Date": "2018-07-13T09:38:46Z"},
{"Line": "=>640", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.stijndewitt.undertow.cors.Filter.LOG.isLoggable(java.util.logging.Level.FINE)) { com.stijndewitt.undertow.cors.Filter.LOG.fine(((((\"undertow-cors-filter: Created policy from policy class \" + name) + \" with param \\\"\") + param) + \"\\\".\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9018/buggy-version/src.main.java.com.stijndewitt.undertow.cors.Filter.java", "BodyUseAPI": ["java.util.logging.Logger.fine(java.lang.String)"], "Fixed commit": "9968c319d0857b85de3bcc4fac38b7f18c4aab76", "Url": "https://api.github.com/repos/Download/undertow-cors-filter", "Date": "2018-07-13T09:38:46Z"},
{"Line": "=>669", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.stijndewitt.undertow.cors.Filter.LOG.isLoggable(java.util.logging.Level.FINE)) { com.stijndewitt.undertow.cors.Filter.LOG.fine((\"undertow-cors-filter: handling request \" + url)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V154/9018/buggy-version/src.main.java.com.stijndewitt.undertow.cors.Filter.java", "BodyUseAPI": ["java.util.logging.Logger.fine(java.lang.String)"], "Fixed commit": "9968c319d0857b85de3bcc4fac38b7f18c4aab76", "Url": "https://api.github.com/repos/Download/undertow-cors-filter", "Date": "2018-07-13T09:38:46Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(server.model.AllUsers.getInstance().userExists(userData.getUsername()))) { return new server.LoginResponse(new java.lang.Exception(\"Username is incorrect.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6964/buggy-version/src.server.ServerFacade.java", "BodyUseAPI": [], "Fixed commit": "80939a3f11bc284c33a74017be92a52222e2d12a", "Url": "https://api.github.com/repos/Spencer-Smith/tickets", "Date": "2018-02-08T01:34:03Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.arminb.spidersilk.dsl.entities.Deployment.getService(node.getServiceName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((nodeService.getLogFolder()) != null) { return improveNodeAddress(node.getName(), nodeService.getLogFolder()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5259/buggy-version/spidersilk.src.main.java.me.arminb.spidersilk.execution.RuntimeEngine.java", "BodyUseAPI": ["me.arminb.spidersilk.dsl.entities.Service.getLogFolder()", "me.arminb.spidersilk.execution.RuntimeEngine.improveNodeAddress(node.getName(),nodeService.getLogFolder())"], "Fixed commit": "9de10c412d87cc2b501cdc5b0e330b0780deb710", "Url": "https://api.github.com/repos/arminbalalaie/spidersilk", "Date": "2018-05-09T17:37:39Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (s.isOption()) { if ((v.getParentNode().getOptions()) != null) { edu.gcsc.vrl.luaparser.LoadLua.match(s.getOptions(), v.getParentNode().getOptions()); } }else if (s.isNotOptGroup()) { if ((v.getParentNode().getOptions()) != null) { edu.gcsc.vrl.luaparser.LoadLua.match(s.getOptions(), v.getParentNode().getOptions()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2282/buggy-version/prototypes.VRL-LuaValidation.src.main.java.edu.gcsc.vrl.luaparser.LoadLua.java", "BodyUseAPI": ["edu.gcsc.vrl.luaparser.ValueData.getOptions()", "edu.gcsc.vrl.luaparser.ValueData.isNotOptGroup()", "edu.gcsc.vrl.luaparser.LoadLua.match(s.getOptions(),v.getParentNode().getOptions())", "edu.gcsc.vrl.luaparser.ValueData.getOptions()", "edu.gcsc.vrl.luaparser.LoadLua.match(s.getOptions(),v.getParentNode().getOptions())"], "Fixed commit": "6fd35fccb6ba202acb6770d75a9d4217dcc80d9b", "Url": "https://api.github.com/repos/UG4/lua-table-spec-proposal", "Date": "2018-09-18T12:30:27Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (x >= 0.01) { value = x + (step); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5956/buggy-version/src.server.gui.panels.ComboControl.java", "BodyUseAPI": [], "Fixed commit": "b3b7b30ac6b50dd6b67cbbdcdff1baf9a5073716", "Url": "https://api.github.com/repos/SER516/ProjectThree_Team01", "Date": "2018-04-08T10:49:56Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isFrequency)) { if ((x + (step)) > 1.0) { value = 1.0; }else if ((x + (step)) > 0.0) { value = x + (step); } }else { throw new java.io.IOException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5956/buggy-version/src.server.gui.panels.ComboControl.java", "BodyUseAPI": [], "Fixed commit": "b3b7b30ac6b50dd6b67cbbdcdff1baf9a5073716", "Url": "https://api.github.com/repos/SER516/ProjectThree_Team01", "Date": "2018-04-08T10:49:56Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activeIt) == (left)) { return false; }else if (right.allLoaded()) { right.moveToStart(); activeIt = left; buffer.clear(); updateBlockSize(); ((io.crate.execution.engine.join.RamAccountingBatchIterator) (left)).releaseAccountedRows(); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9173/buggy-version/sql.src.main.java.io.crate.execution.engine.join.HashInnerJoinBatchIterator.java", "BodyUseAPI": [], "Fixed commit": "8f6c0a7babc38f481d6d105f27c784b93a616eae", "Url": "https://api.github.com/repos/crate/crate", "Date": "2018-02-27T10:37:41Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StackTraceElement.getClassName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (className.equals(jodd.log.Logger.class.getName())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8889/buggy-version/jodd-log.src.main.java.jodd.log.impl.SimpleLogger.java", "BodyUseAPI": [], "Fixed commit": "94d1c07371d2b0c67ac991980edb3940231be674", "Url": "https://api.github.com/repos/slandelle/jodd", "Date": "2017-11-19T22:30:33Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imageUrls == null) || ((imageUrls.size()) <= 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7322/buggy-version/app.src.main.java.com.hwl.beta.ui.common.UITransfer.java", "BodyUseAPI": [], "Fixed commit": "313db35e72da57e743ebab791ccb0e7185a98d6e", "Url": "https://api.github.com/repos/oisnull/hwl-android-old", "Date": "2018-05-11T11:38:57Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (retEvent != null) { eventCounterStatsService.incrementAccessByNameCount(retEvent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5911/buggy-version/src.main.java.ua.epam.spring.hometask.aspect.CounterAspect.java", "BodyUseAPI": ["ua.epam.spring.hometask.service.interf.EventCounterStatsService.incrementAccessByNameCount(ua.epam.spring.hometask.domain.Event)"], "Fixed commit": "d0140841cf689c774cec2db61379d44e1ea1bd64", "Url": "https://api.github.com/repos/Alexey007gold/spring-core-hometask", "Date": "2018-05-03T08:36:46Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["al.artofsoul.userinterface.UI.Menu.getButton(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (b == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6014/buggy-version/src.al.artofsoul.userinterface.UI.java", "BodyUseAPI": [], "Fixed commit": "5a9f6b42d74f1b33633d30461085b2341475b00f", "Url": "https://api.github.com/repos/Fahaba/MrTower", "Date": "2018-03-18T02:15:13Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.api.dl.user.UserRepository.findByUsername(user.getUsername())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (optUser.isPresent()) { throw new com.api.dl.user.exceptions.InvalidCredentialsException(\"Please, provide another username;\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1027/buggy-version/src.main.java.com.api.dl.user.UserService.java", "BodyUseAPI": [], "Fixed commit": "b5923e1ba25da0bf289b3d1faea74888d157c055", "Url": "https://api.github.com/repos/AlbuquerqueRafael/Dilettante-Server", "Date": "2018-08-07T02:08:01Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (weight > 0) sb.append(java.lang.String.format(\" %d %d\", vert_to_increment.get(edge.getKey()), weight));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4945/buggy-version/hstoreHome.src.frontend.org.qcri.affinityplanner.AffinityGraph.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,vert_to_increment.get(edge.getKey()),int)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "bbc845b2cbdb8add0b0a874162c89448fb6147d6", "Url": "https://api.github.com/repos/CompassHXM/Commgraph", "Date": "2018-08-08T13:50:59Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mqttCallback) != null) { iMqttClient.setCallback(mqttCallback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6004/buggy-version/src.main.java.mcivicm.mqtt.MQTT.java", "BodyUseAPI": [], "Fixed commit": "65e090ffd731b8067f34bc47e11e68e3006d4333", "Url": "https://api.github.com/repos/zhangliangbo/mqtt", "Date": "2018-10-30T11:02:44Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((movies) != null) { outState.putParcelableArrayList(parcelableArrayListName, movies); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1947/buggy-version/app.src.main.java.com.example.android.popularmovie.MainFragment.java", "BodyUseAPI": [], "Fixed commit": "f842287b2261df2a9eae699d3f06cbd788aa68ec", "Url": "https://api.github.com/repos/tatsuya-fujisaki/popular-movie", "Date": "2018-09-08T00:10:20Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((commands) != null) { for (org.openremote.controller.protocol.alarm.AlarmCommandRef command : commands) { commandStr += (((((\"<commandRef device=\\\"\" + (command.deviceName)) + \"\\\" name=\\\"\") + (command.commandName)) + \"\\\" delay=\\\"\") + (command.commandDelay)) + \"\\\" />\\n\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6116/buggy-version/controller.src.main.java.org.openremote.controller.protocol.alarm.Alarm.java", "BodyUseAPI": [], "Fixed commit": "6c352d6c80ea2998ba75b5ae6fd3fc4a44f31d84", "Url": "https://api.github.com/repos/openremote/Controller", "Date": "2018-01-06T21:28:41Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jPCBSim.dft.get_fft(((((simulation.sim_path) + (simulation.sim_name)) + \"/port_it\") + (java.lang.Integer.toString((n + 1)))))", "jPCBSim.dft.get_fft(((((simulation.sim_path) + (simulation.sim_name)) + \"/port_ut\") + (java.lang.Integer.toString((n + 1)))))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((len == 0) || ((portn_u.length) != len)) || ((portn_i.length) != len)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9625/buggy-version/src.jPCBSim.dft.java", "BodyUseAPI": [], "Fixed commit": "f1f1e92dfc77ecf1a1b2a70d141c99354ae02e4c", "Url": "https://api.github.com/repos/tvelliott/jPCBSim", "Date": "2018-09-12T01:25:33Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jPCBSim.dft.get_fft(((((simulation.sim_path) + (simulation.sim_name)) + \"/port_it\") + (java.lang.Integer.toString((n + 1)))))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (portn_i == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9625/buggy-version/src.jPCBSim.dft.java", "BodyUseAPI": [], "Fixed commit": "f1f1e92dfc77ecf1a1b2a70d141c99354ae02e4c", "Url": "https://api.github.com/repos/tvelliott/jPCBSim", "Date": "2018-09-12T01:25:33Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mainDialog.rimgDisplay) != null) { mainDialog.rimgDisplay.img.close(); mainDialog.rimgDisplay = null; if (mainDialog.displayPane.restoredImageCheckBox.isSelected()) { mainDialog.displayPane.restoredImageCheckBox.doClick(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8911/buggy-version/src.main.java.fntd.core.workflow.FNTDworkflow.java", "BodyUseAPI": ["mainDialog.displayPane.restoredImageCheckBox.doClick()", "mainDialog.rimgDisplay.img.close()", "mainDialog.displayPane.restoredImageCheckBox.isSelected()"], "Fixed commit": "257ca76838af894f5183518b55a85cc5364b3116", "Url": "https://api.github.com/repos/FNTD/Java-library", "Date": "2018-02-22T11:56:26Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mainDialog.maxIntImgDisplay) != null) { mainDialog.maxIntImgDisplay.img.close(); mainDialog.maxIntImgDisplay = null; if (mainDialog.displayPane.maxIntImgCheckBox.isSelected()) { mainDialog.displayPane.maxIntImgCheckBox.doClick(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8911/buggy-version/src.main.java.fntd.core.workflow.FNTDworkflow.java", "BodyUseAPI": ["mainDialog.displayPane.maxIntImgCheckBox.doClick()", "mainDialog.maxIntImgDisplay.img.close()", "mainDialog.displayPane.maxIntImgCheckBox.isSelected()"], "Fixed commit": "257ca76838af894f5183518b55a85cc5364b3116", "Url": "https://api.github.com/repos/FNTD/Java-library", "Date": "2018-02-22T11:56:26Z"},
{"Line": "=>617", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((splitArgs.length) == 3) { if (splitArgs[2].contains(seedu.addressbook.AddressBook.PERSON_DATA_PREFIX_EMAIL)) splitArgs[2] = seedu.addressbook.AddressBook.removePrefixSign(splitArgs[2], seedu.addressbook.AddressBook.PERSON_DATA_PREFIX_EMAIL); else splitArgs[2] = seedu.addressbook.AddressBook.removePrefixSign(splitArgs[2], seedu.addressbook.AddressBook.PERSON_DATA_PREFIX_PHONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3650/buggy-version/src.seedu.addressbook.AddressBook.java", "BodyUseAPI": ["seedu.addressbook.AddressBook.removePrefixSign(java.lang.String,java.lang.String)", "java.lang.String.contains(java.lang.String)", "seedu.addressbook.AddressBook.removePrefixSign(java.lang.String,java.lang.String)"], "Fixed commit": "ae93eade3033f0b82a86bb860f823ae83dd78e4e", "Url": "https://api.github.com/repos/jeffreyooi/addressbook-level1", "Date": "2018-08-27T15:36:39Z"},
{"Line": "=>554", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(eLocationId.contains(\" \"))) { pubmedArticle.getMedlinecitation().getArticle().getElocationid().setElocationid(eLocationId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4538/buggy-version/src.main.java.reciter.pubmed.xmlparser.PubmedEFetchHandler.java", "BodyUseAPI": ["pubmedArticle.getMedlinecitation().getArticle().getElocationid().setElocationid(java.lang.String)"], "Fixed commit": "6dff0dec78a4c9a1488766ba3bd4224fea1e3431", "Url": "https://api.github.com/repos/wcmc-its/ReCiter-PubMed-Retrieval-Tool", "Date": "2018-08-29T18:55:03Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityDamageByEntityEvent.getEntity()", "cz.HackerGamingCZ.HackerTools.HackerTools.getPlugin().getPlayerManager().getPlayer(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (htDamager.getTeam().isPlayerInTeam(victim)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9895/buggy-version/src.main.java.cz.HackerGamingCZ.HackerTools.listeners.EntityDamage.java", "BodyUseAPI": [], "Fixed commit": "dcb1fc080409fa29be6ce7b29f006c00803186ed", "Url": "https://api.github.com/repos/TomasCZE7/HackerTools", "Date": "2018-05-31T19:29:06Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getObject()) instanceof org.bukkit.entity.Entity) { player.teleport(((org.bukkit.entity.Entity) (getObject()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9895/buggy-version/src.main.java.cz.HackerGamingCZ.HackerTools.actions.Teleport.java", "BodyUseAPI": [], "Fixed commit": "dcb1fc080409fa29be6ce7b29f006c00803186ed", "Url": "https://api.github.com/repos/TomasCZE7/HackerTools", "Date": "2018-05-31T19:29:06Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getObject()) instanceof org.bukkit.Location) { player.teleport(((org.bukkit.Location) (getObject()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9895/buggy-version/src.main.java.cz.HackerGamingCZ.HackerTools.actions.Teleport.java", "BodyUseAPI": [], "Fixed commit": "dcb1fc080409fa29be6ce7b29f006c00803186ed", "Url": "https://api.github.com/repos/TomasCZE7/HackerTools", "Date": "2018-05-31T19:29:06Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((version.equals(Joker.APP_VERSION_FREE)) || (version.equals(Joker.APP_VERSION_PAID)))) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6102/buggy-version/FinalProject.app.src.main.java.com.udacity.gradle.builditbigger.EndpointsAsyncTask.java", "BodyUseAPI": [], "Fixed commit": "e50796192923c0e496e7ebe1dcebac9a83638820", "Url": "https://api.github.com/repos/guino000/ud867", "Date": "2018-09-02T21:59:43Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((publishTime.equals(Const.TIME_REPRESENTS_LATER)) || (publishTime.equals(Const.TIME_REPRESENTS_NEVER))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6570/buggy-version/src.main.java.teammates.common.datatransfer.attributes.FeedbackSessionAttributes.java", "BodyUseAPI": [], "Fixed commit": "5a8931ea5c96a7937b73de2dae5a83e016c4cd28", "Url": "https://api.github.com/repos/whipermr5/teammates", "Date": "2018-03-14T05:56:02Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (publishTime.equals(Const.TIME_REPRESENTS_FOLLOW_VISIBLE)) { return isVisible(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6570/buggy-version/src.main.java.teammates.common.datatransfer.attributes.FeedbackSessionAttributes.java", "BodyUseAPI": [], "Fixed commit": "5a8931ea5c96a7937b73de2dae5a83e016c4cd28", "Url": "https://api.github.com/repos/whipermr5/teammates", "Date": "2018-03-14T05:56:02Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!changed) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5212/buggy-version/microbat_trace_predication.src.microbat.mutation.mutation.TraceMutationVisitor.java", "BodyUseAPI": [], "Fixed commit": "0f7ab6dde2cde145ad8784425cbba7d4e4f6caa1", "Url": "https://api.github.com/repos/llmhyy/microbat", "Date": "2018-04-09T09:47:16Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((var.getInit()) != null) { var.setInit(getInitValueExpr(fieldType, ((var.getId().getArrayCount()) > 0))); changed = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5212/buggy-version/microbat_trace_predication.src.microbat.mutation.mutation.TraceMutationVisitor.java", "BodyUseAPI": ["japa.parser.ast.body.VariableDeclarator.getId()", "japa.parser.ast.body.VariableDeclarator.setInit(japa.parser.ast.expr.Expression)", "var.getId().getArrayCount()", "microbat.mutation.mutation.TraceMutationVisitor.getInitValueExpr(japa.parser.ast.type.Type,((var.getId().getArrayCount()) > 0))"], "Fixed commit": "0f7ab6dde2cde145ad8784425cbba7d4e4f6caa1", "Url": "https://api.github.com/repos/llmhyy/microbat", "Date": "2018-04-09T09:47:16Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["weixin.popular.util.MapUtil.order(java.util.Map<java.lang.String, java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tmap.containsKey(\"sign_type\")) { tmap.remove(\"sign_type\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5310/buggy-version/src.main.java.weixin.popular.util.SignatureUtil.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.remove(java.lang.String)"], "Fixed commit": "d0daa540449be931cca8aba3f809e01473649e2f", "Url": "https://api.github.com/repos/liyiorg/weixin-popular", "Date": "2017-12-04T16:13:25Z"},
{"Line": "=>660", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getLastPA()) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9509/buggy-version/src.main.java.nc.mairie.gestionagent.process.agent.OeAGENTPosAdm.java", "BodyUseAPI": [], "Fixed commit": "bc82ed06dc3845000387ceeb9e655dba8e326b04", "Url": "https://api.github.com/repos/DSI-Ville-Noumea/sirh", "Date": "2018-02-28T22:06:23Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.gobblin.converter.avro.JsonElementConversionFactory.RecordConverter.convert(com.google.gson.JsonObject)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (record instanceof org.apache.gobblin.util.EmptyIterable) { return ((org.apache.gobblin.util.EmptyIterable<org.apache.avro.generic.GenericRecord>) (record)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3830/buggy-version/gobblin-core.src.main.java.org.apache.gobblin.converter.avro.JsonIntermediateToAvroConverter.java", "BodyUseAPI": [], "Fixed commit": "55123e09b1368db13a098385cace63bbcc33c1e8", "Url": "https://api.github.com/repos/jack-moseley/gobblin", "Date": "2018-03-29T03:54:01Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.DataInputStream.readInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (service == 0) { break; }else if (service == 1) { output.writeUTF((\"\\n\\nSERVER>\\n\" + (menu()))); }else if (service == 2) { output.writeUTF((\"SERVER>\\n\\t \" + (add(input1, input2)))); }else if (service == 3) { output.writeUTF((\"SERVER>\\n\\t \" + (diff(input1, input2)))); }else if (service == 4) { output.writeUTF((\"SERVER>\\n\\t \" + (mult(input1, input2)))); }else if (service == 5) { output.writeUTF((\"SERVER>\\n\\t \" + (qout(input1, input2)))); }else { output.writeUTF((\"SERVER>\\n\\t \" + \"invalid choice\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6093/buggy-version/Server.java", "BodyUseAPI": [], "Fixed commit": "dee1862ebf27df87278eeaadb00741ee43143274", "Url": "https://api.github.com/repos/wangai/Java-Sockets", "Date": "2018-07-02T06:40:54Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count < 2) { return context.getString(R.string.data_summary_unknown); }else { int totalPeriod = 0; for (java.lang.Integer period : periods) { totalPeriod += period; } int averagePeriod = totalPeriod / (count - 1); lastEndTime.add(java.util.Calendar.SECOND, averagePeriod); return context.getString(R.string.data_summary_frequency_and_next_occurrence, com.splitcriteria.timecard.DataSummary.getTimeText(context, averagePeriod), dateFormat.format(lastEndTime.getTime())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2623/buggy-version/TimeCard.app.src.main.java.com.splitcriteria.timecard.DataSummary.java", "BodyUseAPI": [], "Fixed commit": "1c64e9daf404b2fccd258c833be246feb88e03e8", "Url": "https://api.github.com/repos/SplitCriteria/timecard", "Date": "2018-02-17T21:50:15Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { value = \"null\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6965/buggy-version/src.main.java.com.univocity.parsers.common.DataProcessingException.java", "BodyUseAPI": [], "Fixed commit": "12c8f9f399f1105b539766a3b87ea5e343b6a810", "Url": "https://api.github.com/repos/uniVocity/univocity-parsers", "Date": "2018-08-06T09:48:55Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flag == false) { event.setTag(backend.NLP.NLP.RunNLP(event.getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8834/buggy-version/BackEnd-2.src.main.java.backend.Calendar.GoogleCalendar.java", "BodyUseAPI": [], "Fixed commit": "7c7df41afd2625d0f2a635744446a1f102f6595a", "Url": "https://api.github.com/repos/TechnionYearlyProject/DailyPulseMe", "Date": "2018-05-26T23:05:29Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dom4j.Document.selectSingleNode(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (advancedElem != null) { for (java.lang.String advanced : advancedEntries) { java.util.Map<java.lang.String, java.lang.String> entryMap = org.opencms.util.CmsStringUtil.splitAsMap(advanced, \"|\", \":\"); org.dom4j.Element existingElem = ((org.dom4j.Element) (advancedElem.selectSingleNode(((\"entry[@key='\" + (entryMap.get(\"key\"))) + \"']\")))); if (existingElem == null) { org.dom4j.Element newElem = advancedElem.addElement(\"entry\"); for (java.util.Map.Entry<java.lang.String, java.lang.String> entry : entryMap.entrySet()) { newElem.addAttribute(entry.getKey(), entry.getValue()); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4849/buggy-version/src-setup.org.opencms.setup.xml.v10.CmsXmlUpdateContextMenuEntries.java", "BodyUseAPI": ["org.dom4j.Element.addElement(java.lang.String)", "org.dom4j.Element.selectSingleNode(java.lang.String)"], "Fixed commit": "0052f65a12bf83fe969e49f2be5db4faf175995a", "Url": "https://api.github.com/repos/alkacon/opencms-core", "Date": "2018-05-28T19:01:26Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ibm.ws.webcontainer.webapp.WebApp.getSessionContext()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (ctx != null) { session = ctx.getIHttpSession(localrequest, ((javax.servlet.http.HttpServletResponse) (request.getResponse())), create); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/832/buggy-version/dev.com.ibm.ws.webcontainer.src.com.ibm.ws.webcontainer.srt.SRTRequestContext.java", "BodyUseAPI": ["com.ibm.ws.webcontainer.session.IHttpSessionContext.getIHttpSession(javax.servlet.http.HttpServletRequest,((javax.servlet.http.HttpServletResponse) (request.getResponse())),boolean)"], "Fixed commit": "bf4c8fc1ca18a0610349f9bf57205cbc12491526", "Url": "https://api.github.com/repos/nmittles/open-liberty", "Date": "2018-04-25T20:21:25Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (g != null) { com.smhl.comparator.game.ThreeStarsComparator comparator = new com.smhl.comparator.game.ThreeStarsComparator(g); model.addAttribute(ControllerConstants.GameConstants.THREE_STARS, comparator.get3Stars()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4933/buggy-version/src.main.java.com.smhl.service.EntityService.java", "BodyUseAPI": [], "Fixed commit": "18073795ef99c90f449e52f2101de38f34f39c01", "Url": "https://api.github.com/repos/sPrizio/SMHL-API", "Date": "2018-10-05T15:12:47Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loginData.getUnit().equalsIgnoreCase(ConstantLib.UNIT_IMPERIAL)) { height = (trekResponseData.getTrek_height()) + \" ft\"; }else { height = (trekResponseData.getTrek_height()) + \" m\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2145/buggy-version/app.src.main.java.com.trailaider.app.ui.fragment.trek.TrekListAdapter.java", "BodyUseAPI": [], "Fixed commit": "a15e84d3b4469bc2cd0e8c2a18765562926e4be2", "Url": "https://api.github.com/repos/gajanandchouhan/Trailaider", "Date": "2018-09-22T18:02:47Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((stringArgs.length) == 2) { int[] intArray = new int[]{ java.lang.Integer.parseInt(stringArgs[0]), java.lang.Integer.parseInt(stringArgs[1]) }; return intArray; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8092/buggy-version/src.seedu.addressbook.parser.Parser.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "996f440e1c695acaf26a5f254a8608f112043cb5", "Url": "https://api.github.com/repos/KokJianYu/addressbook-level2", "Date": "2018-09-12T09:49:30Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((remain.length()) == (content.length())) { remain = remain.replace((sign + (value)), \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8017/buggy-version/EditorA.utillibrary.src.main.java.com.kelfan.utillibrary.AtSign.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "19f25b6563370c5491313ef09bee95db8037c97e", "Url": "https://api.github.com/repos/kelfan/EditorA", "Date": "2018-07-05T05:17:55Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasNext())) { throw new java.util.NoSuchElementException(\"Array index out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1527/buggy-version/analyzer.src.main.java.nl.basjes.parse.useragent.analyze.MatchesList.java", "BodyUseAPI": [], "Fixed commit": "bb9dab63d7e98dabea96f8b1311111059a3345b7", "Url": "https://api.github.com/repos/nielsbasjes/yauaa", "Date": "2018-10-28T19:41:37Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["simplenlg.syntax.dutch.NLGElement.getFeature(InternalFeature.DISCOURSE_FUNCTION)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (discourseFunction == (DiscourseFunction.OBJECT)) { realisedElement.addComponent(complement.realiseSyntax()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1444/buggy-version/src.simplenlg.syntax.dutch.VerbPhraseHelper.java", "BodyUseAPI": [], "Fixed commit": "8333eda29d2f8e5ea245e9ef682f046d3e28bb79", "Url": "https://api.github.com/repos/rfdj/SimpleNLG-NL", "Date": "2018-10-01T13:00:48Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.crowdfire.calc.State.symbols.contains(op))) { return com.crowdfire.calc.State.Expression.expression = op; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/708/buggy-version/app.src.main.java.com.crowdfire.calc.State.java", "BodyUseAPI": [], "Fixed commit": "6205bc957555af6cd5103cac613459bd31900e84", "Url": "https://api.github.com/repos/laxman-spidey/calculator", "Date": "2018-05-13T16:49:52Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (error != 0) { codeword[(error - 1)] = labredes.Utils.NOT(codeword[(error - 1)]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4244/buggy-version/src.labredes.HammingDecoder.java", "BodyUseAPI": ["labredes.Utils.NOT(char)"], "Fixed commit": "76fd2ae533d494ddfca2e1acc672cc9173e4c60e", "Url": "https://api.github.com/repos/luis721/LabRedes", "Date": "2018-10-02T20:38:16Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((msTemplateConfigModel.getTemplateFlag()) != null) { msTemplateConfigDO.setTemplateFlag(msTemplateConfigModel.getTemplateFlag().getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1178/buggy-version/message-core-model.src.main.java.com.myteay.message.core.model.repository.MsTemplateConfigRepositoryImpl.java", "BodyUseAPI": ["com.myteay.message.core.model.MsTemplateConfigModel.getTemplateFlag()", "msTemplateConfigModel.getTemplateFlag().getValue()", "com.myteay.message.common.dal.dataobject.MsTemplateConfigDO.setTemplateFlag(msTemplateConfigModel.getTemplateFlag().getValue())"], "Fixed commit": "a567fae9db40cca675a84b8f5f2e9110d7acac09", "Url": "https://api.github.com/repos/danlley/myteay-message", "Date": "2018-03-12T15:57:44Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((msTemplateConfigModel.getTemplateType()) != null) { msTemplateConfigDO.setTemplateType(msTemplateConfigModel.getTemplateType().getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1178/buggy-version/message-core-model.src.main.java.com.myteay.message.core.model.repository.MsTemplateConfigRepositoryImpl.java", "BodyUseAPI": ["com.myteay.message.core.model.MsTemplateConfigModel.getTemplateType()", "msTemplateConfigModel.getTemplateType().getValue()", "com.myteay.message.common.dal.dataobject.MsTemplateConfigDO.setTemplateType(msTemplateConfigModel.getTemplateType().getValue())"], "Fixed commit": "a567fae9db40cca675a84b8f5f2e9110d7acac09", "Url": "https://api.github.com/repos/danlley/myteay-message", "Date": "2018-03-12T15:57:44Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(msTemplateConfigModel.getTemplateName())) { msTemplateConfigDO.setTemplateName(msTemplateConfigModel.getTemplateName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1178/buggy-version/message-core-model.src.main.java.com.myteay.message.core.model.repository.MsTemplateConfigRepositoryImpl.java", "BodyUseAPI": ["com.myteay.message.common.dal.dataobject.MsTemplateConfigDO.setTemplateName(msTemplateConfigModel.getTemplateName())", "com.myteay.message.core.model.MsTemplateConfigModel.getTemplateName()"], "Fixed commit": "a567fae9db40cca675a84b8f5f2e9110d7acac09", "Url": "https://api.github.com/repos/danlley/myteay-message", "Date": "2018-03-12T15:57:44Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((msTemplateConfigModel.getChannelType()) != null) { msTemplateConfigDO.setChannelType(msTemplateConfigModel.getChannelType().getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1178/buggy-version/message-core-model.src.main.java.com.myteay.message.core.model.repository.MsTemplateConfigRepositoryImpl.java", "BodyUseAPI": ["msTemplateConfigModel.getChannelType().getValue()", "com.myteay.message.core.model.MsTemplateConfigModel.getChannelType()", "com.myteay.message.common.dal.dataobject.MsTemplateConfigDO.setChannelType(msTemplateConfigModel.getChannelType().getValue())"], "Fixed commit": "a567fae9db40cca675a84b8f5f2e9110d7acac09", "Url": "https://api.github.com/repos/danlley/myteay-message", "Date": "2018-03-12T15:57:44Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser()) == null) { startActivity(new android.content.Intent(this, com.company.mat.LoginActivity.class)); }else if (isUserRestaurant) { startActivity(new android.content.Intent(this, com.company.mat.RestaurantAccount.class)); }else { startActivity(new android.content.Intent(this, com.company.mat.Home.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2750/buggy-version/app.src.main.java.com.company.mat.Home.java", "BodyUseAPI": [], "Fixed commit": "14b88e116a1e120d1d792cfc69df101755fd84d9", "Url": "https://api.github.com/repos/alassadi/Mat", "Date": "2018-03-19T22:32:52Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lgo == null) || ((lgo.getMembers()) == null)) { return com.google.common.collect.Sets.newHashSet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4307/buggy-version/src.main.java.org.linagora.linshare.ldap.JScriptGroupMemberLdapQuery.java", "BodyUseAPI": [], "Fixed commit": "96d8d83ad243afbaeabb98c46bc3fc47c6d5aa31", "Url": "https://api.github.com/repos/linagora/linshare-core", "Date": "2018-10-16T12:29:06Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.files.size()) == 0) { return new java.lang.String[]{ }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1617/buggy-version/source-node.src.main.java.com.bushpath.nfennel.source-node.RepositoryReader.java", "BodyUseAPI": [], "Fixed commit": "a5aa640b4b58dfa01a9b6d94474904728c4148ed", "Url": "https://api.github.com/repos/hamersaw/NaiveFennel", "Date": "2018-07-26T17:23:07Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.umssonline.proymgt.feign.UsersFeignClient.findById(userStory.getAssignedTo().getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (assignedUser == null) { throw new com.umssonline.proymgt.exceptions.InvalidResourceException(\"User with the specified ID could not be found.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2184/buggy-version/src.main.java.com.umssonline.proymgt.services.impl.BacklogServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "40e831037460f313445987e4e62d6979c86a2138", "Url": "https://api.github.com/repos/franco148/uo-projectmgt-service", "Date": "2018-08-11T04:42:32Z"},
{"Line": "=>842", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getData().getConfigurationSection(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (shop != null) { return shop.getKeys(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5223/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Config.Config.java", "BodyUseAPI": ["org.bukkit.configuration.ConfigurationSection.getKeys(boolean)"], "Fixed commit": "1c7afc8bb304c118a0023bba55bf84039319bbd0", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2018-01-01T20:30:26Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (m == null) { return null; }else { M mWithChildren = m; for (org.hisp.dhis.android.core.arch.repositories.children.ChildrenAppender<M> appender : childrenAppenders) { appender.prepareChildren(java.util.Collections.singleton(mWithChildren)); mWithChildren = appender.appendChildren(mWithChildren); } return mWithChildren; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6024/buggy-version/core.src.main.java.org.hisp.dhis.android.core.arch.repositories.children.ChildrenAppenderExecutor.java", "BodyUseAPI": [], "Fixed commit": "013f99436a8a8f6d8334b045b395fc6f4e212272", "Url": "https://api.github.com/repos/dhis2/dhis2-android-sdk", "Date": "2018-10-31T15:40:27Z"},
{"Line": "=>1347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<de.uni_kl.cs.discodnc.curves.LinearSegment>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (segment_size > 2) { segment_size = 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6253/buggy-version/src.main.java.de.uni_kl.cs.discodnc.curves.dnc.affine.Curve_DNC_Affine.java", "BodyUseAPI": [], "Fixed commit": "c76666745bab572d4e73054446f0e4976fd9ff35", "Url": "https://api.github.com/repos/deepakpchp/DiscoDNC", "Date": "2018-07-22T15:07:41Z"},
{"Line": "=>1355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i == 0) { s = segments.get(i); }else { s = segments.get(((segments.size()) - 1)); de.uni_kl.cs.discodnc.numbers.Num temp = de.uni_kl.cs.discodnc.numbers.Num.getUtils().create((-1)); de.uni_kl.cs.discodnc.numbers.Num x2 = de.uni_kl.cs.discodnc.numbers.Num.getUtils().add(de.uni_kl.cs.discodnc.numbers.Num.getUtils().mult(de.uni_kl.cs.discodnc.numbers.Num.getUtils().div(s.getY(), s.getGrad()), temp), s.getX()); de.uni_kl.cs.discodnc.numbers.Num y2 = de.uni_kl.cs.discodnc.numbers.Num.getUtils().add(de.uni_kl.cs.discodnc.numbers.Num.getUtils().mult(de.uni_kl.cs.discodnc.numbers.Num.getUtils().mult(s.getX(), s.getGrad()), temp), s.getY()); if (x2.leqZero()) { s.setX(de.uni_kl.cs.discodnc.numbers.Num.getUtils().createZero()); s.setY(y2); }else { s.setX(x2); s.setY(de.uni_kl.cs.discodnc.numbers.Num.getUtils().createZero()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6253/buggy-version/src.main.java.de.uni_kl.cs.discodnc.curves.dnc.affine.Curve_DNC_Affine.java", "BodyUseAPI": ["java.util.List<de.uni_kl.cs.discodnc.curves.LinearSegment>.get(int)"], "Fixed commit": "c76666745bab572d4e73054446f0e4976fd9ff35", "Url": "https://api.github.com/repos/deepakpchp/DiscoDNC", "Date": "2018-07-22T15:07:41Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (regParam != 0.0) { weight.imul((1 - (stepSize * regParam))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8995/buggy-version/angel-ps.mllib.src.main.java.com.tencent.angel.ml.psf.optimizer.AdamUpdateFunc.java", "BodyUseAPI": ["com.tencent.angel.ml.math2.vector.Vector.imul(double)"], "Fixed commit": "7c84e44edd05eed4fbab0cbba93ebe1174756743", "Url": "https://api.github.com/repos/Angel-ML/angel", "Date": "2018-09-06T08:31:52Z"},
{"Line": "=>961", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connected) == false) { android.support.design.widget.Snackbar.make(findViewById(android.R.id.content), \"Please Enable Internet\", Snackbar.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9861/buggy-version/app.src.main.java.app.ys.weather_ping21.Main.java", "BodyUseAPI": [], "Fixed commit": "1299f90efb27251b748d3ab2abeb144decf6d9b2", "Url": "https://api.github.com/repos/ys-git/Weather_ping2.1", "Date": "2018-08-18T22:11:08Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (initialBundle != null) { boolean oldValue = initialBundle.getBoolean(mResultKey); android.util.Log.d(\"TEST_TIMES\", (\"oldValue: \" + oldValue)); android.util.Log.d(\"TEST_TIMES\", (\"mSwitch.isChecked(): \" + (mSwitch.isChecked()))); return oldValue != (mSwitch.isChecked()); }else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8188/buggy-version/pearform-lib.src.main.java.com.mprimavera.pearform.model.fields.Switch.java", "BodyUseAPI": ["android.os.Bundle.getBoolean(com.mprimavera.pearform.model.fields.Switch)"], "Fixed commit": "72e08d825c8a9eeff96766ba98f510deaeba1aac", "Url": "https://api.github.com/repos/AEDMAP/PearForm", "Date": "2018-04-16T14:16:06Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mWatchlistData) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4176/buggy-version/app.src.main.java.com.cybexmobile.fragment.ExchangeFragment.java", "BodyUseAPI": [], "Fixed commit": "4b833098d48c26cf1a033aa676f2a3d8a73ed043", "Url": "https://api.github.com/repos/CybexDex/cybex-android", "Date": "2018-07-17T07:26:39Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { com.ice.restring.Restring.viewTransformerManager.registerTransformer(new com.ice.restring.ToolbarTransformer()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5710/buggy-version/restring.src.main.java.com.ice.restring.Restring.java", "BodyUseAPI": [], "Fixed commit": "92fe0f749bb2addc7b29b5fa0f7da1427f395277", "Url": "https://api.github.com/repos/65apps/restring", "Date": "2018-10-16T10:49:12Z"},
{"Line": "=>545", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mFirst) { mCombinedChart.moveViewToX(((mData.getDatas().size()) - 1)); mBarChart.moveViewToX(((kLineDatas.size()) - 1)); mFirst = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6788/buggy-version/app.src.main.java.com.volume.candle.ticker.views.CandleParentLayout.java", "BodyUseAPI": [], "Fixed commit": "14d1607d3283d7d7cc69a27684e4563a7328796d", "Url": "https://api.github.com/repos/PATHngping/canvolclient", "Date": "2018-10-24T02:51:13Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.android.bitcoinnews.ArticleListActivity.getLoaderManager()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((loaderManager.getLoader(com.example.android.bitcoinnews.ArticleListActivity.ARTICLE_LOADER_ID)) != null) loaderManager.restartLoader(com.example.android.bitcoinnews.ArticleListActivity.ARTICLE_LOADER_ID, null, this); else loaderManager.initLoader(com.example.android.bitcoinnews.ArticleListActivity.ARTICLE_LOADER_ID, null, this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4088/buggy-version/app.src.main.java.com.example.android.bitcoinnews.ArticleListActivity.java", "BodyUseAPI": ["android.app.LoaderManager.initLoader(int,<nulltype>,com.example.android.bitcoinnews.ArticleListActivity)", "android.app.LoaderManager.restartLoader(int,<nulltype>,com.example.android.bitcoinnews.ArticleListActivity)"], "Fixed commit": "81f86bc7106798d95f033bbbf37d283307a77857", "Url": "https://api.github.com/repos/J3roen/BitcoinNews", "Date": "2018-08-10T16:54:32Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (TaxesAmount > 0) { economy.depositPlayer(ServerTaxesAccount, TaxesAmount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3370/buggy-version/src.main.java.com.gamingmesh.jobs.economy.BufferedEconomy.java", "BodyUseAPI": ["com.gamingmesh.jobs.economy.Economy.depositPlayer(org.bukkit.OfflinePlayer,java.lang.Double)"], "Fixed commit": "8e07d57ad6276d5cf4fcbad555db1bfd34cab7e2", "Url": "https://api.github.com/repos/sync667/Jobs", "Date": "2018-10-30T17:41:32Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(authorizeService.isAdmin(context))) { throw new org.dspace.app.rest.exception.RESTAuthorizationException(\"The EPerson collection endpoint is reserved to system administrators\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5719/buggy-version/dspace-spring-rest.src.main.java.org.dspace.app.rest.repository.EPersonRestRepository.java", "BodyUseAPI": [], "Fixed commit": "09cbfba8efb26867fc6567c52c38914b99f0d8a5", "Url": "https://api.github.com/repos/4Science/DSpace", "Date": "2018-05-31T05:59:21Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdapter) == null) { mAdapter = new info.vericoin.verimobile.TransactionListAdapter(this, myDataset); mRecyclerView.setAdapter(mAdapter); }else { mAdapter.setmDataset(myDataset); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2554/buggy-version/app.src.main.java.info.vericoin.verimobile.WalletHistoryActivity.java", "BodyUseAPI": [], "Fixed commit": "d1c0d7ad3f17cc246db9ab0d3ce26a1ed35aaa97", "Url": "https://api.github.com/repos/vericoin/verimobile", "Date": "2018-08-02T06:44:41Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((node.left) == null) || ((node.right) == null)) { rebalanceAfterRemoval(node, sibling); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6686/buggy-version/src.ru.yaroslavskudarnov.BST.main.RBTree.java", "BodyUseAPI": ["ru.yaroslavskudarnov.BST.main.RBTree<E>.rebalanceAfterRemoval(ru.yaroslavskudarnov.BST.main.RBTree<E>.RBTreeNode,ru.yaroslavskudarnov.BST.main.RBTree<E>.RBTreeNode)"], "Fixed commit": "6be4840682cfd1c0b2e068ada3113f4d2d80ebaf", "Url": "https://api.github.com/repos/YaroslavSkudarnov/search-trees", "Date": "2018-03-26T21:43:14Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gregtech.common.tileentities.machines.multi.GT_MetaTileEntity_DrillerBase.getStackInSlot(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((pipes != null) && (!(pipes.isItemEqual(gregtech.common.tileentities.machines.multi.GT_MetaTileEntity_DrillerBase.miningPipe)))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6879/buggy-version/src.main.java.gregtech.common.tileentities.machines.multi.GT_MetaTileEntity_DrillerBase.java", "BodyUseAPI": [], "Fixed commit": "fbaa48845128e2b780bc3c76c7a694b4498e36fb", "Url": "https://api.github.com/repos/IdealIndustrial/GT5Unofficial", "Date": "2018-05-11T20:21:55Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isDefaultSelected)) { licensePlateList.add(\"Not selected\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2052/buggy-version/app.src.main.java.com.example.parkly.Fragment.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "07721ceb20e39fafd03011db30f2f429101223a5", "Url": "https://api.github.com/repos/BugHuntersKTU/Parkly", "Date": "2018-03-27T09:04:45Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id == angemeldetePersonID) { throw new ELAB.ElabException(\"Angemeldete Personen k\ufffdnnen sich nicht selbst l\ufffdschen\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/954/buggy-version/src.ELAB.Personenverwaltung.java", "BodyUseAPI": [], "Fixed commit": "afe23e65835f9bee2c07bee3013d05a0f1a17167", "Url": "https://api.github.com/repos/KevinKreps/Projekt1", "Date": "2018-06-07T08:47:51Z"},
{"Line": "=>2950", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connectByRoot) { expr = new com.alibaba.druid.sql.parser.SQLIdentifierExpr(lexer.stringVal()); lexer.nextToken(); }else { expr = new com.alibaba.druid.sql.parser.SQLIdentifierExpr(ident); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1246/buggy-version/src.main.java.com.alibaba.druid.sql.parser.SQLExprParser.java", "BodyUseAPI": [], "Fixed commit": "22802228e1e1be18a41bc1a65dcfe7335a1d7810", "Url": "https://api.github.com/repos/qxo/druid", "Date": "2018-03-19T12:26:16Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mapToPrint.containsKey(0)) || (mapToPrint.containsKey(1))) { printError(mapToPrint); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8516/buggy-version/src.com.bizleap.training.assignment.three.MonthsBuilder.java", "BodyUseAPI": ["com.bizleap.training.assignment.three.MonthsBuilder.printError(java.util.Map<java.lang.Integer, java.lang.Object>)"], "Fixed commit": "25933fff5ec7851c86daf7443bd7094beab1eb5c", "Url": "https://api.github.com/repos/BizleapIntern/kaungsan", "Date": "2018-05-04T18:29:20Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getVehicle().getFireTicks()) != (-1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8303/buggy-version/src.main.java.xyz.jaoafa.mymaid.EventHandler.OnBoatNoDestroy.java", "BodyUseAPI": [], "Fixed commit": "e99652069b09e6892880d6004e89eb1cfd214677", "Url": "https://api.github.com/repos/book000/MyMaid", "Date": "2018-02-05T11:51:08Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (t != tour) { java.util.Date tStart = t.getStartTime(); java.util.Date tEnd = t.getEndTime(); if (((((start.after(tStart)) && (start.before(tEnd))) || ((end.after(tStart)) && (end.before(tEnd)))) || ((start.before(tStart)) && (end.after(tEnd)))) || ((start.equals(tStart)) && (end.equals(tEnd)))) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7214/buggy-version/src.main.java.memoranda.Bus.java", "BodyUseAPI": ["main.java.memoranda.Tour.getStartTime()", "main.java.memoranda.Tour.getEndTime()"], "Fixed commit": "252b4a72def192dad075537362c3fd753960af6e", "Url": "https://api.github.com/repos/ser316asu-2018/Nordkirchen", "Date": "2018-04-08T22:52:09Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(shouldShowRequestPermissionRationale(Manifest.permission_group.LOCATION))) { requestPermissions(new java.lang.String[]{ Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION }, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8248/buggy-version/app.src.main.java.hr.foi.air.fragments.MapFragment.java", "BodyUseAPI": [], "Fixed commit": "0f84c5b2631dc7d3eccb779e1c3665cfc9a1d63a", "Url": "https://api.github.com/repos/marina347/VodicKulturnihDogadanja", "Date": "2018-01-22T11:28:01Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDevice == false) { com.example.project.mobilecapstone.Fragment.MapFragment.posX = com.example.project.mobilecapstone.Utils.Utils.getPixel(((com.example.project.mobilecapstone.Fragment.MapFragment.width) / 12), obj.getInt(\"PosAX\"), obj.getInt(\"PosBX\")); com.example.project.mobilecapstone.Fragment.MapFragment.posY = com.example.project.mobilecapstone.Utils.Utils.getPixel(((com.example.project.mobilecapstone.Fragment.MapFragment.height) / 12), obj.getInt(\"PosAY\"), obj.getInt(\"PosBY\")); }else { com.example.project.mobilecapstone.Fragment.MapFragment.devicePosX = com.example.project.mobilecapstone.Utils.Utils.getPixel(((com.example.project.mobilecapstone.Fragment.MapFragment.width) / 12), obj.getInt(\"PosAX\"), obj.getInt(\"PosBX\")); com.example.project.mobilecapstone.Fragment.MapFragment.devicePosY = com.example.project.mobilecapstone.Utils.Utils.getPixel(((com.example.project.mobilecapstone.Fragment.MapFragment.height) / 12), obj.getInt(\"PosAY\"), obj.getInt(\"PosBY\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7097/buggy-version/app.src.main.java.com.example.project.mobilecapstone.Fragment.MapFragment.java", "BodyUseAPI": [], "Fixed commit": "50a3d003cba8f393ce40d547b472a27899e12d3f", "Url": "https://api.github.com/repos/hieutn212/CapstoneMobile", "Date": "2018-03-14T04:17:34Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sunbird.actor.core.service.InterServiceCommunication.getResponse(org.sunbird.common.request.Request,LocationActorOperation.SEARCH_LOCATION.getValue())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == obj) { org.sunbird.common.models.util.ProjectLogger.log(\"Null receive from interservice communication\", LoggerEnum.ERROR); failureList.add(row); }else if (obj instanceof org.sunbird.common.exception.ProjectCommonException) { row.put(JsonKey.ERROR_MSG, ((org.sunbird.common.exception.ProjectCommonException) (obj)).getMessage()); failureList.add(row); }else if (obj instanceof org.sunbird.common.models.response.Response) { org.sunbird.common.models.response.Response response = ((org.sunbird.common.models.response.Response) (obj)); java.util.List<java.util.Map<java.lang.String, java.lang.Object>> responseList = ((java.util.List<java.util.Map<java.lang.String, java.lang.Object>>) (response.getResult().get(JsonKey.RESPONSE))); if (org.apache.commons.collections.CollectionUtils.isEmpty(responseList)) { callCreateLocation(row, successList, failureList); }else { callUpdateLocation(row, successList, failureList, responseList.get(0)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1386/buggy-version/actors.core.src.main.java.org.sunbird.learner.actors.bulkupload.LocationBulkUploadBackGroundJobActor.java", "BodyUseAPI": [], "Fixed commit": "65695768e5619ef4017479587adf2dc763d9e447", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-mw", "Date": "2018-04-26T07:31:14Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sunbird.actor.core.service.InterServiceCommunication.getResponse(org.sunbird.common.request.Request,LocationActorOperation.CREATE_LOCATION.getValue())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == obj) { org.sunbird.common.models.util.ProjectLogger.log(\"Null receive from interservice communication\", LoggerEnum.ERROR); failureList.add(row); }else if (obj instanceof org.sunbird.common.exception.ProjectCommonException) { row.put(JsonKey.ERROR_MSG, ((org.sunbird.common.exception.ProjectCommonException) (obj)).getMessage()); failureList.add(row); }else if (obj instanceof org.sunbird.common.models.response.Response) { successList.add(row); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1386/buggy-version/actors.core.src.main.java.org.sunbird.learner.actors.bulkupload.LocationBulkUploadBackGroundJobActor.java", "BodyUseAPI": [], "Fixed commit": "65695768e5619ef4017479587adf2dc763d9e447", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-mw", "Date": "2018-04-26T07:31:14Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lang) == null) { lang = DLNAMediaLang.UND; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9/buggy-version/src.main.java.net.pms.dlna.DLNAMediaSubtitle.java", "BodyUseAPI": [], "Fixed commit": "a9d83bdcd994910c44469d72298958a007b21d0d", "Url": "https://api.github.com/repos/UniversalMediaServer/UniversalMediaServer", "Date": "2017-09-24T12:29:05Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.provider.Settings.canDrawOverlays(this)) { triggerDialog(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5302/buggy-version/app.src.main.java.com.adam.app.demoset.DemoFloatingDialogAct.java", "BodyUseAPI": [], "Fixed commit": "316e0db5c39feae136e3121a3a516241613b37c9", "Url": "https://api.github.com/repos/doremichen/demo_set", "Date": "2018-10-01T06:44:08Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (activationCondition(entry.getConfig())) { entry.activate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2719/buggy-version/storage.src.main.java.org.openbase.jul.storage.registry.ActivatableEntryRegistrySynchronizer.java", "BodyUseAPI": ["ENTRY.activate()"], "Fixed commit": "c186e3ce78eef865ed53baac500fe2d622786c35", "Url": "https://api.github.com/repos/openbase/jul", "Date": "2018-10-09T17:14:46Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.util.PsiTreeUtil.prevVisibleLeaf(org.ballerinalang.plugins.idea.psi.reference.BallerinaNameReferenceReference)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (prevVisibleLeaf instanceof com.intellij.psi.impl.source.tree.LeafPsiElement) { if ((((com.intellij.psi.impl.source.tree.LeafPsiElement) (prevVisibleLeaf)).getElementType()) == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.DECIMAL_INTEGER_LITERAL)) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/895/buggy-version/src.main.java.org.ballerinalang.plugins.idea.psi.reference.BallerinaNameReferenceReference.java", "BodyUseAPI": [], "Fixed commit": "994697704d4a3c25362b839451a6fce5f411fabd", "Url": "https://api.github.com/repos/Shan1024/ballerina-idea-plugin", "Date": "2018-05-01T11:45:18Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.util.PsiTreeUtil.getParentOfType(com.intellij.psi.PsiElement,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tempParent != null) && (tempParent.equals(globalVariableDefinition))) { com.intellij.psi.PsiElement prevVisibleLeaf = com.intellij.psi.util.PsiTreeUtil.prevVisibleLeaf(position); if (!((prevVisibleLeaf instanceof com.intellij.psi.impl.source.tree.LeafPsiElement) && ((((com.intellij.psi.impl.source.tree.LeafPsiElement) (prevVisibleLeaf)).getElementType()) == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.DECIMAL_INTEGER_LITERAL)))) { org.ballerinalang.plugins.idea.completion.BallerinaCompletionUtils.addValueTypesAsLookups(result); org.ballerinalang.plugins.idea.completion.BallerinaCompletionUtils.addReferenceTypesAsLookups(result); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/895/buggy-version/src.main.java.org.ballerinalang.plugins.idea.completion.BallerinaKeywordCompletionProvider.java", "BodyUseAPI": [], "Fixed commit": "994697704d4a3c25362b839451a6fce5f411fabd", "Url": "https://api.github.com/repos/Shan1024/ballerina-idea-plugin", "Date": "2018-05-01T11:45:18Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mode == 1) { frontier = new FrontierStack(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5632/buggy-version/14MazeSolver.MazeSolver.java", "BodyUseAPI": [], "Fixed commit": "db7dff2aab523d6c39ac328b53c6759516cf3034", "Url": "https://api.github.com/repos/ichasen/MKS22X", "Date": "2018-05-14T23:14:55Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mode == 0) { frontier = new FrontierQueue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5632/buggy-version/14MazeSolver.MazeSolver.java", "BodyUseAPI": [], "Fixed commit": "db7dff2aab523d6c39ac328b53c6759516cf3034", "Url": "https://api.github.com/repos/ichasen/MKS22X", "Date": "2018-05-14T23:14:55Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mode == 2) { frontier = new FrontierPriorityQueue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5632/buggy-version/14MazeSolver.MazeSolver.java", "BodyUseAPI": [], "Fixed commit": "db7dff2aab523d6c39ac328b53c6759516cf3034", "Url": "https://api.github.com/repos/ichasen/MKS22X", "Date": "2018-05-14T23:14:55Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (csvHeader == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1451/buggy-version/src.com.easycsv.utils.EasyCSV.java", "BodyUseAPI": [], "Fixed commit": "1a90c25d274a407aa310fab16c7463f0e78f30be", "Url": "https://api.github.com/repos/praveenk007/easy-csv", "Date": "2018-05-27T17:13:16Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (csvHeader == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1451/buggy-version/src.com.easycsv.utils.EasyCSV.java", "BodyUseAPI": [], "Fixed commit": "1a90c25d274a407aa310fab16c7463f0e78f30be", "Url": "https://api.github.com/repos/praveenk007/easy-csv", "Date": "2018-05-27T17:13:16Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (extensions != null) { attributes.put(io.streamzi.cloudevents.impl.CloudEventImpl.EXTENSIONS_KEY, extensions); }else { attributes.put(io.streamzi.cloudevents.impl.CloudEventImpl.EXTENSIONS_KEY, new java.util.LinkedHashMap()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/15/buggy-version/api.src.main.java.io.streamzi.cloudevents.impl.CloudEventImpl.java", "BodyUseAPI": ["java.util.Map<java.lang.String, ? super java.lang.Object>.put(java.lang.String,java.util.Map)"], "Fixed commit": "d0e3209f254f4f9e7dba9d1387dcf5213941eb25", "Url": "https://api.github.com/repos/sjwoodman/jcloudevents", "Date": "2018-06-19T13:29:08Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (extensions != null) { attributes.put(io.streamzi.cloudevents.impl.CloudEventImpl.EXTENSIONS_KEY, extensions); }else { attributes.put(io.streamzi.cloudevents.impl.CloudEventImpl.EXTENSIONS_KEY, new java.util.LinkedHashMap()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/15/buggy-version/api.src.main.java.io.streamzi.cloudevents.impl.CloudEventImpl.java", "BodyUseAPI": [], "Fixed commit": "d0e3209f254f4f9e7dba9d1387dcf5213941eb25", "Url": "https://api.github.com/repos/sjwoodman/jcloudevents", "Date": "2018-06-19T13:29:08Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.capgemini.domain.ApartmentEntity.getMainOwner()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (mainOwner != null) { apartmentTO.setMainOwner(mainOwner.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6222/buggy-version/src.main.java.com.capgemini.mappers.ApartmentMapper.java", "BodyUseAPI": ["com.capgemini.types.ApartmentTO.setMainOwner(mainOwner.getId())", "com.capgemini.domain.ClientEntity.getId()"], "Fixed commit": "281ddfbfa867929fc4d0681f26852221eafffc6b", "Url": "https://api.github.com/repos/kredki/apartments", "Date": "2018-08-26T20:29:57Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (result == null) { ptr.set(ByteUtil.EMPTY_BYTE_ARRAY); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5350/buggy-version/phoenix-core.src.main.java.org.apache.phoenix.expression.aggregator.PercentileDiscClientAggregator.java", "BodyUseAPI": [], "Fixed commit": "2e9650782db410b82b72440f1d30a2d962b4f811", "Url": "https://api.github.com/repos/CallFire/phoenix", "Date": "2018-04-12T12:46:43Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mergedMap.size()) == 0) { return resBody; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/33/buggy-version/src.main.java.com.elasticsearchcache.service.CacheService.java", "BodyUseAPI": [], "Fixed commit": "619e1dba80e0fee447193fa60670cfeecc382a08", "Url": "https://api.github.com/repos/lks21c/elasticsearch-cache", "Date": "2018-01-18T02:01:29Z"},
{"Line": "=>532", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (subProtocol.equals(com.dandymadeproductions.lindyframe.datasource.ConnectionInstance.DERBY)) { if ((driver.indexOf(\"EmbeddedDriver\")) != (-1)) { if ((databaseShutdownString.toLowerCase(java.util.Locale.ENGLISH).indexOf(\"memory:\")) != (-1)) { if (debug) java.lang.System.out.println((description + \" (CI) Dropping Derby Memory Database\")); dbConnection = java.sql.DriverManager.getConnection((databaseShutdownString + \";drop=true\")); dbConnection.close(); }else { if (debug) java.lang.System.out.println((description + \" (CI) Shutting Down Derby Embedded Database\")); dbConnection = java.sql.DriverManager.getConnection(\"jdbc:derby:;shutdown=true\"); dbConnection.close(); } } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/683/buggy-version/src.com.dandymadeproductions.lindyframe.datasource.ConnectionInstance.java", "BodyUseAPI": [], "Fixed commit": "b22f3d967578131d2d5bf5a91ef9239f63c399c1", "Url": "https://api.github.com/repos/danap/lindyframe", "Date": "2018-04-05T22:06:01Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sensorEvent.values[0]) == 1.0F) { (steps)++; android.util.Log.i(\"XXXXX STEPS: \", (\"\" + (steps))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5138/buggy-version/app.src.main.java.com.example.aline.mmp.StepCounter.java", "BodyUseAPI": [], "Fixed commit": "db6ff4c1b59355d90a6ffb14d0487ad9370e774c", "Url": "https://api.github.com/repos/Aline-Jannika/MMP", "Date": "2018-09-03T10:06:25Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event instanceof com.ibm.ws.logging.data.GenericData) { return com.ibm.ws.logging.collector.CollectorJsonUtils1_1.jsonifyGCEvent((-1), wlpUserDir, serverName, serverHostName, CollectorConstants.GC_EVENT_TYPE, event, tags); }else { return com.ibm.ws.logging.collector.CollectorJsonUtils1_1.jsonifyGCEvent(serverHostName, wlpUserDir, serverName, ((com.ibm.ws.health.center.data.HCGCData) (event)), tags); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2403/buggy-version/dev.com.ibm.ws.logging.src.com.ibm.ws.logging.collector.CollectorJsonUtils1_1.java", "BodyUseAPI": ["com.ibm.ws.logging.collector.CollectorJsonUtils1_1.jsonifyGCEvent(int,java.lang.String,java.lang.String,java.lang.String,CollectorConstants.GC_EVENT_TYPE,java.lang.Object,java.lang.String[])"], "Fixed commit": "988b2ada83d8d46cb65cd2b5cf3906999ed04b5b", "Url": "https://api.github.com/repos/aarb1/open-liberty", "Date": "2018-01-23T15:24:44Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event instanceof com.ibm.ws.logging.data.GenericData) { return com.ibm.ws.logging.collector.CollectorJsonUtils.jsonifyGCEvent((-1), wlpUserDir, serverName, serverHostName, CollectorConstants.GC_EVENT_TYPE, event, tags); }else { return com.ibm.ws.logging.collector.CollectorJsonUtils.jsonifyGCEvent(serverHostName, wlpUserDir, serverName, ((com.ibm.ws.health.center.data.HCGCData) (event)), tags); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2403/buggy-version/dev.com.ibm.ws.logging.src.com.ibm.ws.logging.collector.CollectorJsonUtils.java", "BodyUseAPI": ["com.ibm.ws.logging.collector.CollectorJsonUtils.jsonifyGCEvent(int,java.lang.String,java.lang.String,java.lang.String,CollectorConstants.GC_EVENT_TYPE,java.lang.Object,java.lang.String[])"], "Fixed commit": "988b2ada83d8d46cb65cd2b5cf3906999ed04b5b", "Url": "https://api.github.com/repos/aarb1/open-liberty", "Date": "2018-01-23T15:24:44Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((measurementMap) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/409/buggy-version/app.src.main.java.com.acacia.iotken.acacia.entity.WayPointData.java", "BodyUseAPI": [], "Fixed commit": "3d7c55195b26e5f3950f14ca92cf5517ff8eec82", "Url": "https://api.github.com/repos/IoTken/acacia-android", "Date": "2018-07-08T02:34:03Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (logout != null) { mv.addObject(\"logoutMsg\", \"logging out\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9862/buggy-version/onlineshopping.src.main.java.net.ssh.onlineshopping.controller.pageController.java", "BodyUseAPI": [], "Fixed commit": "dcaec8866481a389e75047ef9a7e21b72950a21a", "Url": "https://api.github.com/repos/Sheriff40/online-shopping", "Date": "2018-10-11T03:50:25Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((snake.getDirection()) != (DIRECTION.up)) snake.setDirection(DIRECTION.down);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7876/buggy-version/snake.src.Game.TAdapter.java", "BodyUseAPI": ["Game.Snake.setDirection(DIRECTION.down)"], "Fixed commit": "12e85c640351f01219d4d42d46912f66420dd6dd", "Url": "https://api.github.com/repos/seleniusmoell/snake", "Date": "2018-05-03T18:31:33Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((snake.getDirection()) != (DIRECTION.right)) snake.setDirection(DIRECTION.left);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7876/buggy-version/snake.src.Game.TAdapter.java", "BodyUseAPI": ["Game.Snake.setDirection(DIRECTION.left)"], "Fixed commit": "12e85c640351f01219d4d42d46912f66420dd6dd", "Url": "https://api.github.com/repos/seleniusmoell/snake", "Date": "2018-05-03T18:31:33Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((snake.getDirection()) != (DIRECTION.down)) snake.setDirection(DIRECTION.up);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7876/buggy-version/snake.src.Game.TAdapter.java", "BodyUseAPI": ["Game.Snake.setDirection(DIRECTION.up)"], "Fixed commit": "12e85c640351f01219d4d42d46912f66420dd6dd", "Url": "https://api.github.com/repos/seleniusmoell/snake", "Date": "2018-05-03T18:31:33Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((snake.getDirection()) != (DIRECTION.left)) snake.setDirection(DIRECTION.right);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7876/buggy-version/snake.src.Game.TAdapter.java", "BodyUseAPI": ["Game.Snake.setDirection(DIRECTION.right)"], "Fixed commit": "12e85c640351f01219d4d42d46912f66420dd6dd", "Url": "https://api.github.com/repos/seleniusmoell/snake", "Date": "2018-05-03T18:31:33Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4620/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "a10eb330f009b73a53f4b119974a07d16133af68", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (userList.get(userIndexSearch(currentUserID)).getStatus().equals(\"ready\")) { error(currentUserID, \"Unknown team\", \"lobby\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8405/buggy-version/src.main.java.scrabble.server.controllers.gameEngine.GameProcess.java", "BodyUseAPI": ["scrabble.server.controllers.gameEngine.GameProcess.error(int,java.lang.String,java.lang.String)"], "Fixed commit": "e2eff1b0e6754f981adffec2b85c3502afea4e83", "Url": "https://api.github.com/repos/MerlinLee/ScrabbleProject", "Date": "2018-10-11T12:50:30Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flag) { index = listPreference.findIndexOfValue(stringValue); }else { index = listPreference.findIndexOfValue(com.rugged.tuberculosisapp.settings.LanguageHelper.getCurrentLocale()); listPreference.setValueIndex(index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3848/buggy-version/TuberculosisApp.app.src.main.java.com.rugged.tuberculosisapp.settings.MainPreferenceFragment.java", "BodyUseAPI": [], "Fixed commit": "dfa7471c8b98bee9dfd7198aa507ea4e6456fd86", "Url": "https://api.github.com/repos/RUGSoftEng/2018-Tuberculosis-Android", "Date": "2018-03-30T18:29:03Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(goConfigService.isUserAdmin(currentUser))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1321/buggy-version/server.src.main.java.com.thoughtworks.go.config.update.CreatePipelineConfigCommand.java", "BodyUseAPI": [], "Fixed commit": "ed08d5f23c3d5a613b031a057ef35f0cc4c31d1b", "Url": "https://api.github.com/repos/varshavaradarajan/gocd", "Date": "2018-03-01T10:46:02Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["growthcraft.core.shared.legacy.FluidContainerRegistry.drainFluidContainer(net.minecraft.item.ItemStack)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (newContainer == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7135/buggy-version/src.main.java.growthcraft.core.shared.handlers.FluidHandlerContainerItemWrapper.java", "BodyUseAPI": [], "Fixed commit": "9c1c8465b59e772c3aa6ff5c7d089e796f5222b1", "Url": "https://api.github.com/repos/Sunconure11/Growthcraft-1.12", "Date": "2018-06-02T10:12:52Z"},
{"Line": "=>1049", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.stanford.epad.epadws.handlers.dicom.DSOUtil.getPixelValuesAsArray(com.pixelmed.display.SourceImage,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((mask[j]) == 1) { voxelCount++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8214/buggy-version/src.main.java.edu.stanford.epad.epadws.handlers.dicom.DSOUtil.java", "BodyUseAPI": [], "Fixed commit": "0e6cdf1a10bf809bdb1555a302648e05ca91ace9", "Url": "https://api.github.com/repos/RubinLab/epad-ws", "Date": "2018-05-18T15:23:54Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((chip.getOutput(0)) != (chip.getInput(0))) { chip.setOutput(0, chip.getInput(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5976/buggy-version/src.main.java.com.sk89q.craftbook.mechanics.ic.gates.logic.Repeater.java", "BodyUseAPI": ["com.sk89q.craftbook.mechanics.ic.ChipState.getInput(int)", "com.sk89q.craftbook.mechanics.ic.ChipState.setOutput(int,chip.getInput(0))"], "Fixed commit": "785c08320ad5359f5a84093fca18e3cf4c9752c4", "Url": "https://api.github.com/repos/EngineHub/CraftBook", "Date": "2018-08-20T11:40:22Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.block.Block.getBlockData()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (data instanceof org.bukkit.block.data.AnaloguePowerable) { return (((org.bukkit.block.data.AnaloguePowerable) (data)).getPower()) > 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5976/buggy-version/src.main.java.com.sk89q.craftbook.mechanics.ic.AbstractChipState.java", "BodyUseAPI": [], "Fixed commit": "785c08320ad5359f5a84093fca18e3cf4c9752c4", "Url": "https://api.github.com/repos/EngineHub/CraftBook", "Date": "2018-08-20T11:40:22Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) { android.os.Parcel parcel = android.os.Parcel.obtain(); _task.writeToParcel(parcel, 0); parcel.setDataPosition(0); _intent = new android.content.Intent(_ctx, example.vzdornov_na.todolistAssistant.alarm.AlarmReceiver.class); _intent.putExtra(example.vzdornov_na.todolistAssistant.model.ModelTask.class.getCanonicalName(), parcel.marshall()); }else { _intent = new android.content.Intent(_ctx, example.vzdornov_na.todolistAssistant.alarm.AlarmReceiver.class); _intent.putExtra(example.vzdornov_na.todolistAssistant.model.ModelTask.class.getCanonicalName(), _task); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2175/buggy-version/app.src.main.java.example.vzdornov_na.todolistAssistant.alarm.AlarmHelper.java", "BodyUseAPI": [], "Fixed commit": "98f8df3cce8969837deaf2e2f80ccaa4f725332b", "Url": "https://api.github.com/repos/VzdornovNA88/ToDoList", "Date": "2018-09-27T13:13:36Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) { byte[] byteArrayExtra = intent.getByteArrayExtra(example.vzdornov_na.todolistAssistant.model.ModelTask.class.getCanonicalName()); android.os.Parcel parcel = android.os.Parcel.obtain(); parcel.unmarshall(byteArrayExtra, 0, byteArrayExtra.length); parcel.setDataPosition(0); _task = ModelTask.CREATOR.createFromParcel(parcel); }else { _task = intent.getParcelableExtra(example.vzdornov_na.todolistAssistant.model.ModelTask.class.getCanonicalName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2175/buggy-version/app.src.main.java.example.vzdornov_na.todolistAssistant.alarm.AlarmReceiver.java", "BodyUseAPI": [], "Fixed commit": "98f8df3cce8969837deaf2e2f80ccaa4f725332b", "Url": "https://api.github.com/repos/VzdornovNA88/ToDoList", "Date": "2018-09-27T13:13:36Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(iter.hasNext())) { atEOF = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3696/buggy-version/src.main.java.io.anserini.collection.CarCollection.java", "BodyUseAPI": [], "Fixed commit": "3524b4b78f6743970f960699754302c829b150b3", "Url": "https://api.github.com/repos/Victor0118/Anserini", "Date": "2018-08-22T23:30:13Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((screamofwoods.weatherme.MainActivity.jobScheduler) != null) screamofwoods.weatherme.MainActivity.jobScheduler.cancel(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5261/buggy-version/app.src.main.java.screamofwoods.weatherme.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "77d4c0e9f458e301c10b3d27eea0ae903fc6aee9", "Url": "https://api.github.com/repos/dimitev/WeatherMe", "Date": "2018-05-12T11:53:04Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(pair.getA().equals(pair.getB()))) { newPairs.add(new java.util.ArrayList<>(java.util.Arrays.asList(pair))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4184/buggy-version/src.main.java.com.selbovi.Puzzle.java", "BodyUseAPI": ["java.util.List<java.util.List<com.selbovi.Puzzle.Pair>>.add(java.util.ArrayList<>)", "java.util.Arrays.asList(com.selbovi.Puzzle.Pair)"], "Fixed commit": "f259b60b528e96d4b40c8f8322f7ccfe13a34165", "Url": "https://api.github.com/repos/selbovi/postalPuzzle", "Date": "2018-08-20T16:11:22Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getTimeInMillis()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((val > iNow) && (val < (iNow + maxdur))) param.args[i] = java.util.Calendar.getInstance().getTimeInMillis();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3630/buggy-version/app.src.main.java.ma.wanam.youtubeadaway.BFAsync.java", "BodyUseAPI": [], "Fixed commit": "4fbe1124aed5db61c2d3b46bcc616f19eaa00487", "Url": "https://api.github.com/repos/ChristophPech/YouTubeAdAway", "Date": "2018-08-31T09:50:44Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lastMove == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9432/buggy-version/src.main.java.com.pl.mychess.domain.logic.CustomMovesValidator.java", "BodyUseAPI": [], "Fixed commit": "9367327684a21d6d0e0f5d26752174b1618958fb", "Url": "https://api.github.com/repos/dziewuls/myChess", "Date": "2018-10-02T20:36:10Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(right.get((l - 1)).get_string().equals(\"\"))) { left_temp.add(new compare_algorithm.String_object(\"\", String_object.Modified_status.DIFFER)); right_temp.add(new compare_algorithm.String_object(right.get((l - 1)).get_string(), String_object.Modified_status.DIFFER)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6410/buggy-version/sample_dif.src.compare_algorithm.Compare_util_string_list.java", "BodyUseAPI": ["java.util.List<compare_algorithm.String_object>.get(int)", "java.util.List<compare_algorithm.String_object>.add(compare_algorithm.String_object)", "right.get((l - 1)).get_string()"], "Fixed commit": "3fae1cf31da64f3521c8b683da5746d8bb28167f", "Url": "https://api.github.com/repos/lenny-kong/se_termproj", "Date": "2018-06-07T09:00:19Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7295/buggy-version/app.src.main.java.com.github.simonoppowa.tothemoon_tracker.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "89721a22e0915db66c08fdff337873d98a7e7438", "Url": "https://api.github.com/repos/simonoppowa/ToTheMoon-TrackerApp", "Date": "2018-09-29T09:33:01Z"},
{"Line": "=>811", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (CommonConstants.GBT_ALG_NAME.equalsIgnoreCase(modelConfig.getTrain().getAlgorithm())) { if (ml.shifu.shifu.core.dtrain.dt.IndependentTreeModel.isValidGbtScoreConvertStrategy(evalConfig.getGbtScoreConvertStrategy())) { if (Constants.GBT_SCORE_RAW_CONVETER.equalsIgnoreCase(evalConfig.getGbtScoreConvertStrategy())) { return true; } }else { if (!(evalConfig.getGbtConvertToProb())) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7704/buggy-version/src.main.java.ml.shifu.shifu.core.processor.EvalModelProcessor.java", "BodyUseAPI": [], "Fixed commit": "41796d893b98693f7284af8b16f902bcbfc3d38e", "Url": "https://api.github.com/repos/huzza/shifu", "Date": "2018-01-03T08:27:11Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lang) == null) { lang = DLNAMediaLang.UND; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7754/buggy-version/src.main.java.net.pms.dlna.DLNAMediaSubtitle.java", "BodyUseAPI": [], "Fixed commit": "7c66d448b05272b05845ab43c9f3757fdf2cbcdd", "Url": "https://api.github.com/repos/UniversalMediaServer/UniversalMediaServer", "Date": "2017-09-24T12:29:05Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.keycloak.util.TokenUtil.hasScope(scopeParam, OAuth2Constants.SCOPE_OPENID)) { return scopeParam; }else { return ((org.keycloak.OAuth2Constants.SCOPE_OPENID) + \" \") + scopeParam; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/184/buggy-version/core.src.main.java.org.keycloak.util.TokenUtil.java", "BodyUseAPI": [], "Fixed commit": "9af06024d52b496c97724abf8cf5724d28832be3", "Url": "https://api.github.com/repos/mposolda/keycloak", "Date": "2018-03-16T13:08:01Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (topics != null) { java.util.List<java.lang.String> newTopics = topics.stream().map(( topic) -> (za.org.grassroot.core.domain.TagHolder.TOPIC_PREFIX) + topic).collect(java.util.stream.Collectors.toList()); addTags(newTopics); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4485/buggy-version/grassroot-core.src.main.java.za.org.grassroot.core.domain.TagHolder.java", "BodyUseAPI": ["java.util.stream.Stream<java.lang.String>.map(java.util.function.Function<? super java.lang.String, ? extends java.lang.String>)", "java.util.Set<java.lang.String>.stream()", "java.util.stream.Stream<java.lang.String>.collect(java.util.stream.Collector<java.lang.String, ?, java.util.List<java.lang.String>>)"], "Fixed commit": "63935a0eefb4c435941441acd9521e804551fa6c", "Url": "https://api.github.com/repos/grassrootza/grassroot-platform", "Date": "2018-02-27T10:38:40Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((device.notesPackage.name.length()) < 1) { device.notesPackage.name = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7173/buggy-version/src.map.HashMap.java", "BodyUseAPI": [], "Fixed commit": "c1d1704d2eb9e195edfc000e660c9a07ab13e9aa", "Url": "https://api.github.com/repos/Jasonleh99/Network-Database", "Date": "2018-09-28T17:53:10Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fichero.exists()) { return destFileFinal; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1283/buggy-version/fuentes.ERUtil.java", "BodyUseAPI": [], "Fixed commit": "96d91c4d1919fe460af886ad90e4e086d5e8047f", "Url": "https://api.github.com/repos/eneboo/eneboo-reports", "Date": "2018-07-26T11:05:37Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jsonFile.getParentFile()) != null) { jsonFile.getParentFile().mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6878/buggy-version/src.main.java.org.github.projectStructurePlugin.GenerateMojo.java", "BodyUseAPI": ["java.io.File.mkdirs()", "java.io.File.getParentFile()"], "Fixed commit": "cd2a9475fc4a7cf49a985c8decd444f3553b2312", "Url": "https://api.github.com/repos/Zagorh/project-structure-maven-plugin", "Date": "2018-07-31T17:30:24Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jsonFile.exists()) { jsonFile.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6878/buggy-version/src.main.java.org.github.projectStructurePlugin.GenerateMojo.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "cd2a9475fc4a7cf49a985c8decd444f3553b2312", "Url": "https://api.github.com/repos/Zagorh/project-structure-maven-plugin", "Date": "2018-07-31T17:30:24Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ruffian.library.RTextView.getBackground()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (unset && (drawable instanceof android.graphics.drawable.ColorDrawable)) { int color = ((android.graphics.drawable.ColorDrawable) (drawable)).getColor(); setStateBackgroundColor(color, color, color); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4096/buggy-version/library.src.main.java.com.ruffian.library.RTextView.java", "BodyUseAPI": [], "Fixed commit": "1769bc92433c10f0f6b426bb3049294ec0dd3a5b", "Url": "https://api.github.com/repos/RuffianZhong/RTextView", "Date": "2018-04-13T07:30:15Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(variableIdToSat4JVarId.contains(variableId))) { variableIdToSat4JVarId.put(variableId, solver.nextFreeVarId(true)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3325/buggy-version/org.emoflon.ibex.tgg.core.runtime.src.org.emoflon.ibex.tgg.util.ilp.Sat4JWrapper.java", "BodyUseAPI": ["gnu.trove.map.hash.TIntIntHashMap.put(int,solver.nextFreeVarId(true))"], "Fixed commit": "69e55fad3119b9764f69accd360b1d1244093309", "Url": "https://api.github.com/repos/eMoflon/emoflon-ibex", "Date": "2018-04-25T14:25:38Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.kymjs.common.StringUtils.isEmpty(order_number)) { mView.errorMsg(com.common.cklibrary.common.KJActivityStack.create().topActivity().getString(R.string.serverError), 0); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6452/buggy-version/SillyChildGuide.app.src.main.java.com.yinglan.scg.orderreceiving.CharterDetailsPresenter.java", "BodyUseAPI": [], "Fixed commit": "30bb9e931ec7ff1faae739122c36d27059f36e5c", "Url": "https://api.github.com/repos/921668753/SillyChildGuide-Android", "Date": "2018-09-20T03:42:36Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((in.available()) < 1024) { in = new java.io.BufferedInputStream(in); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2983/buggy-version/src.main.java.de.thetaphi.forbiddenapis.AsmUtils.java", "BodyUseAPI": [], "Fixed commit": "e9c2fe49a911a987b4bce5c6c96fe2f4457b7b91", "Url": "https://api.github.com/repos/policeman-tools/forbidden-apis", "Date": "2018-03-27T19:57:27Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result > 0) { java.lang.System.out.printf(\"Initial concentration = %,.3f.\\n\", result); }else { java.lang.System.out.println(result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9129/buggy-version/src.main.java", "BodyUseAPI": ["java.io.PrintStream.println(double)", "java.io.PrintStream.printf(java.lang.String,double)"], "Fixed commit": "59ae9a7476a174e3411d502c87a53a2fe4cc9375", "Url": "https://api.github.com/repos/derekdkim/StockSolutionCalculator", "Date": "2018-09-12T03:42:44Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result > 0) { java.lang.System.out.printf(\"Final volume = %,.3f.\\n\", result); }else { java.lang.System.out.println(result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9129/buggy-version/src.main.java", "BodyUseAPI": ["java.io.PrintStream.printf(java.lang.String,double)", "java.io.PrintStream.println(double)"], "Fixed commit": "59ae9a7476a174e3411d502c87a53a2fe4cc9375", "Url": "https://api.github.com/repos/derekdkim/StockSolutionCalculator", "Date": "2018-09-12T03:42:44Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result > 0) { java.lang.System.out.printf(\"Final concentration = %,.3f.\\n\", result); }else { java.lang.System.out.println(result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9129/buggy-version/src.main.java", "BodyUseAPI": ["java.io.PrintStream.printf(java.lang.String,double)", "java.io.PrintStream.println(double)"], "Fixed commit": "59ae9a7476a174e3411d502c87a53a2fe4cc9375", "Url": "https://api.github.com/repos/derekdkim/StockSolutionCalculator", "Date": "2018-09-12T03:42:44Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result > 0) { java.lang.System.out.printf(\"Initial volume = %,.3f.\\n\", result); }else { java.lang.System.out.println(result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9129/buggy-version/src.main.java", "BodyUseAPI": ["java.io.PrintStream.printf(java.lang.String,double)", "java.io.PrintStream.println(double)"], "Fixed commit": "59ae9a7476a174e3411d502c87a53a2fe4cc9375", "Url": "https://api.github.com/repos/derekdkim/StockSolutionCalculator", "Date": "2018-09-12T03:42:44Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (action == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3365/buggy-version/app.src.main.java.it.mfx.shopaholic.ShopApplication.java", "BodyUseAPI": [], "Fixed commit": "19ebe2a9565be9f27f7e3ae9ed9935240a01e172", "Url": "https://api.github.com/repos/mfoschian/ShopAholic", "Date": "2018-07-30T14:16:01Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alicp.jetcache.CacheLoader<K, V>.load(K)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((v != null) || (config.isCacheNullValue())) { cache.PUT(key, v); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/472/buggy-version/jetcache-core.src.main.java.com.alicp.jetcache.RefreshCache.java", "BodyUseAPI": ["com.alicp.jetcache.RefreshCache.RefreshTask.PUT(K,V)"], "Fixed commit": "ad8d0b010a9234691160e91068f76fcab13ed07c", "Url": "https://api.github.com/repos/alibaba/jetcache", "Date": "2018-02-02T07:09:42Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.levelup.palabre.inoreaderforpalabre.inoreader.Chain.proceed(requestBuilder.build())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((origResponse.code()) == 403) { refreshToken(); okhttp3.Request newAuthenticationRequest = originalRequest.newBuilder().addHeader(\"Authorization\", (\"Bearer \" + (accessToken))).build(); return chain.proceed(newAuthenticationRequest); }else { return origResponse; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7102/buggy-version/InoreaderForPalabre.src.main.java.com.levelup.palabre.inoreaderforpalabre.inoreader.InoreaderService.java", "BodyUseAPI": [], "Fixed commit": "f1230156c734d9eaee7c452853b7dda59b5f6105", "Url": "https://api.github.com/repos/levelup/palabre-extensions", "Date": "2018-01-22T07:52:25Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cla.file) != null) { inputFile = new java.io.File(cla.file); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8048/buggy-version/src.main.java.ru.samyilov.App.java", "BodyUseAPI": [], "Fixed commit": "724f422511b58b88bf1b239679f2d4cd9dce3d1b", "Url": "https://api.github.com/repos/Eugehabatikov/Eugenii_Samyilov_testing_project_task2", "Date": "2018-05-09T11:41:40Z"},
{"Line": "=>874", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gameTimerTask) != null) { gameTimerTask.cancel(); timer.purge(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4842/buggy-version/2048.app.src.main.java.com.example.tristanglaes.a2048.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "5d72c462d59a6cb14ece49df7cdafa2cb6b922b3", "Url": "https://api.github.com/repos/tglaes/androidDev", "Date": "2018-03-23T19:30:19Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.world.getWorldCounter()) - (this.startCounter)) > 120) { this.destroy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8320/buggy-version/Source.Server.ServerObjectShown.java", "BodyUseAPI": [], "Fixed commit": "cdb85b476241c28ec468048ff7c4badc56bea560", "Url": "https://api.github.com/repos/Williamxu98/WorldQuestOnline", "Date": "2018-04-18T08:59:06Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mFundType.equals(\"DEPOSIT\")) { mTvTitle.setText(getResources().getString(R.string.title_deposit_records)); }else if (mFundType.equals(\"WITHDRAW\")) { mTvTitle.setText(getResources().getString(R.string.title_withdraw_records)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1802/buggy-version/app.src.main.java.com.cybexmobile.activity.DepositWithdrawRecordsActivity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "118098b012c616cffc4150a6d9efdb3e53121517", "Url": "https://api.github.com/repos/CybexDex/cybex-android", "Date": "2018-08-05T05:09:58Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.misterY.server.Sessions.getSessionByUser(de.misterY.server.User)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(session.isActive())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/328/buggy-version/src.de.misterY.server.GameServer.java", "BodyUseAPI": [], "Fixed commit": "7bf6b2669c5a75070f6613b750f9ae163da00f5f", "Url": "https://api.github.com/repos/Jonicho/MisterY", "Date": "2018-04-14T19:43:11Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (o != null) { if (node.getValue().equals(o)) { return true; } }else { if ((node.getValue()) == null) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5377/buggy-version/src.datastructure.list.CustomLinkedList.java", "BodyUseAPI": ["node.getValue().equals(java.lang.Object)"], "Fixed commit": "2d7ff910fdf4b0d56bd0e136630561fb30530050", "Url": "https://api.github.com/repos/kredki/arrays", "Date": "2018-07-10T08:16:47Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (o != null) { if (node.getValue().equals(o)) { return true; } }else { if ((node.getValue()) == null) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5377/buggy-version/src.datastructure.list.CustomLinkedList.java", "BodyUseAPI": ["node.getValue().equals(java.lang.Object)"], "Fixed commit": "2d7ff910fdf4b0d56bd0e136630561fb30530050", "Url": "https://api.github.com/repos/kredki/arrays", "Date": "2018-07-10T08:16:47Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tempDescriptionS.equals(\"\")) { tempDescriptionS = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4283/buggy-version/app.src.main.java.yasanx.owitemtracker.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c9bbea1d5bccc928b8ead031b90bef03a8898f35", "Url": "https://api.github.com/repos/yasandev/Overwatch-Database-App", "Date": "2018-10-26T14:27:57Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.games.AnnotatedData<com.google.android.gms.games.leaderboard.LeaderboardScore>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (leaderboardScore != null) { score = leaderboardScore.getRawScore(); rank = leaderboardScore.getRank(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3024/buggy-version/android.src.google.GoogleLeaderboard.java", "BodyUseAPI": ["com.google.android.gms.games.leaderboard.LeaderboardScore.getRank()", "com.google.android.gms.games.leaderboard.LeaderboardScore.getRawScore()"], "Fixed commit": "a56558db8c79f8d2c2584be4125a3ce1374ddace", "Url": "https://api.github.com/repos/binogure-studio/godotandroid", "Date": "2018-04-29T13:24:57Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (text.getText().equals(\"\")) { x = -2; javax.swing.JOptionPane.showMessageDialog(null, \"Empty name set!\", \"Error\", javax.swing.JOptionPane.ERROR_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4607/buggy-version/Blatt05.Aufgabe04.EditGroupDialog.java", "BodyUseAPI": [], "Fixed commit": "b30153315bad6b54503e488ffa7c68af21a04ed4", "Url": "https://api.github.com/repos/Marco5de/PVS", "Date": "2018-05-22T12:58:53Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (text.getText().equals(\"\")) { x = -2; javax.swing.JOptionPane.showMessageDialog(null, \"Empty name set!\", \"Error\", javax.swing.JOptionPane.ERROR_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4607/buggy-version/SWC.gui.EditGroupDialog.java", "BodyUseAPI": [], "Fixed commit": "b30153315bad6b54503e488ffa7c68af21a04ed4", "Url": "https://api.github.com/repos/Marco5de/PVS", "Date": "2018-05-22T12:58:53Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (srEntry.getProvider().equals(entry.getProviderSystem())) { srList.add(srEntry); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8517/buggy-version/orchestrator.src.main.java.eu.arrowhead.core.orchestrator.OrchestratorDriver.java", "BodyUseAPI": ["java.util.List<eu.arrowhead.common.database.ServiceRegistryEntry>.add(eu.arrowhead.common.database.ServiceRegistryEntry)"], "Fixed commit": "91d522215083c7073f77e566d7e35a3ff893cfb2", "Url": "https://api.github.com/repos/hegeduscs/arrowhead", "Date": "2018-02-06T10:32:33Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shoudCancelStream) { innerController.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4128/buggy-version/google-cloud-bigtable.src.main.java.com.google.cloud.bigtable.gaxx.reframing.ReframingResponseObserver.java", "BodyUseAPI": [], "Fixed commit": "525f9169c84fada6d16b11a471781e82cbddf2c4", "Url": "https://api.github.com/repos/ElliottBrossard/google-cloud-java", "Date": "2018-02-21T01:02:00Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.nukkit.entity.EntityLiving.getAirTicks()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (airTicks < 400) { setAirTicks(java.lang.Math.min(400, (airTicks + (tickDiff * 5)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7513/buggy-version/src.main.java.cn.nukkit.entity.EntityLiving.java", "BodyUseAPI": ["java.lang.Math.min(int,int)", "cn.nukkit.entity.EntityLiving.setAirTicks(int)"], "Fixed commit": "9a16334ee93c2d98e49222ba392543cb92539d67", "Url": "https://api.github.com/repos/PetteriM1/Nukkit-SuomiCraftPE", "Date": "2018-08-27T17:42:34Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(address)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/932/buggy-version/app.src.main.java.com.wallet.crypto.trustapp.entity.Address.java", "BodyUseAPI": [], "Fixed commit": "9497c2bf6fc5835b6583f60e3d43cc654e747200", "Url": "https://api.github.com/repos/CatWallet/cat-wallet-android", "Date": "2018-08-09T17:37:25Z"},
{"Line": "=>1696", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (microbat.util.PrimitiveUtils.isPrimitiveType(paramType)) { java.lang.String paramName = pStr.substring(((pStr.indexOf(\" \")) + 1), pStr.length()); microbat.model.variable.Param param = new microbat.model.variable.Param(paramType, paramName); paramList.add(param); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2691/buggy-version/microbat.src.main.microbat.codeanalysis.runtime.ProgramExecutor.java", "BodyUseAPI": [], "Fixed commit": "ea8aef6ff01ea60c804e8b174607cccf5e5d9012", "Url": "https://api.github.com/repos/llmhyy/microbat", "Date": "2018-02-21T08:43:04Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getUserVisibleHint()) { if (isLogin()) { initLoginedUI(); }else { initNotLoginUI(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/816/buggy-version/app.src.main.java.com.volume.candle.mine.fragment.MineFragment.java", "BodyUseAPI": [], "Fixed commit": "42aa18b28c4636808b04c044f5e94edebc8bf64a", "Url": "https://api.github.com/repos/PATHngping/canvolclient", "Date": "2018-10-07T16:38:21Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i != 0) { debut = debut + 2; pas = pas + 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3992/buggy-version/src.java.classes.Catalog.java", "BodyUseAPI": [], "Fixed commit": "2c2f6c3561c7e20b34fff6dab02d68adf7c60e35", "Url": "https://api.github.com/repos/EmilienG/monPremierGit", "Date": "2018-02-25T22:26:31Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (iValue instanceof java.lang.String) { if (iValue.toString().equals(\"\")) { return null; } return java.lang.Integer.parseInt(((java.lang.String) (iValue))); }else return ((java.lang.Number) (iValue)).intValue();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4492/buggy-version/core.src.main.java.com.orientechnologies.orient.core.metadata.schema.OType.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "0c0e0204f034d7b91c929fcbea6fcf78c2938bf2", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2018-05-22T05:17:15Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (configProperties.isHealthy()) { return org.eclipse.microprofile.health.HealthCheckResponse.named(com.fri.rso.fririders.auth.health.AuthServiceHealthCheck.class.getSimpleName()).up().build(); }else { return org.eclipse.microprofile.health.HealthCheckResponse.named(com.fri.rso.fririders.auth.health.AuthServiceHealthCheck.class.getSimpleName()).down().build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2150/buggy-version/src.main.java.com.fri.rso.fririders.auth.health.AuthServiceHealthCheck.java", "BodyUseAPI": [], "Fixed commit": "3c68aa649069e55d0268b2ac0f24eecdf93c2a42", "Url": "https://api.github.com/repos/fri-riders/auth", "Date": "2018-01-14T14:22:11Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (previousDate.isBefore(start.toLocalDate())) { previousDate = start.toLocalDate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7583/buggy-version/name.abuchen.portfolio.src.name.abuchen.portfolio.model.InvestmentPlan.java", "BodyUseAPI": ["java.time.LocalDateTime.toLocalDate()"], "Fixed commit": "8e3338ac29b6e8cfd40149aa6f6f6805765aac26", "Url": "https://api.github.com/repos/Ragas13/portfolio", "Date": "2018-10-17T10:49:34Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((context instanceof a3.com.convo.activities.PlayGameActivity) && (((a3.com.convo.activities.PlayGameActivity) (context)).isFinishing())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3489/buggy-version/app.src.main.java.a3.com.convo.adapters.CardAdapter.java", "BodyUseAPI": [], "Fixed commit": "5f9708eb74a6fa4ae8956d3da6c82186a135999d", "Url": "https://api.github.com/repos/alex-goodman/convo", "Date": "2018-08-01T23:59:01Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((width > (-1)) && (height > (-1))) { attributes = new android.print.PrintAttributes.Builder().setMediaSize(new android.print.PrintAttributes.MediaSize(\"Special\", \"Custom\", width, height)).setColorMode(PrintAttributes.COLOR_MODE_MONOCHROME).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/603/buggy-version/src.main.java.au.com.tyo.services.android.google.activity.CloudPrintDialog.java", "BodyUseAPI": ["new android.print.PrintAttributes.Builder().setMediaSize(new android.print.PrintAttributes.MediaSize(\"Special\", \"Custom\", width, height)).setColorMode(PrintAttributes.COLOR_MODE_MONOCHROME).build()", "new android.print.PrintAttributes.Builder().setMediaSize(new android.print.PrintAttributes.MediaSize(\"Special\", \"Custom\", width, height)).setColorMode(PrintAttributes.COLOR_MODE_MONOCHROME)", "android.print.PrintAttributes.Builder.setMediaSize(android.print.PrintAttributes.MediaSize)"], "Fixed commit": "f328ee5db146e7f5021f8337df68832fc62cbb9e", "Url": "https://api.github.com/repos/tyolab/CommonServicesDroid", "Date": "2018-01-09T11:27:05Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (appTheme) { tv.setTextColor(Color.WHITE); }else { tv.setTextColor(Color.BLACK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5940/buggy-version/app.src.main.java.aaacomms.aaa_app.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "48483c95104da89430bdd75392e130015635eace", "Url": "https://api.github.com/repos/MDBarrett/AAA_App", "Date": "2018-09-12T03:16:21Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (appTheme) { newBtn.setBackgroundResource(R.drawable.ic_add_photo_dark_background); }else { newBtn.setBackgroundResource(R.drawable.ic_add_photo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5940/buggy-version/app.src.main.java.aaacomms.aaa_app.JobSheetFragmentPhotos.java", "BodyUseAPI": [], "Fixed commit": "48483c95104da89430bdd75392e130015635eace", "Url": "https://api.github.com/repos/MDBarrett/AAA_App", "Date": "2018-09-12T03:16:21Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (n == ((input.length) - 1)) { input = this.reverseIndex(input, start, n); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6150/buggy-version/Chapter3.6.ReverseWords.java", "BodyUseAPI": ["ReverseWords.reverseIndex(char[],int,int)"], "Fixed commit": "f4a2682b508b734b1dfdde159180c369364043c1", "Url": "https://api.github.com/repos/tjiasan/Algorithms", "Date": "2018-01-10T22:01:30Z"},
{"Line": "=>718", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((domicileIdList.size()) == 0) { return com.hebiace.common.Response.createBySuccess(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2058/buggy-version/src.main.java.com.hebiace.service.impl.UploadServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "20f1413cc99dd12482b3f0b06af73698fe13d1f8", "Url": "https://api.github.com/repos/jaaaar/people", "Date": "2018-09-06T09:15:41Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (lastModifiedFile != null) { dto.setLastModifiedFile(lastModifiedFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4606/buggy-version/src.main.java.pl.edu.pw.ee.pyskp.documentworkflow.dtos.TaskInfoDTO.java", "BodyUseAPI": ["pl.edu.pw.ee.pyskp.documentworkflow.dtos.TaskInfoDTO.setLastModifiedFile(pl.edu.pw.ee.pyskp.documentworkflow.dtos.FileSummaryDTO)"], "Fixed commit": "6cd5fc9e013de8a0c246b5da0e52e544029507bc", "Url": "https://api.github.com/repos/piotter121/document-workflow-system-web-server", "Date": "2018-09-09T18:30:58Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((task.getLastModifiedFile()) != null) { modificationDate = task.getLastModifiedFile().getLatestVersion().getSaveDate(); lastModifiedFile = pl.edu.pw.ee.pyskp.documentworkflow.dtos.FileSummaryDTO.fromFileMetadata(task.getLastModifiedFile()); }else { modificationDate = task.getCreationDate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4606/buggy-version/src.main.java.pl.edu.pw.ee.pyskp.documentworkflow.dtos.TaskInfoDTO.java", "BodyUseAPI": ["task.getLastModifiedFile().getLatestVersion().getSaveDate()", "pl.edu.pw.ee.pyskp.documentworkflow.data.domain.Task.getLastModifiedFile()", "pl.edu.pw.ee.pyskp.documentworkflow.dtos.FileSummaryDTO.fromFileMetadata(task.getLastModifiedFile())", "pl.edu.pw.ee.pyskp.documentworkflow.data.domain.Task.getCreationDate()", "task.getLastModifiedFile().getLatestVersion()", "pl.edu.pw.ee.pyskp.documentworkflow.data.domain.Task.getLastModifiedFile()"], "Fixed commit": "6cd5fc9e013de8a0c246b5da0e52e544029507bc", "Url": "https://api.github.com/repos/piotter121/document-workflow-system-web-server", "Date": "2018-09-09T18:30:58Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((starsStr.length()) >= 3) { starsStr = starsStr.substring(0, 3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8710/buggy-version/app.src.main.java.com.jinjunhang.onlineclass.ui.cell.MainPageCourseCell.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "1c7cbdb699ac99bb12145b3f9e31637dcff3c2a5", "Url": "https://api.github.com/repos/jjhlzn/OnlineClassAndroid", "Date": "2018-07-05T01:17:47Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((line.length()) < 1) { clear(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9045/buggy-version/ftc_app-master.Team4042.src.main.java.org.firstinspires.ftc.team4042.drive.Cryptobox.java", "BodyUseAPI": [], "Fixed commit": "f3333a61770b111f9aa142d8a3ede59e612ae428", "Url": "https://api.github.com/repos/ghs-robotics/ftc_app2017", "Date": "2018-03-05T01:14:46Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.getPlayer().getBoard().unitAt(loc)) != null) && (this.getPlayer().getBoard().unitAt(loc).equals(\"Shrub\"))) { return false; }else { return (game.Board.distance(loc, this.location())) <= 6; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8152/buggy-version/TAO_REVIVED.src.units.BarrierWard.java", "BodyUseAPI": ["game.Board.distance(util.Location,this.location())"], "Fixed commit": "2c7457eb5a26c033d543919dd898cae4795c441c", "Url": "https://api.github.com/repos/ShiraYuuki/TAO_REVIVED", "Date": "2018-01-20T00:45:50Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.hintofbasil.hodl.database.objects.CoinSummary.buildFromCursor(android.database.Cursor)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((summary.getQuantity().signum()) > 0) { findViewById(R.id.coin_summary_price_missing).setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6918/buggy-version/app.src.main.java.com.github.hintofbasil.hodl.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "97d68043c36358677244bd1b8e079fdb1b1bd160", "Url": "https://api.github.com/repos/hintofbasil/Hodl", "Date": "2018-01-07T22:05:03Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.mappedByteBufferLocater.getByte((offset + 1))) == 0) { SQL_CODE = this.mappedByteBufferLocater.getInt((offset + 1), java.nio.ByteOrder.LITTLE_ENDIAN); }else { SQL_CODE = this.mappedByteBufferLocater.getInt((offset + 1), java.nio.ByteOrder.BIG_ENDIAN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9284/buggy-version/PcapDB.Core.src.pcapdb.core.packet.DrdaPacket.java", "BodyUseAPI": ["this.mappedByteBufferLocater.getInt(int,java.nio.ByteOrder)", "this.mappedByteBufferLocater.getInt(int,java.nio.ByteOrder)"], "Fixed commit": "3b4212243f1fcbe7fb8f3a36cef1117e92446e86", "Url": "https://api.github.com/repos/AndrewDi/PcapDB", "Date": "2018-08-15T00:16:25Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.enmasse.k8s.api.cache.KeyExtractor<T>.getKey(T)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((objects.get(key)) == null) { objects.put(key, t); }else { objects.replace(key, objects.get(key), t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1291/buggy-version/k8s-api.src.main.java.io.enmasse.k8s.api.cache.ObjectStore.java", "BodyUseAPI": ["java.util.Map<java.lang.String, T>.get(java.lang.String)", "java.util.Map<java.lang.String, T>.replace(java.lang.String,T,T)", "java.util.Map<java.lang.String, T>.put(java.lang.String,T)"], "Fixed commit": "c17a16b9166d859d98b4c3e83922400e23c88dbf", "Url": "https://api.github.com/repos/EnMasseProject/enmasse", "Date": "2018-03-07T23:55:34Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.fs.FileSystem.get(org.apache.hadoop.conf.Configuration)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(fs.exists(filePath))) { out = fs.create(filePath); }else { out = fs.append(filePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2348/buggy-version/src.main.java.edu.umn.cs.spatialHadoop.indexing.RTreeInserter.java", "BodyUseAPI": ["org.apache.hadoop.fs.FileSystem.append(org.apache.hadoop.fs.Path)", "org.apache.hadoop.fs.FileSystem.create(org.apache.hadoop.fs.Path)"], "Fixed commit": "2b7b091f0f6bfcaac5a43a45b4b78256b3c0182a", "Url": "https://api.github.com/repos/tinvukhac/spatialhadoop2", "Date": "2018-02-09T04:50:22Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (multiplierType == null) { multiplierType = (magicDamage) ? \"magic\" : \"physical\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9390/buggy-version/Magic.src.main.java.com.elmakers.mine.bukkit.action.builtin.DamageAction.java", "BodyUseAPI": [], "Fixed commit": "95064d876f32fdfa428b915c441aee4d71fdfd2c", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2018-03-25T05:44:19Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sample.Arbor.getHighestPriorityBoard()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((f.children.size()) == 0) { int j = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4730/buggy-version/src.sample.Arbor.java", "BodyUseAPI": [], "Fixed commit": "5ae7eeae37e45838a103bc8ad535768e85b3a724", "Url": "https://api.github.com/repos/kierandavidmccormick/Flow-Solver", "Date": "2018-04-26T22:33:32Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.ui.ide.IDE.openEditor(org.eclipse.ui.IWorkbenchPage,org.eclipse.core.resources.IFile,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (ed instanceof msi.gama.lang.gaml.ui.editor.GamlEditor) { ((msi.gama.lang.gaml.ui.editor.GamlEditor) (ed)).getAction(\"Format\").run(); ed.doSave(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4342/buggy-version/idees.gama.graphicalmodeling.src.idees.gama.features.modelgeneration.ModelGenerationFeature.java", "BodyUseAPI": ["org.eclipse.ui.IEditorPart.doSave(<nulltype>)"], "Fixed commit": "d4961c0a0c6b09bce8a61b301760baeab46f59a0", "Url": "https://api.github.com/repos/gama-platform/gama.graphical.modeling", "Date": "2018-07-27T14:02:04Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (H > 12) { holder.deadLineTime.setText(\"\ub9cc\ub8cc\"); }else { android.util.Log.i(\"OHH\", (\"H : \" + H)); holder.deadLineTime.setText(((HS + \":\") + MS)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8646/buggy-version/app.src.main.java.io.github.tlaabs.toast_sy.OnGoingBucketFragment.java", "BodyUseAPI": ["android.util.Log.i(java.lang.String,java.lang.String)"], "Fixed commit": "a1072d7f4020a37ab6bba2af2e1fb504a80302d4", "Url": "https://api.github.com/repos/tlaabs/Toast", "Date": "2018-05-23T16:18:38Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["clientBuilder.build().target(customUrlString).path(\"malicious\").queryParam(\"delay\", delay).queryParam(\"throwSystemException\", throwSystemException).queryParam(\"throwApplicationException\", throwApplicationException).request().get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((response.getStatus()) == (Response.Status.PAYMENT_REQUIRED.getStatusCode())) { throw new ch.ocram.microprofile.techdemo.frontend.SomeApplicationException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/270/buggy-version/frontend.src.main.java.ch.ocram.microprofile.techdemo.frontend.BackendClientWithTracing.java", "BodyUseAPI": [], "Fixed commit": "d34a27a29367bffc1506fc5e9d8a722ebe60e256", "Url": "https://api.github.com/repos/PoliM/microprofile-techdemo", "Date": "2018-10-24T15:44:53Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["clientBuilder.build().target(customUrlString).path(\"malicious\").queryParam(\"delay\", delay).queryParam(\"throwSystemException\", throwSystemException).queryParam(\"throwApplicationException\", throwApplicationException).request().get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((response.getStatusInfo().getFamily()) == (Response.Status.Family.SERVER_ERROR)) { throw new java.lang.RuntimeException(\"Server Error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/270/buggy-version/frontend.src.main.java.ch.ocram.microprofile.techdemo.frontend.BackendClientWithTracing.java", "BodyUseAPI": [], "Fixed commit": "d34a27a29367bffc1506fc5e9d8a722ebe60e256", "Url": "https://api.github.com/repos/PoliM/microprofile-techdemo", "Date": "2018-10-24T15:44:53Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (executionData.getGuild().getAudioManager().isConnected()) { executionData.getGuild().getAudioManager().closeAudioConnection(); }else { this.sendOutput(\"Cannot leave, as no current connection is active\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4838/buggy-version/theta-commands.src.main.java.com.srgood.reasons.impl.commands.main.audio.CommandAudioLeaveDescriptor.java", "BodyUseAPI": ["executionData.getGuild().getAudioManager().closeAudioConnection()", "com.srgood.reasons.impl.commands.main.audio.CommandAudioLeaveDescriptor.Executor.getGuild()", "executionData.getGuild().getAudioManager()"], "Fixed commit": "66e0598bf7ee4d78dbd58b308f5585da7c0e4f76", "Url": "https://api.github.com/repos/ThetaDevs/Theta", "Date": "2018-04-15T06:27:45Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (prevReading != null) { billAmount = java.lang.Integer.toString((((java.lang.Integer.parseInt(unitsThisMonth)) - (java.lang.Integer.parseInt(prevReading))) * (java.lang.Integer.parseInt(unitCost)))); }else { billAmount = java.lang.Integer.toString(((java.lang.Integer.parseInt(unitsThisMonth)) * (java.lang.Integer.parseInt(unitCost)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2710/buggy-version/app.src.main.java.com.example.EazyPG.owner.DetailList.AddBillRoomElectricityDetailList.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.toString(int)"], "Fixed commit": "f14c9775caed51b4eb7ab382371a37efbfbdd9d7", "Url": "https://api.github.com/repos/udayvig/EazypgOwner", "Date": "2018-09-20T10:41:01Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.securityRequest.equals(securityRequest))) { this.securityRequest = securityRequest; this.validatedCredentials = new java.util.HashMap<eu.h2020.symbiote.security.communication.payloads.SecurityCredentials, eu.h2020.symbiote.security.commons.enums.ValidationStatus>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9127/buggy-version/src.main.java.eu.h2020.symbiote.filtering.FilteringEvaluator.java", "BodyUseAPI": [], "Fixed commit": "46d2c5f47037de35d217e896d06da0edf0b8ec4f", "Url": "https://api.github.com/repos/symbiote-h2020/Search", "Date": "2018-02-05T12:22:49Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugin.vault.getBalance(e.getWhoClicked().getUniqueId())", "plugin.vault.getBalance(e.getWhoClicked().getUniqueId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (firstBal == nextBal) { e.getWhoClicked().sendMessage(((plugin.prefix) + \"\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9797/buggy-version/src.main.java.red.man10.man10atm.MenuFunctions.java", "BodyUseAPI": [], "Fixed commit": "6e3ae2c5846299a688db16386adc9e259c9f3485", "Url": "https://api.github.com/repos/shojabon/Man10ATM", "Date": "2018-07-24T08:17:25Z"},
{"Line": "=>574", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["common.game_data.ServerGameData.destinationDraw()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cards.size()) == 0) { common.communication.Signal signal = new common.communication.Signal(common.communication.SignalType.ERROR, \"No more Destination Cards\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6706/buggy-version/Server.src.main.java.CS340.TicketServer.ServerFacade.java", "BodyUseAPI": [], "Fixed commit": "ad11bdce262fa624b617d64c350c2713df1ecd13", "Url": "https://api.github.com/repos/ben-horrocks/TicketToRide", "Date": "2018-04-02T16:18:53Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((originLocation) != null) { setCameraPosition(originLocation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2979/buggy-version/app.src.main.java.com.example.allan.currentlocationmapbox.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7d60fbc5ae0352feaff6d7eab5886d6654119f14", "Url": "https://api.github.com/repos/AllanSaleh/Current_Location_Mapbox", "Date": "2018-01-10T08:18:19Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((backIcon.getConstantState()) != null) { icon = android.support.v4.graphics.drawable.DrawableCompat.wrap(backIcon.getConstantState().newDrawable()).mutate(); }else { icon = backIcon; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/141/buggy-version/navigation.src.main.java.me.listenzz.navigation.Style.java", "BodyUseAPI": ["android.graphics.drawable.Drawable.getConstantState()", "android.support.v4.graphics.drawable.DrawableCompat.wrap(backIcon.getConstantState().newDrawable())", "backIcon.getConstantState().newDrawable()", "android.support.v4.graphics.drawable.DrawableCompat.wrap(backIcon.getConstantState().newDrawable()).mutate()"], "Fixed commit": "e35aa20b516d586fafad1c071f2fb582d58dae22", "Url": "https://api.github.com/repos/listenzz/AndroidNavigation", "Date": "2018-10-06T15:56:32Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isOccupied())) { setPassenger(potentialSeatOwner); predecessor.removePassenger(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9431/buggy-version/src.main.java.Cell.java", "BodyUseAPI": [], "Fixed commit": "79a2bef4f023d35be755621cf8c4b08af2bdfcb8", "Url": "https://api.github.com/repos/Antimon2000/aircraft-boarding-visualizer", "Date": "2018-06-13T00:02:01Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((java.lang.Integer) (t.getValue().get(mapKeys[1]))) == 0) { t.getValue().put(mapKeys[3], 0.0); t.getValue().put(mapKeys[4], 0.0); outputList.add(t.getValue()); }else { t.getValue().put(mapKeys[2], (((java.lang.Double) (t.getValue().get(mapKeys[2]))) / ((java.lang.Integer) (t.getValue().get(mapKeys[1]))))); outputList.add(t.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1618/buggy-version/src.main.java.cn.springmvc.service.LangAbilityAna.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,double)", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,double)", "java.util.Map.Entry<java.lang.String, java.util.Map<java.lang.String, java.lang.Object>>.getValue()", "java.util.Map.Entry<java.lang.String, java.util.Map<java.lang.String, java.lang.Object>>.getValue()", "java.util.Map.Entry<java.lang.String, java.util.Map<java.lang.String, java.lang.Object>>.getValue()", "java.util.Map.Entry<java.lang.String, java.util.Map<java.lang.String, java.lang.Object>>.getValue()", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.util.Map.Entry<java.lang.String, java.util.Map<java.lang.String, java.lang.Object>>.getValue()", "java.util.List<java.util.Map<java.lang.String, java.lang.Object>>.add(java.util.Map<java.lang.String, java.lang.Object>)", "java.util.List<java.util.Map<java.lang.String, java.lang.Object>>.add(java.util.Map<java.lang.String, java.lang.Object>)", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,double)", "java.util.Map.Entry<java.lang.String, java.util.Map<java.lang.String, java.lang.Object>>.getValue()", "java.util.Map.Entry<java.lang.String, java.util.Map<java.lang.String, java.lang.Object>>.getValue()", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "47cf61b81bcf10efb9b6d9b25534c28c855e3cb1", "Url": "https://api.github.com/repos/yeluting/github", "Date": "2018-07-10T06:34:56Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Calculator.Action.ADD.equals(currentAction)) firstNumber += secondNumber; else if (Calculator.Action.SUBTRACT.equals(currentAction)) firstNumber -= secondNumber; else if (Calculator.Action.MULTIPLY.equals(currentAction)) firstNumber *= secondNumber; else if (Calculator.Action.DIVIDE.equals(currentAction)) if (secondNumber != 0) firstNumber /= secondNumber; else if (Calculator.Action.PERCENT.equals(currentAction)) if (secondNumber != 0) firstNumber = ((firstNumber) * secondNumber) / 100;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6236/buggy-version/src.Calculator.java", "BodyUseAPI": ["Calculator.Action.equals(Calculator.Action)", "Calculator.Action.equals(Calculator.Action)", "Calculator.Action.equals(Calculator.Action)", "Calculator.Action.equals(Calculator.Action)"], "Fixed commit": "0b66668712b355c3eff863a6f2f226c8166e30ee", "Url": "https://api.github.com/repos/ApocArkhesir/javaSimpleCalculator", "Date": "2018-01-18T23:55:15Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eraseBefore) { textField.setText(\"\"); eraseBefore = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6236/buggy-version/src.Calculator.java", "BodyUseAPI": [], "Fixed commit": "0b66668712b355c3eff863a6f2f226c8166e30ee", "Url": "https://api.github.com/repos/ApocArkhesir/javaSimpleCalculator", "Date": "2018-01-18T23:55:15Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (javaFileContext.isError()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2323/buggy-version/codegen_plugin.src.main.java.actions.GoToJava.java", "BodyUseAPI": [], "Fixed commit": "1273bb15550071851d24e4644a810aa740161e42", "Url": "https://api.github.com/repos/werpu/tinydecscodegen", "Date": "2018-02-02T23:17:06Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((im.vector.services.EventStreamService.getInstance()) == null) { im.vector.activity.CommonActivityUtils.startEventStreamService(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2574/buggy-version/vector.src.app.java.im.vector.gcm.MatrixGcmListenerService.java", "BodyUseAPI": [], "Fixed commit": "2fd0547776b479ecfce91a6f82e557f513a20fed", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2018-07-19T16:08:28Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(mAddedPatientListData.getAge().isEmpty())) && (!(mAddedPatientListData.getGender().isEmpty()))) patientInfo = ((mAddedPatientListData.getAge()) + \" yrs - \") + (mAddedPatientListData.getGender()); else if (!(mAddedPatientListData.getAge().isEmpty())) patientInfo = (mAddedPatientListData.getAge()) + \" yrs\"; else if (!(mAddedPatientListData.getGender().isEmpty())) patientInfo = mAddedPatientListData.getGender();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7063/buggy-version/app.src.main.java.com.rescribe.doctor.ui.activities.my_patients.add_new_patient.AddNewPatientWebViewActivity.java", "BodyUseAPI": ["mAddedPatientListData.getAge().isEmpty()", "com.rescribe.doctor.model.patient.doctor_patients.PatientList.getAge()", "com.rescribe.doctor.model.patient.doctor_patients.PatientList.getGender()", "com.rescribe.doctor.model.patient.doctor_patients.PatientList.getAge()", "com.rescribe.doctor.model.patient.doctor_patients.PatientList.getGender()", "com.rescribe.doctor.model.patient.doctor_patients.PatientList.getAge()", "com.rescribe.doctor.model.patient.doctor_patients.PatientList.getGender()", "mAddedPatientListData.getGender().isEmpty()"], "Fixed commit": "a91992abdf9c33d917f70d5bbd327bcd14849d47", "Url": "https://api.github.com/repos/sandeepbahalkar123/rescribeDoctor_repo", "Date": "2018-04-26T12:46:56Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((task.getException()) instanceof com.google.firebase.auth.FirebaseAuthWeakPasswordException) { pBarS.setVisibility(View.INVISIBLE); android.widget.Toast.makeText(this, \"Password must contain at least 6 characters\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1082/buggy-version/app.src.main.java.com.tasty.muhammadfaizan.firebasebloggingapp.SignupActivity.java", "BodyUseAPI": [], "Fixed commit": "fce612da1dd2f665669cd1e0d63fb9239f59a55f", "Url": "https://api.github.com/repos/MuhammadFaizan980/FIrebaseBloggingApp", "Date": "2018-09-24T09:42:05Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kepler.ack.impl.AckFuture.response()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (response_source == null) { return response_source; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5023/buggy-version/src.main.java.com.kepler.ack.impl.AckFuture.java", "BodyUseAPI": [], "Fixed commit": "fddedd7945b8ae3486c9ac48603d65ed1c8f6c6d", "Url": "https://api.github.com/repos/Kepler-Framework/Kepler-All", "Date": "2018-09-20T08:49:16Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mEventId) == 0) { onBackPressed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1248/buggy-version/app.src.main.java.com.djavid.schoolapp.view.activity.EventDetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "8d6e1b34179b2f2da9c58e33befafe65e5eab54e", "Url": "https://api.github.com/repos/djavid/SchoolApp", "Date": "2018-02-11T21:32:14Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((android.widget.EditText) (findViewById(R.id.user_password))).getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((user_password.length()) >= 8) databaseUsers.child(id).setValue(user);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8343/buggy-version/meau.app.src.main.java.com.jadilindo.meau.meau.RegisterUser.java", "BodyUseAPI": [], "Fixed commit": "b927dc5eefeafd9764f9ed5bb2cc41fc6f8bfa4c", "Url": "https://api.github.com/repos/luhansen/App", "Date": "2018-06-27T22:16:03Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (str == null) str = \"null\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8512/buggy-version/src.main.java.de.neemann.digital.hdl.printer.CodePrinter.java", "BodyUseAPI": [], "Fixed commit": "53a4ffec963cfe4bc3e4046945f89fab453cbda7", "Url": "https://api.github.com/repos/hneemann/Digital", "Date": "2018-04-05T17:49:35Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((argument.length()) < 1) || ((argument.charAt(0)) != '/')) { return RequestHelper.badRequest(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2767/buggy-version/RequestManager.java", "BodyUseAPI": [], "Fixed commit": "76f9eaaaa1e1db5eedde94af18e2cd92415b768e", "Url": "https://api.github.com/repos/Oscmage/EDA344", "Date": "2018-02-19T09:02:15Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (scheduledExecutorService == null) { throw new java.lang.IllegalArgumentException(\"scheduledExecutorService cannot be null.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8806/buggy-version/device.iot-device-client.src.main.java.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsSessionManager.java", "BodyUseAPI": [], "Fixed commit": "a15ae2148b56999d756c27dcc055406ce915fc89", "Url": "https://api.github.com/repos/Azure/azure-iot-sdk-java", "Date": "2018-10-05T18:28:02Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((SwitchMode.EVENT.equals(switchMode)) || (SwitchMode.PALETTE.equals(switchMode)))) palMapping.frameSeqName = ani.getDesc();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3233/buggy-version/src.main.java.com.rinke.solutions.pinball.view.handler.KeyframeHandler.java", "BodyUseAPI": [], "Fixed commit": "020f76c4917c3e098ece65fd96d77835a2a08a12", "Url": "https://api.github.com/repos/sker65/go-dmd-clock", "Date": "2018-09-26T10:01:58Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstSliderValueIndex == lastSliderValueIndex) { if (lastSliderValueIndex < (numPoints - 2)) { lastSliderValueIndex++; }else { firstSliderValueIndex--; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5577/buggy-version/bundles.net.tourbook.src.net.tourbook.map25.layer.tourtrack.SliderPath_Layer.java", "BodyUseAPI": [], "Fixed commit": "c02b4c40251476b7cd1c7bc46a2eaa852344b6a4", "Url": "https://api.github.com/repos/wolfgang-ch/mytourbook", "Date": "2018-05-26T09:03:42Z"},
{"Line": "=>1400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.lang.Math.abs(((leftGeoPoint.latitudeE6) - (rightGeoPoint.latitudeE6)))) < MIN_CENTER_SLIDER_DIFF_E6) && ((java.lang.Math.abs(((leftGeoPoint.longitudeE6) - (rightGeoPoint.longitudeE6)))) < MIN_CENTER_SLIDER_DIFF_E6)) { rightGeoPoint = new org.oscim.core.GeoPoint(((rightGeoPoint.latitudeE6) + MIN_CENTER_SLIDER_DIFF_E6), ((rightGeoPoint.longitudeE6) + MIN_CENTER_SLIDER_DIFF_E6)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5577/buggy-version/bundles.net.tourbook.src.net.tourbook.map25.Map25View.java", "BodyUseAPI": [], "Fixed commit": "c02b4c40251476b7cd1c7bc46a2eaa852344b6a4", "Url": "https://api.github.com/repos/wolfgang-ch/mytourbook", "Date": "2018-05-26T09:03:42Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((poly.get(1)) != 1) result = result + (poly.get(1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9460/buggy-version/src.classes.Formatter.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.get(int)"], "Fixed commit": "634e7736ff5ee314f638c248c6a4661686a88c2b", "Url": "https://api.github.com/repos/Aaal-E/algebra-for-security-poly", "Date": "2018-10-02T13:39:13Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.set_xy)) { showInputDialog(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/481/buggy-version/app.src.main.java.com.example.a91752.display.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7a2197a887e666d6273edb34892df53f48b1e824", "Url": "https://api.github.com/repos/pengjiawei/Display", "Date": "2018-03-16T09:25:21Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.aquino.TexasWebService.texas.TexasGame.getUser(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (user == null) { return new com.aquino.TexasWebService.model.GameState(userId, (-1), (-1), users, game.getTotalPot(), (-1), game.getMinimumBet(), null, game.getState(), game.getRoundWinner()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2396/buggy-version/src.main.java.com.aquino.TexasWebService.model.GameState.java", "BodyUseAPI": [], "Fixed commit": "9cf5ecc5eb25de00ce54228d875b5943a6681f26", "Url": "https://api.github.com/repos/aquino-a/TexasWebService", "Date": "2018-08-07T12:25:57Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tami.vmanager.utils.SPUtils.get(com.tami.vmanager.activity.ConferenceServiceGroupActivity,Constants.IS_INVISIBLE,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((null != is_invisible) && (!is_invisible)) { setTitleRightBtn(R.mipmap.icon_people); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8878/buggy-version/app.src.main.java.com.tami.vmanager.activity.ConferenceServiceGroupActivity.java", "BodyUseAPI": [], "Fixed commit": "95937a2345a5396a4ad4f69d123e0beb7ae17897", "Url": "https://api.github.com/repos/tamigroup/V-Manager-Android", "Date": "2018-07-30T06:57:13Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fields[i][j]) != null) { java.lang.System.out.print(fields[i][j]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3747/buggy-version/MineSweeperKata.src.MineSweeper.java", "BodyUseAPI": ["java.io.PrintStream.print(java.lang.String)"], "Fixed commit": "ebf1e68a8a2fb1dd79703d0ae94f1fa3c9e1c1ac", "Url": "https://api.github.com/repos/JohannNe/MineSweeper", "Date": "2018-02-25T00:10:22Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index < (fieldsOutput.length)) { fieldsOutput[index][0] = \"\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3747/buggy-version/MineSweeperKata.src.MineSweeper.java", "BodyUseAPI": [], "Fixed commit": "ebf1e68a8a2fb1dd79703d0ae94f1fa3c9e1c1ac", "Url": "https://api.github.com/repos/JohannNe/MineSweeper", "Date": "2018-02-25T00:10:22Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((connection.isReadOnly()) != (isReadOnly)) { connection.setReadOnly(isReadOnly); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3964/buggy-version/src.main.java.com.zaxxer.hikari.pool.PoolBase.java", "BodyUseAPI": ["java.sql.Connection.setReadOnly(boolean)"], "Fixed commit": "36ffcafe83abd0ab23a92b5e275a84332070c593", "Url": "https://api.github.com/repos/brettwooldridge/HikariCP", "Date": "2018-03-24T10:31:34Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((connection.getAutoCommit()) != (isAutoCommit)) { connection.setAutoCommit(isAutoCommit); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3964/buggy-version/src.main.java.com.zaxxer.hikari.pool.PoolBase.java", "BodyUseAPI": ["java.sql.Connection.setAutoCommit(boolean)"], "Fixed commit": "36ffcafe83abd0ab23a92b5e275a84332070c593", "Url": "https://api.github.com/repos/brettwooldridge/HikariCP", "Date": "2018-03-24T10:31:34Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sun.tools.javac.processing.JavacProcessingEnvironment.getContext()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((lombok.javac.apt.lombok.javac.Javac.getJavaCompilerVersion()) > 8) && (!(lombok.javac.handlers.JavacHandlerUtil.inNetbeansCompileOnSave(context)))) { replaceFileManagerJdk9(context, newFilerManager); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4305/buggy-version/src.core.lombok.javac.apt.LombokProcessor.java", "BodyUseAPI": ["lombok.javac.apt.LombokProcessor.replaceFileManagerJdk9(com.sun.tools.javac.util.Context,javax.tools.JavaFileManager)"], "Fixed commit": "0f23383e33bc6756f1ff3777e7dabc465c9c8c02", "Url": "https://api.github.com/repos/charphi/lombok", "Date": "2018-07-11T12:38:07Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.getParentFile().exists())) { file.getParentFile().mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4635/buggy-version/src.main.java.reposense.util.FileUtil.java", "BodyUseAPI": ["java.io.File.getParentFile()", "java.io.File.mkdirs()"], "Fixed commit": "56593d98b8415a2024e3985a5dfb1b818b2645d7", "Url": "https://api.github.com/repos/eugenepeh/RepoSense", "Date": "2018-05-18T13:36:25Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["be.defrere.wallr.entity.Event.getKeyword()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((k.length()) <= (message.toString().trim().length())) { msgKey = message.toString().trim().substring(0, k.length()).toUpperCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5277/buggy-version/app.src.main.java.be.defrere.wallr.receiver.SmsReceiver.java", "BodyUseAPI": ["java.lang.String.trim()", "java.lang.String.substring(int,int)", "java.lang.StringBuilder.toString()", "java.lang.String.toUpperCase()", "java.lang.String.length()"], "Fixed commit": "cab44a3e576a736e4972ba466c32e6e851e0ab43", "Url": "https://api.github.com/repos/df-jonas/jonas.de.frere-WallrApp", "Date": "2018-01-18T13:04:09Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((prev) != null) prev.remove();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7894/buggy-version/app.src.main.java.es.situm.gettingstarted.guideinstructions.GuideInstructionsActivity.java", "BodyUseAPI": [], "Fixed commit": "c59604ff22612801865095c5ed11e2dfdc39bd09", "Url": "https://api.github.com/repos/alejandrotrigo/situm-android-getting-started", "Date": "2018-02-19T10:04:54Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((prev) != null) prev.remove();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7894/buggy-version/app.src.main.java.es.situm.gettingstarted.animateposition.AnimatePositionActivity.java", "BodyUseAPI": [], "Fixed commit": "c59604ff22612801865095c5ed11e2dfdc39bd09", "Url": "https://api.github.com/repos/alejandrotrigo/situm-android-getting-started", "Date": "2018-02-19T10:04:54Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["activity.getWindow().peekDecorView()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((decorView.getBackground()) == null) { de.robv.android.xposed.XposedHelpers.callMethod(decorView, \"setWindowBackground\", new android.graphics.drawable.ColorDrawable(android.graphics.Color.WHITE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9384/buggy-version/app.src.main.java.jp.tkgktyk.xposed.niwatori.ActivityHandler.java", "BodyUseAPI": ["de.robv.android.xposed.XposedHelpers.callMethod(android.widget.FrameLayout,java.lang.String,android.graphics.drawable.ColorDrawable)"], "Fixed commit": "0c8bf5c5cf438eb475934c14a74dc67aaeba6c26", "Url": "https://api.github.com/repos/zhougy0717/Niwatori", "Date": "2018-01-21T00:02:04Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((freeSquares.size()) == 0) stopTheGame();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7491/buggy-version/src.gui.ThreadsController.java", "BodyUseAPI": [], "Fixed commit": "7a495a431c78c35e0674e10e986974de64d7c590", "Url": "https://api.github.com/repos/ngocjr7/snake", "Date": "2018-10-31T03:04:59Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(check(o))) { t.set(d, null); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8797/buggy-version/BSTImpl.java", "BodyUseAPI": [], "Fixed commit": "dc7065c80a526f09ee986e319ebf0427681927e0", "Url": "https://api.github.com/repos/tiagopnoliveira/programming", "Date": "2018-04-05T20:44:44Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(mNews.getDescription())) { mTvDescription.setVisibility(View.GONE); }else { mTvDescription.setVisibility(View.VISIBLE); mTvDescription.setText(android.text.Html.fromHtml(mNews.getDescription())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4962/buggy-version/app.src.main.java.com.appian.manutdvietnam.app.detailnews.DetailNewsFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(android.text.Html.fromHtml(mNews.getDescription()))", "com.appian.manutdvietnam.data.modal.football.News.getDescription()", "android.text.Html.fromHtml(mNews.getDescription())"], "Fixed commit": "7863389648835db2a8a08aa0e579867ec4f82c21", "Url": "https://api.github.com/repos/haipv-ptit/Android_ManUtdVN", "Date": "2018-01-08T14:10:18Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { android.widget.Toast.makeText(getActivity(), \"Network Error\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8714/buggy-version/app.src.main.java.com.anmol.hibiscus.fragments.commapps.java", "BodyUseAPI": [], "Fixed commit": "e49a43d9ee476a06d3a5af54d92eff1f69c7aff2", "Url": "https://api.github.com/repos/anmol2805/hibiscus", "Date": "2018-06-05T06:47:43Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newFileName.contains(\"/\")) newFileName = newFileName.replaceAll(\"/\", \"\u2215\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5501/buggy-version/converter.src.converter.XMLBomImportCreator.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "56dd1d9ff9c1729735c43f13085a7c30de876a33", "Url": "https://api.github.com/repos/nathanessel/xmlConverter", "Date": "2018-10-13T20:28:45Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.harush.zitoon.quoridor.core.logic.BoardPiece.getX()", "com.harush.zitoon.quoridor.core.logic.BoardPiece.getY()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (isValidCoordinate(currentX, currentY)) { boardBoxes[currentX][currentY].setBoardPiece(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5928/buggy-version/quoridorcore.src.main.java.com.harush.zitoon.quoridor.core.logic.BoardLogic.java", "BodyUseAPI": ["boardBoxes[currentX][currentY].setBoardPiece(<nulltype>)"], "Fixed commit": "c10c5798458be493c03a7883f23180e55f533dd9", "Url": "https://api.github.com/repos/maorharush/Quoridor", "Date": "2018-08-08T12:38:27Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((duration.getSeconds()) == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8082/buggy-version/maestro-common.src.main.java.org.maestro.common.worker.ThroughputStats.java", "BodyUseAPI": [], "Fixed commit": "bb7866f92ba36d82c9c597efb567317c1bd9592a", "Url": "https://api.github.com/repos/maestro-performance/maestro-java", "Date": "2018-06-15T16:03:12Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mInitPos) == 0) { scrollToPosition(0); }else { if ((getOrientation()) == (android.support.v7.widget.LinearLayoutManager.HORIZONTAL)) { smoothScrollBy(((mInitPos) * size), 0); }else { smoothScrollBy(0, ((mInitPos) * size)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6290/buggy-version/rv-gallery.src.main.java.com.ryan.rv_gallery.GalleryRecyclerView.java", "BodyUseAPI": ["com.ryan.rv_gallery.GalleryRecyclerView.smoothScrollBy(int,int)", "com.ryan.rv_gallery.GalleryRecyclerView.smoothScrollBy(int,int)"], "Fixed commit": "bd44879478f0ca9c37a647414eefe93dd7d6ddf8", "Url": "https://api.github.com/repos/ryanlijianchang/Recyclerview-Gallery", "Date": "2018-08-07T10:02:40Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((value.team.getRequests()) != null) { for (com.bil496.studifyapp.model.JoinRequest request : value.team.getRequests()) { if (request.getUser().getId().equals(com.bil496.studifyapp.util.SharedPref.read(SharedPref.USER_ID, (-1)))) { waitingRequest = true; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8831/buggy-version/app.src.main.java.com.bil496.studifyapp.holder.TeamViewHolder.java", "BodyUseAPI": ["com.bil496.studifyapp.model.Team.getRequests()"], "Fixed commit": "490a0bee2f0d70d30374f9dbb975d37ea147f31d", "Url": "https://api.github.com/repos/Bil496/StudifyAndroidClient", "Date": "2018-03-19T02:11:40Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["resultSet.getResultVars().get(int)", "org.apache.jena.query.ResultSet.nextSolution()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (querySolution.get(result).toString().contains(\"#\")) { java.lang.String[] temp = querySolution.get(result).toString().split(\"#\"); java.lang.System.out.println(temp[1]); }else { java.lang.String[] temp = querySolution.get(result).toString().split(\"#\"); java.lang.System.out.println(temp[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3446/buggy-version/Java.src.readAndUpdateOWL.V5_OWLReaderAndUpdate.java", "BodyUseAPI": ["org.apache.jena.query.QuerySolution.get(java.lang.String)", "querySolution.get(result).toString()", "querySolution.get(result).toString().split(java.lang.String)", "querySolution.get(result).toString()", "querySolution.get(result).toString().split(java.lang.String)", "org.apache.jena.query.QuerySolution.get(java.lang.String)"], "Fixed commit": "f4cd5fe485e493c99aacd93b752c4b0282f9f8c3", "Url": "https://api.github.com/repos/Senefa/Dokumenten-Repraesentation", "Date": "2018-01-28T14:22:52Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((shareResult.getData()) != null) { if (((shareResult.getData().getShares()) != null) && ((shareResult.getData().getShares().size()) > 0)) { return shareResult.getData().getShares().get(0).toString(); }else { return shareResult.getData().getParserMessage(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3425/buggy-version/src.com.owncloud.android.ui.errorhandling.ErrorMessageAdapter.java", "BodyUseAPI": ["shareResult.getData().getShares().get(0).toString()", "shareResult.getData().getShares().size()", "com.owncloud.android.lib.common.operations.RemoteOperationResult<com.owncloud.android.lib.resources.shares.ShareParserResult>.getData()", "shareResult.getData().getShares()", "shareResult.getData().getShares()", "shareResult.getData().getParserMessage()", "com.owncloud.android.lib.common.operations.RemoteOperationResult<com.owncloud.android.lib.resources.shares.ShareParserResult>.getData()", "com.owncloud.android.lib.common.operations.RemoteOperationResult<com.owncloud.android.lib.resources.shares.ShareParserResult>.getData()", "com.owncloud.android.lib.common.operations.RemoteOperationResult<com.owncloud.android.lib.resources.shares.ShareParserResult>.getData()", "shareResult.getData().getShares()", "shareResult.getData().getShares().get(int)"], "Fixed commit": "67b58b4794563ed959a59c0059899d6045d9866b", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-10-22T08:50:38Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isEnabled)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8919/buggy-version/src.org.usfirst.frc.team3021.robot.subsystem.ClimberSystem.java", "BodyUseAPI": [], "Fixed commit": "c621821457aaeb8d3e5dce5fc7203f112b84e8f6", "Url": "https://api.github.com/repos/Team3021/PowerUp", "Date": "2018-03-08T07:27:18Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isEnabled)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8919/buggy-version/src.org.usfirst.frc.team3021.robot.subsystem.ClimberSystem.java", "BodyUseAPI": [], "Fixed commit": "c621821457aaeb8d3e5dce5fc7203f112b84e8f6", "Url": "https://api.github.com/repos/Team3021/PowerUp", "Date": "2018-03-08T07:27:18Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isEnabled)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8919/buggy-version/src.org.usfirst.frc.team3021.robot.subsystem.ClimberSystem.java", "BodyUseAPI": [], "Fixed commit": "c621821457aaeb8d3e5dce5fc7203f112b84e8f6", "Url": "https://api.github.com/repos/Team3021/PowerUp", "Date": "2018-03-08T07:27:18Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getCurrentCommandName().isEmpty()) { stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8919/buggy-version/src.org.usfirst.frc.team3021.robot.subsystem.DriveSystem.java", "BodyUseAPI": [], "Fixed commit": "c621821457aaeb8d3e5dce5fc7203f112b84e8f6", "Url": "https://api.github.com/repos/Team3021/PowerUp", "Date": "2018-03-08T07:27:18Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentChar.equals('=')) { previousCharacters = (previousCharacters) + (currentChar.toString()); readNextChar(); readCharsTillValuableChar(); return new Token(previousCharacters, Token.OPERATOR); }else if (currentChar.equals('<')) { previousCharacters = (previousCharacters) + (currentChar.toString()); readNextChar(); if (currentChar.equals('=')) { previousCharacters = (previousCharacters) + (currentChar.toString()); readNextChar(); readCharsTillValuableChar(); return new Token(previousCharacters, Token.OPERATOR); }else { readCharsTillValuableChar(); return new Token(previousCharacters, Token.OPERATOR); } }else { readNextChar(); readCharsTillValuableChar(); return new Token(previousCharacters, Token.OPERATOR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9482/buggy-version/src.main.java.Tokenizer.java", "BodyUseAPI": ["java.lang.Character.toString()", "java.lang.Character.toString()", "java.lang.Character.equals(char)", "java.lang.Character.equals(char)", "java.lang.Character.toString()"], "Fixed commit": "f0bc3edb92d395c3d6c93b76586b0a7f1d62cb5e", "Url": "https://api.github.com/repos/Dilschat/Lexical-analyzer", "Date": "2018-09-18T16:34:58Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\">\".contains(currentChar.toString())) { previousCharacters = currentChar.toString(); readNextChar(); if (currentChar.equals('=')) { previousCharacters = (previousCharacters) + (currentChar.toString()); readNextChar(); readCharsTillValuableChar(); return new Token(previousCharacters, Token.OPERATOR); }else if (currentChar.equals('>')) { previousCharacters = (previousCharacters) + (currentChar.toString()); readNextChar(); if (currentChar.equals('>')) { previousCharacters = (previousCharacters) + (currentChar.toString()); readNextChar(); readCharsTillValuableChar(); return new Token(previousCharacters, Token.OPERATOR); }else if (currentChar.equals('=')) { previousCharacters = (previousCharacters) + (currentChar.toString()); readNextChar(); readCharsTillValuableChar(); return new Token(previousCharacters, Token.OPERATOR); }else { readCharsTillValuableChar(); return new Token(previousCharacters, Token.OPERATOR); } }else { readNextChar(); readCharsTillValuableChar(); return new Token(previousCharacters, Token.OPERATOR); } }else if (currentChar.equals('~')) { readNextChar(); readCharsTillValuableChar(); return new Token(previousCharacters, Token.OPERATOR); }else { throw new java.lang.Exception(\"kakayoto hyinya\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9482/buggy-version/src.main.java.Tokenizer.java", "BodyUseAPI": ["java.lang.Character.toString()", "java.lang.Character.equals(char)", "java.lang.Character.toString()", "java.lang.Character.toString()", "java.lang.Character.equals(char)", "java.lang.Character.equals(char)", "java.lang.Character.equals(char)", "java.lang.Character.toString()", "java.lang.Character.equals(char)", "java.lang.Character.toString()"], "Fixed commit": "f0bc3edb92d395c3d6c93b76586b0a7f1d62cb5e", "Url": "https://api.github.com/repos/Dilschat/Lexical-analyzer", "Date": "2018-09-18T16:34:58Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v7.widget.LinearLayoutManager.getChildCount()", "android.support.v7.widget.LinearLayoutManager.getItemCount()", "android.support.v7.widget.LinearLayoutManager.findFirstVisibleItemPosition()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((visibleItemCount + firstVisibleItemPosition) >= totalItemCount) && (firstVisibleItemPosition >= 0)) { mIsLoading = true; if ((mBlock) > 0L) { ((com.devband.tronwalletforandroid.ui.blockexplorer.transfer.TransferPresenter) (mPresenter)).getTransfer(mBlock, mStartIndex, com.devband.tronwalletforandroid.ui.blockexplorer.transfer.TransferFragment.PAGE_SIZE); }else { ((com.devband.tronwalletforandroid.ui.blockexplorer.transfer.TransferPresenter) (mPresenter)).getTransfer(mStartIndex, com.devband.tronwalletforandroid.ui.blockexplorer.transfer.TransferFragment.PAGE_SIZE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3506/buggy-version/app.src.main.java.com.devband.tronwalletforandroid.ui.blockexplorer.transfer.TransferFragment.java", "BodyUseAPI": [], "Fixed commit": "b1c2ee247f9307f113ef2db1cff6d786ab8ab63a", "Url": "https://api.github.com/repos/lky1001/tron-android-wallet", "Date": "2018-05-30T08:33:51Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (null != error) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3273/buggy-version/vertx-gaia.vertx-up.src.main.java.io.vertx.up.rs.announce.JObjectRigor.java", "BodyUseAPI": [], "Fixed commit": "7ff0f97c7c817a6dcfa36f8f6a01a695f2139f53", "Url": "https://api.github.com/repos/silentbalanceyh/vertx-zero", "Date": "2018-01-26T06:15:47Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i.isEmpty()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8972/buggy-version/src.main.java.analyzer.TextAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "fb4e5c95ef380210b29f7cbc649eeb5d515f6ae5", "Url": "https://api.github.com/repos/vpodgurskiy/textAnalyzer", "Date": "2018-07-14T07:14:12Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(loginService.checkTokenOnValidation(token))) || (!(userVerificator.authenticationOfBankEmployee(token)))) { throw new com.example.productmanagementservice.exceptions.NoAccessException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8563/buggy-version/src.main.java.com.example.productmanagementservice.services.ProductService.java", "BodyUseAPI": [], "Fixed commit": "66b51834f46ec403e4399dcac5efbeb95ea91858", "Url": "https://api.github.com/repos/venom7634/product-management-service", "Date": "2018-07-16T09:57:03Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (userVerificator.checkTokenInDatabase(token)) { return loginService.checkTokenOnValidation(token); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8563/buggy-version/src.main.java.com.example.productmanagementservice.services.ApplicationService.java", "BodyUseAPI": ["com.example.productmanagementservice.services.LoginService.checkTokenOnValidation(java.lang.String)"], "Fixed commit": "66b51834f46ec403e4399dcac5efbeb95ea91858", "Url": "https://api.github.com/repos/venom7634/product-management-service", "Date": "2018-07-16T09:57:03Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (quant != 0) { LOGICA.SortBy.MergeSort(Array, 0, quant); }else { LOGICA.SortBy.MergeSort(Array, 0, ((Array.length) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6723/buggy-version/AlgoritmosDeOrdenacao.src.VISAO.MainApp.java", "BodyUseAPI": ["LOGICA.SortBy.MergeSort(int[],int,int)"], "Fixed commit": "ed8770141044d1ea0ec849aefbae43fdb08d3a2b", "Url": "https://api.github.com/repos/vkcosta/AlgoritmosDeOrdenacao", "Date": "2018-04-06T17:14:58Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (quant != 0) { LOGICA.SortBy.QuickSort(Array, 0, quant); }else { LOGICA.SortBy.QuickSort(Array, 0, ((Array.length) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6723/buggy-version/AlgoritmosDeOrdenacao.src.VISAO.MainApp.java", "BodyUseAPI": ["LOGICA.SortBy.QuickSort(int[],int,int)"], "Fixed commit": "ed8770141044d1ea0ec849aefbae43fdb08d3a2b", "Url": "https://api.github.com/repos/vkcosta/AlgoritmosDeOrdenacao", "Date": "2018-04-06T17:14:58Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (numSeats <= 40) { java.lang.System.out.println(\"Your email address please: \"); customerEmail = scannerStr.nextLine(); heldseats = ti.findAndHoldSeats(numSeats, customerEmail); hold = ti.createHoldThread(heldseats, ticketing.App.reserveDecision, customerEmail); hold.start(); }else java.lang.System.out.println(\"Sorry you can book a maximum of 40 seats at a time\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9663/buggy-version/src.main.java.ticketing.App.java", "BodyUseAPI": ["ticketing.TicketServiceImpl.findAndHoldSeats(int,java.lang.String)"], "Fixed commit": "67e88bea2011bd3803402caed2c83daf8a0d3aa7", "Url": "https://api.github.com/repos/ishandikshit/ticketingsystem", "Date": "2018-05-21T10:51:01Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ow2.proactive_grid_cloud_portal.common.client.json.JSONUtils.getJsonErrorMessage(java.lang.Throwable)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (msg.equals(\"HTTP 403 Forbidden\")) { view.goToNotAuthorized(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5251/buggy-version/scheduler-portal.src.main.java.org.ow2.proactive_grid_cloud_portal.scheduler.client.controller.ServerLogsController.java", "BodyUseAPI": [], "Fixed commit": "a27c30c29509f015c2fe19d33fbde5321ca2b1b5", "Url": "https://api.github.com/repos/ow2-proactive/scheduling-portal", "Date": "2018-08-22T13:32:26Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["client.newCall(request).execute()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((response.code()) == 200) { token = response.body().string(); }else { token = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5316/buggy-version/src.main.java.org.mitre.synthea.world.concepts.Terminology.java", "BodyUseAPI": ["org.mitre.synthea.world.concepts.Response.body()", "response.body().string()"], "Fixed commit": "df61ef15fc5adb9b79ada6246b3e12186e426a92", "Url": "https://api.github.com/repos/synthetichealth/synthea", "Date": "2018-07-13T13:28:57Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getArguments()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8198/buggy-version/app.src.main.java.vip.frendy.scdemo.fragment.FragmentCharts.java", "BodyUseAPI": [], "Fixed commit": "dc59f53c9ec055b08c156d5e56e65b6c0b186be6", "Url": "https://api.github.com/repos/frendyxzc/scplayer", "Date": "2018-07-01T06:36:34Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((task.getBidList().size()) == 0) { task.setStatus(\"Requested\"); }else { task.setStatus(\"Bidded\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/118/buggy-version/app.src.main.java.com.geotask.myapplication.ViewBidsActivity.java", "BodyUseAPI": ["com.geotask.myapplication.DataClasses.Task.setStatus(java.lang.String)", "com.geotask.myapplication.DataClasses.Task.setStatus(java.lang.String)"], "Fixed commit": "a64b851ac0be2bc49da116c95ff5bb6c0feaef81", "Url": "https://api.github.com/repos/CMPUT301W18T23/GeoTask", "Date": "2018-03-18T22:54:18Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.springframework.util.StringUtils.isEmpty(conf.getPass()))) { jedis.auth(conf.getPass()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3617/buggy-version/src.main.java.com.beefly.common.IdGenerator.java", "BodyUseAPI": ["redis.clients.jedis.Jedis.auth(java.lang.String)", "com.beefly.common.IdGenerator.RedisScriptConfig.getPass()"], "Fixed commit": "495f899904ff64f7d6477c1712ea08ce1353ad4a", "Url": "https://api.github.com/repos/Johor03/redis_generator_id", "Date": "2018-07-26T01:55:13Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.hutool.core.util.TypeUtil.getClass(java.lang.reflect.Type)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cn.hutool.core.bean.BeanUtil.isBean(rowType)) { targetValue = ((cn.hutool.json.JSONObject) (value)).toBean(type, ignoreError); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5714/buggy-version/hutool-json.src.main.java.cn.hutool.json.InternalJSONUtil.java", "BodyUseAPI": [], "Fixed commit": "0a77191122579d5f4ce428eb92ce11020e867573", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2018-08-29T10:34:10Z"},
{"Line": "=>1018", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((expr.isNullPointerConstant(cgf.getContext())) && (destTy.isPointerType())) { return jlang.codegen.ConstantPointerNull.get(cgf.convertType(destTy)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/659/buggy-version/java.jlang.codegen.ScalarExprEmitter.java", "BodyUseAPI": ["jlang.codegen.ConstantPointerNull.get(cgf.convertType(destTy))", "jlang.codegen.CodeGenFunction.convertType(jlang.type.QualType)"], "Fixed commit": "eb48746296205f6986875615f23765d083b2160e", "Url": "https://api.github.com/repos/JianpingZeng/xcc", "Date": "2018-03-15T07:45:31Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fileType.equals(\"jpg\")) fileType = \"jpeg\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/404/buggy-version/WebWorker.java", "BodyUseAPI": [], "Fixed commit": "03be95c8e188aa3ba8b04225f423ab4db79e1765", "Url": "https://api.github.com/repos/LouisMiller/program2", "Date": "2018-02-09T03:40:27Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fileType.equals(\"gif\")) fileType = \"GIF\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/404/buggy-version/WebWorker.java", "BodyUseAPI": [], "Fixed commit": "03be95c8e188aa3ba8b04225f423ab4db79e1765", "Url": "https://api.github.com/repos/LouisMiller/program2", "Date": "2018-02-09T03:40:27Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.valueOf(genusMatch.getMatchedTaxon().getNode().getProperty(OTVocabularyPredicate.OT_OTT_TAXON_NAME.propertyName()))", "java.lang.String.valueOf(sp.getProperty(OTVocabularyPredicate.OT_OTT_TAXON_NAME.propertyName()))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((hitTaxonNameStr.length()) <= (genusName.length())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6394/buggy-version/src.main.java.org.opentree.tnrs.queries.SingleNamePrefixQuery.java", "BodyUseAPI": [], "Fixed commit": "b16923489540a2db2c568d19b9879a2f53bed30b", "Url": "https://api.github.com/repos/OpenTreeOfLife/taxomachine", "Date": "2018-04-12T17:37:58Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cipherSeek.getProgress()) == 0) { data.addField(0); data.addField(0); }else { data.addField((1 - (java.lang.Integer.parseInt(cipherTime.getText().toString().split(\":\")[0])))); data.addField((60 - (java.lang.Integer.parseInt(cipherTime.getText().toString().split(\":\")[1])))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8304/buggy-version/app.src.main.java.com.weebly.wizards_exe.relicrecoveryscouting.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9019a91bc393cacc301539665c5b9a24c2995491", "Url": "https://api.github.com/repos/RollerCoaster45/RelicRecoveryScoutingApp", "Date": "2018-03-14T01:56:06Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((viewHolder.getAdapterPosition()) == 0) { viewHolder.itemView.setScaleY(1); viewHolder.itemView.setScaleX(1); viewHolder.itemView.setTranslationY(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6436/buggy-version/layoutmanager.src.main.java.swipeable.com.layoutmanager.SwipeableTouchHelperCallback.java", "BodyUseAPI": ["viewHolder.itemView.setScaleX(int)", "viewHolder.itemView.setScaleY(int)", "viewHolder.itemView.setTranslationY(int)"], "Fixed commit": "f2a3d82cc54ffd5322c55e278a96c1b6f86b92ba", "Url": "https://api.github.com/repos/nihad92/SwipeableCards", "Date": "2018-05-25T20:59:10Z"},
{"Line": "=>500", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stumpner.mediadesk.core.database.sc.UserService.getById(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (user != null) { if (user.getAutologinKey().equalsIgnoreCase(autologinkey)) { javax.servlet.http.HttpSession session = request.getSession(); java.lang.System.out.println((((\"Userlogin autologin: user=\" + (user.getUserName())) + \" from key=\") + autologinkey)); com.stumpner.mediadesk.core.Config.lastLogin = new java.util.Date(); session.setAttribute(\"user\", user); return true; }else { return false; } }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6808/buggy-version/src.main.java.com.stumpner.mediadesk.core.database.sc.UserService.java", "BodyUseAPI": ["com.stumpner.mediadesk.usermanagement.User.getUserName()", "javax.servlet.http.HttpSession.setAttribute(java.lang.String,com.stumpner.mediadesk.usermanagement.User)", "com.stumpner.mediadesk.usermanagement.User.getAutologinKey()", "user.getAutologinKey().equalsIgnoreCase(java.lang.String)", "java.io.PrintStream.println((((\"Userlogin autologin: user=\" + (user.getUserName())) + \" from key=\") + autologinkey))"], "Fixed commit": "2fea26e1c922703de96146880e49b09ceba3008e", "Url": "https://api.github.com/repos/openMEDIADESK/openMEDIADESK", "Date": "2018-08-20T20:45:07Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentNightclub.getNightclubID()) == (-1)) { android.widget.Toast.makeText(getBaseContext(), \"Nightclub must be saved before it can be mapped\", Toast.LENGTH_LONG).show(); }else { intent.putExtra(\"nightclubid\", currentNightclub.getNightclubID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2105/buggy-version/app.src.main.java.com.example.garrett.assignment1.NightclubActivity.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,currentNightclub.getNightclubID())", "com.example.garrett.assignment1.Nightclub.getNightclubID()"], "Fixed commit": "a9e128e8dddb199f261f7819e1770df4a6217e9a", "Url": "https://api.github.com/repos/e8ightgatespro/Assignment1", "Date": "2018-03-15T03:29:37Z"},
{"Line": "=>631", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ubic.gemma.core.datastructure.matrix.ExpressionDataMatrixColumnSort.orderBiomaterialsBySortedFactors(java.util.List<ubic.gemma.model.expression.biomaterial.BioMaterial>,java.util.LinkedList<ubic.gemma.model.expression.experiment.ExperimentalFactor>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (orderedChunk != null) { result.addAll(orderedChunk); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1894/buggy-version/gemma-core.src.main.java.ubic.gemma.core.datastructure.matrix.ExpressionDataMatrixColumnSort.java", "BodyUseAPI": ["java.util.List<ubic.gemma.model.expression.biomaterial.BioMaterial>.addAll(java.util.List<ubic.gemma.model.expression.biomaterial.BioMaterial>)"], "Fixed commit": "428bd130bc84c87f4ffa4b4e822e24889c84640d", "Url": "https://api.github.com/repos/PavlidisLab/Gemma", "Date": "2018-09-28T17:50:46Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"\".equals(originalUrl))) { java.lang.String newUrl = originalUrl.replace(originalUrl.substring(originalUrl.lastIndexOf(\"/\")), \"/1000.jpg\"); try { java.io.InputStream inputStream = new java.net.URL(newUrl).openStream(); bitmap = android.graphics.BitmapFactory.decodeStream(inputStream); } catch (java.lang.Exception e) { try { java.io.InputStream inputStream = new java.net.URL(originalUrl).openStream(); bitmap = android.graphics.BitmapFactory.decodeStream(inputStream); } catch (java.lang.Exception ignored) { } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4284/buggy-version/app.src.main.java.com.yummywakame.breakroom.NewsQueryUtils.java", "BodyUseAPI": ["java.net.URL.openStream()", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.lastIndexOf(java.lang.String)"], "Fixed commit": "5fffcca4ae758d9dac518fc4894da2a13b21386e", "Url": "https://api.github.com/repos/yummywakame/GoodNewsFirst", "Date": "2018-08-02T21:02:13Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((android.widget.CheckBox) (findViewById(R.id.logCheckBox))).isChecked()) { android.content.SharedPreferences prefs = getSharedPreferences(getString(R.string.keys_shared_prefs), Context.MODE_PRIVATE); prefs.edit().putString(getString(R.string.keys_prefs_username), mCredentials.getUsername()).apply(); prefs.edit().putBoolean(getString(R.string.keys_prefs_stay_logged_in), true).apply(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2247/buggy-version/app.src.main.java.group8.tcss450.uw.edu.chatclient.SignInActivity.java", "BodyUseAPI": [], "Fixed commit": "f9475110c6a61c486041baa4b4da3bfb717a20aa", "Url": "https://api.github.com/repos/AEricHarty/Chat-Client", "Date": "2018-05-15T20:33:00Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((node.isRoot()) && ((root.getChild(goToChar)) == null)) return root;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3129/buggy-version/src.main.java.com.hackerrank.monosoul.determiningdnahealth.Trie.java", "BodyUseAPI": [], "Fixed commit": "8186e5bc3995999caec4d522eef7c1e49085f39d", "Url": "https://api.github.com/repos/monosoul/hackerrank", "Date": "2018-04-20T07:23:31Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["server.services.UserService.getUserById(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(oldUser.getPassword().equals(changeUser.getOldPassword()))) { return org.springframework.http.ResponseEntity.status(HttpStatus.FORBIDDEN).body(new server.messages.Message(MessageStates.BAD_PASSWORD.getMessage())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/332/buggy-version/src.main.java.server.controller.AuthorizationController.java", "BodyUseAPI": [], "Fixed commit": "53749606949ef0f2bef7a0bec98932696b1cf389", "Url": "https://api.github.com/repos/Thewhiterabbit123/PerpetuumMobile-02-2018", "Date": "2018-04-04T21:46:15Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getIntent().getBooleanExtra(\"remember\", true))) { loginPrefsEditor.clear(); loginPrefsEditor.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/511/buggy-version/app.src.main.java.com.example.piotr.projectmanager.Activities.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "21defb6fe9c3a3fba0fd0903e576638a774441ca", "Url": "https://api.github.com/repos/Pakistanp/ProjectManager", "Date": "2018-09-14T10:49:19Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(url.equals(com.asanam.udacityrecipebook.fragments.ExoPlayerFragment.URI_STRING))) { this.playbackPosition = 0; this.currentWindow = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1974/buggy-version/app.src.main.java.com.asanam.udacityrecipebook.fragments.ExoPlayerFragment.java", "BodyUseAPI": [], "Fixed commit": "41fa9d0066f8deee2fc5afde325aece6a3000f71", "Url": "https://api.github.com/repos/gowthamraj07/UdacityRecipeBook", "Date": "2018-07-10T21:25:18Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StackTraceElement.getClassName()", "java.lang.StackTraceElement.getMethodName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (kilim.Task.skipInvoke(klass, name)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2432/buggy-version/src.kilim.Task.java", "BodyUseAPI": [], "Fixed commit": "986f457f530683506cd61fae2c1f77bbfebe2e56", "Url": "https://api.github.com/repos/nqzero/kilim", "Date": "2014-12-11T03:15:40Z"},
{"Line": "=>1124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mColumnTypes[j]) == (float.class)) { buf.append(java.lang.String.format(\"%-6.4g \", getFloat(i, j))); }else if ((mColumnTypes[j]) == (double.class)) { buf.append(java.lang.String.format(\"%-6.4g \", getDouble(i, j))); }else { buf.append(java.lang.String.format(\"%-6.6s \", getObject(i, j))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6889/buggy-version/devsmart-core.src.main.java.com.devsmart.ArrayTable.java", "BodyUseAPI": ["com.devsmart.ArrayTable.getDouble(int,int)", "com.devsmart.ArrayTable.getFloat(int,int)", "java.lang.String.format(java.lang.String,java.lang.Object[])", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.format(java.lang.String,double)", "java.lang.StringBuilder.append(java.lang.String)", "com.devsmart.ArrayTable.getObject(int,int)", "java.lang.String.format(java.lang.String,float)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "10edff6ab00e0f67a5726dfca9748ca2156f4be8", "Url": "https://api.github.com/repos/dinocore1/DevSmartCore", "Date": "2018-02-12T19:32:40Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((statistics.length()) >= ((resourceId - 1) * sizeOfRow)) { return 0; }else { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5360/buggy-version/src.main.java.rw2018.statistics.impl.StatisticsDBBaseImpl.java", "BodyUseAPI": [], "Fixed commit": "8822e17dabf73a2ad53a194081e8f7400b950313", "Url": "https://api.github.com/repos/danijank/rw18_statisticsChallenge", "Date": "2018-09-14T14:06:43Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isSearch)) sendRequest();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6832/buggy-version/app.src.main.java.br.com.cinemateca.view.Search.SearchActivity.java", "BodyUseAPI": [], "Fixed commit": "ce803022b09c7b7c411435a4a3a9ab0039ead23f", "Url": "https://api.github.com/repos/Brunorb0805/cinemateca", "Date": "2018-01-07T00:07:40Z"},
{"Line": "=>704", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentB.equals(routeButton)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2531/buggy-version/src.main.java.memoranda.ui.AssetsPanel.java", "BodyUseAPI": [], "Fixed commit": "bbe98e1a9c4bc0ab25c2a86916b174a3a7ac8349", "Url": "https://api.github.com/repos/ser316asu/ser316-cottbus-Spring18", "Date": "2018-03-13T18:03:56Z"},
{"Line": "=>683", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentB.equals(busButton)) { for (int i = 0; i < (Global.busList.getAllBusses().size()); ++i) { if (busID.getText().equals(Global.busList.getAllBusses().get(i).getID())) { Global.busList.removeBus(Global.busList.getAllBusses().get(i)); } } Global.busList.listChanged(); displayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2531/buggy-version/src.main.java.memoranda.ui.AssetsPanel.java", "BodyUseAPI": [], "Fixed commit": "bbe98e1a9c4bc0ab25c2a86916b174a3a7ac8349", "Url": "https://api.github.com/repos/ser316asu/ser316-cottbus-Spring18", "Date": "2018-03-13T18:03:56Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((females.isEmpty()) || (males.isEmpty())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7209/buggy-version/app.src.main.java.com.example.android.scorekeepdraft1.activities.TeamGameActivity.java", "BodyUseAPI": [], "Fixed commit": "ee798ae10cfc2a73a16a39b2050fe660406a5336", "Url": "https://api.github.com/repos/EddieF87/scorekeepdraft1", "Date": "2018-01-09T10:11:58Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((females.isEmpty()) || (males.isEmpty())) { return team; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7209/buggy-version/app.src.main.java.com.example.android.scorekeepdraft1.activities.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "ee798ae10cfc2a73a16a39b2050fe660406a5336", "Url": "https://api.github.com/repos/EddieF87/scorekeepdraft1", "Date": "2018-01-09T10:11:58Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (canvas.isDisplayable()) canvas.createBufferStrategy(3);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5601/buggy-version/src.com.g4mesoft.graphic.Display.java", "BodyUseAPI": ["com.g4mesoft.graphic.Display.DisplayCanvas.createBufferStrategy(int)"], "Fixed commit": "3161dac9210a577f80b1670f5ebdffde3ea5eb39", "Url": "https://api.github.com/repos/G4me4u/g4mengine", "Date": "2018-10-24T14:36:08Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (canvas.isDisplayable()) bs.show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5601/buggy-version/src.com.g4mesoft.graphic.Display.java", "BodyUseAPI": [], "Fixed commit": "3161dac9210a577f80b1670f5ebdffde3ea5eb39", "Url": "https://api.github.com/repos/G4me4u/g4mengine", "Date": "2018-10-24T14:36:08Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.ByteBuffer.position()", "java.nio.ByteBuffer.limit()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((pos + wr) > limit) { throw new java.lang.IllegalStateException(java.lang.String.format(\"Write illegal state for file [%s]: pos=%d, wr=%d, limit=%d\", file, pos, wr, limit)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6308/buggy-version/modules.direct-io.src.main.java.org.apache.ignite.internal.processors.cache.persistence.file.AlignedBuffersDirectFileIO.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.io.File,int,int,int)"], "Fixed commit": "57a1fec28b50b3ca795c2b7583fb5bc31357b734", "Url": "https://api.github.com/repos/gridgain/apache-ignite", "Date": "2018-01-17T16:15:58Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (device == null) { android.widget.Toast.makeText(this, \"Bluetooth is already on.\", Toast.LENGTH_LONG).show(); }else { android.widget.Toast.makeText(this, (((\"Showing Unpaired Device: \" + (device.getName())) + \"\\t\") + (device.getAddress())), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6862/buggy-version/app.src.main.java.com.example.marta.blueteeth.TeacherConnectScreen.java", "BodyUseAPI": ["android.bluetooth.BluetoothDevice.getName()", "android.widget.Toast.makeText(this, (((\"Showing Unpaired Device: \" + (device.getName())) + \"\\t\") + (device.getAddress())), Toast.LENGTH_LONG).show()", "android.widget.Toast.makeText(com.example.marta.blueteeth.TeacherConnectScreen,(((\"Showing Unpaired Device: \" + (device.getName())) + \"\\t\") + (device.getAddress())),Toast.LENGTH_LONG)", "android.bluetooth.BluetoothDevice.getAddress()"], "Fixed commit": "7a8a4b53fbb19ea9dba8e58f3993be950f6ebdca", "Url": "https://api.github.com/repos/Martydude15/BlueTeeth", "Date": "2018-04-20T23:51:47Z"},
{"Line": "=>806", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dices[Color.green.ordinal()].getValue()) < (dices[Color.white.ordinal()].getValue())) color = Color.white; else color = Color.green;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3518/buggy-version/src.games.gsClever.Logic.MainLogic.java", "BodyUseAPI": [], "Fixed commit": "4cab031e6df6ce731370825c969f04ea417928c6", "Url": "https://api.github.com/repos/nicoonator/gsclever", "Date": "2018-07-13T08:57:03Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loggingEnabled) { out.println(log); if (flush) { out.flush(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3948/buggy-version/src.com.coolioasjulio.chess.Logger.java", "BodyUseAPI": [], "Fixed commit": "85383c46a5e10dbb1584f308df073dbc86e615ca", "Url": "https://api.github.com/repos/coolioasjulio/JavaChessAI", "Date": "2018-10-01T06:02:10Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (is_forest) { criteria_set.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4074/buggy-version/src.main.java.supersql.dataconstructor.Aggregate.java", "BodyUseAPI": [], "Fixed commit": "17f39ce9672aa571ca6131363807f11c2c3af083", "Url": "https://api.github.com/repos/ToyamaLab/NewSSQL", "Date": "2018-07-27T07:30:29Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == 2) { android.widget.Toast.makeText(context, \"Slide 3 Clicked \", Toast.LENGTH_SHORT).show(); }else { android.widget.Toast.makeText(context, \"Slide 4 Clicked \", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3811/buggy-version/app.src.main.java.com.tarjetic.store.modules.menu.home.ViewPageAdapter.java", "BodyUseAPI": [], "Fixed commit": "076072955b32e9684bd168f9b9db5b01ed45a397", "Url": "https://api.github.com/repos/bootavo/fashionbag", "Date": "2018-09-28T01:00:48Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p == null) { com.Ben12345rocks.AdvancedCore.AdvancedCoreHook.getInstance().debug(\"Can't send plugin message, player == null\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2242/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Util.PluginMessage.PluginMessage.java", "BodyUseAPI": [], "Fixed commit": "51cee916be066087b2ebcfc47e4618f0a02af791", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2018-03-11T01:07:06Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (action.isToReleaseResources()) { state.releaseResources(expectedTimeStamp, action); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6032/buggy-version/compss.runtime.scheduler.multiobjectiveScheduler.src.main.java.es.bsc.compss.scheduler.multiobjective.types.SchedulingEvent.java", "BodyUseAPI": ["es.bsc.compss.scheduler.multiobjective.types.LocalOptimizationState.releaseResources(long,es.bsc.compss.scheduler.types.AllocatableAction)"], "Fixed commit": "204fbe02fdf3aad76eaf3172e2b3318a70d80de2", "Url": "https://api.github.com/repos/bsc-wdc/compss", "Date": "2018-05-30T14:41:46Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.provider.DocumentsContract.getDocumentId(android.net.Uri)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (id.startsWith(\"raw:\")) { return id.replaceFirst(\"raw:\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5472/buggy-version/android.src.main.java.com.filepicker.FilePickerModule.java", "BodyUseAPI": ["java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "967e32c7632c19d1b27efd820e4a21bccdfcd517", "Url": "https://api.github.com/repos/larissagaulia/react-native-file-picker", "Date": "2018-02-02T13:39:41Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(countDownLatch.await(60, java.util.concurrent.TimeUnit.SECONDS))) { throw new org.ballerinalang.connector.api.BallerinaConnectorException(\"Waiting for WebSocket handshake in not successful\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1109/buggy-version/stdlib.ballerina-http.src.main.java.org.ballerinalang.net.http.websocketclientendpoint.Start.java", "BodyUseAPI": [], "Fixed commit": "456e76114b958c1d83632df66fd3f73f914e7b69", "Url": "https://api.github.com/repos/irunika/ballerina", "Date": "2018-04-20T18:01:33Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(queries.containsKey(id))) { log.debug(\"Continuing to buffer query {} till tick while waiting for more windows...\", id); }else if (querier.shouldBuffer()) { log.debug(\"Starting to buffer while waiting for more windows for query {}...\", id); rotateInto(id, querier, bufferedWindows); }else { log.debug(\"Emitting window for {} and resetting...\", id); emitResult(id, bufferedMetadata.get(id), querier.getResult()); querier.reset(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5868/buggy-version/src.main.java.com.yahoo.bullet.storm.JoinBolt.java", "BodyUseAPI": ["com.yahoo.bullet.storm.JoinBolt.debug(java.lang.String,java.lang.String)", "com.yahoo.bullet.storm.JoinBolt.debug(java.lang.String,java.lang.String)", "com.yahoo.bullet.storm.JoinBolt.debug(java.lang.String,java.lang.String)", "com.yahoo.bullet.storm.JoinBolt.emitResult(java.lang.String,bufferedMetadata.get(id),querier.getResult())", "java.util.Map<java.lang.String, com.yahoo.bullet.pubsub.Metadata>.get(java.lang.String)", "com.yahoo.bullet.storm.JoinBolt.rotateInto(java.lang.String,com.yahoo.bullet.querying.Querier,backtype.storm.utils.RotatingMap<java.lang.String, com.yahoo.bullet.querying.Querier>)"], "Fixed commit": "e20ce4b6185d179fa9d185255a6b5cadf682cf89", "Url": "https://api.github.com/repos/bullet-db/bullet-storm", "Date": "2018-04-04T22:35:58Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (location == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1107/buggy-version/app.src.main.java.com.marty.track.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f6c974571607986f363541c4d7bd82709417e110", "Url": "https://api.github.com/repos/martinraj/tracking-location-provider-android", "Date": "2018-07-31T07:10:14Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (appendsNewLineAtEOF()) { sb.append(com.smoothcsv.framework.util.SCBundle.get(\"key.appendsNewLineAtEOF\")).append('\\n'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4411/buggy-version/smoothcsv-app-modules.smoothcsv-core.src.main.java.com.smoothcsv.core.csv.CsvMeta.java", "BodyUseAPI": [], "Fixed commit": "a58fb7f4e38c3e01dfef306253795ed7722bb46b", "Url": "https://api.github.com/repos/kohii/smoothcsv", "Date": "2018-03-29T14:53:28Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<de.sogood.model.ui.GelColli>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((colli.getWeight()) <= 3) && ((colli.getWeight()) > 0)) { if (checkDPD(colli)) { autoSelect = \"DPD\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/177/buggy-version/src.main.java.de.sogood.controller.OrderController.java", "BodyUseAPI": ["de.sogood.controller.OrderController.checkDPD(de.sogood.model.ui.GelColli)"], "Fixed commit": "d2d83ee36b601c03ff8bca0d2f530ce2def670f6", "Url": "https://api.github.com/repos/xsun1213/entelliship", "Date": "2018-02-23T14:43:46Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<de.sogood.model.ui.GelColli>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((colli.getWeight()) <= 3) && ((colli.getWeight()) > 0)) { if (checkDPD(colli)) { autoSelect = \"DPD\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/177/buggy-version/src.main.java.de.sogood.controller.OrderController.java", "BodyUseAPI": ["de.sogood.controller.OrderController.checkDPD(de.sogood.model.ui.GelColli)"], "Fixed commit": "d2d83ee36b601c03ff8bca0d2f530ce2def670f6", "Url": "https://api.github.com/repos/xsun1213/entelliship", "Date": "2018-02-23T14:43:46Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<de.sogood.model.ui.GelColli>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((colli.getWeight()) <= 3) && ((colli.getWeight()) > 0)) { if (checkDPD(colli)) { autoSelect = \"DPD\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/177/buggy-version/src.main.java.de.sogood.controller.OrderController.java", "BodyUseAPI": ["de.sogood.controller.OrderController.checkDPD(de.sogood.model.ui.GelColli)"], "Fixed commit": "d2d83ee36b601c03ff8bca0d2f530ce2def670f6", "Url": "https://api.github.com/repos/xsun1213/entelliship", "Date": "2018-02-23T14:43:46Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (proxy != null) { mapping.putIfNotNull(\"proxy\", cp.describe(proxy)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3598/buggy-version/src.main.java.org.jenkinsci.plugins.casc.plugins.PluginManagerConfigurator.java", "BodyUseAPI": ["org.jenkinsci.plugins.casc.model.Mapping.putIfNotNull(java.lang.String,cp.describe(proxy))", "org.jenkinsci.plugins.casc.Configurator.describe(hudson.ProxyConfiguration)"], "Fixed commit": "093747cdf829cbbd53b563617c0531763eab2438", "Url": "https://api.github.com/repos/voyages-sncf-technologies/configuration-as-code-plugin", "Date": "2018-06-05T11:12:55Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mProgress.getVisibility()) == (android.view.View.GONE)) { clearAndRefreshList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3471/buggy-version/app.src.main.java.fr.stevenfrancony.invaders.fragments.FragmentResearch.java", "BodyUseAPI": [], "Fixed commit": "366c381c91bf5643e4f04af911c7c0aefed14c37", "Url": "https://api.github.com/repos/WestFR/Invaders-Android", "Date": "2018-02-24T15:54:26Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mProgress.getVisibility()) == (android.view.View.GONE)) { clearAndRefreshList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3471/buggy-version/app.src.main.java.fr.stevenfrancony.invaders.fragments.FragmentBuildings.java", "BodyUseAPI": [], "Fixed commit": "366c381c91bf5643e4f04af911c7c0aefed14c37", "Url": "https://api.github.com/repos/WestFR/Invaders-Android", "Date": "2018-02-24T15:54:26Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mProgress.getVisibility()) == (android.view.View.GONE)) { clearAndRefreshList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3471/buggy-version/app.src.main.java.fr.stevenfrancony.invaders.fragments.FragmentFleetsList.java", "BodyUseAPI": [], "Fixed commit": "366c381c91bf5643e4f04af911c7c0aefed14c37", "Url": "https://api.github.com/repos/WestFR/Invaders-Android", "Date": "2018-02-24T15:54:26Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mProgress.getVisibility()) == (android.view.View.GONE)) { clearAndRefreshList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3471/buggy-version/app.src.main.java.fr.stevenfrancony.invaders.fragments.FragmentRanking.java", "BodyUseAPI": [], "Fixed commit": "366c381c91bf5643e4f04af911c7c0aefed14c37", "Url": "https://api.github.com/repos/WestFR/Invaders-Android", "Date": "2018-02-24T15:54:26Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!setIfFalse) res = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8581/buggy-version/src.obj.restraint.HardRestraint.java", "BodyUseAPI": [], "Fixed commit": "1d2c416bdac658f399ef5914e482ef27a6208b63", "Url": "https://api.github.com/repos/LionCherry/EPMS", "Date": "2018-01-16T07:17:11Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ForgeRegistries.BLOCKS.getValue(net.minecraft.util.ResourceLocation)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (overriddenBlock != null) { block.setTranslationKey(overriddenBlock.getTranslationKey().replace(\"tile.\", \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3436/buggy-version/src.main.java.com.landofminecraft.mcmmo.util.ModUtil.java", "BodyUseAPI": ["net.minecraft.block.Block.getTranslationKey()", "net.minecraft.block.Block.setTranslationKey(overriddenBlock.getTranslationKey().replace(\"tile.\", \"\"))", "overriddenBlock.getTranslationKey().replace(java.lang.String,java.lang.String)"], "Fixed commit": "24310551667b34aae672b3217df8e99e5cc76dca", "Url": "https://api.github.com/repos/landofminecraft/MCMMO", "Date": "2018-10-16T02:48:28Z"},
{"Line": "=>849", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((index >= (pdus.length)) || (index < 0)) { android.util.EventLog.writeEvent(1397638484, \"72298611\", (-1), java.lang.String.format(\"processMessagePart: invalid seqNumber = %d, messageCount = %d\", (index + (tracker.getIndexOffset())), messageCount)); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5766/buggy-version/src.java.com.android.internal.telephony.InboundSmsHandler.java", "BodyUseAPI": ["android.util.EventLog.writeEvent(int,java.lang.String,int,java.lang.String)", "java.lang.String.format(java.lang.String,(index + (tracker.getIndexOffset())),int)"], "Fixed commit": "472a13b068354756411095fbd812ec83ec33476f", "Url": "https://api.github.com/repos/AnhellK/android_frameworks_opt_telephony_mtk", "Date": "2018-10-24T19:01:21Z"},
{"Line": "=>799", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.internal.telephony.InboundSmsTracker.getMessageCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (messageCount <= 0) { android.util.EventLog.writeEvent(1397638484, \"72298611\", (-1), java.lang.String.format(\"processMessagePart: invalid messageCount = %d\", messageCount)); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5766/buggy-version/src.java.com.android.internal.telephony.InboundSmsHandler.java", "BodyUseAPI": ["android.util.EventLog.writeEvent(int,java.lang.String,int,java.lang.String)", "java.lang.String.format(java.lang.String,int)"], "Fixed commit": "472a13b068354756411095fbd812ec83ec33476f", "Url": "https://api.github.com/repos/AnhellK/android_frameworks_opt_telephony_mtk", "Date": "2018-10-24T19:01:21Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["betGroupRepository.findById(betGroupId).orElseThrow(() -> new ch.fhnw.wodss.tippspiel.exception.ResourceNotFoundException((\"Could not find bet group with id: \" + betGroupId)))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (((betGroup.getPassword()) != null) && (password != null)) { if (!(argon2PasswordEncoder.matches(betGroup.getPassword(), password))) { throw new ch.fhnw.wodss.tippspiel.exception.ResourceNotAllowedException(\"Wrong password for this bet group!\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1554/buggy-version/src.main.java.ch.fhnw.wodss.tippspiel.service.BetGroupService.java", "BodyUseAPI": ["ch.fhnw.wodss.tippspiel.security.Argon2PasswordEncoder.matches(betGroup.getPassword(),java.lang.String)", "ch.fhnw.wodss.tippspiel.domain.BetGroup.getPassword()"], "Fixed commit": "7c39152e1a04c941c72a6981b21fd03f5dcad1ee", "Url": "https://api.github.com/repos/YanickSchraner/wodss-tippspiel_backend", "Date": "2018-05-21T20:05:11Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((restBetGroupDTO.getName()) != null) { betGroup.setPassword(argon2PasswordEncoder.encode(restBetGroupDTO.getPassword())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1554/buggy-version/src.main.java.ch.fhnw.wodss.tippspiel.service.BetGroupService.java", "BodyUseAPI": ["ch.fhnw.wodss.tippspiel.security.Argon2PasswordEncoder.encode(restBetGroupDTO.getPassword())", "ch.fhnw.wodss.tippspiel.domain.BetGroup.setPassword(argon2PasswordEncoder.encode(restBetGroupDTO.getPassword()))", "ch.fhnw.wodss.tippspiel.dto.RestBetGroupDTO.getPassword()"], "Fixed commit": "7c39152e1a04c941c72a6981b21fd03f5dcad1ee", "Url": "https://api.github.com/repos/YanickSchraner/wodss-tippspiel_backend", "Date": "2018-05-21T20:05:11Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pa == pb) { err = new gestionecampionati.grafica.Errors_Confirm.ErrorPanel(8); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9899/buggy-version/src.gestionecampionati.Classifica_pallavolo.java", "BodyUseAPI": [], "Fixed commit": "3bdf9c746c99b2e7e00e5a8b086d790fc9978e82", "Url": "https://api.github.com/repos/enrico404/GestioneCampionati", "Date": "2018-06-05T08:13:49Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstBlock) { firstBlock = false; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/134/buggy-version/app.src.main.java.cervi.dev.skipity.Skipity.java", "BodyUseAPI": [], "Fixed commit": "46b3d12c632e5cf13986254cfb563a731306d893", "Url": "https://api.github.com/repos/Cerv1/Skipity", "Date": "2018-05-20T11:43:09Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lblMain) != null) lblMain.setBackground(bg);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3605/buggy-version/src.main.java.gargoyle.ct.ui.impl.CTBlockerContent.java", "BodyUseAPI": [], "Fixed commit": "ffb52a3cd0d7404952d16a115d4d8dbe5e23cd84", "Url": "https://api.github.com/repos/lure0xaos/CoffeeTime", "Date": "2018-07-09T15:11:46Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.lily_alice.optimushprim.DataBase.getApp()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((app.getUser()) == null) || ((app.getPass()) == null)) { app.setUser(\"NULL\"); app.setPass(\"NULL\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4658/buggy-version/app.src.main.java.com.example.lily_alice.optimushprim.ApiCall.java", "BodyUseAPI": ["com.example.lily_alice.optimushprim.AppInfo.setPass(java.lang.String)", "com.example.lily_alice.optimushprim.AppInfo.setUser(java.lang.String)"], "Fixed commit": "ae102a42146cb8e3bb76988db6a0deee717a5e80", "Url": "https://api.github.com/repos/lily-alice/OptimusHPRIM", "Date": "2018-03-22T13:19:10Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lastName.length()) > 8) newLast = lastName.substring(0, 7); else newLast = lastName;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/871/buggy-version/src.StringUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "0b65f0eec22fa5567e93879bef6522735684b865", "Url": "https://api.github.com/repos/Purdue-CS193/lab-3-adityan9900", "Date": "2018-09-25T18:16:41Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mMessagesAdapter.getMessages().size()) > 0) mMessagesRecyclerView.smoothScrollToPosition(((mMessagesAdapter.getMessages().size()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6910/buggy-version/app.src.main.java.com.maroufb.beastchat.fragments.MessageFragment.java", "BodyUseAPI": ["com.maroufb.beastchat.views.MessagesViews.MessagesAdapter.getMessages()", "mMessagesAdapter.getMessages().size()", "android.support.v7.widget.RecyclerView.smoothScrollToPosition(((mMessagesAdapter.getMessages().size()) - 1))"], "Fixed commit": "155e00c60161a57e3cdd825c8560d73c37b7064b", "Url": "https://api.github.com/repos/marouf33/beastChat", "Date": "2018-08-17T12:51:34Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mMessagesAdapter.getMessages().size()) > 0) mMessagesRecyclerView.smoothScrollToPosition(((mMessagesAdapter.getMessages().size()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6910/buggy-version/app.src.main.java.com.maroufb.beastchat.fragments.MessageFragment.java", "BodyUseAPI": ["com.maroufb.beastchat.views.MessagesViews.MessagesAdapter.getMessages()", "android.support.v7.widget.RecyclerView.smoothScrollToPosition(((mMessagesAdapter.getMessages().size()) - 1))", "mMessagesAdapter.getMessages().size()"], "Fixed commit": "155e00c60161a57e3cdd825c8560d73c37b7064b", "Url": "https://api.github.com/repos/marouf33/beastChat", "Date": "2018-08-17T12:51:34Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((au.gov.vic.ecodev.mrt.constants.Constants.Numeral.NOT_FOUND) == index) { if (java.util.stream.Stream.of(Strings.SPACE, Strings.UNDER_LINE, Strings.HYPHEN).anyMatch(code::contains)) { index = new au.gov.vic.ecodev.mrt.template.processor.updater.helper.VariationHelper(data, code).findIndex(); if ((au.gov.vic.ecodev.mrt.constants.Constants.Numeral.NOT_FOUND) == index) { throw new au.gov.vic.ecodev.mrt.template.processor.exception.TemplateProcessorException(((\"No \" + code) + \" index in the header!\")); } }else { throw new au.gov.vic.ecodev.mrt.template.processor.exception.TemplateProcessorException(((\"No \" + code) + \" index in the header!\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8270/buggy-version/src.main.java.au.gov.vic.ecodev.mrt.template.processor.updater.helper.DataExtractionHelper.java", "BodyUseAPI": [], "Fixed commit": "935f413daae5f44f0769d8975c57213188d30890", "Url": "https://api.github.com/repos/LiuJiang682/mrt", "Date": "2018-08-03T04:15:58Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isType(java.util.List.class)) { if (java.util.List.class.isAssignableFrom(o.getClass())) return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4883/buggy-version/src.main.java.de.mlessmann.config.ConfigNode.java", "BodyUseAPI": ["java.lang.Class.isAssignableFrom(java.lang.Class<? extends java.lang.Object>)"], "Fixed commit": "7eb8a023db22629881cee6f31b0d60de6f10ce1d", "Url": "https://api.github.com/repos/MarkL4YG/configurate", "Date": "2018-05-31T15:46:47Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["benny.dev.tasktimer.AddEditActivity.getSupportFragmentManager()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((fragmentManager.findFragmentById(R.id.fragment)) == null) { benny.dev.tasktimer.AddEditActivityFragment fragment = new benny.dev.tasktimer.AddEditActivityFragment(); android.os.Bundle arguments = getIntent().getExtras(); fragment.setArguments(arguments); android.support.v4.app.FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction(); fragmentTransaction.replace(R.id.fragment, fragment); fragmentTransaction.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4336/buggy-version/app.src.main.java.benny.dev.tasktimer.AddEditActivity.java", "BodyUseAPI": ["android.support.v4.app.FragmentManager.beginTransaction()"], "Fixed commit": "24b077ae74103a289d148884a28319c8f207a7ae", "Url": "https://api.github.com/repos/Bennyhwanggggg/Project-Timer-App", "Date": "2018-07-13T01:52:26Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (content == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5140/buggy-version/src.main.java.com.apu.olxcrawler.parser.OlxParserUtils.java", "BodyUseAPI": [], "Fixed commit": "7e3f386e7bfe3543bd53c770ff068ba656fc65fc", "Url": "https://api.github.com/repos/anikeec/OlxCrawler", "Date": "2018-02-28T12:52:43Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (icon == null) { return android.support.v4.content.res.ResourcesCompat.getDrawable(context.getResources(), R.drawable.many_apps_icon, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3376/buggy-version/app.src.main.java.com.tuomomees.timetravelerrefactored.AppIconGetter.java", "BodyUseAPI": [], "Fixed commit": "7378196c07254579c688ca27d918785d33ca38c1", "Url": "https://api.github.com/repos/tuomomees/TimeTravelerRefactored", "Date": "2018-05-03T09:02:05Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((listProjects.getSelectedValue()) != null) stat.setProject(java.lang.String.valueOf(listProjects.getSelectedValue()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8156/buggy-version/src.main.java.gui.SetTokenSettings.java", "BodyUseAPI": ["java.lang.String.valueOf(java.lang.Object)", "javax.swing.JList.getSelectedValue()", "gui.StaticComponents.setProject(java.lang.String)"], "Fixed commit": "f216b655e81a5c1cf0f6aeaa8ad678a6ac64016d", "Url": "https://api.github.com/repos/EviLPinGuiN/circle-gradle", "Date": "2018-06-04T17:34:07Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (args[0].equalsIgnoreCase(\"sayhi\")) { player.chat(((net.md_5.bungee.api.ChatColor.GREEN) + \"Hello everyone!\")); return true; }else { player.sendMessage((((me.creepinson.plugin.Template.CHAT_PREFIX) + (net.md_5.bungee.api.ChatColor.RED)) + \"Invalid usage or arguments.\")); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/973/buggy-version/src.me.creepinson.plugin.command.ExampleCommand.java", "BodyUseAPI": [], "Fixed commit": "f9dc15220425beb092847e372963ca7d818ff60e", "Url": "https://api.github.com/repos/creepinson/SpigotPluginTemplate", "Date": "2018-04-09T17:38:50Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.axelor.studio.service.filter.FilterSqlService.getSqlType(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(sqlType.equals(type))) { value = (((\"cast(:param\" + filterId) + \" as \") + (getSqlType(type))) + \")\"; }else { value = \":param\" + filterId; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/665/buggy-version/axelor-studio.src.main.java.com.axelor.studio.service.filter.FilterSqlService.java", "BodyUseAPI": ["com.axelor.studio.service.filter.FilterSqlService.getSqlType(java.lang.String)"], "Fixed commit": "7441341278dc5a0ca62419c7e506c652b522f949", "Url": "https://api.github.com/repos/akh-axelor/axelor-business-suite", "Date": "2018-07-16T12:25:29Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sudoku) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3390/buggy-version/PlaySoduko.app.src.main.java.com.ayush.playsoduko.playsoduko.utilities.SudokuBoard.java", "BodyUseAPI": [], "Fixed commit": "c660a0fda70d49d0b58ae1b94a1285acafc20cca", "Url": "https://api.github.com/repos/ayushr2/PlaySoduko", "Date": "2018-06-03T03:28:46Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["configuration.SettingsUtil.getGuildSettings(msgEvent.getGuild().getId()).getCustomCommandLauncher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (ccl != null) { ccl.execute(msgEvent, command); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1647/buggy-version/src.main.java.jara.CommandHandler.java", "BodyUseAPI": ["configuration.CustomCommandLauncher.execute(net.dv8tion.jda.core.events.message.guild.GuildMessageReceivedEvent,java.lang.String[])"], "Fixed commit": "b2c0260b68de9ca4371edffd000a8b3728a5bcb9", "Url": "https://api.github.com/repos/Zazsona/Jara", "Date": "2018-10-17T12:01:06Z"},
{"Line": "=>548", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["configuration.GuildSettings.getCustomCommandAttributes(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ca == null) { return null; }else { return new configuration.CustomCommandLauncher(getCustomCommandAttributes(key)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1647/buggy-version/src.main.java.configuration.GuildSettings.java", "BodyUseAPI": [], "Fixed commit": "b2c0260b68de9ca4371edffd000a8b3728a5bcb9", "Url": "https://api.github.com/repos/Zazsona/Jara", "Date": "2018-10-17T12:01:06Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.gui) instanceof micdoodle8.mods.galacticraft.core.client.gui.screen.GuiCelestialSelection) { if (net.minecraft.client.settings.GameSettings.isKeyDown(micdoodle8.mods.galacticraft.core.tick.KeyHandlerClient.galaxyMap)) { event.gui = new com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection(true, null); }else { event.gui = new com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection(false, null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2109/buggy-version/src.main.java.com.mjr.extraplanets.client.handlers.MainHandlerClient.java", "BodyUseAPI": [], "Fixed commit": "d029028a004fd441d1842df7438a69ce363799d2", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-02-02T15:46:59Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((update % batchSize) == 0) { size = tester.getProofSize(adsIdToNotUpdate); rows.add(bench.ProofSizeBenchmark.getCSVRowSingleADSProofSize(nADSes, update, batchSize, size.getRawProofSize(), size.getUpdateSize(), size.getUpdateProofSize(), size.getFreshnessProofSize())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8075/buggy-version/src.bench.ProofSizeBenchmark.java", "BodyUseAPI": ["java.util.List<java.util.List<java.lang.String>>.add(java.util.List<java.lang.String>)", "bench.ProofSizeBenchmark.getCSVRowSingleADSProofSize(int,int,int,size.getRawProofSize(),size.getUpdateSize(),size.getUpdateProofSize(),size.getFreshnessProofSize())"], "Fixed commit": "a3c7635022eb839920d83d119ef3f175dc32ed77", "Url": "https://api.github.com/repos/b-verify/b_verify-server-ads-usecase", "Date": "2018-05-14T22:12:36Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(gdbResultReceiver.start())) { gdbThreadFeedback.SetState(GdbThreadFeedback.CLOSED); new common.MsgBox(this, \"No information!\", (\"Unfortunately this application contains no debug info. \" + \"If you have source code you can build it with \\\"-g\\\" flag by yourself and retry.\"), common.MsgBox.ACTION_CLOSE).setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6673/buggy-version/MemoryAnalyzer.src.memoryanalyzer.GdbForm.java", "BodyUseAPI": [], "Fixed commit": "20332e8f11befa2218e9631975321da37cb93cc1", "Url": "https://api.github.com/repos/dimagerasimov/MemoryAnalyzer", "Date": "2018-03-12T19:52:55Z"},
{"Line": "=>515", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.zimbra.common.util.StringUtil.isNullOrEmpty(zd.getZimbraXCompatibleSemVer()))) { attrs.put(Provisioning.A_zimbraXZimletCompatibleSemVer, zd.getZimbraXCompatibleSemVer()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6581/buggy-version/store.src.java.com.zimbra.cs.zimlet.ZimletUtil.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(Provisioning.A_zimbraXZimletCompatibleSemVer,zd.getZimbraXCompatibleSemVer())", "com.zimbra.cs.zimlet.ZimletDescription.getZimbraXCompatibleSemVer()"], "Fixed commit": "659ec0525b2a341e2dd41d579c07ddb6622d6ec2", "Url": "https://api.github.com/repos/Zimbra/zm-mailbox", "Date": "2018-04-25T08:36:24Z"},
{"Line": "=>695", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((toPiece != (EMPTY_PIECE)) && (toPiece != (INVALID_PIECE))) && (!(pieces.BitPieces.BitPieces.colorsMatch(board[fromPiece], board[toPiece])))) { return true; }else if ((fromPiece + (9 * offset)) == toPiece) { byte potentialPawn = board[(fromPiece - offset)]; if ((pieces.BitPieces.BitPieces.isPiecePawn(potentialPawn)) && (!(pieces.BitPieces.BitPieces.colorsMatch(potentialPawn, board[fromPiece])))) { return ((doubleMovingPawns[0]) == (fromPiece - offset)) && (!(pieces.BitPieces.BitPieces.colorsMatch(board[fromPiece], board[toPiece]))); } }else if ((fromPiece + (11 * offset)) == toPiece) { byte potentialPawn = board[(fromPiece + offset)]; if ((pieces.BitPieces.BitPieces.isPiecePawn(potentialPawn)) && (!(pieces.BitPieces.BitPieces.colorsMatch(potentialPawn, board[fromPiece])))) { return ((doubleMovingPawns[0]) == (fromPiece + offset)) && (!(pieces.BitPieces.BitPieces.colorsMatch(board[fromPiece], board[toPiece]))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5804/buggy-version/src.board.BitBoard.java", "BodyUseAPI": ["pieces.BitPieces.BitPieces.colorsMatch(byte,byte)", "pieces.BitPieces.BitPieces.colorsMatch(byte,byte)", "pieces.BitPieces.BitPieces.colorsMatch(byte,byte)", "pieces.BitPieces.BitPieces.colorsMatch(byte,byte)"], "Fixed commit": "00d71466aa6c8c6c0c33825e62e0729c9c2685ba", "Url": "https://api.github.com/repos/kewliomajor/chess_engine", "Date": "2018-08-23T19:00:16Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playerColor) == (Color.BLACK)) { offset *= -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5804/buggy-version/src.board.BitBoard.java", "BodyUseAPI": [], "Fixed commit": "00d71466aa6c8c6c0c33825e62e0729c9c2685ba", "Url": "https://api.github.com/repos/kewliomajor/chess_engine", "Date": "2018-08-23T19:00:16Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fromColor == (Color.WHITE)) { offset = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5804/buggy-version/src.board.BitBoard.java", "BodyUseAPI": [], "Fixed commit": "00d71466aa6c8c6c0c33825e62e0729c9c2685ba", "Url": "https://api.github.com/repos/kewliomajor/chess_engine", "Date": "2018-08-23T19:00:16Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Objects.equals(isoCurrencyCode, \"DGB\")) { currencyFormat.setMaximumFractionDigits(((io.digibyte.tools.manager.BRSharedPrefs.getCurrencyUnit(app)) == (BRConstants.CURRENT_UNIT_BITCOINS) ? 8 : 2)); }else { currencyFormat.setMaximumFractionDigits(decimalPoints); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7120/buggy-version/app.src.main.java.io.digibyte.tools.util.BRCurrency.java", "BodyUseAPI": [], "Fixed commit": "6cb922c5be307df85f296f9dc4b254b38ae9573a", "Url": "https://api.github.com/repos/Jurdefur/digibytewallet-android", "Date": "2018-02-17T20:47:15Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (found) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6315/buggy-version/apm-collector.apm-collector-instrument.src.main.java.org.apache.skywalking.apm.collector.instrument.MetricTree.java", "BodyUseAPI": [], "Fixed commit": "4a75bf4564a393f2d725cb27dec076908179f2ec", "Url": "https://api.github.com/repos/apache/incubator-skywalking", "Date": "2018-01-09T09:23:26Z"},
{"Line": "=>1773", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["boa.functions.BoaNormalFormIntrinsics.internalReduce(boa.types.Ast.Expression)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tempE instanceof boa.types.Ast.Expression) && ((((boa.types.Ast.Expression) (tempE)).getKind()) == (boa.types.Ast.Expression.ExpressionKind.OP_MULT))) results.add(boa.functions.BoaNormalFormIntrinsics.finalReduce(((boa.types.Ast.Expression) (tempE)))); else for (final boa.types.Ast.Expression sub : ((boa.types.Ast.Expression) (tempE)).getExpressionsList()) { results.add(boa.functions.BoaNormalFormIntrinsics.finalReduce(sub)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5827/buggy-version/src.java.boa.functions.BoaNormalFormIntrinsics.java", "BodyUseAPI": ["boa.functions.BoaNormalFormIntrinsics.finalReduce(java.lang.Object)", "java.lang.Object.getExpressionsList()", "java.util.List<java.lang.Object>.add(boa.types.Ast.Expression)"], "Fixed commit": "ac6ecf023578cb9b412014e685e486582a7b500b", "Url": "https://api.github.com/repos/boalang/compiler", "Date": "2018-08-16T20:47:54Z"},
{"Line": "=>1802", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((results.size()) == 1) && ((results.get(0)) instanceof boa.types.Ast.Expression)) return ((boa.types.Ast.Expression) (results.get(0)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5827/buggy-version/src.java.boa.functions.BoaNormalFormIntrinsics.java", "BodyUseAPI": ["java.util.List<java.lang.Object>.get(int)"], "Fixed commit": "ac6ecf023578cb9b412014e685e486582a7b500b", "Url": "https://api.github.com/repos/boalang/compiler", "Date": "2018-08-16T20:47:54Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.scarger.referme.message.MessageDefault.updateMessageStructure(io.github.scarger.referme.storage.ConfigurationStorage)", "io.github.scarger.referme.storage.JsonStorage.Wrapper.getStorageSection()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(config.getMessages().equals(updatedConfig.getMessages()))) { getStorage().write(updatedConfig); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4741/buggy-version/src.main.java.io.github.scarger.referme.storage.JsonStorage.java", "BodyUseAPI": ["io.github.scarger.referme.storage.JsonStorage.write(io.github.scarger.referme.storage.ConfigurationStorage)"], "Fixed commit": "a375de7493a04a354921a9edde609c735771af8f", "Url": "https://api.github.com/repos/scarger/ReferME", "Date": "2018-01-02T22:58:01Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key == null) throw new java.lang.IllegalArgumentException(\"first argument to put() is null.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5637/buggy-version/src.com.my.search.SeparateChainingHashST.java", "BodyUseAPI": [], "Fixed commit": "7d9cf4cfa020395ca141685c87a173ad942d4758", "Url": "https://api.github.com/repos/pyhblacksky/java_AlgorithmAndDataSturctures", "Date": "2018-07-20T03:19:10Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (val == null) { delete(key); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5637/buggy-version/src.com.my.search.SeparateChainingHashST.java", "BodyUseAPI": [], "Fixed commit": "7d9cf4cfa020395ca141685c87a173ad942d4758", "Url": "https://api.github.com/repos/pyhblacksky/java_AlgorithmAndDataSturctures", "Date": "2018-07-20T03:19:10Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.my.search.SeparateChainingHashST<Key, Value>.hash(Key)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(st[i].contains(key))) (N)++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5637/buggy-version/src.com.my.search.SeparateChainingHashST.java", "BodyUseAPI": [], "Fixed commit": "7d9cf4cfa020395ca141685c87a173ad942d4758", "Url": "https://api.github.com/repos/pyhblacksky/java_AlgorithmAndDataSturctures", "Date": "2018-07-20T03:19:10Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((user.getDisplayName()) != null) { name.setText(user.getDisplayName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4740/buggy-version/app.src.main.java.np.com.aawaz.csitentrance.activities.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(user.getDisplayName())", "com.google.firebase.auth.FirebaseUser.getDisplayName()"], "Fixed commit": "47f2f6243b14936e474a0ba0c97810cce40426b8", "Url": "https://api.github.com/repos/awazgyawali/CSIT_Entrance", "Date": "2018-08-02T02:52:09Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getContext()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4740/buggy-version/app.src.main.java.np.com.aawaz.csitentrance.fragments.navigation_fragment.AllColleges.java", "BodyUseAPI": [], "Fixed commit": "47f2f6243b14936e474a0ba0c97810cce40426b8", "Url": "https://api.github.com/repos/awazgyawali/CSIT_Entrance", "Date": "2018-08-02T02:52:09Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (timestampObj instanceof java.lang.Integer) { result.timestamp = ((int) (timestampObj)) * 1.0; }else if (timestampObj instanceof java.lang.Double) { result.timestamp = ((double) (timestampObj)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4774/buggy-version/android.app.src.main.java.com.reactnativenavigation.params.parsers.ScreenParamsParser.java", "BodyUseAPI": [], "Fixed commit": "5f6381a49a6acb9530275a5d0914c8018df6d9dc", "Url": "https://api.github.com/repos/gigjs/react-native-navigation", "Date": "2018-04-21T06:09:15Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isFragmentActive())) { frameRemoover(new dev.eyesless.simple_weather_for_fishermans.fragments.CentralFragmentImpl(), \"Central\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9490/buggy-version/app.src.main.java.dev.eyesless.simple_weather_for_fishermans.AMainActivity.java", "BodyUseAPI": [], "Fixed commit": "1c00ffad5aeddcf595fb0658ad33ddd6b833c7e2", "Url": "https://api.github.com/repos/kalininaleksandrv/simple_weather_for_fishermans", "Date": "2018-05-13T06:41:05Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item.isVideo()) { mOriginalLayout.setVisibility(View.GONE); }else if (mSpec.originalable) { mOriginalLayout.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4300/buggy-version/matisse.src.main.java.com.zhihu.matisse.internal.ui.BasePreviewActivity.java", "BodyUseAPI": [], "Fixed commit": "3254bc83fec5ddb8f3ed636c77587818b1b315e4", "Url": "https://api.github.com/repos/mengxn/Matisse", "Date": "2018-07-28T08:21:01Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (vista.PersonController.deleteContact(sesion, ppl)) { loadContainer(); infLabel.setText((\"Contactos borrados: \" + inf)); }else infLabel.setText(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9817/buggy-version/src.vista.MenuContactos.java", "BodyUseAPI": [], "Fixed commit": "a1d6c9f8dc542a3500df6a37c498311ec6afda82", "Url": "https://api.github.com/repos/ivitojv/ProyectoLista", "Date": "2018-04-16T08:37:51Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((total) > 0) { de.uni_mannheim.informatik.dws.winter.utils.ProgressReporter.logger.info(java.lang.String.format(\"%s: %,d / %,d elements completed (%.2f%%) after %s\", message, done, total, ((((double) (done)) / ((double) (total))) * 100), org.apache.commons.lang3.time.DurationFormatUtils.formatDurationHMS(durationSoFar))); }else { de.uni_mannheim.informatik.dws.winter.utils.ProgressReporter.logger.info(java.lang.String.format(\"%s: %,d elements completed after %s\", message, done, org.apache.commons.lang3.time.DurationFormatUtils.formatDurationHMS(durationSoFar))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8054/buggy-version/winter-framework.src.main.java.de.uni_mannheim.informatik.dws.winter.utils.ProgressReporter.java", "BodyUseAPI": [], "Fixed commit": "84296bb1dc71862d6b0f0aa4b2d7414fbb26a94a", "Url": "https://api.github.com/repos/olehmberg/winter", "Date": "2018-08-21T16:46:46Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getItem()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8869/buggy-version/src.main.java.xyz.jaoafa.mymaid.EventHandler.AntiPotion.java", "BodyUseAPI": [], "Fixed commit": "36801afc7532deca79b9ef6b78e9ece0749542b5", "Url": "https://api.github.com/repos/book000/MyMaid", "Date": "2018-01-20T15:03:08Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerInteractEvent.getItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (item == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8869/buggy-version/src.main.java.xyz.jaoafa.mymaid.EventHandler.AntiPotion.java", "BodyUseAPI": [], "Fixed commit": "36801afc7532deca79b9ef6b78e9ece0749542b5", "Url": "https://api.github.com/repos/book000/MyMaid", "Date": "2018-01-20T15:03:08Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getItem().getItemStack()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (item == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8869/buggy-version/src.main.java.xyz.jaoafa.mymaid.EventHandler.AntiPotion.java", "BodyUseAPI": [], "Fixed commit": "36801afc7532deca79b9ef6b78e9ece0749542b5", "Url": "https://api.github.com/repos/book000/MyMaid", "Date": "2018-01-20T15:03:08Z"},
{"Line": "=>1164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(rf.getFactName().equals(\"attack\"))) { newGenerateFacts.add(new FactWithType(varsType, rf)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2205/buggy-version/src.FixpointsSort.java", "BodyUseAPI": ["java.util.List<FactWithType>.add(FactWithType)"], "Fixed commit": "6fcbce900add9e62570ac4a3f1f96d32548a527f", "Url": "https://api.github.com/repos/BihangDTU/AIFproject", "Date": "2018-05-23T21:43:59Z"},
{"Line": "=>1309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((UserDefType.containsKey(t2.getVarName())) && (UserDefType.containsKey(t1.getVarName()))) { if (!(UserDefType.get(t2.getVarName()).containsAll(UserDefType.get(t1.getVarName())))) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2205/buggy-version/src.FixpointsSort.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.get(t2.getVarName())", "java.util.List<java.lang.String>.containsAll(java.util.List<java.lang.String>)", "Term.getVarName()", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.get(t1.getVarName())", "Term.getVarName()"], "Fixed commit": "6fcbce900add9e62570ac4a3f1f96d32548a527f", "Url": "https://api.github.com/repos/BihangDTU/AIFproject", "Date": "2018-05-23T21:43:59Z"},
{"Line": "=>933", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.Objects.equals(state, \"opened\")) textViewState.setText(getString(R.string.state_opened)); else if (java.util.Objects.equals(state, \"closed\")) textViewState.setText(getString(R.string.state_closed));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3210/buggy-version/app.src.main.java.com.integrapp.integrapp.Adverts.SingleAdvertFragment.java", "BodyUseAPI": ["java.util.Objects.equals(java.lang.String,java.lang.String)"], "Fixed commit": "df8e85297336c6518d496f14e10396e9d02f99ae", "Url": "https://api.github.com/repos/ahuangfeng/IntegrApp_Android", "Date": "2018-06-10T17:14:43Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sudoku.model.Board.getSize()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (size == 9) { distances[0] = 9; distances[1] = 6; distances[2] = 12; distances[3] = 9; }else if (size == 4) { distances[0] = 34; distances[1] = 20; distances[2] = 26; distances[3] = 34; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3959/buggy-version/src.sudoku.dialog.BoardPanel.java", "BodyUseAPI": [], "Fixed commit": "13db16fd3ce5674bdd88e4eb1c3699f4cc9cd30f", "Url": "https://api.github.com/repos/uribea/SudokuHW2", "Date": "2018-04-16T01:43:20Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["versione_2.controller.View.operatore_view(versione_2.controller.Operatore)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (scelta == 4) { int id = this.view.ricerca_risorsa_id(); versione_2.controller.Categoria cat = db.carica_root_categorie(); versione_2.controller.Risorsa res = cat.get_risorsa_by_id(cat, id); if (res != null) { if (res instanceof versione_2.controller.Libro) { res.rimuovi_descrizione(); db.salva_categoria_root(cat); }else if (res instanceof versione_2.controller.Film) { res.aggiungi_descrizione(this.view.nuova_descrizione_film()); } }else { this.view.scrivi(\"Risorsa non trovata\"); } this.operatore_loggato(operatore); }else if (scelta == 5) { versione_2.controller.Categoria c = db.carica_root_categorie(); java.util.ArrayList<versione_2.controller.Risorsa> risultato = new java.util.ArrayList<>(); c.carica_tutte_risorse(c, risultato); if (!(risultato.isEmpty())) { for (versione_2.controller.Risorsa r : risultato) { this.view.scrivi(r.toString()); } }else { this.view.scrivi(\"Nulla trovato\"); } this.operatore_loggato(operatore); }else { this.user_loggato(operatore.getUtente()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6444/buggy-version/src.versione_2.controller.Controller.java", "BodyUseAPI": [], "Fixed commit": "63109e2b5b1cfda8a01f25fc7000aed3d3f58dd4", "Url": "https://api.github.com/repos/Tomawock/IDS_Progetto", "Date": "2018-09-23T07:43:03Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((base.getRisorse()) != null) { for (versione_2.model.Risorsa r : base.getRisorse()) { if ((r.get_id()) == id) return r; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6444/buggy-version/src.versione_2.model.Categoria.java", "BodyUseAPI": ["versione_2.model.Categoria.getRisorse()"], "Fixed commit": "63109e2b5b1cfda8a01f25fc7000aed3d3f58dd4", "Url": "https://api.github.com/repos/Tomawock/IDS_Progetto", "Date": "2018-09-23T07:43:03Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInEditMode())) { if ((((shard) == null) && ((initialName) != null)) && (!(owner.getInstanceStateStore().isStateRestored()))) { shard = getShardFactory().newInstance(initialName, Bundle.EMPTY); fm.add(shard, this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3044/buggy-version/shard.src.main.java.me.tatarka.shard.wiget.ShardHost.java", "BodyUseAPI": [], "Fixed commit": "be584faa3e5701190bb515b972539cc448ffed44", "Url": "https://api.github.com/repos/evant/android-shard", "Date": "2018-09-30T18:59:23Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInEditMode())) { if ((((shard) == null) && ((startPage) != 0)) && (!(owner.getInstanceStateStore().isStateRestored()))) { setCurrentPage(startPage, null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3044/buggy-version/shard.src.main.java.me.tatarka.shard.wiget.ShardPageHost.java", "BodyUseAPI": [], "Fixed commit": "be584faa3e5701190bb515b972539cc448ffed44", "Url": "https://api.github.com/repos/evant/android-shard", "Date": "2018-09-30T18:59:23Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i.getNextID()) != (target.getID())) { main.Debug.log(\"Uh oh! Client and server IDs are out of sync. There will be problems.\", \"Multiplayer\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7027/buggy-version/src.multiplayer.comms.command.action.CreateCommand.java", "BodyUseAPI": [], "Fixed commit": "2076f3753ceb444aeaf8b101f5d4ff47c39b65dc", "Url": "https://api.github.com/repos/andy98725/Base-Wars-3", "Date": "2018-10-03T03:49:01Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((requestCode == (com.owncloud.android.ui.activity.UploadFilesActivity.REQUEST_SCANNED_DOCUMENT_CROP)) && (resultCode == (RESULT_OK))) { android.os.Bundle croppedDocumentData = capturedData.getExtras(); java.lang.String croppedDocumentImagePath = ((java.lang.String) (croppedDocumentData.get(com.owncloud.android.ui.activity.UploadFilesActivity.CROPPED_SCANNED_DOCUMENT_IMAGE_PATH))); new com.owncloud.android.ui.activity.UploadFilesActivity.CheckAvailableSpaceTask(croppedDocumentImagePath).execute(); }else if (((requestCode == (com.owncloud.android.ui.activity.UploadFilesActivity.REQUEST_IMAGE_CAPTURE)) || (requestCode == (com.owncloud.android.ui.activity.UploadFilesActivity.REQUEST_DOCUMENT_SCAN))) && (resultCode == (RESULT_CANCELED))) { if ((image) != null) { image.delete(); com.owncloud.android.lib.common.utils.Log_OC.d(com.owncloud.android.ui.activity.UploadFilesActivity.TAG, \"File deleted\"); } setResult(com.owncloud.android.ui.activity.RESULT_CANCELED); finish(); }else if (resultCode == (RESULT_CANCELED)) { setResult(com.owncloud.android.ui.activity.RESULT_CANCELED); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9818/buggy-version/src.com.owncloud.android.ui.activity.UploadFilesActivity.java", "BodyUseAPI": [], "Fixed commit": "c90f38c2bf953ef7725bc24319f2ddac85ae62b1", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-03-14T05:32:11Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((processingThread) != null) { processingThread.interrupt(); processingThread = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9042/buggy-version/speech.src.main.java.com.mpontus.speech.AudioRecordHandler.java", "BodyUseAPI": [], "Fixed commit": "791e82d826874eca0bbaf49516708e60c2b6932c", "Url": "https://api.github.com/repos/mpontus/Dictio", "Date": "2018-07-10T15:48:09Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(addressList.isEmpty())) MainApp.myRegisters.writeToRegister(\"PC\", java.lang.String.valueOf(addressList.get(0)), 12);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8106/buggy-version/CSCI_6461_GroupProject.src.InstructionList.java", "BodyUseAPI": ["java.lang.String.valueOf(java.lang.Integer)", "java.util.Vector<java.lang.Integer>.get(int)", "MainApp.myRegisters.writeToRegister(java.lang.String,java.lang.String,int)"], "Fixed commit": "d54b3f25a7e2ae9f3e109f3c249448ac25f0c570", "Url": "https://api.github.com/repos/JieHe96/CSCI-6461_GroupProject", "Date": "2018-09-21T20:14:56Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.getClass()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.snapscript.core.type.Type.class.isInstance(type)) { throw new org.snapscript.core.error.InternalArgumentException((\"Illegal index of type \" + left)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4840/buggy-version/snap-tree.src.main.java.org.snapscript.tree.collection.CollectionIndex.java", "BodyUseAPI": [], "Fixed commit": "a85d26fbbbfefe881c616d178a7d5548f11fb971", "Url": "https://api.github.com/repos/snapscript/snap", "Date": "2018-07-01T22:03:44Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(((swing_app.JsonObject) (entry)).has(\"senses\"))) { java.lang.String derivation = ((swing_app.JsonObject) (lex)).get(\"derivativeOf\").getAsJsonArray().get(1).getAsJsonObject().get(\"text\").getAsString(); doc.insertBeforeEnd(doc.getElement(lexCategory), ((\"<li>\" + derivation) + \"</li>\")); }else { swing_app.JsonArray senses = ((swing_app.JsonObject) (entry)).get(\"senses\").getAsJsonArray(); for (swing_app.JsonElement sense : senses) { java.lang.String definition = ((swing_app.JsonObject) (sense)).get(\"definitions\").getAsJsonArray().get(0).getAsString(); doc.insertBeforeEnd(doc.getElement(lexCategory), ((\"<li>\" + definition) + \"</li>\")); if (((swing_app.JsonObject) (sense)).has(\"subsenses\")) { for (swing_app.JsonElement subsense : ((swing_app.JsonObject) (sense)).get(\"subsenses\").getAsJsonArray()) { definition = ((swing_app.JsonObject) (subsense)).get(\"definitions\").getAsJsonArray().get(0).getAsString(); doc.insertBeforeEnd(doc.getElement(lexCategory), ((\"<li>\" + definition) + \"</li>\")); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5247/buggy-version/src.swing_app.LetterGridPanel.java", "BodyUseAPI": ["swing_app.JsonElement.get(java.lang.String)", "((swing_app.JsonObject) (entry)).get(\"senses\").getAsJsonArray()"], "Fixed commit": "41c4255c5e002561cb2a90bcd47d2b97c79b3690", "Url": "https://api.github.com/repos/xdqc/letterpress-solver", "Date": "2018-02-18T07:07:09Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (parameterValue == null) { return defaultDDMFormFieldParameterValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5038/buggy-version/dynamic-data-mapping-type-checkbox.src.main.java.com.liferay.dynamic.data.mapping.type.checkbox.internal.CheckboxDDMFormFieldValueRequestParameterRetriever.java", "BodyUseAPI": [], "Fixed commit": "e20811ca8f341c0d150a9a67c01fa7323b9a023a", "Url": "https://api.github.com/repos/liferay/com-liferay-dynamic-data-mapping", "Date": "2017-07-19T13:52:52Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (parameterValue == null) { return defaultDDMFormFieldParameterValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5038/buggy-version/dynamic-data-mapping-type-radio.src.main.java.com.liferay.dynamic.data.mapping.type.radio.internal.RadioDDMFormFieldValueRequestParameterRetriever.java", "BodyUseAPI": [], "Fixed commit": "e20811ca8f341c0d150a9a67c01fa7323b9a023a", "Url": "https://api.github.com/repos/liferay/com-liferay-dynamic-data-mapping", "Date": "2017-07-19T13:52:52Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (contentRead) { return -1; }else { contentRead = true; bb.put(content); return content.length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9757/buggy-version/filedistribution.src.main.java.com.yahoo.vespa.filedistribution.FileReferenceDataBlob.java", "BodyUseAPI": [], "Fixed commit": "9869141c46d299e84ac9285a3ee575e49cb1970a", "Url": "https://api.github.com/repos/vespa-engine/vespa", "Date": "2018-01-30T08:33:06Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(cursor.getColumnIndex(me.murks.filmchecker.io.FilmDb.RM_ENDPOINT_COLUMN))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (rmEndpoint != null) { endpoint = new java.net.URL(rmEndpoint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8748/buggy-version/app.src.main.java.me.murks.filmchecker.io.FilmDb.java", "BodyUseAPI": [], "Fixed commit": "f647603b8e4f49550da4d9635db595ae10c17681", "Url": "https://api.github.com/repos/zouroboros/filmchecker", "Date": "2018-02-24T19:30:14Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["et_contact.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (databaseHelper.readContacts().contains(number)) { android.widget.Toast.makeText(this, \"Contact Exists\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/73/buggy-version/app.src.main.java.com.example.ravi.besafe.ContactsSettings.java", "BodyUseAPI": [], "Fixed commit": "9a6250900d7eae7ee06641f7ef738ff92c431d81", "Url": "https://api.github.com/repos/raviraxx/BeSafe", "Date": "2018-06-05T23:45:05Z"},
{"Line": "=>1386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((extra_text.split(\"@\").length) == 1) extra_text = ((\"@\" + extra_text) + \"@\") + (fr.gouv.etalab.mastodon.helper.Helper.getLiveInstance(context)); else extra_text = \"@\" + extra_text;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5617/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.drawers.StatusListAdapter.java", "BodyUseAPI": [], "Fixed commit": "85033b2215498b7036ae5dd97a5da4ce077eceb8", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2018-04-04T14:43:54Z"},
{"Line": "=>1392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.N)) contentToot = android.text.Html.fromHtml(((status.getReblog()) != null ? status.getReblog().getContent() : status.getContent()), Html.FROM_HTML_MODE_LEGACY).toString(); else contentToot = android.text.Html.fromHtml(((status.getReblog()) != null ? status.getReblog().getContent() : status.getContent())).toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5617/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.drawers.StatusListAdapter.java", "BodyUseAPI": [], "Fixed commit": "85033b2215498b7036ae5dd97a5da4ce077eceb8", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2018-04-04T14:43:54Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (str.toLowerCase().equals(\"``````\")) { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2197/buggy-version/src.main.java.io.github.lunarwatcher.java.haileybot.CrashHandler.java", "BodyUseAPI": [], "Fixed commit": "a26ea2d4005fe2d493fbfd8032806a1e3aa19751", "Url": "https://api.github.com/repos/LunarWatcher/Hailey", "Date": "2018-09-24T07:09:45Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.licraft.apt.config.BeanInterpreter.getFieldConfiguration(com.licraft.apt.config.AnnotationInterpreter,org.bukkit.configuration.ConfigurationSection)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (fieldConfiguration == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8757/buggy-version/licraft-apt.src.main.java.com.licraft.apt.config.BeanInterpreter.java", "BodyUseAPI": [], "Fixed commit": "152d56e4bce3a19c8776d8577c4cca4d065ede60", "Url": "https://api.github.com/repos/licraft-club/LicraftLib", "Date": "2018-03-09T13:29:27Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.godson.kekbot.KekBot.twitterManager) != null) com.godson.kekbot.KekBot.twitterManager.shutdown(reason);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5718/buggy-version/src.main.java.com.godson.kekbot.KekBot.java", "BodyUseAPI": [], "Fixed commit": "82520a228173a000d1229d92ccc9f743504d2e3b", "Url": "https://api.github.com/repos/Godson777/KekBot", "Date": "2018-04-13T23:44:53Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(name.contains(\"cleaned\"))) { dbList.add(getDispName(name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5869/buggy-version/PastRecordings.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "application.PastRecordings.getDispName(java.lang.String)"], "Fixed commit": "e66614efe1aec2c456d9d1314b946eeabbad0ff6", "Url": "https://api.github.com/repos/FrankWangma/Softeng206_Project", "Date": "2018-10-14T09:15:54Z"},
{"Line": "=>519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((me.digi.sdk.core.DigiMeClient.caContractIds) == null) && ((me.digi.sdk.core.DigiMeClient.postboxContractIds) == null)) throw new me.digi.sdk.core.DigiMeException(\"Allowed types for contract ID are only string-array or string. Check that you have set the correct meta-data type.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4189/buggy-version/digime-core.src.main.java.me.digi.sdk.core.DigiMeClient.java", "BodyUseAPI": [], "Fixed commit": "12821c3e8c18338cb120cf4d410c1b44103e2b33", "Url": "https://api.github.com/repos/digime/digime-android-sdk", "Date": "2018-09-05T15:59:15Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.gitlab.ardash.appleflinger.global.GameManager.DEBUG) java.lang.System.out.println((((((\"s touc \" + x) + \",\") + y) + \" ev: \") + (event.getRelatedActor())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4636/buggy-version/core.src.com.gitlab.ardash.appleflinger.GameRenderer.java", "BodyUseAPI": [], "Fixed commit": "2b46111223a710e74747321175ff2e7bcf45e877", "Url": "https://api.github.com/repos/ar-/apple-flinger", "Date": "2018-10-11T13:53:10Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.gitlab.ardash.appleflinger.global.GameManager.DEBUG) java.lang.System.out.println((((((\"s drag \" + x) + \",\") + y) + \"ev:\") + (event.getRelatedActor())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4636/buggy-version/core.src.com.gitlab.ardash.appleflinger.GameRenderer.java", "BodyUseAPI": [], "Fixed commit": "2b46111223a710e74747321175ff2e7bcf45e877", "Url": "https://api.github.com/repos/ar-/apple-flinger", "Date": "2018-10-11T13:53:10Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gitlab.ardash.appleflinger.global.GameManager.getInstance().currentPlayer.slingshot.getSlingShotCenter()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((slingShotCenter.dst2(x, y)) < 1.0F) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4636/buggy-version/core.src.com.gitlab.ardash.appleflinger.GameRenderer.java", "BodyUseAPI": [], "Fixed commit": "2b46111223a710e74747321175ff2e7bcf45e877", "Url": "https://api.github.com/repos/ar-/apple-flinger", "Date": "2018-10-11T13:53:10Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.gitlab.ardash.appleflinger.global.GameManager.DEBUG) java.lang.System.out.println((((\"s dra2 \" + stageX) + \",\") + stageY));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4636/buggy-version/core.src.com.gitlab.ardash.appleflinger.GameRenderer.java", "BodyUseAPI": [], "Fixed commit": "2b46111223a710e74747321175ff2e7bcf45e877", "Url": "https://api.github.com/repos/ar-/apple-flinger", "Date": "2018-10-11T13:53:10Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (fieldSerializer == null) { hashNotMatch = true; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8107/buggy-version/src.main.java.com.alibaba.fastjson.serializer.JavaBeanSerializer.java", "BodyUseAPI": [], "Fixed commit": "7a7e923f42bea5c5e7e2520b842f88f4df40c128", "Url": "https://api.github.com/repos/GulajavaMinistudio/fastjson", "Date": "2018-04-03T02:07:37Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getDeptId()) == null) user.setDeptId(0L);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1214/buggy-version/src.main.java.cc.mrbird.system.service.impl.UserServiceImpl.java", "BodyUseAPI": ["cc.mrbird.system.domain.User.setDeptId(long)"], "Fixed commit": "cd6b7b79eb43a8a89240329480339d458436cce1", "Url": "https://api.github.com/repos/wuyouzhuguli/FEBS-Shiro", "Date": "2018-03-26T01:34:12Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(nodeStack.empty())) { int curDepth = tmpNode.getDepth(); int preDepth = nodeStack.peek().getDepth(); --curDepth; while ((curDepth - preDepth) >= 0) { sb.deleteCharAt(curDepth); --curDepth; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2241/buggy-version/src.cn.alone.algorithm.trie.PrefixTrie.java", "BodyUseAPI": ["nodeStack.peek().getDepth()", "java.util.Stack<cn.alone.algorithm.trie.TrieNode>.peek()"], "Fixed commit": "5bc5f0358d07971318a130239889ab79f9ae49c9", "Url": "https://api.github.com/repos/RojerAlone/DataStructAndAlgorithm", "Date": "2018-01-18T13:31:57Z"},
{"Line": "=>471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((batchid == null) || (batchid.equals(\"NULL\"))) { query = sess.createNativeQuery(((((((((\"UPDATE UserPolicyCode SET Code = \" + codeid) + \" WHERE (Email = '\") + email) + \"' and DocumentID = '\") + docid) + \"' and TablesID = \") + tableID) + \" AND isNull(BatchID));\")); }else { query = sess.createNativeQuery(((((((((((\"UPDATE UserPolicyCode SET Code = \" + codeid) + \" WHERE (Email = '\") + email) + \"' and DocumentID = '\") + docid) + \"' and TablesID = \") + tableID) + \" AND BatchID = \") + batchid) + \");\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2805/buggy-version/src.main.java.edu.temple.cla.policydb.ppdpapp.api.daos.DocumentDAOImpl.java", "BodyUseAPI": ["org.hibernate.Session.createNativeQuery(java.lang.String)"], "Fixed commit": "c4655921a106382229e2523e885a345794cefd86", "Url": "https://api.github.com/repos/pwolfgang/ppdpapp", "Date": "2018-03-13T18:11:15Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (players.containsKey(entity.id)) getPlayerById(entity.id).update(entity); else players.put(entity.id, new shared.client.Player(entity));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1464/buggy-version/src.shared.client.ClientModel.java", "BodyUseAPI": ["shared.client.ClientModel.getPlayerById(entity.id)", "shared.client.Player.update(ch.ntb.jass.common.entities.PlayerEntity)", "java.util.Map<java.lang.Integer, shared.client.Player>.put(entity.id,shared.client.Player)"], "Fixed commit": "3de4a59629b0be013745c11fe45386787752b89c", "Url": "https://api.github.com/repos/mcalzaferri/Schieber", "Date": "2018-04-22T21:26:59Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((majiangGame.getJu()) != null) { juResult = majiangGame.getJu().getJuResult(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7446/buggy-version/src.main.java.com.anbang.qipai.fangpaomajiang.cqrs.c.domain.MajiangGameValueObject.java", "BodyUseAPI": [], "Fixed commit": "85dc1f78ef94a0ba509a43f16e49031d499f47fd", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_fangpaomajiang", "Date": "2018-09-20T09:37:51Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (category == 3) return Words.words3[((int) ((java.lang.Math.random()) * 10))];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7042/buggy-version/src.main.java.Words.java", "BodyUseAPI": [], "Fixed commit": "f8cdfe15f5817d3c4064734266897ac31522b0d6", "Url": "https://api.github.com/repos/zw23/Hangman", "Date": "2018-02-21T17:51:28Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((category > 3) || (category < 1)) { java.lang.System.out.println(\"Please enter a valid number.\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7042/buggy-version/src.main.java.Words.java", "BodyUseAPI": [], "Fixed commit": "f8cdfe15f5817d3c4064734266897ac31522b0d6", "Url": "https://api.github.com/repos/zw23/Hangman", "Date": "2018-02-21T17:51:28Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (key.startsWith(\"z_\")) { }else { executionPath.addProgressStep(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1297/buggy-version/src.za.ac.up.cs.ThreeValuedModelChecker.java", "BodyUseAPI": ["za.ac.up.cs.Path.addProgressStep(java.lang.String)"], "Fixed commit": "183cac1e32966e819de7aefd6c113167e73c3f30", "Url": "https://api.github.com/repos/ssfm-up/TVMC", "Date": "2018-02-22T19:55:15Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jdom.Element.getAttributeValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (pfString != null) { if (pfString.equals(\"AStarPathFinding\")) pf = new ai.abstraction.pathfinding.AStarPathFinding(); if (pfString.equals(\"BFSPathFinding\")) pf = new ai.abstraction.pathfinding.BFSPathFinding(); if (pfString.equals(\"FloodFillPathFinding\")) pf = new ai.abstraction.pathfinding.FloodFillPathFinding(); if (pfString.equals(\"GreedyPathFinding\")) pf = new ai.abstraction.pathfinding.GreedyPathFinding(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3674/buggy-version/src.ai.abstraction.AbstractAction.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "6adf8fc6ac16b4e9ef2133544e1385babbec0833", "Url": "https://api.github.com/repos/santiontanon/microrts", "Date": "2018-04-22T17:08:59Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (showAll) { popup.getMenuInflater().inflate(R.menu.popup_menu2, popup.getMenu()); }else { popup.getMenuInflater().inflate(R.menu.popup_menu, popup.getMenu()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8159/buggy-version/app.src.main.java.woc.bhavye.letsfindit.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "16e0b209247afd072e84272fdb44497a2102afb9", "Url": "https://api.github.com/repos/bhavyejain/LetsFindIt", "Date": "2018-01-03T12:55:25Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (emitEventTimestamps) { c.outputWithTimestamp(e, e.getTimestamp().toInstant()); }else { c.output(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4769/buggy-version/src.main.java.com.mozilla.secops.httprequest.HTTPRequest.java", "BodyUseAPI": [], "Fixed commit": "32bb1ea251fa6a4445633d243c992e0d0f2a79ab", "Url": "https://api.github.com/repos/mozilla-services/foxsec-pipeline", "Date": "2018-10-16T19:32:54Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (locked) { lock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5853/buggy-version/betterrandom.src.main.java.io.github.pr0methean.betterrandom.prng.RandomWrapper.java", "BodyUseAPI": [], "Fixed commit": "3571147b6b924e7c399093f1f98b5106f1ce13f6", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2018-05-04T11:57:05Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lock) != null) { lock.lock(); locked = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5853/buggy-version/betterrandom.src.main.java.io.github.pr0methean.betterrandom.prng.RandomWrapper.java", "BodyUseAPI": [], "Fixed commit": "3571147b6b924e7c399093f1f98b5106f1ce13f6", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2018-05-04T11:57:05Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((lDistSrc) != null) && ((rDistSrc) != null)) { lInitDist = lDistSrc.getDistance(); rInitDist = rDistSrc.getDistance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7033/buggy-version/src.robot.pathfinder.follower.TankFollower.java", "BodyUseAPI": [], "Fixed commit": "78700658284cb9902996ab959aabb8e53e0c2a70", "Url": "https://api.github.com/repos/Arctos6135/RobotPathfinder", "Date": "2018-09-18T20:01:46Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((directionSrc) != null) { initDirection = directionSrc.getDirection(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7033/buggy-version/src.robot.pathfinder.follower.TankFollower.java", "BodyUseAPI": [], "Fixed commit": "78700658284cb9902996ab959aabb8e53e0c2a70", "Url": "https://api.github.com/repos/Arctos6135/RobotPathfinder", "Date": "2018-09-18T20:01:46Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.ConnectivityManager.getActiveNetworkInfo()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((networkInfo != null) && (networkInfo.isConnected())) { isAvailable = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7425/buggy-version/Stormy.app.src.main.java.com.example.yhussein.stormy.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "457d0aed385f7926bf2bf851cb5db471f3658f56", "Url": "https://api.github.com/repos/yahya09206/Android-Development", "Date": "2018-09-07T06:00:59Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((o2.getValue()) - (o1.getValue())) > 0) return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8116/buggy-version/src.coinpurse.ValueComparator.java", "BodyUseAPI": [], "Fixed commit": "1d1237bd0c560ab298340b2067b457443ed9ad8f", "Url": "https://api.github.com/repos/OOP2018/coinpurse-BasPasut", "Date": "2018-02-05T08:35:00Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!status) { mViewpager.setCurrentItem(((mTimePeriodList.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1767/buggy-version/app.src.main.java.com.rescribe.doctor.ui.fragments.patient.patient_history_fragment.PatientHistoryListFragmentContainer.java", "BodyUseAPI": [], "Fixed commit": "4a9344d7411e9d1276c3c9ebdec1c5d74c1c0068", "Url": "https://api.github.com/repos/sandeepbahalkar123/rescribeDoctor_repo", "Date": "2018-05-10T06:36:47Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (maxWellNum > (wells.size())) { return maxWellNum; }else { return wells.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9455/buggy-version/src.main.java.de.embl.cba.plateviewer.CellFileMapsGenerator.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.size()"], "Fixed commit": "63fcb9a17380e2271886b9b9dd124b2a7562d0e7", "Url": "https://api.github.com/repos/tischi/fiji-plugin-plateViewer", "Date": "2018-08-15T09:56:29Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((ExpandableItem) != null) && ((ExpandableItem.TAG) != null)) { com.hendraanggrian.widget.ExpandableItem expandableItem = ((com.hendraanggrian.widget.ExpandableItem) (lm.getChildAt(((currentPosition) - (lm.findFirstVisibleItemPosition()))).findViewWithTag(ExpandableItem.TAG))); if (expandableItem.isOpened()) { expandableItem.hide(); }else { expandableItem.show(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9801/buggy-version/recyclerview-expandable.src.com.hendraanggrian.widget.ExpandableRecyclerView.java", "BodyUseAPI": [], "Fixed commit": "c02b111c84b0f177bb1ac764de4c1987808c0c5d", "Url": "https://api.github.com/repos/qurash98/recyclerview-expandable", "Date": "2018-10-26T06:06:46Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((grammarsParser.ClassDeclContext) (ctx.parent)).ID().getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ctx.ID().getText()) != father) { throw new MemberError(\"Constructor's name should match class name.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8115/buggy-version/src.BuildASTVisitor.java", "BodyUseAPI": [], "Fixed commit": "51c8228914de46c5a604117c8589f9326a64ae84", "Url": "https://api.github.com/repos/New-bottle/Compiler", "Date": "2018-05-03T13:35:36Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(servlet.Dict.dictionary.containsKey(mnemo_))) (svlt.tags)++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2505/buggy-version/src.servlet.Dict.java", "BodyUseAPI": [], "Fixed commit": "c8bf63b1354d908a1d064f578d8b5f406501bd93", "Url": "https://api.github.com/repos/pamagite/tekhn4", "Date": "2018-02-25T10:59:38Z"},
{"Line": "=>797", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((child.getToken().getType()) != (HiveParser.TOK_NOT_NULL)) && enable) { throw new org.apache.hadoop.hive.ql.parse.SemanticException(ErrorMsg.INVALID_CSTR_SYNTAX.getMsg((\"ENABLE/ENFORCED feature not supported yet. \" + \"Please use DISABLE/NOT ENFORCED instead.\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9834/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.parse.BaseSemanticAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "a281c704dafd86d26e380a8087befb8c883882aa", "Url": "https://api.github.com/repos/vineetgarg02/hive", "Date": "2018-02-01T23:18:18Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.cornellsatech.o_week.UserData.selectedEventsContains(event)) { com.cornellsatech.o_week.UserData.removeFromSelectedEvents(event); com.cornellsatech.o_week.UserData.insertToSelectedEvents(event); if (remindersOn) com.cornellsatech.o_week.util.Notifications.scheduleForEvent(event, context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3035/buggy-version/O-week.app.src.main.java.com.cornellsatech.o_week.util.Internet.java", "BodyUseAPI": ["com.cornellsatech.o_week.util.Notifications.scheduleForEvent(com.cornellsatech.o_week.models.Event,android.content.Context)", "com.cornellsatech.o_week.UserData.insertToSelectedEvents(com.cornellsatech.o_week.models.Event)", "com.cornellsatech.o_week.UserData.removeFromSelectedEvents(com.cornellsatech.o_week.models.Event)"], "Fixed commit": "08d52437d31a8c87cbc7753332480dc07ab8afb8", "Url": "https://api.github.com/repos/cornell-dti/o-week-android", "Date": "2018-01-18T11:01:59Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.query(DatabaseContract.HistoriqueEntry.TABLE_NAME,java.lang.String[],java.lang.String,java.lang.String[],<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(cursor.moveToNext())) contentValues.put(DatabaseContract.HistoriqueEntry.KETONE, results[0]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9467/buggy-version/app.src.main.java.com.mr_rude.healthassistance.DashboardFragment.java", "BodyUseAPI": [], "Fixed commit": "e7cb1b60fb4b5b25b631ab3ffe2b832ab0265ec0", "Url": "https://api.github.com/repos/SalaheddineBoukhoulda/Diabete_Check", "Date": "2018-06-18T17:53:47Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name.startsWith(\"AppsV1beta2\")) { return \"apps/v1beta2\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3375/buggy-version/util.src.main.java.io.kubernetes.client.util.Yaml.java", "BodyUseAPI": [], "Fixed commit": "9e0b3b816ab618e3d99b35e5d41ada68243128c7", "Url": "https://api.github.com/repos/brendandburns/java", "Date": "2018-04-20T13:36:48Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getServer().getPluginManager()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pm.isPluginEnabled(\"PlaceholderAPI\")) { new io.github.kuohsuanlo.servertweaks.util.AddPlaceholder(this).hook(); }else { throw new java.lang.RuntimeException(((io.github.kuohsuanlo.servertweaks.ServerTweaksPlugin.PREFIX) + \"Could not find PlaceholderAPI!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1222/buggy-version/src.main.java.io.github.kuohsuanlo.servertweaks.ServerTweaksPlugin.java", "BodyUseAPI": [], "Fixed commit": "78dae5bfac0747bd954959c711799809848c1f5c", "Url": "https://api.github.com/repos/kuohsuanlo/ServerTweaks", "Date": "2018-01-07T15:41:14Z"},
{"Line": "=>1755", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.alibaba.android.vlayout.ExposeLinearLayoutManagerEx.DEBUG) { android.util.Log.d(com.alibaba.android.vlayout.ExposeLinearLayoutManagerEx.TAG, (((\"position \" + (mPosition)) + \" mCoordinate \") + (mCoordinate))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7823/buggy-version/vlayout.src.main.java.com.alibaba.android.vlayout.ExposeLinearLayoutManagerEx.java", "BodyUseAPI": [], "Fixed commit": "e68722d1dad20b79a038d20d3645bcd3bcbd02a9", "Url": "https://api.github.com/repos/alibaba/vlayout", "Date": "2018-01-07T11:24:13Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user) == null) { java.lang.System.out.println((\"Not logged in \" + username)); response.sendRedirect(\"/login\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9353/buggy-version/src.main.java.codeu.controller.ProfileServlet.java", "BodyUseAPI": [], "Fixed commit": "bfa94732f5be93c360fe6bfc543cd0a45421e748", "Url": "https://api.github.com/repos/edreichua/CodeU-Summer-2018", "Date": "2018-08-01T23:27:05Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list == null) || (com.google.common.collect.Iterables.isEmpty(list))) { timber.log.Timber.w(\"No geo points provided to center the route!!!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5873/buggy-version/app.src.main.java.rs.necukuci.fragments.GmapFragment.java", "BodyUseAPI": [], "Fixed commit": "b45c6a01285c4411c5b437cac9420eea2ebaf85e", "Url": "https://api.github.com/repos/mdmilic/NecuKuci", "Date": "2018-10-30T12:15:58Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.nasa.jpf.vm.StackFrame.popDouble()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (v1 == 0) { return ti.createAndThrowException(\"java.lang.ArithmeticException\", \"division by zero\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7232/buggy-version/src.main.gov.nasa.jpf.jvm.bytecode.DDIV.java", "BodyUseAPI": [], "Fixed commit": "65a8b24090dc95a8b89747c42bfeaced86bea3a9", "Url": "https://api.github.com/repos/javapathfinder/jpf-core", "Date": "2018-01-23T20:47:37Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eme.model.datatypes.ExtractedDataType.getFullArrayType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (model.contains(dataTypeName)) { addTypeParameters(eDataType, model.getType(dataTypeName)); }else if (!(extractedDataType.getGenericArguments().isEmpty())) { eme.generator.EDataTypeGenerator.logger.error((\"Can not resolve type parameters for \" + (extractedDataType.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5207/buggy-version/src.main.java.eme.generator.EDataTypeGenerator.java", "BodyUseAPI": ["eme.generator.EDataTypeGenerator.addTypeParameters(org.eclipse.emf.ecore.EDataType,model.getType(dataTypeName))", "eme.model.IntermediateModel.getType(java.lang.String)"], "Fixed commit": "7114e862029d4cfc17c36fd982f826702c3747fb", "Url": "https://api.github.com/repos/tsaglam/EcoreMetamodelExtraction", "Date": "2018-07-31T12:04:59Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.iu.dsc.tws.comms.mpi.MPIMessage.getKeyType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((keyType == (edu.iu.dsc.tws.comms.api.MessageType.BUFFER)) || (keyType == (edu.iu.dsc.tws.comms.api.MessageType.STRING))) || (keyType == (edu.iu.dsc.tws.comms.api.MessageType.BYTE))) || (keyType == (edu.iu.dsc.tws.comms.api.MessageType.OBJECT))) { data = edu.iu.dsc.tws.comms.mpi.io.types.DataDeserializer.getAsByteBuffer(currentMessage.getBuffers(), (((currentMessage.getHeader().getLength()) - (keyPair.getKey())) - 4), type); }else { data = edu.iu.dsc.tws.comms.mpi.io.types.DataDeserializer.getAsByteBuffer(currentMessage.getBuffers(), ((currentMessage.getHeader().getLength()) - (keyPair.getKey())), type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4166/buggy-version/twister2.comms.src.java.edu.iu.dsc.tws.comms.mpi.io.MPIMessageDeSerializer.java", "BodyUseAPI": [], "Fixed commit": "51becf331dc617dc84fece4a98a7d2c5b414241e", "Url": "https://api.github.com/repos/DSC-SPIDAL/twister2", "Date": "2018-02-23T20:42:53Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pl.coderslab.repositories.UserRepository.findFirstByUsername(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (user == null) { session.setAttribute(\"loggedUser\", null); model.addAttribute(\"infoError\", \"Dane logowania niepoprawne!\"); return \"userLoginForm\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6051/buggy-version/Warsztaty6.src.main.java.pl.coderslab.controllers.UserLoginController.java", "BodyUseAPI": [], "Fixed commit": "402ed9fe8b52d00bfc7e0e2ccc53449849086320", "Url": "https://api.github.com/repos/mav80/Workshop-6-Twitter", "Date": "2018-07-09T07:08:26Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getResponseCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (responseCode == 200) { result = \"OK\"; }else if (responseCode == 401) { java.io.InputStream errorstream = conn.getErrorStream(); if (errorstream != null) { java.io.BufferedReader br = new java.io.BufferedReader(new java.io.InputStreamReader(errorstream)); java.lang.String response = \"\"; java.lang.String tempString; while ((tempString = br.readLine()) != null) { response += tempString; } android.util.Log.i(org.odk.collect.android.activities.LoginActivity.class.toString(), response); boolean isFound = ((response.indexOf(\"Using basic authentication without HTTPS\")) != (-1)) ? true : false; if (isFound) { result = \"OK\"; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9269/buggy-version/collect_app.src.main.java.org.odk.collect.android.activities.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "4be1f5ababa2bae1bf7830756a1ba668c7f9794f", "Url": "https://api.github.com/repos/meomancer/collect", "Date": "2018-09-06T12:49:58Z"},
{"Line": "=>771", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hub.sam.dbl.PlainSymbolReference.getClassifier()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (symbolClassifier instanceof java.lang.Class) { java.lang.Class clazz = ((java.lang.Class) (symbolClassifier)); return addIdsForAttributes(clazz, eObjectId, allIds); }else if (symbolClassifier instanceof hub.sam.dbl.Interface) { hub.sam.dbl.Interface iface = ((hub.sam.dbl.Interface) (symbolClassifier)); return addIdsForMethods(iface, eObjectId, allIds); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3041/buggy-version/dev-plugins.hub.sam.dmx.src.hub.sam.dmx.editor.semantics.DblIdentificationScheme.java", "BodyUseAPI": [], "Fixed commit": "cbef2391ed11d5f41011d389230bb555ff54e105", "Url": "https://api.github.com/repos/ablunk/dmx", "Date": "2017-08-20T20:09:04Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.sketchView.SketchViewContainer.hasInstance()) { com.sketchView.SketchViewContainer.getInstance().release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1348/buggy-version/react-native-motionviews.src.main.java.team.uptech.motionviews.widget.MotionView.java", "BodyUseAPI": [], "Fixed commit": "f31f05b5b8b89f648f1761f7f5b8c0e1bf2720e2", "Url": "https://api.github.com/repos/csae0/MotionViews-Android", "Date": "2018-07-23T09:09:38Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) mViewModel = silva.davidson.com.br.culinary.views.steps.StepsDetailsActivity.obtainViewModel(getActivity());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7139/buggy-version/app.src.main.java.silva.davidson.com.br.culinary.views.steps.StepDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "15ef1161eb6cb3b2165c6504d2abf348d7a91fab", "Url": "https://api.github.com/repos/davidsonsilva/Culinary", "Date": "2018-09-04T16:55:21Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mViewModel) != null) { mViewModel.getCurrentStep().setValue(mCurrentStep); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7139/buggy-version/app.src.main.java.silva.davidson.com.br.culinary.views.steps.StepDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "15ef1161eb6cb3b2165c6504d2abf348d7a91fab", "Url": "https://api.github.com/repos/davidsonsilva/Culinary", "Date": "2018-09-04T16:55:21Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNoneBlank(declarationDate)) { java.text.SimpleDateFormat yyyyMMdd = new java.text.SimpleDateFormat(\"yyyy/MM/dd\"); java.lang.String[] s = declarationDate.split(\" - \"); declarationDateStart = yyyyMMdd.parse(s[0]); declarationDateEnd = yyyyMMdd.parse(s[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7049/buggy-version/mdftrc.src.main.java.com.mdftrc.vl.web.controller.A05Controller.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "a74ca3a6b2bf8e911fa9757e48536a0b1642780e", "Url": "https://api.github.com/repos/annec987/VoluntaryLabeling", "Date": "2018-03-23T15:38:05Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentCommand) == (Input.Keys.E)) { lastInsurancePlay = true; currentCommand = com.stf.bj.app.players.Human.NULL_COMMAND; }else if ((currentCommand) == (Input.Keys.D)) { lastInsurancePlay = false; currentCommand = com.stf.bj.app.players.Human.NULL_COMMAND; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9090/buggy-version/core.src.com.stf.bj.app.players.Human.java", "BodyUseAPI": [], "Fixed commit": "4665a87aa72b80cd11607cece108ff19839a6a1b", "Url": "https://api.github.com/repos/Boxxy/Blackjack", "Date": "2018-06-07T18:46:33Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.provider.DocumentsContract.getDocumentId(android.net.Uri)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(id))) { if (id.startsWith(\"raw:\")) { return id.replaceFirst(\"raw:\", \"\"); } try { android.net.Uri contentUri = android.content.ContentUris.withAppendedId(android.net.Uri.parse(\"content://downloads/public_downloads\"), java.lang.Long.valueOf(id)); return com.seafile.seadroid2.util.UriFilePath.getDataColumn(context, contentUri, null, null); } catch (java.lang.NumberFormatException e) { return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1483/buggy-version/app.src.main.java.com.seafile.seadroid2.util.UriFilePath.java", "BodyUseAPI": ["java.lang.String.replaceFirst(java.lang.String,java.lang.String)", "java.lang.Long.valueOf(java.lang.String)", "android.content.ContentUris.withAppendedId(android.net.Uri.parse(\"content://downloads/public_downloads\"),java.lang.Long)", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "7b4f263ee4af65063afe5096fff8bcabf946c33e", "Url": "https://api.github.com/repos/haiwen/seadroid", "Date": "2018-05-25T08:10:03Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (updateRelevantSet) { propgate(node, node.initStatement, node.condition, node.updateStatement); node.body.accept(this); }else { if (canRemove(node.body)) { Mstar.Worker.FrontEnd.AstPrinter astPrinter = new Mstar.Worker.FrontEnd.AstPrinter(); node.body.accept(astPrinter); astPrinter.printTo(java.lang.System.err); node.body = new Mstar.Worker.FrontEnd.EmptyStatement(); }else { node.body.accept(this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6587/buggy-version/src.Mstar.Worker.FrontEnd.OutputIrrelevantEliminator.java", "BodyUseAPI": [], "Fixed commit": "77ff484839a162896be784a6d652e0437cbb29cc", "Url": "https://api.github.com/repos/idy002/mstar-compiler", "Date": "2018-06-04T18:02:04Z"},
{"Line": "=>455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.rhs.type) instanceof Mstar.Symbol.ArrayType) definedSymbols.get(node).addAll(usedSymbols.get(node.rhs));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6587/buggy-version/src.Mstar.Worker.FrontEnd.OutputIrrelevantEliminator.java", "BodyUseAPI": ["definedSymbols.get(node).addAll(usedSymbols.get(node.rhs))", "java.util.HashMap<Mstar.Worker.FrontEnd.AstNode, java.util.HashSet<Mstar.Symbol.VariableSymbol>>.get(Mstar.Worker.FrontEnd.AssignExpression)", "java.util.HashMap<Mstar.Worker.FrontEnd.AstNode, java.util.HashSet<Mstar.Symbol.VariableSymbol>>.get(node.rhs)"], "Fixed commit": "77ff484839a162896be784a6d652e0437cbb29cc", "Url": "https://api.github.com/repos/idy002/mstar-compiler", "Date": "2018-06-04T18:02:04Z"},
{"Line": "=>745", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(com.bailingcloud.bailingvideo.CallActivity.APPID)) { android.widget.Toast.makeText(this, \"APPID\u4e3a\u7a7a,\u8bf7\u7533\u8bf7!\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5152/buggy-version/app.src.main.java.com.bailingcloud.bailingvideo.CallActivity.java", "BodyUseAPI": [], "Fixed commit": "9b6593361fe52d06b7ed0a9adbb142f64b8a8b82", "Url": "https://api.github.com/repos/BlinkTalk/BlinkTalk-Android", "Date": "2018-07-19T10:26:27Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["MoveValidation.newBoard(ChessPiece[][])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (MoveValidation.isIllegalMove(tempBoard, currMove, team, false)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3122/buggy-version/Assignment3.src.MoveValidation.java", "BodyUseAPI": [], "Fixed commit": "c2f65ba5f78cb484a1e151edda33776cad1de50f", "Url": "https://api.github.com/repos/bigcat2014/Artificial_Intelligence", "Date": "2018-05-29T12:57:53Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((whitePlayer != null) && (blackPlayer != null)) { sc.nextLine(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3122/buggy-version/Assignment3.src.Driver.java", "BodyUseAPI": [], "Fixed commit": "c2f65ba5f78cb484a1e151edda33776cad1de50f", "Url": "https://api.github.com/repos/bigcat2014/Artificial_Intelligence", "Date": "2018-05-29T12:57:53Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(manager.isOpen())) manager = managerFactory.createEntityManager();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/785/buggy-version/src.main.java.kiri.mavenproject1.DBHandle.java", "BodyUseAPI": [], "Fixed commit": "5efe3bd8520a765368875875dbe054caac2434c2", "Url": "https://api.github.com/repos/ching93/raiway_app", "Date": "2018-06-03T08:38:10Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.ByteBuffer.remaining()", "java.nio.ByteBuffer.getInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (realDataLength > dataLength) { connectionHeaderRead = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3040/buggy-version/hbase-server.src.main.java.org.apache.hadoop.hbase.ipc.SimpleServerRdmaRpcConnection.java", "BodyUseAPI": [], "Fixed commit": "8710d3afc415a9c41cfc389001fb0634bb40c6db", "Url": "https://api.github.com/repos/Z-Y00/hbase-2.1.0", "Date": "2018-09-25T20:05:22Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.aion.zero.impl.db.AionBlockStore.getBlockInfoForLevel(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((currentLevelBlocks.size()) == 0) { blocks.delete(bestLine.getHash()); }else { for (org.aion.zero.impl.db.AionBlockStore.BlockInfo bk_info : currentLevelBlocks) { blocks.delete(bk_info.getHash()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8673/buggy-version/modAionImpl.src.org.aion.zero.impl.db.AionBlockStore.java", "BodyUseAPI": [], "Fixed commit": "78e8c23f7078506915ba1d54f756eb16b338a51b", "Url": "https://api.github.com/repos/centrys-robert/aion", "Date": "2018-03-06T21:04:05Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nickField.getText().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nick.contains(\" \")) { getMainApp().showAlertDialog(AlertType.ERROR, \"Login error\", \"Nick error\", \"Nick must not contain space character\"); return; }else if (userName.contains(\" \")) { getMainApp().showAlertDialog(AlertType.ERROR, \"Login error\", \"User name error\", \"User name must not contain space character\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7230/buggy-version/src.main.java.com.github.dentou.controller.LoginDialogController.java", "BodyUseAPI": [], "Fixed commit": "ccd0c50596d3b682d24d18a9406f068aa8057102", "Url": "https://api.github.com/repos/dentou/IRCClientGUI", "Date": "2018-07-01T15:13:08Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.databind.ObjectMapper.readValue(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((dexUser.getGroups()) != null) { userInfo.addRoles(dexUser.getGroups()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4712/buggy-version/services.security-service.src.main.java.com.epam.dlab.auth.service.DexOauthServiceImpl.java", "BodyUseAPI": ["com.epam.dlab.auth.model.DexUser.getGroups()", "com.epam.dlab.auth.UserInfo.addRoles(dexUser.getGroups())"], "Fixed commit": "3eb92d0b24bcbe54a880b7adfa4dea96a3cdd74e", "Url": "https://api.github.com/repos/epam/DLab", "Date": "2018-10-19T08:58:28Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["client.target(((person.pushkar.atc.client.CmdLineClient.BASE_URI) + (command.uri))).path(tokens[1]).request(MediaType.APPLICATION_JSON).post(javax.ws.rs.client.Entity.json(\"\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((res.getStatusInfo().getFamily()) != (javax.ws.rs.core.Response.Status.Family.SUCCESSFUL)) { java.lang.System.out.println(java.lang.String.format(\"Error executing command: %s \\n %s \", command, res.readEntity(java.lang.String.class))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4816/buggy-version/src.main.java.person.pushkar.atc.client.CmdLineClient.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.lang.String.format(java.lang.String,person.pushkar.atc.client.CmdLineClient.Command,res.readEntity(java.lang.String.class))", "javax.ws.rs.core.Response.readEntity(java.lang.Class)"], "Fixed commit": "ae6bfee7909d6205c02a72f40fa9de4138f1df75", "Url": "https://api.github.com/repos/praste/atc-client", "Date": "2018-01-22T16:54:31Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((world[up][right]) == 1) { if ((up != row) && (right != col)) { aliveCount++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8727/buggy-version/src.main.java.com.zipcodeconway.ConwayGameOfLife.java", "BodyUseAPI": [], "Fixed commit": "58a0bcc5b2c929b4e8756285623206af0614299a", "Url": "https://api.github.com/repos/ghost1497/ConwayGameOfLife", "Date": "2018-03-12T18:36:59Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((world[up][left]) == 1) { if ((up != row) && (left != col)) { aliveCount++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8727/buggy-version/src.main.java.com.zipcodeconway.ConwayGameOfLife.java", "BodyUseAPI": [], "Fixed commit": "58a0bcc5b2c929b4e8756285623206af0614299a", "Url": "https://api.github.com/repos/ghost1497/ConwayGameOfLife", "Date": "2018-03-12T18:36:59Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((world[down][col]) == 1) { if (down != row) { aliveCount++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8727/buggy-version/src.main.java.com.zipcodeconway.ConwayGameOfLife.java", "BodyUseAPI": [], "Fixed commit": "58a0bcc5b2c929b4e8756285623206af0614299a", "Url": "https://api.github.com/repos/ghost1497/ConwayGameOfLife", "Date": "2018-03-12T18:36:59Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((world[row][left]) == 1) { if (left != col) { aliveCount++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8727/buggy-version/src.main.java.com.zipcodeconway.ConwayGameOfLife.java", "BodyUseAPI": [], "Fixed commit": "58a0bcc5b2c929b4e8756285623206af0614299a", "Url": "https://api.github.com/repos/ghost1497/ConwayGameOfLife", "Date": "2018-03-12T18:36:59Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((world[up][col]) == 1) { if (up != row) { aliveCount++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8727/buggy-version/src.main.java.com.zipcodeconway.ConwayGameOfLife.java", "BodyUseAPI": [], "Fixed commit": "58a0bcc5b2c929b4e8756285623206af0614299a", "Url": "https://api.github.com/repos/ghost1497/ConwayGameOfLife", "Date": "2018-03-12T18:36:59Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((world[down][right]) == 1) { if ((down != row) && (right != col)) { aliveCount++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8727/buggy-version/src.main.java.com.zipcodeconway.ConwayGameOfLife.java", "BodyUseAPI": [], "Fixed commit": "58a0bcc5b2c929b4e8756285623206af0614299a", "Url": "https://api.github.com/repos/ghost1497/ConwayGameOfLife", "Date": "2018-03-12T18:36:59Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((aliveCount < 2) || (aliveCount > 3)) { return 0; }else if (aliveCount == 3) { return 1; }else { return world[row][col]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8727/buggy-version/src.main.java.com.zipcodeconway.ConwayGameOfLife.java", "BodyUseAPI": [], "Fixed commit": "58a0bcc5b2c929b4e8756285623206af0614299a", "Url": "https://api.github.com/repos/ghost1497/ConwayGameOfLife", "Date": "2018-03-12T18:36:59Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((world[row][right]) == 1) { if (right != col) { aliveCount++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8727/buggy-version/src.main.java.com.zipcodeconway.ConwayGameOfLife.java", "BodyUseAPI": [], "Fixed commit": "58a0bcc5b2c929b4e8756285623206af0614299a", "Url": "https://api.github.com/repos/ghost1497/ConwayGameOfLife", "Date": "2018-03-12T18:36:59Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((world[down][left]) == 1) { if ((down != row) && (left != col)) { aliveCount++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8727/buggy-version/src.main.java.com.zipcodeconway.ConwayGameOfLife.java", "BodyUseAPI": [], "Fixed commit": "58a0bcc5b2c929b4e8756285623206af0614299a", "Url": "https://api.github.com/repos/ghost1497/ConwayGameOfLife", "Date": "2018-03-12T18:36:59Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.ViewGroup.getChildAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((child != null) && (child instanceof android.view.ViewGroup)) { child.setFitsSystemWindows(fitSystemWindows); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/287/buggy-version/statusbar.src.main.java.com.yumf.jince.statusbar.StatusBarCompat.java", "BodyUseAPI": ["android.view.View.setFitsSystemWindows(boolean)"], "Fixed commit": "6338e22451a0165b17a0c7e0c6f2c747dc495f03", "Url": "https://api.github.com/repos/yuminfeng/statusbarcompat", "Date": "2018-09-21T04:26:02Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((scoreset.size()) > 10) { for (int i = 0; i < 10; i++) { dummyScoreset.add(scoreset.get(i)); } }else { dummyScoreset = scoreset; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1041/buggy-version/app.src.main.java.jp.co.atschool.myquiz.ScoreActivity.java", "BodyUseAPI": ["java.util.List<jp.co.atschool.myquiz.ScoreData>.get(int)", "java.util.List<jp.co.atschool.myquiz.ScoreData>.add(scoreset.get(i))"], "Fixed commit": "5fbb59e8421a989fc994e7af285817e5868e07ea", "Url": "https://api.github.com/repos/ke1ta6488/MyQuiz", "Date": "2018-02-21T06:59:00Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item.isVideo()) { mOriginalLayout.setVisibility(View.GONE); }else if (mSpec.originalable) { mOriginalLayout.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5614/buggy-version/matisse.src.main.java.com.zhihu.matisse.internal.ui.BasePreviewActivity.java", "BodyUseAPI": [], "Fixed commit": "c42e7338c9ea636e7767f8766b3ce112cc95052d", "Url": "https://api.github.com/repos/mengxn/Matisse", "Date": "2018-07-28T08:21:01Z"},
{"Line": "=>672", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((displayName.indexOf(mSearchTerm)) > 0) { resultTextView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3078/buggy-version/mobicomkitui.src.main.java.com.applozic.mobicomkit.uiwidgets.people.contact.AppContactFragment.java", "BodyUseAPI": [], "Fixed commit": "323752a351cb1b077287bd3c24fad63ad619c68f", "Url": "https://api.github.com/repos/farmrise-android/Applozic-Android-SDK", "Date": "2018-03-29T12:21:14Z"},
{"Line": "=>641", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((displayName.indexOf(mSearchTerm)) > 0) { resultTextView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/3078/buggy-version/mobicomkitui.src.main.java.com.applozic.mobicomkit.uiwidgets.people.contact.ContactSelectionFragment.java", "BodyUseAPI": [], "Fixed commit": "323752a351cb1b077287bd3c24fad63ad619c68f", "Url": "https://api.github.com/repos/farmrise-android/Applozic-Android-SDK", "Date": "2018-03-29T12:21:14Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.Integer, org.bukkit.inventory.ItemStack>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((stack.getType()) != (Material.AIR)) && ((stack.getAmount()) > 0)) { org.bukkit.entity.Item dropped = player.getWorld().dropItem(player.getLocation(), stack); org.bukkit.event.player.PlayerDropItemEvent event = new org.bukkit.event.player.PlayerDropItemEvent(player, dropped); if (event.isCancelled()) { dropped.remove(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9418/buggy-version/bukkit.src.main.java.com.sk89q.worldedit.bukkit.BukkitPlayer.java", "BodyUseAPI": ["player.getWorld().dropItem(player.getLocation(),org.bukkit.inventory.ItemStack)"], "Fixed commit": "18c71453ce24600604c82ff0dd3bc057d60c3793", "Url": "https://api.github.com/repos/boy0001/FastAsyncWorldedit", "Date": "2018-03-19T05:06:34Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (object.getString(\"daysClean\").equals(\"7\")) { android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder(context); builder.setMessage(R.string.oneWeek).setCancelable(false).setPositiveButton(\"Oke\", new android.content.DialogInterface.OnClickListener() { public void onClick(android.content.DialogInterface dialog, int id) { } }); android.app.AlertDialog alert = builder.create(); alert.show(); }else if (object.getString(\"daysClean\").equals(\"1\")) { cleandays.setText(R.string.oneDay); }else { cleandays.setText((((((getResources().getString(R.string.already)) + \" \") + (object.getString(\"daysClean\"))) + \" \") + (getResources().getString(R.string.daysClean)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8177/buggy-version/app.src.main.java.com.project.avans.mdodandroid.activities.homepageActivies.HomepageActivity.java", "BodyUseAPI": ["object.getString(\"daysClean\").equals(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "android.widget.TextView.setText((((((getResources().getString(R.string.already)) + \" \") + (object.getString(\"daysClean\"))) + \" \") + (getResources().getString(R.string.daysClean))))"], "Fixed commit": "b3a9e31b951d1a562f37213cf6bb66fadd620b14", "Url": "https://api.github.com/repos/arjangosens/MDODAndroid", "Date": "2018-06-17T12:08:25Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (object.has(\"email\")) email = object.getString(\"email\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1425/buggy-version/app.src.main.java.com.nascenia.biyeta.activity.Login.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "25d594ca8b8b9c1f22d567ccb132202025a7b4bf", "Url": "https://api.github.com/repos/Ovi-nascenia/b-ye", "Date": "2018-06-30T04:59:54Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (error != \"\") { javax.swing.JOptionPane schedulingError = new javax.swing.JOptionPane(error); schedulingError.setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5692/buggy-version/src.main.java.memoranda.TourCollectionImpl.java", "BodyUseAPI": [], "Fixed commit": "ce684d74ef7b2504ed0ca5d0559689d12bbc7632", "Url": "https://api.github.com/repos/ser316asu-2018/Hohenzollern", "Date": "2018-04-29T18:28:09Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) < 1) throw new labdrei.NotEnoughParamsException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7691/buggy-version/lab3.src.main.java.labdrei.MyCommandHandler.java", "BodyUseAPI": [], "Fixed commit": "e7c2712bc2a635ca288242c541785654f05b5058", "Url": "https://api.github.com/repos/leventeBajczi/prog3", "Date": "2018-09-25T21:57:56Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(f.mkdir())) throw new java.io.IOException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7691/buggy-version/lab3.src.main.java.labdrei.MyCommandHandler.java", "BodyUseAPI": [], "Fixed commit": "e7c2712bc2a635ca288242c541785654f05b5058", "Url": "https://api.github.com/repos/leventeBajczi/prog3", "Date": "2018-09-25T21:57:56Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pl.betoncraft.betonquest.compatibility.Compatibility.getHooked().contains(\"ProtocolLib\")) { pl.betoncraft.betonquest.compatibility.protocollib.NPCHider.start(); plugin.registerEvents(\"updatevisibility\", pl.betoncraft.betonquest.compatibility.protocollib.UpdateVisibilityNowEvent.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8924/buggy-version/src.main.java.pl.betoncraft.betonquest.compatibility.citizens.CitizensIntegrator.java", "BodyUseAPI": [], "Fixed commit": "f42d6b82ec5ca262d86c40bd3fd83aaaab9df632", "Url": "https://api.github.com/repos/Co0sh/BetonQuest", "Date": "2018-06-30T14:01:40Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((level) != null) { for (com.example.android.androidquizapp.question.Question question : level.getQuestions()) { question.resetProgress(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/6352/buggy-version/app.src.main.java.com.example.android.androidquizapp.level.LevelStatisticsActivity.java", "BodyUseAPI": [], "Fixed commit": "a4d1ca84aa4ac3d79ea350dd17c02db7648e329a", "Url": "https://api.github.com/repos/FabioGouveia/AndroidQuizApp", "Date": "2018-01-23T22:24:17Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (_return != null) { this.segments.put(_return); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/4941/buggy-version/src.org.vitrivr.cineast.core.segmenter.video.VideoHistogramSegmenter.java", "BodyUseAPI": ["java.util.concurrent.LinkedBlockingQueue<org.vitrivr.cineast.core.data.segments.SegmentContainer>.put(org.vitrivr.cineast.core.data.segments.VideoSegment)"], "Fixed commit": "7a64783c854f712679c87bf62659c3383edc700f", "Url": "https://api.github.com/repos/silvanheller/cineast", "Date": "2018-06-12T15:29:37Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(done.get())) { exchangeHandler.failed(cause); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1676/buggy-version/httpcore5.src.main.java.org.apache.hc.core5.http.impl.nio.ClientHttp1StreamHandler.java", "BodyUseAPI": [], "Fixed commit": "c838db8978bf23801238222132371a83117e367c", "Url": "https://api.github.com/repos/apache/httpcomponents-core", "Date": "2018-03-13T09:32:08Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(done.get())) { exchangeHandler.failed(cause); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1676/buggy-version/httpcore5.src.main.java.org.apache.hc.core5.http.impl.nio.ServerHttp1StreamHandler.java", "BodyUseAPI": [], "Fixed commit": "c838db8978bf23801238222132371a83117e367c", "Url": "https://api.github.com/repos/apache/httpcomponents-core", "Date": "2018-03-13T09:32:08Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((req.get(RestApiConstants.SELECTED_ROWS)) != null) { url = url.named(\"selectedRows\", req.get(RestApiConstants.SELECTED_ROWS)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/9707/buggy-version/server.src.main.java.com.developmentontheedge.be5.server.controllers.FormController.java", "BodyUseAPI": ["com.developmentontheedge.be5.web.Request.get(RestApiConstants.SELECTED_ROWS)", "com.developmentontheedge.be5.base.util.HashUrl.named(java.lang.String,req.get(RestApiConstants.SELECTED_ROWS))"], "Fixed commit": "ca8799cba9e6c6ea0b925c8feb8bb804b80bc8f0", "Url": "https://api.github.com/repos/DevelopmentOnTheEdge/be5", "Date": "2018-07-18T09:49:05Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((json.get(\"thread_key\")) instanceof java.lang.String) { thread_key = json.getString(\"thread_key\"); isGroup = json.getBoolean(\"isGroup\"); }else if ((json.getJSONObject(\"thread_key\").getString(\"thread_fbid\")) != \"null\") { thread_key = json.getJSONObject(\"thread_key\").getString(\"thread_fbid\"); isGroup = true; }else if ((json.getJSONObject(\"thread_key\").getString(\"other_user_id\")) != \"null\") { thread_key = json.getJSONObject(\"thread_key\").getString(\"other_user_id\"); isGroup = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1354/buggy-version/Conversation.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "json.getJSONObject(\"thread_key\").getString(java.lang.String)", "org.json.JSONObject.getBoolean(java.lang.String)", "org.json.JSONObject.getJSONObject(java.lang.String)", "json.getJSONObject(\"thread_key\").getString(java.lang.String)", "json.getJSONObject(\"thread_key\").getString(java.lang.String)", "json.getJSONObject(\"thread_key\").getString(java.lang.String)", "org.json.JSONObject.getJSONObject(java.lang.String)", "org.json.JSONObject.getJSONObject(java.lang.String)", "org.json.JSONObject.getJSONObject(java.lang.String)"], "Fixed commit": "8126f2250e1207f878d0ee43db779677a6d79545", "Url": "https://api.github.com/repos/etiaro/facebook-chat", "Date": "2018-03-26T21:50:39Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (b != null) { if ((!(b.isSolid())) && (animal.isOnGround())) { isBlock = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/965/buggy-version/src.fr.utbm.ai.AIGoTo.java", "BodyUseAPI": ["fr.utbm.block.Block.isSolid()"], "Fixed commit": "9dd843181e370061c93e0687ad102e4fa32211b5", "Url": "https://api.github.com/repos/UTBMRidd/LO43-Vivarium", "Date": "2018-01-03T23:21:35Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getKey()) != null) { lengthSum += (entry.getKey().length()) * (entry.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/8262/buggy-version/backend.src.main.java.de.metanome.backend.result_postprocessing.helper.ColumnInformation.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.Long>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.Long>.getValue()", "java.lang.String.length()"], "Fixed commit": "8bc1303f1937d4919e800ec21013a5d6472e9a19", "Url": "https://api.github.com/repos/HPI-Information-Systems/Metanome", "Date": "2018-03-26T16:20:04Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.techcavern.wavetact.utils.IRCUtils.WhoisEvent(org.pircbotx.PircBotX,java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (whois != null) { java.lang.String hostmask2 = com.techcavern.wavetact.utils.IRCUtils.getLoginmask(whois.getHostname(), whois.getLogin()); boolean HostmaskMatch = hostmask2.equals(hostmask); if (!HostmaskMatch) { whois = com.techcavern.wavetact.utils.IRCUtils.WhoisEvent(network, userObject, false); } if (whois != null) { userString = whois.getRegisteredAs(); if (userString != null) { userString = userString.toLowerCase(); if (userString.isEmpty()) { userString = userObject.toLowerCase(); } }else { userString = null; } }else { userString = null; } }else { userString = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/984/buggy-version/src.main.java.com.techcavern.wavetact.utils.PermUtils.java", "BodyUseAPI": ["org.pircbotx.hooks.events.WhoisEvent.getHostname()", "com.techcavern.wavetact.utils.IRCUtils.getLoginmask(whois.getHostname(),whois.getLogin())", "org.pircbotx.hooks.events.WhoisEvent.getLogin()"], "Fixed commit": "5433bb2c8d5d041c14cb0359f5ed26714fd4d145", "Url": "https://api.github.com/repos/TechCavern/WaveTact", "Date": "2018-01-14T07:51:36Z"},
{"Line": "=>424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (buildSideAllInMemory) { if ((consumedMemory) <= (memoryAvailable)) { evictedPartitions = java.util.Collections.unmodifiableList(evictedPartitions); return; } }else if ((spilledBuildPartitions.size()) == (buildPartitionStatSet.getSize())) { evictedPartitions = java.util.Collections.unmodifiableList(evictedPartitions); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7670/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.physical.impl.join.HashJoinMemoryCalculatorImpl.java", "BodyUseAPI": [], "Fixed commit": "c4d5503f28b661b573617b005641fe5758e503b8", "Url": "https://api.github.com/repos/ilooner/drill", "Date": "2018-02-20T07:38:55Z"},
{"Line": "=>1196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (enabled) { android.view.inputmethod.InputMethodManager imm = android.view.inputmethod.InputMethodManager.peekInstance(); if (imm != null) imm.restartInput(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/205/buggy-version/core.java.android.widget.TextView.java", "BodyUseAPI": [], "Fixed commit": "ada259ebeec388183c7341c95331e59802b70281", "Url": "https://api.github.com/repos/sudosurootdev/frameworks_base", "Date": "2011-09-19T17:42:52Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isOneParameterFunction(this.action)) { this.calculate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/1034/buggy-version/calculator.src.main.java.com.example.bartoszujazdowski.androidcalculator.calculator.Calculate.java", "BodyUseAPI": [], "Fixed commit": "7ff5f7c894f7f43fe86f546fa11a324c4364abcf", "Url": "https://api.github.com/repos/SharpShooter17/AndroidCalculator", "Date": "2018-03-24T19:18:50Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((previousDataProject) != null) currentDataProject.setDataObjectList(previousDataProject.getDataObjectList());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7728/buggy-version/app.src.main.java.umich.jakebock.trackme.activities.ProjectCreationActivity.java", "BodyUseAPI": [], "Fixed commit": "0630f8e02415c1a85b32fb453e513fe340d1f044", "Url": "https://api.github.com/repos/JakeB241/TrackMe", "Date": "2018-02-07T23:41:20Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((split_result.length) == 0) title = \"\"; else title = split_result[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5492/buggy-version/app.src.main.java.com.postech.isb.compose.NoteEditor.java", "BodyUseAPI": [], "Fixed commit": "43fb203c6e57b4f508ebab113b2dffcc98a3e32d", "Url": "https://api.github.com/repos/clover3/isb", "Date": "2018-05-26T14:34:20Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(removed)) { this.blocked.add(action); }else { es.bsc.compss.components.impl.ResourceScheduler.LOGGER.warn(((((\"[ResourceScheduler] Blocked action \" + action) + \" on removed resource \") + (getName())) + \". Trying to reschedule... \")); try { unscheduleAction(action); action.schedule(generateBlockedScore(action)); } catch (java.lang.Exception e) { es.bsc.compss.util.ErrorManager.error(\"Error rescheduling action to a removed resource\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5047/buggy-version/compss.runtime.scheduler.commons.src.main.java.es.bsc.compss.components.impl.ResourceScheduler.java", "BodyUseAPI": [], "Fixed commit": "00c20cab89b312d32239cd1e44ea081c125fa0c7", "Url": "https://api.github.com/repos/bsc-wdc/compss", "Date": "2018-05-30T07:55:40Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (es.bsc.compss.nio.worker.util.ExternalThreadPool.LOGGER.isDebugEnabled()) { env.put(\"COMPSS_BINDINGS_DEBUG\", \"1\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/5047/buggy-version/compss.runtime.adaptors.nio.worker.src.main.java.es.bsc.compss.nio.worker.util.ExternalThreadPool.java", "BodyUseAPI": [], "Fixed commit": "00c20cab89b312d32239cd1e44ea081c125fa0c7", "Url": "https://api.github.com/repos/bsc-wdc/compss", "Date": "2018-05-30T07:55:40Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (goalDifference > 0.25) { if (org.apache.commons.lang3.StringUtils.equals(this.punterChoice, Constants.HANDICAP_OVER)) { this.punterRevenue = (this.stake) * (this.awayMoneyRate); }else { this.punterRevenue = (-1) * (this.stake); } }else if (goalDifference == (-0.25)) { if (org.apache.commons.lang3.StringUtils.equals(this.punterChoice, Constants.HANDICAP_OVER)) { this.punterRevenue = ((-1) * (this.stake)) * 0.5; }else { this.punterRevenue = ((this.stake) * (this.homeMoneyRate)) * 0.5; } }else { if (org.apache.commons.lang3.StringUtils.equals(this.punterChoice, Constants.HANDICAP_OVER)) { this.punterRevenue = (-1) * (this.stake); }else { this.punterRevenue = (this.stake) * (this.homeMoneyRate); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/591/buggy-version/src.main.java.com.fafc.bet4fun.entities.Bet.java", "BodyUseAPI": [], "Fixed commit": "cd17a0c63500e1bd7db26982231d89d1c9e54d3a", "Url": "https://api.github.com/repos/linhnm108/bet4fun", "Date": "2018-07-14T14:39:24Z"},
{"Line": "=>658", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (url.contains(\"img\")) { mActivityCallback.showSinglePage(url); }else { mActivityCallback.goToChapter(url); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/7871/buggy-version/folioreader.src.main.java.com.folioreader.ui.folio.fragment.FolioPageFragment.java", "BodyUseAPI": ["com.folioreader.ui.folio.activity.FolioActivityCallback.showSinglePage(java.lang.String)", "com.folioreader.ui.folio.activity.FolioActivityCallback.goToChapter(java.lang.String)"], "Fixed commit": "607b67362bf664d8847b2e1a1e725d728692093b", "Url": "https://api.github.com/repos/RiverCityDenker/FolioReader-Android", "Date": "2018-07-16T07:54:37Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == (com.serotonin.m2m2.module.definitions.event.handlers.SetPointEventHandlerDefinition.ACKNOWLEDGE_SCRIPT_TYPE)) response.addMessage(\"acknowledgeScript\", new com.serotonin.m2m2.i18n.TranslatableMessage(\"event.script.contextPointMissing\", cxt.getValue(), cxt.getKey())); else if (type == (com.serotonin.m2m2.module.definitions.event.handlers.EmailEventHandlerDefinition.EMAIL_SCRIPT_TYPE)) response.addMessage(\"emailScript\", new com.serotonin.m2m2.i18n.TranslatableMessage(\"event.script.contextPointMissing\", cxt.getValue(), cxt.getKey()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2745/buggy-version/Core.src.com.serotonin.m2m2.web.dwr.EventHandlersDwr.java", "BodyUseAPI": [], "Fixed commit": "1f8d8500522c9df34996a620d25ab4f7b1b6309a", "Url": "https://api.github.com/repos/infiniteautomation/ma-core-public", "Date": "2018-05-17T22:15:11Z"},
{"Line": "=>503", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == (com.serotonin.m2m2.module.definitions.event.handlers.SetPointEventHandlerDefinition.ACKNOWLEDGE_SCRIPT_TYPE)) response.addMessage(\"acknowledgeScript\", message); else if (type == (com.serotonin.m2m2.module.definitions.event.handlers.EmailEventHandlerDefinition.EMAIL_SCRIPT_TYPE)) response.addMessage(\"emailScript\", message);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V155/2745/buggy-version/Core.src.com.serotonin.m2m2.web.dwr.EventHandlersDwr.java", "BodyUseAPI": [], "Fixed commit": "1f8d8500522c9df34996a620d25ab4f7b1b6309a", "Url": "https://api.github.com/repos/infiniteautomation/ma-core-public", "Date": "2018-05-17T22:15:11Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (messageController.isMessageForUser(name)) { return new controllers.GetMessagesAnswer(messageController.getMessagesToUser(name), \"messages\"); }else { return new controllers.ServerAnswer(\"ok\", \"status\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3105/buggy-version/src.main.java.controllers.MainRequestController.java", "BodyUseAPI": ["controllers.MessageController.getMessagesToUser(java.lang.String)"], "Fixed commit": "2a6fb80b74ad39c16af04215ab47553d73ceeb73", "Url": "https://api.github.com/repos/jgapski/push-server", "Date": "2018-02-08T20:33:43Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.susa.ajayioluwatobi.susa.FeedActivity.useremail.equals(email)) { android.util.Log.i(com.susa.ajayioluwatobi.susa.FeedActivity.useremail, email); android.util.Log.i(\"=\", \"=\"); intent = new android.content.Intent(mContext.getApplicationContext(), com.susa.ajayioluwatobi.susa.ContactActivity.class); android.os.Bundle bundle = new android.os.Bundle(); bundle.putString(\"user\", com.susa.ajayioluwatobi.susa.FeedActivity.useremail); bundle.putString(\"user2\", email); intent.putExtras(bundle); mContext.startActivity(intent); }else { android.util.Log.i(com.susa.ajayioluwatobi.susa.FeedActivity.useremail, email); android.util.Log.i(\"!!!\", \"!!!\"); intent = new android.content.Intent(mContext.getApplicationContext(), com.susa.ajayioluwatobi.susa.MessageActivity.class); android.os.Bundle bundle = new android.os.Bundle(); bundle.putString(\"user\", com.susa.ajayioluwatobi.susa.FeedActivity.useremail); bundle.putString(\"user2\", email); intent.putExtras(bundle); mContext.startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/896/buggy-version/app.src.main.java.com.susa.ajayioluwatobi.susa.FeedActivity.java", "BodyUseAPI": ["android.os.Bundle.putString(java.lang.String,java.lang.String)", "android.util.Log.i(java.lang.String,java.lang.String)", "android.util.Log.i(java.lang.String,java.lang.String)", "android.os.Bundle.putString(java.lang.String,java.lang.String)", "android.os.Bundle.putString(java.lang.String,java.lang.String)", "android.os.Bundle.putString(java.lang.String,java.lang.String)"], "Fixed commit": "e8d00b5424b1feb2c558e0f8e7cacd022f25f597", "Url": "https://api.github.com/repos/COP4656-G1/Susa", "Date": "2018-05-05T03:50:01Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key < 0) { for (boolean b : keys) if (b) return true; return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3320/buggy-version/core.src.com.proyectox.main.InputHandler.java", "BodyUseAPI": [], "Fixed commit": "fca672bd56666533c9ee212f214adb7558f44510", "Url": "https://api.github.com/repos/jh62/ProyectoX", "Date": "2018-10-19T21:50:59Z"},
{"Line": "=>1570", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ldesc.getTerm().length()) > 1000) { d.setTerm(ldesc.getTerm().substring(0, 1000)); }else { d.setTerm(ldesc.getTerm()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/914/buggy-version/src.main.java.org.ihtsdo.json.TransformerDiskBased.java", "BodyUseAPI": ["org.ihtsdo.json.model.TextIndexDescription.setTerm(ldesc.getTerm())", "ldesc.getTerm().substring(int,int)", "org.ihtsdo.json.model.LightDescription.getTerm()", "org.ihtsdo.json.model.TextIndexDescription.setTerm(ldesc.getTerm().substring(0, 1000))", "org.ihtsdo.json.model.LightDescription.getTerm()"], "Fixed commit": "e0af411acfd86b49c13da0035680330e1c3cccf1", "Url": "https://api.github.com/repos/termMed/rf2-to-json-conversion-1", "Date": "2018-05-03T13:51:50Z"},
{"Line": "=>1507", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ldesc.getTerm().length()) > 1000) { d.setTerm(ldesc.getTerm().substring(0, 1000)); }else { d.setTerm(ldesc.getTerm()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/914/buggy-version/src.main.java.org.ihtsdo.json.TransformerDiskBased.java", "BodyUseAPI": ["org.ihtsdo.json.model.LightDescription.getTerm()", "ldesc.getTerm().substring(int,int)", "org.ihtsdo.json.model.TextIndexDescription.setTerm(ldesc.getTerm().substring(0, 1000))", "org.ihtsdo.json.model.LightDescription.getTerm()", "org.ihtsdo.json.model.TextIndexDescription.setTerm(ldesc.getTerm())"], "Fixed commit": "e0af411acfd86b49c13da0035680330e1c3cccf1", "Url": "https://api.github.com/repos/termMed/rf2-to-json-conversion-1", "Date": "2018-05-03T13:51:50Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (num_b == 0) { java.lang.System.out.println(\"...que, ademas, no se puede resolver\"); }else { num_c = -num_c; java.lang.System.out.println((\"El resultado de la ecuacion es: \" + (calcecuaciones.ec1grado(num_c, num_b)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7150/buggy-version/minicalculadora.java", "BodyUseAPI": ["minicalculadora.ec1grado(double,double)", "java.io.PrintStream.println((\"El resultado de la ecuacion es: \" + (calcecuaciones.ec1grado(num_c, num_b))))"], "Fixed commit": "76dae8e6368f06315c12f824a3dac468826a788a", "Url": "https://api.github.com/repos/joseguerrerogallego/minicalculadora", "Date": "2018-10-30T07:29:09Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(secondaryTorpedoStore.isEmpty())) { primaryFiringSuccess = secondaryTorpedoStore.fire(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2127/buggy-version/src.main.java.hu.bme.mit.spaceship.GT4500.java", "BodyUseAPI": ["hu.bme.mit.spaceship.TorpedoStore.fire(int)"], "Fixed commit": "a2db03f67b0c99648e063f931c5521d4aa87766c", "Url": "https://api.github.com/repos/boti996/ivt-lab", "Date": "2018-04-13T11:37:58Z"},
{"Line": "=>3216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getLogger().isDebugEnabled()) { getLogger().debug(\"Key(%s) Unknown response : %s\", k, cstatus); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7496/buggy-version/src.main.java.net.spy.memcached.ArcusClient.java", "BodyUseAPI": [], "Fixed commit": "78ae0d0489b2992ddf2cbfcee135c5ab44a0f964", "Url": "https://api.github.com/repos/naver/arcus-java-client", "Date": "2018-06-18T05:30:24Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.harystolho.thread.FileUpdaterThread.getBiggestY()) > (canvas.getHeight())) { currentFile.setScrollY(((int) ((com.harystolho.thread.FileUpdaterThread.getBiggestY()) - (canvas.getHeight())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2097/buggy-version/src.main.java.com.harystolho.canvas.CanvasManager.java", "BodyUseAPI": ["com.harystolho.pe.File.setScrollY(((int) ((com.harystolho.thread.FileUpdaterThread.getBiggestY()) - (canvas.getHeight()))))", "javafx.scene.canvas.Canvas.getHeight()"], "Fixed commit": "d246e17168bcbade6eeffc1e75e780fad3a3cf5c", "Url": "https://api.github.com/repos/Harystolho/PferdEditor", "Date": "2018-08-21T17:05:30Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ClassLoader.getResourceAsStream(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (inputStream == null) { throw new java.lang.RuntimeException((\"Unable to open file \" + fileName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1388/buggy-version/src.main.java.com.ut.common.utils.properties.PropertiesConfigurator.java", "BodyUseAPI": [], "Fixed commit": "5a69eaf52dbcd486686672fc07d550fc72995544", "Url": "https://api.github.com/repos/ultimate-theory-of-everything/properties-configurator", "Date": "2018-08-14T12:04:24Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((deleteAt) == null) { deleteAt = new java.util.Date(((java.lang.System.currentTimeMillis()) + (ttl))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9679/buggy-version/src.de.caluga.morphium.messaging.Msg.java", "BodyUseAPI": [], "Fixed commit": "fd26e3ba9b7d209a42ae49a6a5bfa4781f4205a0", "Url": "https://api.github.com/repos/sboesebeck/morphium", "Date": "2018-05-11T20:11:43Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.torocraft.rifts.dim.RiftTickHandler.loadPlayerRift(event.player)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (data == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7451/buggy-version/src.main.java.net.torocraft.rifts.dim.RiftTickHandler.java", "BodyUseAPI": [], "Fixed commit": "3585b87fcb048608030c9f2c3e9a5497412a7d37", "Url": "https://api.github.com/repos/ToroCraft/Rifts", "Date": "2018-02-04T14:29:31Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (simplepets.brainsynder.reflection.ReflectionUtil.getVersion().equalsIgnoreCase(\"v1_13_R1\")) { field = simplepets.brainsynder.reflection.FieldAccessor.getField(simple.brainsynder.utils.Reflection.getNmsClass(\"Entity\"), \"k\", java.lang.Integer.TYPE); }else { field = simplepets.brainsynder.reflection.FieldAccessor.getField(simple.brainsynder.utils.Reflection.getNmsClass(\"Entity\"), \"j\", java.lang.Integer.TYPE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1185/buggy-version/src.main.java.simplepets.brainsynder.utils.Utilities.java", "BodyUseAPI": [], "Fixed commit": "1c4f8c821680e18bf0ded7768174996b90667c1b", "Url": "https://api.github.com/repos/brainsynder-Dev/SimplePets", "Date": "2018-08-10T07:00:20Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bean.getStatus().equals(\"0\")) { ((android.widget.TextView) (holder.getView(R.id.tv_redo))).setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2942/buggy-version/app.src.main.java.com.mpl.GrowthStud.Student.Adapter.AchieveToDoListViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "257e008a9f7f605b4713fa1be1b7f1f367b27cb3", "Url": "https://api.github.com/repos/HaapyDeng/GrowthStudent", "Date": "2018-09-20T03:48:52Z"},
{"Line": "=>2329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mContext.getPackageManager().getPackagesForUid(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (packages != null) { for (java.lang.String packageName : packages) { if (!(mUsageStats.isAppIdle(packageName, uid, userId))) { return false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9507/buggy-version/services.core.java.com.android.server.net.NetworkPolicyManagerService.java", "BodyUseAPI": [], "Fixed commit": "7211131e238920db03c83f0c2c21f3c135a7e44f", "Url": "https://api.github.com/repos/CopperheadOS/platform_frameworks_base", "Date": "2016-06-03T21:28:33Z"},
{"Line": "=>1255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((messageDdropDownActionButton.getVisibility()) == (android.view.View.INVISIBLE)) { linearLayoutManager.scrollToPositionWithOffset(((messageList.size()) - 1), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4488/buggy-version/mobicomkitui.src.main.java.com.applozic.mobicomkit.uiwidgets.conversation.fragment.MobiComConversationFragment.java", "BodyUseAPI": [], "Fixed commit": "1855b1dabb9d2e86b846ebc31f6e454f610acd56", "Url": "https://api.github.com/repos/AppLozic/Applozic-Android-SDK", "Date": "2018-05-09T15:22:36Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cognifide.aet.communication.api.metadata.Step.getStepResult()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (stepResult == null) { stepStatus = com.cognifide.aet.communication.api.metadata.CollectorStepResult.Status.PROCESSING_ERROR; }else { stepStatus = stepResult.getStatus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1582/buggy-version/rest-endpoint.src.main.java.com.cognifide.aet.xunit.MetadataToXUnitConverter.java", "BodyUseAPI": ["com.cognifide.aet.communication.api.metadata.CollectorStepResult.getStatus()"], "Fixed commit": "97ebc5633c806fa5302242b7bca65454cabddbc7", "Url": "https://api.github.com/repos/Cognifide/aet", "Date": "2018-01-03T08:36:26Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cognifide.aet.communication.api.metadata.Step.getStepResult()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (stepResult == null) { errors = java.util.Collections.singletonList(\"Fatal error\"); }else { errors = stepResult.getErrors(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1582/buggy-version/rest-endpoint.src.main.java.com.cognifide.aet.xunit.MetadataToXUnitConverter.java", "BodyUseAPI": ["com.cognifide.aet.communication.api.metadata.CollectorStepResult.getErrors()"], "Fixed commit": "97ebc5633c806fa5302242b7bca65454cabddbc7", "Url": "https://api.github.com/repos/Cognifide/aet", "Date": "2018-01-03T08:36:26Z"},
{"Line": "=>710", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["store.getConfig().getURL(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (localURL == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5212/buggy-version/src.main.java.org.ecocean.media.MediaAsset.java", "BodyUseAPI": [], "Fixed commit": "04910b378018067024f2d9021cdd2177374051e4", "Url": "https://api.github.com/repos/WildbookOrg/Wildbook", "Date": "2018-08-01T23:29:09Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.entity.Player.getUniqueId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (learntSpells.get(key).add(spell.getName())) writePlayerKnowledge();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7064/buggy-version/src.net.undergroundantics.magicantics.plugin.MagicAntics.java", "BodyUseAPI": [], "Fixed commit": "9c7e2f1ffff1394d9315e8ca05c10ffe0a316529", "Url": "https://api.github.com/repos/BasedDoge/MagicAntics", "Date": "2018-04-02T04:51:43Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((name.getSelectedIndex()) < 0) name.setSelectedIndex(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6076/buggy-version/DataBase_WebStore.src.view.AdminFrame.java", "BodyUseAPI": ["javax.swing.JComboBox.setSelectedIndex(int)"], "Fixed commit": "f0ded9f6af009082968e2482d0a83225c1573bfa", "Url": "https://api.github.com/repos/pmate955/WebStore_DatabaseCourse", "Date": "2018-05-15T13:17:25Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((quelle.length()) < 3) { zahl = (java.lang.Integer.parseInt(quelle)) - 1; buttons[zahl].setBackground(new java.awt.Color(2, 2, 52)); if (!(geklickt[zahl])) { geklickt[zahl] = true; an_aus = true; }else { geklickt[zahl] = false; buttons[zahl].setBackground(new java.awt.Color(255, 255, 255)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5552/buggy-version/de.ghse.oberflaeche.GUI.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "76c2d3624b344780637d85e8b21e0d01c830eeef", "Url": "https://api.github.com/repos/Andreas-Buehrer/GHSE-Pojektarbeit2017-2018", "Date": "2018-04-15T12:48:42Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(readFromScreen())) { android.widget.Toast.makeText(this, \"Please fill all question data\", Toast.LENGTH_LONG).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3841/buggy-version/app.src.main.java.eyeclass.eyeclassapp.lesson.UploadLesson.java", "BodyUseAPI": [], "Fixed commit": "f91c135e121a5ecf32cac097d9ced47950c9c044", "Url": "https://api.github.com/repos/yossic89/EyeClassApp", "Date": "2018-09-29T14:16:34Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(engine.control.Control.isControlsLoaded())) engine.control.Control.loadControls();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7579/buggy-version/src.engine.Settings.java", "BodyUseAPI": [], "Fixed commit": "c58d126bd00a69a9078522199eeca24c7b872460", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2018-06-03T09:59:56Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(engine.control.Control.isControlsLoaded())) engine.control.Control.loadControls();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7579/buggy-version/src.engine.Settings.java", "BodyUseAPI": [], "Fixed commit": "c58d126bd00a69a9078522199eeca24c7b872460", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2018-06-03T09:59:56Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((src != null) && (src.removed)) { src.cleanup(); src = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9478/buggy-version/soundsystem.src.paulscode.sound.StreamThread.java", "BodyUseAPI": ["paulscode.sound.Source.cleanup()"], "Fixed commit": "2ba608bbf69b9e82b4004cb83d24c09da8f23b3b", "Url": "https://api.github.com/repos/MinecraftForge/paulscode", "Date": "2018-09-30T15:14:22Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.examlpe.android.vocabularyenru.RAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (currentWord.hasImage()) { wordImageView.setImageResource(currentWord.getmImageResourceId()); wordImageView.setVisibility(View.VISIBLE); }else { wordImageView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7783/buggy-version/VocabularyEnRu.app.src.main.java.com.examlpe.android.vocabularyenru.RAdapter.java", "BodyUseAPI": ["android.widget.ImageView.setImageResource(currentWord.getmImageResourceId())", "com.examlpe.android.vocabularyenru.Word.getmImageResourceId()"], "Fixed commit": "eb73d0db54b45a05a7d3b7a86edbf6f5461561ce", "Url": "https://api.github.com/repos/Valery85/androidUd", "Date": "2018-06-12T12:23:36Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.healthit.chpl.dao.CertifiedProductSearchResultDAO.getByChplProductNumber(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dtos.size()) == 0) { throw new gov.healthit.chpl.dao.EntityRetrievalException(\"Could not retrieve CertifiedProductSearchDetails.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2123/buggy-version/chpl.chpl-service.src.main.java.gov.healthit.chpl.web.controller.ActivityController.java", "BodyUseAPI": [], "Fixed commit": "f1fde7a96330d66dd441b07f8fe2e2e084247792", "Url": "https://api.github.com/repos/brianlindsy/chpl-api", "Date": "2018-05-10T02:02:48Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.healthit.chpl.dao.CertifiedProductSearchResultDAO.getByChplProductNumber(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dtos.size()) == 0) { throw new gov.healthit.chpl.dao.EntityRetrievalException(\"Could not retrieve CertifiedProductSearchDetails.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2123/buggy-version/chpl.chpl-service.src.main.java.gov.healthit.chpl.web.controller.ActivityController.java", "BodyUseAPI": [], "Fixed commit": "f1fde7a96330d66dd441b07f8fe2e2e084247792", "Url": "https://api.github.com/repos/brianlindsy/chpl-api", "Date": "2018-05-10T02:02:48Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ce.toAddress()) == null) { java.lang.System.out.println(\"Error: Invalid to address\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4437/buggy-version/G51FSE-CW04-Code.CompanyEmailSystem.java", "BodyUseAPI": [], "Fixed commit": "6651c1d77f407794e9b58df623f409a93e77fc11", "Url": "https://api.github.com/repos/joerog/G51FSE-Lab-Exercise", "Date": "2018-05-01T14:32:26Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ce.isValid()) { cp.addEmail(ce); java.lang.System.out.println(((\"[Email added to \" + (cp.toString())) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4437/buggy-version/G51FSE-CW04-Code.CompanyEmailSystem.java", "BodyUseAPI": ["CompanyProject.addEmail(CompanyEmail)"], "Fixed commit": "6651c1d77f407794e9b58df623f409a93e77fc11", "Url": "https://api.github.com/repos/joerog/G51FSE-Lab-Exercise", "Date": "2018-05-01T14:32:26Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ce.fromAddress()) == null) { java.lang.System.out.println(\"Error: Invalid from address\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4437/buggy-version/G51FSE-CW04-Code.CompanyEmailSystem.java", "BodyUseAPI": [], "Fixed commit": "6651c1d77f407794e9b58df623f409a93e77fc11", "Url": "https://api.github.com/repos/joerog/G51FSE-Lab-Exercise", "Date": "2018-05-01T14:32:26Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pend.activity.mirror.MirrorActivity.getDrawable(R.drawable.cross_white)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (drawableCross != null) { bitmapCross = ((android.graphics.drawable.BitmapDrawable) (drawableCross)).getBitmap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/905/buggy-version/app.src.main.java.com.pend.activity.mirror.MirrorActivity.java", "BodyUseAPI": [], "Fixed commit": "5563c8b60859afe0e19c92c2123e380f7f90d96c", "Url": "https://api.github.com/repos/VermaManish1990/Pendulum", "Date": "2018-09-09T19:13:58Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Objects.equals(bitmapImage, bitmapCross)) { mCleanSearch = true; mIsSearchData = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/905/buggy-version/app.src.main.java.com.pend.activity.mirror.MirrorActivity.java", "BodyUseAPI": [], "Fixed commit": "5563c8b60859afe0e19c92c2123e380f7f90d96c", "Url": "https://api.github.com/repos/VermaManish1990/Pendulum", "Date": "2018-09-09T19:13:58Z"},
{"Line": "=>1389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (skip_times < 0) { skip_times = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/354/buggy-version/greycat.src.main.java.greycat.internal.MWResolver.java", "BodyUseAPI": [], "Fixed commit": "cb882b08dab86c619b5a5b0bcdf5e483843ba2ca", "Url": "https://api.github.com/repos/datathings/greycat", "Date": "2018-10-10T07:34:38Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.supere77.netflix.BackendService.create(com.supere77.netflix.GuestbookEntry)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (done.get()) { entries = backendClient.getAll().getBody(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8667/buggy-version/guestbook-frontend.src.main.java.com.supere77.netflix.GuestbookController.java", "BodyUseAPI": [], "Fixed commit": "d8101c9819fe6e198aa7712b1ae7603ef99fd365", "Url": "https://api.github.com/repos/superernie77/spring-netflix-stack-playground", "Date": "2018-05-30T19:41:38Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.java.memoranda.EventsManager.Year.getMonth(date.getMonth())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (m == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4766/buggy-version/src.main.java.memoranda.EventsManager.java", "BodyUseAPI": [], "Fixed commit": "b1a3a9244eeffa6251109b80c62bce16b323fcc1", "Url": "https://api.github.com/repos/ovidubya/assign7metrics", "Date": "2018-04-30T00:54:59Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(authorizeService.isAdmin(context))) { throw new org.dspace.app.rest.exception.RESTAuthorizationException(\"The EPerson collection endpoint is reserved to system administrators\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9694/buggy-version/dspace-spring-rest.src.main.java.org.dspace.app.rest.repository.EPersonRestRepository.java", "BodyUseAPI": [], "Fixed commit": "846213c9434ab48b5a1b7e3884107e8cb6c1fb7b", "Url": "https://api.github.com/repos/4Science/DSpace", "Date": "2018-05-31T05:59:21Z"},
{"Line": "=>461", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((theKeyEvent.getKeyCode()) > (numKeys)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3930/buggy-version/src.controlP5.ControlWindow.java", "BodyUseAPI": [], "Fixed commit": "bbd28010e53d55df926e34c071d743f11464c8af", "Url": "https://api.github.com/repos/radionics/controlp5", "Date": "2018-07-12T05:50:31Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newSpace.isEmpty) queue.add(newSpace);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2269/buggy-version/packing.src.GreedyPacker.java", "BodyUseAPI": ["java.util.SortedSet<GreedyPacker.Space>.add(GreedyPacker.Space)"], "Fixed commit": "a0c9544aa7f2388f4116b97c5ecd26fb7eb02dfc", "Url": "https://api.github.com/repos/Kaj0Wortel/packing", "Date": "2018-05-03T22:13:05Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newSpace.isEmpty) queue.add(newSpace);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2269/buggy-version/packing.src.GreedyPacker.java", "BodyUseAPI": ["java.util.SortedSet<GreedyPacker.Space>.add(GreedyPacker.Space)"], "Fixed commit": "a0c9544aa7f2388f4116b97c5ecd26fb7eb02dfc", "Url": "https://api.github.com/repos/Kaj0Wortel/packing", "Date": "2018-05-03T22:13:05Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bSetEngState) { if ((nextEngState) != (engState)) { vStrs[0] = nextEngState.name(); }else { bSetEngState = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7293/buggy-version/wear.src.main.java.com.example.yhmtmt.aws2.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "22f3c1abdc450710dd915c53016f5ec87d079ff1", "Url": "https://api.github.com/repos/yhmtmt/aws_wear", "Date": "2018-05-12T10:24:23Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bSetRudState) { if ((nextRudState) != (rudState)) { vStrs[0] = nextRudState.name(); }else { bSetEngState = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7293/buggy-version/wear.src.main.java.com.example.yhmtmt.aws2.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "22f3c1abdc450710dd915c53016f5ec87d079ff1", "Url": "https://api.github.com/repos/yhmtmt/aws_wear", "Date": "2018-05-12T10:24:23Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.getParentFile().exists())) { file.getParentFile().mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9571/buggy-version/src.main.java.reposense.util.FileUtil.java", "BodyUseAPI": ["java.io.File.mkdirs()", "java.io.File.getParentFile()"], "Fixed commit": "c0d9d09aee756bdfe98fd185af3f3e8b12640ea0", "Url": "https://api.github.com/repos/eugenepeh/RepoSense", "Date": "2018-05-18T13:36:25Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((Build.VERSION.SDK_INT) >= 23) && ((android.support.v4.content.ContextCompat.checkSelfPermission(this, android.Manifest.permission.CAMERA)) != (android.content.pm.PackageManager.PERMISSION_GRANTED))) { android.widget.Toast.makeText(this, \"Make sure you have permissions enabled!\", Toast.LENGTH_SHORT).show(); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8932/buggy-version/app.src.main.java.me.omarim.parstegram.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "3e6e4859e743a7fa5a5a297a2bd14de7c896cdda", "Url": "https://api.github.com/repos/OmariM/parsetegram", "Date": "2018-07-13T21:19:24Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (startCommand.endsWith(\" \")) split.add(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1098/buggy-version/src.main.engine.commands.AutoComplete.java", "BodyUseAPI": [], "Fixed commit": "3f921333ba525a9911dbb28edd71a8e2689ffc3f", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2018-10-28T11:38:13Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (((character != null) && ((character.getRoom()) != null)) && ((character.getRoom().getRoomDesign()) instanceof domain.RestorationRoom)) { character = this.characterService.updateStats(gather.getCharacter()); character.setRoom(null); character = this.characterService.save(character); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2596/buggy-version/Acme-Survival.src.main.java.controllers.player.GatherPlayerController.java", "BodyUseAPI": [], "Fixed commit": "e2cb140ca9756a3e42d42908168d9d4d60262ec1", "Url": "https://api.github.com/repos/judamalua/DT-D12-Hackathon", "Date": "2018-06-04T10:04:02Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (varName == null) { throw new java.lang.RuntimeException((\"Missing variable name in \" + linePart)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4982/buggy-version/src.main.java.com.sixtyfour.extensions.graphics.commands.Gget.java", "BodyUseAPI": [], "Fixed commit": "987953f1947d4bd8b2dddd56471c994619aedbaf", "Url": "https://api.github.com/repos/EgonOlsen71/basicv2", "Date": "2018-05-09T08:28:59Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((start > 0) && (!(unalignedIndices.isEmpty()))) { previousIndex = unalignedIndices.get((start - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4288/buggy-version/main.src.info.bioinfweb.alignmentcomparator.document.SuperalignedModelDecorator.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.get(int)"], "Fixed commit": "d4be28404116a1f804903cc74351dc36c872b4bc", "Url": "https://api.github.com/repos/bioinfweb/AlignmentComparator", "Date": "2018-02-21T09:30:05Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.facebook.login.LoginManager.getInstance()) != null) { com.facebook.login.LoginManager.getInstance().logOut(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2509/buggy-version/app.src.main.java.com.example.itadmin.projectdapa.session.controller.ProfileFragment.java", "BodyUseAPI": [], "Fixed commit": "14c1ea292b44959aec5699c13e66e54c7d98b593", "Url": "https://api.github.com/repos/MichaelCadavillo/ProjectDAPA", "Date": "2018-05-02T05:54:46Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(selectedCapacity.getText().toString()))) capacity = java.lang.Integer.parseInt(selectedCapacity.getText().toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9558/buggy-version/app.src.main.java.app.haven.haven.CreateNewShelterActivity.java", "BodyUseAPI": ["selectedCapacity.getText().toString()", "android.widget.EditText.getText()", "java.lang.Integer.parseInt(selectedCapacity.getText().toString())"], "Fixed commit": "486c5a4fa0bc00a95725dcb3490389c36b8a0a39", "Url": "https://api.github.com/repos/danielgsmith/CS2340", "Date": "2018-02-16T16:44:35Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (foods.add(new com.mrPATH.snake.module.Point(x, y))) { increase++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7320/buggy-version/src.com.mrPATH.snake.module.Panel.java", "BodyUseAPI": [], "Fixed commit": "65556c0b77449f4c28f735c498a652a273dc28d3", "Url": "https://api.github.com/repos/MRXia/gluttonous-snake", "Date": "2018-05-30T09:15:28Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTestChooseFragment) == null) { mTestChooseFragment = new askdat.pyvela.main.home.TestChooseFragment(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9108/buggy-version/app.src.main.java.askdat.pyvela.main.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "4656616bcd4f58aa45070426674c2de5ff5f3b60", "Url": "https://api.github.com/repos/ietze/PyvelaJava", "Date": "2018-10-24T18:34:26Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.anhcraft.spaciouslib.utils.GameVersion.is1_12Above()) { java.lang.Object registryMaterials = org.anhcraft.spaciouslib.utils.ReflectionUtils.getStaticField(\"recipes\", craftingManagerClass); java.util.Iterator<java.lang.Object> iterator = ((java.util.Iterator<java.lang.Object>) (org.anhcraft.spaciouslib.utils.ReflectionUtils.getMethod(\"iterator\", registryMaterialClass, registryMaterials))); for (; iterator.hasNext();) { java.lang.Object rcp = iterator.next(); org.anhcraft.spaciouslib.inventory.Recipe recipeBukkit = ((org.anhcraft.spaciouslib.inventory.Recipe) (org.anhcraft.spaciouslib.utils.ReflectionUtils.getMethod(\"toBukkitRecipe\", recipeClass, rcp))); if (compare(recipeBukkit)) { return true; } } }else { java.lang.Object craftingManager = org.anhcraft.spaciouslib.utils.ReflectionUtils.getStaticMethod(\"getInstance\", craftingManagerClass); java.util.List<java.lang.Object> nmsRecipes = ((java.util.List<java.lang.Object>) (org.anhcraft.spaciouslib.utils.ReflectionUtils.getMethod(\"getRecipes\", craftingManagerClass, craftingManager))); for (java.lang.Object nr : nmsRecipes) { org.anhcraft.spaciouslib.inventory.Recipe recipeBukkit = ((org.anhcraft.spaciouslib.inventory.Recipe) (org.anhcraft.spaciouslib.utils.ReflectionUtils.getMethod(\"toBukkitRecipe\", recipeClass, nr))); if (compare(recipeBukkit)) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6534/buggy-version/Spigot.src.java.org.anhcraft.spaciouslib.inventory.RecipeManager.java", "BodyUseAPI": [], "Fixed commit": "f67a6d73d6309c0c8fe410cbb1330650b72f0df8", "Url": "https://api.github.com/repos/anhcraft/SpaciousLib", "Date": "2018-07-21T23:53:28Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.anhcraft.spaciouslib.utils.GameVersion.is1_12Above()) { java.lang.Object registryMaterials = org.anhcraft.spaciouslib.utils.ReflectionUtils.getStaticField(\"recipes\", craftingManagerClass); java.util.Iterator<java.lang.Object> iterator = ((java.util.Iterator<java.lang.Object>) (org.anhcraft.spaciouslib.utils.ReflectionUtils.getMethod(\"iterator\", registryMaterialClass, registryMaterials))); for (; iterator.hasNext();) { java.lang.Object rcp = iterator.next(); org.anhcraft.spaciouslib.inventory.Recipe recipeBukkit = ((org.anhcraft.spaciouslib.inventory.Recipe) (org.anhcraft.spaciouslib.utils.ReflectionUtils.getMethod(\"toBukkitRecipe\", recipeClass, rcp))); if (compare(recipeBukkit)) { iterator.remove(); } } }else { java.lang.Object craftingManager = org.anhcraft.spaciouslib.utils.ReflectionUtils.getStaticMethod(\"getInstance\", craftingManagerClass); java.util.List<java.lang.Object> newNmsRecipes = new java.util.ArrayList<>(); java.util.List<java.lang.Object> nmsRecipes = ((java.util.List<java.lang.Object>) (org.anhcraft.spaciouslib.utils.ReflectionUtils.getMethod(\"getRecipes\", craftingManagerClass, craftingManager))); for (java.lang.Object nr : nmsRecipes) { org.anhcraft.spaciouslib.inventory.Recipe recipeBukkit = ((org.anhcraft.spaciouslib.inventory.Recipe) (org.anhcraft.spaciouslib.utils.ReflectionUtils.getMethod(\"toBukkitRecipe\", recipeClass, nr))); if (compare(recipeBukkit)) { continue; } newNmsRecipes.add(nr); } org.anhcraft.spaciouslib.utils.ReflectionUtils.setField(\"recipes\", craftingManagerClass, craftingManager, newNmsRecipes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6534/buggy-version/Spigot.src.java.org.anhcraft.spaciouslib.inventory.RecipeManager.java", "BodyUseAPI": [], "Fixed commit": "f67a6d73d6309c0c8fe410cbb1330650b72f0df8", "Url": "https://api.github.com/repos/anhcraft/SpaciousLib", "Date": "2018-07-21T23:53:28Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v7.widget.RecyclerView.getLayoutManager()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(layoutManager.getInfinite())) && (((layoutManager.mOffset) == (layoutManager.getMaxOffset())) || ((layoutManager.mOffset) == (layoutManager.getMinOffset())))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5623/buggy-version/viewpagerlayoutmanager.src.main.java.com.leochuan.CenterSnapHelper.java", "BodyUseAPI": [], "Fixed commit": "a7e91ea1bf93fd95e9567c102d78f4e01cfa6f4f", "Url": "https://api.github.com/repos/leochuan/ViewPagerLayoutManager", "Date": "2018-03-07T08:49:53Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.leochuan.PageSnapHelper.getLayoutManager()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(layoutManager.getInfinite())) && (((layoutManager.mOffset) == (layoutManager.getMaxOffset())) || ((layoutManager.mOffset) == (layoutManager.getMinOffset())))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5623/buggy-version/viewpagerlayoutmanager.src.main.java.com.leochuan.PageSnapHelper.java", "BodyUseAPI": [], "Fixed commit": "a7e91ea1bf93fd95e9567c102d78f4e01cfa6f4f", "Url": "https://api.github.com/repos/leochuan/ViewPagerLayoutManager", "Date": "2018-03-07T08:49:53Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.client.settings.KeyBinding.getKeyCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (keyCode == (org.lwjgl.input.Keyboard.KEY_NONE)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3065/buggy-version/src.main.java.micdoodle8.mods.galacticraft.core.client.KeyHandler.java", "BodyUseAPI": [], "Fixed commit": "a86d86e585a7791dd01ab6949b789eb1cef23bda", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2018-05-03T00:19:55Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.client.settings.KeyBinding.getKeyCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (keyCode == (org.lwjgl.input.Keyboard.KEY_NONE)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3065/buggy-version/src.main.java.micdoodle8.mods.galacticraft.core.client.KeyHandler.java", "BodyUseAPI": [], "Fixed commit": "a86d86e585a7791dd01ab6949b789eb1cef23bda", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2018-05-03T00:19:55Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((chaine.charAt(((chaine.length()) - 1))) == ',') chaine = chaine.substring(0, ((chaine.length()) - 2));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8698/buggy-version/TP1.tp1-graphes.src.Carte.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "58a3d43024d887b1fd03d26bf0ae2f64e8d814c7", "Url": "https://api.github.com/repos/julierousseau/LOG2810", "Date": "2018-03-01T01:28:37Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((dealerTotal) > 21) && ((dealerAce) > 0)) { dealerTotal -= 10; dealerAce -= 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5733/buggy-version/app.src.main.java.com.example.dan.blackjackltd.SoloCampaign.java", "BodyUseAPI": [], "Fixed commit": "c57a63c0ccb205451ae773a5642c3d7daacad890", "Url": "https://api.github.com/repos/Dan-Naeem/BlackJackApp", "Date": "2018-05-16T22:50:22Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((renderable.userData) != null) { io.github.movementspeed.nhglib.utils.data.Bundle bundle = ((io.github.movementspeed.nhglib.utils.data.Bundle) (renderable.userData)); boolean forceUnlit = bundle.getBoolean(Strings.RenderingSettings.forceUnlitKey, false); if (forceUnlit) { lit = true; imageBasedLighting = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3459/buggy-version/nhglib-core.src.io.github.movementspeed.nhglib.graphics.shaders.forward.PBRShader.java", "BodyUseAPI": [], "Fixed commit": "b288093df6ba493607769f20875f8549c11d3e73", "Url": "https://api.github.com/repos/MovementSpeed/nhglib", "Date": "2018-04-24T21:30:44Z"},
{"Line": "=>649", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["oncserver.ONCWebHttpHandler.checkAddress(ourneighborschild.Address)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hohAddrCheckResult == (oncserver.ONCWebHttpHandler.RC_ADDRESS_IS_SCHOOL)) { errMssg = java.lang.String.format((\"The HoH address cannot be a school address in Fairfax County. \" + ((\"Please provide the family's actual, valid Fairfax County address. To refer \" + \"a family without a vaild Fairfax County residential address, please send an email \") + \"to schoolcontact@ourneighborschild.org\"))); returnCode = returnCode | (oncserver.ONCWebHttpHandler.EC_ADDRESS_NOT_VALID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/652/buggy-version/src.oncserver.ONCWebHttpHandler.java", "BodyUseAPI": [], "Fixed commit": "cb8e12e0df73c9d3fb2884295b520bd87e0b434f", "Url": "https://api.github.com/repos/oneilljw/ONC-Server", "Date": "2018-09-27T01:54:35Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(fun.rubicon.RubiconBot.getConfiguration().has(\"supporthook\"))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1655/buggy-version/src.main.java.fun.rubicon.commands.general.CommandBug.java", "BodyUseAPI": [], "Fixed commit": "2fdbf54f8c06f104f8255926e90c8b644b78a0f0", "Url": "https://api.github.com/repos/Rubicon-Bot/Rubicon", "Date": "2018-05-06T10:19:07Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(fun.rubicon.RubiconBot.getConfiguration().has(\"supporthook\"))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1655/buggy-version/src.main.java.fun.rubicon.commands.general.CommandSupport.java", "BodyUseAPI": [], "Fixed commit": "2fdbf54f8c06f104f8255926e90c8b644b78a0f0", "Url": "https://api.github.com/repos/Rubicon-Bot/Rubicon", "Date": "2018-05-06T10:19:07Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mpRes) != null) { mpRes.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2958/buggy-version/app.src.main.java.com.android_examples.swipedetector_android_examplescom.MonitorThread.java", "BodyUseAPI": [], "Fixed commit": "083ee09ced7f2526f59f593bcaf8b1cff30cf053", "Url": "https://api.github.com/repos/tothandrasbme/SwipeDetector", "Date": "2018-04-06T07:41:54Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastAnswerTime) == 0) { lastAnswerTime = java.lang.System.currentTimeMillis(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2958/buggy-version/app.src.main.java.com.android_examples.swipedetector_android_examplescom.MonitorThread.java", "BodyUseAPI": [], "Fixed commit": "083ee09ced7f2526f59f593bcaf8b1cff30cf053", "Url": "https://api.github.com/repos/tothandrasbme/SwipeDetector", "Date": "2018-04-06T07:41:54Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URL.getHost()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (platformString.contains(\"urionlinejudge\")) { contestPlatform.setImageResource(R.mipmap.urioj_logo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4331/buggy-version/app.src.main.java.com.iitp.njack.iitp_connect.CodingCalendar.Adapters.CodingCalendarAdapter.java", "BodyUseAPI": [], "Fixed commit": "9c180173f68c93906cb669086e167e08a42b38c6", "Url": "https://api.github.com/repos/srv-twry/IITP-Connect", "Date": "2017-12-10T20:03:57Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(result.isEmpty())) { findViewById(R.id.loading_pb).setVisibility(View.INVISIBLE); android.content.Intent intent = new android.content.Intent(this, com.example.displayjoke.JokeActivity.class); intent.putExtra(Intent.EXTRA_TEXT, result); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4000/buggy-version/app.src.main.java.com.udacity.gradle.builditbigger.MainActivity.java", "BodyUseAPI": ["android.content.Intent.putExtra(Intent.EXTRA_TEXT,java.lang.String)"], "Fixed commit": "c5a976e9327d821440b708473a2239aab361595d", "Url": "https://api.github.com/repos/intkhabahmed/JokeTeller", "Date": "2018-09-19T17:45:16Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (URL == null) { throw new javax.ws.rs.BadRequestException(\"There is no URL given.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3262/buggy-version/src.main.java.at.ac.oeaw.helpers.RequestHandler.java", "BodyUseAPI": [], "Fixed commit": "af310cf407d058e679d8db53e59669ab09924f49", "Url": "https://api.github.com/repos/acdh-oeaw/Distanbol", "Date": "2018-10-12T13:38:13Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.akaza.openclinica.bean.submit.ItemFormMetadataBean.getResponseSet()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((rsb.getResponseType().equals(org.akaza.openclinica.bean.submit.org.akaza.openclinica.bean.core.ResponseType)) || (rsb.getResponseType().equals(org.akaza.openclinica.bean.submit.org.akaza.openclinica.bean.core.ResponseType))) { rsb.removeSelection(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2551/buggy-version/core.src.main.java.org.akaza.openclinica.bean.submit.DisplayItemBean.java", "BodyUseAPI": ["org.akaza.openclinica.bean.submit.ResponseSetBean.removeSelection()"], "Fixed commit": "5a24f9d96e8f93232d2a23397db35385a649b437", "Url": "https://api.github.com/repos/Taoli2018/OpenClinica", "Date": "2018-05-03T13:40:27Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBankLogic) == null) { mBankLogic = new com.codernauti.gamebank.BankLogic(android.support.v4.content.LocalBroadcastManager.getInstance(context)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6110/buggy-version/app.src.main.java.com.codernauti.gamebank.GameBank.java", "BodyUseAPI": [], "Fixed commit": "932248f9fcc92567ad0bfc2355f394005432f7f5", "Url": "https://api.github.com/repos/Codernauti/GameBank", "Date": "2018-05-02T08:02:20Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gadget) != null) { if (!(player.getInventory().contains(gadget.getItem().build()))) return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8103/buggy-version/src.main.java.gadgets.brainsynder.api.user.User.java", "BodyUseAPI": [], "Fixed commit": "061e4d114c3789c7d9b613386361a9bed3458c66", "Url": "https://api.github.com/repos/brainsynder-Dev/SimpleGadgets", "Date": "2018-04-05T16:33:01Z"},
{"Line": "=>479", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.toHexString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dex.length()) == 1) { dex = \"0\" + dex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9109/buggy-version/app.src.main.java.com.wheel.legend.singleholder.SlideHelper.java", "BodyUseAPI": [], "Fixed commit": "5d2f025ed7efe520246d80d52605d9cab7a43dfb", "Url": "https://api.github.com/repos/Android-wheel-by-legend/SingleHolder", "Date": "2018-01-05T09:12:14Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ClientProxy.item_frame.isKeyDown()) { net.minecraft.entity.item.EntityItemFrame frame = ((net.minecraft.entity.item.EntityItemFrame) (event.getTarget())); PacketHandler.INSTANCE.sendToServer(new com.srkw.tweakoni.network.PacketItemRotate()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2288/buggy-version/src.main.java.com.srkw.tweakoni.events.ClientEvents.java", "BodyUseAPI": [], "Fixed commit": "5051d095eb403f749ce0be15259cdf5a85f92dca", "Url": "https://api.github.com/repos/strikerrocker/Tweakoni", "Date": "2018-04-11T09:30:16Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.plugin.worldeditplugin.getSession(player).getSelectionWorld()) != null) { this.plugin.worldeditplugin.getSession(player).getRegionSelector(this.plugin.worldeditplugin.getSession(player).getSelectionWorld()).clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5690/buggy-version/src.main.java.xyz.joestr.zonemenu.command.ZoneCommand.java", "BodyUseAPI": ["this.plugin.worldeditplugin.getSession(player).getRegionSelector(this.plugin.worldeditplugin.getSession(player).getSelectionWorld()).clear()", "this.plugin.worldeditplugin.getSession(org.bukkit.entity.Player)", "this.plugin.worldeditplugin.getSession(player).getSelectionWorld()", "this.plugin.worldeditplugin.getSession(org.bukkit.entity.Player)", "this.plugin.worldeditplugin.getSession(player).getRegionSelector(this.plugin.worldeditplugin.getSession(player).getSelectionWorld())"], "Fixed commit": "f7e3f47f47fc9f681187a21202cfdef27e1ee209", "Url": "https://api.github.com/repos/joestr/ZoneMenu", "Date": "2018-05-01T19:59:58Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (temp == null) { temp = \"veto\"; cfg.setProp(\"mode\", \"veto\"); }else { switch (temp) { case \"veto\" : selectionMode = true; break; case \"random\" : selectionMode = false; break; default : selectionMode = true; break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8571/buggy-version/src.main.java.util.QueueHandler.java", "BodyUseAPI": [], "Fixed commit": "6b357ed5c63ca57339d5138b0d0a263542dcb940", "Url": "https://api.github.com/repos/deltarod/Discord-PUG-bot", "Date": "2018-09-08T05:04:51Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"logException\".equals(action)) { java.lang.String exceptionString = args.getString(0); try { throw new java.lang.Exception(exceptionString); } catch (java.lang.Exception exception) { ly.count.android.sdk.Countly.sharedInstance().logException(exception); } callbackContext.success(\"logException success!\"); return true; }else if (\"start\".equals(action)) { ly.count.android.sdk.Countly.sharedInstance().onStart(this.cordova.getActivity()); callbackContext.success(\"started!\"); return true; }else if (\"stop\".equals(action)) { ly.count.android.sdk.Countly.sharedInstance().onStop(); callbackContext.success(\"stoped!\"); return true; }else if (\"startEvent\".equals(action)) { java.lang.String startEvent = args.getString(0); ly.count.android.sdk.Countly.sharedInstance().startEvent(startEvent); return true; }else if (\"endEvent\".equals(action)) { java.lang.String eventType = args.getString(0); if (\"event\".equals(eventType)) { java.lang.String eventName = args.getString(1); ly.count.android.sdk.Countly.sharedInstance().endEvent(eventName); callbackContext.success(\"event sent\"); }else if (\"eventWithSegment\".equals(eventType)) { java.lang.String eventName = args.getString(1); java.util.HashMap<java.lang.String, java.lang.String> segmentation = new java.util.HashMap<java.lang.String, java.lang.String>(); for (int i = 4, il = args.length(); i < il; i += 2) { segmentation.put(args.getString(i), args.getString((i + 1))); } ly.count.android.sdk.Countly.sharedInstance().endEvent(eventName, segmentation, 1, 0); callbackContext.success(\"eventWithSumSegment sent\"); }else if (\"eventWithSum\".equals(eventType)) { java.lang.String eventName = args.getString(1); int eventCount = java.lang.Integer.parseInt(args.getString(2)); float eventSum = new java.lang.Float(args.getString(3)).floatValue(); java.util.HashMap<java.lang.String, java.lang.String> segmentation = new java.util.HashMap<java.lang.String, java.lang.String>(); for (int i = 4, il = args.length(); i < il; i += 2) { segmentation.put(args.getString(i), args.getString((i + 1))); } ly.count.android.sdk.Countly.sharedInstance().endEvent(eventName, segmentation, eventCount, eventSum); callbackContext.success(\"eventWithSumSegment sent\"); }else if (\"eventWithSumSegment\".equals(eventType)) { java.lang.String eventName = args.getString(1); int eventCount = java.lang.Integer.parseInt(args.getString(2)); float eventSum = new java.lang.Float(args.getString(3)).floatValue(); java.util.HashMap<java.lang.String, java.lang.String> segmentation = new java.util.HashMap<java.lang.String, java.lang.String>(); for (int i = 4, il = args.length(); i < il; i += 2) { segmentation.put(args.getString(i), args.getString((i + 1))); } ly.count.android.sdk.Countly.sharedInstance().endEvent(eventName, segmentation, eventCount, eventSum); callbackContext.success(\"eventWithSumSegment sent\"); }else { callbackContext.success(\"event sent\"); } return true; }else if (\"event\".equals(action)) { java.lang.String eventType = args.getString(0); if (\"event\".equals(eventType)) { java.lang.String eventName = args.getString(1); int eventCount = java.lang.Integer.parseInt(args.getString(2)); ly.count.android.sdk.Countly.sharedInstance().recordEvent(eventName, eventCount); callbackContext.success(\"event sent\"); }else if (\"eventWithSum\".equals(eventType)) { java.lang.String eventName = args.getString(1); int eventCount = java.lang.Integer.parseInt(args.getString(2)); float eventSum = new java.lang.Float(args.getString(3)).floatValue(); ly.count.android.sdk.Countly.sharedInstance().recordEvent(eventName, eventCount, eventSum); callbackContext.success(\"eventWithSum sent\"); }else if (\"eventWithSegment\".equals(eventType)) { java.lang.String eventName = args.getString(1); int eventCount = java.lang.Integer.parseInt(args.getString(2)); java.util.HashMap<java.lang.String, java.lang.String> segmentation = new java.util.HashMap<java.lang.String, java.lang.String>(); for (int i = 3, il = args.length(); i < il; i += 2) { segmentation.put(args.getString(i), args.getString((i + 1))); } ly.count.android.sdk.Countly.sharedInstance().recordEvent(eventName, segmentation, eventCount); callbackContext.success(\"eventWithSegment sent\"); }else if (\"eventWithSumSegment\".equals(eventType)) { java.lang.String eventName = args.getString(1); int eventCount = java.lang.Integer.parseInt(args.getString(2)); float eventSum = new java.lang.Float(args.getString(3)).floatValue(); java.util.HashMap<java.lang.String, java.lang.String> segmentation = new java.util.HashMap<java.lang.String, java.lang.String>(); for (int i = 4, il = args.length(); i < il; i += 2) { segmentation.put(args.getString(i), args.getString((i + 1))); } ly.count.android.sdk.Countly.sharedInstance().recordEvent(eventName, segmentation, eventCount, eventSum); callbackContext.success(\"eventWithSumSegment sent\"); }else { callbackContext.success(\"event sent\"); } return true; }else if (\"setloggingenabled\".equals(action)) { ly.count.android.sdk.Countly.sharedInstance().setLoggingEnabled(true); callbackContext.success(\"setloggingenabled success!\"); return true; }else if (\"setuserdata\".equals(action)) { java.util.Map<java.lang.String, java.lang.String> bundle = new java.util.HashMap<java.lang.String, java.lang.String>(); bundle.put(\"name\", args.getString(0)); bundle.put(\"username\", args.getString(1)); bundle.put(\"email\", args.getString(2)); bundle.put(\"org\", args.getString(3)); bundle.put(\"phone\", args.getString(4)); bundle.put(\"picture\", args.getString(5)); bundle.put(\"picturePath\", args.getString(6)); bundle.put(\"gender\", args.getString(7)); bundle.put(\"byear\", java.lang.String.valueOf(args.getInt(8))); Countly.userData.setUserData(bundle); Countly.userData.save(); callbackContext.success(\"setuserdata success\"); return true; }else if (\"userData_setProperty\".equals(action)) { java.lang.String keyName = args.getString(0); java.lang.String keyValue = args.getString(1); Countly.userData.setProperty(keyName, keyValue); Countly.userData.save(); callbackContext.success(\"userData_setProperty success!\"); return true; }else if (\"userData_increment\".equals(action)) { java.lang.String keyName = args.getString(0); Countly.userData.increment(keyName); Countly.userData.save(); callbackContext.success(\"userData_increment success!\"); return true; }else if (\"userData_incrementBy\".equals(action)) { java.lang.String keyName = args.getString(0); int keyIncrement = java.lang.Integer.parseInt(args.getString(1)); Countly.userData.incrementBy(keyName, keyIncrement); Countly.userData.save(); callbackContext.success(\"userData_incrementBy success!\"); return true; }else if (\"userData_multiply\".equals(action)) { java.lang.String keyName = args.getString(0); int multiplyValue = java.lang.Integer.parseInt(args.getString(1)); Countly.userData.multiply(keyName, multiplyValue); Countly.userData.save(); callbackContext.success(\"userData_multiply success!\"); return true; }else if (\"userData_saveMax\".equals(action)) { java.lang.String keyName = args.getString(0); int maxScore = java.lang.Integer.parseInt(args.getString(1)); Countly.userData.saveMax(keyName, maxScore); Countly.userData.save(); callbackContext.success(\"userData_saveMax success!\"); return true; }else if (\"userData_saveMin\".equals(action)) { java.lang.String keyName = args.getString(0); int minScore = java.lang.Integer.parseInt(args.getString(1)); Countly.userData.saveMin(keyName, minScore); Countly.userData.save(); callbackContext.success(\"userData_saveMin success!\"); return true; }else if (\"userData_setOnce\".equals(action)) { java.lang.String keyName = args.getString(0); java.lang.String minScore = args.getString(1); Countly.userData.setOnce(keyName, minScore); Countly.userData.save(); callbackContext.success(\"userData_setOnce success!\"); return true; }else if (\"onregistrationid\".equals(action)) { java.lang.String registrationId = args.getString(0); int messagingMode = java.lang.Integer.parseInt(args.getString(1)); java.lang.String projectId = args.getString(2); ly.count.android.sdk.Countly.CountlyMessagingMode mode = null; if (messagingMode == 1) { mode = Countly.CountlyMessagingMode.TEST; }else { mode = Countly.CountlyMessagingMode.PRODUCTION; } ly.count.android.sdk.Countly.sharedInstance().onRegistrationId(registrationId, mode); callbackContext.success(\"initMessaging success\"); android.util.Log.e(\"Nicolson\", registrationId); return true; }else if (\"recordView\".equals(action)) { java.lang.String viewName = args.getString(0); ly.count.android.sdk.Countly.sharedInstance().recordView(viewName); callbackContext.success((\"View name sent: \" + viewName)); return true; }else if (\"setOptionalParametersForInitialization\".equals(action)) { java.lang.String city = args.getString(0); java.lang.String country = args.getString(1); double latitude = java.lang.Double.parseDouble(args.getString(2)); double longitude = java.lang.Double.parseDouble(args.getString(3)); ly.count.android.sdk.Countly.sharedInstance().setOptionalParametersForInitialization(country, city, ((latitude + \",\") + longitude)); callbackContext.success(\"setOptionalParametersForInitialization sent.\"); return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1273/buggy-version/src.android.CountlyCordova.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "88b5b44e9af892397aa1774975b245bc109e63db", "Url": "https://api.github.com/repos/Countly/countly-sdk-js", "Date": "2018-02-27T18:41:02Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((calculatorState) == 0) solve();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5451/buggy-version/app.src.main.java.konnov.commr.vk.calculator.Solvator.java", "BodyUseAPI": [], "Fixed commit": "099a945becced43df4d2736d615eb9ac34453e32", "Url": "https://api.github.com/repos/konnov-007/Calculator", "Date": "2018-01-09T13:32:08Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((job.getName()) == null) || ((job.getGroup()) == null)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4914/buggy-version/service.src.main.java.org.apache.griffin.core.job.JobServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "cc3386c67b26dc79eaa85c1f84eab59b2f97ccad", "Url": "https://api.github.com/repos/ahutsunshine/incubator-griffin", "Date": "2018-05-09T07:31:48Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.lang.String>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (mappingAlreadyExists(shopCode, uboNumber, adyenShareholderCode)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3357/buggy-version/src.main.java.com.adyen.mirakl.service.ShareholderMappingService.java", "BodyUseAPI": [], "Fixed commit": "7c40d674642e12991029e8e64b7c1d7fb73b396a", "Url": "https://api.github.com/repos/Adyen/adyen-mirakl", "Date": "2018-04-10T12:23:38Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["PlayerInteractEvent.RightClickBlock.getWorld()", "PlayerInteractEvent.RightClickBlock.getPos()", "event.getHitVec().subtract(pos.getX(),pos.getY(),pos.getZ())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((plantable.onItemUse(event.getEntityPlayer(), world, pos.down(), event.getHand(), EnumFacing.UP, ((float) (hVec.x)), ((float) (hVec.y)), ((float) (hVec.z)))) == (net.minecraft.util.EnumActionResult.SUCCESS)) { plantable.shrink(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4395/buggy-version/src.main.java.pl.asie.charset.module.tweak.CharsetTweakRightClickHarvest.java", "BodyUseAPI": ["net.minecraft.item.ItemStack.shrink(int)"], "Fixed commit": "62b24cb8df1fd90e94bc83e4d1b1e33b314784ee", "Url": "https://api.github.com/repos/CharsetMC/Charset", "Date": "2018-06-10T16:35:52Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((collisionEntity) != null) { planetAtmosphere = ((game.physics.entities.Planet) (collisionEntity)); }else { for (game.physics.entities.Planet planet : game.Data.planets) { if (((planetAtmosphere) == null) && ((planet.getPosition().subtract(nextPosition).pythagoreanSquared()) < (java.lang.Math.pow(((radius) + (planet.getAtmosphereRadius())), 2)))) { planetAtmosphere = planet; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5875/buggy-version/src.main.java.game.physics.entities.Player.java", "BodyUseAPI": [], "Fixed commit": "8428b75f49f67ba3cb633330b86ab8ab64e5dc8c", "Url": "https://api.github.com/repos/kanmingxu/Planets", "Date": "2018-03-11T19:31:49Z"},
{"Line": "=>787", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(isNavigationRoot())) && (!(shouldHideBackButton()))) { toolbar.setNavigationIcon(style.getBackIcon()); toolbar.setNavigationOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View view) { getNavigationFragment().popFragment(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4346/buggy-version/navigation.src.main.java.me.listenzz.navigation.AwesomeFragment.java", "BodyUseAPI": [], "Fixed commit": "4725ea8d82eb72e00a2a22bc95c000b4051da349", "Url": "https://api.github.com/repos/listenzz/AndroidNavigation", "Date": "2018-04-06T02:02:49Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((versionAppContract.getVersioncode()) != null) { if ((edu.aku.hassannaqvi.nns_2018.core.MainApp.versionCode) < (java.lang.Integer.valueOf(versionAppContract.getVersioncode()))) { mainBinding.lblAppVersion.setVisibility(View.VISIBLE); mainBinding.lblAppVersion.setText(\"New Version Available\"); }else { mainBinding.lblAppVersion.setVisibility(View.GONE); mainBinding.lblAppVersion.setText(null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1084/buggy-version/app.src.main.java.edu.aku.hassannaqvi.nns_2018.ui.MainActivity.java", "BodyUseAPI": ["edu.aku.hassannaqvi.nns_2018.contracts.VersionAppContract.getVersioncode()", "java.lang.Integer.valueOf(versionAppContract.getVersioncode())"], "Fixed commit": "2a23841479870172940fd5c83d68fd0e22d38e74", "Url": "https://api.github.com/repos/shznaqvi/nns_2018", "Date": "2018-03-06T05:27:28Z"},
{"Line": "=>1041", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (preserveCaseForResources) { statement = dbConnection.prepareStatement(DBConstants.GET_EXISTING_ROLE_PERMISSIONS_BY_RESOURCE_ID_CASE_SENSITIVE); }else { statement = dbConnection.prepareStatement(DBConstants.GET_EXISTING_ROLE_PERMISSIONS_BY_RESOURCE_ID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6422/buggy-version/core.org.wso2.carbon.user.core.src.main.java.org.wso2.carbon.user.core.authorization.PermissionTree.java", "BodyUseAPI": [], "Fixed commit": "f869cdb7281e5ad9ed6a24a208d0cfd436366a8a", "Url": "https://api.github.com/repos/dushansilva/carbon-kernel", "Date": "2018-06-26T05:29:42Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (card.statsLine.startsWith(\"Climax\")) { card.statsLine.replace(\"&lt;br&gt;\", \"<br>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2862/buggy-version/WS_CotD.src.ws_cotd_web.CotdWeb_CardListHelper.java", "BodyUseAPI": ["card.statsLine.replace(java.lang.String,java.lang.String)"], "Fixed commit": "5d190230d4be2c2f8405b932538c1d3ed6add375", "Url": "https://api.github.com/repos/MoisesSanSol/WS_CotD", "Date": "2018-07-24T11:34:53Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tmp.endsWith(\"\\n\")) { return tmp.substring(0, tmp.lastIndexOf(\"\\n\")); }else { return tmp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9475/buggy-version/zookeeper.src.main.java.org.schemarepo.zookeeper.ZooKeeperRepository.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.lastIndexOf(java.lang.String)"], "Fixed commit": "3dba7f414cee73c2c05a23d1f9f22687becd8e1c", "Url": "https://api.github.com/repos/chekore/schema-repo", "Date": "2018-09-19T06:47:48Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(typesCorrect(matchers))) { Function.log.error(\"wrong type of configuration, expecting a list of maps\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3883/buggy-version/src.main.java.de.hilling.graylog.plugins.multimatch.MultiMatcher.java", "BodyUseAPI": [], "Fixed commit": "29c0726434da2f684f4cb31cbcdcdd70705eaf35", "Url": "https://api.github.com/repos/guhilling/graylog-plugin-function-multimatch", "Date": "2018-10-29T12:43:40Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (currentMinute < 10) { cM = \"0\" + (java.lang.Integer.toString(currentMinute)); }else { cM = java.lang.Integer.toString(currentMinute); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4628/buggy-version/app.src.main.java.com.example.zion.workoutwithme.activity_newsfeed.java", "BodyUseAPI": ["java.lang.Integer.toString(int)", "java.lang.Integer.toString(int)"], "Fixed commit": "8e3711bc077626321cea49fd4494669405e6270c", "Url": "https://api.github.com/repos/zioncalvo/Workout-with-Me", "Date": "2018-06-10T08:43:03Z"},
{"Line": "=>532", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (uriToList().isEmpty()) return builder.build().iterator();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2330/buggy-version/src.main.java.com.upplication.s3fs.S3Path.java", "BodyUseAPI": [], "Fixed commit": "acedde48e934e9808f23f61fcfbe68c7fa9bf197", "Url": "https://api.github.com/repos/adamstruck/Amazon-S3-FileSystem-NIO2", "Date": "2017-12-19T12:06:19Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.creativemd.littletiles.common.action.block.LittleActionPlaceStack.loadTe(net.minecraft.entity.player.EntityPlayer,net.minecraft.world.World,net.minecraft.util.math.BlockPos,boolean)", "java.util.HashMap<net.minecraft.util.math.BlockPos, com.creativemd.littletiles.common.tiles.place.PlacePreviews>.get(net.minecraft.util.math.BlockPos)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(te.isSpaceForLittleTileStructure(tiles.get(j).box))) { if ((te.getContext()) != contextBefore) te.convertTo(contextBefore); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5645/buggy-version/src.main.java.com.creativemd.littletiles.common.action.block.LittleActionPlaceStack.java", "BodyUseAPI": ["com.creativemd.littletiles.common.tileentity.TileEntityLittleTiles.convertTo(com.creativemd.littletiles.common.utils.grid.LittleGridContext)", "com.creativemd.littletiles.common.tileentity.TileEntityLittleTiles.getContext()"], "Fixed commit": "fa6c5434098be13ce85c7b78a0de029c7a214116", "Url": "https://api.github.com/repos/CreativeMD/LittleTiles", "Date": "2018-10-18T14:33:24Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<net.minecraft.util.math.BlockPos, com.creativemd.littletiles.common.tiles.place.PlacePreviews>.get(net.minecraft.util.math.BlockPos)", "com.creativemd.littletiles.common.action.block.LittleActionPlaceStack.loadTe(net.minecraft.entity.player.EntityPlayer,net.minecraft.world.World,net.minecraft.util.math.BlockPos,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(te.isSpaceForLittleTile(tiles.get(j).box))) { if ((te.getContext()) != contextBefore) te.convertTo(contextBefore); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5645/buggy-version/src.main.java.com.creativemd.littletiles.common.action.block.LittleActionPlaceStack.java", "BodyUseAPI": ["com.creativemd.littletiles.common.tileentity.TileEntityLittleTiles.getContext()", "com.creativemd.littletiles.common.tileentity.TileEntityLittleTiles.convertTo(com.creativemd.littletiles.common.utils.grid.LittleGridContext)"], "Fixed commit": "fa6c5434098be13ce85c7b78a0de029c7a214116", "Url": "https://api.github.com/repos/CreativeMD/LittleTiles", "Date": "2018-10-18T14:33:24Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getItemViewType(position)) != (com.vn.fa.adapter.infinite.InfiniteAdapter.VIEW_TYPE_LOADING)) { super.onBindViewHolder(holder, position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6693/buggy-version/library.src.main.java.com.vn.fa.adapter.infinite.InfiniteAdapter.java", "BodyUseAPI": ["com.vn.fa.adapter.multipleviewtype.FaBindAdapter.onBindViewHolder(RecyclerView.ViewHolder,int)"], "Fixed commit": "2e0229265ae6f9ada94f68fa27134e85cd242ac5", "Url": "https://api.github.com/repos/binhbt/FaRecyclerview", "Date": "2018-08-11T09:28:31Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.nuls.network.service.NetworkService.addConnNode(io.nuls.network.entity.Node)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!result) { channel.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4304/buggy-version/network-impl.src.main.java.io.nuls.network.service.impl.netty.ClientChannelHandler.java", "BodyUseAPI": [], "Fixed commit": "c564cc4462d7e6f9d825c0010233bfd21ac96162", "Url": "https://api.github.com/repos/nuls-io/nuls", "Date": "2018-04-12T16:26:17Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ip.contains(\"hivemc.com\")) { rich.smallImageKey = \"hivemc\"; rich.smallImageText = \"HiveMC\"; }else if (ip.contains(\"ubermc.net\")) { rich.smallImageKey = \"ubermc\"; rich.smallImageText = \"UberMC\"; }else if (ip.contains(\"aternos\")) { rich.smallImageText = \"Aternos server\"; rich.smallImageKey = \"aternos\"; }else if (ip.contains(\"giantcraft.net\")) { rich.smallImageText = \"GiantCraftMC\"; rich.smallImageKey = \"giantcraft\"; }else if (ip.contains(\"blockmc.com\")) { rich.smallImageText = \"BlocksMC\"; rich.smallImageKey = \"blocksmc\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6892/buggy-version/src.main.java.com.github.fernthedev.RPC.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "daef142724302ca1c9e57592454396d7f582c1ed", "Url": "https://api.github.com/repos/Fernthedev/DiscordRPCMod", "Date": "2018-06-05T16:12:05Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((latLngs.size()) > 0) { com.google.android.gms.maps.model.TileProvider mProvider = new com.google.maps.android.heatmaps.HeatmapTileProvider.Builder().data(latLngs).build(); googleMap.addTileOverlay(new com.google.android.gms.maps.model.TileOverlayOptions().tileProvider(mProvider)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5005/buggy-version/app.app.src.main.java.fyi.jackson.drew.roadquality.utils.MapData.java", "BodyUseAPI": ["new com.google.maps.android.heatmaps.HeatmapTileProvider.Builder().data(latLngs).build()", "com.google.maps.android.heatmaps.HeatmapTileProvider.Builder.data(java.util.List<com.google.android.gms.maps.model.LatLng>)"], "Fixed commit": "b108e867ff4a0ae48f27e462ec1501ffe7849e08", "Url": "https://api.github.com/repos/David-Jackson/RoadQuality", "Date": "2018-01-25T20:40:27Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.event.KeyEvent.getKeyCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((kc >= 49) && (kc < (49 + anzVorschlaege))) { int key = kc - 49; setTextField(vorschlaege.get(key)); }else { for (int i = 0; i < (vorschlaege.size()); i++) { java.lang.System.out.println((((i + 1) + \": \") + (vorschlaege.get(i)))); } java.lang.System.out.println(\"----------------------------\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7696/buggy-version/src.EingabeFeld.java", "BodyUseAPI": [], "Fixed commit": "50f6147000ad6a916121a82f7004e39addea64bb", "Url": "https://api.github.com/repos/h0r/TastaturPredicter", "Date": "2018-01-30T14:01:53Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((current.getSkin()) != null) { current.getSkin().drawAllObjects(sprite, current); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2664/buggy-version/src.bms.player.beatoraja.MainController.java", "BodyUseAPI": ["bms.player.beatoraja.MainState.getSkin()", "current.getSkin().drawAllObjects(com.badlogic.gdx.graphics.g2d.SpriteBatch,bms.player.beatoraja.MainState)"], "Fixed commit": "d6c5006c2dd80830c002e394f46de9c3831d6eb5", "Url": "https://api.github.com/repos/niente1899/beatoraja", "Date": "2018-03-16T20:35:15Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.matthewcannefax.menuplanner.StaticItems.StaticRecipes.getRecipeList()) != null) && ((com.matthewcannefax.menuplanner.StaticItems.StaticRecipes.getRecipeList().size()) != 0)) { android.content.Intent intent = new android.content.Intent(this, com.matthewcannefax.menuplanner.activity.RecipeListActivity.class); intent.putExtra(\"TITLE\", \"Add To Menu\"); this.startActivity(intent); return true; }else { android.widget.Toast.makeText(this, \"No Recipes in the Cookbook\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2401/buggy-version/app.src.main.java.com.matthewcannefax.menuplanner.activity.MenuListActivity.java", "BodyUseAPI": [], "Fixed commit": "a5ed92c6f7970f8d15b0105504a1d7d7835ff407", "Url": "https://api.github.com/repos/MatthewCannefax/MenuPlanner", "Date": "2018-04-12T21:48:55Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((db) != (com.blazebit.persistence.integration.hibernate.base.HibernateJpaProvider.DB.MY_SQL)) || ((\"ASC\".equalsIgnoreCase(order)) && (\"LAST\".equals(nulls)))) || ((\"DESC\".equalsIgnoreCase(order)) && (\"FIRST\".equals(nulls)))) { sb.append(\"CASE WHEN \").append((resolvedExpression != null ? resolvedExpression : expression)).append(\" IS NULL THEN \"); if (\"FIRST\".equals(nulls)) { sb.append(\"0 ELSE 1\"); }else { sb.append(\"1 ELSE 0\"); } sb.append(\" END, \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2422/buggy-version/integration.hibernate-base.src.main.java.com.blazebit.persistence.integration.hibernate.base.HibernateJpaProvider.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "88f836c4fecdec02cb87d86c6e55500ecb4d6d16", "Url": "https://api.github.com/repos/Blazebit/blaze-persistence", "Date": "2018-07-19T17:45:19Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mmall.util.CookieUtil.readLoginToken(javax.servlet.http.HttpServletRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(loginToken)) { return com.mmall.common.ServerResponse.createByErrorMessage(\"\u7528\u6237\u672a\u767b\u5f55,\u65e0\u6cd5\u83b7\u53d6\u5f53\u524d\u7528\u6237\u7684\u4fe1\u606f\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1553/buggy-version/src.main.java.com.mmall.controller.backend.UserManageController.java", "BodyUseAPI": [], "Fixed commit": "5abc2fcf22819ee26e9c88acd91f8fe33a05c57e", "Url": "https://api.github.com/repos/originer/mmall", "Date": "2018-01-13T11:55:16Z"},
{"Line": "=>1240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.onyx.latinime.keyboard.PointerTracker.onMoveKey(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(oldKey.equals(newKey))) { onUpEventInternal(lastX, lastY, eventTime, false); onDownEventInternal(x, y, eventTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2599/buggy-version/app.OnyxLatinIME.src.main.java.com.onyx.latinime.keyboard.PointerTracker.java", "BodyUseAPI": [], "Fixed commit": "cdd7725dd6cf58ce1a71054c31958f31641ba01b", "Url": "https://api.github.com/repos/onyx-intl/OnyxAndroidSample", "Date": "2018-08-29T11:37:46Z"},
{"Line": "=>984", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((limit) == null) || ((counter.getValue()) < ((limit) - (values.size())))) for (com.serotonin.m2m2.rt.dataImage.IdPointValueTime post : bookends) callback.lastValue(post, counter.getValue(), true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7091/buggy-version/Core.src.com.serotonin.m2m2.db.dao.PointValueDaoSQL.java", "BodyUseAPI": ["org.apache.commons.lang3.mutable.MutableInt.getValue()", "T.lastValue(com.serotonin.m2m2.rt.dataImage.IdPointValueTime,counter.getValue(),boolean)"], "Fixed commit": "a4f47f7651c477b421a07b19bd18846697d2ca35", "Url": "https://api.github.com/repos/infiniteautomation/ma-core-public", "Date": "2018-02-23T23:28:35Z"},
{"Line": "=>694", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((hivTest.getDate()) != null) { java.util.Date date = com.muzima.utils.DateUtils.parseDateByPattern(hivTest.getDate(), \"yyyyMMdd\"); if (latHivShrUpdateDateTime == null) { latHivShrUpdateDateTime = date; }else if (latHivShrUpdateDateTime.before(date)) { latHivShrUpdateDateTime = date; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9565/buggy-version/app.src.main.java.com.muzima.utils.smartcard.KenyaEmrShrMapper.java", "BodyUseAPI": ["com.muzima.utils.DateUtils.parseDateByPattern(hivTest.getDate(),java.lang.String)", "com.muzima.model.shr.kenyaemr.HIVTest.getDate()"], "Fixed commit": "8f9290e57b998938668697cdc982d4c96e96c9db", "Url": "https://api.github.com/repos/muzima/muzima-android", "Date": "2018-03-27T10:10:20Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(intColumns.contains(column))) { intColumns.add(column); com.Ben12345rocks.AdvancedCore.Data.ServerData.getInstance().setIntColumns(intColumns); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1775/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.mysql.MySQL.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "com.Ben12345rocks.AdvancedCore.Data.ServerData.getInstance().setIntColumns(java.util.List<java.lang.String>)"], "Fixed commit": "f37ac336f542a6cfbf138108c7fe4f6937e0e4ed", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2018-07-22T17:15:03Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.halvors.nuclearphysics.common.network.PacketHandler.getWorld(cpw.mods.fml.common.network.simpleimpl.MessageContext)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (world != null) { world.spawnParticle(message.particleName, message.x, message.y, message.z, message.velocityX, message.velocityY, message.velocityZ); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7485/buggy-version/src.main.java.org.halvors.nuclearphysics.common.network.packet.PacketParticle.java", "BodyUseAPI": ["net.minecraft.world.World.spawnParticle(java.lang.String,double,double,double,double,double,double)"], "Fixed commit": "ad3d7a4184c8520e5b4362c14c135a2e4b3e1dac", "Url": "https://api.github.com/repos/halvors/Nuclear-Physics", "Date": "2018-05-09T16:48:35Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (files != null) { for (java.io.File eachFile : files) { if (eachFile.isFile()) { java.lang.String fileName = eachFile.getName(); if (hasJsonFileExtension(fileName)) { jsonFileCount++; processOfflineConfiguration(eachFile); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5268/buggy-version/PlatformEngine.src.main.java.com.cognizant.devops.platformengine.modules.offlinedataprocessing.OfflineDataProcessingExecutor.java", "BodyUseAPI": [], "Fixed commit": "a427266e1eeb921f03bf8daaec0ac009f0fd3284", "Url": "https://api.github.com/repos/CognizantOneDevOps/Insights", "Date": "2018-07-30T12:30:40Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((isValid()) && ((origin.length()) > 4)) { ignoreFocus = true; removeTextChangedListener(this); setText(((com.braintreepayments.cardform.view.CardEditText.digitDots) + (origin.subSequence(((origin.length()) - 4), origin.length())))); addSpans(getEditableText(), mCardType.getSpaceIndices()); addTextChangedListener(this); ignoreFocus = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9272/buggy-version/CardForm.src.main.java.com.braintreepayments.cardform.view.CardEditText.java", "BodyUseAPI": ["java.lang.String.length()", "com.braintreepayments.cardform.view.CardEditText.setText(java.lang.String)", "java.lang.String.subSequence(int,int)", "java.lang.String.length()"], "Fixed commit": "42796095453b77b10a8442de40f6d67ca8514cfc", "Url": "https://api.github.com/repos/chihung93/android-card-form", "Date": "2018-05-31T10:08:51Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (view == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5246/buggy-version/app.src.main.java.com.yzucse.android.firebasechat.StaticValue.java", "BodyUseAPI": [], "Fixed commit": "f9f14010d29beeced0d725fc8b529be774d72f4d", "Url": "https://api.github.com/repos/a348348333/FirebaseChat", "Date": "2018-05-30T15:35:58Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mTrip.getPlacesPoints()) != null) && (!(mTrip.getPlacesPoints().isEmpty()))) { for (com.guilhermefgl.rolling.model.Place breakPoint : mTrip.getPlacesPoints()) { addBreakPlace(breakPoint); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5785/buggy-version/app.src.main.java.com.guilhermefgl.rolling.view.details.TripDetailsFragment.java", "BodyUseAPI": ["com.guilhermefgl.rolling.model.Trip.getPlacesPoints()"], "Fixed commit": "fe3ff17830f54545ab10f04123137a2fd02bdd32", "Url": "https://api.github.com/repos/GuilhermeFGL/udacity-capstone", "Date": "2018-08-01T22:25:38Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state.stateType) == (State.StateType.CLASS)) { state = state.parent; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/540/buggy-version/src.main.java.org.yinwang.pysonar.Analyzer.java", "BodyUseAPI": [], "Fixed commit": "02b8b43ff09f9526a3d16120f43a57ff52057b9e", "Url": "https://api.github.com/repos/nabice/pysonar2", "Date": "2018-08-17T11:40:44Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((filter != null) && (!(filter.isEmpty()))) { messages = messageRepo.findByTag(filter); }else { messages = messageRepo.findAll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3668/buggy-version/src.main.java.com.example.sweater.GreetingController.java", "BodyUseAPI": ["com.example.sweater.repos.MessageRepo.findByTag(java.lang.String)"], "Fixed commit": "ecc7d4385d12fca062fe0f66fe2f2542264def61", "Url": "https://api.github.com/repos/devsambuca/webproject", "Date": "2018-08-09T04:57:48Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.valueOf(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((day.length()) == 1) day = \"0\" + day;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6355/buggy-version/Appointments.app.src.main.java.com.gtaandteam.android.wellcure.AppointmentActivity.java", "BodyUseAPI": [], "Fixed commit": "1603d52a7771a9a67184ccb61917a3da7358a148", "Url": "https://api.github.com/repos/glennlx/Appointment", "Date": "2018-08-06T18:02:30Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.valueOf(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((month_.length()) == 1) month_ = \"0\" + month_;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6355/buggy-version/Appointments.app.src.main.java.com.gtaandteam.android.wellcure.AppointmentActivity.java", "BodyUseAPI": [], "Fixed commit": "1603d52a7771a9a67184ccb61917a3da7358a148", "Url": "https://api.github.com/repos/glennlx/Appointment", "Date": "2018-08-06T18:02:30Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lkl.hole.facade.service.UserService.findByOpenId(java.lang.String)", "com.lkl.hole.web.controller.Blog.getUser()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentUser.getUid().equals(user.getUid())) { userVO.setAuthor(true); }else { userVO.setAuthor(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1968/buggy-version/hole-server.hole-api.src.main.java.com.lkl.hole.web.controller.BlogController.java", "BodyUseAPI": [], "Fixed commit": "7795f34d0187d22aed29946c27ce6ba25c7d1aa4", "Url": "https://api.github.com/repos/mstao/lkl-hole", "Date": "2018-06-18T03:12:36Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFinishing()) { broadcastQueueActivityClosed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3921/buggy-version/library.src.main.java.com.queue_it.androidsdk.QueueActivity.java", "BodyUseAPI": [], "Fixed commit": "51abae9c22763f18c6d81c4148a7f06b54c0e0fc", "Url": "https://api.github.com/repos/queueit/android-webui-sdk", "Date": "2018-10-16T18:58:11Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (token == (XContentParser.Token.START_ARRAY)) { throw new java.lang.IllegalArgumentException(((((((\"Malformed action/metadata line [\" + line) + \"], expected a simple value for field [\") + currentFieldName) + \"] but found [\") + token) + \"]\")); }else if ((token == (XContentParser.Token.START_OBJECT)) && (org.elasticsearch.action.bulk.BulkRequest.SOURCE.match(currentFieldName, parser.getDeprecationHandler()))) { fetchSourceContext = org.elasticsearch.search.fetch.subphase.FetchSourceContext.fromXContent(parser); }else if (token != (XContentParser.Token.VALUE_NULL)) { throw new java.lang.IllegalArgumentException(((((((\"Malformed action/metadata line [\" + line) + \"], expected a simple value for field [\") + currentFieldName) + \"] but found [\") + token) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9432/buggy-version/server.src.main.java.org.elasticsearch.action.bulk.BulkRequest.java", "BodyUseAPI": [], "Fixed commit": "2024751c8be2fb6a649fce616e746778565ff7b6", "Url": "https://api.github.com/repos/liketic/elasticsearch", "Date": "2018-04-03T03:33:34Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tinkerpop.blueprints.Vertex.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ts == null) { ts = java.lang.System.currentTimeMillis(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6712/buggy-version/changelog-system.src.main.java.com.gentics.mesh.changelog.changes.ChangeAddVersioning.java", "BodyUseAPI": [], "Fixed commit": "c72f95adceb699df1ffc4aa3edee272e2317e662", "Url": "https://api.github.com/repos/gentics/mesh", "Date": "2018-07-25T09:29:15Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((live.noxbox.state.ProfileStorage.profile) != null) { task.execute(live.noxbox.state.ProfileStorage.profile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8877/buggy-version/app.src.main.java.live.noxbox.state.ProfileStorage.java", "BodyUseAPI": [], "Fixed commit": "014724fe524d9c4f06ee0d5290f2b453bbabb29b", "Url": "https://api.github.com/repos/Lipnevich/noxbox", "Date": "2018-10-14T20:03:18Z"},
{"Line": "=>2130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mButtonBacklightOnTouchOnly) && (mButtonOn)) && (((mLastButtonActivityTime) + (mButtonTimeout)) < nextTimeout)) { nextTimeout = (mLastButtonActivityTime) + (mButtonTimeout); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4738/buggy-version/services.core.java.com.android.server.power.PowerManagerService.java", "BodyUseAPI": [], "Fixed commit": "dbd40e976fda2b3f013c91ee856bb4d9442ea6e1", "Url": "https://api.github.com/repos/FireHound/android_frameworks_base", "Date": "2018-01-13T14:21:43Z"},
{"Line": "=>2116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mButtonTimeout) != 0) && (now > ((mLastButtonActivityTime) + (mButtonTimeout)))) { mButtonsLight.setBrightness(0); mButtonOn = false; }else { if (((!(mButtonBacklightOnTouchOnly)) || (mButtonPressed)) && (!(mProximityPositive))) { mButtonsLight.setBrightness(buttonBrightness); mButtonPressed = false; if ((buttonBrightness != 0) && ((mButtonTimeout) != 0)) { mButtonOn = true; if ((now + (mButtonTimeout)) < nextTimeout) { nextTimeout = now + (mButtonTimeout); } }else if (((mButtonBacklightOnTouchOnly) && (mButtonOn)) && (((mLastButtonActivityTime) + (mButtonTimeout)) < nextTimeout)) { nextTimeout = (mLastButtonActivityTime) + (mButtonTimeout); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4738/buggy-version/services.core.java.com.android.server.power.PowerManagerService.java", "BodyUseAPI": [], "Fixed commit": "dbd40e976fda2b3f013c91ee856bb4d9442ea6e1", "Url": "https://api.github.com/repos/FireHound/android_frameworks_base", "Date": "2018-01-13T14:21:43Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["locs[j].distanceSquared(currentVP.getLocation())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (distance != 0) { value += 200 / (1 + distance); }else { value -= 200; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1681/buggy-version/aic2018.Collect.java", "BodyUseAPI": [], "Fixed commit": "4bcfc3b2dcaa59c25f353839871f148e3f566f8d", "Url": "https://api.github.com/repos/martindansc/AIC2018", "Date": "2018-07-18T11:38:22Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.endeavourhealth.transform.enterprise.transforms.MedicationOrder.getDispenseRequest()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((dispenseRequestComponent.getExpectedSupplyDuration()) != null) { org.endeavourhealth.transform.enterprise.transforms.Duration duration = dispenseRequestComponent.getExpectedSupplyDuration(); if (!(duration.getUnit().equalsIgnoreCase(\"days\"))) { throw new org.endeavourhealth.core.exceptions.TransformException((((\"Unsupported medication order duration type [\" + (duration.getUnit())) + \"] for \") + (fhir.getId()))); } int days = duration.getValue().intValue(); durationDays = java.lang.Integer.valueOf(days); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4779/buggy-version/src.main.java.org.endeavourhealth.transform.enterprise.transforms.MedicationOrderTransformer.java", "BodyUseAPI": ["MedicationOrder.MedicationOrderDispenseRequestComponent.getExpectedSupplyDuration()"], "Fixed commit": "4c385c6748509c4568cf9f6a74f0da6adabf58b0", "Url": "https://api.github.com/repos/endeavourhealth/Transforms", "Date": "2018-06-14T14:35:04Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["doc.getDocument().toObject(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((temp_user.getLatitude()) == null) || ((temp_user.getLongtitude()) == null)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1392/buggy-version/app.src.main.java.abass.com.firebasepushnotifications.Request.bloodDonationRequest.java", "BodyUseAPI": [], "Fixed commit": "3fbaad1056d00ad99fe9ebeaa08e629299ac9032", "Url": "https://api.github.com/repos/EngineerAhmedAbass/FirebasePushNotifications", "Date": "2018-04-19T14:06:55Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentMode) != 4) { timeLabel.setText(R.string.default_standard_time); }else if ((currentMode) == 4) { timeLabel.setText(R.string.default_average_time); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7090/buggy-version/app.src.main.java.uk.ac.mmu.project.doomsdayalgorithmtrainingapp.ScoreboardsMode.java", "BodyUseAPI": [], "Fixed commit": "d759a6878565b9b029f28624488970600ae42ec4", "Url": "https://api.github.com/repos/nkiernan/Y3-Project-DoomsdayAlgorithmTrainingApp", "Date": "2018-02-16T13:24:43Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (titleCount) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/403/buggy-version/src.parsers.BookHandler.java", "BodyUseAPI": [], "Fixed commit": "1b11afb9aa37fecd7fc18c518c3e85ec1877e4dd", "Url": "https://api.github.com/repos/hrhan/book", "Date": "2018-06-15T01:22:02Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((highestHeldNote.getTrack()) == (-1)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2792/buggy-version/notepatternanalyzer.src.notepatternanalyzer.NoteAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "fd059c523d2af9d6356854a3e93f47da1f51786c", "Url": "https://api.github.com/repos/dpham123/notepatternanalyzer", "Date": "2018-10-02T20:43:56Z"},
{"Line": "=>483", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((net.sf.freecol.common.io.FreeColDirectories.autosaveDirectory) == null) && ((net.sf.freecol.common.io.FreeColDirectories.saveDirectory) != null)) { synchronized(net.sf.freecol.common.io.FreeColDirectories.lock) { if (((net.sf.freecol.common.io.FreeColDirectories.autosaveDirectory) == null) && ((net.sf.freecol.common.io.FreeColDirectories.saveDirectory) != null)) { net.sf.freecol.common.io.FreeColDirectories.autosaveDirectory = new java.io.File(net.sf.freecol.common.io.FreeColDirectories.saveDirectory, net.sf.freecol.common.io.FreeColDirectories.AUTOSAVE_DIRECTORY); if (!(net.sf.freecol.common.io.FreeColDirectories.insistDirectory(net.sf.freecol.common.io.FreeColDirectories.autosaveDirectory))) net.sf.freecol.common.io.FreeColDirectories.autosaveDirectory = null; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8326/buggy-version/src.net.sf.freecol.common.io.FreeColDirectories.java", "BodyUseAPI": [], "Fixed commit": "48523ba63a549a9ff9c24175a912df314d998513", "Url": "https://api.github.com/repos/wpetty1/FreeCol", "Date": "2018-05-16T02:53:27Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (utxoPool.contains(utxo)) { if ((utxoPool.getTxOutput(utxo)) != null) { Transaction.Output tOutput = utxoPool.getTxOutput(utxo); if ((tOutput.address) != null) { java.security.PublicKey publicKey = tOutput.address; if ((tx.getRawDataToSign(i)) != null) { byte[] message = tx.getRawDataToSign(i); byte[] signature = txInput.signature; if (((((publicKey != null) && (message != null)) && (signature != null)) && ((message.length) > 0)) && ((signature.length) > 0)) { isValid = Crypto.verifySignature(publicKey, message, signature); if (!isValid) { return false; } }else { return false; } }else { return false; } }else { return false; } }else { return false; } }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7173/buggy-version/crypto.week1.src.main.java.TxHandler.java", "BodyUseAPI": ["UTXOPool.getTxOutput(UTXO)", "UTXOPool.getTxOutput(UTXO)"], "Fixed commit": "1d68695f5e81ff564b19886a505230846134dffb", "Url": "https://api.github.com/repos/Topherian/Coursera", "Date": "2018-02-26T20:42:22Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((plugins_kill.contains(type.getDBColumn())) || (plugins_assist.contains(type.getDBColumn()))) || (plugins_cash.contains(type.getDBColumn()))) { wherepart = (id != null) ? ((\" AND ID=\" + id) + \" AND mh_Mobs.PLUGIN_ID=\") + (mobPlugin.getId()) : \" AND mh_Mobs.PLUGIN_ID=\" + (mobPlugin.getId()); }else { wherepart = (id != null) ? ((\" AND ID=\" + id) + \" and mh_Mobs.MOB_ID=\") + (plugin.getExtendedMobManager().getMobIdFromMobTypeAndPluginID(mobType, mobPlugin)) : \" AND mh_Mobs.MOB_ID=\" + (plugin.getExtendedMobManager().getMobIdFromMobTypeAndPluginID(mobType, mobPlugin)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7866/buggy-version/src.one.lindegaard.MobHunting.storage.MySQLDataStore.java", "BodyUseAPI": [], "Fixed commit": "a9148a8d1dff424335a13b924090c9023133a4de", "Url": "https://api.github.com/repos/Rocologo/MobHunting", "Date": "2018-07-31T15:59:53Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (quadratic) { quadTrias = quadraticTriaConverter.getTriangles(); if ((quadTrias.size()) != (trias.size())) { throw new java.lang.RuntimeException((((\"QuadraticTriaConverter number of triangles does not match: \" + (quadTrias.size())) + \" != \") + (trias.size()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2200/buggy-version/amibe.src.org.jcae.mesh.xmldata.Amibe2UNV.java", "BodyUseAPI": [], "Fixed commit": "87778bbfcb41ff8e27b0880ce20f5d30fd14f249", "Url": "https://api.github.com/repos/jeromerobert/jCAE", "Date": "2018-05-30T10:41:55Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Collections.singleton(\"default\").equals(requestScopes)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1952/buggy-version/src.main.java.it.smartcommunitylab.aac.oauth.AACOAuth2RequestValidator.java", "BodyUseAPI": [], "Fixed commit": "37d49267f800b5e4534ef352a669521f303ca5ff", "Url": "https://api.github.com/repos/smartcommunitylab/AAC", "Date": "2018-06-11T14:43:07Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.bitmap) != null) { moveViewBasedHighlight(this.highlightLocX, this.highlightLocY, ((this.highlightLocX) + (this.bitmap.getWidth())), ((this.highlightLocY) + (this.bitmap.getHeight()))); if ((Build.VERSION.SDK_INT) < 16) { this.getViewTreeObserver().removeGlobalOnLayoutListener(this); }else { this.getViewTreeObserver().removeOnGlobalLayoutListener(this); } invalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4944/buggy-version/showcase.src.main.java.com.tokopedia.showcase.ShowCaseLayout.java", "BodyUseAPI": [], "Fixed commit": "282df393f0cc5bc6a73d1d93de10af7af905588f", "Url": "https://api.github.com/repos/tokopedia/ShowCase", "Date": "2018-09-17T07:47:51Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.weebly.opus1269.clipman.ui.base.BaseFragment.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (activity == null) { final android.view.View view = getView(); if (view == null) { return null; }else { return view.findViewById(id); } }else { return activity.findViewById(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/158/buggy-version/app.src.main.java.com.weebly.opus1269.clipman.ui.base.BaseFragment.java", "BodyUseAPI": ["android.app.Activity.findViewById(int)"], "Fixed commit": "558ed65f56355750b5eb3a93ec2a9f6cad4c6be4", "Url": "https://api.github.com/repos/Pushy-Clipboard/pushy-android", "Date": "2018-01-19T05:54:52Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getBlockState(pos.down())", "net.minecraft.block.state.IBlockState.getBlock()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(soilBlockState.getBlock().canSustainPlant(soilBlockState, world, pos.down(), EnumFacing.UP, crops))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9077/buggy-version/src.main.java.com.pam.harvestcraft.addons.RightClickHarvesting.java", "BodyUseAPI": [], "Fixed commit": "597a78bd6a64d938e28c106101469c88ba1e0e2a", "Url": "https://api.github.com/repos/MatrexsVigil/harvestcraft", "Date": "2018-08-24T16:16:00Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (num1 == 0) return num2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/830/buggy-version/Others.GCD.java", "BodyUseAPI": [], "Fixed commit": "161791d4a5759878f53e4ef2e397502d621a8e81", "Url": "https://api.github.com/repos/TheAlgorithms/Java", "Date": "2018-07-25T15:07:34Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.function.equals(\"Subtract\")) symbol = \"-\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2300/buggy-version/Calculator.src.Calculator.java", "BodyUseAPI": [], "Fixed commit": "38300640ce020d8bbc4e1186d61cbfbe885ad3ba", "Url": "https://api.github.com/repos/Sir-Teo/JavaCalculator", "Date": "2018-05-19T07:02:26Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.function.equals(\"Divide\")) symbol = \"/\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2300/buggy-version/Calculator.src.Calculator.java", "BodyUseAPI": [], "Fixed commit": "38300640ce020d8bbc4e1186d61cbfbe885ad3ba", "Url": "https://api.github.com/repos/Sir-Teo/JavaCalculator", "Date": "2018-05-19T07:02:26Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.function.equals(\"Add\")) symbol = \"+\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2300/buggy-version/Calculator.src.Calculator.java", "BodyUseAPI": [], "Fixed commit": "38300640ce020d8bbc4e1186d61cbfbe885ad3ba", "Url": "https://api.github.com/repos/Sir-Teo/JavaCalculator", "Date": "2018-05-19T07:02:26Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.function.equals(\"Multiply\")) symbol = \"x\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2300/buggy-version/Calculator.src.Calculator.java", "BodyUseAPI": [], "Fixed commit": "38300640ce020d8bbc4e1186d61cbfbe885ad3ba", "Url": "https://api.github.com/repos/Sir-Teo/JavaCalculator", "Date": "2018-05-19T07:02:26Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (uniqueOwners.containsKey(contract.getAcceptorID())) { net.nikr.eve.jeveasset.io.esi.EsiContractItemsGetter.contracts.get(contract.getAcceptorID()).add(contract); net.nikr.eve.jeveasset.io.esi.EsiContractItemsGetter.SIZE.getAndIncrement(); }else if (uniqueOwners.containsKey(contract.getIssuerCorpID())) { net.nikr.eve.jeveasset.io.esi.EsiContractItemsGetter.contracts.get(contract.getIssuerCorpID()).add(contract); net.nikr.eve.jeveasset.io.esi.EsiContractItemsGetter.SIZE.getAndIncrement(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1277/buggy-version/src.main.java.net.nikr.eve.jeveasset.io.esi.EsiContractItemsGetter.java", "BodyUseAPI": ["net.nikr.eve.jeveasset.data.api.my.MyContract.getIssuerCorpID()", "java.util.Map<java.lang.Long, java.util.List<net.nikr.eve.jeveasset.data.api.my.MyContract>>.get(contract.getAcceptorID())", "java.util.Map<java.lang.Long, java.util.List<net.nikr.eve.jeveasset.data.api.my.MyContract>>.get(contract.getIssuerCorpID())", "java.util.Map<java.lang.Long, net.nikr.eve.jeveasset.data.api.accounts.EsiOwner>.containsKey(contract.getIssuerCorpID())", "net.nikr.eve.jeveasset.data.api.my.MyContract.getAcceptorID()", "net.nikr.eve.jeveasset.io.esi.EsiContractItemsGetter.contracts.get(contract.getAcceptorID()).add(net.nikr.eve.jeveasset.data.api.my.MyContract)", "net.nikr.eve.jeveasset.data.api.my.MyContract.getIssuerCorpID()", "net.nikr.eve.jeveasset.io.esi.EsiContractItemsGetter.contracts.get(contract.getIssuerCorpID()).add(net.nikr.eve.jeveasset.data.api.my.MyContract)"], "Fixed commit": "ebf58890028e3b591903f898428435cb52c11626", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2018-05-26T17:46:29Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (conversationTitle != null) { if (!(conversationTitle.matches(\"[\\\\w*]*\"))) { request.setAttribute(\"error\", \"Please enter only letters and numbers.\"); request.getRequestDispatcher(\"/WEB-INF/view/conversations.jsp\").forward(request, response); return; } if (conversationStore.isTitleTaken(conversationTitle)) { response.sendRedirect((\"/chat/\" + conversationTitle)); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7573/buggy-version/src.main.java.codeu.controller.ConversationServlet.java", "BodyUseAPI": ["codeu.model.store.basic.ConversationStore.isTitleTaken(java.lang.String)", "javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)", "java.lang.String.matches(java.lang.String)"], "Fixed commit": "46becb64d38863a48dc306124e838513f21d1f02", "Url": "https://api.github.com/repos/AracelizGomes/CodeU", "Date": "2018-07-24T15:15:19Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((currentRdfClass.getBaseType()) != currentRdfClass) { currentRdfClass = currentRdfClass.getBaseType(); }else { currentRdfClass = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8320/buggy-version/odata2sparql.v2.src.main.java.com.inova8.odata2sparql.RdfModelToMetadata.RdfModelToMetadata.java", "BodyUseAPI": [], "Fixed commit": "def89183ba7e5bfb43c20e1e8bf2296733666547", "Url": "https://api.github.com/repos/peterjohnlawrence/com.inova8.odata2sparql.v2", "Date": "2018-01-08T20:46:01Z"},
{"Line": "=>1147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((u) != null) { users.remove(u); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/713/buggy-version/IT_Projekt_SS18.src.de.hdm.softwarePraktikum.server.ContactAdministrationImpl.java", "BodyUseAPI": [], "Fixed commit": "ccc37e91230ba7a614203e6f2c2908619f832a3d", "Url": "https://api.github.com/repos/vincent-wengert/IT_Projekt_SS18_Gruppe_6", "Date": "2018-06-08T10:53:17Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == map) { printStream.println(\"The Map is null.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2612/buggy-version/jbake-core.src.main.java.org.jbake.app.DebugUtil.java", "BodyUseAPI": [], "Fixed commit": "fd6e6b95efc45e343875e5a18aa8cab363df393c", "Url": "https://api.github.com/repos/OndraZizka/jbake", "Date": "2018-10-30T04:34:10Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang.StringUtils.isBlank(label))) { printStream.println((label + \":\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2612/buggy-version/jbake-core.src.main.java.org.jbake.app.DebugUtil.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "fd6e6b95efc45e343875e5a18aa8cab363df393c", "Url": "https://api.github.com/repos/OndraZizka/jbake", "Date": "2018-10-30T04:34:10Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == printStream) { printStream = java.lang.System.out; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2612/buggy-version/jbake-core.src.main.java.org.jbake.app.DebugUtil.java", "BodyUseAPI": [], "Fixed commit": "fd6e6b95efc45e343875e5a18aa8cab363df393c", "Url": "https://api.github.com/repos/OndraZizka/jbake", "Date": "2018-10-30T04:34:10Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jbake.parser.MarkupEngine.parseHeaderBlock(org.jbake.parser.ParserContext)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (headersMap != null) applyHeadersToDocument(headersMap, context.getDocumentModel());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2612/buggy-version/jbake-core.src.main.java.org.jbake.parser.MarkupEngine.java", "BodyUseAPI": ["org.jbake.parser.MarkupEngine.applyHeadersToDocument(java.util.Map<java.lang.String, java.lang.String>,context.getDocumentModel())"], "Fixed commit": "fd6e6b95efc45e343875e5a18aa8cab363df393c", "Url": "https://api.github.com/repos/OndraZizka/jbake", "Date": "2018-10-30T04:34:10Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((denominator) < 0) { denominator *= -1; numerator *= -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9779/buggy-version/RationalNumber.java", "BodyUseAPI": [], "Fixed commit": "6917924caae172d942ebe0cbf3d140f886592b91", "Url": "https://api.github.com/repos/laurenp34/MKS21X-Numbers", "Date": "2018-10-18T01:48:45Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.upb.sede.composition.graphs.DataFlowAnalysis.getConsumingersOfField(de.upb.sede.composition.graphs.FieldType)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (consumers.isEmpty()) { de.upb.sede.composition.graphs.nodes.BaseNode oldProducer = leftsideField.getProducer(); if (oldProducer instanceof de.upb.sede.composition.graphs.nodes.InstructionNode) { de.upb.sede.composition.graphs.nodes.InstructionNode oldInst = ((de.upb.sede.composition.graphs.nodes.InstructionNode) (oldProducer)); if ((oldInst.isAssignedLeftSideFieldname()) && (oldInst.getLeftSideFieldname().equals(leftsideFieldname))) { oldInst.unsetLeftSideField(); } if (oldInst.getContext().equals(leftsideFieldname)) { nodeConsumesField(instNode, leftsideField); } } }else { for (de.upb.sede.composition.graphs.nodes.BaseNode consumer : consumers) { if (consumer == instNode) { continue; } if ((getAssignedExec(consumer)) != (getAssignedExec(instNode))) { continue; } getAssignedExec(instNode).getGraph().connectNodes(consumer, instNode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4819/buggy-version/src.main.java.de.upb.sede.composition.graphs.DataFlowAnalysis.java", "BodyUseAPI": [], "Fixed commit": "98a74d120bac9f0a96db7d2e323c6ed6cb9d8ec7", "Url": "https://api.github.com/repos/fmohr/SEDE", "Date": "2018-04-30T06:17:35Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (configuration.containsKey(\"paramtypes\")) { return ((java.util.List<java.lang.String>) (configuration.get(\"paramtypes\"))); }else { return java.util.Collections.EMPTY_LIST; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4819/buggy-version/src.main.java.de.upb.sede.config.ClassesConfig.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "98a74d120bac9f0a96db7d2e323c6ed6cb9d8ec7", "Url": "https://api.github.com/repos/fmohr/SEDE", "Date": "2018-04-30T06:17:35Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vendorList) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5914/buggy-version/Android.app.src.main.java.com.muazhakanemran.myapplication.courier_user_activities.CourierShowVendorsActivity.java", "BodyUseAPI": [], "Fixed commit": "3774cd87be891f62808204d38e9b20ef40f0e9d9", "Url": "https://api.github.com/repos/muazekici/muazHakanEmran-Android", "Date": "2018-02-18T11:23:29Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (time != null) { return time.format(java.time.format.DateTimeFormatter.ISO_ZONED_DATE_TIME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6755/buggy-version/org.jtool.changetracker.core.src.org.jtool.changetracker.operation.ChangeOperation.java", "BodyUseAPI": ["java.time.ZonedDateTime.format(java.time.format.DateTimeFormatter)"], "Fixed commit": "8b3b61e1659ddd8d2de5c87e07903fab1cea9de2", "Url": "https://api.github.com/repos/katsuhisamaruyama/ChangeTracker2", "Date": "2017-09-26T14:58:45Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (time != null) { return time.format(java.time.format.DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm:ss.SSS\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6755/buggy-version/org.jtool.changetracker.core.src.org.jtool.changetracker.operation.ChangeOperation.java", "BodyUseAPI": ["java.time.ZonedDateTime.format(java.time.format.DateTimeFormatter)"], "Fixed commit": "8b3b61e1659ddd8d2de5c87e07903fab1cea9de2", "Url": "https://api.github.com/repos/katsuhisamaruyama/ChangeTracker2", "Date": "2017-09-26T14:58:45Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["site.fish119.adminss.repository.SysDepartmentRepository.findOne(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (dp != null) { if ((dp.getParent()) != null) { dp.getParent().getChildren().remove(dp); departmentRepository.saveAndFlush(dp.getParent()); dp.setParent(null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5801/buggy-version/src.main.java.site.fish119.adminss.service.setting.DepartService.java", "BodyUseAPI": ["site.fish119.adminss.domain.sys.Department.getParent()", "site.fish119.adminss.domain.sys.Department.getParent()", "dp.getParent().getChildren()", "site.fish119.adminss.repository.SysDepartmentRepository.saveAndFlush(dp.getParent())", "site.fish119.adminss.domain.sys.Department.getParent()", "dp.getParent().getChildren().remove(site.fish119.adminss.domain.sys.Department)", "site.fish119.adminss.domain.sys.Department.setParent(<nulltype>)"], "Fixed commit": "1fe21364c8247eed52d5145b20c0d038c66f925e", "Url": "https://api.github.com/repos/fish119/adminSS", "Date": "2018-01-22T15:51:25Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (login == null) { login = pac4jPrincipal.getProfile().getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2952/buggy-version/src.main.java.org.ohdsi.webapi.shiro.UpdateAccessTokenFilter.java", "BodyUseAPI": [], "Fixed commit": "9e4a6c546e44af895099d856250eb26f8a38912b", "Url": "https://api.github.com/repos/solventrix/WebAPI", "Date": "2018-06-05T15:51:53Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrentPetUri) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4773/buggy-version/app.src.main.java.com.example.android.pets.EditorActivity.java", "BodyUseAPI": [], "Fixed commit": "1ff20adbd4d3e827326acc761073864049adb5f2", "Url": "https://api.github.com/repos/gorelikova1993/ud845-Pets", "Date": "2018-08-27T15:07:14Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.easydarwin.easyplayer.fragments.PlayFragment.2.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (activity instanceof org.easydarwin.easyplayer.PlayActivity) { java.lang.String msg = resultData.getString(\"event-msg\"); if (!(android.text.TextUtils.isEmpty(msg))) { ((org.easydarwin.easyplayer.PlayActivity) (activity)).onEvent(this, errorcode, msg); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6305/buggy-version/EasyPlayer.src.main.java.org.easydarwin.easyplayer.fragments.PlayFragment.java", "BodyUseAPI": [], "Fixed commit": "0ba2de6c4cbf0ce1108cee2a2f5c28f9ef4d5434", "Url": "https://api.github.com/repos/EasyDSS/EasyPlayer-RTMP-Android", "Date": "2018-05-05T09:34:27Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (keepexp) { event.setDroppedExp(exp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5184/buggy-version/src.com.imyvm.spigot.plugin.main.deathprotect.deathloss.java", "BodyUseAPI": [], "Fixed commit": "18a8a1df1dae48280296b67124f2f2449fff81db", "Url": "https://api.github.com/repos/ImyvmCircle/Deathmoney", "Date": "2018-06-16T07:43:56Z"},
{"Line": "=>673", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mmz.specs.application.core.client.service.ClientBackgroundService.getInstance().isConnected()) { if ((currentUser) != null) { transactional.rollbackTransaction(); }else { javax.swing.JOptionPane.showMessageDialog(c, (\"\\u041d\\u0435\\u0432\\u043e\\u0437\\u043c\\u043e\\u0436\\u043d\\u043e \\u0437\\u0430\\u043a\\u0440\\u044b\\u0442\\u044c \\u043e\\u043a\\u043d\\u043e, \\u043f\\u043e\\u043a\\u0430 \\u0441\\u0443\\u0449\\u0435\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442 \\u0442\\u0440\\u0430\\u043d\\u0437\\u0430\\u043a\\u0446\\u0438\\u043e\\u043d\\u043d\\u0430\\u044f \\u0432\\u043a\\u043b\\u0430\\u0434\\u043a\\u0430\\n\" + \"\u0412\u043e\u0439\u0434\u0438\u0442\u0435 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0443, \u0447\u0442\u043e\u0431\u044b \u0437\u0430\u043a\u0440\u044b\u0442\u044c \u0435\u0451.\"), \"\u041e\u0448\u0438\u0431\u043a\u0430\", javax.swing.JOptionPane.WARNING_MESSAGE); } }else { transactional.rollbackTransaction(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/347/buggy-version/src.main.java.com.mmz.specs.application.gui.client.ClientMainWindow.java", "BodyUseAPI": [], "Fixed commit": "99d37229aa01295dfb8400281eced0bafb09888a", "Url": "https://api.github.com/repos/benchdoos/Specs", "Date": "2018-06-30T09:31:17Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (url.startsWith(\"\\u202a\")) url = url.substring(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2684/buggy-version/src.main.java.modulebot.music.Play.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "5c077a0eda3c8a16e6db78635c3d8868282fde30", "Url": "https://api.github.com/repos/ThePhisics101/ModuleBot", "Date": "2018-07-11T20:28:23Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((res.length()) < 8) { res = res.substring(0, res.length()); }else { res = res.substring(0, 8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8160/buggy-version/src.StringUtils.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)"], "Fixed commit": "ce81c4e38979af8be431e039a0b9e43c09b87015", "Url": "https://api.github.com/repos/Purdue-CS193/lab-3-BoSendiPurdue", "Date": "2018-10-02T21:30:47Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastPosition) != (firstPosition)) return ((lastPosition) + 1) - (firstPosition);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5915/buggy-version/src.a03.Autocomplete.java", "BodyUseAPI": [], "Fixed commit": "eec58b0a46ea6a3607067ff873bd01e4f2062a64", "Url": "https://api.github.com/repos/srosy/2420_A03_AutoComplete", "Date": "2018-10-04T02:55:19Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parent) != null) { is = parent.getResourceAsStream(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1168/buggy-version/src.main.java.org.jboss.ws.common.utils.DelegateClassLoader.java", "BodyUseAPI": [], "Fixed commit": "38187c83ccd3f9fedbe810d918272a37d679010d", "Url": "https://api.github.com/repos/oncethor/jbossws-common", "Date": "2018-02-15T18:08:53Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["responseHeaders.getHeader(\"Content-Type\").getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (contentTypeHeaderValue.contains(\"; \")) { contentTypeMimeType = contentTypeHeaderValue.substring(0, contentTypeHeaderValue.indexOf(\"; \")); java.lang.String contentTypeCharsetString = contentTypeHeaderValue.substring(((contentTypeHeaderValue.indexOf(\"; \")) + 2)); if (contentTypeCharsetString.toLowerCase().contains(\"charset=\")) { contentTypeCharset = java.nio.charset.Charset.forName(contentTypeHeaderValue.substring(((contentTypeHeaderValue.indexOf(\"; \")) + 10))); } }else { contentTypeMimeType = contentTypeHeaderValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9751/buggy-version/src.main.java.ch.viascom.groundwork.foxhttp.FoxHttpResponse.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.indexOf(java.lang.String)", "java.nio.charset.Charset.forName(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "be4a4e3a42b79f2b3937dadd9d907cd20697b584", "Url": "https://api.github.com/repos/Viascom/FoxHttp", "Date": "2018-05-22T13:18:04Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.springframework.util.StringUtils.isEmpty(end))) { param.put(\"endDate\", end); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6977/buggy-version/preparation.src.main.java.finley.gmair.controller.MachineController.java", "BodyUseAPI": ["com.alibaba.fastjson.JSONObject.put(java.lang.String,java.lang.String)"], "Fixed commit": "ebdcafeff46bd86e1e8d3fe3b8b833aaca81b850", "Url": "https://api.github.com/repos/sunshinezxf/Gmair", "Date": "2018-10-08T09:03:25Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.springframework.util.StringUtils.isEmpty(qrcode))) { param.put(\"codeValue\", qrcode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6977/buggy-version/preparation.src.main.java.finley.gmair.controller.MachineController.java", "BodyUseAPI": ["com.alibaba.fastjson.JSONObject.put(java.lang.String,java.lang.String)"], "Fixed commit": "ebdcafeff46bd86e1e8d3fe3b8b833aaca81b850", "Url": "https://api.github.com/repos/sunshinezxf/Gmair", "Date": "2018-10-08T09:03:25Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.springframework.util.StringUtils.isEmpty(machineId))) { param.put(\"machineId\", machineId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6977/buggy-version/preparation.src.main.java.finley.gmair.controller.MachineController.java", "BodyUseAPI": ["com.alibaba.fastjson.JSONObject.put(java.lang.String,java.lang.String)"], "Fixed commit": "ebdcafeff46bd86e1e8d3fe3b8b833aaca81b850", "Url": "https://api.github.com/repos/sunshinezxf/Gmair", "Date": "2018-10-08T09:03:25Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.JSONObject.parseObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (jsonObject == null) { com.jingdianbao.service.impl.DmpService.LOGGER.error(result); return dmpResult; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2421/buggy-version/src.main.java.com.jingdianbao.service.impl.DmpService.java", "BodyUseAPI": [], "Fixed commit": "f1b3fb30a267e667414c4a64686ecd70561a8b90", "Url": "https://api.github.com/repos/meixi7891/jdcccc", "Date": "2018-04-20T09:44:20Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((g.getChatMessages()) == null) g.setChatMessages(new java.util.ArrayList<com.example.sharedcode.model.ChatMessage>());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8419/buggy-version/app.src.main.java.e.mboyd6.tickettoride.Facades.Lobby.java", "BodyUseAPI": ["com.example.sharedcode.model.Game.setChatMessages(java.util.ArrayList<com.example.sharedcode.model.ChatMessage>)"], "Fixed commit": "8204944c6002ea7c922e4a6ed7f3b5734f61d4ec", "Url": "https://api.github.com/repos/michaeldboyd/ticket-to-ride", "Date": "2018-03-01T03:18:03Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(authToken.equals(\"\"))) Model.ServerModel.instance().notifyObserversForUpdate(loginClientCommand); else Communication.SocketManager.instance().sendBySocketId(loginClientCommand, socketID);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8419/buggy-version/server.src.main.java.Facades.Login.java", "BodyUseAPI": [], "Fixed commit": "8204944c6002ea7c922e4a6ed7f3b5734f61d4ec", "Url": "https://api.github.com/repos/michaeldboyd/ticket-to-ride", "Date": "2018-03-01T03:18:03Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(authToken.equals(\"\"))) Model.ServerModel.instance().notifyObserversForUpdate(registerClientCommand); else Communication.SocketManager.instance().sendBySocketId(registerClientCommand, socketID);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8419/buggy-version/server.src.main.java.Facades.Login.java", "BodyUseAPI": [], "Fixed commit": "8204944c6002ea7c922e4a6ed7f3b5734f61d4ec", "Url": "https://api.github.com/repos/michaeldboyd/ticket-to-ride", "Date": "2018-03-01T03:18:03Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isFirstLayout)) { dragView.layout(0, dragView.getTop(), dragView.getRight(), ((dragView.getTop()) + (dragView.getMeasuredHeight()))); fixedView.layout(0, fixedView.getTop(), fixedView.getRight(), ((fixedView.getTop()) + (fixedView.getMeasuredHeight()))); }else { dragView.layout(0, maxTop, dragView.getMeasuredWidth(), ((maxTop) + (dragView.getMeasuredHeight()))); fixedView.layout(0, getMeasuredHeight(), fixedView.getMeasuredWidth(), ((getMeasuredHeight()) + (fixedView.getMeasuredHeight()))); isFirstLayout = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3640/buggy-version/DragPanel.src.main.java.com.lxj.dragpanel.DragPanel.java", "BodyUseAPI": [], "Fixed commit": "eae002bb8aa1eb5cf433063a2235872a811e9fae", "Url": "https://api.github.com/repos/li-PATHojun/DragPanel", "Date": "2018-08-22T07:47:44Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jeedsoft.marialocal.MariaLocalStarter.parse(java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((model.createDatabases) != null) { java.lang.System.out.println((\"createDatabases: \" + (com.jeedsoft.marialocal.util.StringUtil.join(model.createDatabases)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2784/buggy-version/src.main.java.com.jeedsoft.marialocal.MariaLocalStarter.java", "BodyUseAPI": ["com.jeedsoft.marialocal.util.StringUtil.join(java.lang.String[])", "java.io.PrintStream.println((\"createDatabases: \" + (com.jeedsoft.marialocal.util.StringUtil.join(model.createDatabases))))"], "Fixed commit": "2cce252977bfcd0bfde90906c416bff8d0709219", "Url": "https://api.github.com/repos/MingleiLee/mariadb4j-local-driver", "Date": "2018-07-10T10:18:42Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isGameOver()) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1237/buggy-version/src.tictactoe.TicTacToeGame.java", "BodyUseAPI": [], "Fixed commit": "e2b64c811b1d4a45a663115c88e463ed4e78fcc8", "Url": "https://api.github.com/repos/ThanaphonKeawjam/tictactoe", "Date": "2018-08-16T09:33:16Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isBds) { return asfInAppPurchaseInteractor.parseTransaction(uri); }else { return bdsInAppPurchaseInteractor.parseTransaction(uri); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2140/buggy-version/app.src.main.java.com.asfoundation.wallet.ui.iab.InAppPurchaseInteractor.java", "BodyUseAPI": [], "Fixed commit": "f5ab5f7be775b20e5c53b651e508c3ca51a13a47", "Url": "https://api.github.com/repos/Aptoide/appcoins-wallet-android", "Date": "2018-09-20T08:34:16Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(workoutType.getText().toString().equals(\"\"))) { cardView = makeCard(workoutType, date, duration); linearLayout.addView(cardView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4606/buggy-version/app.src.main.java.com.example.ivo.gymbuddy.SeeWorkouts.java", "BodyUseAPI": ["com.example.ivo.gymbuddy.SeeWorkouts.makeCard(android.widget.TextView,android.widget.TextView,android.widget.TextView)"], "Fixed commit": "71ca0f4607843bd27cb7b2f52052ea24a830b5c4", "Url": "https://api.github.com/repos/IvayloAsenov/GymBuddy", "Date": "2018-08-02T02:43:48Z"},
{"Line": "=>3668", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stmt.getItems().size()) > 0) { com.alibaba.druid.sql.dialect.mysql.parser.SQLAlterTableRename item = new com.alibaba.druid.sql.dialect.mysql.parser.SQLAlterTableRename(); com.alibaba.druid.sql.dialect.mysql.parser.SQLName to = this.exprParser.name(); item.setTo(to); stmt.addItem(item); }else { com.alibaba.druid.sql.dialect.mysql.parser.MySqlRenameTableStatement renameStmt = new com.alibaba.druid.sql.dialect.mysql.parser.MySqlRenameTableStatement(); com.alibaba.druid.sql.dialect.mysql.parser.MySqlRenameTableStatement.Item item = new com.alibaba.druid.sql.dialect.mysql.parser.MySqlRenameTableStatement.Item(); item.setName(((com.alibaba.druid.sql.dialect.mysql.parser.SQLName) (stmt.getTableSource().getExpr()))); item.setTo(this.exprParser.name()); renameStmt.addItem(item); return renameStmt; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8212/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.java", "BodyUseAPI": ["MySqlRenameTableStatement.Item.setName(((com.alibaba.druid.sql.dialect.mysql.parser.SQLName) (stmt.getTableSource().getExpr())))", "stmt.getTableSource().getExpr()", "com.alibaba.druid.sql.dialect.mysql.parser.SQLAlterTableStatement.addItem(com.alibaba.druid.sql.dialect.mysql.parser.SQLAlterTableRename)", "com.alibaba.druid.sql.dialect.mysql.parser.SQLAlterTableStatement.getTableSource()"], "Fixed commit": "40e66210b5d196f5f7eca4a48fd0063d6b6454ff", "Url": "https://api.github.com/repos/lihengming/druid", "Date": "2018-02-09T09:14:35Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (anuncio != null) { titulo.setText(anuncio.getTitulo()); dataCriacao.setText(anuncio.getDataCriacao()); if ((anuncio.getDataConclusao()) == null) { dataConclusao.setText(\"ATIVO\"); }else { dataConclusao.setText(anuncio.getDataConclusao()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8710/buggy-version/app.src.main.java.pt.ipleiria.estg.tesp.psi.projsi.sistematrocas.projetosi_android_1718.DetalhesAnuncioActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(anuncio.getTitulo())", "pt.ipleiria.estg.tesp.psi.projsi.sistematrocas.projetosi_android_1718.modelos.Anuncio.getDataCriacao()", "pt.ipleiria.estg.tesp.psi.projsi.sistematrocas.projetosi_android_1718.modelos.Anuncio.getDataConclusao()", "pt.ipleiria.estg.tesp.psi.projsi.sistematrocas.projetosi_android_1718.modelos.Anuncio.getTitulo()", "pt.ipleiria.estg.tesp.psi.projsi.sistematrocas.projetosi_android_1718.modelos.Anuncio.getDataConclusao()", "android.widget.TextView.setText(anuncio.getDataConclusao())", "android.widget.TextView.setText(anuncio.getDataCriacao())"], "Fixed commit": "09676fc20183467330c23c5ccfc2ee7395fdb412", "Url": "https://api.github.com/repos/PSI17JoaoP/ProjetoSI_Android_1718", "Date": "2018-01-05T10:42:33Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event.isCancelled()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7371/buggy-version/src.main.java.net.sacredlabyrinth.phaed.simpleclans.listeners.SCEntityListener.java", "BodyUseAPI": [], "Fixed commit": "36a7b766c5ec3c550d6c1b4274cb015928f428a6", "Url": "https://api.github.com/repos/montlikadani/SimpleClans", "Date": "2018-03-04T18:56:40Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(IsInitialized())) { initHandAll(); initTrainBank(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5910/buggy-version/app.src.main.java.ticket.com.tickettoridegames.utility.model.Game.java", "BodyUseAPI": [], "Fixed commit": "2a98e2fe57d2ce7c95fe26155f255eb7c2c8745e", "Url": "https://api.github.com/repos/DavidROwen/TicketToRideGame", "Date": "2018-07-24T04:38:31Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(IsInitialized())) { initTurnOrder(); initColors(); initTrainCardDeck(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5910/buggy-version/app.src.main.java.ticket.com.tickettoridegames.utility.model.Game.java", "BodyUseAPI": [], "Fixed commit": "2a98e2fe57d2ce7c95fe26155f255eb7c2c8745e", "Url": "https://api.github.com/repos/DavidROwen/TicketToRideGame", "Date": "2018-07-24T04:38:31Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!hasConstructor) { requestor.acceptConstructor(Flags.AccPublic, innerType.getTypeQualifiedName().toCharArray(), (-1), null, CharOperation.NO_CHAR_CHAR, CharOperation.NO_CHAR_CHAR, innerType.getFlags(), innerType.getPackageFragment().getElementName().toCharArray(), extraFlags, innerType.getPath().toString(), org.codehaus.groovy.eclipse.codeassist.ProposalUtils.getTypeAccessibility(innerType)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3308/buggy-version/ide.org.codehaus.groovy.eclipse.codeassist.completion.src.org.codehaus.groovy.eclipse.codeassist.processors.ConstructorCompletionProcessor.java", "BodyUseAPI": [], "Fixed commit": "bdf30e1913f1c40636e4525174e0a8dd1bafed52", "Url": "https://api.github.com/repos/groovy/groovy-eclipse", "Date": "2018-02-12T18:18:36Z"},
{"Line": "=>686", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.osmand.data.changeset.OsmAndLiveReports.isEmpty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (eregion) { rankingNum = getNumberReport(OsmAndLiveReportType.REGION_RANKING_RANGE).intValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2635/buggy-version/java-tools.OsmAndServerUtilities.src.main.java.net.osmand.data.changeset.OsmAndLiveReports.java", "BodyUseAPI": [], "Fixed commit": "ac04376ae4124ccae4358a6f9448ab28bd66dab8", "Url": "https://api.github.com/repos/osmandapp/OsmAnd-tools", "Date": "2018-10-01T08:33:34Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (model.canRedoScheduleList()) { try { model.redoScheduleList(); model.updateFilteredScheduleList(seedu.address.logic.commands.PREDICATE_SHOW_ALL_SCHEDULES); } finally { throw new seedu.address.logic.commands.exceptions.CommandException(seedu.address.logic.commands.RedoCommand.MESSAGE_FAILURE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4124/buggy-version/src.main.java.seedu.address.logic.commands.RedoCommand.java", "BodyUseAPI": ["seedu.address.model.Model.updateFilteredScheduleList(seedu.address.logic.commands.PREDICATE_SHOW_ALL_SCHEDULES)", "seedu.address.model.Model.redoScheduleList()"], "Fixed commit": "984292dc6fd2bab5f0915c266afd35ecb3bc0e9a", "Url": "https://api.github.com/repos/LimYiSheng/main", "Date": "2018-10-13T18:37:23Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (model.canRedoScheduleList()) { try { model.undoScheduleList(); model.updateFilteredScheduleList(seedu.address.logic.commands.PREDICATE_SHOW_ALL_SCHEDULES); } finally { throw new seedu.address.logic.commands.exceptions.CommandException(seedu.address.logic.commands.UndoCommand.MESSAGE_FAILURE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4124/buggy-version/src.main.java.seedu.address.logic.commands.UndoCommand.java", "BodyUseAPI": ["seedu.address.model.Model.undoScheduleList()", "seedu.address.model.Model.updateFilteredScheduleList(seedu.address.logic.commands.PREDICATE_SHOW_ALL_SCHEDULES)"], "Fixed commit": "984292dc6fd2bab5f0915c266afd35ecb3bc0e9a", "Url": "https://api.github.com/repos/LimYiSheng/main", "Date": "2018-10-13T18:37:23Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arguments.length) == 0) return a.acceptsWord(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8964/buggy-version/src.main.java.cz.cvut.fel.horovtom.jasl.console.ConsoleInterpreter.java", "BodyUseAPI": [], "Fixed commit": "417267ee4ad883a2a8dd338f404f7c08ee1952ef", "Url": "https://api.github.com/repos/Horovtom/JAutomata", "Date": "2018-10-31T16:32:56Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (depth == 0) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8964/buggy-version/src.main.java.cz.cvut.fel.horovtom.jasl.console.ConsoleInterpreter.java", "BodyUseAPI": [], "Fixed commit": "417267ee4ad883a2a8dd338f404f7c08ee1952ef", "Url": "https://api.github.com/repos/Horovtom/JAutomata", "Date": "2018-10-31T16:32:56Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (minesweeper.Game_Driver.mCheatActive) { minesweeper.Game_Driver.mcheatGame.dispose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4852/buggy-version/minesweeper.Game_Driver.java", "BodyUseAPI": [], "Fixed commit": "c5584b4bc8d7b3d05f78c43d0ca956ab34ad5245", "Url": "https://api.github.com/repos/connorpawar/Project_2_448", "Date": "2018-10-05T20:16:20Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (minesweeper.Game_Driver.mCheatActive) { minesweeper.Game_Driver.CheatUpdate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4852/buggy-version/minesweeper.Game_Driver.java", "BodyUseAPI": [], "Fixed commit": "c5584b4bc8d7b3d05f78c43d0ca956ab34ad5245", "Url": "https://api.github.com/repos/connorpawar/Project_2_448", "Date": "2018-10-05T20:16:20Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (minesweeper.Game_Driver.mCheatActive) { minesweeper.Game_Driver.mcheatGame.dispose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4852/buggy-version/minesweeper.Game_Driver.java", "BodyUseAPI": [], "Fixed commit": "c5584b4bc8d7b3d05f78c43d0ca956ab34ad5245", "Url": "https://api.github.com/repos/connorpawar/Project_2_448", "Date": "2018-10-05T20:16:20Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lotus.core.repository.sys.CompanyTntRepository.deleteById(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (effect != 1) { throw new java.lang.RuntimeException(\"\u5220\u9664\u5f71\u54cd\u884c\u6570\u4e0d\u4e3a1\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4764/buggy-version/src.main.java.com.lotus.portal.controller.CompanyTntController.java", "BodyUseAPI": [], "Fixed commit": "bdccbbd6e7910e5ebd99e8ba12a896de98e9553d", "Url": "https://api.github.com/repos/jiliyutou/lotus-spring-boot", "Date": "2018-01-23T14:53:54Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (anchor != \"\") anchors.add(anchor);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5704/buggy-version/src.searchengine.Consumer.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "6b153ac3ee506ec1dec67d00e9908b15090e8fa8", "Url": "https://api.github.com/repos/aosman96/SearchEngine", "Date": "2018-03-09T18:04:22Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(providerName))) { result = (31 * result) + (providerName.hashCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6029/buggy-version/data.src.main.java.com.kinglloy.album.data.entity.WallpaperEntity.java", "BodyUseAPI": ["java.lang.String.hashCode()"], "Fixed commit": "442578dd730dc217fe41d6087a881ab8795cd164", "Url": "https://api.github.com/repos/jinkg/LWA", "Date": "2018-03-23T11:50:06Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(providerName))) { result = (31 * result) + (providerName.hashCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6029/buggy-version/presentation.src.main.java.com.kinglloy.album.model.WallpaperItem.java", "BodyUseAPI": ["java.lang.String.hashCode()"], "Fixed commit": "442578dd730dc217fe41d6087a881ab8795cd164", "Url": "https://api.github.com/repos/jinkg/LWA", "Date": "2018-03-23T11:50:06Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.modl.isMoustachePinned())) this.modl.pinMoustache(e.getPoint());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9329/buggy-version/src.youstache.ImageController.java", "BodyUseAPI": ["youstache.Model.pinMoustache(java.awt.Point)"], "Fixed commit": "5ff930f6ea9955f80c62e7bc4e15fa4d59886994", "Url": "https://api.github.com/repos/dpanzoli/tutorielGit-advanced", "Date": "2018-09-06T09:10:59Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((map.getGameState()) == (com.tutorial.game.constants.GameState.WON)) || ((map.getGameState()) == (com.tutorial.game.constants.GameState.LOST))) { com.badlogic.gdx.utils.Array<java.lang.Character> characters = map.getCharacters(); for (int i = 0; i < (characters.size); ++i) { if ((!(characters.get(i).getIsDead())) && ((characters.get(i).getController()) instanceof com.tutorial.game.server.ServerController)) { rep += \"&winner=\" + (((com.tutorial.game.server.ServerController) (characters.get(i).getController())).getUUID()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2613/buggy-version/server.src.com.tutorial.game.server.ServerGame.java", "BodyUseAPI": ["com.tutorial.game.maps.Map.getCharacters()"], "Fixed commit": "b2e812e05c04e0a7315a6293f8ed0db9553d7271", "Url": "https://api.github.com/repos/lar-ryan-nick/FightingGame", "Date": "2018-01-08T22:14:42Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.jam.game.Game.currentScreen) == (com.jam.game.Game.gameScreen)) { com.badlogic.gdx.ai.GdxAI.getTimepiece().update(Gdx.graphics.getDeltaTime()); com.jam.game.Game.currentScreen.render(com.badlogic.gdx.ai.GdxAI.getTimepiece().getDeltaTime()); }else { com.jam.game.Game.currentScreen.render(Gdx.graphics.getDeltaTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8603/buggy-version/core.src.com.jam.game.Game.java", "BodyUseAPI": [], "Fixed commit": "727bd4a7b666446ea6bfa203118fcf00b8daf9a0", "Url": "https://api.github.com/repos/rpkruse/GameJam", "Date": "2018-02-11T07:19:34Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getArenas().getKeys(false).size()) == 0) setArenasDefaults();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1504/buggy-version/src.me.tblake333.CUCataclysm.Main.java", "BodyUseAPI": [], "Fixed commit": "16b7af21253f98e23f9ef783b4f16c4f891ba94c", "Url": "https://api.github.com/repos/tblake333/CUCataclysm", "Date": "2018-07-10T10:42:31Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getTeams().getKeys(false).size()) == 0) setTeamsDefaults();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1504/buggy-version/src.me.tblake333.CUCataclysm.Main.java", "BodyUseAPI": [], "Fixed commit": "16b7af21253f98e23f9ef783b4f16c4f891ba94c", "Url": "https://api.github.com/repos/tblake333/CUCataclysm", "Date": "2018-07-10T10:42:31Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getConfig().getKeys(false).size()) == 0) setConfigDefaults();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1504/buggy-version/src.me.tblake333.CUCataclysm.Main.java", "BodyUseAPI": [], "Fixed commit": "16b7af21253f98e23f9ef783b4f16c4f891ba94c", "Url": "https://api.github.com/repos/tblake333/CUCataclysm", "Date": "2018-07-10T10:42:31Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getMessages().getKeys(false).size()) == 0) setMessagesDefaults();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1504/buggy-version/src.me.tblake333.CUCataclysm.Main.java", "BodyUseAPI": [], "Fixed commit": "16b7af21253f98e23f9ef783b4f16c4f891ba94c", "Url": "https://api.github.com/repos/tblake333/CUCataclysm", "Date": "2018-07-10T10:42:31Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getRounds().getKeys(false).size()) == 0) setRoundsDefaults();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1504/buggy-version/src.me.tblake333.CUCataclysm.Main.java", "BodyUseAPI": [], "Fixed commit": "16b7af21253f98e23f9ef783b4f16c4f891ba94c", "Url": "https://api.github.com/repos/tblake333/CUCataclysm", "Date": "2018-07-10T10:42:31Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (bomInputStream != null) bomInputStream.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4547/buggy-version/com.hangum.tadpole.commons.src.com.hangum.tadpole.commons.dialogs.fileupload.SingleFileuploadDialog.java", "BodyUseAPI": ["org.apache.commons.io.input.BOMInputStream.close()"], "Fixed commit": "fc18dac700c74be9adf165c33e61229f84cf86ed", "Url": "https://api.github.com/repos/hangum/TadpoleForDBTools", "Date": "2018-03-07T07:24:36Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fontNameString.endsWith(\"MT\")) fontNameString = fontNameString.substring(0, ((fontNameString.length()) - 2));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8923/buggy-version/src.main.java.badgegenerator.fileloader.PdfToFxAdapter.java", "BodyUseAPI": [], "Fixed commit": "b2bcbf69551c1d9fd6cfff80e1c74adf5dafb74b", "Url": "https://api.github.com/repos/asserebryanskiy/BG", "Date": "2018-02-02T16:52:08Z"},
{"Line": "=>2579", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (member.isStatic()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5993/buggy-version/compiler-java.src.org.eclipse.ceylon.compiler.java.codegen.ClassTransformer.java", "BodyUseAPI": [], "Fixed commit": "962d117b8aec62bc31c751142d0adcd3bd2f1ffc", "Url": "https://api.github.com/repos/eclipse/ceylon", "Date": "2018-04-25T14:18:19Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (version < 10) { args.add((\"-1.\" + version)); }else { args.add((\"-\" + version)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2252/buggy-version/src.main.java.spoon.compiler.builder.ComplianceOptions.java", "BodyUseAPI": ["spoon.compiler.builder.ComplianceOptions.add(java.lang.String)", "spoon.compiler.builder.ComplianceOptions.add(java.lang.String)"], "Fixed commit": "632daabdd6d9fd47b8c733b42ea36f1fb700234c", "Url": "https://api.github.com/repos/surli/spoon", "Date": "2018-06-11T14:40:46Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["user.getHabits().size()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (size != 0) { setCreatedHabit(user.getHabits().get((size - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3822/buggy-version/app.src.main.java.com.example.nils_martin.hubba.ViewModel.CreateGroupVM.java", "BodyUseAPI": ["user.getHabits().get(int)", "com.example.nils_martin.hubba.ViewModel.CreateGroupVM.setCreatedHabit(user.getHabits().get((size - 1)))"], "Fixed commit": "3663851c885cf3d95b6920db6fbb0ae8acd08b77", "Url": "https://api.github.com/repos/Ponnis/Hubba", "Date": "2018-10-28T16:49:07Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((EnumFacing.UP.equals(facing)) || (EnumFacing.DOWN.equals(facing))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8631/buggy-version/src.main.java.blusunrize.immersiveengineering.common.blocks.wooden.TileEntityWindmill.java", "BodyUseAPI": [], "Fixed commit": "7b08cf57f0e892bddded9674d41f505489f79d49", "Url": "https://api.github.com/repos/lgthibault/ImmersiveEngineering", "Date": "2018-03-11T14:24:16Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7697/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "3100ddd05dfc3b62ea4ccbdc98b67d6d357fee1b", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(validator.isForRegularOnly())) { profiler.start((\"USE_\" + (validator.getName()))); validator.validateCanUpdate(errors); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2361/buggy-version/src.main.java.org.openlmis.requisition.domain.requisition.RequisitionValidationService.java", "BodyUseAPI": ["org.slf4j.profiler.Profiler.start((\"USE_\" + (validator.getName())))", "org.openlmis.requisition.domain.requisition.RequisitionUpdateDomainValidator.getName()", "org.openlmis.requisition.domain.requisition.RequisitionUpdateDomainValidator.validateCanUpdate(java.util.Map<java.lang.String, org.openlmis.requisition.utils.Message>)"], "Fixed commit": "8403a2fd81cb97568f3871ba075d38296cda8538", "Url": "https://api.github.com/repos/OpenLMIS/openlmis-requisition", "Date": "2018-03-28T10:45:20Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (highestRank != (-1)) { yearWithHighestRank = currentYear; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2148/buggy-version/babybirths.Babybirths.Babybirths.java", "BodyUseAPI": [], "Fixed commit": "61f63b67124354114c9eefd05bc03afdecafaef3", "Url": "https://api.github.com/repos/FazMat/coursera-java", "Date": "2018-02-18T21:08:37Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jfinal.ext.plugin.activerecord.ModelExt<M>.find(com.jfinal.ext.kit.SqlpKit.select(this, columns))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == fetchDatas) { return fetchDatas; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6289/buggy-version/src.main.java.com.jfinal.ext.plugin.activerecord.ModelExt.java", "BodyUseAPI": [], "Fixed commit": "7869162d8a10a6194a93c6f74e98c389f703fa7f", "Url": "https://api.github.com/repos/E7du/jfinal-ext3", "Date": "2018-07-29T03:19:48Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == m) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6289/buggy-version/src.main.java.com.jfinal.ext.plugin.activerecord.ModelExt.java", "BodyUseAPI": [], "Fixed commit": "7869162d8a10a6194a93c6f74e98c389f703fa7f", "Url": "https://api.github.com/repos/E7du/jfinal-ext3", "Date": "2018-07-29T03:19:48Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(mAccountObject.id.toString().equals(\"1.2.4733\"))) && ((item.transferOperation.to.toString().equals(\"1.2.4733\")) || (item.transferOperation.from.toString().equals(\"1.2.4733\")))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2948/buggy-version/app.src.main.java.com.cybexmobile.activity.transfer.TransferRecordsActivity.java", "BodyUseAPI": [], "Fixed commit": "0cf8c52679093b23d8adb568750a2a1b5f389071", "Url": "https://api.github.com/repos/CybexDex/cybex-android", "Date": "2018-08-02T13:37:25Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mDisposable.isDisposed())) { mDisposable.dispose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2948/buggy-version/app.src.main.java.com.cybexmobile.activity.DepositWithdrawRecordsActivity.java", "BodyUseAPI": ["io.reactivex.disposables.Disposable.dispose()"], "Fixed commit": "0cf8c52679093b23d8adb568750a2a1b5f389071", "Url": "https://api.github.com/repos/CybexDex/cybex-android", "Date": "2018-08-02T13:37:25Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((textFile) != null) { textFile.printStripMeas(stripData.getMeas()); textFile.printStripMeasRes(((stripData.getMeas()) - (stripData.getTrackPos().x())), stripData.getMeasErr()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3352/buggy-version/tracking.src.main.java.org.hps.recon.tracking.gbl.GBLOutput.java", "BodyUseAPI": [], "Fixed commit": "bd2104f59249b209d56934e56b60440701cdc15f", "Url": "https://api.github.com/repos/JeffersonLab/hps-java", "Date": "2018-01-11T22:16:10Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((textFile) != null) textFile.printStripScat(stripData.getScatterAngle());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3352/buggy-version/tracking.src.main.java.org.hps.recon.tracking.gbl.GBLOutput.java", "BodyUseAPI": [], "Fixed commit": "bd2104f59249b209d56934e56b60440701cdc15f", "Url": "https://api.github.com/repos/JeffersonLab/hps-java", "Date": "2018-01-11T22:16:10Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value) { bits = (bits) | (1L << index); }else { bits = (bits) & (~(1L << index)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2724/buggy-version/src.santorini.sanyo.bitfield.Bitfield.java", "BodyUseAPI": [], "Fixed commit": "910f490d046db671c58d1f88470cc4599b3410b2", "Url": "https://api.github.com/repos/AndreyBelonog/Bitfield-Task", "Date": "2018-07-20T04:42:27Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.kymjs.common.StringUtils.isEmpty(id_number)) { mView.errorMsg(com.common.cklibrary.common.KJActivityStack.create().topActivity().getString(R.string.pleaseidNumber1), 0); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5313/buggy-version/SillyChildMerchant.app.src.main.java.com.yinglan.scm.mine.mywallet.mybankcard.AddBankCardPresenter.java", "BodyUseAPI": [], "Fixed commit": "b71949fa350251832a0e9510e119668452f060ff", "Url": "https://api.github.com/repos/921668753/SillyChildMerchant-Android", "Date": "2018-09-27T01:31:27Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["AwsProfileFileLocationProvider.DEFAULT_CREDENTIALS_LOCATION_PROVIDER.getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == file) { ch.cyberduck.core.sts.STSCredentialsConfigurator.log.warn(\"Missing configuration file ~/.aws/ccredentials. Skip auto configuration\"); return host.getCredentials(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1294/buggy-version/s3.src.main.java.ch.cyberduck.core.sts.STSCredentialsConfigurator.java", "BodyUseAPI": [], "Fixed commit": "bed7ec34917f6018d473296ade9450b84c8eb532", "Url": "https://api.github.com/repos/iterate-ch/cyberduck", "Date": "2018-07-27T12:11:44Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) { android.os.BatteryManager batteryManager = ((android.os.BatteryManager) (getSystemService(com.example.android.background.BATTERY_SERVICE))); showCharging(batteryManager.isCharging()); }else { int status = batteryStatus.getIntExtra(BatteryManager.EXTRA_STATUS, (-1)); showCharging(((status == (android.os.BatteryManager.BATTERY_STATUS_CHARGING)) || (status == (android.os.BatteryManager.BATTERY_STATUS_FULL)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4191/buggy-version/Lesson10-Hydration-Reminder.T10.05-Exercise-ChargingBroadcastReceiver.app.src.main.java.com.example.android.background.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "02be66269816b1b1750a824a692798af95734d1b", "Url": "https://api.github.com/repos/ykim306/ud851-Exercises", "Date": "2018-10-18T02:41:50Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (viewHolder instanceof me.gyanendrokh.meiteimayek.dictionary.ui.WordListItem.Loading) { me.gyanendrokh.meiteimayek.dictionary.ui.WordListItem.Loading holder = ((me.gyanendrokh.meiteimayek.dictionary.ui.WordListItem.Loading) (viewHolder)); holder.vProgressBar.setIndeterminate(true); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/37/buggy-version/app.src.main.java.me.gyanendrokh.meiteimayek.dictionary.adapter.BrowseAdapter.java", "BodyUseAPI": [], "Fixed commit": "bc9e2d8aba5357dbd1baa97db2e9342e5adb9dfc", "Url": "https://api.github.com/repos/GyanendroKh/MMDictionary", "Date": "2018-08-11T03:38:53Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dataHora.after(dataDeValidadeDoSaldo)) { throw new operadora.CelularInvalidoException(\"ERRO O saldo ultrapassou a data de validade para o celular: \", getNumero()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5358/buggy-version/operadora.CelularPrePago.java", "BodyUseAPI": [], "Fixed commit": "636737a01350706345d5755911e97c48446f0ff9", "Url": "https://api.github.com/repos/andrelr22/TP2_POO", "Date": "2018-07-02T19:58:16Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.osmand.plus.mapcontextmenu.other.MapRouteInfoMenu.isVisible()) { pb.setVisibility(View.GONE); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4846/buggy-version/OsmAnd.src.net.osmand.plus.activities.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "2198b9607e3f2b58010c837a017e406e00e52f5e", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2018-05-25T14:43:35Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (documentId != null) { doc = docDao.getDocumentById(documentId); if (doc == null) { return org.springframework.http.ResponseEntity.status(HttpStatus.BAD_REQUEST).body(null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3695/buggy-version/OrderService.src.main.java.com.stock.order.controller.OrderController.java", "BodyUseAPI": ["com.stock.order.dao.OrderDocDao.getDocumentById(java.lang.String)"], "Fixed commit": "afa936003375a6f6c8dd7a64eb456820b755c5a9", "Url": "https://api.github.com/repos/vokerg/Stock", "Date": "2018-06-11T19:23:28Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (runCalled) event.swap();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5686/buggy-version/src.TimingSystem.ChronoTimer.java", "BodyUseAPI": [], "Fixed commit": "0ede86ec3e0e4cbf694d9104c8b4aaae2d2b7d67", "Url": "https://api.github.com/repos/skelath1/ChronoTimer", "Date": "2018-03-27T16:25:27Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lastException != null) { throw lastException; }else { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6916/buggy-version/parser.src.main.java.me.vertretungsplan.parser.IndiwareMobileParser.java", "BodyUseAPI": [], "Fixed commit": "8c6ec8fe745dbb192769cbd27d9f7380eef23feb", "Url": "https://api.github.com/repos/vertretungsplanme/substitution-schedule-parser", "Date": "2018-03-21T09:35:21Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (resG != null) res.put(fistVD, resG);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4830/buggy-version/src.main.java.net.preibisch.stitcher.algorithm.GroupedViewAggregator.java", "BodyUseAPI": ["java.util.Map<mpicbg.spim.data.generic.sequence.BasicViewDescription<?>, net.imglib2.RandomAccessibleInterval<T>>.put(mpicbg.spim.data.generic.sequence.BasicViewDescription<?>,net.imglib2.RandomAccessibleInterval<T>)"], "Fixed commit": "c825f3107cc33d3078e8fec4f42e757a9566f1c5", "Url": "https://api.github.com/repos/PreibischLab/BigStitcher", "Date": "2018-03-29T12:31:59Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((actionType) == (net.preibisch.stitcher.algorithm.GroupedViewAggregator.ActionType.AVERAGE)) && (mpicbg.spim.data.sequence.Channel.class.equals(entityClass))) { java.lang.System.out.println(\"adding illuminations.\"); groupingSet.add(mpicbg.spim.data.sequence.Illumination.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4830/buggy-version/src.main.java.net.preibisch.stitcher.algorithm.GroupedViewAggregator.java", "BodyUseAPI": [], "Fixed commit": "c825f3107cc33d3078e8fec4f42e757a9566f1c5", "Url": "https://api.github.com/repos/PreibischLab/BigStitcher", "Date": "2018-03-29T12:31:59Z"},
{"Line": "=>601", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.selectedBody.getUnlocalizedName().contains(\"overworld\")) breathable = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7492/buggy-version/src.main.java.com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection.java", "BodyUseAPI": [], "Fixed commit": "e8e5058b85639c8d9e0daa8575004a45d3e57478", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-01-03T16:38:33Z"},
{"Line": "=>599", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((temp != null) && (!((this.selectedBody) instanceof micdoodle8.mods.galacticraft.api.galaxies.Satellite))) breathable = ((micdoodle8.mods.galacticraft.api.prefab.world.gen.WorldProviderSpace) (temp)).hasBreathableAtmosphere();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7492/buggy-version/src.main.java.com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection.java", "BodyUseAPI": [], "Fixed commit": "e8e5058b85639c8d9e0daa8575004a45d3e57478", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-01-03T16:38:33Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["SCMSource.SourceByItem.findSource(build.getParent())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(s instanceof com.cloudbees.jenkins.plugins.bitbucket.BitbucketSCMSource)) { if (com.cloudbees.jenkins.plugins.bitbucket.BitbucketBuildStatusNotifications.sourceCache.containsKey(buildName)) { s = com.cloudbees.jenkins.plugins.bitbucket.BitbucketBuildStatusNotifications.sourceCache.get(buildName); }else { if ((com.cloudbees.jenkins.plugins.bitbucket.BitbucketBuildStatusNotifications.sourceCache.size()) == (com.cloudbees.jenkins.plugins.bitbucket.BitbucketBuildStatusNotifications.MAX_ENTRIES)) { listener.getLogger().println(\"[Bitbucket] Cann't notify. Source cache is full.\"); } return; } }else { com.cloudbees.jenkins.plugins.bitbucket.BitbucketBuildStatusNotifications.sourceCache.put(buildName, s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4028/buggy-version/src.main.java.com.cloudbees.jenkins.plugins.bitbucket.BitbucketBuildStatusNotifications.java", "BodyUseAPI": ["java.util.LinkedHashMap<java.lang.String, jenkins.scm.api.SCMSource>.put(java.lang.String,jenkins.scm.api.SCMSource)"], "Fixed commit": "aea7d6786c5f967da3629972a0bde09f964177bc", "Url": "https://api.github.com/repos/benjaminfuchs/bitbucket-branch-source-plugin", "Date": "2018-04-06T23:51:21Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (singForm != null) tmpStr += ceregosetbuilder.CeregoRecord.getSuffix(singForm, plForm); else tmpStr += plForm;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5635/buggy-version/AnchorLine.java", "BodyUseAPI": ["ceregosetbuilder.CeregoRecord.getSuffix(java.lang.String,java.lang.String)"], "Fixed commit": "ca2ab4ffd3aa6b2dd59d5cb8e47baebb246e3035", "Url": "https://api.github.com/repos/GlennInDC/CeregoSetBuilder", "Date": "2018-03-10T05:13:42Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["creator.getPartner().getEmailAddress().getAddress()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (email != null) { com.axelor.apps.base.db.ICalendarUser organizer = com.axelor.inject.Beans.get(com.axelor.apps.base.db.repo.ICalendarUserRepository.class).all().filter(\"self.email = ?1 AND self.user.id = ?2\", email, creator.getId()).fetchOne(); if (organizer == null) { organizer = new com.axelor.apps.base.db.ICalendarUser(); organizer.setEmail(email); organizer.setName(creator.getFullName()); organizer.setUser(creator); } entity.setOrganizer(organizer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3762/buggy-version/axelor-base.src.main.java.com.axelor.apps.base.db.repo.ICalendarEventManagementRepository.java", "BodyUseAPI": ["com.axelor.inject.Beans.get(com.axelor.apps.base.db.repo.ICalendarUserRepository.class).all().filter(\"self.email = ?1 AND self.user.id = ?2\", email, creator.getId()).fetchOne()", "com.axelor.apps.base.db.ICalendarUser.setEmail(java.lang.String)", "com.axelor.inject.Beans.get(com.axelor.apps.base.db.repo.ICalendarUserRepository.class).all().filter(java.lang.String,java.lang.String,creator.getId())"], "Fixed commit": "b574b14e3fad718f4172d21d21097a7f0596ce0c", "Url": "https://api.github.com/repos/akh-axelor/axelor-business-suite", "Date": "2018-06-18T10:07:27Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tbBackStatus) { super.onBackPressed(); }else { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5509/buggy-version/app.src.main.java.com.mercado.libre.paymentapp.mvp.views.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d4a58db21d5762bd6657d28fad27f4bd09a198c0", "Url": "https://api.github.com/repos/RaelyxCordero/PaymentApp", "Date": "2018-06-18T19:45:53Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (present) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1874/buggy-version/app.src.main.java.com.smdproject.smdproject.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "27594480cf1f6070e0bd0b7e4588e922f070c944", "Url": "https://api.github.com/repos/abdullahkamran/SMDProject", "Date": "2018-04-29T22:03:51Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (second == 0) return java.lang.Double.NaN;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4033/buggy-version/src.main.java.edu.handong.csee.pp1.bigdata.lab1_1.Calculator.java", "BodyUseAPI": [], "Fixed commit": "d416e46b821e583bbb6f7d012a54bc6982899be4", "Url": "https://api.github.com/repos/DeoBM/PracticalProject1-2018-Lab1-1", "Date": "2018-10-03T10:43:17Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((settingsMenu) != null) { settingsMenu.update(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4918/buggy-version/plugins.de.ovgu.featureide.fm.ui.src.de.ovgu.featureide.fm.ui.views.constraintview.ConstraintViewController.java", "BodyUseAPI": [], "Fixed commit": "00a3cbf151cccd2f91dbd1747a3bd4a1dc0d5570", "Url": "https://api.github.com/repos/oliviia12/FeatureIDE", "Date": "2018-10-09T09:26:42Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mHandler) != null) { mHandler.removeCallbacksAndMessages(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4752/buggy-version/flashlight.src.main.java.com.cx.flashlight.FlashLight.java", "BodyUseAPI": [], "Fixed commit": "75fa9f974167d7ebf43bea403ea4ffafb6e258a0", "Url": "https://api.github.com/repos/jiyewushen/FlashLight", "Date": "2018-07-11T12:31:46Z"},
{"Line": "=>1381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<java.lang.String>.peek()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentMethod.contains(m)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3460/buggy-version/microbat.src.main.microbat.codeanalysis.runtime.ProgramExecutor.java", "BodyUseAPI": [], "Fixed commit": "5b63de21dc78bd5a2433672608d7a85419186b4f", "Url": "https://api.github.com/repos/llmhyy/microbat", "Date": "2018-01-30T13:58:13Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(e instanceof java.lang.NullPointerException)) e.printStackTrace();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3095/buggy-version/app.src.main.java.com.angryburg.uapp.activities.UserscriptActivity.java", "BodyUseAPI": ["java.lang.Exception.printStackTrace()"], "Fixed commit": "43ddf5ce6b9deda2c42983a80cfa948cea5abc82", "Url": "https://api.github.com/repos/nilesr/United4", "Date": "2018-09-13T02:43:05Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (doesBranchExist(branchName)) { executeGitCommand((\"checkout \" + branchName)); }else { executeGitCommand((\"checkout -b \" + branchName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8891/buggy-version/src.info.dennisweber.modelingworkfloweclipseplugin.model.GitInterface.java", "BodyUseAPI": ["info.dennisweber.modelingworkfloweclipseplugin.model.GitInterface.executeGitCommand(java.lang.String)", "info.dennisweber.modelingworkfloweclipseplugin.model.GitInterface.executeGitCommand(java.lang.String)"], "Fixed commit": "3f7e4d050b3b18a699b00bcbe4137649f2310978", "Url": "https://api.github.com/repos/Nijin22/modelingWorkflowEclipsePlugin", "Date": "2018-07-18T09:22:37Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gameObject instanceof Game.ObjectsToCatch.Leaves.Leaves) { this.catchSound.loop(0); this.catchSound.start(); this.movingDirection.multiply((1.0F / 4.0F)); level.addLeaf(); GameObjectManager.instance.add(IconGenerator.instance.addLeaf()); }else if (gameObject instanceof Game.Cockcroach.Cockcroach) { this.catchSound.loop(0); this.catchSound.start(); if (this.hasShield) { this.hasShield = false; }else if (!(this.hasShield)) { this.isBomb = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4892/buggy-version/src.Game.Anchor.java", "BodyUseAPI": [], "Fixed commit": "6f7e931f3be57098e8d10637cea4d999014b9114", "Url": "https://api.github.com/repos/chung3011/feed-me", "Date": "2018-07-04T09:21:03Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (extrasObj instanceof org.json.JSONObject) { bundle = toBundle(((org.json.JSONObject) (extras.get(key)))); result.putExtra(key, bundle); }else { java.lang.String value = extras.getString(key); result.putExtra(key, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3276/buggy-version/src.android.IntentShim.java", "BodyUseAPI": [], "Fixed commit": "6abb98d7cd790158a0f772163281817021d30612", "Url": "https://api.github.com/repos/darryncampbell/darryncampbell-cordova-plugin-intent", "Date": "2018-07-29T05:30:34Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vo.getRefCode()) == null) { log.info(\"matchPKRefJSON \u63a5\u53e3\u5165\u53c2\u7684refcode\u4e3a\u7a7a,\u8fd4\u56de\u7a7a\u7ed3\u679c\"); return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3561/buggy-version/ref.src.main.java.com.yonyou.iuap.baseservice.ref.controller.RefCommonController.java", "BodyUseAPI": [], "Fixed commit": "67a85188474661f22f4c7ddd6f3294775247effb", "Url": "https://api.github.com/repos/yonyou-iuap/iuap-pap-baseservice", "Date": "2018-08-31T11:47:48Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.identity.sso.saml.dao.SAML2ArtifactInfoDAO.getSAMLArtifactInfo(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (artifactInfo != null) { if (validateArtifactResolve(artifactResolve, artifactInfo)) { org.wso2.carbon.identity.sso.saml.builders.ResponseBuilder respBuilder = org.wso2.carbon.identity.sso.saml.util.SAMLSSOUtil.getResponseBuilder(); if (respBuilder != null) { response = respBuilder.buildResponse(artifactInfo.getAuthnReqDTO(), artifactInfo.getSessionID(), artifactInfo.getInitTimestamp(), artifactInfo.getAssertionID()); }else { throw new org.wso2.carbon.identity.sso.saml.exception.ArtifactBindingException((\"Could not create a ResponseBuilder for SAML2 artifact \" + \"resolution.\")); } } }else { org.wso2.carbon.identity.sso.saml.SAMLSSOArtifactResolver.log.warn((\"Invalid artifact received to Artifact Resolution endpoint: \" + artifact)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5725/buggy-version/components.org.wso2.carbon.identity.sso.saml.src.main.java.org.wso2.carbon.identity.sso.saml.SAMLSSOArtifactResolver.java", "BodyUseAPI": ["org.wso2.carbon.identity.sso.saml.builders.ResponseBuilder.buildResponse(artifactInfo.getAuthnReqDTO(),artifactInfo.getSessionID(),artifactInfo.getInitTimestamp(),artifactInfo.getAssertionID())", "org.wso2.carbon.identity.sso.saml.dto.SAML2ArtifactInfo.getAuthnReqDTO()", "org.wso2.carbon.identity.sso.saml.dto.SAML2ArtifactInfo.getSessionID()", "org.wso2.carbon.identity.sso.saml.dto.SAML2ArtifactInfo.getInitTimestamp()", "org.wso2.carbon.identity.sso.saml.dto.SAML2ArtifactInfo.getAssertionID()", "org.wso2.carbon.identity.sso.saml.SAMLSSOArtifactResolver.validateArtifactResolve(org.opensaml.saml2.core.ArtifactResolve,org.wso2.carbon.identity.sso.saml.dto.SAML2ArtifactInfo)"], "Fixed commit": "39824756116347936ea9cd069a77bbd308824577", "Url": "https://api.github.com/repos/sachiniWettasinghe/identity-inbound-auth-saml", "Date": "2018-09-05T11:15:07Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (artifactInfo != null) { org.wso2.carbon.identity.sso.saml.dto.SAMLSSOAuthnReqDTO authReqDTO = artifactInfo.getAuthnReqDTO(); org.wso2.carbon.identity.sso.saml.util.SAMLSSOUtil.setSignature(artifactResponse, authReqDTO.getSigningAlgorithmUri(), authReqDTO.getDigestAlgorithmUri(), new org.wso2.carbon.identity.sso.saml.builders.SignKeyDataHolder(authReqDTO.getUser().getAuthenticatedSubjectIdentifier())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5725/buggy-version/components.org.wso2.carbon.identity.sso.saml.src.main.java.org.wso2.carbon.identity.sso.saml.SAMLSSOArtifactResolver.java", "BodyUseAPI": ["org.wso2.carbon.identity.sso.saml.dto.SAML2ArtifactInfo.getAuthnReqDTO()"], "Fixed commit": "39824756116347936ea9cd069a77bbd308824577", "Url": "https://api.github.com/repos/sachiniWettasinghe/identity-inbound-auth-saml", "Date": "2018-09-05T11:15:07Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.plugins.haxe.haxelib.HaxelibUtil.getLibraryBasePath(com.intellij.openapi.projectRoots.Sdk)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (haxelibRoot == null) { com.intellij.plugins.haxe.haxelib.HaxelibUtil.LOG.debug(\"Haxe libraries base path was not found for current project sdk\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8831/buggy-version/src.common.com.intellij.plugins.haxe.haxelib.HaxelibUtil.java", "BodyUseAPI": [], "Fixed commit": "050348a4a4d704426fb157a176fc50d97fc928a9", "Url": "https://api.github.com/repos/HaxeFoundation/intellij-haxe", "Date": "2018-05-08T07:22:11Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (_boton.isEnabled()) { _boton.setEnabled(false); chequeaLetra(_boton.getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4195/buggy-version/src.codigo.VentanaAhorcado.java", "BodyUseAPI": ["javax.swing.JButton.setEnabled(boolean)", "javax.swing.JButton.getText()", "codigo.VentanaAhorcado.chequeaLetra(java.lang.String)"], "Fixed commit": "bfde94e534c7979c660acea688625500b05c6a75", "Url": "https://api.github.com/repos/camdlp/Java_Ahorcado2018", "Date": "2018-01-31T14:42:05Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (c != null) { try { c.setAutoCommit(true); } catch (java.sql.SQLException e) { throw new java.lang.RuntimeException(e); } disconnect(c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/267/buggy-version/src.main.java.de.onyxbits.raccoon.db.DatabaseManager.java", "BodyUseAPI": ["java.sql.Connection.setAutoCommit(boolean)", "de.onyxbits.raccoon.db.DatabaseManager.disconnect(java.sql.Connection)"], "Fixed commit": "d8e7b036e05fac8f5cf517b95fc0bc965adfd758", "Url": "https://api.github.com/repos/saper/raccoon4", "Date": "2018-01-02T16:00:19Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getStringExtra(java.lang.String)", "getIntent().getStringExtra(java.lang.String)", "getIntent().getStringExtra(java.lang.String)", "getIntent().getStringExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((((firstName.contains(\"*\")) && (lastName.contains(\"*\"))) && (schoolName.contains(\"*\"))) && ((schoolDistrict.length()) > 0)) { query = java.lang.String.format(((\"select teacher.firstName, teacher.lastName, school.schoolName from teacher inner join school using (schoolName) where school.districtName = '\" + schoolDistrict) + \"' group by firstName, lastName, schoolName;\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3127/buggy-version/app.src.main.java.com.cmsc508.db508project.tableView.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String)"], "Fixed commit": "9d4e27031a6ec9f52d10723a879a7e697c104a92", "Url": "https://api.github.com/repos/nrhwest/508-project", "Date": "2018-04-24T00:05:04Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getStringExtra(java.lang.String)", "getIntent().getStringExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((training.length()) > 0) && ((gradeLevel.length()) > 0)) { query = java.lang.String.format(((((\"select streetName, city, state from address natural join session inner join training using(sessionDate) where trainingName = '\" + training) + \"' and gradeLevel = '\") + gradeLevel) + \"';\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3127/buggy-version/app.src.main.java.com.cmsc508.db508project.tableView.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String)"], "Fixed commit": "9d4e27031a6ec9f52d10723a879a7e697c104a92", "Url": "https://api.github.com/repos/nrhwest/508-project", "Date": "2018-04-24T00:05:04Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(ui.isTouchDown)) camera.translate(((-deltaX) * (camera.zoom)), ((-deltaY) * (camera.zoom)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1840/buggy-version/core.src.com.catangame.catan.local.Framework.java", "BodyUseAPI": [], "Fixed commit": "28cf5561a118d91c6d0767804ac1aa8106265486", "Url": "https://api.github.com/repos/JulianSobott/Catan", "Date": "2018-05-17T17:01:14Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (degree < 0) degree += 360;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2976/buggy-version/app.src.main.java.org.pslab.activity.CompassActivity.java", "BodyUseAPI": [], "Fixed commit": "a1f821fce9e7ea35994aa08822608cfd695305cd", "Url": "https://api.github.com/repos/abhinavraj23/pslab-android", "Date": "2018-08-06T11:40:31Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (degree < 0) degree += 360;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2976/buggy-version/app.src.main.java.org.pslab.activity.CompassActivity.java", "BodyUseAPI": [], "Fixed commit": "a1f821fce9e7ea35994aa08822608cfd695305cd", "Url": "https://api.github.com/repos/abhinavraj23/pslab-android", "Date": "2018-08-06T11:40:31Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (querySpec == null) { querySpec = new nl.naturalis.nba.api.QuerySpec(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/692/buggy-version/nl.naturalis.nba.dao.src.main.java.nl.naturalis.nba.dao.NbaDao.java", "BodyUseAPI": [], "Fixed commit": "91cace846cd514befc1aee82caef131354a10e9b", "Url": "https://api.github.com/repos/naturalis/naturalis_data_api", "Date": "2018-02-27T14:56:43Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.activity.CropActivity.findPoints()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (points != null) { mSelectionImageView.setPoints(points); }else { com.owncloud.android.lib.common.utils.Log_OC.d(com.owncloud.android.ui.activity.CropActivity.TAG, getResources().getString(R.string.no_contour_found)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6247/buggy-version/src.com.owncloud.android.ui.activity.CropActivity.java", "BodyUseAPI": ["com.owncloud.android.ui.QuadrilateralSelectionImageView.setPoints(java.util.List<android.graphics.PointF>)"], "Fixed commit": "33b410aef9ac79e9c375953fcc4415df4f2c66db", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-03-12T06:43:04Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (canSee(Busuk.class)) { Greenfoot.stop(); gameover gover = new gameover(); getWorld().addObject(gover, ((getWorld().getWidth()) / 2), ((getWorld().getHeight()) / 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5697/buggy-version/bird.Bird.java", "BodyUseAPI": [], "Fixed commit": "71dae4c188ec8f02768d43d140db28fd0607be65", "Url": "https://api.github.com/repos/idzahazard/Project-game--EAT-ALL-YOU-WANT-", "Date": "2018-05-19T03:57:57Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((alignments.size()) == 0) { int cols = rows.get(0).split(\"\\\\|\").length; for (int i = 0; i < cols; i++) { alignments.add(marker.core.Table.ALIGN_LEFT); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7422/buggy-version/src.main.java.marker.core.Table.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "0eb8ffd3f1d3c8379cb8e0ecc740f9feee246dcf", "Url": "https://api.github.com/repos/piccuss/Marker", "Date": "2018-06-01T00:30:22Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mergeParams.getMergeMode().isMerge()) { java.util.Collection<T> merged = org.hisp.dhis.system.util.ReflectionUtils.newCollectionInstance(property.getKlass()); merged.addAll(targetObject); merged.addAll(sourceObject.stream().filter(( o) -> !(merged.contains(o))).collect(java.util.stream.Collectors.toList())); targetObject.clear(); targetObject.addAll(merged); }else { targetObject.clear(); targetObject.addAll(sourceObject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7494/buggy-version/dhis-2.dhis-services.dhis-service-core.src.main.java.org.hisp.dhis.schema.DefaultMergeService.java", "BodyUseAPI": [], "Fixed commit": "0402fbf66ee92e27906a3e220b3fc5277018abab", "Url": "https://api.github.com/repos/dhis2/dhis2-core", "Date": "2018-02-19T10:34:31Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.creeperhost.minetogether.EventHandler.serverListSelectorField) == null) { net.creeperhost.minetogether.EventHandler.serverListSelectorField = net.minecraftforge.fml.relauncher.ReflectionHelper.findField(net.creeperhost.minetogether.GuiMultiplayer.class, \"field_146803_h\", \"serverListSelector\"); net.creeperhost.minetogether.EventHandler.serverListSelectorField.setAccessible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2622/buggy-version/1.12.2.src.main.java.net.creeperhost.minetogether.EventHandler.java", "BodyUseAPI": [], "Fixed commit": "32991db36186fba80d4810097d62e392eeea2c4f", "Url": "https://api.github.com/repos/CreeperHost/CreeperHostGui", "Date": "2018-08-11T22:56:55Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (yeet.addAccount(newAccount)) { java.lang.System.out.println(\"\\n+ Account Opened:\"); seneca.btp400.w18.BankingApp.displayAccount(newAccount); }else { errorFixer = scanner.nextLine(); java.lang.System.out.println(\"*** FAILED: ACCOUNT CANNOT BE OPENED! ***\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4873/buggy-version/seneca.btp400.w18.BankingApp.java", "BodyUseAPI": ["seneca.btp400.w18.BankingApp.displayAccount(org.finance.Account)"], "Fixed commit": "56b2903d64cdd1483ee3154463f10e0e2b0eb4d2", "Url": "https://api.github.com/repos/Dwrulesalot/BTP400-Assignment-1", "Date": "2018-03-05T02:37:12Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (yeet.addAccount(newAccount)) { java.lang.System.out.println(\"\\n+ Account Opened:\"); seneca.btp400.w18.BankingApp.displayAccount(newAccount); }else { errorFixer = scanner.nextLine(); java.lang.System.out.println(\"*** FAILED: ACCOUNT CANNOT BE OPENED! ***\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4873/buggy-version/seneca.btp400.w18.BankingApp.java", "BodyUseAPI": ["seneca.btp400.w18.BankingApp.displayAccount(org.finance.Account)"], "Fixed commit": "56b2903d64cdd1483ee3154463f10e0e2b0eb4d2", "Url": "https://api.github.com/repos/Dwrulesalot/BTP400-Assignment-1", "Date": "2018-03-05T02:37:12Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (yeet.addAccount(newAccount)) { java.lang.System.out.println(\"\\n+ Account Opened:\"); seneca.btp400.w18.BankingApp.displayAccount(newAccount); }else { errorFixer = scanner.nextLine(); java.lang.System.out.println(\"*** FAILED: ACCOUNT CANNOT BE OPENED! ***\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4873/buggy-version/seneca.btp400.w18.BankingApp.java", "BodyUseAPI": ["seneca.btp400.w18.BankingApp.displayAccount(org.finance.Account)"], "Fixed commit": "56b2903d64cdd1483ee3154463f10e0e2b0eb4d2", "Url": "https://api.github.com/repos/Dwrulesalot/BTP400-Assignment-1", "Date": "2018-03-05T02:37:12Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(p instanceof orderedStructures.Arithmetic)) throw new java.lang.IllegalArgumentException(\"Parameter must be instance of Arithmetic\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4322/buggy-version/InheritanceLabStudents.src.orderedStructures.Arithmetic.java", "BodyUseAPI": [], "Fixed commit": "25a013ddc09cb16a18fe9baed7fa2e0dd54364a4", "Url": "https://api.github.com/repos/eduardooneill97/ProgressionLab", "Date": "2018-03-05T01:56:59Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.isBlank(favorite))) { taskId = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2351/buggy-version/AlandTrainingService.src.main.java.com.conedot.aland.training.manager.UserLessionManager.java", "BodyUseAPI": [], "Fixed commit": "24bcb4e505056920fa4fa2d7763a837e0730202e", "Url": "https://api.github.com/repos/victorwang0526/AlandTraining", "Date": "2018-08-31T11:36:37Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.isBlank(favorite))) { taskId = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2351/buggy-version/AlandTrainingService.src.main.java.com.conedot.aland.training.manager.UserLessionManager.java", "BodyUseAPI": [], "Fixed commit": "24bcb4e505056920fa4fa2d7763a837e0730202e", "Url": "https://api.github.com/repos/victorwang0526/AlandTraining", "Date": "2018-08-31T11:36:37Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.FileReader.read()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (b == (-1)) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2380/buggy-version/src.boris.modules.data.Loader.java", "BodyUseAPI": [], "Fixed commit": "4fa795e134a8823f86a128f820e19dbd7d454fa7", "Url": "https://api.github.com/repos/borisPristupa/IFMO-Programming-labs-new", "Date": "2018-03-16T00:01:00Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jsonNode.has(\"id\")) { userId = jsonNode.get(\"id\").asInt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5886/buggy-version/src.data_access_layer.dtos.UserDTO.java", "BodyUseAPI": ["jsonNode.get(\"id\").asInt()", "com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)"], "Fixed commit": "37c5795e60e92e1d9301a7921a9d933728a2a1c3", "Url": "https://api.github.com/repos/FredMar/2-sem-CDIO-final", "Date": "2018-06-08T17:04:33Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mConnectedThread) != null) { mConnectedThread.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5316/buggy-version/app.src.main.java.com.example.application.disabledv01.Battery.java", "BodyUseAPI": [], "Fixed commit": "d611acda1cc22f0db43c224272e79e53d63c5d4b", "Url": "https://api.github.com/repos/mazenyosry/Disabledv02", "Date": "2018-07-24T19:12:50Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPopupOpen) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7521/buggy-version/app.src.main.java.com.sigpit.alexwurts.solitare.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b5aed0e794932457058d484bb5d543b83363bea5", "Url": "https://api.github.com/repos/AJWurts/AndroidSolitaire", "Date": "2018-03-14T17:15:31Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (userId != null) { final com.google.protobuf.ProtocolStringList memberIdList = unitRegistry.getUnitConfigByAlias(UnitRegistry.ADMIN_GROUP_ALIAS).getAuthorizationGroupConfig().getMemberIdList(); for (final java.lang.String id : userId.split(\"@\")) { if (memberIdList.contains(id)) { return org.openbase.bco.registry.unit.lib.auth.AuthorizationWithTokenHelper.resolveUsername(userId, unitRegistry); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9300/buggy-version/unit-registry.lib.src.main.java.org.openbase.bco.registry.unit.lib.auth.AuthorizationWithTokenHelper.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "org.openbase.bco.registry.unit.lib.auth.AuthorizationWithTokenHelper.resolveUsername(java.lang.String,org.openbase.bco.registry.unit.lib.UnitRegistry)"], "Fixed commit": "5294a3372e1690902dd2281d83381fff13c76568", "Url": "https://api.github.com/repos/openbase/bco.registry", "Date": "2018-07-27T16:10:51Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((schedule.getTransitLines().size()) == 0) { throw new java.lang.IllegalArgumentException(\"No transit lines available in schedule\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8141/buggy-version/src.main.java.org.matsim.pt2matsim.mapping.PTMapper.java", "BodyUseAPI": [], "Fixed commit": "706cfb18eb5914da5bc241a067acb0ff5036cfec", "Url": "https://api.github.com/repos/matsim-org/pt2matsim", "Date": "2018-08-21T11:34:37Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((schedule.getFacilities().size()) == 0) { throw new java.lang.IllegalArgumentException(\"No stop facilities available in schedule\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8141/buggy-version/src.main.java.org.matsim.pt2matsim.mapping.PTMapper.java", "BodyUseAPI": [], "Fixed commit": "706cfb18eb5914da5bc241a067acb0ff5036cfec", "Url": "https://api.github.com/repos/matsim-org/pt2matsim", "Date": "2018-08-21T11:34:37Z"},
{"Line": "=>597", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node instanceof IR.ClassDeclNode) { javafx.util.Pair<java.lang.String, IR.BasicBlock> temp = pass(node, topScope, curBlock, false, true, null, null, null, 0, null, false, null, null); }else { javafx.util.Pair<java.lang.String, IR.BasicBlock> temp = pass(node, topScope, curBlock, false, true, null, null, null, 0, null, false, null, null); curBlock = temp.getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3155/buggy-version/Compiler.src.IR.IRGenerator.java", "BodyUseAPI": ["IR.IRGenerator.pass(IR.ASTNode,IR.TopScope,IR.BasicBlock,boolean,boolean,<nulltype>,<nulltype>,<nulltype>,int,<nulltype>,boolean,<nulltype>,<nulltype>)", "IR.IRGenerator.pass(IR.ASTNode,IR.TopScope,IR.BasicBlock,boolean,boolean,<nulltype>,<nulltype>,<nulltype>,int,<nulltype>,boolean,<nulltype>,<nulltype>)"], "Fixed commit": "496ce0c159bb3996fdabfd4fca12c6c680784463", "Url": "https://api.github.com/repos/Ldhlwh/Compiler", "Date": "2018-06-16T04:16:54Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((previousFail) != null) { previousFail.remove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5225/buggy-version/core.src.com.tann.dice.screens.dungeon.TargetingManager.java", "BodyUseAPI": [], "Fixed commit": "aec6deb7f38052937bd8694b2ecc9c5c5b87cb20", "Url": "https://api.github.com/repos/ColourTann/Dicegeon", "Date": "2018-10-24T11:56:47Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getTranslateY()) >= ((main.Game.WINDOW_HEIGHT) / 2)) velocity = new javafx.geometry.Point2D(character.Dinosaur.DINO_SPEED, (-50));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6938/buggy-version/src.character.Dinosaur.java", "BodyUseAPI": [], "Fixed commit": "ed64e3f0d31346c0f138df381de203b2ea94e2f2", "Url": "https://api.github.com/repos/makromant/UniversityTask3", "Date": "2018-07-25T18:41:47Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(validateProductTypeUnderwritingLimits(request))) { return org.springframework.http.ResponseEntity.status(HttpStatus.BAD_REQUEST).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/586/buggy-version/src.main.java.com.hedvig.productPricing.service.web.ProductPricingController.java", "BodyUseAPI": [], "Fixed commit": "cad21c557625c089111414aa0cb0b8f6f5b831fa", "Url": "https://api.github.com/repos/HedvigInsurance/product-pricing", "Date": "2018-10-31T10:15:24Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.semux.util.SystemUtil.isJavaPlatformModuleSystemAvailable()) { sb.append(\" --add-opens=java.base/sun.net.dns=ALL-UNNAMED\"); sb.append(\" --add-opens=java.base/java.lang.reflect=ALL-UNNAMED\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5934/buggy-version/src.main.java.org.semux.JvmOptions.java", "BodyUseAPI": [], "Fixed commit": "85a62541ba58b3ddba66b5a89be9e71d99aedd45", "Url": "https://api.github.com/repos/semuxgo/semux-core", "Date": "2018-08-01T00:29:55Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (kv != null) { java.lang.String[] pair = kv.split(\"=\"); if ((pair != null) && ((pair.length) == 2)) { params.put(pair[0], pair[1]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9389/buggy-version/lib.src.main.java.site.binghai.lib.utils.UrlUtil.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "7044c77be350124e05cd6e185fc394bc99d0f460", "Url": "https://api.github.com/repos/IceSeaOnly/BizStarter", "Date": "2018-10-25T07:59:32Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ute.webservice.voiceagent.procedures.ProcedureInfo.getExtremityHeaders(java.lang.String,java.lang.String)", "ute.webservice.voiceagent.procedures.ProceduresSecondLevelAdapter.getGroup(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(ute.webservice.voiceagent.procedures.ProcedureInfo.isExtremity(currentCategory, headerTitle, headers.get(0)))) { convertView.setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { displaySurgeries(currentCategory, headerTitle); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8494/buggy-version/uteVoiceAgentApp.src.main.java.ute.webservice.voiceagent.procedures.ProceduresSecondLevelAdapter.java", "BodyUseAPI": ["android.view.View.setOnClickListener(android.view.View.OnClickListener)", "ute.webservice.voiceagent.procedures.ProceduresSecondLevelAdapter.4.displaySurgeries(java.lang.String,java.lang.String)"], "Fixed commit": "8a2d0084d9d78c02492359183531a383b65c4c9f", "Url": "https://api.github.com/repos/n-taylor/UVoiceAgent", "Date": "2018-03-28T22:44:52Z"},
{"Line": "=>542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bookings.size()) == 1) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7014/buggy-version/src.dom.Route.java", "BodyUseAPI": [], "Fixed commit": "757495231821e83356490e3fbee2e46d3435ffe5", "Url": "https://api.github.com/repos/WouterDuijn/heuristic", "Date": "2018-01-24T20:36:00Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((productList.size()) == 0) return productList;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7050/buggy-version/dealstalker.src.main.java.org.dealstalker.com.IndexAction.java", "BodyUseAPI": [], "Fixed commit": "7b9fea3bcb5ca7a07ba29380b72b793d8a4b0542", "Url": "https://api.github.com/repos/Wiblz/DealStalker", "Date": "2018-09-13T17:27:47Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((params != null) && (!(params.isEmpty()))) { return java.util.Arrays.asList(params.split(\",\\\\s?\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3456/buggy-version/therapi-runtime-javadoc.src.main.java.com.github.therapi.runtimejavadoc.internal.parser.CommentParser.java", "BodyUseAPI": ["java.util.Arrays.asList(java.lang.String[])", "java.lang.String.split(java.lang.String)"], "Fixed commit": "ee0edd93850c4981f484c859fcf93e1f4d9250b3", "Url": "https://api.github.com/repos/dnault/therapi-runtime-javadoc", "Date": "2018-10-01T09:46:20Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.automatalib.words.WordBuilder<O>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (wbSize == 0) { return new de.learnlib.filter.cache.mealy.MasterQuery(word, errorSyms); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/963/buggy-version/oracles.filters.cache.src.main.java.de.learnlib.filter.cache.mealy.MealyCacheOracle.java", "BodyUseAPI": [], "Fixed commit": "6051c7a9da479742633c38398c0543769c0f8825", "Url": "https://api.github.com/repos/LearnLib/learnlib", "Date": "2018-02-23T16:26:22Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((hit.get()) > 0) out.append(java.lang.String.format(\"hit(%d)\\t-> best: %d, worst: %d, avg: %d\\n\", hit.get(), hit_best.get(), hit_worst.get(), ((hit_accu_time.get()) / (hit.get()))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5977/buggy-version/src.de.hhu.bsinfo.utils.eval.MultiThreadMeasurementHelper.java", "BodyUseAPI": ["java.util.concurrent.atomic.AtomicLong.get()", "java.util.concurrent.atomic.AtomicLong.get()", "java.lang.String.format(java.lang.String,long,long,long,long)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "2c6d5b564e13819008604e7cfac72be5cbd4128d", "Url": "https://api.github.com/repos/huflo/dxram-memory", "Date": "2018-03-08T15:09:31Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (useGPU) { initAreaGpu = new org.bytedeco.javacpp.opencv_core.GpuMat(initArea.size(), initArea.type()); shadowAreaGpu = new org.bytedeco.javacpp.opencv_core.GpuMat(shadowArea.size(), shadowArea.type()); lidarMatGpu = new org.bytedeco.javacpp.opencv_core.GpuMat(initArea.size(), initArea.type()); shadowAreaGpu.upload(shadowArea); initAreaGpu.upload(initArea); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6265/buggy-version/src.main.java.ch.ethz.idsc.owl.mapping.ShadowMapSpherical.java", "BodyUseAPI": [], "Fixed commit": "9c2e3e162fa92415982e4914236f2235d0742ae3", "Url": "https://api.github.com/repos/idsc-frazzoli/owl", "Date": "2018-10-07T16:22:48Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCoreferenceModelListener()) != null) cModel.addCoreferenceModelListener(getCoreferenceModelListener());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8391/buggy-version/src.main.java.de.unistuttgart.ims.coref.annotator.worker.DocumentModelLoader.java", "BodyUseAPI": [], "Fixed commit": "b615c4cb2ba5f76c49b897b0ea4b858854ad72d4", "Url": "https://api.github.com/repos/nilsreiter/CorefAnnotator", "Date": "2018-03-17T18:34:47Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (frag.isVisible()) { if (onBackPressed(frag.getChildFragmentManager())) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6538/buggy-version/app.src.main.java.com.example.j7ars.fragmentstartproject.activity.BaseActivity.java", "BodyUseAPI": ["android.support.v4.app.Fragment.getChildFragmentManager()", "com.example.j7ars.fragmentstartproject.activity.BaseActivity.onBackPressed(frag.getChildFragmentManager())"], "Fixed commit": "96d25c924c6f38ef9fc387cf8585ff490465e981", "Url": "https://api.github.com/repos/j7arsen/fragmentstart", "Date": "2018-01-18T19:22:21Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.nio.file.Files.exists(res)) { builder.add(\"-S\", res.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5743/buggy-version/src.com.facebook.buck.android.AaptStep.java", "BodyUseAPI": ["java.nio.file.Path.toString()", "builder.add(java.lang.String,java.lang.String)"], "Fixed commit": "22c7c25d76d937707da2cb02fa6c1b8ae9a4e38a", "Url": "https://api.github.com/repos/alonlevih/buck", "Date": "2018-02-27T10:12:29Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (channelName.startsWith(com.blokaly.ceres.bitstamp.PusherClient.FULL_ORDER_BOOK)) { orderBookHandler.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7209/buggy-version/gateways.bitstamp.src.main.java.com.blokaly.ceres.bitstamp.PusherClient.java", "BodyUseAPI": [], "Fixed commit": "ca6af0c8a390ca62d804bb1017a327e87ab689cc", "Url": "https://api.github.com/repos/finfabrik/ceres", "Date": "2018-09-19T09:11:35Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.currentListingIndex) > 0) { (this.currentListingIndex)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9557/buggy-version/search.view.PanelViewResults.java", "BodyUseAPI": [], "Fixed commit": "a2991096171ac4970ffaf8863b70ea4aaa7901b3", "Url": "https://api.github.com/repos/justinkonecny/websearch-gui", "Date": "2018-08-22T17:50:55Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (buddyUser != null) { userInformation.setBuddyUser(buddyUser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3046/buggy-version/server.business.src.main.java.service.UserInformationService.java", "BodyUseAPI": ["entity.UserInformation.setBuddyUser(entity.User)"], "Fixed commit": "eb83e5c49b0e996a9fe0b0faca0c8d41d14831b9", "Url": "https://api.github.com/repos/easyonboard/onboarder", "Date": "2018-04-26T11:59:12Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((userInformationDTO.getBuddyUser().getIdUser()) != null) { entity.User buddyUser = userDAO.findEntity(userInformationDTO.getBuddyUser().getIdUser()); userInformationService.addUserInfo(userInformationDTO, appUser, buddyUser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3046/buggy-version/server.business.src.main.java.service.UserService.java", "BodyUseAPI": ["dto.UserInformationDTO.getBuddyUser()", "userInformationDTO.getBuddyUser().getIdUser()", "service.UserInformationService.addUserInfo(dto.UserInformationDTO,entity.User,entity.User)", "dao.UserDAO.findEntity(userInformationDTO.getBuddyUser().getIdUser())"], "Fixed commit": "eb83e5c49b0e996a9fe0b0faca0c8d41d14831b9", "Url": "https://api.github.com/repos/easyonboard/onboarder", "Date": "2018-04-26T11:59:12Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (debug != null) { debug.println((\"IOException: \" + fileloc)); debug.println(e.getMessage()); debug.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3808/buggy-version/src.util.FileHandler.java", "BodyUseAPI": ["java.io.PrintWriter.println(java.lang.String)", "java.io.PrintWriter.close()", "java.io.PrintWriter.println(java.lang.String)"], "Fixed commit": "a8af2e1685ca93459b925c564d4c1eb2e484dbcc", "Url": "https://api.github.com/repos/andy98725/Base-Wars-3", "Date": "2018-07-21T06:32:41Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, edu.snu.mist.core.task.StateWithTimestamp>.get(avroVertex.getVertexId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (vertexStateWithTimestamp == null) { final edu.snu.mist.core.task.ConfigVertex configVertex = new edu.snu.mist.core.task.ConfigVertex(java.lang.Long.toString(configVertexId.getAndIncrement()), type, avroVertex.getConfiguration()); }else { final edu.snu.mist.core.task.ConfigVertex configVertex = new edu.snu.mist.core.task.ConfigVertex(java.lang.Long.toString(configVertexId.getAndIncrement()), type, avroVertex.getConfiguration(), vertexStateWithTimestamp.getVertexState(), vertexStateWithTimestamp.getCheckpointTimestamp()); deserializedVertices.add(configVertex); configDag.addVertex(configVertex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6649/buggy-version/mist-core.src.main.java.edu.snu.mist.core.task.DefaultConfigDagGeneratorImpl.java", "BodyUseAPI": ["edu.snu.mist.core.task.StateWithTimestamp.getVertexState()", "edu.snu.mist.core.task.StateWithTimestamp.getCheckpointTimestamp()"], "Fixed commit": "0b872ea3079bc618c837b82e985f6388bc04f2d4", "Url": "https://api.github.com/repos/DifferentSC/mist-1", "Date": "2018-07-09T07:23:06Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(raceGroup.isManaged())) { unmanagedRiders = raceGroup.getRiders(); }else { unmanagedRiders = realm.copyFromRealm(raceGroup.getRiders()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1505/buggy-version/app.src.main.java.ch.hsr.sa.radiotour.dataaccess.repositories.RaceGroupRepository.java", "BodyUseAPI": ["io.realm.Realm.copyFromRealm(raceGroup.getRiders())", "ch.hsr.sa.radiotour.dataaccess.models.RaceGroup.getRiders()", "ch.hsr.sa.radiotour.dataaccess.models.RaceGroup.getRiders()"], "Fixed commit": "9828988801b7ad98fd376a38608f53ffd032deda", "Url": "https://api.github.com/repos/TourLive/app", "Date": "2018-05-10T11:25:57Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.eservices.message.MessageManager.findContentByMediaID(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (content == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4810/buggy-version/src.main.java.com.eservices.rest.MessageService.java", "BodyUseAPI": [], "Fixed commit": "781b7972e1296f95558962b46a9bc4ee9be3516e", "Url": "https://api.github.com/repos/kjbaxter/eservices", "Date": "2018-05-13T01:36:33Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (minute == 0) { minute = 60; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9640/buggy-version/src.main.java.com.taskrequestapi.serviceimpl.TaskServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "c0cb2d11d3bd64bbefb40f00b131345c1bbf83e7", "Url": "https://api.github.com/repos/EmanuelCavalcante/task-request-api", "Date": "2018-08-23T01:36:14Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Double.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value < 1) { p.sendMessage(\"\u00a740\u5186\u4ee5\u4e0b\u306e\u652f\u6255\u3044\u306f\u3067\u304d\u307e\u305b\u3093/ You cannot create a transaction below 0 $\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6272/buggy-version/src.main.java.red.man10.man10vaultapiplus.Man10VaultAPIPlus.java", "BodyUseAPI": [], "Fixed commit": "5c8729b51a949ed9359c48f040ad90a23501ed89", "Url": "https://api.github.com/repos/shojabon/Man10VaultAPIPlus", "Date": "2018-06-17T09:18:40Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position != (mPasswordLength)) { android.view.inputmethod.InputMethodManager imm = ((android.view.inputmethod.InputMethodManager) (getContext().getSystemService(Context.INPUT_METHOD_SERVICE))); imm.showSoftInput(mInputView, InputMethodManager.SHOW_IMPLICIT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4038/buggy-version/library.src.main.java.com.jungly.gridpasswordview.GridPasswordView.java", "BodyUseAPI": [], "Fixed commit": "57863ac63edbe7b3a5150dd7d1c99d110ed474f7", "Url": "https://api.github.com/repos/kuwork/GridPasswordView", "Date": "2018-03-02T09:58:52Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getExtras().getString(Intent.EXTRA_TEXT)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(joke))) { jokesTv.setText(joke); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2039/buggy-version/jokesandroidlibrary.src.main.java.com.udacity.gradle.builditbigger.jokesandroidlibrary.JokesActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "61ed57dc42c475ba903ecd6a255631a393a6ee87", "Url": "https://api.github.com/repos/newsplash24/build-it-bigger", "Date": "2018-03-13T22:01:35Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (variables == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1724/buggy-version/Kazan.src.main.java.ql.validator.CyclicDependencyChecker.java", "BodyUseAPI": [], "Fixed commit": "eb702692b90ea2554fbab1cba6a1198d93099dcc", "Url": "https://api.github.com/repos/software-engineering-amsterdam/endless-ql", "Date": "2018-03-12T21:37:36Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (counter == 1) { col = sc.nextInt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4574/buggy-version/src.Game.java", "BodyUseAPI": [], "Fixed commit": "aec10918782556b17f96dbbe47e448e2145fc411", "Url": "https://api.github.com/repos/zonggen/gomoku", "Date": "2018-01-03T14:58:19Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((o1.getCurrency().compareToIgnoreCase(o2.getCurrency())) == 0) { if ((o1.getValue()) == (o2.getValue())) return 0; if (((o2.getValue()) - (o1.getValue())) < 0) return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1419/buggy-version/src.coinpurse.ValueComparator.java", "BodyUseAPI": ["coinpurse.Valuable.getValue()", "coinpurse.Valuable.getValue()", "coinpurse.Valuable.getValue()", "coinpurse.Valuable.getValue()"], "Fixed commit": "a1a36ed3a676544cc514e25db15d5126cdc65f78", "Url": "https://api.github.com/repos/OOP2018/coinpurse-BasPasut", "Date": "2018-02-05T08:02:42Z"},
{"Line": "=>511", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lessThan) { throw new virtual.machine.execution.CompilerException(line, (\"Insufficient Operands on line : \" + save)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4161/buggy-version/src.virtual.machine.execution.Compiler.java", "BodyUseAPI": [], "Fixed commit": "5707d33cebc7170176b0a49786a5e7cd8b4d68ac", "Url": "https://api.github.com/repos/anktjsh/Y86-Simulator", "Date": "2018-04-24T19:44:59Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((null != storageDir) && (!(storageDir.exists()))) { storageDir.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6133/buggy-version/matisse.src.main.java.com.zhihu.matisse.internal.utils.MediaStoreCompat.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "44111f30275358623c42c3faf95987e232802ec6", "Url": "https://api.github.com/repos/hurshi/Matisse", "Date": "2018-06-28T06:53:26Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == in) { return \"\".getBytes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3993/buggy-version/src.main.java.com.azazar.bitcoin.jsonrpcclient.BitcoinJSONRPCClient.java", "BodyUseAPI": [], "Fixed commit": "82bad59388522d1c4840dd3aa71287806edaecbd", "Url": "https://api.github.com/repos/penuel-leo/bitcoin-json-rpc-client", "Date": "2018-05-09T11:39:10Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (values.isEmpty()) return net.minecraftforge.gradle.user.TaskExtractAnnotations.ValueHolder.EMPTY_LIST;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1592/buggy-version/src.main.java.net.minecraftforge.gradle.user.TaskExtractAnnotations.java", "BodyUseAPI": [], "Fixed commit": "e65f1e25c5a7eca7532d1276cdd7ceeebff50544", "Url": "https://api.github.com/repos/MinecraftForge/ForgeGradle", "Date": "2018-01-31T01:28:40Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Material.matchMaterial(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (material == null) material = org.bukkit.Material.WOOD_BUTTON;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4770/buggy-version/src.gvlfm78.plugin.OldCombatMechanics.OCMListener.java", "BodyUseAPI": [], "Fixed commit": "1a4b04985c149d52d7c2aa82015442a98d09f461", "Url": "https://api.github.com/repos/I-Al-Istannen/BukkitOldCombatMechanics", "Date": "2016-03-29T19:54:24Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((note.getPlaceId()) != null) { values.put(NoteTable.Cols.PLACE_ID, note.getPlaceId().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5049/buggy-version/app.src.main.java.com.katespitzer.android.weekender.managers.NoteManager.java", "BodyUseAPI": ["com.katespitzer.android.weekender.models.Note.getPlaceId()", "android.content.ContentValues.put(NoteTable.Cols.PLACE_ID,note.getPlaceId().toString())", "note.getPlaceId().toString()"], "Fixed commit": "f774058c3c140c4a26f2a89d4351119103b96e93", "Url": "https://api.github.com/repos/Guribot/weekender", "Date": "2018-01-23T19:51:48Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.katespitzer.android.weekender.database.NoteCursorWrapper.getString(getColumnIndex(NoteTable.Cols.PLACE_ID))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (placeId != null) { note.setPlaceId(java.util.UUID.fromString(placeId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5049/buggy-version/app.src.main.java.com.katespitzer.android.weekender.database.NoteCursorWrapper.java", "BodyUseAPI": ["java.util.UUID.fromString(java.lang.String)", "com.katespitzer.android.weekender.models.Note.setPlaceId(java.util.UUID)"], "Fixed commit": "f774058c3c140c4a26f2a89d4351119103b96e93", "Url": "https://api.github.com/repos/Guribot/weekender", "Date": "2018-01-23T19:51:48Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (res != null) return res;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1824/buggy-version/app.src.main.java.com.kivsw.phonerecorder.model.settings.Settings.java", "BodyUseAPI": [], "Fixed commit": "a49c6728206976382742640f3415fed58ec7c813", "Url": "https://api.github.com/repos/IvanKovalchuk/PhoneRecorderN", "Date": "2018-07-08T09:31:27Z"},
{"Line": "=>740", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRefresh) filterText();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2444/buggy-version/com.hangum.tadpole.rdb.core.src.com.hangum.tadpole.rdb.core.viewers.object.ExplorerViewer.java", "BodyUseAPI": [], "Fixed commit": "c91acce968c6bc84c6f8f3243a3e6cafc7e54a0e", "Url": "https://api.github.com/repos/hangum/TadpoleForDBTools", "Date": "2018-01-19T14:42:25Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((arrayOfImages.size()) > 0) { this.images.add(arrayOfImages); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2614/buggy-version/app.src.main.java.dragosholban.com.bestphotos.ImageRecyclerViewAdapter.java", "BodyUseAPI": ["java.util.ArrayList<java.util.ArrayList<dragosholban.com.bestphotos.ImageRecyclerViewAdapter.MyImage>>.add(java.util.ArrayList<dragosholban.com.bestphotos.ImageRecyclerViewAdapter.MyImage>)"], "Fixed commit": "3b428729aef88fb844d82fbf98c87ae19dffd4c6", "Url": "https://api.github.com/repos/dragosholban/AndroidBestPhotos", "Date": "2018-03-17T17:13:08Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (persisted) result = org.apache.geode.management.internal.cli.result.ResultBuilder.createInfoResult(\"No members found. Cluster configuration updated.\"); else result = org.apache.geode.management.internal.cli.result.ResultBuilder.createInfoResult(\"No members found.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4140/buggy-version/geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateJndiBindingCommand.java", "BodyUseAPI": [], "Fixed commit": "a50d103e59a701c7232d8adb1009272a4677022f", "Url": "https://api.github.com/repos/sboorlagadda/geode", "Date": "2018-02-22T22:19:47Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((de.enflexit.common.SystemEnvironmentHelper.isWindowsOperatingSystem()) == true) { execute = ((((((executable + \" -nosplash -application \") + (downloadType.toString())) + \" -source \") + sourceLocation) + \" -destination \\\"\") + destinationDirectory) + \"\\\"\"; }else { execute = ((((((executable + \" -nosplash -application \") + (downloadType.toString())) + \" -source \") + sourceLocation) + \" -destination \") + destinationDirectory) + \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3366/buggy-version/eclipseProjects.org.agentgui.bundles.org.agentgui.core.src.agentgui.core.update.MirrorTool.java", "BodyUseAPI": [], "Fixed commit": "858451dff824efe19063475b89f74c838759e23f", "Url": "https://api.github.com/repos/EnFlexIT/AgentWorkbench", "Date": "2018-08-27T12:59:59Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isVisible()) == false) { setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7818/buggy-version/evergreen.src.e.edit.EErrorsWindow.java", "BodyUseAPI": [], "Fixed commit": "32a79fd67046b80c9ecd8c40bcbe9754b99d87a4", "Url": "https://api.github.com/repos/software-jessies-org/jessies", "Date": "2018-08-12T19:00:35Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((textArea.getLineCount()) == 0) { toFront(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7818/buggy-version/evergreen.src.e.edit.EErrorsWindow.java", "BodyUseAPI": [], "Fixed commit": "32a79fd67046b80c9ecd8c40bcbe9754b99d87a4", "Url": "https://api.github.com/repos/software-jessies-org/jessies", "Date": "2018-08-12T19:00:35Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.gov.dft.bluebadge.client.usermanagement.api.UserManagementService.getUsersForAuthority(int,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((usersResponse.getData().getTotalItems()) > 0) { java.util.Collections.sort(usersResponse.getData().getUsers(), new uk.gov.dft.bluebadge.webapp.la.comparator.UserComparatorByNameAscendingOrderCaseInsensitive()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1133/buggy-version/src.main.java.uk.gov.dft.bluebadge.webapp.la.service.UserServiceImpl.java", "BodyUseAPI": ["uk.gov.dft.bluebadge.model.usermanagement.UsersResponse.getData()", "java.util.Collections.sort(usersResponse.getData().getUsers(),uk.gov.dft.bluebadge.webapp.la.comparator.UserComparatorByNameAscendingOrderCaseInsensitive)", "usersResponse.getData().getUsers()"], "Fixed commit": "203a32d67a8df723f4b2cd94da3ea083291b8dcc", "Url": "https://api.github.com/repos/dft-bluebadge/la-webapp", "Date": "2018-05-29T10:57:49Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jme3utilities.MySkeleton.getAttachments(com.jme3.animation.Bone)", "maud.model.cgm.SelectedSpatial.find()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((spatial == node) || (spatial.hasAncestor(node))) { selectedSpatial.selectCgmRoot(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3768/buggy-version/src.main.java.maud.model.cgm.EditableCgm.java", "BodyUseAPI": [], "Fixed commit": "0c2f6446b2f21e87e25ebf65be9f12aafb32ed54", "Url": "https://api.github.com/repos/stephengold/Maud", "Date": "2018-07-24T19:37:34Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((first.isStackIndention()) && (!(second.isStackIndention()))) { indentionDelta = first.getIndentionDelta(); stackIndention = true; }else if ((second.isStackIndention()) && (!(first.isStackIndention()))) { indentionDelta = second.getIndentionDelta(); stackIndention = true; }else { indentionDelta = (first.getIndentionDelta()) + (second.getIndentionDelta()); stackIndention = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5487/buggy-version/src.main.java.de.dknapps.mybatter.formatter.Formatter.java", "BodyUseAPI": ["de.dknapps.mybatter.formatter.Format.isStackIndention()", "de.dknapps.mybatter.formatter.Format.getIndentionDelta()", "de.dknapps.mybatter.formatter.Format.getIndentionDelta()", "de.dknapps.mybatter.formatter.Format.getIndentionDelta()", "de.dknapps.mybatter.formatter.Format.isStackIndention()", "de.dknapps.mybatter.formatter.Format.getIndentionDelta()"], "Fixed commit": "affa86c16f604edcade9b0e1b20b4facb7dfe8bf", "Url": "https://api.github.com/repos/udamken/mybatter", "Date": "2017-12-25T08:10:55Z"},
{"Line": "=>834", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(proximityManager.isConnected())) { android.util.Log.e(\"checkScanStatus\", \"Not connected and will be restarted\"); proximityManager.connect(new com.kontakt.sdk.android.ble.connection.OnServiceReadyListener() { @java.lang.Override public void onServiceReady() { proximityManager.startScanning(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/231/buggy-version/MEETeUX.src.main.java.at.ac.fhstp.MEETeUX.MainActivity.java", "BodyUseAPI": ["com.kontakt.sdk.android.ble.manager.ProximityManager.startScanning()", "com.kontakt.sdk.android.ble.manager.ProximityManager.connect(com.kontakt.sdk.android.ble.connection.OnServiceReadyListener)"], "Fixed commit": "ea82c46820d9ef7fd549aa385c95be8fcbc624c6", "Url": "https://api.github.com/repos/fhstp/meeteux-android", "Date": "2018-10-15T09:29:03Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.m_CurrentJob) != null) { if ((this.m_CurrentJob) instanceof org.firstinspires.ftc.teamcode.DarlingtonSharedLib.Internals.MotorCountsSpecificJob) { org.firstinspires.ftc.teamcode.DarlingtonSharedLib.Internals.MotorCountsSpecificJob<org.firstinspires.ftc.teamcode.DarlingtonSharedLib.Sensors.RobotEncoderMotor.RobotEncoderSpecificData> CountsJob = ((org.firstinspires.ftc.teamcode.DarlingtonSharedLib.Internals.MotorCountsSpecificJob) (this.m_CurrentJob)); if (!(this.getDcMotor().isBusy())) { this.stopCurrentTask(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/619/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.DarlingtonSharedLib.Sensors.RobotEncoderMotor.java", "BodyUseAPI": [], "Fixed commit": "776202a02a2e68fa4414aa5e33b7caf419ff2e3d", "Url": "https://api.github.com/repos/DarlingtonProgramming/DarBots", "Date": "2018-10-23T23:20:45Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Process.waitFor()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (outputCode == 1) { throw new java.io.IOException(((\"See \" + (redirectError.getName())) + \" file for details.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/887/buggy-version/rnaseq-app-core.src.main.java.org.sing_group.rnaseq.core.environment.execution.AbstractBinariesExecutor.java", "BodyUseAPI": [], "Fixed commit": "c14d2eaff0792029ddc33ae60e062669e96c4528", "Url": "https://api.github.com/repos/sing-group/dewe", "Date": "2018-06-13T07:48:16Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mConnectionHandler) != null) { mConnectionPending = (mDisconnecting) || (mConnectionHandler.isConnected()); if ((!(mDisconnecting)) && (mConnectionHandler.isConnected())) { try { disconnect(); } catch (org.eclipse.paho.client.mqttv3.MqttException e) { org.eclipse.paho.android.service.LogUtils.LOGE(\"Exception while disconnecting client: %s\", e.getMessage()); mConnectionPending = false; doConnect(); } }else if ((!(mDisconnecting)) && (!(mConnectionHandler.isConnected()))) { java.lang.String tokenId = storeToken(mConnectToken); mConnectionHandler.connect(mConnectOptions, null, tokenId); } }else { doConnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3990/buggy-version/app.src.main.java.org.eclipse.paho.android.service.MqttAndroidClient.java", "BodyUseAPI": [], "Fixed commit": "96c9550f2331bf422126bec61717c926a4106e39", "Url": "https://api.github.com/repos/gauravdingolia/MqttPahoAndroid", "Date": "2018-03-23T21:34:33Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i > 7) com.falin.valentin.comixquest.database.UserTable.onUpgrade(db, i, i1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/823/buggy-version/app.src.main.java.com.falin.valentin.comixquest.database.DatabaseHelper.java", "BodyUseAPI": ["com.falin.valentin.comixquest.database.UserTable.onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)"], "Fixed commit": "bc639be9482772894d5b7619cfa87120a05ae8f4", "Url": "https://api.github.com/repos/Golgoroth22/ComixQuest", "Date": "2018-08-29T12:07:38Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.phuclongappv2.xk.phuclongappver2.Utils.Common.checkInSearchActivity) == 0) { ((com.phuclongappv2.xk.phuclongappver2.ActivityMain) (context)).updateNotificationHomeIcon(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3464/buggy-version/app.src.main.java.com.phuclongappv2.xk.phuclongappver2.Adapter.DrinkAdapter.java", "BodyUseAPI": [], "Fixed commit": "d2550d33f89ec04f9600f2cb64482e42bf2280d4", "Url": "https://api.github.com/repos/nguyenxuankiet262/PhucLongWebservice", "Date": "2018-09-28T06:19:21Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((orbiterHold) != null) orbiterHold.shuttleSceNotice();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4336/buggy-version/core.src.com.esbjon.inventories.ShuttleInventory.java", "BodyUseAPI": [], "Fixed commit": "ae04a31ad22dad1ef43d2a0b6d899cca8a3d1f9a", "Url": "https://api.github.com/repos/k-o-r-t-o/gdxDune", "Date": "2018-01-31T17:41:40Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!equalsWithSingleValuedArray) { org.xdi.oxd.server.op.Validator.LOG.error((((\"ID Token has invalid audience (single valued array). Expected audience: \" + clientId) + \", audience from token is: \") + audienceFromToken)); throw new org.xdi.oxd.common.ErrorResponseException(org.xdi.oxd.common.ErrorResponseCode.INVALID_ID_TOKEN_BAD_AUDIENCE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4215/buggy-version/oxd-server.src.main.java.org.xdi.oxd.server.op.Validator.java", "BodyUseAPI": [], "Fixed commit": "bfa561fbe5d72b2b9720117756a733674700efa9", "Url": "https://api.github.com/repos/GluuFederation/oxd", "Date": "2018-05-09T10:24:58Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((route.getCorridor()) != null) em.persist(route.getCorridor());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7369/buggy-version/src.main.java.org.traccar.web.server.model.DataServiceImpl.java", "BodyUseAPI": ["pl.datamatica.traccar.model.Route.getCorridor()", "javax.persistence.EntityManager.persist(route.getCorridor())"], "Fixed commit": "9b556470ba5f6a43f12d42f31676d2340bbe688c", "Url": "https://api.github.com/repos/datamatica-pl/traccar-web", "Date": "2018-02-28T09:22:36Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((priority) < (hopsSSLCheck.getPriority())) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7354/buggy-version/hadoop-common-project.hadoop-common.src.main.java.org.apache.hadoop.net.hopssslchecks.AbstractHopsSSLCheck.java", "BodyUseAPI": [], "Fixed commit": "be7e48d8ca8fdcd5fdd36e0727b9578a1aa08d41", "Url": "https://api.github.com/repos/kouzant/hops", "Date": "2018-01-26T09:06:04Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((builder.length()) > 0) { if (loginMessageSent) { if (weaponSwitch) { sendChatMessage((\"This weapon's attack style will grant XP in: \" + builder)); }else { sendChatMessage((\"This attack style will grant XP in: \" + builder)); } }else { sendChatMessage((\"You logged in wielding a weapon that will grant XP in: \" + builder)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8156/buggy-version/runelite-client.src.main.java.net.runelite.client.plugins.attackstyles.AttackStylesPlugin.java", "BodyUseAPI": ["net.runelite.client.plugins.attackstyles.AttackStylesPlugin.sendChatMessage(java.lang.String)", "net.runelite.client.plugins.attackstyles.AttackStylesPlugin.sendChatMessage(java.lang.String)", "net.runelite.client.plugins.attackstyles.AttackStylesPlugin.sendChatMessage(java.lang.String)"], "Fixed commit": "fda6a6ffa40b1e6f880c953a43a13c98e7f84df1", "Url": "https://api.github.com/repos/basicDamen/runelite", "Date": "2018-07-24T17:00:51Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((permissions.length) == 0) || ((grantResults.length) == 0)) { log(\"onRequestPermissionsResult permissions empty, request again\"); requestPermissions(mSubjects.keySet().toArray(new java.lang.String[mSubjects.size()])); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2985/buggy-version/lib.src.main.java.com.tbruyelle.rxpermissions2.RxPermissionsFragment.java", "BodyUseAPI": [], "Fixed commit": "91e3697ee9512e8ae78e8a0bcf564a7e4096bfcc", "Url": "https://api.github.com/repos/stqb12/RxPermissions", "Date": "2018-04-02T03:12:21Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rescribe.model.book_appointment.doctor_data.DoctorList.getDocName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (doctorForIcon.contains(\"Dr. \")) { doctorForIcon = doctorForIcon.replace(\"Dr. \", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/973/buggy-version/app.src.main.java.com.rescribe.adapters.book_appointment.SortByClinicAndDoctorNameAdapter.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "38d9c9e2bd778f6136fa14aa3194739f50ddc9ab", "Url": "https://api.github.com/repos/sandeepbahalkar123/myrescribe_repo", "Date": "2018-05-10T06:54:33Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event.getCurrentItem().isSimilar(net.noodles.staffmodegui2.staffmodegui2.Inv.InvItems.MainInvItems.weatherMenu())) { if (!(player.hasPermission(\"staffmodegui.weathermenu\"))) { player.sendMessage(net.noodles.staffmodegui2.staffmodegui2.StaffModeGUI2.getPlugin().getConfig().getString(\"defaultMessage.noPermission\").replace(\"&\", \"\u00a7\")); } player.sendMessage(net.noodles.staffmodegui2.staffmodegui2.StaffModeGUI2.getPlugin().getConfig().getString(\"weatherMenu.openGUI\").replace(\"&\", \"\u00a7\")); player.openInventory(net.noodles.staffmodegui2.staffmodegui2.StaffModeGUI2.getInstance().getWeatherInv().getInventory()); }else if (event.getCurrentItem().isSimilar(net.noodles.staffmodegui2.staffmodegui2.Inv.InvItems.MainInvItems.flyMenu())) { if (!(player.hasPermission(\"staffmodegui.flymenu\"))) { player.sendMessage(net.noodles.staffmodegui2.staffmodegui2.StaffModeGUI2.getPlugin().getConfig().getString(\"defaultMessage.noPermission\").replace(\"&\", \"\u00a7\")); } player.sendMessage(net.noodles.staffmodegui2.staffmodegui2.StaffModeGUI2.getPlugin().getConfig().getString(\"flyMenu.openGUI\").replace(\"&\", \"\u00a7\")); player.openInventory(net.noodles.staffmodegui2.staffmodegui2.StaffModeGUI2.getInstance().getFlyInv().getInventory()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6765/buggy-version/src.main.java.net.noodles.staffmodegui2.staffmodegui2.Inv.MainInv.java", "BodyUseAPI": ["event.getCurrentItem().isSimilar(net.noodles.staffmodegui2.staffmodegui2.Inv.InvItems.MainInvItems.flyMenu())", "org.bukkit.event.inventory.InventoryClickEvent.getCurrentItem()"], "Fixed commit": "efd60ec48e9811f0a2bd76ff8ee5592109d6858c", "Url": "https://api.github.com/repos/BGHDDevelopment/StaffModeGUI2", "Date": "2018-09-19T20:01:49Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.N)) { title = android.text.Html.fromHtml(titleEncoded, Html.FROM_HTML_MODE_LEGACY).toString(); description = android.text.Html.fromHtml(descriptionEncoded, Html.FROM_HTML_MODE_LEGACY).toString(); }else { title = android.text.Html.fromHtml(titleEncoded).toString(); description = android.text.Html.fromHtml(descriptionEncoded).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8948/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.asynctasks.RetrieveMetaDataAsyncTask.java", "BodyUseAPI": [], "Fixed commit": "7fe5a7c29ef34f5864cec5fb0080576a0bcdb3a7", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2018-03-13T18:20:00Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cameraHandler.listSize()) != 0) { configured = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4123/buggy-version/src.main.java.gui.controllers.MainController.java", "BodyUseAPI": [], "Fixed commit": "b9b0f48ab12d9c1e2fc548b17b1e385e6a10a3e5", "Url": "https://api.github.com/repos/egedebruin/Trackscape", "Date": "2018-06-04T10:08:58Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (first == null) { return head; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/535/buggy-version/AlgoTraining.src.AlgoSolutions.DeleteNthNodeFromTail.java", "BodyUseAPI": [], "Fixed commit": "c9b8e94f7763f3004019a424c54d118ad46e9ab4", "Url": "https://api.github.com/repos/isaacjumac/PersonalAlgoTraining", "Date": "2018-04-20T10:06:14Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((first.next) != null) { second = head; first = first.next; }else { second = head; head = head.next; second.next = null; return head; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/535/buggy-version/AlgoTraining.src.AlgoSolutions.DeleteNthNodeFromTail.java", "BodyUseAPI": [], "Fixed commit": "c9b8e94f7763f3004019a424c54d118ad46e9ab4", "Url": "https://api.github.com/repos/isaacjumac/PersonalAlgoTraining", "Date": "2018-04-20T10:06:14Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.model.drawState()) { turnLabel.setText(\"Game draw!\"); }else { if (this.model.getTurn()) { turnLabel.setText(\"It's black turn.\"); }else { turnLabel.setText(\"It's orange turn.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8241/buggy-version/src.view.GridView.java", "BodyUseAPI": ["this.model.getTurn()"], "Fixed commit": "e0349aad7163f8d967ccfcb0df4cf534365db132", "Url": "https://api.github.com/repos/Here2peer/Project2.3", "Date": "2018-04-04T10:56:51Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getNameDim().equals(\"Environment\")) { mBuilder.append(((getNameDim()) + \" {\\n\")); }else { mBuilder.append(((\"Membrane \" + (getNameDim())) + \" {\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1136/buggy-version/src.upsimulator.core.PMembrane.java", "BodyUseAPI": [], "Fixed commit": "95c82d9b36fc213957b6fb3a31897db344d58bd2", "Url": "https://api.github.com/repos/quancs/UPSimulator", "Date": "2018-04-15T12:30:53Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.contra.jmd.transformers.smokescreen.MethodGen.getInstructionList()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (list == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1637/buggy-version/jmd-core.src.main.java.net.contra.jmd.transformers.smokescreen.SmokeScreenTransformer.java", "BodyUseAPI": [], "Fixed commit": "b6eec475ce915a8b1adf4b8a97ce6f1a64c8fae0", "Url": "https://api.github.com/repos/contra/JMD", "Date": "2018-04-16T14:42:46Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.contra.jmd.transformers.smokescreen.MethodGen.getInstructionList()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (list == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1637/buggy-version/jmd-core.src.main.java.net.contra.jmd.transformers.smokescreen.SmokeScreenTransformer.java", "BodyUseAPI": [], "Fixed commit": "b6eec475ce915a8b1adf4b8a97ce6f1a64c8fae0", "Url": "https://api.github.com/repos/contra/JMD", "Date": "2018-04-16T14:42:46Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (appSettings == null) { appSettings = new com.juancavallotti.tools.caas.git.model.settings.AppSettings(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1242/buggy-version/caas-backend-git.src.main.java.com.juancavallotti.tools.caas.git.model.settings.AppSettingsBuilder.java", "BodyUseAPI": [], "Fixed commit": "9deb24a5b9bf5547177e950806f81fcaa750fd29", "Url": "https://api.github.com/repos/juancavallotti/caas", "Date": "2018-02-03T02:25:36Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((settings.isGlobal()) != null) && (!(settings.isGlobal()))) { com.juancavallotti.tools.caas.git.GitRepositoryParser.logger.debug(\"App '{}' has a global convention but is disabled by config.\", appName); }else { context.globals.add(coordinate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1242/buggy-version/caas-backend-git.src.main.java.com.juancavallotti.tools.caas.git.GitRepositoryParser.java", "BodyUseAPI": [], "Fixed commit": "9deb24a5b9bf5547177e950806f81fcaa750fd29", "Url": "https://api.github.com/repos/juancavallotti/caas", "Date": "2018-02-03T02:25:36Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.web.context.request.ServletWebRequest.getResponse()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (response == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6581/buggy-version/spar-wings-monolith.src.main.java.jp.xet.sparwings.spring.web.error.handler.RestExceptionHandler.java", "BodyUseAPI": [], "Fixed commit": "3e355af58b88ba8ef689e1bf4301132c996cec38", "Url": "https://api.github.com/repos/wreulicke/spar-wings", "Date": "2018-03-18T13:17:51Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (locale == null) { locale = java.util.Locale.getDefault(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6581/buggy-version/spar-wings-monolith.src.main.java.jp.xet.sparwings.spring.web.error.handler.DefaultRestErrorResolver.java", "BodyUseAPI": [], "Fixed commit": "3e355af58b88ba8ef689e1bf4301132c996cec38", "Url": "https://api.github.com/repos/wreulicke/spar-wings", "Date": "2018-03-18T13:17:51Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (date == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2580/buggy-version/lib.src.main.java.site.binghai.lib.utils.TimeTools.java", "BodyUseAPI": [], "Fixed commit": "54334d9fdcaa6f3d2d6c6ad9470fe7bbcb0849db", "Url": "https://api.github.com/repos/IceSeaOnly/BizStarter", "Date": "2018-09-11T12:17:51Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stopwatch.Watch.isPaused) { resms = java.lang.System.currentTimeMillis(); pause(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9700/buggy-version/src.stopwatch.Watch.java", "BodyUseAPI": [], "Fixed commit": "5337145b4e90a00a6926bc6e8224fb7e04bafa9c", "Url": "https://api.github.com/repos/shiveshnavin/StopWatchJFrame", "Date": "2018-03-26T14:37:35Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["RecyclerView.Adapter.getItem(mLayoutManager.findFirstVisibleItemPosition())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (item == null) { return true; }else { return item.isLast(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5923/buggy-version/pinnedlist.src.main.java.com.gvillani.pinnedlist.PinBehavior.java", "BodyUseAPI": ["com.gvillani.pinnedlist.ItemPinned.isLast()"], "Fixed commit": "2447d6b41cc387f904b16c0aa5581be5b2c186d2", "Url": "https://api.github.com/repos/kekullc/PinnedList-Android", "Date": "2018-03-26T15:07:58Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cache.getWatchedEntityCache().getWatchedEntity(protocolsupport.protocol.packet.middleimpl.clientbound.play.v_7.EntityTeleport)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (wentity != null) { if (((wentity.getType()) == (protocolsupport.protocol.utils.types.networkentity.NetworkEntityType.TNT)) || ((wentity.getType()) == (protocolsupport.protocol.utils.types.networkentity.NetworkEntityType.FALLING_OBJECT))) { y += 16; }else if ((wentity.getType()) == (protocolsupport.protocol.utils.types.networkentity.NetworkEntityType.MINECART)) { y += 0.5; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8941/buggy-version/src.protocolsupport.protocol.packet.middleimpl.clientbound.play.v_7.EntityTeleport.java", "BodyUseAPI": ["protocolsupport.protocol.utils.types.networkentity.NetworkEntity.getType()", "protocolsupport.protocol.utils.types.networkentity.NetworkEntity.getType()", "protocolsupport.protocol.utils.types.networkentity.NetworkEntity.getType()"], "Fixed commit": "0efee463ae08004921bce02970ca53c9d78491a5", "Url": "https://api.github.com/repos/EntryPointKR/ProtocolSupport", "Date": "2018-05-11T06:03:37Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cache.getWatchedEntityCache().getWatchedEntity(protocolsupport.protocol.packet.middleimpl.clientbound.play.v_4_5_6.EntityTeleport)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((watchedEntity != null) && ((watchedEntity.getType()) == (protocolsupport.protocol.utils.types.networkentity.NetworkEntityType.MINECART))) { y += 0.5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8941/buggy-version/src.protocolsupport.protocol.packet.middleimpl.clientbound.play.v_4_5_6.EntityTeleport.java", "BodyUseAPI": [], "Fixed commit": "0efee463ae08004921bce02970ca53c9d78491a5", "Url": "https://api.github.com/repos/EntryPointKR/ProtocolSupport", "Date": "2018-05-11T06:03:37Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (result == null) { result = new com.netflix.spinnaker.halyard.core.registry.v1.BillOfMaterials.Artifact(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2991/buggy-version/halyard-core.src.main.java.com.netflix.spinnaker.halyard.core.registry.v1.BillOfMaterials.java", "BodyUseAPI": [], "Fixed commit": "dd6a66d6ff19375b8b28a3d3554093a03705a26a", "Url": "https://api.github.com/repos/bolcom/halyard", "Date": "2018-04-09T21:05:24Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.employees.isEmpty()) { java.lang.System.err.println(\"No records found on file\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9868/buggy-version/CS4773Assignment1.src.misc.RecordProcessor.java", "BodyUseAPI": [], "Fixed commit": "9c2ea29bb502e163b570dce2af2dca2c79756942", "Url": "https://api.github.com/repos/MistaMax/ObjectOrientedSystems", "Date": "2018-09-13T14:10:39Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(listitem.getImage().isEmpty())) { photoRef = mFirebaseStorage.getReference(listitem.getImage()); photoRef.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1930/buggy-version/app.src.main.java.com.uvce.uvceconnect.HomePage_Adapter.java", "BodyUseAPI": ["com.uvce.uvceconnect.Hompage_ListItem.getImage()", "com.google.firebase.storage.FirebaseStorage.getReference(listitem.getImage())"], "Fixed commit": "6f0419eadc90f988cd61f1f8125e634ad663797d", "Url": "https://api.github.com/repos/venki-bellu/UVCEConnectLatest", "Date": "2018-10-17T16:51:38Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((articleList) == null) { timber.log.Timber.d(\"articleList==null\"); return getItemCount(); }else return articleList.size();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5709/buggy-version/app.src.main.java.ru.startandroid.sportnews.userinterface.adapters.RecyclerViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "99bea6e0ad6f38e98def02d4a3d239307d69827b", "Url": "https://api.github.com/repos/SickAndTi/SportNewsApi", "Date": "2018-07-03T15:56:33Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((config.getConfigurationSection(path)) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7352/buggy-version/src.online.lethalsurvival.smc.v0_5.config.YamlHelper.java", "BodyUseAPI": [], "Fixed commit": "c31316c408c2003a718965d74d01eec8d373e83b", "Url": "https://api.github.com/repos/DalBrar/SimpleMC-SDK", "Date": "2018-09-26T01:43:51Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Engine.Lobby.getRoomByName(java.lang.String)", "chat.utils.SessionUtils.getUsername(javax.servlet.http.HttpServletRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((room.getGameManager().getPlayerByName(username)) == null) { if (message == null) { response.setStatus(400); out.flush(); }else { out.print((((\"Hey \" + username) + \"&&&\") + message)); } }else { if ((message == null) || (room.getGameManager().getPlayerByName(username).didGotMessage())) { response.setStatus(400); out.flush(); }else { room.getGameManager().userGotMessage(username); out.print((((\"Hey \" + username) + \"&&&\") + message)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3647/buggy-version/chatWebApp.src.chat.servlets.MessageToDisplayServlet.java", "BodyUseAPI": ["java.io.PrintWriter.print(java.lang.String)", "Engine.Room.getGameManager()", "java.io.PrintWriter.print(java.lang.String)", "room.getGameManager().getPlayerByName(username).didGotMessage()", "room.getGameManager().getPlayerByName(java.lang.String)", "room.getGameManager().userGotMessage(java.lang.String)", "Engine.Room.getGameManager()"], "Fixed commit": "75d82ec23586290edf871db787dabd906003a0b3", "Url": "https://api.github.com/repos/danieltg/TexasHoldemWebApp", "Date": "2018-03-22T12:23:45Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ids.isEmpty()) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4302/buggy-version/src.main.java.com.marcinmajkowski.membership.customer.CustomerRepository.java", "BodyUseAPI": [], "Fixed commit": "0dda1f0c9d2482fe0ddab882cdec5deb2bb46b84", "Url": "https://api.github.com/repos/marcinmajkowski/membership", "Date": "2018-07-28T18:44:36Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getView()) != null) { android.support.design.widget.Snackbar.make(getView(), \"Location not detected. Check that your location is turned on and try again.\", Snackbar.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/260/buggy-version/app.src.main.java.bw.co.josephmpe.handyman_directory.directory.fragments.AutoLocationSearchFragment.java", "BodyUseAPI": [], "Fixed commit": "d6b99dbcc06a71e3f64384d71c9c8d064c2e65ae", "Url": "https://api.github.com/repos/jaympe/demo_app", "Date": "2018-08-26T23:51:28Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(model.ServerImpl.isServerFlag())) { model.ServerImpl.registry.unbind(\"chat\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9204/buggy-version/server.src.model.ServerImpl.java", "BodyUseAPI": [], "Fixed commit": "83484bbab11c71ea8a129f7eaa3e5adf81ab5479", "Url": "https://api.github.com/repos/mokhtar92/ChatApp", "Date": "2018-02-19T17:13:28Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gumtree.data.interfaces.IArray.getElementType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((type == (char.class)) || (type == (java.lang.String.class))) { val = data.toString(); }else { if ((data.getSize()) > 1) { val = data.getIterator().getObjectNext().toString(); }else { val = data.toString(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6159/buggy-version/bragg.nbi.au.gov.ansto.bragg.nbi.server.src.au.gov.ansto.bragg.nbi.server.catalog.CatalogCollectingService.java", "BodyUseAPI": [], "Fixed commit": "75b30b8f69702215f28bd324273ed9f32f8e827a", "Url": "https://api.github.com/repos/Gumtree/gumtree", "Date": "2018-05-09T04:13:30Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.buchlese.bofc.jpa.JpaSubscrIntervalDeliveryDAO.list(org.hibernate.Criteria)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (res.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3397/buggy-version/bofc.src.main.java.net.buchlese.bofc.jpa.JpaSubscrIntervalDeliveryDAO.java", "BodyUseAPI": [], "Fixed commit": "ea42d6a37a9ce77b1a7586988b0ffb5ad4fd987f", "Url": "https://api.github.com/repos/blaurockm/posa", "Date": "2018-07-13T16:12:23Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (path != null) { paths.add(resultSet.getString(\"User_Path\")); userHeights.add(step_length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2426/buggy-version/app.src.main.java.com.example.kelvin.campuspathways.DatabaseConnectionSelect.java", "BodyUseAPI": [], "Fixed commit": "ba3d87517dbd6530f392c0a8467c18230cd755c9", "Url": "https://api.github.com/repos/KelvinJRosado/CampusPathways", "Date": "2018-03-08T21:57:49Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type instanceof java.lang.Class) { typeClass = ((java.lang.Class<?>) (type)); }else if (type instanceof java.lang.reflect.ParameterizedType) { java.lang.reflect.ParameterizedType ptype = ((java.lang.reflect.ParameterizedType) (type)); typeClass = ((java.lang.Class<?>) (ptype.getRawType())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3255/buggy-version/src.main.java.com.cognodyne.dw.cdi.CdiUtil.java", "BodyUseAPI": [], "Fixed commit": "cf9f1fc1a966d9e16cb744af1cc2ce80e9b33e25", "Url": "https://api.github.com/repos/mstoeckel/cdi-bundle", "Date": "2018-01-27T18:40:42Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type instanceof java.lang.Class) { typeClass = ((java.lang.Class<?>) (type)); }else if (type instanceof java.lang.reflect.ParameterizedType) { java.lang.reflect.ParameterizedType ptype = ((java.lang.reflect.ParameterizedType) (type)); typeClass = ((java.lang.Class<?>) (ptype.getRawType())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3255/buggy-version/src.main.java.com.cognodyne.dw.cdi.CdiUtil.java", "BodyUseAPI": [], "Fixed commit": "cf9f1fc1a966d9e16cb744af1cc2ce80e9b33e25", "Url": "https://api.github.com/repos/mstoeckel/cdi-bundle", "Date": "2018-01-27T18:40:42Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (stroke != null) { strokeThickness = stroke.getLineWidth(); strokeMM = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9749/buggy-version/CodenameOne.src.com.codename1.ui.plaf.RoundRectBorder.java", "BodyUseAPI": ["com.codename1.ui.Stroke.getLineWidth()"], "Fixed commit": "e2d72b9faec30de7289aef1bf10b73ccdad7c20d", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2018-10-11T01:18:28Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["vo.getEntity().getClass().getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((annotation == null) || (org.springframework.util.StringUtils.isEmpty(annotation.fkName()))) { return buildError(\"\", \"Nothing got @Associative or without fkName\", RequestStatusEnum.FAIL_FIELD); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/182/buggy-version/controller.src.main.java.com.yonyou.iuap.baseservice.controller.GenericAssoController.java", "BodyUseAPI": [], "Fixed commit": "317fb17a0ecb29e0718753c5e2543e90ed9d49fb", "Url": "https://api.github.com/repos/yonyou-iuap/iuap-pap-baseservice", "Date": "2018-07-13T02:14:04Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (planet.contains(\"eris\")) name = \"planet.Eris\"; else if (planet.contains(\"pluto\")) name = \"planet.Pluto\"; else if (planet.contains(\"ceres\")) name = \"planet.Ceres\"; else if (planet.contains(\"kuiperbelt\")) name = \"planet.kuiperBelt\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/970/buggy-version/src.main.java.com.mjr.planetprogression.item.ResearchPaper.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "0edd13d75446a297fd0b9899df8ed154567ed86e", "Url": "https://api.github.com/repos/MJRLegends/Planet-Progression", "Date": "2018-03-25T18:07:28Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nsDescriptor.getConstituentVnfd()) != null) { fmt.format(\"<b>%s: </b>%d<br>\", \"VNF Count\", nsDescriptor.getConstituentVnfd().size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3260/buggy-version/src.main.java.pt.it.av.atnog.requirements.NSRequirements.java", "BodyUseAPI": ["urn.ietf.params.xml.ns.yang.nfvo.nsd.rev141027.nsd.catalog.Nsd.getConstituentVnfd()", "nsDescriptor.getConstituentVnfd().size()", "java.util.Formatter.format(java.lang.String,java.lang.String,nsDescriptor.getConstituentVnfd().size())"], "Fixed commit": "cacff1311bbedc72ddd5f7a021c884ba48bb7c1e", "Url": "https://api.github.com/repos/5GinFIRE/nfv-requirements-extractor", "Date": "2018-08-22T10:00:52Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nsDescriptor.getConstituentVnfd()) != null) { java.util.List<urn.ietf.params.xml.ns.yang.nfvo.nsd.rev141027.nsd.descriptor.ConstituentVnfd> vl = nsDescriptor.getConstituentVnfd(); for (urn.ietf.params.xml.ns.yang.nfvo.nsd.rev141027.nsd.descriptor.ConstituentVnfd constituentVnfd : vl) { fmt.format(\"<b>%s: </b>%s<br>\", \"VnfdId\", constituentVnfd.getVnfdIdRef()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3260/buggy-version/src.main.java.pt.it.av.atnog.requirements.NSRequirements.java", "BodyUseAPI": ["urn.ietf.params.xml.ns.yang.nfvo.nsd.rev141027.nsd.catalog.Nsd.getConstituentVnfd()"], "Fixed commit": "cacff1311bbedc72ddd5f7a021c884ba48bb7c1e", "Url": "https://api.github.com/repos/5GinFIRE/nfv-requirements-extractor", "Date": "2018-08-22T10:00:52Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.openmrs.module.pihcore.deploy.bundle.liberia.LiberiaMetadataBundle.ALLOWED_LOCALES.contains(org.openmrs.util.LocaleUtility.getDefaultLocale().toString())) { properties.put(OpenmrsConstants.GLOBAL_PROPERTY_LOCALE_ALLOWED_LIST, org.openmrs.module.pihcore.deploy.bundle.liberia.LiberiaMetadataBundle.ALLOWED_LOCALES); }else { properties.put(OpenmrsConstants.GLOBAL_PROPERTY_LOCALE_ALLOWED_LIST, (((org.openmrs.module.pihcore.deploy.bundle.liberia.LiberiaMetadataBundle.ALLOWED_LOCALES) + \", \") + (org.openmrs.util.LocaleUtility.getDefaultLocale().toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6242/buggy-version/api.src.main.java.org.openmrs.module.pihcore.deploy.bundle.liberia.LiberiaMetadataBundle.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(OpenmrsConstants.GLOBAL_PROPERTY_LOCALE_ALLOWED_LIST,java.lang.String)"], "Fixed commit": "92288c12dbeba2bda5336f29a5feb87614669913", "Url": "https://api.github.com/repos/PIH/openmrs-module-pihcore", "Date": "2018-01-18T21:08:21Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Consts.DATAPATH.toFile().exists()) { for (boulder_trainings_app.data.enums.BoulderSection section : boulder_trainings_app.data.enums.BoulderSection.values()) { boulders.addAll(boulder_trainings_app.BoulderFileManager.loadBoulderSection(date, section)); } boulder_trainings_app.BoulderFileManager.LOGGER.log(java.util.logging.Level.INFO, \"Loaded {0} problems for date {1}\", new java.lang.Object[]{ boulders.size(), date.toString() }); }else { Consts.DATAPATH.toFile().mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4790/buggy-version/src.boulder_trainings_app.BoulderFileManager.java", "BodyUseAPI": [], "Fixed commit": "0ccd91819dbc14bcfbb5be3e595b738b763e088c", "Url": "https://api.github.com/repos/Obliviously/boulder_app", "Date": "2018-07-24T09:34:19Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (person == null) throw new net.nortlam.research.exception.MissingInformationException(\"No Person were found\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6929/buggy-version/src.main.java.net.nortlam.research.Resource.java", "BodyUseAPI": [], "Fixed commit": "9e821889a5b840b2f845db2ba4545499565284a5", "Url": "https://api.github.com/repos/maltron/hellomongo", "Date": "2018-02-27T17:36:58Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (listener)) { listener.onError(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5617/buggy-version/core.src.main.java.org.web3j.protocol.websocket.WebSocketClient.java", "BodyUseAPI": [], "Fixed commit": "3f5c4d405b602d37e4a074006a0b59164b1eb0ce", "Url": "https://api.github.com/repos/dmikel/web3j", "Date": "2018-10-05T09:57:01Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (listener)) { listener.onClose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5617/buggy-version/core.src.main.java.org.web3j.protocol.websocket.WebSocketClient.java", "BodyUseAPI": [], "Fixed commit": "3f5c4d405b602d37e4a074006a0b59164b1eb0ce", "Url": "https://api.github.com/repos/dmikel/web3j", "Date": "2018-10-05T09:57:01Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, control.Command>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (command == null) return Command.UNKNOWN; else return command;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3284/buggy-version/control.Commands.java", "BodyUseAPI": [], "Fixed commit": "77451f2a6817ba0d31749e620d87456594052338", "Url": "https://api.github.com/repos/marcushio/EscapeFromHod", "Date": "2018-01-04T00:38:28Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tokens.length) == 2) secondWord = tokens[1];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3284/buggy-version/control.Commands.java", "BodyUseAPI": [], "Fixed commit": "77451f2a6817ba0d31749e620d87456594052338", "Url": "https://api.github.com/repos/marcushio/EscapeFromHod", "Date": "2018-01-04T00:38:28Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cl.uchile.ing.adi.quicklooklib.QuicklookActivity.getItem()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (item == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2277/buggy-version/Quicklook.quicklooklib.src.main.java.cl.uchile.ing.adi.quicklooklib.QuicklookActivity.java", "BodyUseAPI": [], "Fixed commit": "22cec6feca569b7a33268b4fd760ced1afb42d88", "Url": "https://api.github.com/repos/Ucampus/quicklook", "Date": "2018-09-27T14:54:25Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!played) { boolean disFlag = false; if (true) { for (int i = 0; i < 4; i++) { for (int n = 0; n < 5; n++) { if (((hand[n]) == (disPile[0][i])) && ((hand[n]) != 0)) { disPile = addDisPile(disPile, hand[n], i); hand[n] = 0; disFlag = true; break; } } if (disFlag) { break; } } } if (!disFlag) { int largest = 0; int loc = 0; for (int i = 0; i < 5; i++) { if (((hand[i]) > largest) && ((hand[i]) != 13)) { largest = hand[i]; loc = i; } } for (int i = 0; i < 4; i++) { if ((disPile[0][i]) == 0) { disPile = addDisPile(disPile, largest, i); hand[loc] = 0; disFlag = true; break; } } } if (!disFlag) { disPile = addDisPile(disPile, hand[1], 0); hand[1] = 0; } flag = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3277/buggy-version/src.Player.java", "BodyUseAPI": [], "Fixed commit": "02a5854fd97b3f8dffdc1a66950596586e08cb31", "Url": "https://api.github.com/repos/ETEThan/MyCardGame", "Date": "2018-01-23T18:11:42Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!played) { for (int i = 0; i < 5; i++) { for (int n = 0; n < 4; n++) { if ((hand[i]) == 13) { (board.bPiles[0][n])++; board.cleanBPiles(); hand[i] = 0; played = true; break; } } if (played) { break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3277/buggy-version/src.Player.java", "BodyUseAPI": [], "Fixed commit": "02a5854fd97b3f8dffdc1a66950596586e08cb31", "Url": "https://api.github.com/repos/ETEThan/MyCardGame", "Date": "2018-01-23T18:11:42Z"},
{"Line": "=>3520", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (me.dkzwm.widget.srl.utils.ScrollCompat.canChildScrollDown(mScrollTargetView)) me.dkzwm.widget.srl.utils.ScrollCompat.scrollCompat(mScrollTargetView, delta);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4323/buggy-version/core.src.main.java.me.dkzwm.widget.srl.SmoothRefreshLayout.java", "BodyUseAPI": ["me.dkzwm.widget.srl.utils.ScrollCompat.scrollCompat(android.view.View,float)"], "Fixed commit": "c4c417114cb1e9f47a0db99e871585651ff64cb6", "Url": "https://api.github.com/repos/dkzwm/SmoothRefreshLayout", "Date": "2018-01-09T09:08:49Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((show.getMovie()) == null) { java.lang.System.out.println(\"That movie id does not exist\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4366/buggy-version/CinemaMatics2018-pro.src.org.cinematics.handlers.Program.java", "BodyUseAPI": [], "Fixed commit": "de6bf18e47c716dfa089204f9067d43a459c5ae0", "Url": "https://api.github.com/repos/tomsan1/cinemamatics2018-pro", "Date": "2018-05-04T09:14:39Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((param.getName()) != null) { if (param.getName().equals(resolvedParameter.getName())) { matched = true; break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8465/buggy-version/modules.swagger-parser.src.main.java.io.swagger.parser.processors.ParameterProcessor.java", "BodyUseAPI": ["param.getName().equals(resolvedParameter.getName())", "io.swagger.models.parameters.Parameter.getName()"], "Fixed commit": "903ea558f83e492aef08716a4182e8abd848b464", "Url": "https://api.github.com/repos/swagger-api/swagger-parser", "Date": "2018-05-04T06:05:52Z"},
{"Line": "=>477", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bytedeco.javacpp.tools.InfoMap.getFirst(type.cppName,boolean)", "org.bytedeco.javacpp.tools.TokenIndexer.get()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((((info != null) && ((info.pointerTypes) != null)) && ((info.pointerTypes.length) > 0)) && (!(type.cppName.contains(\"::\")))) && ((token.spacing.length()) > 0)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8752/buggy-version/src.main.java.org.bytedeco.javacpp.tools.Parser.java", "BodyUseAPI": [], "Fixed commit": "b6fa91a2037cd85ec6afefda86fbcdc66d111235", "Url": "https://api.github.com/repos/louxiu/javacpp", "Date": "2018-02-09T15:21:23Z"},
{"Line": "=>678", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_parms._lambda_search) { _state.updateState(beta, _state.gslvr().getGradient(beta)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3745/buggy-version/h2o-algos.src.main.java.hex.glm.GLM.java", "BodyUseAPI": [], "Fixed commit": "a9e16b2492b9f26c04d978abbdf9d5a08b51f68d", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2018-09-18T23:33:24Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mp) != null) { song.setTime(mp.getCurrentPosition()); song.saveInBackground(); timerHandler.postDelayed(runnableCode, 1000); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/375/buggy-version/app.src.main.java.com.example.bertogonz3000.surround.ControllerPlayingActivity.java", "BodyUseAPI": [], "Fixed commit": "3c1a7d391430570655ac05a2df3d8c74505b78a3", "Url": "https://api.github.com/repos/BGHProductions/Surround", "Date": "2018-08-02T21:02:55Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getActivity().isFinishing())) dismiss();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2293/buggy-version/app.src.tmg.java.de.escoand.readdaily.PlayerDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "6b397aab21ae3a8b81acfe5e0a5c393a785d6cd5", "Url": "https://api.github.com/repos/escoand/dailyread", "Date": "2017-11-18T13:38:42Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((data != null) && (!(data.isEmpty()))) { mAdapter.addAll(data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3657/buggy-version/app.src.main.java.com.example.android.ufcapp.FightersActivity.java", "BodyUseAPI": ["com.example.android.ufcapp.FighterAdapter.addAll(java.util.List<com.example.android.ufcapp.Fighter>)"], "Fixed commit": "9c610316fe65b88db161fce013e758d05b5641dd", "Url": "https://api.github.com/repos/davidnuno/UFCapp", "Date": "2018-03-02T05:54:22Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((literalDatatype.getJavaClass()) == (java.math.BigDecimal.class)) { return new java.math.BigDecimal(lexForm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5153/buggy-version/PA4RDF-bean.src.main.java.org.xenei.pa4rdf.bean.handlers.LiteralHandler.java", "BodyUseAPI": [], "Fixed commit": "3ab96ffe786d1e46f81d50dd3b64868770fc001c", "Url": "https://api.github.com/repos/Claudenw/PA4RDF", "Date": "2018-04-01T12:21:25Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((literalDatatype.getJavaClass()) == (java.math.BigInteger.class)) { return new java.math.BigInteger(lexForm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5153/buggy-version/PA4RDF-bean.src.main.java.org.xenei.pa4rdf.bean.handlers.LiteralHandler.java", "BodyUseAPI": [], "Fixed commit": "3ab96ffe786d1e46f81d50dd3b64868770fc001c", "Url": "https://api.github.com/repos/Claudenw/PA4RDF", "Date": "2018-04-01T12:21:25Z"},
{"Line": "=>555", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((progressDialog) != null) progressDialog.dismiss();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9459/buggy-version/kustomersdk.src.main.java.com.kustomer.kustomersdk.Activities.KUSChatActivity.java", "BodyUseAPI": [], "Fixed commit": "efa4429d8503bed10711e4d1f9fecc579d920c25", "Url": "https://api.github.com/repos/kustomer/customer-android", "Date": "2018-08-08T13:54:39Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index == 0) groupOpcodes.add(java.lang.String.format(anyLogicGroupOpCodesListTemplate[index], eventSymbol.getFullyQualifiedId(), 1)); else if (index == 1) groupOpcodes.add(java.lang.String.format(anyLogicGroupOpCodesListTemplate[index], eventSymbol.getFullyQualifiedId(), ((com.myreward.parser.metamodel.AnyMetaModel) (ordinalMetaModel)).ordinal)); else if (index == 3) { if ((this.parent) instanceof com.myreward.parser.metamodel.EventMetaModel) { com.myreward.parser.metamodel.EventMetaModel parentEventMetaModel = ((com.myreward.parser.metamodel.EventMetaModel) (this.parent)); if ((parentEventMetaModel.getRewardMetaModel()) != null) { groupOpcodes.add(java.lang.String.format(anyLogicGroupOpCodesListTemplate[index], eventSymbol.getFullyQualifiedId())); } } }else groupOpcodes.add(java.lang.String.format(anyLogicGroupOpCodesListTemplate[index], eventSymbol.getFullyQualifiedId()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3560/buggy-version/src.main.java.com.myreward.parser.metamodel.GroupMetaModel.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,eventSymbol.getFullyQualifiedId(),((com.myreward.parser.metamodel.AnyMetaModel) (ordinalMetaModel)).ordinal)", "java.util.List<java.lang.String>.add(java.lang.String)", "java.util.List<java.lang.String>.add(java.lang.String)", "java.lang.String.format(java.lang.String,eventSymbol.getFullyQualifiedId())", "java.util.List<java.lang.String>.add(java.lang.String)", "java.util.List<java.lang.String>.add(java.lang.String)", "java.lang.String.format(java.lang.String,eventSymbol.getFullyQualifiedId())", "java.lang.String.format(java.lang.String,eventSymbol.getFullyQualifiedId(),int)"], "Fixed commit": "c47b4b70a5c77af5d642cc29d60ce2cbf15cf7a9", "Url": "https://api.github.com/repos/vippulpanditgit/myrewardengine", "Date": "2018-02-15T23:17:39Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (source == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1491/buggy-version/library.src.main.java.com.parse.FacebookController.java", "BodyUseAPI": [], "Fixed commit": "f35bd6cf1da437695c22bcd2d0ddea724a47b464", "Url": "https://api.github.com/repos/r21nomi/ParseFacebookUtils-Android", "Date": "2018-05-18T12:19:14Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reduceService) == null) { reduceService = new services.ReduceService(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5683/buggy-version/source.beans.ReduceAgent.java", "BodyUseAPI": [], "Fixed commit": "3fd113606664722e14a9327fd5da09945dc1777b", "Url": "https://api.github.com/repos/milosrs/Intelligent-Agents", "Date": "2018-09-12T19:39:16Z"},
{"Line": "=>1988", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getBoolean(Helper.SET_CAPITALIZE,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (capitalize) { if ((mentionedAccountsAdded.size()) == 1) { toot_content.setSelection(toot_content.getText().length()); }else { if ((cursorReply > 0) && (cursorReply < (toot_content.getText().length()))) toot_content.setSelection(cursorReply); else toot_content.setSelection(toot_content.getText().length()); } }else { toot_content.setSelection(toot_content.getText().length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2711/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.activities.TootActivity.java", "BodyUseAPI": [], "Fixed commit": "55627cdf29cb7472a3d4169f39e2f6e19fd410bc", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2018-02-09T07:49:49Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(s3url.isEmpty())) { s3CB.setEndpointConfiguration(new com.amazonaws.client.builder.AwsClientBuilder.EndpointConfiguration(s3url, s3region)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1407/buggy-version/src.main.java.edu.harvard.iq.dataverse.dataaccess.S3AccessIO.java", "BodyUseAPI": [], "Fixed commit": "b7c69c2f3db41eddc0a535798357c512949393e8", "Url": "https://api.github.com/repos/poikilotherm/dataverse", "Date": "2018-09-21T12:33:13Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.conch.peer.Peers.isUseNATService()) { peer = org.conch.peer.Peers.findOrCreatePeer(((java.lang.String) (request.get(\"announcedAddress\"))), false); }else { peer = org.conch.peer.Peers.findOrCreatePeer(req.getRemoteAddr(), false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6669/buggy-version/src.java.org.conch.peer.PeerServlet.java", "BodyUseAPI": [], "Fixed commit": "54bcd68479bfb3d693391671097f9ae935113d87", "Url": "https://api.github.com/repos/Sharders/sharder-chain", "Date": "2018-09-06T11:10:53Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (thread instanceof java.lang.Thread) { edu.ucla.pls.wiretap.recorders.BinaryLogger logger = fromThread(((java.lang.Thread) (thread))); logger.end(); event[((offset)++)] = edu.ucla.pls.wiretap.recorders.BinaryLogger.JOIN; write(logger.id); output(inst); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9453/buggy-version/src.main.java.edu.ucla.pls.wiretap.recorders.BinaryLogger.java", "BodyUseAPI": [], "Fixed commit": "33907efc841529bf80ef29bc3d8de2c0207566ad", "Url": "https://api.github.com/repos/ucla-pls/wiretap", "Date": "2018-07-12T11:26:29Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSinchServiceInterface) != null) { context.unbindService(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6975/buggy-version/android.src.main.java.com.bluecall.sinch.PhoneActivityManager.java", "BodyUseAPI": [], "Fixed commit": "cb17d168e1ef9287f8e51b6dc12c1558b039b269", "Url": "https://api.github.com/repos/tamarinda/sinch-rtc-native-module", "Date": "2018-03-13T15:35:26Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((update.getMessage().getText()) != null) && (!(update.getMessage().getText().isEmpty()))) { new java.lang.Thread(() -> sendResponse(update, message)).start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6151/buggy-version/src.com.ivanjermakov.Bot.java", "BodyUseAPI": ["com.ivanjermakov.Bot.sendResponse(org.telegram.telegrambots.api.objects.Update,com.ivanjermakov.Message)", "java.lang.Thread.start()"], "Fixed commit": "753a4990583fce0c6059bcde2609bdc3baba3e8f", "Url": "https://api.github.com/repos/ivanjermakov/fit-quest-telegram-bot", "Date": "2018-05-17T21:03:53Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((update.getMessage().getText().length()) > 50) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6151/buggy-version/src.com.ivanjermakov.Bot.java", "BodyUseAPI": [], "Fixed commit": "753a4990583fce0c6059bcde2609bdc3baba3e8f", "Url": "https://api.github.com/repos/ivanjermakov/fit-quest-telegram-bot", "Date": "2018-05-17T21:03:53Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (playedCard == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5775/buggy-version/src.org.academiadecodigo.bootcamp.server.game.Sueca.java", "BodyUseAPI": [], "Fixed commit": "e28c356dfae7e1533c3298c97122300fb73977a1", "Url": "https://api.github.com/repos/ferreiraluis7/SuecaCardGame", "Date": "2018-01-02T16:06:44Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((unbinder) != null) unbinder.unbind();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9740/buggy-version/baselibrary.src.main.java.com.softgarden.baselibrary.base.BaseFragment.java", "BodyUseAPI": [], "Fixed commit": "dc5b2e8bf0d44b81777c4224ae523e9e40b77941", "Url": "https://api.github.com/repos/MirkoWu/BaseLibrary", "Date": "2018-07-12T07:05:28Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((unbinder) != null) unbinder.unbind();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9740/buggy-version/baselibrary.src.main.java.com.softgarden.baselibrary.base.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "dc5b2e8bf0d44b81777c4224ae523e9e40b77941", "Url": "https://api.github.com/repos/MirkoWu/BaseLibrary", "Date": "2018-07-12T07:05:28Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((unbinder) != null) unbinder.unbind();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9740/buggy-version/baselibrary.src.main.java.com.softgarden.baselibrary.base.BaseDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "dc5b2e8bf0d44b81777c4224ae523e9e40b77941", "Url": "https://api.github.com/repos/MirkoWu/BaseLibrary", "Date": "2018-07-12T07:05:28Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((union.size()) == ((previous.size()) + (next.size()))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9680/buggy-version/src.main.java.com.solo.subway.path.Dijkstra.java", "BodyUseAPI": [], "Fixed commit": "252a85ed669d5377e7ac8fcd497868b281c12a25", "Url": "https://api.github.com/repos/lcy362/FoxSubway", "Date": "2018-03-23T07:35:38Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Quickplay.INSTANCE.keybinds) != null) params.put(\"keybinds\", gson.toJson(Quickplay.INSTANCE.keybinds));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7351/buggy-version/src.main.java.co.bugg.quickplay.http.HttpRequestFactory.java", "BodyUseAPI": [], "Fixed commit": "5cf123dc90678b6327bcfaf0b5bf5e4a6593e69b", "Url": "https://api.github.com/repos/robere2/Quickplay2.0", "Date": "2018-02-24T20:21:05Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Quickplay.INSTANCE.settings) != null) params.put(\"settings\", gson.toJson(Quickplay.INSTANCE.settings));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7351/buggy-version/src.main.java.co.bugg.quickplay.http.HttpRequestFactory.java", "BodyUseAPI": [], "Fixed commit": "5cf123dc90678b6327bcfaf0b5bf5e4a6593e69b", "Url": "https://api.github.com/repos/robere2/Quickplay2.0", "Date": "2018-02-24T20:21:05Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((Quickplay.INSTANCE.usageStats) != null) && ((Quickplay.INSTANCE.usageStats.statsToken) != null)) params.put(\"token\", Quickplay.INSTANCE.usageStats.statsToken.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7351/buggy-version/src.main.java.co.bugg.quickplay.http.HttpRequestFactory.java", "BodyUseAPI": [], "Fixed commit": "5cf123dc90678b6327bcfaf0b5bf5e4a6593e69b", "Url": "https://api.github.com/repos/robere2/Quickplay2.0", "Date": "2018-02-24T20:21:05Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (storageVolume.getState().equals(Environment.MEDIA_MOUNTED)) { root.flags = (dev.dworks.apps.anexplorer.model.DocumentsContract.Root.FLAG_SUPPORTS_CREATE) | (dev.dworks.apps.anexplorer.model.DocumentsContract.Root.FLAG_SUPPORTS_EDIT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7823/buggy-version/app.src.main.java.dev.dworks.apps.anexplorer.provider.ExternalStorageProvider.java", "BodyUseAPI": [], "Fixed commit": "890db448f6f56acfbd0f924e9d79ecb4ab07dd96", "Url": "https://api.github.com/repos/1hakr/AnExplorer", "Date": "2018-10-08T08:31:12Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((remaining()) == 8) { this.timestampPong = this.readLong(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5907/buggy-version/src.main.java.com.whirvis.jraknet.protocol.status.ConnectedPong.java", "BodyUseAPI": [], "Fixed commit": "7ea7b0541df7ca5f3b7d8df2df9291d6d860f002", "Url": "https://api.github.com/repos/JRakNet/JRakNet", "Date": "2018-10-05T14:42:47Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < 1) { return forward; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8863/buggy-version/grobid-core.src.main.java.org.grobid.core.utilities.TextUtilities.java", "BodyUseAPI": [], "Fixed commit": "a529f40b60ad6a0f82793753e620fdbc1c0e466f", "Url": "https://api.github.com/repos/kermitt2/grobid", "Date": "2018-04-19T06:13:44Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentAsyncTask.getStatus()) == (AsyncTask.Status.FINISHED)) { this.finish(); }else { android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder(this); builder.setMessage(R.string.stop_process_message).setPositiveButton(R.string.yes, new android.content.DialogInterface.OnClickListener() { @java.lang.Override public void onClick(android.content.DialogInterface dialog, int which) { currentAsyncTask.cancel(true); fr.utln.reva.projetanamorphose.ui.activity.ImageResultActivity.this.finish(); } }).setNegativeButton(R.string.no, null); android.app.AlertDialog dialog = builder.create(); dialog.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2437/buggy-version/app.src.main.java.fr.utln.reva.projetanamorphose.ui.activity.ImageResultActivity.java", "BodyUseAPI": ["builder.setMessage(R.string.stop_process_message).setPositiveButton(R.string.yes,android.content.DialogInterface.OnClickListener)", "builder.setMessage(R.string.stop_process_message).setPositiveButton(R.string.yes, new android.content.DialogInterface.OnClickListener() {\n    @java.lang.Override\n    public void onClick(android.content.DialogInterface dialog, int which) {\n        currentAsyncTask.cancel(true);\n        fr.utln.reva.projetanamorphose.ui.activity.ImageResultActivity.this.finish();\n    }\n}).setNegativeButton(R.string.no,<nulltype>)", "android.os.AsyncTask<java.lang.Void, java.lang.Object, java.lang.Void>.cancel(boolean)"], "Fixed commit": "bdf7bc5db949051fc2c00fb00d43caf9836ccddd", "Url": "https://api.github.com/repos/remimomprive/Anamorphose", "Date": "2018-06-09T21:29:47Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasPayload()) { return new io.cognitiveflow.jsonapinator.objects.RelationshipObject(links, this.data, this.meta); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3164/buggy-version/src.main.java.io.cognitiveflow.jsonapinator.builders.RelationshipBuilder.java", "BodyUseAPI": [], "Fixed commit": "bc11de29da9500fca6db16ad0c9a20b5adafd3ee", "Url": "https://api.github.com/repos/cognitiveflow/jsonapinator", "Date": "2018-03-24T04:45:46Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((relatedResource != null) && (relatedResource.hasPayload())) { relationships.add(relatedResource); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3164/buggy-version/src.main.java.io.cognitiveflow.jsonapinator.builders.ResourceBuilder.java", "BodyUseAPI": ["io.cognitiveflow.jsonapinator.builders.ResourceBuilder.add(io.cognitiveflow.jsonapinator.builders.RelationshipBuilder<?>)"], "Fixed commit": "bc11de29da9500fca6db16ad0c9a20b5adafd3ee", "Url": "https://api.github.com/repos/cognitiveflow/jsonapinator", "Date": "2018-03-24T04:45:46Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((boundary.getChildren()) != null) for (org.egov.swm.domain.model.Boundary child : boundary.getChildren()) { result.addAll(findAll(child)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/418/buggy-version/swm.swm-services.src.main.java.org.egov.swm.domain.service.BoundaryService.java", "BodyUseAPI": ["org.egov.swm.domain.model.Boundary.getChildren()"], "Fixed commit": "f6085bbbcf72f40367bfb8c56f2c143bb0357fdf", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2018-01-04T06:15:37Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_tripleNotEquals_2) { java.lang.String _name_6 = r.getName(); java.lang.String _name_7 = msg_1.getSender().getName(); boolean _equals_2 = com.google.common.base.Objects.equal(_name_6, _name_7); solvedR = _equals_2; }else { it.unige.dibris.trace_expression_language.tExp.Role _async_sender_1 = msg_1.getAsync_sender(); boolean _tripleNotEquals_3 = _async_sender_1 != null; if (_tripleNotEquals_3) { java.lang.String _name_8 = r.getName(); java.lang.String _name_9 = msg_1.getReceiver().getName(); boolean _equals_3 = com.google.common.base.Objects.equal(_name_8, _name_9); solvedR = _equals_3; }else { solvedR = (com.google.common.base.Objects.equal(r.getName(), msg_1.getSender().getName())) || (com.google.common.base.Objects.equal(r.getName(), msg_1.getReceiver().getName())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4699/buggy-version/it.unige.dibris.trace_expression_language.xtend-gen.it.unige.dibris.trace_expression_language.validation.MonitoringSafePartitionCheck.java", "BodyUseAPI": [], "Fixed commit": "8ef01d54a0adf8735e91af4115993e2f9dca2b22", "Url": "https://api.github.com/repos/AngeloFerrando/trace_expression_plugin_eclipse", "Date": "2018-08-08T23:10:49Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_tripleNotEquals) { java.lang.String _name_2 = r.getName(); java.lang.String _name_3 = msg.getSender().getName(); boolean _equals = com.google.common.base.Objects.equal(_name_2, _name_3); solvedL = _equals; }else { it.unige.dibris.trace_expression_language.tExp.Role _async_sender = msg.getAsync_sender(); boolean _tripleNotEquals_1 = _async_sender != null; if (_tripleNotEquals_1) { java.lang.String _name_4 = r.getName(); java.lang.String _name_5 = msg.getReceiver().getName(); boolean _equals_1 = com.google.common.base.Objects.equal(_name_4, _name_5); solvedL = _equals_1; }else { solvedL = (com.google.common.base.Objects.equal(r.getName(), msg.getSender().getName())) || (com.google.common.base.Objects.equal(r.getName(), msg.getReceiver().getName())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4699/buggy-version/it.unige.dibris.trace_expression_language.xtend-gen.it.unige.dibris.trace_expression_language.validation.MonitoringSafePartitionCheck.java", "BodyUseAPI": [], "Fixed commit": "8ef01d54a0adf8735e91af4115993e2f9dca2b22", "Url": "https://api.github.com/repos/AngeloFerrando/trace_expression_plugin_eclipse", "Date": "2018-08-08T23:10:49Z"}]}
