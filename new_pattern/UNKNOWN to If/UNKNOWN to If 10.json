{"UNKNOWN to If":[{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (authentication instanceof org.springframework.security.authentication.AnonymousAuthenticationToken) { return new com.intelliarts.conflab.api.User(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4427/buggy-version/src.main.java.com.intelliarts.conflab.core.service.UserService.java", "BodyUseAPI": [], "Fixed commit": "420a59a401ee7e42fc4dbf4805c6418607ec573b", "Url": "https://api.github.com/repos/vitalii-dmytruk/ConfLab", "Date": "2015-11-27T13:19:52Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (memFunc.isType2()) { if (memFunc.isUpper()) { value = upperFiringLevel; }else { value = lowerFiringLevel; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2444/buggy-version/src.main.java.com.ravi.fuzzyToolBox.ProductTnorm.java", "BodyUseAPI": ["com.ravi.fuzzyToolBox.MemFunctions.MemFunc.isUpper()"], "Fixed commit": "6434bea00605394290bc46fa494d1d9a3f448fc7", "Url": "https://api.github.com/repos/ravikchi/FuzzyToolBox", "Date": "2017-08-02T14:34:41Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.module.mdrtb.service.db.HibernateMdrtbDAO.getUserLocations(org.openmrs.User,org.openmrs.Location)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (locale != null) { getSession().delete(locale); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5003/buggy-version/api.src.main.java.org.openmrs.module.mdrtb.service.db.HibernateMdrtbDAO.java", "BodyUseAPI": ["org.hibernate.Session.delete(org.openmrs.module.mdrtb.service.db.UserLocation)"], "Fixed commit": "58342447540078b393078b71a72006e40ed7cfda", "Url": "https://api.github.com/repos/bespokeinteractive/mdrtb-app", "Date": "2017-11-14T11:41:58Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result != null) { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6424/buggy-version/docking-frames-core.src.bibliothek.gui.dock.control.relocator.DefaultDockRelocator.java", "BodyUseAPI": [], "Fixed commit": "41d2ab4d21b380e0bc67ff5b131042c9b320082b", "Url": "https://api.github.com/repos/Benoker/DockingFrames", "Date": "2012-08-16T15:05:59Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((aux.getPersonal()) != null) if (aux.getPersonal().getIdPersonal().equals(idPersonal)) { pertenece.add(aux); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6785/buggy-version/src.java.edu.uv.controller.LoginController.java", "BodyUseAPI": ["java.util.List<edu.uv.model.pojos.Academia>.add(edu.uv.model.pojos.Academia)", "aux.getPersonal().getIdPersonal().equals(int)", "aux.getPersonal().getIdPersonal()", "edu.uv.model.pojos.Academia.getPersonal()"], "Fixed commit": "fb5a9f24d64a7a43aa55603ce711db1792fa68fa", "Url": "https://api.github.com/repos/DaFreddyIniguez/tallerii", "Date": "2014-06-18T01:09:30Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((a.getPersonal()) != null) if (a.getPersonal().getIdPersonal().equals(idPersonal)) { idAcademia = a.getIdAcademia(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6785/buggy-version/src.java.edu.uv.controller.LoginController.java", "BodyUseAPI": ["edu.uv.model.pojos.Academia.getPersonal()", "a.getPersonal().getIdPersonal().equals(int)", "a.getPersonal().getIdPersonal()", "edu.uv.model.pojos.Academia.getIdAcademia()"], "Fixed commit": "fb5a9f24d64a7a43aa55603ce711db1792fa68fa", "Url": "https://api.github.com/repos/DaFreddyIniguez/tallerii", "Date": "2014-06-18T01:09:30Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (wikisearch == null) { return urls; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2338/buggy-version/src.main.java.com.codeu.wikisearch.service.SearchService.java", "BodyUseAPI": [], "Fixed commit": "ae451ee55fb61c523d8f8af5f2a3161f2d72132b", "Url": "https://api.github.com/repos/jcbartlett25/codeu-final-project", "Date": "2016-08-09T18:31:45Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((view.getTag(R.id.animation_fade_animator)) instanceof com.nineoldandroids.animation.ValueAnimator) { com.nineoldandroids.animation.ValueAnimator previousAnimator = ((com.nineoldandroids.animation.ValueAnimator) (view.getTag(R.id.animation_fade_animator))); previousAnimator.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6762/buggy-version/src.org.tomahawk.tomahawk_android.utils.AnimationUtils.java", "BodyUseAPI": ["android.view.View.getTag(R.id.animation_fade_animator)"], "Fixed commit": "aa1a537b1bd549bd646e6daef2370f12321bdbe7", "Url": "https://api.github.com/repos/tomahawk-player/tomahawk-android", "Date": "2014-10-27T01:25:54Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((array.length) > 0) assert n < (array.length);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6613/buggy-version/src.main.java.PermSort.java", "BodyUseAPI": [], "Fixed commit": "2cce5c93bb11dec68c742334362fe541bb33942b", "Url": "https://api.github.com/repos/theodor-garbuzov/Sorts", "Date": "2015-10-09T10:20:45Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(requestedResources.isEmpty())) { recreateContainerRequest(requestedResources, loopCounter, resourceRequestor, removedContainerRequests); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/177/buggy-version/engine.src.main.java.com.datatorrent.stram.BlacklistBasedResourceRequestHandler.java", "BodyUseAPI": ["com.datatorrent.stram.BlacklistBasedResourceRequestHandler.recreateContainerRequest(java.util.Map<com.datatorrent.stram.StreamingContainerAgent.ContainerStartRequest, org.apache.commons.lang3.tuple.MutablePair<java.lang.Integer, org.apache.hadoop.yarn.client.api.AMRMClient.ContainerRequest>>,int,com.datatorrent.stram.ResourceRequestHandler,java.util.List<org.apache.hadoop.yarn.client.api.AMRMClient.ContainerRequest>)"], "Fixed commit": "893551b02a5ebe86abbb976dddd6f1d6d87aa2e3", "Url": "https://api.github.com/repos/sanjaypujare/apex-core", "Date": "2016-12-25T07:25:31Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (d == (Direction.LEFT)) { }else if (d == (Direction.RIGHT)) { }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5487/buggy-version/src.GamePanel.java", "BodyUseAPI": [], "Fixed commit": "d68fd2342694eee753d524859b455f10d00c34be", "Url": "https://api.github.com/repos/ChrisPereira/Tetris", "Date": "2014-01-06T01:27:12Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((wPayResponse.getDataPickUpCode()) != null) { resPostData.append(\"dataPickUpCode=\").append(java.net.URLEncoder.encode(wPayResponse.getDataPickUpCode(), com.enstage.wibmo.sdk.inapp.InAppShellHepler.charSet)).append('&'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5728/buggy-version/wibmoSDK.src.main.java.com.enstage.wibmo.sdk.inapp.InAppShellHepler.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char)", "java.lang.StringBuilder.append(java.lang.String)", "java.net.URLEncoder.encode(wPayResponse.getDataPickUpCode(),java.lang.String)", "com.enstage.wibmo.sdk.inapp.pojo.WPayResponse.getDataPickUpCode()"], "Fixed commit": "14b79d0f18cac3354264bc1f208dea6cf2711ce5", "Url": "https://api.github.com/repos/wibmo/wibmo-iap-sdk-android", "Date": "2016-02-11T13:47:36Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((wPayResponse.getMsgHash()) != null) { resPostData.append(\"msgHash=\").append(java.net.URLEncoder.encode(wPayResponse.getMsgHash(), com.enstage.wibmo.sdk.inapp.InAppShellHepler.charSet)).append('&'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5728/buggy-version/wibmoSDK.src.main.java.com.enstage.wibmo.sdk.inapp.InAppShellHepler.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.net.URLEncoder.encode(wPayResponse.getMsgHash(),java.lang.String)", "java.lang.StringBuilder.append(char)", "com.enstage.wibmo.sdk.inapp.pojo.WPayResponse.getMsgHash()"], "Fixed commit": "14b79d0f18cac3354264bc1f208dea6cf2711ce5", "Url": "https://api.github.com/repos/wibmo/wibmo-iap-sdk-android", "Date": "2016-02-11T13:47:36Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((wPayResponse.getWibmoTxnId()) != null) { resPostData.append(\"wibmoTxnId=\").append(java.net.URLEncoder.encode(wPayResponse.getWibmoTxnId(), com.enstage.wibmo.sdk.inapp.InAppShellHepler.charSet)).append('&'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5728/buggy-version/wibmoSDK.src.main.java.com.enstage.wibmo.sdk.inapp.InAppShellHepler.java", "BodyUseAPI": ["com.enstage.wibmo.sdk.inapp.pojo.WPayResponse.getWibmoTxnId()", "java.lang.StringBuilder.append(java.lang.String)", "java.net.URLEncoder.encode(wPayResponse.getWibmoTxnId(),java.lang.String)", "java.lang.StringBuilder.append(char)"], "Fixed commit": "14b79d0f18cac3354264bc1f208dea6cf2711ce5", "Url": "https://api.github.com/repos/wibmo/wibmo-iap-sdk-android", "Date": "2016-02-11T13:47:36Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cards.isEmpty()) { return cardsDrawn; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3474/buggy-version/src.com.rachum.amir.skyhiking.Deck.java", "BodyUseAPI": [], "Fixed commit": "ff26ea913dc423e4f0911a93e7c790cf4fdb107e", "Url": "https://api.github.com/repos/Nurdok/Sky-Hiking", "Date": "2012-06-30T20:55:19Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.base.Optional.fromNullable(parent.getFirstChild().getFirstChild())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((annotation.isPresent()) && ((annotation.get().getType()) == (com.puppycrawl.tools.checkstyle.api.TokenTypes.ANNOTATION))) { final com.google.common.base.Optional<com.puppycrawl.tools.checkstyle.api.DetailAST> overrideToken = com.google.common.base.Optional.fromNullable(annotation.get().findFirstToken(TokenTypes.IDENT)); if ((overrideToken.isPresent()) && (\"Override\".equals(overrideToken.get().getText()))) { overridden = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7365/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.naming.ParameterNameCheck.java", "BodyUseAPI": ["annotation.get().findFirstToken(TokenTypes.IDENT)", "com.google.common.base.Optional.fromNullable(annotation.get().findFirstToken(TokenTypes.IDENT))", "com.google.common.base.Optional<com.puppycrawl.tools.checkstyle.api.DetailAST>.get()"], "Fixed commit": "75bbb441800de900e268cfa5ee82a64966b405b2", "Url": "https://api.github.com/repos/MEZk/checkstyle", "Date": "2015-12-09T19:54:41Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["db.selector(com.jimo.mycost.model.TimeRecord.class).where(\"start_time\", \">\", com.jimo.mycost.util.JimoUtil.getDateBefore(0)).findAll()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (timeRecords != null) { getTimeDayItems(timeRecords); dayTimeItemAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/240/buggy-version/android-app.app.src.main.java.com.jimo.mycost.ui.TimeCostActivity.java", "BodyUseAPI": ["com.jimo.mycost.ui.TimeCostActivity.getTimeDayItems(java.util.List<com.jimo.mycost.model.TimeRecord>)"], "Fixed commit": "a08c6db0276dff5bc13c3fc1a575a4c10d0b0a36", "Url": "https://api.github.com/repos/jimolonely/MyCost", "Date": "2017-12-25T12:41:23Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Yaka.tabIdent.chercherIdent(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(i.estVar())) { Compil.Yaka.afficherErreur((nom + \" n'est pas une variable\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/887/buggy-version/Compil.Expression.java", "BodyUseAPI": [], "Fixed commit": "b9593d2d6c7138ff4be41967435503ef1cbd9049", "Url": "https://api.github.com/repos/miuhaki/ProjCompil", "Date": "2014-04-08T18:39:45Z"},
{"Line": "=>598", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newStart) { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(\"yyyyMMddHHmmss\"); newFileName = sdf.format(new java.util.Date()); com.mendhak.gpslogger.common.Session.setCurrentFileName(newFileName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6886/buggy-version/GPSLogger.src.com.mendhak.gpslogger.GpsLoggingService.java", "BodyUseAPI": [], "Fixed commit": "575a559ab8241356c429678ec54e17d0b6af2782", "Url": "https://api.github.com/repos/mendhak/gpslogger", "Date": "2012-04-06T10:01:20Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recyclerView) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/823/buggy-version/app.src.main.java.de.gebatzens.sia.fragment.SubstPagerFragment.java", "BodyUseAPI": [], "Fixed commit": "685c6fd6a965daab3fe2792a0331f550661d17da", "Url": "https://api.github.com/repos/Cedgetec/SchulinfoApp-android", "Date": "2017-02-11T18:21:53Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (method.equals(\"xor\")) { rbitmap.util.entry.bitmapBool(rbitmap.util.entry.TYPE_XOR, args); }else if (method.equals(\"new\")) { rbitmap.util.entry.bitmapNew(args); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6223/buggy-version/src.main.java.rbitmap.util.entry.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "749f3b512654e8853fb91a4c184034e1743693d0", "Url": "https://api.github.com/repos/diida/rbitmap", "Date": "2015-08-19T01:31:51Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((exc instanceof javax.xml.ws.WebServiceException) || (exc instanceof java.net.ConnectException)) { throw exc; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5651/buggy-version/integration.src.main.java.com.adp.smartconnect.oraclefusion.compgarn.pqq.PqqFileHandler.java", "BodyUseAPI": [], "Fixed commit": "1d66431f957a747d80e0cb8d3d7f8a290cf891fb", "Url": "https://api.github.com/repos/evergerepo/hcmintegration", "Date": "2017-12-05T22:49:43Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Long.parseLong(this.getInput())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (number > ((java.lang.Long.MAX_VALUE) - 1)) { setResult(\"Your number is too big.\"); }else { while (true) { if (number >= twoInDegree) twoInDegree *= 2; else break; } setResult(java.lang.Long.toString(twoInDegree)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3283/buggy-version/src.taskPack.Task108.java", "BodyUseAPI": [], "Fixed commit": "56f5c05e82bca8a2f4893a4db49f71fbff928eec", "Url": "https://api.github.com/repos/pavlyukv/JavaTasksApp", "Date": "2017-04-22T17:54:08Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.os.operando.garum.utils.Cache.getParserForType(java.lang.Class<?>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (typeSerializer != null) { field.set(this, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2001/buggy-version/garum.src.main.java.com.os.operando.garum.models.PrefModel.java", "BodyUseAPI": [], "Fixed commit": "5547cccf86b25113202eb2a5ff6df3e46cd1b552", "Url": "https://api.github.com/repos/operando/Garum", "Date": "2016-04-09T06:48:44Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (t.getIsPrintable()) { IC.Main.PrintToken(t.getValue(), t.getTag(), t.left, t.right); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1659/buggy-version/src.IC.Main.java", "BodyUseAPI": ["IC.Main.PrintToken(t.getValue(),t.getTag(),t.left,t.right)", "IC.Parser.Token.getTag()", "IC.Parser.Token.getValue()"], "Fixed commit": "069a6a4d368f4bf2a55e8d66ceeac33babf9f3cf", "Url": "https://api.github.com/repos/liricooli/Compi", "Date": "2014-11-14T18:02:31Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MainActivity.mSocket.connected()) == false) { MainActivity.mSocket.connect(Constants.CALLBACK_TYPE_MAIN_ACTIVITY); do { java.lang.Thread.sleep(100); } while ((MainActivity.mSocket.connected()) == false ); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6140/buggy-version/app.src.main.java.com.example.taek.commutingchecker.ui.MainFragment.java", "BodyUseAPI": [], "Fixed commit": "a5d76c16d67bc29340d87831c30d1c89676577f3", "Url": "https://api.github.com/repos/eldbxor/CommutingChecker", "Date": "2016-11-16T16:51:27Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MainActivity.mSocket.isServersPublicKeyInitialized()) == false) { MainActivity.mSocket.getServersRsaPublicKey(); do { java.lang.Thread.sleep(100); } while ((MainActivity.mSocket.isServersPublicKeyInitialized()) == false ); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6140/buggy-version/app.src.main.java.com.example.taek.commutingchecker.ui.MainFragment.java", "BodyUseAPI": [], "Fixed commit": "a5d76c16d67bc29340d87831c30d1c89676577f3", "Url": "https://api.github.com/repos/eldbxor/CommutingChecker", "Date": "2016-11-16T16:51:27Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tier.getCloudletSubmittedList().size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cloudlets > 1) runningVms = cloudlets;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5262/buggy-version/Cloud-Profiling-Simulation.src.de.hpi_web.cloudSim.profiling.utilization.UtilManager.java", "BodyUseAPI": [], "Fixed commit": "d810f63327c0fb95300e6bea18e1bd7c1c59c45c", "Url": "https://api.github.com/repos/JannikStreek/Cloud-Multiple-Tiers-Simulation", "Date": "2012-07-31T20:25:10Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sameServer) { return com.netflix.client.Utils.isPresentAsCause(e, getRetriableExceptions()); }else { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7945/buggy-version/ribbon-core.src.main.java.com.netflix.client.DefaultLoadBalancerRetryHandler.java", "BodyUseAPI": [], "Fixed commit": "acf3004c39678b3b66ae7c6e3dd6b8b50f7c6e73", "Url": "https://api.github.com/repos/elandau/ribbon", "Date": "2014-09-12T01:03:56Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((keyUpEvent.getNativeEvent().getKeyCode()) == (KeyCodes.KEY_ESCAPE)) { org.iabako.client.ui.layout.widget.dialogbox.IabakoDialogBox.hide(); org.iabako.client.navigation.NavigationController.getInstance().closePopups(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7976/buggy-version/src.main.java.org.iabako.client.ui.layout.template.IabakoRootPage.java", "BodyUseAPI": [], "Fixed commit": "8356288737275b471e6a4f109484a761e23bc239", "Url": "https://api.github.com/repos/iabakoproject/iabako", "Date": "2017-10-13T14:41:17Z"},
{"Line": "=>507", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((requestHeader.getSysFlag()) & (com.alibaba.rocketmq.common.sysflag.MessageSysFlag.CompressedFlag)) == (com.alibaba.rocketmq.common.sysflag.MessageSysFlag.CompressedFlag)) { msg.setBody(com.alibaba.rocketmq.common.UtilAll.uncompress(msg.getBody())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3826/buggy-version/rocketmq-client.src.main.java.com.alibaba.rocketmq.client.impl.MQClientAPIImpl.java", "BodyUseAPI": [], "Fixed commit": "665006180c1dd90e1f21d6e66452b22f0da1419b", "Url": "https://api.github.com/repos/lizhanhui/Alibaba_RocketMQ", "Date": "2017-04-06T10:40:04Z"},
{"Line": "=>471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (topicPublishInfo != null) { com.alibaba.rocketmq.common.message.MessageQueue mqChosen = producer.selectOneMessageQueue(topicPublishInfo, brokerName); retryBrokerName = mqChosen.getBrokerName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3826/buggy-version/rocketmq-client.src.main.java.com.alibaba.rocketmq.client.impl.MQClientAPIImpl.java", "BodyUseAPI": ["com.alibaba.rocketmq.client.impl.producer.DefaultMQProducerImpl.selectOneMessageQueue(com.alibaba.rocketmq.client.impl.producer.TopicPublishInfo,java.lang.String)"], "Fixed commit": "665006180c1dd90e1f21d6e66452b22f0da1419b", "Url": "https://api.github.com/repos/lizhanhui/Alibaba_RocketMQ", "Date": "2017-04-06T10:40:04Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (game.getK1().getClient().getIp().equals(ip)) return game;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3500/buggy-version/KServer.src.Server.KServer.java", "BodyUseAPI": [], "Fixed commit": "28ed4643de0949ca3bd579bb5a6118e31c220e86", "Url": "https://api.github.com/repos/TheHiddenCodders/KangarooFighter", "Date": "2015-11-12T21:18:16Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.ironbeast.sdk.IBPrefService.load(java.lang.String,long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lastTick == (LAST_TICK_RESET_VALUE)) { lastTick = curr; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/366/buggy-version/ironbeastsdk.src.main.java.io.ironbeast.sdk.BackOff.java", "BodyUseAPI": [], "Fixed commit": "8cd2ee5a5a232c7dbf6e994ed84fcc2f74929053", "Url": "https://api.github.com/repos/ironSource/ironbeast-android", "Date": "2016-07-06T11:47:06Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.saldo) >= valor) this.saldo = (this.saldo) - (valor + (valor * 0.001)); else throw new br.ufc.banco.conta.excecoes.SIException(numero, valor);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5998/buggy-version/src.br.ufc.banco.conta.ContaImposto.java", "BodyUseAPI": [], "Fixed commit": "8a2cbe1483a75a7ef18c92f9b59d2c5ca0faed0d", "Url": "https://api.github.com/repos/TPII20152/SB03", "Date": "2015-12-02T15:18:24Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((movementState) == (MovementState.SUPER_JUMP)) { velocity.y = -3; }else { velocity.y = -2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5572/buggy-version/src.main.java.niktgar.tod.entity.PlayerEntity.java", "BodyUseAPI": [], "Fixed commit": "3c1ff7348ae885f4717c83d5376207ee0a1044c9", "Url": "https://api.github.com/repos/garjust/tod-hack", "Date": "2012-06-10T19:13:37Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["niktgar.tod.block.Block.bound()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (blockBox.isInside(new niktgar.tod.geometry.Vector(((entity.bound().ulX()) + 5), entity.bound().ulY()))) { entity.collidedTop(block); }else { entity.collidedLeft(block); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5572/buggy-version/src.main.java.niktgar.tod.block.BlockLayer.java", "BodyUseAPI": ["niktgar.tod.entity.Entity.collidedTop(niktgar.tod.block.Block)", "niktgar.tod.entity.Entity.collidedLeft(niktgar.tod.block.Block)"], "Fixed commit": "3c1ff7348ae885f4717c83d5376207ee0a1044c9", "Url": "https://api.github.com/repos/garjust/tod-hack", "Date": "2012-06-10T19:13:37Z"},
{"Line": "=>553", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((citation.hasCustomUrls()) || ((citation.getCitationProperty(\"otherIds\")) instanceof java.util.Vector)) { out.println(\"\\t\\t\\t</div>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3241/buggy-version/citations.citations-impl.impl.src.java.org.sakaiproject.citation.impl.CitationListAccessServlet.java", "BodyUseAPI": [], "Fixed commit": "fc5e891c3f9923444433cdf200c6f96d045aa3b7", "Url": "https://api.github.com/repos/bjones86/sakai", "Date": "2016-03-31T13:50:10Z"},
{"Line": "=>519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((citation.hasCustomUrls()) || ((citation.getCitationProperty(\"otherIds\")) instanceof java.util.Vector)) { out.println(\"\\t\\t\\t<div class=\\\"itemAction links\\\" style=\\\"width:20%\\\">\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3241/buggy-version/citations.citations-impl.impl.src.java.org.sakaiproject.citation.impl.CitationListAccessServlet.java", "BodyUseAPI": [], "Fixed commit": "fc5e891c3f9923444433cdf200c6f96d045aa3b7", "Url": "https://api.github.com/repos/bjones86/sakai", "Date": "2016-03-31T13:50:10Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((blockStatus[(k - z1)][l]) == (spieler[1])) { playeralive[1] = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8333/buggy-version/src.Spielfeld.Spielfeld.java", "BodyUseAPI": [], "Fixed commit": "6a90b60a2a7a336a8816e04e2393b7165d9d8ad6", "Url": "https://api.github.com/repos/propra12-orga/gruppe37", "Date": "2012-07-03T08:21:29Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((blockStatus[k][(l + z1)]) == (spieler[0])) { playeralive[0] = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8333/buggy-version/src.Spielfeld.Spielfeld.java", "BodyUseAPI": [], "Fixed commit": "6a90b60a2a7a336a8816e04e2393b7165d9d8ad6", "Url": "https://api.github.com/repos/propra12-orga/gruppe37", "Date": "2012-07-03T08:21:29Z"},
{"Line": "=>479", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((blockStatus[k][(l - z1)]) == (spieler[0])) { playeralive[0] = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8333/buggy-version/src.Spielfeld.Spielfeld.java", "BodyUseAPI": [], "Fixed commit": "6a90b60a2a7a336a8816e04e2393b7165d9d8ad6", "Url": "https://api.github.com/repos/propra12-orga/gruppe37", "Date": "2012-07-03T08:21:29Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((blockStatus[(k + z1)][l]) == (spieler[1])) { playeralive[1] = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8333/buggy-version/src.Spielfeld.Spielfeld.java", "BodyUseAPI": [], "Fixed commit": "6a90b60a2a7a336a8816e04e2393b7165d9d8ad6", "Url": "https://api.github.com/repos/propra12-orga/gruppe37", "Date": "2012-07-03T08:21:29Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cruzroja.creuroja.JSONParser.parseLocations(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((locations != null) && (!(locations.isEmpty()))) { com.cruzroja.creuroja.JSONParser.saveToDisk(getContext(), data, isFijo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2130/buggy-version/src.com.cruzroja.creuroja.LocationsLoader.java", "BodyUseAPI": [], "Fixed commit": "bd6f5827998d4400555f000de05023803589dd73", "Url": "https://api.github.com/repos/darthsuicune/CreuRoja", "Date": "2013-07-31T14:28:58Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (units.contains(unit)) { this.addGold(((int) ((unit.getPurchaseCost()) * 0.66))); if (unit.getSelected()) { unit.toggleSelected(); } this.units.remove(unit); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3169/buggy-version/core.src.com.fantasticfive.game.Player.java", "BodyUseAPI": ["com.fantasticfive.game.Player.addGold(((int) ((unit.getPurchaseCost()) * 0.66)))", "java.util.List<com.fantasticfive.game.Unit>.remove(com.fantasticfive.game.Unit)", "com.fantasticfive.game.Unit.getSelected()", "com.fantasticfive.game.Unit.getPurchaseCost()", "com.fantasticfive.game.Unit.toggleSelected()"], "Fixed commit": "1a6c68217fdc5f5d10080a54384fc76697449f87", "Url": "https://api.github.com/repos/JorinTielen/ProjectHex", "Date": "2017-10-29T13:57:05Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.block.Block.getState()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((f.getInventory().getResult()) == null) f.getInventory().setResult(item); else com.sk89q.craftbook.util.ItemUtil.addToStack(f.getInventory().getResult(), item);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1338/buggy-version/src.main.java.com.sk89q.craftbook.circuits.Pipes.java", "BodyUseAPI": ["f.getInventory().setResult(org.bukkit.inventory.ItemStack)", "org.bukkit.block.Furnace.getInventory()", "f.getInventory().getResult()", "org.bukkit.block.Furnace.getInventory()", "com.sk89q.craftbook.util.ItemUtil.addToStack(f.getInventory().getResult(),org.bukkit.inventory.ItemStack)"], "Fixed commit": "e0c07eb52020e67e65c173c6e8108bceabaead31", "Url": "https://api.github.com/repos/MCRUS/craftbook", "Date": "2013-01-27T09:11:49Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((events) == null) { android.widget.Toast.makeText(getContext(), \"Voc\u00ea ainda n\u00e3o criou nenhum evento, que tal criar um agora?\", Toast.LENGTH_LONG).show(); android.support.v4.app.FragmentTransaction fragmentTransaction = getActivity().getSupportFragmentManager().beginTransaction(); fragmentTransaction.replace(R.id.content_frame, new com.mathheals.euvou.controller.showPlaceRanking.ShowTop5Rank()); fragmentTransaction.addToBackStack(null); fragmentTransaction.commit(); }else { java.util.List<java.util.Map<java.lang.String, java.lang.String>> eventList = new java.util.ArrayList<java.util.Map<java.lang.String, java.lang.String>>(); for (model.Event e : events) eventList.add(createEvent(\"Nome\", e.getNameEvent())); android.widget.SimpleAdapter simpleAdapter = new android.widget.SimpleAdapter(getActivity(), eventList, android.R.layout.simple_list_item_1, new java.lang.String[]{ \"Nome\" }, new int[]{ android.R.id.text1 }); listView.setAdapter(simpleAdapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1289/buggy-version/app.src.main.java.com.mathheals.euvou.controller.search_event.ListEvents.java", "BodyUseAPI": [], "Fixed commit": "5887348e5759e6b25abbffab8b9a8cf4a11d34ad", "Url": "https://api.github.com/repos/italopaiva/EuVou", "Date": "2015-11-29T22:49:30Z"},
{"Line": "=>1753", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.pentaho.di.repository.RepositoryElementInterface.getObjectId()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (id == null) { id = getObjectId(element); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5094/buggy-version/src.org.pentaho.di.repository.jcr.JCRRepository.java", "BodyUseAPI": [], "Fixed commit": "cd9b2b6fc128d6b4aa4affc89bb4efd2c99b8a3b", "Url": "https://api.github.com/repos/bmorrise/pdi-dataservice-plugin", "Date": "2009-12-11T16:33:57Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Queue<pneumaticCraft.common.network.AbstractPacket>.peek()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (packet != null) { if (packet.canHandlePacketAlready(packet, PneumaticCraft.proxy.getPlayer())) { pneumaticCraft.common.network.AbstractPacket.timeoutTimer = 0; packet.handleClientSide(packet, PneumaticCraft.proxy.getPlayer()); pneumaticCraft.common.network.AbstractPacket.pending.remove(); }else { (pneumaticCraft.common.network.AbstractPacket.timeoutTimer)++; if ((pneumaticCraft.common.network.AbstractPacket.timeoutTimer) > 40) { pneumaticCraft.common.network.AbstractPacket.pending.remove(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2109/buggy-version/src.pneumaticCraft.common.network.AbstractPacket.java", "BodyUseAPI": ["pneumaticCraft.common.network.AbstractPacket.handleClientSide(pneumaticCraft.common.network.AbstractPacket,PneumaticCraft.proxy.getPlayer())", "pneumaticCraft.common.network.AbstractPacket.canHandlePacketAlready(pneumaticCraft.common.network.AbstractPacket,PneumaticCraft.proxy.getPlayer())"], "Fixed commit": "a713a8fce85cde8bcd0e6e9351348a389c45d716", "Url": "https://api.github.com/repos/MineMaarten/PneumaticCraft", "Date": "2016-01-21T11:50:09Z"},
{"Line": "=>1144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (user == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4238/buggy-version/src.main.java.dk.frv.eavdam.io.derby.DerbyDBInterface.java", "BodyUseAPI": [], "Fixed commit": "3f4eb2ab548d592c2c45f439d5cc0066a8af5f3d", "Url": "https://api.github.com/repos/dma-graveyard/EAVDAM", "Date": "2011-11-18T10:43:34Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(importDir.exists())) importDir.mkdirs();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4238/buggy-version/src.main.java.dk.frv.eavdam.io.FTPHandler.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "3f4eb2ab548d592c2c45f439d5cc0066a8af5f3d", "Url": "https://api.github.com/repos/dma-graveyard/EAVDAM", "Date": "2011-11-18T10:43:34Z"},
{"Line": "=>827", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jgit.lib.Repository.resolve(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (treeId == null) { return list; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1242/buggy-version/src.main.java.com.gitblit.tickets.BranchTicketService.java", "BodyUseAPI": [], "Fixed commit": "ab9c0ce1bbd67dbb1236312123a3e24a74e097c6", "Url": "https://api.github.com/repos/gitblit/gitblit", "Date": "2014-09-17T20:05:42Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (toughness == (-1)) java.lang.System.exit(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6197/buggy-version/src.minesweeper.Minesweeper.java", "BodyUseAPI": [], "Fixed commit": "c3462bf3bba5bd55b2ff1d6cc875fe7c26f56d75", "Url": "https://api.github.com/repos/ritz301/Minesweeper", "Date": "2016-01-07T16:59:31Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((doComparison) == null) doComparison = args.getFields().hasComparators();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6711/buggy-version/cascading-core.src.main.java.cascading.pipe.assembly.FirstBy.java", "BodyUseAPI": [], "Fixed commit": "2411dfebf496c942117fc1f3eb0d3c10a0a21639", "Url": "https://api.github.com/repos/cwensel/cascading", "Date": "2015-02-04T18:40:22Z"},
{"Line": "=>956", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.RadioGroup.getCheckedRadioButtonId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (selectSort == (R.id.races_detail_sort_date)) { sortByDate(); listRaceDetail = parseSortByDate(); }else if (selectSort == (R.id.races_detail_sort_time)) { sortByTime(); listRaceDetail = parseSortByTimeOrLength(); }else { sortByLength(); listRaceDetail = parseSortByTimeOrLength(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/56/buggy-version/runningRaceHisotry.src.main.java.com.runningracehisotry.RacesDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "689e4300d0579a5afa3fe9ee84d5aa48888491a1", "Url": "https://api.github.com/repos/nvhaiwork/RunningRaceHisotry", "Date": "2015-05-16T13:16:15Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((newEditor != null) && ((currentEditor) != null)) { org.eclipse.ui.IEditorInput newInput = newEditor.getEditorInput(); if (newInput instanceof org.eclipse.ui.part.FileEditorInput) { org.eclipse.ui.IEditorInput oldInput = currentEditor.getEditorInput(); if (oldInput instanceof org.eclipse.ui.part.FileEditorInput) { org.eclipse.core.resources.IProject newProject = ((org.eclipse.ui.part.FileEditorInput) (newInput)).getFile().getProject(); org.eclipse.core.resources.IProject oldProject = ((org.eclipse.ui.part.FileEditorInput) (oldInput)).getFile().getProject(); if (newProject.equals(oldProject)) { force = false; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3895/buggy-version/plugins.de.ovgu.featureide.ui.src.de.ovgu.featureide.ui.statistics.ui.FeatureStatisticsView.java", "BodyUseAPI": ["org.eclipse.ui.IEditorPart.getEditorInput()"], "Fixed commit": "fddc1549987acdf66963d507d3cd84b0ad22b8cc", "Url": "https://api.github.com/repos/FeatureIDE/FeatureIDE", "Date": "2016-01-15T09:17:32Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.PlayerInventory.first(item.getType())", "org.bukkit.inventory.ItemStack.getAmount()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (inventory.getItem(firstFound).getAmount() = amountLeft) { inventory.clear(inventory.first(item.getType())); return firstFound; }else { amountLeft -= inventory.getItem(inventory.first(item.getType())).getAmount(); inventory.clear(inventory.first(item.getType())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8184/buggy-version/src.aor.SimplePlugin.Spell.java", "BodyUseAPI": ["inventory.getItem(inventory.first(item.getType())).getAmount()", "org.bukkit.inventory.PlayerInventory.getItem(inventory.first(item.getType()))", "org.bukkit.inventory.PlayerInventory.first(item.getType())", "org.bukkit.inventory.PlayerInventory.first(item.getType())", "org.bukkit.inventory.PlayerInventory.first(item.getType())", "org.bukkit.inventory.PlayerInventory.clear(inventory.first(item.getType()))", "org.bukkit.inventory.PlayerInventory.clear(inventory.first(item.getType()))"], "Fixed commit": "d48669653663d307c9d24fa48a1712361efaa65a", "Url": "https://api.github.com/repos/Hypersonic/SimplePlugin", "Date": "2011-08-13T03:01:05Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) == 3) { depth = java.lang.Integer.parseInt(args[2]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1341/buggy-version/src.app.AppForSequenceDiagram.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "4b12105cb4af8b13a6743cb5fb58b83acffd5ad2", "Url": "https://api.github.com/repos/xxyicy/SoftwareDevelopmentCourseProject", "Date": "2016-01-14T08:25:38Z"},
{"Line": "=>487", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sharkfw.knowledgeBase.inmemory.InMemo_SN_TX_SemanticTag.getSuperTag()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (oldSuperTag instanceof net.sharkfw.knowledgeBase.inmemory.InMemo_SN_TX_SemanticTag) { ((net.sharkfw.knowledgeBase.inmemory.InMemo_SN_TX_SemanticTag) (oldSuperTag)).removePredicate(SemanticNet.SUBTAG, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8312/buggy-version/src.java.core.net.sharkfw.knowledgeBase.inmemory.InMemo_SN_TX_SemanticTag.java", "BodyUseAPI": [], "Fixed commit": "e001c6c97336c284e478b3e932a4cb8ec897007f", "Url": "https://api.github.com/repos/SharedKnowledge/SharkFW", "Date": "2014-03-03T10:36:22Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((defaultCMsg.isEndOfMsgAdded()) && (defaultCMsg.isEmpty())) { ctx.writeAndFlush(LastHttpContent.EMPTY_LAST_CONTENT); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1031/buggy-version/http.netty.components.org.wso2.carbon.transport.http.netty.src.main.java.org.wso2.carbon.transport.http.netty.listener.ResponseCallback.java", "BodyUseAPI": [], "Fixed commit": "ed86c9d69a0202d8eb1f1626dc5c34f02a197111", "Url": "https://api.github.com/repos/Megala21/carbon-transports", "Date": "2017-01-25T08:01:00Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i0 < ((dimension()) - 1)) { int[][] newBoard = copyArray(); int buf = newBoard[(i0 + 1)][j0]; newBoard[(i0 + 1)][j0] = newBoard[i0][j0]; newBoard[i0][j0] = buf; boardMinPQ.push(new Board(newBoard)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/939/buggy-version/src.Board.java", "BodyUseAPI": [], "Fixed commit": "fa31c649d80ee7ef8a099fe8f60861b5dcda478b", "Url": "https://api.github.com/repos/AlexeyKutepov/Puzzle", "Date": "2015-02-23T07:36:56Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i0 > 0) { int[][] newBoard = copyArray(); int buf = newBoard[(i0 - 1)][j0]; newBoard[(i0 - 1)][j0] = newBoard[i0][j0]; newBoard[i0][j0] = buf; boardMinPQ.push(new Board(newBoard)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/939/buggy-version/src.Board.java", "BodyUseAPI": [], "Fixed commit": "fa31c649d80ee7ef8a099fe8f60861b5dcda478b", "Url": "https://api.github.com/repos/AlexeyKutepov/Puzzle", "Date": "2015-02-23T07:36:56Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (j0 > 0) { int[][] newBoard = copyArray(); int buf = newBoard[i0][(j0 - 1)]; newBoard[i0][(j0 - 1)] = newBoard[i0][j0]; newBoard[i0][j0] = buf; boardMinPQ.push(new Board(newBoard)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/939/buggy-version/src.Board.java", "BodyUseAPI": [], "Fixed commit": "fa31c649d80ee7ef8a099fe8f60861b5dcda478b", "Url": "https://api.github.com/repos/AlexeyKutepov/Puzzle", "Date": "2015-02-23T07:36:56Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (j0 < ((dimension()) - 1)) { int[][] newBoard = copyArray(); int buf = newBoard[i0][(j0 + 1)]; newBoard[i0][(j0 + 1)] = newBoard[i0][j0]; newBoard[i0][j0] = buf; boardMinPQ.push(new Board(newBoard)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/939/buggy-version/src.Board.java", "BodyUseAPI": [], "Fixed commit": "fa31c649d80ee7ef8a099fe8f60861b5dcda478b", "Url": "https://api.github.com/repos/AlexeyKutepov/Puzzle", "Date": "2015-02-23T07:36:56Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sent.contains(n.getBrokerName())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8941/buggy-version/core.src.main.java.org.oxymores.chronix.engine.SenderHelpers.java", "BodyUseAPI": [], "Fixed commit": "3b0a2934f54e5e3c1a3b015447b0303dd1f1e272", "Url": "https://api.github.com/repos/marcanpilami/jChronix", "Date": "2013-11-17T17:12:07Z"},
{"Line": "=>845", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"http://purl.org/escidoc/metadata/ves/content-categories/publisher-version\".equals(file2.getContentCategory())) { return 1; }else { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/754/buggy-version/common_services.citation_style_language_manager.src.main.java.de.mpg.escidoc.services.citation_style_language_manager.MetadataProvider.java", "BodyUseAPI": [], "Fixed commit": "24db9d705b5743a89ee1eea599c84375a70ce4f8", "Url": "https://api.github.com/repos/nims-dpfc/PubMan", "Date": "2015-10-07T09:35:21Z"},
{"Line": "=>748", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file1.getStorage().equals(file2.getStorage())) { if (file1.getContentCategory().equals(file2.getContentCategory())) { return 0; }else { if (\"http://purl.org/escidoc/metadata/ves/content-categories/any-fulltext\".equals(file1.getContentCategoryString())) { return -1; }else if (\"http://purl.org/escidoc/metadata/ves/content-categories/any-fulltext\".equals(file2.getContentCategory())) { return 1; }else if (\"http://purl.org/escidoc/metadata/ves/content-categories/post-print\".equals(file1.getContentCategory())) { return -1; }else if (\"http://purl.org/escidoc/metadata/ves/content-categories/post-print\".equals(file2.getContentCategory())) { return 1; }else if (\"http://purl.org/escidoc/metadata/ves/content-categories/pre-print\".equals(file1.getContentCategory())) { return -1; }else if (\"http://purl.org/escidoc/metadata/ves/content-categories/pre-print\".equals(file2.getContentCategory())) { return 1; }else if (\"http://purl.org/escidoc/metadata/ves/content-categories/publisher-version\".equals(file1.getContentCategory())) { return -1; }else if (\"http://purl.org/escidoc/metadata/ves/content-categories/publisher-version\".equals(file2.getContentCategory())) { return 1; }else { return 1; } } }else if (FileVO.Storage.EXTERNAL_URL.equals(file1.getStorage())) { if (file1.getContentCategory().equals(file2.getContentCategory())) { return 0; }else { if (\"http://purl.org/escidoc/metadata/ves/content-categories/any-fulltext\".equals(file1.getContentCategoryString())) { return -1; }else if (\"http://purl.org/escidoc/metadata/ves/content-categories/any-fulltext\".equals(file2.getContentCategory())) { return 1; }else if (\"http://purl.org/escidoc/metadata/ves/content-categories/post-print\".equals(file1.getContentCategory())) { return -1; }else if (\"http://purl.org/escidoc/metadata/ves/content-categories/post-print\".equals(file2.getContentCategory())) { return 1; }else if (\"http://purl.org/escidoc/metadata/ves/content-categories/pre-print\".equals(file1.getContentCategory())) { return -1; }else if (\"http://purl.org/escidoc/metadata/ves/content-categories/pre-print\".equals(file2.getContentCategory())) { return 1; }else if (\"http://purl.org/escidoc/metadata/ves/content-categories/publisher-version\".equals(file1.getContentCategory())) { return -1; }else if (\"http://purl.org/escidoc/metadata/ves/content-categories/publisher-version\".equals(file2.getContentCategory())) { return 1; }else { return 1; } } }else { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/754/buggy-version/common_services.citation_style_language_manager.src.main.java.de.mpg.escidoc.services.citation_style_language_manager.MetadataProvider.java", "BodyUseAPI": ["java.lang.String.equals(file1.getContentCategoryString())", "FileVO.Storage.EXTERNAL_URL.equals(file1.getStorage())", "java.lang.String.equals(file2.getContentCategory())", "de.mpg.escidoc.services.common.valueobjects.FileVO.getStorage()", "de.mpg.escidoc.services.common.valueobjects.FileVO.getContentCategory()", "de.mpg.escidoc.services.common.valueobjects.FileVO.getContentCategory()", "de.mpg.escidoc.services.common.valueobjects.FileVO.getContentCategory()", "java.lang.String.equals(file2.getContentCategory())", "de.mpg.escidoc.services.common.valueobjects.FileVO.getContentCategory()", "de.mpg.escidoc.services.common.valueobjects.FileVO.getContentCategoryString()", "de.mpg.escidoc.services.common.valueobjects.FileVO.getContentCategory()", "de.mpg.escidoc.services.common.valueobjects.FileVO.getContentCategory()", "java.lang.String.equals(file2.getContentCategory())", "de.mpg.escidoc.services.common.valueobjects.FileVO.getContentCategoryString()", "de.mpg.escidoc.services.common.valueobjects.FileVO.getContentCategory()", "java.lang.String.equals(file1.getContentCategory())", "de.mpg.escidoc.services.common.valueobjects.FileVO.getContentCategory()", "java.lang.String.equals(file1.getContentCategoryString())", "de.mpg.escidoc.services.common.valueobjects.FileVO.getContentCategory()", "de.mpg.escidoc.services.common.valueobjects.FileVO.getContentCategory()", "java.lang.String.equals(file1.getContentCategory())", "java.lang.String.equals(file2.getContentCategory())", "de.mpg.escidoc.services.common.valueobjects.FileVO.getContentCategory()", "de.mpg.escidoc.services.common.valueobjects.FileVO.getContentCategory()", "java.lang.String.equals(file2.getContentCategory())", "de.mpg.escidoc.services.common.valueobjects.FileVO.getContentCategory()", "de.mpg.escidoc.services.common.valueobjects.FileVO.getContentCategory()", "de.mpg.escidoc.services.common.valueobjects.FileVO.getContentCategory()", "java.lang.String.equals(file2.getContentCategory())", "java.lang.String.equals(file2.getContentCategory())", "file1.getContentCategory().equals(file2.getContentCategory())", "java.lang.String.equals(file1.getContentCategory())", "java.lang.String.equals(file2.getContentCategory())", "file1.getContentCategory().equals(file2.getContentCategory())", "de.mpg.escidoc.services.common.valueobjects.FileVO.getContentCategory()", "java.lang.String.equals(file1.getContentCategory())", "java.lang.String.equals(file1.getContentCategory())", "java.lang.String.equals(file1.getContentCategory())", "de.mpg.escidoc.services.common.valueobjects.FileVO.getContentCategory()", "de.mpg.escidoc.services.common.valueobjects.FileVO.getContentCategory()"], "Fixed commit": "24db9d705b5743a89ee1eea599c84375a70ce4f8", "Url": "https://api.github.com/repos/nims-dpfc/PubMan", "Date": "2015-10-07T09:35:21Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((voProject.getSellerId()) != 0) { this.seller.setId(voProject.getSellerId()); this.seller.setName(voProject.getSellerName()); this.seller.setLastName(voProject.getSellerLastname()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8954/buggy-version/webvaadin.src.entities.Project.java", "BodyUseAPI": [], "Fixed commit": "c2fa13cdcc7ea8b8817b4b59281e37c8ff5cca75", "Url": "https://api.github.com/repos/Matias1991/proyecto-grado-2015", "Date": "2015-10-12T02:36:53Z"},
{"Line": "=>1015", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((projectLiquidation.getProject().getSeller().getName()) != null) txtSeller.setValue((((projectLiquidation.getProject().getSeller().getName()) + \" \") + (projectLiquidation.getProject().getSeller().getLastName()))); else txtSeller.setValue(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8954/buggy-version/webvaadin.src.views.liquidation.CreateLiquidationView.java", "BodyUseAPI": ["projectLiquidation.getProject().getSeller().getLastName()", "projectLiquidation.getProject().getSeller().getName()", "com.vaadin.ui.TextField.setValue((((projectLiquidation.getProject().getSeller().getName()) + \" \") + (projectLiquidation.getProject().getSeller().getLastName())))", "projectLiquidation.getProject().getSeller()", "entities.ProjectLiquidation.getProject()", "projectLiquidation.getProject().getSeller()", "entities.ProjectLiquidation.getProject()"], "Fixed commit": "c2fa13cdcc7ea8b8817b4b59281e37c8ff5cca75", "Url": "https://api.github.com/repos/Matias1991/proyecto-grado-2015", "Date": "2015-10-12T02:36:53Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(AwsNetworkParam.INTERNET_GATEWAY_ID.getName())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(\"\".equals(internetGatewayId))) { network.setInternetGatewayId(internetGatewayId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8292/buggy-version/core.src.main.java.com.sequenceiq.cloudbreak.converter.JsonToAwsNetworkConverter.java", "BodyUseAPI": ["com.sequenceiq.cloudbreak.domain.AwsNetwork.setInternetGatewayId(java.lang.String)"], "Fixed commit": "d36095d56ec0c063c3b89d6b98afbf0339f42a98", "Url": "https://api.github.com/repos/sequenceiq/cloudbreak", "Date": "2015-05-05T16:32:05Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(AwsNetworkParam.VPC_ID.getName())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(\"\".equals(vpcId))) { network.setVpcId(vpcId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8292/buggy-version/core.src.main.java.com.sequenceiq.cloudbreak.converter.JsonToAwsNetworkConverter.java", "BodyUseAPI": ["com.sequenceiq.cloudbreak.domain.AwsNetwork.setVpcId(java.lang.String)"], "Fixed commit": "d36095d56ec0c063c3b89d6b98afbf0339f42a98", "Url": "https://api.github.com/repos/sequenceiq/cloudbreak", "Date": "2015-05-05T16:32:05Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((f1) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8486/buggy-version/src.main.java.jp.co.flect.excel2canvas.validator.InputRule.java", "BodyUseAPI": [], "Fixed commit": "bc4e9d15b10874b22b5617077ea135a058ccd559", "Url": "https://api.github.com/repos/shunjikonishi/excel2canvas", "Date": "2014-08-19T02:54:06Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((token.equals(\"comment\")) || (token.equals(\"c\"))) { corpus = (\"(\" + corpus) + \")\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1472/buggy-version/app.src.main.java.danielebaschieri.eu.cantiscout.ChordProParser.java", "BodyUseAPI": [], "Fixed commit": "7c9c0bca475e574f5986712d639d36b735cf4688", "Url": "https://api.github.com/repos/DangerBlack/CantiScout", "Date": "2014-08-18T15:47:30Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!hasMidFloor) { MiddleFloorButton.setDisable(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2951/buggy-version/src.main.java.com.cs3733.teamd.Controller.UserScreenController.java", "BodyUseAPI": [], "Fixed commit": "ecdca10a14e6a3aa14b445b953ff26fa588c1a6d", "Url": "https://api.github.com/repos/3733teamd/Kiosk", "Date": "2017-04-24T17:38:29Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(lessFile.exists())) { return java.util.Collections.emptySet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2789/buggy-version/src.play.modules.less.PlayLessEngine.java", "BodyUseAPI": [], "Fixed commit": "d6c9475f032df9e1a0081c7d09a54a1eaa9f3367", "Url": "https://api.github.com/repos/lunatech-labs/play-module-less", "Date": "2012-04-25T19:43:26Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isUsed) { m_categories.removeCategory(category); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3204/buggy-version/app.src.main.java.love.florian.jessica.superbudget.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b0593bdd5f5787f87a8bc3a3a218cf4d6b621eaf", "Url": "https://api.github.com/repos/fkorsa/SuperBudget", "Date": "2016-01-23T23:01:52Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reviews == null) || ((reviews.size()) == 0)) return new models.review.AverageReview();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3097/buggy-version/src.main.java.services.ReviewService.java", "BodyUseAPI": [], "Fixed commit": "c651543a6a55fb7410000f2fe2b731a277191fd4", "Url": "https://api.github.com/repos/sokkalingam/java-webservice-jaxrs-gemstore", "Date": "2016-04-04T15:30:38Z"},
{"Line": "=>596", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.internal.formatter.CommentsPreparator.tokenStartingAt(node.getStartPosition())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (startIndex > 1) startTokeen.breakBefore();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8519/buggy-version/org.eclipse.jdt.core.formatter.org.eclipse.jdt.internal.formatter.CommentsPreparator.java", "BodyUseAPI": [], "Fixed commit": "96ac3161361ec93613427b7884ce516a34299658", "Url": "https://api.github.com/repos/eclipse/eclipse.jdt.core", "Date": "2015-08-02T20:10:30Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (listener != null) listener.onItemClick(adapterView, view, i, l);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4700/buggy-version/src.com.jcw.ListViewMenu.MenuListView.java", "BodyUseAPI": ["com.jcw.ListViewMenu.OnItemClickListener.onItemClick(android.widget.AdapterView<?>,android.view.View,int,long)"], "Fixed commit": "fc5ec00a05a2747ad66ecac7193ec2996a84d725", "Url": "https://api.github.com/repos/j-c-w/menu-listview", "Date": "2015-04-19T13:12:30Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((constraints.get(aa)) != null) { for (java.lang.String core : constraints.get(aa)) { append(((\"\\t\" + vertexName) + \"->isExecutableOnPE(\")); append(((org.ietr.preesm.experiment.pimm.cppgenerator.utils.CppNameGenerator.getCoreName(core)) + \");\\n\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5363/buggy-version/plugins.org.ietr.preesm.experiment.pimm.cppgenerator.src.org.ietr.preesm.experiment.pimm.cppgenerator.visitor.CPPCodeGenerationVisitor.java", "BodyUseAPI": ["java.util.Map<org.ietr.preesm.experiment.model.pimm.AbstractActor, java.util.Set<java.lang.String>>.get(org.ietr.preesm.experiment.model.pimm.AbstractActor)"], "Fixed commit": "bb0163208ca0e5de73b9db85d32cd1f3c025d1f7", "Url": "https://api.github.com/repos/preesm/preesm", "Date": "2015-01-23T15:46:56Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((callListView.getAdapter()) == null) { callListView.setAdapter(siteCallAdapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5588/buggy-version/app.src.main.java.org.site_monitor.activity.fragment.SiteSettingsActivityFragment.java", "BodyUseAPI": ["android.widget.ListView.setAdapter(org.site_monitor.model.adapter.SiteCallAdapter)"], "Fixed commit": "41aed3046196805f3529bcfd5ddd5d177221f9fa", "Url": "https://api.github.com/repos/norbertmartin12/site-monitor", "Date": "2015-09-23T18:51:22Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fileName == null) { return R.drawable.bird; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3941/buggy-version/app.src.main.java.com.group16.enigma.ChatListAdapter.java", "BodyUseAPI": [], "Fixed commit": "ac30e924c520fcb15ff00240f43911335b562f12", "Url": "https://api.github.com/repos/colevanh/Enigma", "Date": "2016-11-24T05:36:40Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4921/buggy-version/src.CartesianProduct.java", "BodyUseAPI": [], "Fixed commit": "afbe6607e20034dc7d60aec178d95695d42d2d59", "Url": "https://api.github.com/repos/jlbaez/cartesian-product", "Date": "2016-04-20T01:13:23Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.actions.size()) > 1) { for (int i = 0; i < (this.actions.size()); i++) { if (this.actions.get(i).equals(\"Fixed\")) { this.actions.remove(i); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4568/buggy-version/src.main.java.com.emc.procheck.rule.model.StorageComponent.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.remove(int)", "java.util.List<java.lang.String>.size()"], "Fixed commit": "1cd119efefc635f8692dd677ca8f422f8564c092", "Url": "https://api.github.com/repos/vamcily/proactive_healthcheck", "Date": "2016-05-16T07:20:43Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(f.getName().equals(\"password\"))) if (!(f.isKey())) f.set(this, rs.getObject(f.getName()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/9188/buggy-version/src.obj.staticObject.InnerPerson.java", "BodyUseAPI": ["obj.staticObject.Field.set(obj.staticObject.InnerPerson,java.lang.Object)", "obj.staticObject.Field.getName()", "obj.staticObject.Field.isKey()", "java.sql.ResultSet.getObject(f.getName())"], "Fixed commit": "4219541ba3909683e30f1a34df8f621dad76a591", "Url": "https://api.github.com/repos/LionCherry/EPMS", "Date": "2017-11-12T09:31:11Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diffTab.isSelected()) { chooser.getExtensionFilters().add(0, new javafx.stage.FileChooser.ExtensionFilter(\"Diff Files\", \"*.diff\")); chooser.setInitialFileName(((this.getTitle()) + \".diff\")); }else { chooser.setInitialFileName(((this.getTitle()) + \".txt\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/381/buggy-version/src.main.java.de.prob2.ui.states.FullValueStage.java", "BodyUseAPI": [], "Fixed commit": "f1d2d8b0f9c7e3e0110d262a34d22c65f1713268", "Url": "https://api.github.com/repos/bendisposto/prob2-ui", "Date": "2016-11-22T14:00:01Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuffer.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(result)) { result = org.apache.commons.io.IOUtils.toString(stdout); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3753/buggy-version/utils.src.main.java.com.cloud.utils.ssh.SshHelper.java", "BodyUseAPI": [], "Fixed commit": "4b0f39950d63345af083ce53a8cb3377bc2f8081", "Url": "https://api.github.com/repos/nvazquez/cloudstack", "Date": "2016-08-24T12:32:55Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((otherElement.getClass()) != (this.getClass())) { java.lang.System.out.println((((\"classes: \" + (this.getClass())) + \", \") + (otherElement.getClass()))); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5484/buggy-version/Verifier.BPMNConverter.src.bpmnStructure.FlowElement.java", "BodyUseAPI": ["bpmnStructure.FlowElement.getClass()", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "66933666492b1334eb75060aaa6dcd4b2b94f636", "Url": "https://api.github.com/repos/ericmercer/cwp-verification", "Date": "2017-02-15T21:41:58Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((new java.lang.Integer(cm.getChunkId())) != null) { arrList[counter] = cm.getChunkId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6985/buggy-version/src.aether.repl.FileChunkMetadata.java", "BodyUseAPI": ["aether.repl.ChunkMetadata.getChunkId()"], "Fixed commit": "418ea0b1b2eb44102ed35c0c2b58a4ce9f963a65", "Url": "https://api.github.com/repos/vivitsu/Aether", "Date": "2013-12-11T10:50:41Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((friendList) == null) { holder.addFriend.setVisibility(View.VISIBLE); }else { if (friendList.contains(contact.getUser())) { holder.addFriend.setVisibility(View.GONE); }else { holder.addFriend.setVisibility(View.VISIBLE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6681/buggy-version/src.com.example.vconference.ui.adapter.ContactAdapter.java", "BodyUseAPI": [], "Fixed commit": "e2ff7fb7e790ce67936d74f5182168cb0ffb04fa", "Url": "https://api.github.com/repos/mania842/VConference", "Date": "2015-04-20T20:54:22Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (prefix == null) { prefix = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3586/buggy-version/src.tvmv.util.FileUtil.java", "BodyUseAPI": [], "Fixed commit": "8121613cacf52c3f9998d4ee5f052858ee92946f", "Url": "https://api.github.com/repos/samicemalone/tvmv", "Date": "2013-05-11T18:11:39Z"},
{"Line": "=>1543", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(disconnect)) { qora.web.ProfileHelper.getInstance().disconnect(); }else { qora.web.ProfileHelper.getInstance().switchProfileOpt(switchprofile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7488/buggy-version/Qora.src.webserver.WebResource.java", "BodyUseAPI": [], "Fixed commit": "a04f186cb312b2daeffcddea342120070a21b8c8", "Url": "https://api.github.com/repos/Qoracoin/Qora", "Date": "2015-07-19T13:13:58Z"},
{"Line": "=>1631", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["qora.web.ProfileHelper.getInstance().getActiveProfileOpt(javax.servlet.http.HttpServletRequest)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (activeProfileOpt != null) { blogEntry.setLiking(activeProfileOpt.getLikedPosts().contains(signature)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7488/buggy-version/Qora.src.webserver.WebResource.java", "BodyUseAPI": ["activeProfileOpt.getLikedPosts().contains(java.lang.String)", "qora.web.blog.BlogEntry.setLiking(activeProfileOpt.getLikedPosts().contains(signature))", "qora.web.Profile.getLikedPosts()"], "Fixed commit": "a04f186cb312b2daeffcddea342120070a21b8c8", "Url": "https://api.github.com/repos/Qoracoin/Qora", "Date": "2015-07-19T13:13:58Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["database.TransactionParentMap.get(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (bs == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7488/buggy-version/Qora.src.database.TransactionParentMap.java", "BodyUseAPI": [], "Fixed commit": "a04f186cb312b2daeffcddea342120070a21b8c8", "Url": "https://api.github.com/repos/Qoracoin/Qora", "Date": "2015-07-19T13:13:58Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((request) != null) request.rejectPendingVolunteer(m.getParam(ProtocolField.VOLUNTEER_ID).toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6242/buggy-version/server.src.com.eyecall.server.ServerProtocolHandler.java", "BodyUseAPI": [], "Fixed commit": "6606d961cf2dd2cd6d4680b87d8d360c5a92ec0f", "Url": "https://api.github.com/repos/besuikerd/vip", "Date": "2013-12-17T11:02:23Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count > 0) { if ((start >= 7) && ((s.toString().charAt(start)) == ' ')) { if (s.subSequence((start - 7), (start + 1)).toString().equals(\" \")) { backspace = true; span = new java.lang.Object(); spannable = new android.text.SpannableString(s); spannable.setSpan(span, (start - 7), (start - 1), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8634/buggy-version/app.src.main.java.ku00015.devnotes.NoteActivity.java", "BodyUseAPI": [], "Fixed commit": "2abee1b25e82ec16401e52ba0d2b5f156dfc8300", "Url": "https://api.github.com/repos/ku00015/DevNotes", "Date": "2017-12-17T20:05:13Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(toWriteTo.getParentFile().exists())) toWriteTo.getParentFile().mkdirs();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4824/buggy-version/src.inouire.basics.myml.MyMl.java", "BodyUseAPI": ["java.io.File.mkdirs()", "java.io.File.getParentFile()"], "Fixed commit": "b81e290a51fe830c42cf3d3023ab29798b1635d9", "Url": "https://api.github.com/repos/inouire/java-basics", "Date": "2013-07-18T20:31:58Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value.compareTo(java.math.BigDecimal.ZERO)) == 0) return \"0\" + (mode.labelMid);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6596/buggy-version/Nomen.java", "BodyUseAPI": [], "Fixed commit": "0e54497be6809c0e602535a7c6a4bc0c106b84f3", "Url": "https://api.github.com/repos/robertlude/Nomen-Java", "Date": "2014-07-11T14:15:21Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["blackjack.engine.GameContext.getVariable(GameContext.KEY_DEALER_HAND)", "blackjack.engine.GameContext.getVariable(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((dealerHand.isBusted()) && (!(hand.isBusted()))) { result = GameResult.Result.Won; }else if (hand.isBlackJack()) { result = (dealerHand.isBlackJack()) ? GameResult.Result.Tied : GameResult.Result.Won; }else if (playerTicks > dealerTicks) { result = GameResult.Result.Won; }else if (playerTicks == dealerTicks) { result = GameResult.Result.Tied; }else { result = GameResult.Result.Lost; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4323/buggy-version/Java.blackjack.src.blackjack.tree.GameNode.java", "BodyUseAPI": ["blackjack.tree.Hand.isBlackJack()", "blackjack.tree.Hand.isBlackJack()"], "Fixed commit": "dd1d04c7ef046bf16514c23bf617a5f9c03ec755", "Url": "https://api.github.com/repos/paasovaara/blackjack", "Date": "2017-11-13T20:10:39Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (alleleIdx >= 0) { allelesIdx.add(alleleIdx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7408/buggy-version/biodata-tools.src.main.java.org.opencb.biodata.tools.variant.converter.ga4gh.GAVariantFactory.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.add(int)"], "Fixed commit": "0f6de6c333f35920d356d58b9af77713e982917e", "Url": "https://api.github.com/repos/opencb/biodata", "Date": "2015-10-09T15:16:02Z"},
{"Line": "=>663", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.isilon.restapi.IsilonSyncPolicy.getLastJobState()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((targetPolicy.getFoFbState().equals(FOFB_STATES.resync_policy_created)) && (policyState.equals(JobState.finished))) { com.emc.storageos.volumecontroller.impl.BiosCommandResult.createSuccessfulResult(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/19/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.isilon.IsilonMirrorOperations.java", "BodyUseAPI": [], "Fixed commit": "d1c850ee20190d6a1d05a43fd8fd3d909b934368", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-08-24T12:58:30Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((args.size()) == 1) && (args.get(0).getType().isVoid())) { args.remove(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4593/buggy-version/src.common.com.intellij.plugins.haxe.model.type.HaxeTypeResolver.java", "BodyUseAPI": ["java.util.ArrayList<com.intellij.plugins.haxe.model.type.ResultHolder>.remove(int)"], "Fixed commit": "3f6be5b22ead85dcd761681233a5bd995aff0d47", "Url": "https://api.github.com/repos/HaxeFoundation/intellij-haxe", "Date": "2017-09-26T13:13:26Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == optionL) { java.lang.System.out.println(\"specify a programming language with option \\\"-l\\\" when you specify a directory as an input\"); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3672/buggy-version/src.yoshikihigo.commentremover.CommentRemover.java", "BodyUseAPI": [], "Fixed commit": "794c326951446e42886c17f28786ab2a3016955d", "Url": "https://api.github.com/repos/YoshikiHigo/CommentRemover", "Date": "2013-10-27T15:51:30Z"},
{"Line": "=>471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count == numOfBlocks) count = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8143/buggy-version/src.p2p.simulator.core.Simulator.java", "BodyUseAPI": [], "Fixed commit": "bb8139790646ac4d4d35297aa5ee76a98ad49f78", "Url": "https://api.github.com/repos/sarise/PublishSubcribe-ScribeSymphony", "Date": "2011-12-21T18:03:49Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(password.equals(confirm))) { return \"Passwords do not match\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3150/buggy-version/src.main.java.service.implementation.UserServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "a9bf341870321e1e9d0ee9fe7cf158c345df6157", "Url": "https://api.github.com/repos/yuriikiziuk/blog-platform", "Date": "2017-12-13T08:14:37Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (targetIdx == (DEFAULT)) { return target; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8921/buggy-version/src.main.gov.nasa.jpf.jdart.bytecode.TABLESWITCH.java", "BodyUseAPI": [], "Fixed commit": "b0b74187d58807e9fb5dde66adac0e98f205a644", "Url": "https://api.github.com/repos/psycopaths/jdart", "Date": "2016-08-10T15:26:36Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tbCert) != null) { tb.setSigningCertificateData(tbCert.getContents()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4256/buggy-version/Product.Production.Adapters.General.CONNECTAdminGUI.src.main.java.gov.hhs.fha.nhinc.admingui.managed.direct.DirectTrustBundleBean.java", "BodyUseAPI": [], "Fixed commit": "4c20f175618039da93568f9abec526cdf428c5e9", "Url": "https://api.github.com/repos/CONNECT-Solution/CONNECT", "Date": "2014-10-07T13:54:34Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((certFile) != null) { certificate.setData(certFile.getContents()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4256/buggy-version/Product.Production.Adapters.General.CONNECTAdminGUI.src.main.java.gov.hhs.fha.nhinc.admingui.managed.direct.DirectCertBean.java", "BodyUseAPI": [], "Fixed commit": "4c20f175618039da93568f9abec526cdf428c5e9", "Url": "https://api.github.com/repos/CONNECT-Solution/CONNECT", "Date": "2014-10-07T13:54:34Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (start < 0) start = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/137/buggy-version/android.UbiSolar.UbiSolar.src.main.java.com.sintef_energy.ubisolar.fragments.graphs.UsageGraphLineFragment.java", "BodyUseAPI": [], "Fixed commit": "edbb5fc01b7de4b9c968606a74242987ce2253a1", "Url": "https://api.github.com/repos/haavardlian/UbiSolar", "Date": "2014-03-10T16:49:47Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.unpidf.univmobile.data.entities.University.getMobileShibbolethUrl()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (url != null) { url = url.trim(); url = url.replaceAll(\"\\\\s+\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6888/buggy-version/UnivMobile.src.org.unpidf.univmobile.ui.activities.HomeActivity.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "583dca7007ad1fcc210fe52389e8d7f1931b2d52", "Url": "https://api.github.com/repos/univmobile/unm-android", "Date": "2015-09-10T07:52:01Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((game) != null) { return game.getGameStatus(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3243/buggy-version/chaturaji-core.src.main.java.ac.ic.chaturaji.model.Result.java", "BodyUseAPI": [], "Fixed commit": "05481bc6215636cc56e10ccd78f940a1d16e93cd", "Url": "https://api.github.com/repos/samirarabbanian/chaturaji", "Date": "2014-05-15T00:00:12Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (game != null) { game.setGameStatus(gameStatus); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3243/buggy-version/chaturaji-core.src.main.java.ac.ic.chaturaji.model.Result.java", "BodyUseAPI": [], "Fixed commit": "05481bc6215636cc56e10ccd78f940a1d16e93cd", "Url": "https://api.github.com/repos/samirarabbanian/chaturaji", "Date": "2014-05-15T00:00:12Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((filename.charAt(0)) == '/') { srcPath = java.nio.file.Paths.get(filename); if (log.isInfoEnabled()) log.info(((\"Resolving absolute path '\" + srcPath) + \"'.\")); destPath = location.resolve(srcPath.getFileName()); }else { srcPath = centralRepo.resolve(filename); destPath = location.resolve(filename); if (!(java.nio.file.Files.exists(srcPath))) { srcPath = callLocation.resolve(filename); if (log.isInfoEnabled()) log.info(((\"Resolving relative path '\" + srcPath) + \"'.\")); }else if (log.isInfoEnabled()) log.info(((\"Resolving path to central repository '\" + srcPath) + \"'.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3951/buggy-version/cuneiform-core.src.main.java.de.huberlin.wbi.cuneiform.core.cre.LocalThread.java", "BodyUseAPI": ["java.nio.file.Path.resolve(java.lang.String)", "java.nio.file.Path.resolve(java.lang.String)", "java.nio.file.Paths.get(java.lang.String)", "java.nio.file.Path.resolve(java.lang.String)"], "Fixed commit": "09f1208fd32345e7bd09ed4d77e224cc8380b3dd", "Url": "https://api.github.com/repos/joergen7/cuneiform", "Date": "2014-10-15T13:54:45Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((!(d.isDirectory())) && (!(d.mkdir()))) { throw new com.enioka.jqm.tools.JqmInitError((\"could not create log dir \" + (this.rootLogDir))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8988/buggy-version/jqm-all.jqm-engine.src.main.java.com.enioka.jqm.tools.MulticastPrintStream.java", "BodyUseAPI": [], "Fixed commit": "5c253314063eee2984fedf875177c838cc02e6f6", "Url": "https://api.github.com/repos/enioka/jqm", "Date": "2014-06-24T18:05:49Z"},
{"Line": "=>2794", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((content != null) && ((content.length()) == 0)) { json = new org.json.JSONArray(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4204/buggy-version/iNaturalist.src.main.java.org.inaturalist.android.INaturalistService.java", "BodyUseAPI": [], "Fixed commit": "ea02bb26c7e82678251adf703cca6d8203aa3b4a", "Url": "https://api.github.com/repos/inaturalist/iNaturalistAndroid", "Date": "2017-02-01T01:04:48Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(comments.isEmpty())) { long firstResponseTime = (comments.get(0).getCreatedTime().getTime()) - (issue.getCreatedTime().getTime()); distribution.put(issue, firstResponseTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4834/buggy-version/backend.src.main.java.it.unimol.anpr_github_metrics.analytics.Analytics.java", "BodyUseAPI": ["java.util.List<it.unimol.anpr_github_metrics.beans.IssueComment>.get(int)", "comments.get(0).getCreatedTime().getTime()", "comments.get(0).getCreatedTime()"], "Fixed commit": "fa12d5b4cc60c55963cb0201d92b1ba9efab422a", "Url": "https://api.github.com/repos/intersimone999/anpr-github-metrics", "Date": "2017-10-08T13:21:32Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(comments.isEmpty())) { meanReponseTime += (comments.get(0).getCreatedTime().getTime()) - (issue.getCreatedTime().getTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4834/buggy-version/backend.src.main.java.it.unimol.anpr_github_metrics.analytics.Analytics.java", "BodyUseAPI": ["java.util.List<it.unimol.anpr_github_metrics.beans.IssueComment>.get(int)", "comments.get(0).getCreatedTime()", "comments.get(0).getCreatedTime().getTime()"], "Fixed commit": "fa12d5b4cc60c55963cb0201d92b1ba9efab422a", "Url": "https://api.github.com/repos/intersimone999/anpr-github-metrics", "Date": "2017-10-08T13:21:32Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (validSexualityRequest.contains(message.getText())) { sendMessage.setReplyMarkup(ar.com.espherika.MenuKeyboardFactory.getHideKeyboard()); bot.sendControlledMessage(sendMessage, \"\u00bfQu\u00e9 edad tienes?\"); this.chatIdStates.put(message.getChatId(), ar.com.espherika.chatstrategies.BotIntroduceChatStrategy.INTRODUCE_STATE.AGE); return; }else { bot.sendControlledMessage(sendMessage, \"Mis respuestas son limitadas. Usa el teclado que puse para t\u00ed.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8116/buggy-version/myfirstbot.src.main.java.ar.com.espherika.chatstrategies.BotIntroduceChatStrategy.java", "BodyUseAPI": ["org.telegram.telegrambots.api.objects.Message.getChatId()", "java.util.Map<java.lang.Long, ar.com.espherika.chatstrategies.BotIntroduceChatStrategy.INTRODUCE_STATE>.put(message.getChatId(),ar.com.espherika.chatstrategies.BotIntroduceChatStrategy.INTRODUCE_STATE)"], "Fixed commit": "ca3527aaa29729b587f679d2cb2f378f1512a031", "Url": "https://api.github.com/repos/carbonecar/telegrambot_test", "Date": "2016-09-13T22:50:31Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (model.getBestLabels(instanceList).isEmpty()) { return new pl.edu.icm.cermine.bibref.model.BibEntry().setText(text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1478/buggy-version/cermine-impl.src.main.java.pl.edu.icm.cermine.bibref.CRFBibReferenceParser.java", "BodyUseAPI": [], "Fixed commit": "06157ab8d62e9884f3462f625cc74772ab76d218", "Url": "https://api.github.com/repos/CeON/CERMINE", "Date": "2016-04-11T11:13:01Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result != 0) { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2291/buggy-version/src.main.java.org.encog.neural.neat.NEATLink.java", "BodyUseAPI": [], "Fixed commit": "e1970af162b266d8e6eb6fb6e2b1408f32d6f2cf", "Url": "https://api.github.com/repos/encog/encog-java-core", "Date": "2013-02-12T13:10:23Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getFile()) != null) { all.append(item.getFile().getAbsolutePath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7780/buggy-version/src.main.java.de.roth.jsona.database.DocumentCreator.java", "BodyUseAPI": ["de.roth.jsona.model.MusicListItem.getFile()", "java.lang.StringBuffer.append(item.getFile().getAbsolutePath())", "item.getFile().getAbsolutePath()"], "Fixed commit": "d2728e7dd9f36b86de81c1651e0d426b2de5a072", "Url": "https://api.github.com/repos/frankred/jSona", "Date": "2015-12-30T23:57:13Z"},
{"Line": "=>688", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item.getFile()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7780/buggy-version/src.main.java.de.roth.jsona.logic.LogicManagerFX.java", "BodyUseAPI": [], "Fixed commit": "d2728e7dd9f36b86de81c1651e0d426b2de5a072", "Url": "https://api.github.com/repos/frankred/jSona", "Date": "2015-12-30T23:57:13Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cpw.mods.fml.common.FMLCommonHandler.instance().getEffectiveSide()) == (cpw.mods.fml.relauncher.Side.CLIENT)) { return pneumaticCraft.common.fluid.Fluids.getBlock().colorMultiplier(null, 0, 0, 0); }else { return super.getColor(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7428/buggy-version/src.pneumaticCraft.common.fluid.Fluids.java", "BodyUseAPI": [], "Fixed commit": "eff2991d4e8ac5359f3d0b4d8b00bda711ba850d", "Url": "https://api.github.com/repos/MineMaarten/PneumaticCraft", "Date": "2016-01-10T21:16:15Z"},
{"Line": "=>1541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (address.getHostAddress().contains(\":\")) { param.setVip(com.emc.storageos.coordinator.client.service.impl.DualInetAddress.normalizeInet6Address(address.getHostAddress())); }else { param.setVip(address.getHostAddress()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2816/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.DisasterRecoveryService.java", "BodyUseAPI": ["com.emc.storageos.coordinator.client.service.impl.DualInetAddress.normalizeInet6Address(java.lang.String)", "java.net.InetAddress.getHostAddress()", "com.emc.storageos.model.dr.SiteAddParam.setVip(com.emc.storageos.coordinator.client.service.impl.DualInetAddress.normalizeInet6Address(address.getHostAddress()))", "com.emc.storageos.model.dr.SiteAddParam.setVip(java.lang.String)", "java.net.InetAddress.getHostAddress()"], "Fixed commit": "b64cf336ee4198d29d050511235392f5991636f6", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-02-01T16:10:06Z"},
{"Line": "=>779", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ss1.length) == 2) { password = ss1[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3487/buggy-version/src.main.java.core.com.giisoo.core.db.DB.java", "BodyUseAPI": [], "Fixed commit": "b92c43fa6ac3f4bc2beed523a02307573d0fb33a", "Url": "https://api.github.com/repos/s20000/webgiisoo", "Date": "2015-09-10T11:17:28Z"},
{"Line": "=>760", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ss1.length) == 2) { username = ss1[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3487/buggy-version/src.main.java.core.com.giisoo.core.db.DB.java", "BodyUseAPI": [], "Fixed commit": "b92c43fa6ac3f4bc2beed523a02307573d0fb33a", "Url": "https://api.github.com/repos/s20000/webgiisoo", "Date": "2015-09-10T11:17:28Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getRM().getPublicRepository()) == null) { getResponse().setStatus(Status.SERVER_ERROR_NOT_IMPLEMENTED); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6747/buggy-version/modules.rest.src.main.java.org.entrystore.rest.resources.SparqlResource.java", "BodyUseAPI": [], "Fixed commit": "fd02eec0f226bd3d44fa6c983bc5cded334fd35c", "Url": "https://api.github.com/repos/MetaSolutionsAB/entrystore", "Date": "2015-01-20T12:00:01Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sq) == null) sq = new ca.dmdev.dicer.Sequence();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8434/buggy-version/app.src.main.java.ca.dmdev.dicer.RollerFragment.java", "BodyUseAPI": [], "Fixed commit": "43b633df3d6b8c27dc5986aee09f9b82f3710f5b", "Url": "https://api.github.com/repos/themegosh/Dicer", "Date": "2015-12-07T07:24:56Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mShareIntent) != null) { shareActionProvider.setShareIntent(mShareIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6975/buggy-version/app.src.main.java.it.jaschke.alexandria.BookDetail.java", "BodyUseAPI": [], "Fixed commit": "6aee9fc52d0412b96289b0499787a24ce868040e", "Url": "https://api.github.com/repos/eamontaaffe/Alexandria", "Date": "2015-08-25T05:12:43Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shareActionProvider) != null) { shareActionProvider.setShareIntent(shareIntent); }else { mShareIntent = shareIntent; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6975/buggy-version/app.src.main.java.it.jaschke.alexandria.BookDetail.java", "BodyUseAPI": [], "Fixed commit": "6aee9fc52d0412b96289b0499787a24ce868040e", "Url": "https://api.github.com/repos/eamontaaffe/Alexandria", "Date": "2015-08-25T05:12:43Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Parameters.problemType.equalsIgnoreCase(\"INT\")) || (Parameters.problemType.equalsIgnoreCase(\"RK\"))) { child1.selections = Chromo.determineSelection(child1); child2.selections = Chromo.determineSelection(child2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6151/buggy-version/GAHW2Rep.gahw2.Chromo.java", "BodyUseAPI": [], "Fixed commit": "6d8196f7bb4fcb70c1333139927c3b685fa2975b", "Url": "https://api.github.com/repos/jeberst/GARepresentation", "Date": "2015-03-18T00:44:03Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((root) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7274/buggy-version/heap.Heap.java", "BodyUseAPI": [], "Fixed commit": "74c31920fb15eb63928fd6d420d5ac331ab27c96", "Url": "https://api.github.com/repos/lennytmp/learning", "Date": "2015-12-13T11:25:05Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["heap.Heap.pullTop()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (topNode == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7274/buggy-version/heap.Heap.java", "BodyUseAPI": [], "Fixed commit": "74c31920fb15eb63928fd6d420d5ac331ab27c96", "Url": "https://api.github.com/repos/lennytmp/learning", "Date": "2015-12-13T11:25:05Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.RandomAccessFile.read(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (bytesRead == (bytes.length)) { return bytesRead; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8115/buggy-version/src.main.java.com.martensigwart.fakeload.RandomAccessDiskInputSimulator.java", "BodyUseAPI": [], "Fixed commit": "e6c9174dc34a9609fac8945ec37bd77ca5142773", "Url": "https://api.github.com/repos/msigwart/fakeload", "Date": "2017-09-17T21:38:29Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.RandomAccessFile.read(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (bytesRead < (bytes.length)) { com.martensigwart.fakeload.RandomAccessDiskInputSimulator.log.debug(\"End of file reached: Resetting file pointer\"); file.seek(0); file.read(bytes, bytesRead, ((bytes.length) - bytesRead)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8115/buggy-version/src.main.java.com.martensigwart.fakeload.RandomAccessDiskInputSimulator.java", "BodyUseAPI": ["java.io.RandomAccessFile.read(byte[],int,int)"], "Fixed commit": "e6c9174dc34a9609fac8945ec37bd77ca5142773", "Url": "https://api.github.com/repos/msigwart/fakeload", "Date": "2017-09-17T21:38:29Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.badlogic.gdx.utils.SharedLibraryLoader.isIos) { com.watabou.noosa.Game.scene().pause(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7061/buggy-version/core.src.com.watabou.pixeldungeon.windows.WndGame.java", "BodyUseAPI": [], "Fixed commit": "5981e37f7f8748239fad2cbdec0d1d5fc416df0d", "Url": "https://api.github.com/repos/Arcnor/pixel-dungeon-gdx", "Date": "2014-11-12T21:45:10Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((zoomButtonsController) != null) zoomButtonsController.setVisible(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1314/buggy-version/src.com.google.android.maps.MapView.java", "BodyUseAPI": [], "Fixed commit": "6dbe0ec9c8a82424243fc5c3fd7b16a7f829732a", "Url": "https://api.github.com/repos/microg/android_frameworks_mapsv1", "Date": "2014-06-28T16:12:57Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value instanceof java.lang.String) { return ((com.alibaba.fastjson.JSONArray) (com.alibaba.fastjson.JSON.parse(((java.lang.String) (value))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8269/buggy-version/src.main.java.com.alibaba.fastjson.JSONObject.java", "BodyUseAPI": [], "Fixed commit": "fac13981ee00cbe492a3ff06d7b09653e940b8fb", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-08-25T02:50:47Z"},
{"Line": "=>667", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (vm == null) { vm = vmClass.getMethod(\"attach\", java.lang.String.class).invoke(null, pid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5272/buggy-version/util.src.main.java.com.psddev.dari.util.CodeUtils.java", "BodyUseAPI": [], "Fixed commit": "a667cd2d7044b61caa061fb15859d0bdb9460c17", "Url": "https://api.github.com/repos/perfectsense/dari", "Date": "2015-05-29T19:33:09Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((edNote.getText()) == null) note = \"\"; else note = edNote.getText().toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7858/buggy-version/H3_Group_14.app.src.main.java.com.example.group14.h3_group_14.SecondActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "edNote.getText().toString()"], "Fixed commit": "e191e8a16b3b2dbd52d069cd7ac9f44cb7c92a08", "Url": "https://api.github.com/repos/SergiCarol/Android", "Date": "2015-09-17T18:55:22Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nodes.isEmpty()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5656/buggy-version/server.src.main.java.com.orientechnologies.orient.server.distributed.ODistributedStorage.java", "BodyUseAPI": [], "Fixed commit": "3691cb1a596382e09559f18f310640a604604896", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-01-22T16:53:33Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newItem instanceof com.mojang.ld22.item.ResourceItem) ((com.mojang.ld22.item.ResourceItem) (newItem)).count = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8965/buggy-version/src.com.mojang.ld22.item.ListItems.java", "BodyUseAPI": [], "Fixed commit": "22b9b2f98278145f77d72bb59837d2d590d30318", "Url": "https://api.github.com/repos/chrisj42/minicraft-plus-revived", "Date": "2017-04-16T02:15:46Z"},
{"Line": "=>557", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((crit.x_coord) + 1) >= ((Params.world_width) + 2)) java.lang.System.out.println((\"bad x \" + (crit.x_coord)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/317/buggy-version/Critter.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "85cb7a0600c787b71935b12980560fada5a5e5f3", "Url": "https://api.github.com/repos/mac7865/assignment4", "Date": "2016-10-17T03:44:38Z"},
{"Line": "=>559", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((crit.y_coord) + 1) >= ((Params.world_height) + 2)) java.lang.System.out.println((\"bad y \" + (crit.y_coord)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/317/buggy-version/Critter.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "85cb7a0600c787b71935b12980560fada5a5e5f3", "Url": "https://api.github.com/repos/mac7865/assignment4", "Date": "2016-10-17T03:44:38Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.round(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (n == (max * max)) { factors--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5123/buggy-version/project-euler.src.main.java.problems.problem12.Problem12.java", "BodyUseAPI": [], "Fixed commit": "afe4dcd449c42e280d263b0c14d4ab788aa198c7", "Url": "https://api.github.com/repos/gsnaider/project-euler", "Date": "2017-03-23T06:09:59Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.activemq.command.Message.getOriginalDestination()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (origDest != null) { org.apache.activemq.util.ByteSequence origDestBytes = marshaller.marshal(origDest); origDestBytes.compact(); coreMessage.putBytesProperty(org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.AMQ_MSG_ORIG_DESTINATION, origDestBytes.data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2990/buggy-version/artemis-protocols.artemis-openwire-protocol.src.main.java.org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.java", "BodyUseAPI": ["org.apache.activemq.wireformat.WireFormat.marshal(org.apache.activemq.command.ActiveMQDestination)"], "Fixed commit": "ce2bf71394bb16a8001fd1d59a09f3f360b24603", "Url": "https://api.github.com/repos/apache/activemq-artemis", "Date": "2016-02-18T12:52:32Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((possibleAnswers) != null) { return java.util.Arrays.asList(possibleAnswers.split(\";\")); }else return new java.util.ArrayList<java.lang.String>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5735/buggy-version/src.main.java.ro.tpjad.entity.Question.java", "BodyUseAPI": [], "Fixed commit": "51944db4f32e74341c4f7c15740ecee37482d7ac", "Url": "https://api.github.com/repos/dan93c/surveys", "Date": "2016-01-28T14:24:47Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parentElement instanceof org.eclipse.jface.viewers.TreeNode) { parentObject = ((org.eclipse.jface.viewers.TreeNode) (parentElement)).getValue(); }else if (parentElement instanceof org.eclipse.jface.viewers.TreePath) { parentObject = ((org.eclipse.jface.viewers.TreePath) (parentElement)).getLastSegment(); }else { parentObject = parentElement; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1426/buggy-version/plugins.org.jboss.tools.eclipse.src.org.jboss.tools.eclipse.nestedProjects.HideTopLevelProjectIfNested.java", "BodyUseAPI": [], "Fixed commit": "1cab5322191b936ea9caa9c7ce41168a8a8b37ed", "Url": "https://api.github.com/repos/mickaelistria/jbosstools-eclipse", "Date": "2014-10-08T08:00:15Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((directionString.length()) != 1) { return false; }else { direction = directionString.toUpperCase().charAt(0); return (((direction == 'U') || (direction == 'D')) || (direction == 'L')) || (direction == 'R'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3296/buggy-version/src.main.java.Game.java", "BodyUseAPI": ["java.lang.String.toUpperCase()", "java.lang.String.charAt(int)"], "Fixed commit": "bfa29b340603abedffaac6a50625d41876ba7bcd", "Url": "https://api.github.com/repos/ellalautier/CPS2002Assignment-", "Date": "2017-04-16T13:38:22Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((version) != null) { return version; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7198/buggy-version/pmd-core.src.main.java.net.sourceforge.pmd.cli.PMDParameters.java", "BodyUseAPI": [], "Fixed commit": "bab3e965ffcaeca3470847c41bc026f7b8a02774", "Url": "https://api.github.com/repos/pmd/pmd", "Date": "2016-05-05T17:59:06Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sourceforge.pmd.lang.LanguageRegistry.getLanguage(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (defaultLanguage == null) { java.util.Collection<net.sourceforge.pmd.lang.Language> allLanguages = net.sourceforge.pmd.lang.LanguageRegistry.getInstance().languages.values(); if (!(allLanguages.isEmpty())) { defaultLanguage = allLanguages.iterator().next(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7198/buggy-version/pmd-core.src.main.java.net.sourceforge.pmd.lang.LanguageRegistry.java", "BodyUseAPI": [], "Fixed commit": "bab3e965ffcaeca3470847c41bc026f7b8a02774", "Url": "https://api.github.com/repos/pmd/pmd", "Date": "2016-05-05T17:59:06Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (errors == null) { logiccalc.ejb.LogicCalc.calc = new logiccalc.ejb.Calculator(inString); outString = logiccalc.ejb.LogicCalc.calc.startCalc(); }else { outString = errors; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5028/buggy-version/LogicCalc.LogicCalc-ejb.src.java.logicCalc.ejb.LogicCalc.java", "BodyUseAPI": [], "Fixed commit": "7dec56ace9cd63a509db19e5d5f916291ff9e898", "Url": "https://api.github.com/repos/TimDN/NkpProjekt", "Date": "2013-06-03T16:49:22Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((progWireframed) != null) progWireframed.delete(gl.getGL2GL3(), true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1387/buggy-version/src.cspace.render3d.SubRenderer.java", "BodyUseAPI": [], "Fixed commit": "c8e4d670f86be9a72f823a04cfe7cb7effa09ac7", "Url": "https://api.github.com/repos/jstoecker/cspace", "Date": "2013-04-16T11:13:41Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mapView.items().getByUid(markup.getId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (item != null) { mapView.items().removeItem(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2758/buggy-version/play-services-core.src.main.java.org.microg.gms.maps.BackendMap.java", "BodyUseAPI": ["mapView.items().removeItem(org.oscim.layers.marker.MarkerItem)"], "Fixed commit": "9fc9b9a51df1af72eaa618e4135c117402e3fa16", "Url": "https://api.github.com/repos/pejakm/android_packages_apps_GmsCore", "Date": "2016-02-22T22:25:03Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (item != null) { mapView.items().addItem(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2758/buggy-version/play-services-core.src.main.java.org.microg.gms.maps.BackendMap.java", "BodyUseAPI": ["mapView.items().addItem(org.oscim.layers.marker.MarkerItem)"], "Fixed commit": "9fc9b9a51df1af72eaa618e4135c117402e3fa16", "Url": "https://api.github.com/repos/pejakm/android_packages_apps_GmsCore", "Date": "2016-02-22T22:25:03Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((screenSwitcher) == null) screenSwitcher = new com.cisco.sparksdk.kitchensink.ui.FullScreenSwitcher(getActivity(), layout, remoteView);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6359/buggy-version/app.src.main.java.com.cisco.sparksdk.kitchensink.launcher.fragments.CallFragment.java", "BodyUseAPI": [], "Fixed commit": "6bfa84fb77dc05c8ea0d811b32bec40a7cbd8fcd", "Url": "https://api.github.com/repos/webex/spark-android-sdk-example", "Date": "2017-12-01T08:36:34Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isConnected)) com.cisco.sparksdk.kitchensink.launcher.fragments.CallFragment.setViewAndChildrenEnabled(layout, false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6359/buggy-version/app.src.main.java.com.cisco.sparksdk.kitchensink.launcher.fragments.CallFragment.java", "BodyUseAPI": [], "Fixed commit": "6bfa84fb77dc05c8ea0d811b32bec40a7cbd8fcd", "Url": "https://api.github.com/repos/webex/spark-android-sdk-example", "Date": "2017-12-01T08:36:34Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((agent) == null) agent = com.cisco.sparksdk.kitchensink.actions.SparkAgent.getInstance();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6359/buggy-version/app.src.main.java.com.cisco.sparksdk.kitchensink.launcher.fragments.CallFragment.java", "BodyUseAPI": [], "Fixed commit": "6bfa84fb77dc05c8ea0d811b32bec40a7cbd8fcd", "Url": "https://api.github.com/repos/webex/spark-android-sdk-example", "Date": "2017-12-01T08:36:34Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (children != null) { hist.previous.addSibling(children); hist.current = hist.previous.sibling; for (int i = 0; i < (node.getDegree()); i++) { this.pass(hist, temp, comp, commonDegrees); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4054/buggy-version/src.trees.binomialheap.BinomialHeap.java", "BodyUseAPI": ["hist.previous.addSibling(trees.binomialheap.Node<T>)"], "Fixed commit": "06d9a767c6030417099eef3ea43ad9a365fdefba", "Url": "https://api.github.com/repos/cavasquez/heap", "Date": "2014-06-23T01:23:21Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (multiplayer) { buildInput.append(\" M \"); }else { buildInput.append(\" S \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3607/buggy-version/app.controllers.Application.java", "BodyUseAPI": [], "Fixed commit": "d4c3b442c4ad75b4ea8dcb7dd1dca7f4b2173069", "Url": "https://api.github.com/repos/julmayer/checkersWUI", "Date": "2014-11-19T15:22:35Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dialect == \"\") { return org.xtuml.bp.core.common.ActionFileManager.getDefaultDialect(); }else { return dialect.toLowerCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/845/buggy-version/src.org.xtuml.bp.core.src.org.xtuml.bp.core.common.ActionFileManager.java", "BodyUseAPI": ["java.lang.String.toLowerCase()"], "Fixed commit": "08cd55bf1f4dc92f7dedf91a99b2ec87faa2041d", "Url": "https://api.github.com/repos/jason-rhodes/bridgepoint", "Date": "2016-08-24T14:35:16Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["store.getString(BridgePointPreferencesStore.DEFAULT_ACTION_LANGUAGE_DIALECT).toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.util.Arrays.asList(org.xtuml.bp.core.common.ActionFileManager.DIALECTS).contains(prefDialect)) { return prefDialect; }else if ((org.xtuml.bp.core.common.ActionFileManager.DIALECTS.length) > 0) { return org.xtuml.bp.core.common.ActionFileManager.DIALECTS[0]; }else { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/845/buggy-version/src.org.xtuml.bp.core.src.org.xtuml.bp.core.common.ActionFileManager.java", "BodyUseAPI": [], "Fixed commit": "08cd55bf1f4dc92f7dedf91a99b2ec87faa2041d", "Url": "https://api.github.com/repos/jason-rhodes/bridgepoint", "Date": "2016-08-24T14:35:16Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.araqne.logdb.query.expr.Div.eval(org.araqne.logdb.Row)", "org.araqne.logdb.query.expr.Div.eval(org.araqne.logdb.Row)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((o1 == null) || (o2 == null)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7195/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.query.expr.Div.java", "BodyUseAPI": [], "Fixed commit": "1d5afb6260fa5807152d4b71a3eb510af786de58", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-12-11T07:14:09Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.araqne.logdb.query.expr.Sub.eval(org.araqne.logdb.Row)", "org.araqne.logdb.query.expr.Sub.eval(org.araqne.logdb.Row)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((o1 == null) || (o2 == null)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7195/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.query.expr.Sub.java", "BodyUseAPI": [], "Fixed commit": "1d5afb6260fa5807152d4b71a3eb510af786de58", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-12-11T07:14:09Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.core.MethodParameter.getParameterAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((requestParam != null) && (!(org.apache.commons.lang.StringUtils.isEmpty(requestParam.value())))) return requestParam.value();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/251/buggy-version/src.main.java.com.mangofactory.swagger.springmvc.ApiMethodReader.java", "BodyUseAPI": ["org.springframework.web.bind.annotation.RequestParam.value()"], "Fixed commit": "3e799ef0ebbfe454ae62516df1d12c696c2ea859", "Url": "https://api.github.com/repos/martypitt/swagger-springmvc", "Date": "2012-07-17T20:51:56Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (messageTemplate.actUponMessage(message)) { if ((statusFromMessage.isUnsuccessful()) && (message.getHeaders().get(WaspJobTask.HEADER_KEY).equals(WaspJobTask.NOTIFY_STATUS))) stopJobNotificationReceived = true; if ((stopJobNotificationReceived) || (statusFromMessage.equals(messageTemplate.getStatus()))) { if (((this.message) == null) || (stopJobNotificationReceived)) { this.message = ((org.springframework.integration.Message<edu.yu.einstein.wasp.integration.messages.payload.WaspStatus>) (message)); }else if (!stopJobNotificationPreviouslyReceived) { throw new org.springframework.integration.MessagingException(\"Received an applicable message before previous message processed\"); }else { logger.warn(\"Recieved a message with non-unsuccessful status whilst an existing received job-stopping message is pending processing\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7872/buggy-version/wasp-daemon.src.main.java.edu.yu.einstein.wasp.daemon.batch.tasklets.ListenForExitConditionTasklet.java", "BodyUseAPI": ["message.getHeaders().get(WaspJobTask.HEADER_KEY)", "edu.yu.einstein.wasp.integration.messages.payload.WaspStatus.equals(messageTemplate.getStatus())", "message.getHeaders().get(WaspJobTask.HEADER_KEY).equals(WaspJobTask.NOTIFY_STATUS)", "org.springframework.integration.Message<?>.getHeaders()", "edu.yu.einstein.wasp.integration.messages.StatusMessageTemplate.getStatus()"], "Fixed commit": "4837c726d50a75eb498e1063dbe8ec919d6205da", "Url": "https://api.github.com/repos/WASP-System/central", "Date": "2012-12-08T19:18:04Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (user == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4467/buggy-version/src.main.java.com.pratilipi.data.util.UserDataUtil.java", "BodyUseAPI": [], "Fixed commit": "04b352ed634bd99604c325d8b3864063843afa07", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-06-14T09:34:40Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bt.util.Dice.random(_RandomNames.size())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index == (_RandomNames.size())) index--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7334/buggy-version/bt.managers.RandomNameManager.java", "BodyUseAPI": [], "Fixed commit": "4cffeb712eb4fba5ad25839ce850e3c42e774be3", "Url": "https://api.github.com/repos/dcleyne/CampaignManager", "Date": "2015-06-15T07:34:59Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mql.processors.ActionProcessor.getAnnotationAttributeValue(java.lang.String,java.util.Map<? extends javax.lang.model.element.ExecutableElement, ? extends javax.lang.model.element.AnnotationValue>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (actionName.isEmpty()) { java.lang.String modelClassSimpleName = annotatedClass.getSimpleName().toString(); actionName = modelClassSimpleName + (org.mql.processors.ActionProcessor.DEFAULT_ACTION_NAME_SUFFIX); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1116/buggy-version/src.main.java.org.mql.processors.ActionProcessor.java", "BodyUseAPI": [], "Fixed commit": "e4ab34b13e27999befcc80d9819b4c84c9e1c295", "Url": "https://api.github.com/repos/DeveloperXY/mql-utils", "Date": "2017-12-11T15:30:44Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pa.getType().isDefined(\"js_type\", \"String\")) || (pa.getType().isDefined(\"js_type\", \"char\"))) { builder.append(((((\", \\\"\" + (pa.getName())) + \"\\\":\\\"\\' + \") + (ctx.protectKeyword(pa.getName()))) + \" + \\'\\\"\")); }else { builder.append(((((\", \\\"\" + (pa.getName())) + \"\\\":\\' + \") + (ctx.protectKeyword(pa.getName()))) + \" + '\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5064/buggy-version/org.thingml.compilers.src.main.java.org.thingml.compilers.api.JavaScriptApiCompiler.java", "BodyUseAPI": ["org.thingml.compilers.api.Parameter.getName()", "org.thingml.compilers.Context.protectKeyword(pa.getName())", "java.lang.StringBuilder.append(((((\", \\\"\" + (pa.getName())) + \"\\\":\\' + \") + (ctx.protectKeyword(pa.getName()))) + \" + '\"))", "java.lang.StringBuilder.append(((((\", \\\"\" + (pa.getName())) + \"\\\":\\\"\\' + \") + (ctx.protectKeyword(pa.getName()))) + \" + \\'\\\"\"))", "org.thingml.compilers.api.Parameter.getName()", "org.thingml.compilers.Context.protectKeyword(pa.getName())", "org.thingml.compilers.api.Parameter.getName()", "org.thingml.compilers.api.Parameter.getName()"], "Fixed commit": "1704a4bb9c002dcf4727c09fcd7173b09a50ae34", "Url": "https://api.github.com/repos/TelluIoT/ThingML", "Date": "2015-01-05T13:38:38Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((action.getProperty().eContainer()) instanceof org.thingml.compilers.actions.Thing) && (!(action.getProperty().isDefined(\"private\", \"true\")))) { builder.append(ctx.getThisRef()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5064/buggy-version/org.thingml.compilers.src.main.java.org.thingml.compilers.actions.GenericImperativeActionCompiler.java", "BodyUseAPI": [], "Fixed commit": "1704a4bb9c002dcf4727c09fcd7173b09a50ae34", "Url": "https://api.github.com/repos/TelluIoT/ThingML", "Date": "2015-01-05T13:38:38Z"},
{"Line": "=>1770", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.impetus.kundera.metadata.KunderaMetadataManager.getPersistenceUnitMetadata(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((puMetadata.getBatchSize()) > 0) { intbatch = new java.lang.Integer(puMetadata.getBatchSize()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3631/buggy-version/src.kundera-cassandra.src.main.java.com.impetus.client.cassandra.CassandraClientBase.java", "BodyUseAPI": ["com.impetus.kundera.metadata.model.PersistenceUnitMetadata.getBatchSize()"], "Fixed commit": "9d743da3f2177ac0ca387e56d3262540aa438100", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2013-10-09T12:02:39Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((position < 0) || (position > ((mViews.length) - 1))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1263/buggy-version/lib.src.main.java.com.github.omadahealth.slidepager.lib.adapter.AbstractSlidePagerAdapter.java", "BodyUseAPI": [], "Fixed commit": "03d5ab116af36a604fb782c5c0abe961a0774a34", "Url": "https://api.github.com/repos/omadahealth/SlidePager", "Date": "2016-04-26T16:38:10Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.wpi.cs.wpisuitetng.modules.requirementmanager.view.MainView.5.getTitleAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(title.equals(\"Overview\"))) { removeTabAt(draggedTabIndex); insertTab(title, null, comp, null, tabNumber); setSelectedIndex(tabNumber); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7278/buggy-version/RequirementManager.src.edu.wpi.cs.wpisuitetng.modules.requirementmanager.view.MainView.java", "BodyUseAPI": ["edu.wpi.cs.wpisuitetng.modules.requirementmanager.view.MainView.5.insertTab(java.lang.String,<nulltype>,java.awt.Component,<nulltype>,int)"], "Fixed commit": "9d453cf7a75a79ab8f062ff34d835843330990d7", "Url": "https://api.github.com/repos/djkirby/wpi-suite-tng", "Date": "2013-04-24T00:01:02Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ro.sync.exml.workspace.api.options.WSOptionsStorage.getOption(RestConfigExtension.REST_SERVER_URL,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((serverUrl != null) && (!(serverUrl.isEmpty()))) && ((serverUrl.lastIndexOf(\"/\")) != ((serverUrl.length()) - 1))) { serverUrl = serverUrl + \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4162/buggy-version/src.main.java.com.oxygenxml.rest.plugin.RestURLStreamHandler.java", "BodyUseAPI": [], "Fixed commit": "dda516930f276d5b401fb809be8d586f18b4af9f", "Url": "https://api.github.com/repos/oxygenxml/web-author-rest-plugin", "Date": "2017-10-30T13:21:20Z"},
{"Line": "=>794", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pixsels.width) == 0) ret.width = 0; else ret.width = (pixselToPointX(pixsels.width)) - (space);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7162/buggy-version/src.microfont.render.PixselMapRender.java", "BodyUseAPI": ["microfont.render.PixselMapRender.pixselToPointX(int)"], "Fixed commit": "abf1e622a9f004e80aed5174bd278fe2f6542026", "Url": "https://api.github.com/repos/u-235/methodius", "Date": "2014-02-01T11:02:52Z"},
{"Line": "=>797", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pixsels.height) == 0) ret.height = 0; else ret.height = (pixselToPointY(pixsels.height)) - (space);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7162/buggy-version/src.microfont.render.PixselMapRender.java", "BodyUseAPI": ["microfont.render.PixselMapRender.pixselToPointY(int)"], "Fixed commit": "abf1e622a9f004e80aed5174bd278fe2f6542026", "Url": "https://api.github.com/repos/u-235/methodius", "Date": "2014-02-01T11:02:52Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<org.bukkit.entity.Entity>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(n.isValid())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7726/buggy-version/src.me.mrCookieSlime.Slimefun.Objects.SlimefunItem.machines.XPCollector.java", "BodyUseAPI": [], "Fixed commit": "b99b396902d93d5f518c891b25382418a845bb73", "Url": "https://api.github.com/repos/TheBusyBiscuit/Slimefun4", "Date": "2017-01-20T15:57:19Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<uk.gov.dvla.osg.calcbatchtype.DocumentProperties>.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((\"CLERICAL\".equals(dp.getBatchType())) && (!(dp.getMsc().isEmpty()))) && (!(\"x\".equalsIgnoreCase(pc.getWelshClerical())))) { dp.setBatchType(\"CLERICAL\"); dp.setGroupId(multiMap.get(dp)); }else if (((multis.contains(dp)) && (!(dp.getMsc().isEmpty()))) && (!((pc.getWelshMulti().contains(\"X\")) || (pc.getWelshMulti().contains(\"x\"))))) { dp.setBatchType(\"MULTI\"); dp.setGroupId(multiMap.get(dp)); }else if (((multis.contains(dp)) && (!(dp.getMsc().isEmpty()))) && (\"x\".equalsIgnoreCase(pc.getWelshMulti()))) { dp.setGroupId(multiMap.get(dp)); if ((dp.getMsc().isEmpty()) && (!(\"x\".equalsIgnoreCase(pc.getWelshUnsorted())))) { dp.setBatchType(\"UNSORTED\"); }else { dp.setBatchType(\"SORTED\"); } }else if (!(\"x\".equalsIgnoreCase(pc.getWelshSorted()))) { dp.setBatchType(\"SORTED\"); }else { dp.setBatchType(\"UNSORTED\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5167/buggy-version/src.uk.gov.dvla.osg.calcbatchtype.CalculateBatchTypes.java", "BodyUseAPI": ["uk.gov.dvla.osg.calcbatchtype.DocumentProperties.getMsc()", "uk.gov.dvla.osg.calcbatchtype.DocumentProperties.setBatchType(java.lang.String)", "uk.gov.dvla.osg.common.classes.ProductionConfiguration.getWelshUnsorted()", "pc.getWelshMulti().contains(java.lang.String)", "uk.gov.dvla.osg.calcbatchtype.DocumentProperties.setBatchType(java.lang.String)", "pc.getWelshMulti().contains(java.lang.String)", "java.lang.String.equalsIgnoreCase(pc.getWelshSorted())", "uk.gov.dvla.osg.calcbatchtype.DocumentProperties.getMsc()", "uk.gov.dvla.osg.calcbatchtype.DocumentProperties.setBatchType(java.lang.String)", "java.util.ArrayList<uk.gov.dvla.osg.calcbatchtype.DocumentProperties>.contains(uk.gov.dvla.osg.calcbatchtype.DocumentProperties)", "uk.gov.dvla.osg.calcbatchtype.DocumentProperties.setGroupId(multiMap.get(dp))", "java.util.Map<uk.gov.dvla.osg.calcbatchtype.DocumentProperties, java.lang.Integer>.get(uk.gov.dvla.osg.calcbatchtype.DocumentProperties)", "dp.getMsc().isEmpty()", "dp.getMsc().isEmpty()", "uk.gov.dvla.osg.calcbatchtype.DocumentProperties.setGroupId(multiMap.get(dp))", "java.util.Map<uk.gov.dvla.osg.calcbatchtype.DocumentProperties, java.lang.Integer>.get(uk.gov.dvla.osg.calcbatchtype.DocumentProperties)", "uk.gov.dvla.osg.calcbatchtype.DocumentProperties.setBatchType(java.lang.String)", "uk.gov.dvla.osg.common.classes.ProductionConfiguration.getWelshMulti()", "java.util.Map<uk.gov.dvla.osg.calcbatchtype.DocumentProperties, java.lang.Integer>.get(uk.gov.dvla.osg.calcbatchtype.DocumentProperties)", "uk.gov.dvla.osg.calcbatchtype.DocumentProperties.getMsc()", "java.lang.String.equalsIgnoreCase(pc.getWelshMulti())", "java.util.ArrayList<uk.gov.dvla.osg.calcbatchtype.DocumentProperties>.contains(uk.gov.dvla.osg.calcbatchtype.DocumentProperties)", "uk.gov.dvla.osg.common.classes.ProductionConfiguration.getWelshSorted()", "uk.gov.dvla.osg.calcbatchtype.DocumentProperties.setBatchType(java.lang.String)", "dp.getMsc().isEmpty()", "java.lang.String.equalsIgnoreCase(pc.getWelshUnsorted())", "uk.gov.dvla.osg.common.classes.ProductionConfiguration.getWelshMulti()", "uk.gov.dvla.osg.calcbatchtype.DocumentProperties.setGroupId(multiMap.get(dp))", "uk.gov.dvla.osg.common.classes.ProductionConfiguration.getWelshMulti()", "uk.gov.dvla.osg.calcbatchtype.DocumentProperties.setBatchType(java.lang.String)"], "Fixed commit": "85ca57939a0e7f2ec1f92376aac8990c50d85f08", "Url": "https://api.github.com/repos/dendleberry/calcBatchType", "Date": "2017-03-23T14:29:57Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((collectionItemDo.getResource().getThumbnails()) != null) { imgFieldTrip.setUrl(collectionItemDo.getResource().getThumbnails().getUrl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6721/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.play.resource.framebreaker.ResourceFrameBreakerView.java", "BodyUseAPI": [], "Fixed commit": "94d7f8ce8361ce5e3220afced5196b803ec8dc75", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-07-29T10:05:05Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdmin()) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2268/buggy-version/manager.api.security.src.main.java.io.apiman.manager.api.security.impl.AbstractSecurityContext.java", "BodyUseAPI": [], "Fixed commit": "b78c52ae559827e085661dc137e035c99555f0d5", "Url": "https://api.github.com/repos/apiman/apiman", "Date": "2015-12-22T13:52:10Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(Files.LANGUAGE_DIR.getFile().exists())) { Files.LANGUAGE_DIR.getFile().mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5147/buggy-version/MineDevices.src.main.java.me.wirlie.bukkit.minedevices.Localisation.java", "BodyUseAPI": [], "Fixed commit": "fc506f6cd50a7b675dbcc67e928ebde2dfefe82a", "Url": "https://api.github.com/repos/Wirlie/MineDevices", "Date": "2016-07-18T06:52:06Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (typeElement.getModifiers().contains(javax.lang.model.element.Modifier.ABSTRACT)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8154/buggy-version/AndroidAnnotations.androidannotations.src.main.java.com.googlecode.androidannotations.helper.IdValidatorHelper.java", "BodyUseAPI": [], "Fixed commit": "83b19d08c2d7ed1b4699325e5f41fb77d1a53530", "Url": "https://api.github.com/repos/ealden/androidannotations", "Date": "2011-12-01T14:45:24Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (map.changeTarget(target)) { return this.doFind(map, map.getNode(initial.getRow(), initial.getColumn())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6337/buggy-version/src.main.java.ar.edu.unq.americana.ia.pathfindier.astar.AStarPathFinding.java", "BodyUseAPI": ["ar.edu.unq.americana.ia.pathfindier.astar.AStarPathFinding.doFind(ar.edu.unq.americana.ia.pathfindier.TileMap,map.getNode(initial.getRow(), initial.getColumn()))", "ar.edu.unq.americana.ia.pathfindier.TileMap.getNode(initial.getRow(),initial.getColumn())"], "Fixed commit": "e27e92eafd8117e78014d93b085c2b159858b315", "Url": "https://api.github.com/repos/leezsi/americana", "Date": "2014-06-25T02:39:44Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.scene.isAccessible(target.getRow(), target.getColumn())) { this.generateNodes(this.scene.rowsCount(), this.scene.columnsCount()); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6337/buggy-version/src.main.java.ar.edu.unq.americana.scenes.components.tilemap.BaseTileMap.java", "BodyUseAPI": ["ar.edu.unq.americana.scenes.components.tilemap.BaseTileMap.generateNodes(this.scene.rowsCount(),this.scene.columnsCount())", "ar.edu.unq.americana.scenes.components.tilemap.ITileMapScene.rowsCount()", "ar.edu.unq.americana.scenes.components.tilemap.ITileMapScene.columnsCount()"], "Fixed commit": "e27e92eafd8117e78014d93b085c2b159858b315", "Url": "https://api.github.com/repos/leezsi/americana", "Date": "2014-06-25T02:39:44Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.manager.hasLadder(ladder)) { java.util.UUID uuid = cmd.getPlayer().getUniqueId(); me.messageofdeath.PaidRanks.Utils.LadderManager.Ladder ladderx = this.manager.getLadder(ladder); java.lang.String group = getApplicableGroup(me.messageofdeath.PaidRanks.Utils.API.PaidRanksAPI.getGroups(cmd.getPlayer().getUniqueId(), null), ladderx.getRanks()); me.messageofdeath.PaidRanks.Utils.RankManager.Rank groupx = null; if ((!(ladderx.isRequiresRank())) || ((ladderx.isRequiresRank()) && (ladderx.hasRank(group)))) { groupx = ladderx.getNextRank(group); }else { super.error(cmd, LanguageSettings.Commands_Rankup_NotCompatible.getSetting()); return; } if (groupx != null) { java.lang.String prefix = \" &6\"; java.lang.String suffix = \"&7\"; super.msgPrefix(cmd, LanguageSettings.Commands_Rankup_NextRankTop.getSetting()); super.msg(cmd, ((((prefix + \"Rank:\") + suffix) + \" \") + (groupx.getName()))); super.msg(cmd, ((((prefix + \"Price:\") + suffix) + \" \") + (me.messageofdeath.PaidRanks.Utils.API.PaidRanksAPI.getFormat(groupx.getPrice())))); super.msg(cmd, (((prefix + \"Permission:\") + \" \") + ((!(groupx.hasPermission())) || ((groupx.hasPermission()) && (cmd.getSender().hasPermission(groupx.getPermission()))) ? \"&aYes\" : \"&cNo\"))); super.msg(cmd, (((prefix + \"Able to buy:\") + \" \") + (me.messageofdeath.PaidRanks.Utils.API.PaidRanksAPI.hasEnoughMoney(uuid, groupx.getPrice()) ? \"&aYes\" : \"&cNo\"))); }else { super.error(cmd, LanguageSettings.Commands_Rankup_HighRank.getSetting()); } }else { super.error(cmd, LanguageSettings.Commands_LadderDoesNotExist.getSetting()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4328/buggy-version/src.me.messageofdeath.PaidRanks.Commands.RankupCommand.java", "BodyUseAPI": ["me.messageofdeath.PaidRanks.Utils.LadderManager.LadderManager.getLadder(java.lang.String)"], "Fixed commit": "fbb1733cc939986844ac7e9e947980e13e4350e1", "Url": "https://api.github.com/repos/messageofdeath/PaidRanks", "Date": "2017-04-30T01:33:20Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((claimsDO.getId()) != 0) { claim = claimsDAO.findOne(claimsDO.getId()); }else { claim = new com.agg.application.entity.Claims(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8715/buggy-version/src.main.java.com.agg.application.service.impl.ClaimsServiceImpl.java", "BodyUseAPI": ["com.agg.application.model.ClaimsDO.getId()", "com.agg.application.dao.ClaimsDAO.findOne(claimsDO.getId())"], "Fixed commit": "b067b42ca397f62f7df992591777bc0499a0a22f", "Url": "https://api.github.com/repos/bidnfix/agg", "Date": "2017-03-19T16:16:27Z"},
{"Line": "=>740", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (place.equals(\"lounge\")) color = \"&f\"; else { color = place.replace(\"lounge\", \"\"); color = \"&\" + (java.lang.Integer.toString(org.bukkit.ChatColor.valueOf(fightTeams.get(color)).getCode(), 16).toLowerCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5230/buggy-version/src.net.slipcor.pvparena.arenas.Arena.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "f67329f02547191e26254ddf63e9866fa8fd8bc3", "Url": "https://api.github.com/repos/slipcor/pvparena", "Date": "2011-11-14T19:48:43Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nd4j.linalg.api.ndarray.INDArray.size(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (count == 0) { return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1435/buggy-version/nd4j-backends.nd4j-api-parent.nd4j-api.src.main.java.org.nd4j.linalg.dataset.DistributionStats.java", "BodyUseAPI": [], "Fixed commit": "28a9ff52a91c1e163707efca1044787b4c83d127", "Url": "https://api.github.com/repos/deeplearning4j/nd4j", "Date": "2016-11-21T13:46:37Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((alertDialog) != null) { alertDialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6631/buggy-version/app.src.main.java.com.example.syo.listfragment.Activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "064d1c107d6af19b021fa045823667d9418131a5", "Url": "https://api.github.com/repos/allister0098/Matome", "Date": "2015-07-24T13:37:07Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.authentication.AccountUtils.hasSearchSupport(com.owncloud.android.authentication.AccountUtils.getCurrentOwnCloudAccount(com.owncloud.android.MainApp.getAppContext()))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((getResources().getBoolean(R.bool.bottom_toolbar_enabled)) && searchSupported) { android.widget.RelativeLayout.LayoutParams layoutParams = ((android.widget.RelativeLayout.LayoutParams) (mFabMain.getLayoutParams())); final float scale = v.getResources().getDisplayMetrics().density; android.support.design.widget.BottomNavigationView bottomNavigationView = ((android.support.design.widget.BottomNavigationView) (v.findViewById(R.id.bottom_navigation_view))); int pixel = ((int) ((32 * scale) + 0.5F)); layoutParams.setMargins(0, 0, (pixel / 2), ((bottomNavigationView.getMeasuredHeight()) + (pixel * 2))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2113/buggy-version/src.main.java.com.owncloud.android.ui.fragment.ExtendedListFragment.java", "BodyUseAPI": [], "Fixed commit": "3c68e865e2d615294223923e4ae7e48190e9fbae", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-03-15T00:18:14Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstPass) guestimate = true; else throw new java.lang.IllegalArgumentException(((\"Unknown branch target \\\"\" + (br.label)) + \"\\\"\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/9057/buggy-version/src.jasm.attributes.Code.java", "BodyUseAPI": [], "Fixed commit": "51f90c5f07a0d46d9b0c104c639996397f939613", "Url": "https://api.github.com/repos/DanielGibbsNZ/Jasm", "Date": "2013-08-22T22:54:32Z"},
{"Line": "=>1846", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) == null) { return 98923; }else { return type.hashCode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2347/buggy-version/src.wyil.lang.Code.java", "BodyUseAPI": [], "Fixed commit": "abbc131d360eda188f8671e4ef7aeee06a61426c", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-06-26T06:08:28Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mUserInfoEntrys.get(mCommentsData.get(position).getUid())) != null) { holder.mDynamicInfoFriends.setVisibility(View.VISIBLE); holder.mDynamicInfoFriends.setText(java.lang.String.format(mContext.getResources().getString(R.string.contacts_detail_more), mUserInfoEntrys.get(mCommentsData.get(position).getUid()).getFirstDirectFriend())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/9036/buggy-version/src.com.pkjiao.friends.mm.adapter.DynamicInfoListAdapter.java", "BodyUseAPI": ["java.lang.String.format(mContext.getResources().getString(R.string.contacts_detail_more),mUserInfoEntrys.get(mCommentsData.get(position).getUid()).getFirstDirectFriend())", "mUserInfoEntrys.get(mCommentsData.get(position).getUid()).getFirstDirectFriend()", "java.util.HashMap<java.lang.String, com.pkjiao.friends.mm.base.ContactsInfo>.get(mCommentsData.get(position).getUid())", "java.util.ArrayList<com.pkjiao.friends.mm.base.CommentsItem>.get(int)", "mCommentsData.get(position).getUid()", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "1d0a9f32865846d0f9f494a8f440aee64f70bc79", "Url": "https://api.github.com/repos/413326885/Marry_Social", "Date": "2015-03-13T05:48:16Z"},
{"Line": "=>477", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.event.MouseEvent.getSource()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(button.isEnabled())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6137/buggy-version/src.at.jku.ssw.cmm.gui.event.debug.PanelRunListener.java", "BodyUseAPI": [], "Fixed commit": "c7cbe3eecb533fb1e3408866e3330d874bd1344c", "Url": "https://api.github.com/repos/pointhi/CMM", "Date": "2014-11-03T13:36:01Z"},
{"Line": "=>534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.event.MouseEvent.getSource()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(button.isEnabled())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6137/buggy-version/src.at.jku.ssw.cmm.gui.event.debug.PanelRunListener.java", "BodyUseAPI": [], "Fixed commit": "c7cbe3eecb533fb1e3408866e3330d874bd1344c", "Url": "https://api.github.com/repos/pointhi/CMM", "Date": "2014-11-03T13:36:01Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (a == 0) return java.lang.Math.abs(b);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5991/buggy-version/src.aya.obj.number.NumberMath.java", "BodyUseAPI": [], "Fixed commit": "9c53aac8444feb7a8e5f23b990e73e7ff7283f4b", "Url": "https://api.github.com/repos/nick-paul/aya-lang", "Date": "2017-06-21T19:16:04Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (b == 0) return java.lang.Math.abs(a);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5991/buggy-version/src.aya.obj.number.NumberMath.java", "BodyUseAPI": [], "Fixed commit": "9c53aac8444feb7a8e5f23b990e73e7ff7283f4b", "Url": "https://api.github.com/repos/nick-paul/aya-lang", "Date": "2017-06-21T19:16:04Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sample.controller.pojos.SignupUser.getFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((file.getOriginalFilename().length()) > 4) { profileUpdateForm.setFilenames(filename); org.sample.model.Picture pic = new org.sample.model.Picture(); pic.setUrl(filename); pic = pictureDao.save(pic); data.setPicture(pic); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4019/buggy-version/Skeleton.src.main.java.org.sample.controller.service.SampleServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "1e0a5a3ca8d68c750ef6667dd9b9b987365d0e7a", "Url": "https://api.github.com/repos/ese-unibe-ch/ese2014-team5", "Date": "2014-12-07T13:59:06Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.lang.model.type.TypeMirror.getKind()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (kind == (javax.lang.model.type.TypeKind.TYPEVAR)) { return \"***\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6503/buggy-version/proguard-annotations-processor.src.main.java.com.github.wrdlbrnft.proguardannotations.Utils.java", "BodyUseAPI": [], "Fixed commit": "be57352f3be1a1bd6dfa83b080d2e2b6eed67b77", "Url": "https://api.github.com/repos/Wrdlbrnft/ProguardAnnotations", "Date": "2017-01-19T06:25:55Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(changePackages.isEmpty())) { org.eclipse.emf.emfstore.server.model.versioning.ChangePackage cp = changePackages.get(state); cp.getOperations(); java.util.List<org.eclipse.emf.emfstore.server.model.versioning.operations.AbstractOperation> operations = cp.getLeafOperations(); for (org.eclipse.emf.emfstore.server.model.versioning.operations.AbstractOperation o : operations) { replayElement(o); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7249/buggy-version/org.jnect.emfstore.src.org.jnect.emfstore.EMFStorage.java", "BodyUseAPI": ["java.util.List<org.eclipse.emf.emfstore.server.model.versioning.ChangePackage>.get(int)"], "Fixed commit": "1d1aa9162c5d2bd07c829949291d861c45af1f9d", "Url": "https://api.github.com/repos/aumann/jnectemf", "Date": "2012-05-20T13:37:58Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((max) == 0) { label.setText(\"nothing to replay\"); }else { label.setText((((((slider.getSelection()) + 1) + \"/\") + (max)) + \"steps\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7249/buggy-version/org.jnect.emfstore.src.org.jnect.emfstore.replay.SliderDialog.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Label.setText((((((slider.getSelection()) + 1) + \"/\") + (max)) + \"steps\"))"], "Fixed commit": "1d1aa9162c5d2bd07c829949291d861c45af1f9d", "Url": "https://api.github.com/repos/aumann/jnectemf", "Date": "2012-05-20T13:37:58Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hello.services.VacanciesSearchService.getVacancyIds(hello.entities.SearchParameters)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (vacancyIds.contains(v.getId())) { vacancyIdsDbMap.put(v.getId(), true); vacancies.add(v); hello.services.VacanciesSearchService.LOG.info(((\"Fetched vacancy with id=\" + (v.getId())) + \" from the DB...\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4476/buggy-version/src.main.java.hello.services.VacanciesSearchService.java", "BodyUseAPI": ["java.util.List<hello.entities.Vacancy>.add(hello.entities.Vacancy)", "java.util.Map<java.lang.Long, java.lang.Boolean>.put(v.getId(),boolean)", "hello.entities.Vacancy.getId()", "hello.entities.Vacancy.getId()", "org.slf4j.Logger.info(((\"Fetched vacancy with id=\" + (v.getId())) + \" from the DB...\"))"], "Fixed commit": "f1114e6dcd5f181f39939f767d91d52f695ab720", "Url": "https://api.github.com/repos/edwardz10/spring-hh", "Date": "2017-08-14T11:41:15Z"},
{"Line": "=>508", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (orientation == (android.content.res.Configuration.ORIENTATION_LANDSCAPE)) { android.widget.LinearLayout mToolbarContainer = ((android.widget.LinearLayout) (findViewById(R.id.toolbar_container))); mToolbarContainer.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7587/buggy-version/Paintroid.src.main.java.org.catrobat.paintroid.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "954ba39eaa24dba22822548fe6f36eff4c715d8e", "Url": "https://api.github.com/repos/Catrobat/Paintroid", "Date": "2017-02-08T13:43:41Z"},
{"Line": "=>526", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (orientation == (android.content.res.Configuration.ORIENTATION_LANDSCAPE)) { android.widget.LinearLayout mToolbarContainer = ((android.widget.LinearLayout) (findViewById(R.id.toolbar_container))); mToolbarContainer.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7587/buggy-version/Paintroid.src.main.java.org.catrobat.paintroid.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "954ba39eaa24dba22822548fe6f36eff4c715d8e", "Url": "https://api.github.com/repos/Catrobat/Paintroid", "Date": "2017-02-08T13:43:41Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (seconds < 1) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6059/buggy-version/Plugin.src.main.java.com.sonelli.juicessh.performancemonitor.controllers.NetworkUsageController.java", "BodyUseAPI": [], "Fixed commit": "0d292d3290e09470e5c145b168d9fbfb8e2e2a76", "Url": "https://api.github.com/repos/Sonelli/juicessh-performancemonitor", "Date": "2014-06-18T13:33:43Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tasks.get(i).getPendingIntent()) != null) { am.cancel(tasks.get(i).getPendingIntent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7787/buggy-version/app.src.main.java.com.vertiavo.zadanie2.activity.MainActivity.java", "BodyUseAPI": ["android.app.AlarmManager.cancel(tasks.get(i).getPendingIntent())", "java.util.List<com.vertiavo.zadanie2.util.Task>.get(int)", "tasks.get(i).getPendingIntent()"], "Fixed commit": "3d3e7b41e1d2cfe6f26a2c5cca5ad9b6e4fb9729", "Url": "https://api.github.com/repos/vertiavo/SimpleOrganizer", "Date": "2017-10-09T17:09:02Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdapter.getCount()) == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8531/buggy-version/app.src.main.java.com.lostli.loopviewpager.LoopPagerAdapterWrapper.java", "BodyUseAPI": [], "Fixed commit": "273ba8ad732958e4e1d97bcdc483a6502914ca36", "Url": "https://api.github.com/repos/lostlz/Auto-Loops-ViewPager", "Date": "2016-10-07T11:42:18Z"},
{"Line": "=>458", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["filereaders.individual.vcf.Vcf.firstNotEqualPos(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (index >= (one.length())) index = (one.length()) - 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8404/buggy-version/filereaders.individual.vcf.Vcf.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "71762e784a8134429c22f72cf2ff59447515d4fe", "Url": "https://api.github.com/repos/lrjuan/FGB", "Date": "2015-02-10T14:07:22Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mekhq.campaign.Campaign.getPerson(java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((p0.getRankNumeric()) == (mekhq.campaign.personnel.Ranks.RANK_PRISONER)) { return java.lang.Boolean.compare(p0.isWillingToDefect(), p1.isWillingToDefect()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/191/buggy-version/MekHQ.src.mekhq.gui.sorter.RankSorter.java", "BodyUseAPI": ["mekhq.campaign.personnel.Person.isWillingToDefect()", "java.lang.Boolean.compare(p0.isWillingToDefect(),p1.isWillingToDefect())"], "Fixed commit": "daaeeb0989d9dad8d6e979faeca98e79dcdcdcae", "Url": "https://api.github.com/repos/pheonixstorm/MekHQ-storm", "Date": "2016-06-30T04:26:15Z"},
{"Line": "=>532", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mresult.restricted) mresult.restricted = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8077/buggy-version/src.biz.bokhorst.xprivacy.PrivacyService.java", "BodyUseAPI": [], "Fixed commit": "7d9ff680766f04dc62d364a5c121b7bd0137f514", "Url": "https://api.github.com/repos/fda77/XPrivacy", "Date": "2014-07-25T17:46:02Z"},
{"Line": "=>534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mresult.asked)) mresult.asked = (hook.whitelist()) == null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8077/buggy-version/src.biz.bokhorst.xprivacy.PrivacyService.java", "BodyUseAPI": [], "Fixed commit": "7d9ff680766f04dc62d364a5c121b7bd0137f514", "Url": "https://api.github.com/repos/fda77/XPrivacy", "Date": "2014-07-25T17:46:02Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((trackables) != null) trackables.activate();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6146/buggy-version/src.main.java.org.pattonvillerobotics.commoncode.robotclasses.vuforia.VuforiaNavigation.java", "BodyUseAPI": [], "Fixed commit": "8007dd71d8d07b7d16c2a9b245aadf5d5910a0dc", "Url": "https://api.github.com/repos/Pattonville-Robotics/Common-Code", "Date": "2017-07-28T04:11:03Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((actionType) != 3) { hand.setVisibility(View.GONE); levelView.append(java.lang.String.valueOf(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6668/buggy-version/app.src.main.java.edu.umd.cmsc436.Level.LevelActivity.java", "BodyUseAPI": [], "Fixed commit": "899b71586a7ddf225893fd3173754dbeb2346972", "Url": "https://api.github.com/repos/cmsc436/LevelTest", "Date": "2017-05-08T21:35:34Z"},
{"Line": "=>1322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wyil.util.type.TypeAlgorithms.isSubset(toData, fromData)) { states.set(myIndex, new wyil.util.type.Automaton.State(wyil.lang.Type.K_VOID)); return myIndex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/9018/buggy-version/src.wyil.util.type.TypeAlgorithms.java", "BodyUseAPI": [], "Fixed commit": "3040bbcacd78bfcaf83e1e547a6f45fdfe5c6b22", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-12-12T00:19:10Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((issueEstimate != null) && (issueEstimate != 0)) { isMoreEstimatedTime = true; }else { isMoreEstimatedTime = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1034/buggy-version/src.main.java.org.everit.jira.timetracker.plugin.dto.EveritWorklog.java", "BodyUseAPI": [], "Fixed commit": "82e289ee1f539679ce1bbb11088920a58c6074a5", "Url": "https://api.github.com/repos/everit-org/jira-timetracker-plugin", "Date": "2016-02-02T16:45:39Z"},
{"Line": "=>567", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getTimer()[TIMER_PLAY]) != (java.lang.Long.MIN_VALUE)) { for (long l = (getTimer()[TIMER_FAILED]) - (getTimer()[TIMER_PLAY]); l < ((playtime) + 500); l += 500) { gaugelog.add(0.0F); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7377/buggy-version/src.bms.player.beatoraja.play.BMSPlayer.java", "BodyUseAPI": [], "Fixed commit": "fb6d60c23d0ed0f065e29f660ff95b9967c6cc94", "Url": "https://api.github.com/repos/exch-bms2/beatoraja", "Date": "2016-12-04T02:58:24Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(((org.intermine.web.logic.widget.config.GraphWidgetConfig) (config)).isListPathSet())) { prefix = (config.getStartClass()) + \".\"; }else { prefix = (((org.intermine.web.logic.widget.config.GraphWidgetConfig) (config)).getListPath()) + \".\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7828/buggy-version/intermine.web.main.src.org.intermine.web.logic.widget.GraphWidget.java", "BodyUseAPI": ["org.intermine.web.logic.widget.GraphWidget.getListPath()"], "Fixed commit": "fb331b99a54f3f9bba44ad23944f5d6c8a64b1e3", "Url": "https://api.github.com/repos/intermine/intermine", "Date": "2012-09-18T09:45:30Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.equals(httpServletRequest.getMethod())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (post) { ssoResponseValidator.setReplayCache(getReplayCache()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8838/buggy-version/services.idp.src.main.java.org.apache.cxf.fediz.service.idp.protocols.TrustedIdpSAMLProtocolHandler.java", "BodyUseAPI": [], "Fixed commit": "4bea6a1116112bf23bbe71689d606c9026ef9a84", "Url": "https://api.github.com/repos/apache/cxf-fediz", "Date": "2016-01-19T14:50:08Z"},
{"Line": "=>559", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((editPane.getMouseHighlightNode()) == n2) { editPane.setMouseHighlight(((de.topobyte.livecg.geometry.geom.Node) (null))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/591/buggy-version/project.src.de.topobyte.livecg.geometry.ui.geometryeditor.EditorMouseListener.java", "BodyUseAPI": ["de.topobyte.livecg.geometry.ui.geometryeditor.GeometryEditPane.setMouseHighlight(<nulltype>)"], "Fixed commit": "d84d6f6701bb01424ab308d7eeccda35d70aefe4", "Url": "https://api.github.com/repos/sebkur/live-cg", "Date": "2013-09-27T10:27:29Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(endScreenShowed)) { if (!(getObjects(ScoreKeeper.class).isEmpty())) { ScoreKeeper keeper = ((ScoreKeeper) (getObjects(ScoreKeeper.class).get(0))); DoodleWorld.finalScore = keeper.getScore(); } Message m = new Message(\"Game Over\"); addObject(m, ((doodleWorldWide) / 2), (((doodleWorldHeight) / 2) - 50)); Message m1 = new Message((\"Your Score: \" + (DoodleWorld.finalScore))); addObject(m1, ((doodleWorldWide) / 2), ((doodleWorldHeight) / 2)); Message m2; if ((DoodleWorld.finalScore) > (highScore)) { m2 = new Message((\"High Score : \" + (DoodleWorld.finalScore))); }else { m2 = new Message((\"High Score : \" + (highScore))); } addObject(m2, ((doodleWorldWide) / 2), (((doodleWorldHeight) / 2) + 50)); removeObjects(getObjects(Doodler.class)); removeObjects(getObjects(Ground.class)); removeObjects(getObjects(ScoreKeeper.class)); if (!(soundPlayed)) { Greenfoot.playSound(\"Gameover.mp3\"); soundPlayed = true; } PlayGame play1 = new PlayBlueSky(); addObject(play1, ((doodleWorldWide) / 2), (((doodleWorldHeight) / 2) - 100)); PlayGame play2 = new PlayDeepOcean(); addObject(play2, (((doodleWorldWide) / 2) - 80), (((doodleWorldHeight) / 2) - 170)); PlayGame play3 = new PlayOuterSpace(); addObject(play3, (((doodleWorldWide) / 2) + 80), (((doodleWorldHeight) / 2) - 170)); endScreenShowed = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1597/buggy-version/DoodleDown.DoodleWorld.java", "BodyUseAPI": [], "Fixed commit": "563411dab54319ebe4c0f612aa3333fcec3311b4", "Url": "https://api.github.com/repos/ThiGod/CMPE202DoodleDown", "Date": "2014-04-11T21:52:30Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mopubInterstitial) != null) { mopubInterstitial.destroy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/9173/buggy-version/mopub-sdk.src.main.java.com.mopub.ads.Interstitial.java", "BodyUseAPI": [], "Fixed commit": "2aa4ab0d5185a6b567fecbc8e350e308b7fa4321", "Url": "https://api.github.com/repos/vaoaboo/mopub-android-sdk", "Date": "2016-05-08T13:28:12Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getHostView()) != null) { getHostView().mountFlatGUI(widgets); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4135/buggy-version/android.sdk.src.main.java.com.taobao.weex.ui.component.WXDiv.java", "BodyUseAPI": [], "Fixed commit": "99a49697dd811da3908817209b609e15138e835f", "Url": "https://api.github.com/repos/YorkShen/incubator-weex", "Date": "2017-09-01T06:47:51Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getHostView()) != null) { getHostView().mountFlatGUI(widgets); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4135/buggy-version/android.sdk.src.main.java.com.taobao.weex.ui.component.list.WXCell.java", "BodyUseAPI": [], "Fixed commit": "99a49697dd811da3908817209b609e15138e835f", "Url": "https://api.github.com/repos/YorkShen/incubator-weex", "Date": "2017-09-01T06:47:51Z"},
{"Line": "=>499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mParent) instanceof com.taobao.weex.ui.flat.FlatComponent) && ((UIImp.getFlatComponentAncestor(mParent)) != null)) { childOffset.set(rawoffset.x, rawoffset.y); }else { childOffset.set(left, top); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4135/buggy-version/android.sdk.src.main.java.com.taobao.weex.ui.component.WXComponent.java", "BodyUseAPI": [], "Fixed commit": "99a49697dd811da3908817209b609e15138e835f", "Url": "https://api.github.com/repos/YorkShen/incubator-weex", "Date": "2017-09-01T06:47:51Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSpeed()) != null) queue.setSpeed(getSpeed().getTicksAsInt());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3109/buggy-version/src.main.java.net.aufdemrand.denizen.scripts.containers.core.TaskScriptContainer.java", "BodyUseAPI": [], "Fixed commit": "3932651809f69021ce2057c45cd9782955d7e1a3", "Url": "https://api.github.com/repos/aufdemrand/Denizen", "Date": "2013-02-14T19:30:35Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSpeed()) != null) queue.setSpeed(getSpeed().getTicksAsInt());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3109/buggy-version/src.main.java.net.aufdemrand.denizen.scripts.containers.core.TaskScriptContainer.java", "BodyUseAPI": [], "Fixed commit": "3932651809f69021ce2057c45cd9782955d7e1a3", "Url": "https://api.github.com/repos/aufdemrand/Denizen", "Date": "2013-02-14T19:30:35Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSpeed()) != null) { if (((getSpeed().getSeconds()) <= 0) || (getString(\"SPEED\").equalsIgnoreCase(\"INSTANT\"))) return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3109/buggy-version/src.main.java.net.aufdemrand.denizen.scripts.containers.core.TaskScriptContainer.java", "BodyUseAPI": [], "Fixed commit": "3932651809f69021ce2057c45cd9782955d7e1a3", "Url": "https://api.github.com/repos/aufdemrand/Denizen", "Date": "2013-02-14T19:30:35Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { if ((list.get(position).getPriority()) == 1) { done.setButtonTintList(android.content.res.ColorStateList.valueOf(urgentColor)); } if ((list.get(position).getPriority()) == 2) { done.setButtonTintList(android.content.res.ColorStateList.valueOf(mediumColor)); } if ((list.get(position).getPriority()) == 3) { done.setButtonTintList(android.content.res.ColorStateList.valueOf(notUrgentColor)); } }else { if ((list.get(position).getPriority()) == 1) { done.setBackgroundColor(urgentColor); } if ((list.get(position).getPriority()) == 2) { done.setBackgroundColor(mediumColor); } if ((list.get(position).getPriority()) == 3) { done.setBackgroundColor(notUrgentColor); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8167/buggy-version/app.src.main.java.com.iesebre.dam2.adam.todos.CustomListAtapter.java", "BodyUseAPI": [], "Fixed commit": "b8b948d3056fe8bce6e6bd92a04f37e502d923ec", "Url": "https://api.github.com/repos/deltcod/ToDoAndroid", "Date": "2015-12-10T15:05:48Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataBufferType == (java.awt.image.DataBuffer.TYPE_BYTE)) && ((zoomedDataBuffer.getSize()) < ((w * h) * 3))) zoomedDataBuffer = new java.awt.image.DataBufferByte(((w * h) * 3), 1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5984/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.util.ui.lens.LensModel.java", "BodyUseAPI": [], "Fixed commit": "4d47c785ac3e74dc1c7d94c66390e7f0e544095f", "Url": "https://api.github.com/repos/snoopycrimecop/openmicroscopy", "Date": "2016-03-18T03:32:35Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((techFilter.getTitleContains()) == null) || (techFilter.getTitleContains().isEmpty())) && (((techFilter.getRecommendationIs()) == null) || (techFilter.getRecommendationIs().isEmpty()))) { filteredList.addAll(completeList); }else { verifyFilters(techFilter, completeList, filteredList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/268/buggy-version/src.main.java.com.ciandt.techgallery.service.TechnologyServiceImpl.java", "BodyUseAPI": ["com.ciandt.techgallery.service.TechnologyServiceImpl.verifyFilters(com.ciandt.techgallery.service.model.TechnologyFilter,java.util.List<com.ciandt.techgallery.persistence.model.Technology>,java.util.List<com.ciandt.techgallery.persistence.model.Technology>)"], "Fixed commit": "4ab89260edf1ad903adc67aa35024ecfa96a82fb", "Url": "https://api.github.com/repos/ciandt-dev/tech-gallery", "Date": "2015-10-09T17:43:02Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result != null) return result;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7518/buggy-version/sample-spring-boot-kitchensink.src.main.java.com.example.bot.spring.SQLDatabaseEngine.java", "BodyUseAPI": [], "Fixed commit": "51f2c67b8bf475f1108b30c0ec7444c54e2c4dc6", "Url": "https://api.github.com/repos/cliubf/Line-chatbot-for-COMP3111", "Date": "2017-09-25T08:15:49Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["telematic.cl.popmovies.net.MovieServiceHelper.fetchVideos(long)", "telematic.cl.popmovies.net.MovieServiceHelper.fetchReviews(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((reviews == null) || (videos == null)) { android.util.Log.e(LOG_TAG, \"No Net!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/120/buggy-version/app.src.main.java.telematic.cl.popmovies.sync.DetailUpdateService.java", "BodyUseAPI": [], "Fixed commit": "bf9021c435ad2b97b274c96b34bb628870fda941", "Url": "https://api.github.com/repos/crised/popmovies", "Date": "2015-10-20T20:40:49Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((danmaku.getActualTime()) - (mLastSkipped.getActualTime())) < ((context.mDanmakuFactory.MAX_Duration_Scroll_Danmaku.value) * (mFilterFactor))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/701/buggy-version/DanmakuFlameMaster.src.main.java.master.flame.danmaku.controller.DanmakuFilters.java", "BodyUseAPI": [], "Fixed commit": "5b91eca91cd3415c99c2cd60f8ce10c482ec9062", "Url": "https://api.github.com/repos/Nicky-Li/DanmakuFlameMaster", "Date": "2016-09-19T05:59:22Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getResponse().getAttributes().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (headers == null) { headers = new org.restlet.data.Form(); getResponse().getAttributes().put(\"org.restlet.http.headers\", headers); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/419/buggy-version/cas-server-cc.src.main.java.edu.conncoll.cas.restlet.RestResource.java", "BodyUseAPI": [], "Fixed commit": "363eeff87052bce076e38a8b114f3758e332143d", "Url": "https://api.github.com/repos/ConnCollege/cas", "Date": "2015-06-25T14:09:20Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dp.getMetadata()) != null) { dp.getMetadata().put(((\"\" + ((int) (100 * percentile))) + \"th_pctile\"), (\"\" + percentileValue)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6348/buggy-version/src.main.java.com.caseystella.analytics.outlier.streaming.mad.SketchyMovingMAD.java", "BodyUseAPI": ["com.caseystella.analytics.DataPoint.getMetadata()", "dp.getMetadata().put(java.lang.String,java.lang.String)"], "Fixed commit": "55620338f46101eca744eac687bdc4c1d45617aa", "Url": "https://api.github.com/repos/oalam/outlier-detection-plugin", "Date": "2016-04-15T13:29:58Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((actionMode) != null) { actionMode.finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4945/buggy-version/app.src.main.java.com.gruppe1.pem.challengeme.CategoriesFragment.java", "BodyUseAPI": [], "Fixed commit": "40158fc633f6a563959585cdcb6875479b1df3ab", "Url": "https://api.github.com/repos/elochai90/pem", "Date": "2015-06-25T06:30:37Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (arrayClass == null) { arrayClass = java.lang.reflect.Array.newInstance(componentType, 0).getClass(); co.phoenixlab.hearthstone.hearthcapturelib.packets.encoding.HSDecoder.ARRAY_CLASS_CACHE.put(componentType.getName(), arrayClass); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1094/buggy-version/src.main.java.co.phoenixlab.hearthstone.hearthcapturelib.packets.encoding.HSDecoder.java", "BodyUseAPI": [], "Fixed commit": "df204affd2eb2f26ac444edd589943c62e227aea", "Url": "https://api.github.com/repos/vincentzhang96/HearthCaptureLib", "Date": "2014-10-20T13:56:58Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newAct instanceof com.graphhopper.jsprit.core.problem.solution.route.activity.DeliverShipment) tp_costs_prevAct_nextAct = routingCosts.getTransportCost(prevAct.getLocation(), nextAct.getLocation(), depTimeAtPrevAct, iFacts.getNewDriver(), iFacts.getNewVehicle());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4468/buggy-version/jsprit-core.src.main.java.com.graphhopper.jsprit.core.algorithm.recreate.LocalActivityInsertionCostsCalculator.java", "BodyUseAPI": [], "Fixed commit": "16b9a1164baf4c641d68797eb0eafc5f80d25cf9", "Url": "https://api.github.com/repos/graphhopper/jsprit", "Date": "2016-11-16T11:17:35Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((scientificName != null) && (!(scientificName.isEmpty()))) { this.scientificName = scientificName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6364/buggy-version/app.src.main.java.de.jordsand.birdcensus.core.Species.java", "BodyUseAPI": [], "Fixed commit": "27a49fd2de3fbb31f5de41e0c44d213def777295", "Url": "https://api.github.com/repos/portux/Jordsand-Birdcount", "Date": "2017-09-27T22:12:31Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((scientificName != null) && (!(scientificName.isEmpty()))) { this.scientificName = scientificName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6364/buggy-version/app.src.main.java.de.jordsand.birdcensus.core.Species.java", "BodyUseAPI": [], "Fixed commit": "27a49fd2de3fbb31f5de41e0c44d213def777295", "Url": "https://api.github.com/repos/portux/Jordsand-Birdcount", "Date": "2017-09-27T22:12:31Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cars == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4722/buggy-version/oneway.g4.Node.java", "BodyUseAPI": [], "Fixed commit": "3fab061783fccfe3e7c0e37822e5381d31a2c91c", "Url": "https://api.github.com/repos/rymo4/oneway", "Date": "2013-10-07T07:26:39Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (localScope.containsKey(\"return\")) scope.put(\"return\", localScope.get(\"return\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6570/buggy-version/src.com.anocube.anoscript.src.ast.flow.If.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "b1fb856a86d3b6c61cb33621bc4e566de8271f4c", "Url": "https://api.github.com/repos/doctorn/Anoscript", "Date": "2016-03-14T08:41:10Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((message) != null) { send((\"/broadcast \" + (message))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3783/buggy-version/src.chat.ChatClient.java", "BodyUseAPI": ["chat.ChatClient.send(java.lang.String)"], "Fixed commit": "6d2ee116eca0a2957e51b9f4cd48cf7f2636764c", "Url": "https://api.github.com/repos/WestonReed/ChatClient", "Date": "2016-06-02T01:39:10Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (modulePublishState == (-1)) { modulePublishState = org.eclipse.wst.server.core.IServer.PUBLISH_STATE_UNKNOWN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2488/buggy-version/eclipse.server.plugins.com.liferay.ide.eclipse.server.core.src.com.liferay.ide.eclipse.server.remote.RemoteServerBehavior.java", "BodyUseAPI": [], "Fixed commit": "4a95f6f457f010c77609d7f750cedec29c3806db", "Url": "https://api.github.com/repos/gamerson/liferay-ide", "Date": "2011-10-17T09:19:03Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (millisUntilFinished <= 10000) { timerText.setTextColor(android.graphics.Color.parseColor(\"#FF0000\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1946/buggy-version/src.android.activity.CustomCameraActivity.java", "BodyUseAPI": [], "Fixed commit": "e1d355d09e59707a940bae1030d1881d0e75431f", "Url": "https://api.github.com/repos/whitespectre/cordova-android-custom-camera", "Date": "2017-06-12T13:26:07Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.opendatanode.plugins.extractor.ckan.file.FilesFromCkanHelper.PARAM_ID.equalsIgnoreCase(key)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3919/buggy-version/src.main.java.org.opendatanode.plugins.extractor.ckan.file.FilesFromCkanHelper.java", "BodyUseAPI": [], "Fixed commit": "2f97c5c57b6eb4eb66322a003fb4f0e9352ecf13", "Url": "https://api.github.com/repos/OpenDataNode/UVPlugin-filesFromCKAN", "Date": "2016-08-25T12:42:49Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(typed_u)) { typed_u = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3061/buggy-version/src.minecraft.com.comze_instancelabs.client.gui.CmdTextboxGUI.java", "BodyUseAPI": [], "Fixed commit": "3f50fc39e31d5aa0b0278b69456d069f26c63a88", "Url": "https://api.github.com/repos/instance01/InstanceClient", "Date": "2014-05-21T19:31:02Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (net.minecraft.client.Minecraft.getMinecraft().m.getRender().cmdTab) { net.minecraft.client.Minecraft.getMinecraft().m.getRender().cmdTab = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3061/buggy-version/src.minecraft.com.comze_instancelabs.client.gui.CmdTextboxGUI.java", "BodyUseAPI": ["net.minecraft.client.Minecraft.getMinecraft().m.getRender()"], "Fixed commit": "3f50fc39e31d5aa0b0278b69456d069f26c63a88", "Url": "https://api.github.com/repos/instance01/InstanceClient", "Date": "2014-05-21T19:31:02Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.ethz.mlmq.server.db.dao.ClientDao.getClientId(request.getClientName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (clientId != null) { client = new ch.ethz.mlmq.dto.ClientDto(clientId, request.getClientName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5822/buggy-version/code.mlmq.src.ch.ethz.mlmq.server.processing.RequestProcessor.java", "BodyUseAPI": [], "Fixed commit": "6507ca73961096f48f6e4d15ee6385edf5ecd5f0", "Url": "https://api.github.com/repos/ganzm/AdvancedSystemsLab2013", "Date": "2013-11-09T19:44:15Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == (org.teavm.model.ValueType.VOID)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2392/buggy-version/core.src.main.java.org.teavm.backend.wasm.generate.WasmGeneratorUtil.java", "BodyUseAPI": [], "Fixed commit": "fe7b96f578411908d7b9e8bbc4ba9f241b01fffa", "Url": "https://api.github.com/repos/konsoletyper/teavm", "Date": "2016-09-01T09:54:49Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getPaths().size()) > 0) { url += getPaths().stream().collect(java.util.stream.Collectors.joining(com.hpe.adm.nga.sdk.OctaneUrl.PATH_SEPARATOR)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2618/buggy-version/sdk-src.src.main.java.com.hpe.adm.nga.sdk.OctaneUrl.java", "BodyUseAPI": [], "Fixed commit": "ccaf0405327856cd369781bcca56e56f785ece71", "Url": "https://api.github.com/repos/MicroFocus/ALMOctaneJavaRESTSDK", "Date": "2017-05-08T15:23:37Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((slaveTemplate.getUseSlaveAlwaysIfAvail()) == (Node.Mode.NORMAL)) { if ((label == null) || (label.matches(slaveTemplate.getLabelDataSet()))) { return slaveTemplate; } }else if ((slaveTemplate.getUseSlaveAlwaysIfAvail()) == (Node.Mode.EXCLUSIVE)) { if ((label != null) && (label.matches(slaveTemplate.getLabelDataSet()))) { return slaveTemplate; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7783/buggy-version/src.main.java.com.microsoftopentechnologies.azure.AzureCloud.java", "BodyUseAPI": ["com.microsoftopentechnologies.azure.AzureSlaveTemplate.getLabelDataSet()", "com.microsoftopentechnologies.azure.AzureSlaveTemplate.getLabelDataSet()", "hudson.model.Label.matches(slaveTemplate.getLabelDataSet())", "com.microsoftopentechnologies.azure.AzureSlaveTemplate.getUseSlaveAlwaysIfAvail()", "hudson.model.Label.matches(slaveTemplate.getLabelDataSet())"], "Fixed commit": "5e439ee6586c297e34588c4ccefbc8a1f7e5cb58", "Url": "https://api.github.com/repos/mmitche/azure-slave-plugin", "Date": "2014-12-08T23:04:05Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cur.key) > (comp.key)) { returnCode = 1; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/55/buggy-version/prog2.src.main.java.CircularSuffixArray.java", "BodyUseAPI": [], "Fixed commit": "3cbe8e5d4a085ab48172992d89e5421361c4a0c2", "Url": "https://api.github.com/repos/neshdev/coursera-algorithm-part2", "Date": "2015-12-23T07:34:11Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (root.equals(cur)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/55/buggy-version/prog2.src.main.java.CircularSuffixArray.java", "BodyUseAPI": [], "Fixed commit": "3cbe8e5d4a085ab48172992d89e5421361c4a0c2", "Url": "https://api.github.com/repos/neshdev/coursera-algorithm-part2", "Date": "2015-12-23T07:34:11Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["row.get(\"vocabNamespace\").toString()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((ns == null) || (ns.isEmpty())) { ns = vocab; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1188/buggy-version/rdfunit-core.src.main.java.org.aksw.rdfunit.Utils.RDFUnitUtils.java", "BodyUseAPI": [], "Fixed commit": "3c6f2d243f4f4b2b91d4e9883336a2548dcd4d35", "Url": "https://api.github.com/repos/AKSW/RDFUnit", "Date": "2014-08-19T16:11:11Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataSnapshot.hasChildren()) { com.afomic.servers.model.Order mOrder = dataSnapshot.getValue(com.afomic.servers.model.Order.class); mOrders.add(mOrder); mAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4295/buggy-version/app.src.main.java.com.afomic.servers.kitchen.activities.OrderDetailActivity.java", "BodyUseAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Fixed commit": "c30851e6d3f558275289ddbbbc716c75f91633b0", "Url": "https://api.github.com/repos/afomic/servers", "Date": "2017-09-18T08:55:19Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loserID == (sliceAndDice.Robot.getRobotID())) { loser = new sliceAndDice.Robot(); }else { loser = sliceAndDice.Scoreboard.getPlayerByID(winnerID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5629/buggy-version/SliceAndDice.src.sliceAndDice.Scoreboard.java", "BodyUseAPI": [], "Fixed commit": "5a5aea878d541fdb2d0bd4533b87114e7bf86fb9", "Url": "https://api.github.com/repos/elanmarkov/cse360project", "Date": "2016-04-27T20:49:31Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gamepad2.x) { srvoZiplineDrop.setPosition(1.0F); }else { srvoZiplineDrop.setPosition(0.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5961/buggy-version/FtcRobotController.src.main.java.com.qualcomm.ftcrobotcontroller.opmodes.ResQ_TeleOp.java", "BodyUseAPI": [], "Fixed commit": "8da695b23234e1121927d78cc2c0db5c1bd74d9b", "Url": "https://api.github.com/repos/nhs-t10/resq-bot", "Date": "2016-03-19T02:23:16Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((titleTV) != null) { titleTV.setAlpha((1 - (appBarOffset))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5585/buggy-version/fancytablayout.src.main.java.com.github.ypicoleal.fancytablayout.FancyTabLayout.java", "BodyUseAPI": [], "Fixed commit": "62191dcff3b08883c5308627323144436f38e646", "Url": "https://api.github.com/repos/ypicoleal/FancyTab", "Date": "2017-04-26T22:52:47Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (net.minecraft.client.Minecraft.getMinecraft().thePlayer.getDisplayName().equals(\"OnyxDarkKnight\")) net.minecraft.client.Minecraft.getMinecraft().thePlayer.addChatMessage(new net.minecraft.util.ChatComponentText(item.toString()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/861/buggy-version/src.main.java.darkknight.jewelrycraft.client.gui.GuiJewelryModifier.java", "BodyUseAPI": ["net.minecraft.client.Minecraft.getMinecraft().thePlayer.addChatMessage(net.minecraft.util.ChatComponentText)"], "Fixed commit": "f85c065ec9debeb76582d9bbc2fd8fc17855f9c4", "Url": "https://api.github.com/repos/sor1n/Jewelrycraft", "Date": "2015-06-12T18:38:45Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (net.minecraft.client.Minecraft.getMinecraft().thePlayer.getDisplayName().equals(\"OnyxDarkKnight\")) net.minecraft.client.Minecraft.getMinecraft().thePlayer.addChatMessage(new net.minecraft.util.ChatComponentText(item.toString()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/861/buggy-version/src.main.java.darkknight.jewelrycraft.client.gui.GuiJewelryModifier.java", "BodyUseAPI": ["net.minecraft.client.Minecraft.getMinecraft().thePlayer.addChatMessage(net.minecraft.util.ChatComponentText)"], "Fixed commit": "f85c065ec9debeb76582d9bbc2fd8fc17855f9c4", "Url": "https://api.github.com/repos/sor1n/Jewelrycraft", "Date": "2015-06-12T18:38:45Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((model) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5106/buggy-version/src.main.java.org.iplantc.core.uiapps.widgets.client.view.editors.properties.AppTemplatePropertyEditor.java", "BodyUseAPI": [], "Fixed commit": "4ece3a8e8287de7c60a925273e3daae52ed9bb9a", "Url": "https://api.github.com/repos/iPlantCollaborativeOpenSource/ui-apps-widgets-module", "Date": "2013-09-24T16:57:27Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (key == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/832/buggy-version/src.main.com.quickserverlab.quickcached.StatsReportGenerator.java", "BodyUseAPI": [], "Fixed commit": "91e2f15c152a9510381021c5ba17972b31d788dd", "Url": "https://api.github.com/repos/QuickServerLab/QuickCached", "Date": "2014-06-19T09:36:29Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (key == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/832/buggy-version/src.main.com.quickserverlab.quickcached.StatsReportGenerator.java", "BodyUseAPI": [], "Fixed commit": "91e2f15c152a9510381021c5ba17972b31d788dd", "Url": "https://api.github.com/repos/QuickServerLab/QuickCached", "Date": "2014-06-19T09:36:29Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (value == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/832/buggy-version/src.main.com.quickserverlab.quickcached.StatsReportGenerator.java", "BodyUseAPI": [], "Fixed commit": "91e2f15c152a9510381021c5ba17972b31d788dd", "Url": "https://api.github.com/repos/QuickServerLab/QuickCached", "Date": "2014-06-19T09:36:29Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((traverser.bulk()) < 10) { for (int i = 0; i < (traverser.bulk()); i++) { if ((this.probability) >= (org.apache.tinkerpop.gremlin.process.traversal.step.filter.CoinStep.RANDOM.nextDouble())) newBulk++; } }else { newBulk = java.lang.Double.valueOf((org.apache.tinkerpop.gremlin.process.traversal.step.filter.CoinStep.RANDOM.nextBoolean() ? java.lang.Math.floor(((this.probability) * (traverser.bulk()))) : java.lang.Math.ceil(((this.probability) * (traverser.bulk()))))).longValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5913/buggy-version/gremlin-core.src.main.java.org.apache.tinkerpop.gremlin.process.traversal.step.filter.CoinStep.java", "BodyUseAPI": ["java.lang.Math.ceil(((this.probability) * (traverser.bulk())))", "java.lang.Double.longValue()", "java.lang.Math.floor(((this.probability) * (traverser.bulk())))", "traverser.bulk()", "traverser.bulk()", "traverser.bulk()", "java.lang.Double.valueOf((org.apache.tinkerpop.gremlin.process.traversal.step.filter.CoinStep.RANDOM.nextBoolean() ? java.lang.Math.floor(((this.probability) * (traverser.bulk()))) : java.lang.Math.ceil(((this.probability) * (traverser.bulk())))))"], "Fixed commit": "22fdecd1ed3936b23b5b048ecf7f2d5f4aaf52b1", "Url": "https://api.github.com/repos/apache/tinkerpop", "Date": "2015-06-08T21:13:13Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.json.JSONObject>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (modelsNumber == 0) { return new ru.goodsreview.core.util.Pair<java.lang.Integer, java.util.List<org.json.JSONObject>>(1, new java.util.ArrayList<org.json.JSONObject>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1382/buggy-version/goods-review-frontend.src.main.java.ru.goodsreview.frontend.model.CategoryPageModel.java", "BodyUseAPI": [], "Fixed commit": "8e4a8a678d0f50086ccc46d8eb5ee7f36b52dc3a", "Url": "https://api.github.com/repos/AChugr/goods-review-ng", "Date": "2012-10-19T19:24:09Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((itemsForProjects[position]) == 0) { percentage = 0; }else { percentage = (((float) (itemsForSpecificProject[position])) / (itemsForProjects[position])) * 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3344/buggy-version/app.src.main.java.rocks.athrow.android_udacity_reviews.adapter.RatingBarItemAdapter.java", "BodyUseAPI": [], "Fixed commit": "6846cee49c8c5c5cca8a079baf125364d4b2084b", "Url": "https://api.github.com/repos/rabyunghwa/android-udacity-reviews", "Date": "2017-08-28T01:14:37Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key.equals(de.tobiasbielefeld.solitaire.ui.settings.PREF_KEY_MOVEMENT_SPEED)) { if ((animate) != null) { animate.updateMovementSpeed(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4062/buggy-version/app.src.main.java.de.tobiasbielefeld.solitaire.ui.settings.Settings.java", "BodyUseAPI": [], "Fixed commit": "c6bbf4f21aaf7b2f0dd06b0e499eba6bf66e8d2b", "Url": "https://api.github.com/repos/TobiasBielefeld/Simple-Solitaire", "Date": "2017-06-26T20:59:42Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(interceptorHolder.getOutFaultInterceptors().isEmpty())) { factory.setOutFaultInterceptors(interceptorHolder.getOutFaultInterceptors()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7082/buggy-version/components.camel-cxf.src.main.java.org.apache.camel.component.cxf.jaxrs.CxfRsEndpoint.java", "BodyUseAPI": ["org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean.setOutFaultInterceptors(interceptorHolder.getOutFaultInterceptors())", "org.apache.camel.component.cxf.jaxrs.CxfRsEndpoint.InterceptorHolder.getOutFaultInterceptors()"], "Fixed commit": "773e5dab87dda7995966e50e24fedf010a087d6d", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-04-04T03:32:11Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(interceptorHolder.getOutInterceptors().isEmpty())) { factory.setOutInterceptors(interceptorHolder.getOutInterceptors()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7082/buggy-version/components.camel-cxf.src.main.java.org.apache.camel.component.cxf.jaxrs.CxfRsEndpoint.java", "BodyUseAPI": ["org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean.setOutInterceptors(interceptorHolder.getOutInterceptors())", "org.apache.camel.component.cxf.jaxrs.CxfRsEndpoint.InterceptorHolder.getOutInterceptors()"], "Fixed commit": "773e5dab87dda7995966e50e24fedf010a087d6d", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-04-04T03:32:11Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(interceptorHolder.getInFaultInterceptors().isEmpty())) { factory.setInFaultInterceptors(interceptorHolder.getInFaultInterceptors()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7082/buggy-version/components.camel-cxf.src.main.java.org.apache.camel.component.cxf.jaxrs.CxfRsEndpoint.java", "BodyUseAPI": ["org.apache.camel.component.cxf.jaxrs.CxfRsEndpoint.InterceptorHolder.getInFaultInterceptors()", "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean.setInFaultInterceptors(interceptorHolder.getInFaultInterceptors())"], "Fixed commit": "773e5dab87dda7995966e50e24fedf010a087d6d", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-04-04T03:32:11Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(interceptorHolder.getInInterceptors().isEmpty())) { factory.setInInterceptors(interceptorHolder.getInInterceptors()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7082/buggy-version/components.camel-cxf.src.main.java.org.apache.camel.component.cxf.jaxrs.CxfRsEndpoint.java", "BodyUseAPI": ["org.apache.camel.component.cxf.jaxrs.CxfRsEndpoint.InterceptorHolder.getInInterceptors()", "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean.setInInterceptors(interceptorHolder.getInInterceptors())"], "Fixed commit": "773e5dab87dda7995966e50e24fedf010a087d6d", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-04-04T03:32:11Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.camel.util.ExchangeHelper.getContentType(org.apache.camel.Exchange)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (contentTypeString != null) { if ((contentTypeString.indexOf(\"charset\")) > 0) { contentType = org.apache.http.entity.ContentType.parse(contentTypeString); }else { contentType = org.apache.http.entity.ContentType.create(contentTypeString); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6646/buggy-version/components.camel-http4.src.main.java.org.apache.camel.component.http4.HttpProducer.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "org.apache.http.entity.ContentType.parse(java.lang.String)", "org.apache.http.entity.ContentType.create(java.lang.String)"], "Fixed commit": "2275e28fb3abe5395d8c59d4d2cd6d2e9820ae8f", "Url": "https://api.github.com/repos/ahaarrestad/camel", "Date": "2014-10-09T08:11:17Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.randrdevelopment.propertygroup.PropertyGroupConfig.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (PropertyOwner != null) { if (PropertyOwner.equalsIgnoreCase(playerName)) { addMemberToProperty(s, java.lang.Integer.toString(i), args[0], sender); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8532/buggy-version/src.com.randrdevelopment.propertygroup.command.commands.AddToPropertyCommand.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "d1349cb6145081d0068ecba6785bca2b8650cbbf", "Url": "https://api.github.com/repos/fireball1725/PropertyGroup", "Date": "2012-04-06T00:26:57Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.appengine.api.users.UserServiceFactory.getUserService()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((userService.getCurrentUser()) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6233/buggy-version/src.main.java.user.GoogleUser.java", "BodyUseAPI": [], "Fixed commit": "63ba878166993b20434129cf1258a0a41f15a9fc", "Url": "https://api.github.com/repos/329Enjuneers/Budgeter", "Date": "2016-10-04T17:36:30Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isEnabled())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5680/buggy-version/src.main.java.org.jtrfp.trcl.beh.ui.AfterburnerBehavior.java", "BodyUseAPI": [], "Fixed commit": "911990d26ae11a87cbf7f883529e90881142f72f", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2016-01-19T05:51:34Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((f1 == null) || (f1 == null)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4520/buggy-version/src.main.java.tonius.neiintegration.mcforge.RecipeHandlerFluidRegistry.java", "BodyUseAPI": [], "Fixed commit": "7c28c31835d944a465db74abb26494e83678200f", "Url": "https://api.github.com/repos/Tonius/NEI-Integration", "Date": "2015-04-11T13:14:19Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.lang.Character.isLetter(sections.peek().charAt(0))) return simplifyFunction(generateFunction(sections.pop()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6413/buggy-version/src.com.varunp.scicalc.Parser.java", "BodyUseAPI": ["java.util.Stack<java.lang.String>.pop()", "com.varunp.scicalc.Parser.simplifyFunction(java.lang.String)", "com.varunp.scicalc.Parser.generateFunction(java.lang.String)"], "Fixed commit": "f489da44cf4b6302bd869019b19c45ccdd12fd81", "Url": "https://api.github.com/repos/vparthas/Scientific-Calculator", "Date": "2016-04-08T12:28:12Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((options) == null) || ((options.getFTPs()) == null)) { ftps = new java.util.ArrayList<dk.frv.eavdam.data.FTP>(); }else { ftps = new java.util.ArrayList<dk.frv.eavdam.data.FTP>(options.getFTPs()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2864/buggy-version/src.main.java.dk.frv.eavdam.menus.OptionsMenuItem.java", "BodyUseAPI": ["dk.frv.eavdam.data.Options.getFTPs()"], "Fixed commit": "311e0dda783efe735a257156dbb5258517b53754", "Url": "https://api.github.com/repos/dma-graveyard/EAVDAM", "Date": "2011-09-16T08:32:24Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(copy.isEmpty())) { com.google.android.maps.OverlayItem cheapest = copy.iterator().next(); tapOverlay(cheapest); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/446/buggy-version/client.src.main.java.net.palacesoft.cngstation.client.mapoverlay.StationBalloonOverlay.java", "BodyUseAPI": ["java.util.Set<com.google.android.maps.OverlayItem>.iterator()", "copy.iterator().next()"], "Fixed commit": "6983ee670e282a215c427997bc22dee738ac83a5", "Url": "https://api.github.com/repos/manuel-palacio/CNG-Stations", "Date": "2012-09-01T20:53:04Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(distances.isEmpty())) { tapOverlay(distances.get(distances.keySet().iterator().next())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/446/buggy-version/client.src.main.java.net.palacesoft.cngstation.client.mapoverlay.StationBalloonOverlay.java", "BodyUseAPI": ["distances.keySet().iterator().next()", "java.util.Map<java.lang.Float, net.palacesoft.cngstation.client.mapoverlay.StationOverlayItem>.get(distances.keySet().iterator().next())", "net.palacesoft.cngstation.client.mapoverlay.StationBalloonOverlay.tapOverlay(distances.get(distances.keySet().iterator().next()))", "distances.keySet().iterator()", "java.util.Map<java.lang.Float, net.palacesoft.cngstation.client.mapoverlay.StationOverlayItem>.keySet()"], "Fixed commit": "6983ee670e282a215c427997bc22dee738ac83a5", "Url": "https://api.github.com/repos/manuel-palacio/CNG-Stations", "Date": "2012-09-01T20:53:04Z"},
{"Line": "=>827", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (justForcedForward) { currentKeys = null; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2509/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.exec.GroupByOperator.java", "BodyUseAPI": [], "Fixed commit": "aa6a66e8d7385be40fc3c28898ef715769d92214", "Url": "https://api.github.com/repos/yhuai/hive", "Date": "2012-09-18T02:41:38Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o.getName().equals(org.apache.hadoop.hive.ql.exec.GroupByOperator.getOperatorName())) { org.apache.hadoop.hive.ql.exec.GroupByOperator gbyop = ((org.apache.hadoop.hive.ql.exec.GroupByOperator) (o)); gbyop.setJustForcedForward(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2509/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.exec.CorrelationReducerDispatchOperator.java", "BodyUseAPI": [], "Fixed commit": "aa6a66e8d7385be40fc3c28898ef715769d92214", "Url": "https://api.github.com/repos/yhuai/hive", "Date": "2012-09-18T02:41:38Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["teamfmg.hangman.DatabaseManager.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(db.isOnline())) { findViewById(R.id.button_singleplayerMenu_StandardMode).setEnabled(false); findViewById(R.id.button_singleplayerMenu_HardcoreMode).setEnabled(false); findViewById(R.id.button_singleplayerMenu_SpeedMode).setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3034/buggy-version/app.src.main.java.teamfmg.hangman.SingleplayerMenu.java", "BodyUseAPI": [], "Fixed commit": "bd4cabb5b6d46ba41b5cf9e4f3b08f9a4b07f25f", "Url": "https://api.github.com/repos/ZaubererHaft/Hangman", "Date": "2016-02-10T09:13:00Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.api.services.genomics.model.Read.getNextMatePosition()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (matePosition == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4082/buggy-version/src.main.java.org.broadinstitute.hellbender.utils.read.GoogleGenomicsReadToGATKReadAdapter.java", "BodyUseAPI": [], "Fixed commit": "cae741e6bd422934aae1cd73c4589457bf13b916", "Url": "https://api.github.com/repos/broadinstitute/gatk", "Date": "2015-09-03T13:26:40Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.scrum.datapersistence.repository.WorkitemRepository.findOne(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (item == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3981/buggy-version/scrum-board.scrum-persistence-api.src.main.java.com.scrum.persistenceapi.workitem.query.GetWorkitemByIdQuery.java", "BodyUseAPI": [], "Fixed commit": "4c3cfb81a604cc1082fc075791384d9c4889562b", "Url": "https://api.github.com/repos/piyushGithub01/mega-scrum", "Date": "2017-04-03T03:09:21Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userTextField.getText().contains(\";\")) { setInfoDisplay(\"The character ; is not valid\"); }else if ((e.getSource()) == (cancelBtn)) { gui.setInfoDisplay(\"Not connected\"); gui.showLogIn(); try { socket.close(); } catch (java.io.IOException e1) { } frame.dispose(); }else { setInfoDisplay(\"Username and password required\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5952/buggy-version/Client3.2.LoginNewUserGUI.java", "BodyUseAPI": [], "Fixed commit": "0e5eb56465e0e6cbbb9f8b20cdc208c7413d5d90", "Url": "https://api.github.com/repos/pjohansson77/Remote-Lock", "Date": "2014-06-03T08:48:07Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (details == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6253/buggy-version/TaskManagerProject.src.manager.datamanager.searchfilter.KeywordFilter.java", "BodyUseAPI": [], "Fixed commit": "7d3f62dbb73e728d586efb3f11d5a399c0747a31", "Url": "https://api.github.com/repos/cs2103aug2014-w11-1j/main", "Date": "2014-10-06T16:51:12Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.github.rschmitt.dynamicobject.internal.Instances.proxyCache.containsKey(type))) com.github.rschmitt.dynamicobject.internal.Instances.ensureInitialized(type);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4255/buggy-version/src.main.java.com.github.rschmitt.dynamicobject.internal.Instances.java", "BodyUseAPI": ["com.github.rschmitt.dynamicobject.internal.Instances.ensureInitialized(java.lang.Class<D>)"], "Fixed commit": "e30de4352c6e16dec4579e53d8e276f3284e722d", "Url": "https://api.github.com/repos/rschmitt/dynamic-object", "Date": "2015-06-12T00:29:07Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (files != null) { for (java.io.File child : files) { if (!(org.unfoldingword.resourcecontainer.FileUtil.deleteQuietly(child))) { return false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7983/buggy-version/resource-container.src.main.java.org.unfoldingword.resourcecontainer.FileUtil.java", "BodyUseAPI": [], "Fixed commit": "9cc8fb1deb8c08c05936b510dba3f7a52cc69b9d", "Url": "https://api.github.com/repos/unfoldingWord-dev/android-resource-container", "Date": "2017-03-23T22:12:08Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!ok) { }else if (!(track.equals(mp3Track))) { if (mp3Track != null) { comp.getFileTO().setTrack(java.lang.Integer.valueOf(mp3Track)); } be.home.domain.model.MP3TagUtils.log.warn(((((\"Track does not match: \" + \"mp3: \") + mp3Track) + \" / Formatted: \") + track)); addItem(comp.getFileTO().getId(), comp.getFileTO().getId(), comp.getFileTO().getFile(), comp.getFileAlbumTO().getName(), MP3Tag.TRACK, mp3Track, track); ok = false; }else if ((java.lang.Integer.parseInt(track)) != (comp.getFileTO().getTrack().intValue())) { be.home.domain.model.MP3TagUtils.log.warn(((((\"Track does not match: \" + \"DB: \") + (comp.getFileTO().getTrack())) + \" / Formatted: \") + track)); addItem(comp.getFileTO().getId(), comp.getFileTO().getId(), comp.getFileTO().getFile(), comp.getFileAlbumTO().getName(), MP3Tag.TRACK, java.lang.String.valueOf(comp.getFileTO().getTrack()), track); comp.getFileTO().setTrack(java.lang.Integer.valueOf(track)); ok = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7336/buggy-version/apps.MyUtils.src.java.be.home.domain.model.MP3TagUtils.java", "BodyUseAPI": [], "Fixed commit": "765a0198e91f9387cdb3ebf1e0cacbd289379355", "Url": "https://api.github.com/repos/ghyssee/Home", "Date": "2017-01-15T20:37:01Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((indicators) != null) { indicators.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5265/buggy-version/AugmentedBizzClient.src.com.app.augmentedbizz.application.data.DataManager.java", "BodyUseAPI": [], "Fixed commit": "5b02313641eee2aed117e98e98eda27f22b37863", "Url": "https://api.github.com/repos/Vladee/com.client.AugmentedBizz", "Date": "2011-11-28T16:39:10Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((stack.getTagCompound()) != null) && (stack.getTagCompound().hasKey(\"playerName\"))) tile.setPlayerName(stack.getTagCompound().getString(\"playerName\")); else tile.setPlayerName(player.username);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8321/buggy-version/WaterCraft.src.dgrxf.watercraft.item.ItemBlockToolBox.java", "BodyUseAPI": ["stack.getTagCompound().getString(java.lang.String)", "dgrxf.watercraft.tileentity.WCTileEntityToolBox.setPlayerName(stack.getTagCompound().getString(\"playerName\"))", "net.minecraft.item.ItemStack.getTagCompound()"], "Fixed commit": "20b42f81d1c4022d78189ad39dd85c1ae006a41c", "Url": "https://api.github.com/repos/Robotic-Brain/WaterCraft", "Date": "2013-11-09T23:43:09Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (inv != null) { list.add(((stack.getTagCompound().getString(\"playerName\")) + \"'s Toolbox contains: \")); int index = 0; for (int i = 0; i < (inv.length); i++) { if ((inv[i]) != null) { index++; list.add(((index + \"| \") + (inv[i].getDisplayName()))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8321/buggy-version/WaterCraft.src.dgrxf.watercraft.item.ItemBlockToolBox.java", "BodyUseAPI": ["java.util.List.add(((index + \"| \") + (inv[i].getDisplayName())))", "inv[i].getDisplayName()"], "Fixed commit": "20b42f81d1c4022d78189ad39dd85c1ae006a41c", "Url": "https://api.github.com/repos/Robotic-Brain/WaterCraft", "Date": "2013-11-09T23:43:09Z"},
{"Line": "=>516", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fileName == null) { this.name = java.lang.String.valueOf(new java.util.Date().getTime()); try { this.name += \".\" + (org.apache.tika.config.TikaConfig.getDefaultConfig().getMimeRepository().forName(this.mimeType).getExtension()); } catch (org.apache.tika.mime.MimeTypeException e) { } }else { this.name = fileName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3219/buggy-version/app.models.Attachment.java", "BodyUseAPI": [], "Fixed commit": "faff60f7da3c816aafc6d0e050a5353b57c2cfd8", "Url": "https://api.github.com/repos/seyriz/yobi", "Date": "2014-10-28T09:39:59Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.dubbo.rpc.Invoker<?>.invoke(com.alibaba.dubbo.rpc.Invocation)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(result.hasException())) { rpcCode = com.yunxi.common.lang.enums.RpcCode.RPC_SUCCESS.getCode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/9198/buggy-version/dubbo-rpc.dubbo-rpc-default.src.main.java.com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.java", "BodyUseAPI": [], "Fixed commit": "e762a80c7076fa5b90a6bf148724be6904acc528", "Url": "https://api.github.com/repos/leukony/yxdubbo", "Date": "2017-12-07T03:46:42Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getPlayer()) instanceof net.minecraftforge.common.util.FakePlayer) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/986/buggy-version/src.main.java.net.einsteinsci.betterbeginnings.event.BlockBreakHelper.java", "BodyUseAPI": [], "Fixed commit": "d7227e4f6006dbaea36e48fb301bcbf7d0ba868b", "Url": "https://api.github.com/repos/Leviathan143/betterbeginnings-MC1.7", "Date": "2015-11-01T19:07:13Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (true) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6558/buggy-version/src.main.java.com.warren.tournament.service.populators.TournamentPopulatorService.java", "BodyUseAPI": [], "Fixed commit": "da86eee9903212df1f95f1aaefb383d89dec4c2d", "Url": "https://api.github.com/repos/whennemuth/TournamentBuilder", "Date": "2015-12-22T07:08:21Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(android.text.TextUtils.isEmpty(apnName))) { selection += (\" AND \" + (Telephony.Carriers.APN)) + \"=?\"; selectionArgs = new java.lang.String[]{ apnName.trim() }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/9063/buggy-version/src.com.android.mms.transaction.TransactionSettings.java", "BodyUseAPI": [], "Fixed commit": "cac6feb62c6e36a3e0b3e54143db6a12549ed619", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-packages-apps-Mms", "Date": "2015-05-23T21:30:25Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["error.getCause()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (cause != null) { listener.onError(cause.toString()); cause.printStackTrace(); }else { listener.onError(\"server error 2\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5771/buggy-version/common.src.main.java.com.ymr.common.net.SimpleNetWorkModel.java", "BodyUseAPI": ["java.lang.Throwable.printStackTrace()", "listener.onError(cause.toString())", "java.lang.Throwable.toString()"], "Fixed commit": "e5b7ee7935acc733161a826fdb3cc2f27b0efcf6", "Url": "https://api.github.com/repos/yangwuan55/common-android", "Date": "2015-08-10T14:35:24Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ilu.surveytool.databasemanager.QuestionDB.getQuestionByPageIndex(int,int)", "ilu.surveytool.databasemanager.QuestionDB.getQuestionsByPageId(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((prevIndex != 0) || ((questions.get(0).getQuestionId()) != questionId)) { for (int i = 0; i < (questions.size()); i++) { int index = questions.get(i).getIndex(); if (index < currrentIndex) { questionDB.updateQuestionIndex(questions.get(i).getQuestionId(), pageId, (index + 1)); }else if (index > currrentIndex) { questionDB.updateQuestionIndex(questions.get(i).getQuestionId(), pageId, (index - 1)); }else { if (prevIndex < currrentIndex) { questionDB.updateQuestionIndex(questionId, pageId, (prevIndex + 1)); }else { questionDB.updateQuestionIndex(questionId, pageId, prevIndex); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8197/buggy-version/SurveyManager.src.ilu.surveymanager.handler.QuestionHandler.java", "BodyUseAPI": ["java.util.List<ilu.surveytool.databasemanager.DataObject.Question>.get(int)", "ilu.surveytool.databasemanager.QuestionDB.updateQuestionIndex(questions.get(i).getQuestionId(),int,int)", "java.util.List<ilu.surveytool.databasemanager.DataObject.Question>.size()", "java.util.List<ilu.surveytool.databasemanager.DataObject.Question>.get(int)", "ilu.surveytool.databasemanager.QuestionDB.updateQuestionIndex(int,int,int)", "java.util.List<ilu.surveytool.databasemanager.DataObject.Question>.get(int)", "questions.get(i).getIndex()", "ilu.surveytool.databasemanager.QuestionDB.updateQuestionIndex(questions.get(i).getQuestionId(),int,int)", "ilu.surveytool.databasemanager.QuestionDB.updateQuestionIndex(int,int,int)", "questions.get(i).getQuestionId()", "questions.get(i).getQuestionId()"], "Fixed commit": "d393ee379c5f2f2e16adb0d6c277b957ccd25866", "Url": "https://api.github.com/repos/GutiX/surveytool", "Date": "2016-03-17T17:51:43Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((other.paddingCounter) != (paddingCounter)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5474/buggy-version/gsm0348.gsm0348-api.src.main.java.ru.tapublog.lib.gsm0348.api.model.ResponsePacketHeader.java", "BodyUseAPI": [], "Fixed commit": "2268b052db54058a56b62e23c755c250305a51e7", "Url": "https://api.github.com/repos/gangbanlau/gsm0348", "Date": "2017-07-10T07:00:54Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(java.util.Arrays.equals(tar, other.tar))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5474/buggy-version/gsm0348.gsm0348-api.src.main.java.ru.tapublog.lib.gsm0348.api.model.ResponsePacketHeader.java", "BodyUseAPI": [], "Fixed commit": "2268b052db54058a56b62e23c755c250305a51e7", "Url": "https://api.github.com/repos/gangbanlau/gsm0348", "Date": "2017-07-10T07:00:54Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(java.util.Arrays.equals(counter, other.counter))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5474/buggy-version/gsm0348.gsm0348-api.src.main.java.ru.tapublog.lib.gsm0348.api.model.ResponsePacketHeader.java", "BodyUseAPI": [], "Fixed commit": "2268b052db54058a56b62e23c755c250305a51e7", "Url": "https://api.github.com/repos/gangbanlau/gsm0348", "Date": "2017-07-10T07:00:54Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((contentID) != 1) { contentID = sharedPreferences.getInt(\"contentIDCallBack\", Default.ZERO); loadSentenceSetData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/948/buggy-version/app.src.main.java.jp.co.efusion.aninstantreply.SentenceSetActivity.java", "BodyUseAPI": [], "Fixed commit": "f4770da1d41e0108b69cbe584d19332321f07c41", "Url": "https://api.github.com/repos/cuongptit93/InstantRep", "Date": "2016-10-14T07:48:02Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (getter != null) { java.lang.String value = getter.get(key); if (value != null) { return value; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8770/buggy-version/src.java.org.xblackcat.sjpu.settings.config.MultiSourceConfig.java", "BodyUseAPI": ["org.xblackcat.sjpu.settings.config.IValueGetter.get(java.lang.String)"], "Fixed commit": "b6537057e7eff30e29e6f2798a27976aa02571f0", "Url": "https://api.github.com/repos/xBlackCat/sjpu-settings-provider", "Date": "2015-11-13T11:50:03Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == (io.evercam.androidapp.utils.Constants.RESULT_FALSE)) { startPlay(); }else if (resultCode == (io.evercam.androidapp.utils.Constants.RESULT_DELETED)) { setResult(Constants.RESULT_TRUE); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6110/buggy-version/evercamPlay.src.main.java.io.evercam.androidapp.video.VideoActivity.java", "BodyUseAPI": [], "Fixed commit": "3111009c8c9232ce8ddfcda0a56884bdef7b533a", "Url": "https://api.github.com/repos/evercam/evercam-android", "Date": "2015-11-17T15:40:51Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentLine.contains(\"<item>\")) { do { if (currentLine.contains(\"<title>\")) { while (!(currentLine.contains(\"</title>\"))) { currentLine = currentLine + (in.readLine()); } builder.append((\"\\nTitel: \" + (currentLine.replace(\"<title>\", \"\").replace(\"</title>\", \"\")))); } if (currentLine.contains(\"<description>\")) { while (!(currentLine.contains(\"</description>\"))) { currentLine = currentLine + (in.readLine()); } builder.append((\"\\nDescription: \" + (currentLine.replace(\"<description>\", \"\").replace(\"</description>\", \"\")))); } if (currentLine.contains(\"<category>\")) { while (!(currentLine.contains(\"</category>\"))) { currentLine = currentLine + (in.readLine()); } builder.append((\"\\nKategorie: \" + (currentLine.replace(\"<category>\", \"\").replace(\"</category>\", \"\")))); } if (currentLine.contains(\"<pubDate>\")) { while (!(currentLine.contains(\"</pubDate>\"))) { currentLine = currentLine + (in.readLine()); } builder.append((\"\\nPublished: \" + (currentLine.replace(\"<pubDate>\", \"\").replace(\"</pubDate>\", \"\")))); } if (!(currentLine.contains(\"</item>\"))) { currentLine = in.readLine(); } } while (!(currentLine.contains(\"</item>\")) ); builder.append(\"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7225/buggy-version/INA1.src.com.floeke.connection.INA1_P1_A1_Rss.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "b9f317f7546917a0eb36e5f61ee7ebaf7bc45b09", "Url": "https://api.github.com/repos/Floeke/INA", "Date": "2015-05-15T23:20:27Z"},
{"Line": "=>1211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sharkfw.peer.KnowledgePort.getInterest()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (interest == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5825/buggy-version/src.java.core.net.sharkfw.peer.SharkEngine.java", "BodyUseAPI": [], "Fixed commit": "76ad6b7eea3f2f601118e3dc0bfa3d608f60c72a", "Url": "https://api.github.com/repos/SharedKnowledge/SharkFW", "Date": "2014-11-14T08:57:27Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["brooklyn.util.task.system.ProcessTaskWrapper<java.lang.Integer>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result != 0) throw new java.lang.IllegalStateException((\"Error creating image directory: \" + name));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7601/buggy-version/docker.src.main.java.brooklyn.entity.container.docker.DockerHostSshDriver.java", "BodyUseAPI": [], "Fixed commit": "89ab05ea3d98001aeccea6c6a158bdb5958ede93", "Url": "https://api.github.com/repos/brooklyncentral/clocker", "Date": "2014-06-19T14:31:04Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((message) == null) return time;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1732/buggy-version/src.org.caliog.Rolecraft.Villagers.Chat.CMessage.java", "BodyUseAPI": [], "Fixed commit": "412db2372101d16b604cb1cab42074150307fa33", "Url": "https://api.github.com/repos/caliog/Rolecraft", "Date": "2017-03-15T11:57:02Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (inventory instanceof net.minecraft.inventory.ISidedInventory) { return mcjty.container.InventoryHelper.mergeItemStackInternal(inventory, ((net.minecraft.inventory.ISidedInventory) (inventory)), side, result, start, stop, undo); }else { return mcjty.container.InventoryHelper.mergeItemStackInternal(inventory, null, side, result, start, stop, undo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5843/buggy-version/src.main.java.mcjty.container.InventoryHelper.java", "BodyUseAPI": ["mcjty.container.InventoryHelper.mergeItemStackInternal(net.minecraft.inventory.IInventory,<nulltype>,int,net.minecraft.item.ItemStack,int,int,java.util.Map<java.lang.Integer, net.minecraft.item.ItemStack>)", "mcjty.container.InventoryHelper.mergeItemStackInternal(net.minecraft.inventory.IInventory,net.minecraft.inventory.IInventory,int,net.minecraft.item.ItemStack,int,int,java.util.Map<java.lang.Integer, net.minecraft.item.ItemStack>)"], "Fixed commit": "11069c3bb576b3f81f6c8d546806413c73f381d0", "Url": "https://api.github.com/repos/McJtyMods/McJtyLib", "Date": "2015-09-16T09:13:48Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (aspid == (-1)) { factory = this.m3uaManagement.createAspFactory(aspname, assocName, isHeartBeatEnabled); }else { factory = this.m3uaManagement.createAspFactory(aspname, assocName, aspid, isHeartBeatEnabled); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1273/buggy-version/m3ua.impl.src.main.java.org.mobicents.protocols.ss7.m3ua.impl.oam.M3UAShellExecutor.java", "BodyUseAPI": ["org.mobicents.protocols.ss7.m3ua.impl.M3UAManagementImpl.createAspFactory(java.lang.String,java.lang.String,long,boolean)"], "Fixed commit": "52c7180a892cca7a7b34a930b380acf5535491da", "Url": "https://api.github.com/repos/Mobicents/jss7", "Date": "2013-06-27T15:50:39Z"},
{"Line": "=>2685", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (getActivity())) { org.matrix.androidsdk.util.Log.e(org.matrix.androidsdk.fragments.MatrixMessageListFragment.LOG_TAG, \"## onTimelineInitialized : the fragment is not anymore attached to an activity\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1151/buggy-version/matrix-sdk.src.main.java.org.matrix.androidsdk.fragments.MatrixMessageListFragment.java", "BodyUseAPI": [], "Fixed commit": "194bc1cc7b01e7df6d0699fa93c53d459e568c35", "Url": "https://api.github.com/repos/matrix-org/matrix-android-sdk", "Date": "2017-07-10T12:10:20Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((comment.getState()) == (com.pratilipi.common.type.CommentState.DELETED)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6071/buggy-version/src.main.java.com.pratilipi.data.util.PratilipiDocUtil.java", "BodyUseAPI": [], "Fixed commit": "b0dde93d7701cc6d6e8a82c5357d9ae94732e488", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-06-06T12:03:40Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((comment.getCreationDate()) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6071/buggy-version/src.main.java.com.pratilipi.data.util.PratilipiDocUtil.java", "BodyUseAPI": [], "Fixed commit": "b0dde93d7701cc6d6e8a82c5357d9ae94732e488", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-06-06T12:03:40Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (line.contains(\" (Syllabus)\")) line = line.substring(0, line.indexOf(\" (Syllabus)\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4585/buggy-version/src.CoursePlanner.ScheduleMaker.ScheduleDataParser.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "f71d013b37b0e23cc740d2eeea1359d09cc6cc18", "Url": "https://api.github.com/repos/Juliang0705/CoursePicker", "Date": "2016-04-14T04:21:49Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lecho.lib.hellocharts.util.ChartUtils.dp2px(lecho.lib.hellocharts.renderer.PieChartRenderer,data.getSlicesSpacing())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sliceSpacing > 0) { canvas.drawLine(originCircleOval.centerX(), originCircleOval.centerY(), x1, y1, separationLinesPaint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2771/buggy-version/hellocharts-library.src.lecho.lib.hellocharts.renderer.PieChartRenderer.java", "BodyUseAPI": [], "Fixed commit": "1ea2470ee8db248695ea7d3ad8b9761fe29d9c66", "Url": "https://api.github.com/repos/lecho/hellocharts-android", "Date": "2015-05-10T18:06:58Z"},
{"Line": "=>662", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (url.contains(\"http://www.weibo.com/\")) { url = url.substring(\"http://www.weibo.com/\".length(), url.length()); }else { url = url.substring(\"http://e.weibo.com/\".length(), url.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/411/buggy-version/src.org.qii.weiciyuan.support.utils.Utility.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()", "java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "5ea1d3026ebf861d08dfd07374bfff7e50e86b48", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2013-12-30T15:39:01Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.ContentResolver.query(android.net.Uri,java.lang.String[],<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(cursor.moveToNext())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3781/buggy-version/api.src.main.java.com.ichi2.anki.api.AddContentApi.java", "BodyUseAPI": [], "Fixed commit": "f720c7170f985a6e9a12ee50978c2d8bc3df14ce", "Url": "https://api.github.com/repos/PSeitz/Anki-Android", "Date": "2016-03-18T09:17:47Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.apache.commons.lang.StringUtils.isEmpty(id)) { provId = provider.getProviderNo(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/891/buggy-version/src.main.java.org.oscarehr.integration.born.BornCDADocument.java", "BodyUseAPI": [], "Fixed commit": "b1948f9567305443988220ab4ef73e9a8345ca43", "Url": "https://api.github.com/repos/scoophealth/oscar", "Date": "2015-04-17T19:32:05Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dialogBuilder.getCustomView().findViewById(R.id.keyword)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (keyword.getText().toString().equals(\"123456\")) { android.content.Intent intent = new android.content.Intent(); intent.setClass(this, com.xc.qspousab.Login2Activity.class); startActivity(intent); }else { android.widget.Toast.makeText(this, \"\u8bf7\u8f93\u5165\u6b63\u786e\u5bc6\u7801\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4237/buggy-version/QspousAB.app.src.main.java.com.xc.qspousab.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "7b3d13857a0ad46cbc40e2f178740b519a21952b", "Url": "https://api.github.com/repos/CloudWangASP/QspousAB", "Date": "2017-09-16T15:29:15Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((BuildConfig.DEBUG) && (!(recyclerView.getLayoutManager().canScrollVertically()))) { throw new java.lang.AssertionError(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1819/buggy-version/app.src.main.java.com.lerenard.counter3.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "42421842c8eeb06f80279ca979c1d975fe194183", "Url": "https://api.github.com/repos/jonmcclung/Counter_Android", "Date": "2016-12-02T23:14:29Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.silverpeas.util.StringUtil.isInteger(strDomainId)) { loginUrl += \"?DomainId=\" + strDomainId; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3112/buggy-version/war-core.src.main.java.com.silverpeas.core.AutoRedirectServlet.java", "BodyUseAPI": [], "Fixed commit": "a74cf7b4debef697b879d48a4ec1c55943fe6fc7", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Core", "Date": "2014-11-27T15:19:14Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rootRef.getAuth()) != null) { com.firebase.client.Firebase personRef = rootRef.child(\"persons\").child(rootRef.getAuth().getUid()).child(person.getId()); personRef.setValue(person); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7270/buggy-version/app.src.main.java.com.km.fusionbook.view.activity.EditPersonActivity.java", "BodyUseAPI": ["rootRef.getAuth().getUid()", "com.firebase.client.Firebase.child(java.lang.String)", "rootRef.child(\"persons\").child(rootRef.getAuth().getUid())", "rootRef.child(\"persons\").child(rootRef.getAuth().getUid()).child(person.getId())", "com.firebase.client.Firebase.getAuth()"], "Fixed commit": "65bac7e77da01b8f7302fee49662275bfa9a748d", "Url": "https://api.github.com/repos/kevinmeresse/fusionbook", "Date": "2016-02-09T09:14:25Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rootRef.getAuth()) != null) { rootRef.child(\"persons\").child(rootRef.getAuth().getUid()).child(person.getId()).removeValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7270/buggy-version/app.src.main.java.com.km.fusionbook.view.activity.ShowPersonActivity.java", "BodyUseAPI": ["com.firebase.client.Firebase.child(java.lang.String)", "com.firebase.client.Firebase.getAuth()", "rootRef.child(\"persons\").child(rootRef.getAuth().getUid()).child(person.getId())", "rootRef.child(\"persons\").child(rootRef.getAuth().getUid())", "rootRef.child(\"persons\").child(rootRef.getAuth().getUid()).child(person.getId()).removeValue()", "rootRef.getAuth().getUid()"], "Fixed commit": "65bac7e77da01b8f7302fee49662275bfa9a748d", "Url": "https://api.github.com/repos/kevinmeresse/fusionbook", "Date": "2016-02-09T09:14:25Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (items.hasNext()) { for (int i = 0; (i < parallelism) && (items.hasNext()); ++i) { dataBuf.add(items.next()); } dataBuf.parallelStream().forEach(consumer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5890/buggy-version/src.main.java.org.cripac.isee.vpe.common.ParallelExecutor.java", "BodyUseAPI": ["java.util.Iterator<T>.next()", "java.util.Iterator<T>.hasNext()", "java.util.ArrayList<T>.add(T)"], "Fixed commit": "0856e1a16f5eba56e6eed0b47b228ec95ea47b68", "Url": "https://api.github.com/repos/kyu-sz/LaS-VPE-Platform", "Date": "2017-03-11T14:53:05Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bidSequenceList != null) && (!(bidSequenceList.isEmpty()))) { for (com.cfe.auction.model.persist.BidSequence bidSequence : bidSequenceList) { if (((bidSequence != null) && ((bidSequence.getBidItem()) != null)) && ((bidSequence.getBidItem().getBidItemId()) != null)) { com.cfe.auction.service.cache.manager.AuctionCacheService.bidSequenceQueue.add(bidSequence.getBidItem().getBidItemId()); com.cfe.auction.service.cache.manager.AuctionCacheService.bidSequenceMap.put(bidSequence.getBidItem().getBidItemId(), bidSequence); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4080/buggy-version/auction-service.src.main.java.com.cfe.auction.service.cache.manager.AuctionCacheService.java", "BodyUseAPI": [], "Fixed commit": "17a07f9b28ef35575fc8a62b15801a6eaaf6c8b0", "Url": "https://api.github.com/repos/navprayas/auction", "Date": "2015-08-11T06:59:34Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jgit.blame.BlameResult.getSourceCommit(res.size())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (commit != null) annotation = dataSource.parse(blameResult.getSourceCommit(res.size()).getFullMessage()); else annotation = java.util.Collections.emptyList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6104/buggy-version/src.main.java.de.fau.osr.core.vcs.impl.GitVcsClient.java", "BodyUseAPI": [], "Fixed commit": "f1f2d84dc546eb15085441253c2db1b2b8e75589", "Url": "https://api.github.com/repos/AMOSTeam3/amos-ss15-proj3", "Date": "2015-05-12T13:55:55Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (pos > (-1)) { java.lang.String temp = message.substring(0, pos); temp += ((params[i]) == null) ? \"\" : params[i]; temp += message.substring((pos + (param.length()))); message = temp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6930/buggy-version/src.org.firebirdsql.gds.GDSExceptionHelper.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.substring(int,int)"], "Fixed commit": "63c9e8f6c629e79b7caf4080fdb3de46f1ef4048", "Url": "https://api.github.com/repos/FirebirdSQL/jaybird", "Date": "2002-02-01T03:58:06Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toCharArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((isomorphicPair1.get(charArray[i])) != (t.charAt(i))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6127/buggy-version/FunQuestions.src.IsomorphicStrings.java", "BodyUseAPI": [], "Fixed commit": "0ee6d40418564251037955586e4b994a120da14b", "Url": "https://api.github.com/repos/williamthing/ACodeADay", "Date": "2016-02-08T05:46:51Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((org.apache.openjpa.util.OpenJPAId) (stateManager.getId())).getType()", "com.datastax.hectorjpa.store.CassandraStore.getDataStoreId(stateManager.getId(),this.getContext())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(requestedType.isAssignableFrom(type))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5790/buggy-version/src.main.java.com.datastax.hectorjpa.store.CassandraStoreManager.java", "BodyUseAPI": [], "Fixed commit": "1393d9200e6de3fe2774145a8625d381e7e5a4e0", "Url": "https://api.github.com/repos/riptano/hector-jpa", "Date": "2011-04-09T07:23:50Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (numRows > 0) { return uk.ac.bris.cs.databases.api.Result.success(numRows); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1247/buggy-version/src.uk.ac.bris.cs.databases.cwk3.API.java", "BodyUseAPI": ["uk.ac.bris.cs.databases.api.Result.success(int)"], "Fixed commit": "4bb9834a1c310eab3c15416ede800cb90d36574b", "Url": "https://api.github.com/repos/DatabasesCW3/databasescw3", "Date": "2016-04-21T16:27:13Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sif3.infra.rest.provider.ProviderFactory.factory.providerService) != null) { sif3.infra.rest.provider.ProviderFactory.factory.providerService.shutdownNow(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7281/buggy-version/SIF3InfraREST.sif3InfraREST.src.sif3.infra.rest.provider.ProviderFactory.java", "BodyUseAPI": ["java.util.concurrent.ScheduledExecutorService.shutdownNow()"], "Fixed commit": "164397094fd00359965be52ac11a7efff0d4865c", "Url": "https://api.github.com/repos/nsip/sif3-framework-java", "Date": "2016-05-12T02:35:48Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((board.checkPosition(move.getTargetPosition())) != null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5968/buggy-version/src.pgn.chessboard.figures.Pawn.java", "BodyUseAPI": [], "Fixed commit": "7a59de6fb2a316cb9cee9d928d51240a75fdb1e1", "Url": "https://api.github.com/repos/bambalooon/PGNtranslator", "Date": "2014-06-01T19:53:42Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (dynmapApi == null) throw new java.lang.NullPointerException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6688/buggy-version/CrazyPunisher.src.de.st_ddt.crazypunisher.DynmapAddIn.java", "BodyUseAPI": [], "Fixed commit": "28068b433afa8f6d18e00f76f190be7a87a09a0a", "Url": "https://api.github.com/repos/ST-DDT/Crazy", "Date": "2012-05-23T21:27:23Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Bukkit.getPluginManager().getPlugin(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (dynmapAPI != null) { dynmap = new de.st_ddt.crazypunisher.DynmapAddIn(dynmapAPI, this); dynmap.updateMarkers(); }else dynmap = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6688/buggy-version/CrazyPunisher.src.de.st_ddt.crazypunisher.CrazyPunisher.java", "BodyUseAPI": [], "Fixed commit": "28068b433afa8f6d18e00f76f190be7a87a09a0a", "Url": "https://api.github.com/repos/ST-DDT/Crazy", "Date": "2012-05-23T21:27:23Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["github.scarsz.discordsrv.DiscordSRV.getPlugin().getAccountLinkManager().getDiscordId(event.getPlayer().getUniqueId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (discordId == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2565/buggy-version/src.main.java.github.scarsz.discordsrv.listeners.PlayerBanListener.java", "BodyUseAPI": [], "Fixed commit": "9891c9b81a4fc657321812ca86f389350615f4c6", "Url": "https://api.github.com/repos/DiscordSRV/DiscordSRV", "Date": "2017-06-05T00:53:31Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(corve.nohsedge.MainActivity.calledForeign)) { corve.nohsedge.MainActivity.UnameValue = settings.getString(corve.nohsedge.MainActivity.PREF_UNAME, DefaultUnameValue); corve.nohsedge.MainActivity.PasswordValue = settings.getString(corve.nohsedge.MainActivity.PREF_PASSWORD, DefaultPasswordValue); corve.nohsedge.MainActivity.PRememValue = settings.getBoolean(corve.nohsedge.MainActivity.PREF_PREMEM, DefaultPRememValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7449/buggy-version/NOHSEdge.app.src.main.java.corve.nohsedge.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "82be769c4ab19a309f733ce11cadf407358e73c3", "Url": "https://api.github.com/repos/CorvetteCole/NOHS-Edge-Client", "Date": "2017-09-25T21:53:14Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.talend.commons.ui.runtime.CommonUIPlugin.isFullyHeadless()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2571/buggy-version/main.plugins.org.talend.dataprofiler.core.src.org.talend.dataprofiler.core.ui.pref.TaskViewPreferenceInitializer.java", "BodyUseAPI": [], "Fixed commit": "93fa73b18aa578d5d9c17ed7cb161e344df38511", "Url": "https://api.github.com/repos/Talend/tdq-studio-se", "Date": "2015-11-23T08:11:34Z"},
{"Line": "=>773", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIsClosing) { com.ichi2.anki.DeckTask.waitToFinish(); }else { closeOpenedDeck(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5304/buggy-version/src.com.ichi2.anki.StudyOptions.java", "BodyUseAPI": [], "Fixed commit": "545969707df9eaef12b1c586dce6f75b00861bc7", "Url": "https://api.github.com/repos/nobnago/Anki-Android", "Date": "2011-10-25T18:04:00Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset > existingDataLen) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3797/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "fb4e6cc02e8d07d34b93f348efb4f9b89e2163bb", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-07T15:16:37Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(doNotInitQueues)) { context.addApplicationListener(com.cloudera.oryx.lambda.serving.ModelManagerListener.class.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8510/buggy-version/oryx-lambda-serving.src.main.java.com.cloudera.oryx.lambda.serving.ServingLayer.java", "BodyUseAPI": [], "Fixed commit": "ba899dd5f05492b8c6e3e410d6a833c63392bf63", "Url": "https://api.github.com/repos/OryxProject/oryx", "Date": "2014-11-13T15:35:09Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (listener != null) { listener.onOpen(handshakeData.sid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6069/buggy-version/snapper.src.main.java.com.teambition.snapper.Snapper.java", "BodyUseAPI": ["com.teambition.snapper.Snapper.Listener.onOpen(handshakeData.sid)"], "Fixed commit": "6b0180762dbcea8e25f92abf5202a62f1d4b3233", "Url": "https://api.github.com/repos/teambition/snapper-android", "Date": "2017-03-24T05:40:06Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rbText.isSelected()) { report = new java.io.File(((\"C:\\\\Users\\\\Markus\\\\Downloads\\\\Report_\" + (cbReports.getSelectionModel().getSelectedItem())) + \".txt\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/82/buggy-version/DailyStatusReport.src.control.ReportControl.java", "BodyUseAPI": [], "Fixed commit": "4256eea6d1ef0b45ab9cebef5da4a447bc327b01", "Url": "https://api.github.com/repos/rauchenm/maracon", "Date": "2017-09-24T19:46:07Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (doneSwitchNum) { game.sendAction(new edu.up.cs301.twixt.EndTurnAction(this)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5366/buggy-version/app.src.main.java.edu.up.cs301.twixt.TwixtSmartPlayer.java", "BodyUseAPI": [], "Fixed commit": "300bf0d291c56daa424fd14a21962de1f60a9313", "Url": "https://api.github.com/repos/raudception/TwixtGame", "Date": "2017-12-09T04:50:57Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((f.getName().endsWith(\".java\")) == false) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2457/buggy-version/AutomaticPlagiarismDetection.src.ReadSourceFiles.java", "BodyUseAPI": [], "Fixed commit": "e1f21d6468408bac0afc2ebbad79b1f63822d2f5", "Url": "https://api.github.com/repos/LaurAlejandraC/AutomaticPlagiarismDetection", "Date": "2016-02-22T02:55:00Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.energy_home.jemma.internal.ah.m2m.device.M2MDeviceManager.instance) == null) { org.energy_home.jemma.internal.ah.m2m.device.M2MDeviceManager.instance = new org.energy_home.jemma.internal.ah.m2m.device.M2MDeviceManager(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1740/buggy-version/jemma.osgi.ah.m2m.device.src.main.java.org.energy_home.jemma.internal.ah.m2m.device.M2MDeviceManager.java", "BodyUseAPI": [], "Fixed commit": "12aa7bd2a33c9d8487d46b7bbaae8cd6b60ded54", "Url": "https://api.github.com/repos/ismb/jemma", "Date": "2014-11-11T15:40:35Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bot) == null) { bot = new com.asdamp.mugiwara.bot.MugiwaraBot(false); bot.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8006/buggy-version/src.com.asdamp.mugiwara.bot.MugiwaraJavaTelegramBotServlet.java", "BodyUseAPI": [], "Fixed commit": "10d157da57edea2c073c9a15ff209fd04771571d", "Url": "https://api.github.com/repos/Asdamp/MugiwaraTelegramBot", "Date": "2015-08-24T09:23:03Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (array.isAccessing()) { array.addSetTime(date1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7610/buggy-version/orekit.src.main.java.seak.orekit.coverage.analysis.FastCoverageAnalysis.java", "BodyUseAPI": ["seak.orekit.coverage.access.TimeIntervalArray.addSetTime(double)"], "Fixed commit": "8c6453161a28a8d6ba1c3bf845ddcaeb6e2ebbf8", "Url": "https://api.github.com/repos/seakers/orekit", "Date": "2017-10-11T19:55:06Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(proxyEnabled.getValue())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/831/buggy-version/src.main.java.com.jaeksoft.searchlib.crawler.web.database.WebPropertyManager.java", "BodyUseAPI": [], "Fixed commit": "2cb039f8eba1ea6178b5bcd09200fffb5af8186e", "Url": "https://api.github.com/repos/jaeksoft/opensearchserver", "Date": "2014-03-29T21:54:34Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entity.getComponent(com.uwsoft.editor.renderer.components.TransformComponent.class).x) < (-180)) { bc.state = IDLE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8670/buggy-version/core.src.com.fd.etf.system.BugSystem.java", "BodyUseAPI": [], "Fixed commit": "6e3811a663e8ea4f3c0353a9e1534a3d5a859710", "Url": "https://api.github.com/repos/Teatree/Krashe3", "Date": "2017-04-18T17:14:42Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.contains(\":\")) fs = new org.apache.hadoop.fs.Path(file).getFileSystem(conf);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2883/buggy-version/core.src.main.java.org.apache.accumulo.core.client.impl.OfflineScanner.java", "BodyUseAPI": ["org.apache.hadoop.fs.Path.getFileSystem(org.apache.hadoop.conf.Configuration)"], "Fixed commit": "388f87dc1b7472abbb053d8a3604f3444f03d2a7", "Url": "https://api.github.com/repos/ctubbsii/accumulo", "Date": "2013-10-23T00:52:11Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Logic.possibleMovesInitialised = true) { return (((java.lang.Math.abs(((start.x) - (dest.x)))) <= 1) && ((java.lang.Math.abs(((start.y) - (dest.y)))) <= 1)) && (!(Logic.aOnField(field, move))); }else { boolean ok = Logic.possibleMoves(field, start, move.getFigure()).contains(dest); java.lang.System.out.println(\"get in here\"); return ((((java.lang.Math.abs(((start.x) - (dest.x)))) <= 1) && ((java.lang.Math.abs(((start.y) - (dest.y)))) <= 1)) && (!(Logic.aOnField(field, move)))) && ok; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2953/buggy-version/Logic.java", "BodyUseAPI": [], "Fixed commit": "1c5529c9ede210e76bfb4cfd6f63af6ba72d16e9", "Url": "https://api.github.com/repos/BroCanDo/chess", "Date": "2016-03-30T15:00:41Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["microbat.model.trace.TraceNode.getInvocationParent()", "microbat.model.trace.TraceNode.getInvocationParent()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((p1 == null) && (p2 == null)) { stepOverPrevious = n; return n; }else if ((p1 != null) && (p2 != null)) { if ((p1.getOrder()) == (p2.getOrder())) { stepOverPrevious = n; return n; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/192/buggy-version/microbat.src.main.microbat.model.trace.TraceNode.java", "BodyUseAPI": ["microbat.model.trace.TraceNode.getOrder()", "microbat.model.trace.TraceNode.getOrder()"], "Fixed commit": "da652d6f6651ebc902fee4d422128db4513d1406", "Url": "https://api.github.com/repos/llmhyy/microbat", "Date": "2017-12-31T02:28:16Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["microbat.model.trace.TraceNode.getInvocationParent()", "microbat.model.trace.TraceNode.getInvocationParent()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((p1 == null) && (p2 == null)) { stepOverNext = n; return n; }else if ((p1 != null) && (p2 != null)) { if ((p1.getOrder()) == (p2.getOrder())) { stepOverNext = n; return n; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/192/buggy-version/microbat.src.main.microbat.model.trace.TraceNode.java", "BodyUseAPI": ["microbat.model.trace.TraceNode.getOrder()", "microbat.model.trace.TraceNode.getOrder()"], "Fixed commit": "da652d6f6651ebc902fee4d422128db4513d1406", "Url": "https://api.github.com/repos/llmhyy/microbat", "Date": "2017-12-31T02:28:16Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.entity.Entity.getVelocity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.lang.Double.isNaN(velocity.length())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7420/buggy-version/src.com.projectkorra.ProjectKorra.airbending.AirBlast.java", "BodyUseAPI": [], "Fixed commit": "bede932459321b55bafee1238b0deabd3d9fa3aa", "Url": "https://api.github.com/repos/ProjectKorra/ProjectKorra", "Date": "2015-01-19T00:13:49Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args[index]) == null) { argsClasses[index] = null; }else { argsClasses[index] = args[index].getClass(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8945/buggy-version/prism.src.main.java.org.apache.ivory.resource.channel.IPCChannel.java", "BodyUseAPI": ["java.lang.Object.getClass()"], "Fixed commit": "666d08b45b313e08fa532a924d336bca62c0ca4a", "Url": "https://api.github.com/repos/sriksun/Ivory", "Date": "2012-05-14T07:59:01Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (format.getFormatName().equals(\"PubChem Compounds XML\")) { format = getFormat(\"PubChemCompoundXMLFormat\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6742/buggy-version/plugins.net.bioclipse.cdk.business.src.net.bioclipse.cdk.business.CDKManager.java", "BodyUseAPI": [], "Fixed commit": "8fddf1a136ca416f6dc999f5d93361a0c77c6007", "Url": "https://api.github.com/repos/bioclipse/bioclipse.cheminformatics", "Date": "2016-09-01T09:36:28Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (directoryContents != null) { for (java.io.File currentFile : directoryContents) { if (currentFile.isDirectory()) { parseDirectoryStructure(currentFile); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3864/buggy-version/ssl-proxies.src.main.java.org.globus.util.GlobusPathMatchingResourcePatternResolver.java", "BodyUseAPI": [], "Fixed commit": "d06ad8f3e6d49c5e0dfed21785935d84eedeba1c", "Url": "https://api.github.com/repos/ellert/JGlobus", "Date": "2012-10-10T14:48:06Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) i = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/9159/buggy-version/app.src.main.java.de.peterloos.beziersplines.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "89b40c033cdca26f2f8dcfb0db0cf7acfcb49c8b", "Url": "https://api.github.com/repos/PeLoSTA/BezierSplinesRevised", "Date": "2017-10-09T13:50:42Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.internal.telephony.gsm.SmsMessage.getStatus()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tpStatus >= (android.provider.Telephony.Sms.STATUS_FAILED)) || (tpStatus < (android.provider.Telephony.Sms.STATUS_PENDING))) { deliveryPendingList.remove(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7224/buggy-version/telephony.java.com.android.internal.telephony.gsm.GsmSMSDispatcher.java", "BodyUseAPI": [], "Fixed commit": "2703b84caabe7b4fb7f6c08bf7463a89b0a3169c", "Url": "https://api.github.com/repos/kornyone/a7ht_android_frameworks_base", "Date": "2011-02-03T20:17:47Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["femr.data.daos.IRepository<femr.common.models.IPatient>.findAll(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((patients.size()) > 0) { response.setResponseObject(patients); }else { response.addError(\"patients\", \"No patients available\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2231/buggy-version/app.femr.business.services.ResearchService.java", "BodyUseAPI": ["femr.business.dtos.ServiceResponse<java.util.List<? extends femr.common.models.IPatient>>.setResponseObject(java.util.List<? extends femr.common.models.IPatient>)"], "Fixed commit": "4b9294e494866e734fd449b6c183dffd46375741", "Url": "https://api.github.com/repos/codeitandloadit/femr", "Date": "2014-03-09T04:02:22Z"},
{"Line": "=>1655", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<dk.frv.eavdam.data.AISDatalinkCheckIssue>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((issues.size()) - startedIssues) == 0) { a.setPossibleConflicts(new java.lang.Boolean(false)); }else if (((issues.size()) - startedIssues) > 0) { a.setPossibleConflicts(new java.lang.Boolean(true)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2642/buggy-version/src.main.java.dk.frv.eavdam.utils.HealthCheckHandler.java", "BodyUseAPI": ["java.util.List<dk.frv.eavdam.data.AISDatalinkCheckIssue>.size()"], "Fixed commit": "115ce9d4a009202bb78db4a1aa268adcb32f6a85", "Url": "https://api.github.com/repos/dma-graveyard/EAVDAM", "Date": "2011-12-08T12:33:12Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index < 0) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3943/buggy-version/utils.src.main.java.com.jude.utils.JActivityManager.java", "BodyUseAPI": [], "Fixed commit": "23d45035729cce14b057089a23a4a1366c19a4cf", "Url": "https://api.github.com/repos/Jude95/Utils", "Date": "2016-05-04T11:19:57Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (activity != null) { if (fragment != null) { activityName = com.wb.nextgenlibrary.analytic.NextGenAnalyticData.classObjectToReportNameMap.get(activity.getClass()).get(fragment.getClass()); }else { activityName = com.wb.nextgenlibrary.analytic.NextGenAnalyticData.classObjectToReportNameMap.get(activity.getClass()).get(null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5415/buggy-version/src.com.wb.nextgenlibrary.analytic.NextGenAnalyticData.java", "BodyUseAPI": ["java.util.Map<java.lang.Class<? extends android.app.Activity>, java.util.Map<java.lang.Class<? extends android.support.v4.app.Fragment>, java.lang.String>>.get(activity.getClass())", "android.app.Activity.getClass()", "java.util.Map<java.lang.Class<? extends android.app.Activity>, java.util.Map<java.lang.Class<? extends android.support.v4.app.Fragment>, java.lang.String>>.get(activity.getClass())", "com.wb.nextgenlibrary.analytic.NextGenAnalyticData.classObjectToReportNameMap.get(activity.getClass()).get(<nulltype>)", "android.app.Activity.getClass()", "com.wb.nextgenlibrary.analytic.NextGenAnalyticData.classObjectToReportNameMap.get(activity.getClass()).get(fragment.getClass())"], "Fixed commit": "5f77996d919901658f26ec6e317818a2883bf240", "Url": "https://api.github.com/repos/warnerbros/cpe-manifest-android-experience", "Date": "2016-12-14T21:11:42Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkPreviouslyLoaded) { java.lang.Class<?> loadedClass = findLoadedClass(className); if (loadedClass != null) { return loadedClass; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6488/buggy-version/src.main.java.org.jboss.modules.ModuleClassLoader.java", "BodyUseAPI": [], "Fixed commit": "3cdbf2ae9c8564db592cce3a145b56dafa1e426d", "Url": "https://api.github.com/repos/emuckenhuber/jboss-modules", "Date": "2010-07-26T18:19:21Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request().body().asJson()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((data.get(\"csv_files\")) != null) { for (com.fasterxml.jackson.databind.JsonNode json : data.get(\"csv_files\")) { listDeletedCSV.add(json.get(\"_id\").asText()); } for (com.mongodb.gridfs.GridFSDBFile file : listCSV) { listOriginCSV.add(file.getId().toString()); } for (java.lang.String s : listOriginCSV) { if (!(listDeletedCSV.contains(s))) { fileService.deleteById(s); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2666/buggy-version/services.rest.app.controllers.ScriptController.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)"], "Fixed commit": "8afe498be0203384729fa18e37596a20ae758a1f", "Url": "https://api.github.com/repos/cloud-ats/cloud-ats", "Date": "2016-02-29T11:52:33Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentMaxIdx != (-1)) { newWindow = new com.haines.ml.rce.window.WindowManager.Window(((cyclicWindowBuffer[currentMaxIdx].getExpires()) + (config.getWindowPeriod())), provider); }else { newWindow = new com.haines.ml.rce.window.WindowManager.Window((currentTime + (config.getWindowPeriod())), provider); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6292/buggy-version/window.src.main.java.com.haines.ml.rce.window.WindowManager.java", "BodyUseAPI": ["com.haines.ml.rce.window.WindowManager.Window.getExpires()"], "Fixed commit": "5574413d71b3d8eb973c4b7b7ce002d9217d0dbb", "Url": "https://api.github.com/repos/andrew-haines/RCE", "Date": "2014-06-09T18:26:32Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((board.getCurrentBrick().getRightBoundary()) == ((Board.COLUMN) - 1)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8488/buggy-version/src.RussiaBricks.BoardRuleManager.java", "BodyUseAPI": [], "Fixed commit": "68838b84760dffbb0c9bb59e9a4a6a117b5407fc", "Url": "https://api.github.com/repos/i059917/OOP_RussiaBricks", "Date": "2017-07-14T07:03:37Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((board.getCurrentBrick().getLeftBoundary()) == 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8488/buggy-version/src.RussiaBricks.BoardRuleManager.java", "BodyUseAPI": [], "Fixed commit": "68838b84760dffbb0c9bb59e9a4a6a117b5407fc", "Url": "https://api.github.com/repos/i059917/OOP_RussiaBricks", "Date": "2017-07-14T07:03:37Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.qualcomm.robotcore.hardware.ColorSensor.green()", "com.qualcomm.robotcore.hardware.ColorSensor.blue()", "com.qualcomm.robotcore.hardware.ColorSensor.red()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((whiteRed >= 245) && (whiteGreen >= 245)) && (whiteBlue >= 245)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1681/buggy-version/FtcRobotController.src.main.java.org.firstinspires.ftc.robotcontroller.libs.sensor.RGB.java", "BodyUseAPI": [], "Fixed commit": "cc8dafcf6a518153a7da8094181aca0cc363515d", "Url": "https://api.github.com/repos/FTC10794/robolib", "Date": "2016-11-22T20:51:00Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(com.atlauncher.utils.Utils.isHeadless())) { javax.swing.UIManager.put(\"Toaster.contBounds\", java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment().getMaximumWindowBounds()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7483/buggy-version/src.main.java.io.github.asyncronous.toast.Toaster.java", "BodyUseAPI": [], "Fixed commit": "f9518bb821f2d9695254969de88538f599bb7521", "Url": "https://api.github.com/repos/ATLauncher/ATLauncher", "Date": "2015-06-02T08:47:10Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((param.args) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/184/buggy-version/app.src.main.java.com.leagueofnewbs.glitchify.Main.java", "BodyUseAPI": [], "Fixed commit": "e9405f4e76dc622784f2a42dcd8171d57374c79b", "Url": "https://api.github.com/repos/BatedUrGonnaDie/glitchify", "Date": "2017-09-13T09:21:35Z"},
{"Line": "=>499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { getActivity().supportStartPostponedEnterTransition(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/111/buggy-version/app.src.main.java.com.rukiasoft.androidapps.cocinaconroll.ui.RecipeDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "03ff5b21a073dbc430e2b66eaf3ce58861f97793", "Url": "https://api.github.com/repos/kunotatemaki/Capstone-Project", "Date": "2015-11-08T15:46:33Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["clashsoft.brewingapi.brewing.PotionType.getEqualPotionType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (potionType != (this)) return potionType.getDuration();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4129/buggy-version/brewing.PotionType.java", "BodyUseAPI": ["clashsoft.brewingapi.brewing.PotionType.getDuration()"], "Fixed commit": "108a964c33b1b8702a09211b732608d57c8d4698", "Url": "https://api.github.com/repos/Clashsoft/Brewing-API", "Date": "2013-12-08T18:34:10Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.terasology.mechanicalPower.systems.MechanicalPowerBlockNetworkImpl.getMechanicalPowerNetwork(org.terasology.blockNetwork.Network)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (network != null) { network.totalPower += (producer.active) ? producer.power : -(producer.power); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1772/buggy-version/src.main.java.org.terasology.mechanicalPower.systems.MechanicalPowerBlockNetworkImpl.java", "BodyUseAPI": [], "Fixed commit": "9fda4ee56d22a35f6ee1c58a6f4bc95c91896abd", "Url": "https://api.github.com/repos/Terasology/Machines", "Date": "2014-10-02T15:15:15Z"},
{"Line": "=>1211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dashbuilder.dataprovider.sql.SQLDataSetProvider.LookupProcessor.calculateDateInterval(org.dashbuilder.dataset.group.ColumnGroup)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (DateIntervalType.DAY_OF_WEEK.equals(intervalType)) { throw new java.lang.IllegalArgumentException(\"Group by DAY_OF_WEEK not supported in SQL data sets\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7166/buggy-version/dashbuilder-backend.dashbuilder-dataset-sql.src.main.java.org.dashbuilder.dataprovider.sql.SQLDataSetProvider.java", "BodyUseAPI": [], "Fixed commit": "c5f498f347b2a1b641b25382bae215432ac92e6d", "Url": "https://api.github.com/repos/dgutierr/dashbuilder", "Date": "2017-04-26T14:02:52Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.andstatus.app.util.MyLog.isVerboseEnabled()) && (count < 5)) { org.andstatus.app.util.MyLog.v(context, ((method + \"; Command saved: \") + (cd.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8326/buggy-version/app.src.main.java.org.andstatus.app.service.CommandData.java", "BodyUseAPI": [], "Fixed commit": "29bf71dae9bc9cb14505def3ab0c5656d892fcee", "Url": "https://api.github.com/repos/andstatus/andstatus", "Date": "2016-03-24T19:10:33Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.andstatus.app.util.MyLog.isVerboseEnabled()) && (count < 5)) { org.andstatus.app.util.MyLog.v(context, (((method + index) + \" \") + cd)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8326/buggy-version/app.src.main.java.org.andstatus.app.service.CommandData.java", "BodyUseAPI": [], "Fixed commit": "29bf71dae9bc9cb14505def3ab0c5656d892fcee", "Url": "https://api.github.com/repos/andstatus/andstatus", "Date": "2016-03-24T19:10:33Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (queue.isEmpty()) { org.andstatus.app.util.MyLog.d(context, (((method + \"; \") + count) + \" saved\")); }else { org.andstatus.app.util.MyLog.e(context, ((((method + \"; \") + count) + \" saved\") + (queue.isEmpty() ? \"\" : (\", \" + (queue.size())) + \" left\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8326/buggy-version/app.src.main.java.org.andstatus.app.service.CommandData.java", "BodyUseAPI": ["java.util.Queue<org.andstatus.app.service.CommandData>.isEmpty()", "org.andstatus.app.util.MyLog.e(android.content.Context,java.lang.String)", "java.util.Queue<org.andstatus.app.service.CommandData>.size()"], "Fixed commit": "29bf71dae9bc9cb14505def3ab0c5656d892fcee", "Url": "https://api.github.com/repos/andstatus/andstatus", "Date": "2016-03-24T19:10:33Z"},
{"Line": "=>587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getBaseline()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (childBaseline < 0) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5114/buggy-version/material.src.main.java.com.rey.material.widget.Spinner.java", "BodyUseAPI": [], "Fixed commit": "32a6bb3d0e60253a35387e6f6c690ec47fac4d58", "Url": "https://api.github.com/repos/MaTriXy/animated-Material-Design-components", "Date": "2015-12-12T03:56:49Z"},
{"Line": "=>591", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLabelView) != null) paddingTop += mLabelView.getMeasuredHeight();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5114/buggy-version/material.src.main.java.com.rey.material.widget.Spinner.java", "BodyUseAPI": [], "Fixed commit": "32a6bb3d0e60253a35387e6f6c690ec47fac4d58", "Url": "https://api.github.com/repos/MaTriXy/animated-Material-Design-components", "Date": "2015-12-12T03:56:49Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["yahoofinance.Stock.getQuote()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((quote.getPrice()) == null) { android.util.Log.d(\"First\", \"No record found\"); com.udacity.stockhawk.data.PrefUtils.removeStock(context, symbol); new android.os.Handler(android.os.Looper.getMainLooper()).post(new java.lang.Runnable() { public void run() { android.widget.Toast.makeText(context, context.getString(R.string.invalid_stock, symbol), Toast.LENGTH_LONG).show(); } }); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4844/buggy-version/app.src.main.java.com.udacity.stockhawk.sync.QuoteSyncJob.java", "BodyUseAPI": [], "Fixed commit": "a4d6cfc3dafed5e067b4f13662000f576532d0de", "Url": "https://api.github.com/repos/navneetnks/StockHawk", "Date": "2017-01-16T19:56:50Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.notnoop.apns.DeliveryError.ofCode(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((com.notnoop.apns.DeliveryError.INVALID_TOKEN) == e) { com.notnoop.apns.internal.ApnsConnectionImpl.logger.debug(\"delegate.messageSendFailed, unknown id\"); delegate.messageSendFailed(null, new com.notnoop.exceptions.ApnsDeliveryErrorException(e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8845/buggy-version/src.main.java.com.notnoop.apns.internal.ApnsConnectionImpl.java", "BodyUseAPI": ["com.notnoop.apns.ApnsDelegate.messageSendFailed(<nulltype>,com.notnoop.exceptions.ApnsDeliveryErrorException)"], "Fixed commit": "1969ce53737f40ebc3b48b486c9d894c85c8a8d7", "Url": "https://api.github.com/repos/yunfanzhang/java-apns", "Date": "2015-05-18T06:21:41Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.notnoop.apns.DeliveryError.ofCode(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((com.notnoop.apns.DeliveryError.INVALID_TOKEN) == e) { com.notnoop.apns.internal.ApnsConnectionImpl.logger.debug(\"delegate.messageSendFailed, message id {}\", notification.getIdentifier()); delegate.messageSendFailed(notification, new com.notnoop.exceptions.ApnsDeliveryErrorException(e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8845/buggy-version/src.main.java.com.notnoop.apns.internal.ApnsConnectionImpl.java", "BodyUseAPI": ["com.notnoop.apns.ApnsDelegate.messageSendFailed(com.notnoop.apns.ApnsNotification,com.notnoop.exceptions.ApnsDeliveryErrorException)"], "Fixed commit": "1969ce53737f40ebc3b48b486c9d894c85c8a8d7", "Url": "https://api.github.com/repos/yunfanzhang/java-apns", "Date": "2015-05-18T06:21:41Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stmt.toString().contains(\"<java.lang.String: byte[] getBytes()>\")) java.lang.System.out.println(\"x\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3023/buggy-version/src.soot.jimple.infoflow.methodSummary.generator.GapManager.java", "BodyUseAPI": [], "Fixed commit": "69ba3be1e48bc6ba84db579f4d819d57dda32b4c", "Url": "https://api.github.com/repos/secure-software-engineering/soot-infoflow-summaries", "Date": "2015-07-28T11:37:45Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (nonBlockingPos != null) { zildo.fwk.script.context.SpriteEntityContext context = new zildo.fwk.script.context.SpriteEntityContext(collidingPerso); EngineZildo.scriptManagement.runPersoAction(collidingPerso, ((((\"moveCharacter(\" + (nonBlockingPos.x)) + \",\") + (nonBlockingPos.y)) + \")\"), context, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5568/buggy-version/zildo.src.main.java.zildo.monde.sprites.persos.ia.PathFinder.java", "BodyUseAPI": ["EngineZildo.scriptManagement.runPersoAction(zildo.monde.sprites.persos.Perso,((((\"moveCharacter(\" + (nonBlockingPos.x)) + \",\") + (nonBlockingPos.y)) + \")\"),zildo.fwk.script.context.SpriteEntityContext,boolean)"], "Fixed commit": "49ba3446221441d20723ad17423923baa311f8d8", "Url": "https://api.github.com/repos/tchegito/zildo", "Date": "2017-08-07T14:08:28Z"},
{"Line": "=>2676", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numChildVisits == 0) { selectionScore = -1000; }else { if (tree.gameCharacteristics.isPuzzle) { if ((edge.jointPartialMove[roleIndex].inputProposition) == null) { numChildVisits /= 2; } } selectionScore = moveScore * (1 - ((20 * (java.lang.Math.log(numVisits))) / ((20 * (java.lang.Math.log(numVisits))) + numChildVisits))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7698/buggy-version/src.org.ggp.base.player.gamer.statemachine.sancho.TreeNode.java", "BodyUseAPI": [], "Fixed commit": "bff4f90d286c33799e2708ef0036c4f4ce6c5d8e", "Url": "https://api.github.com/repos/SteveDraper/ggp-base", "Date": "2014-05-15T16:57:27Z"},
{"Line": "=>617", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(referenceName.equals(\"\"))) { it.emarolab.amor.owlInterface.OWLReferences ontoRef = ((it.emarolab.amor.owlInterface.OWLReferences) (it.emarolab.amor.owlInterface.OWLReferencesInterface.OWLReferencesContainer.getOWLReferences(referenceName))); if ((ontoRef.getReasoner()) != null) { response.setIsConsistent(ontoRef.getReasoner().isConsistent()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8481/buggy-version/amor_interface_service.src.main.java.it.emarolab.armor.ARMORCommand.java", "BodyUseAPI": ["it.emarolab.amor.owlInterface.OWLReferencesInterface.OWLReferencesContainer.getOWLReferences(java.lang.String)"], "Fixed commit": "eaa1b94e79f50965b358d85b75ad6c3d09729ad0", "Url": "https://api.github.com/repos/EmaroLab/armor", "Date": "2016-06-09T16:26:08Z"},
{"Line": "=>631", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(referenceName.equals(\"\"))) { it.emarolab.amor.owlInterface.OWLReferences ontoRef = ((it.emarolab.amor.owlInterface.OWLReferences) (it.emarolab.amor.owlInterface.OWLReferencesInterface.OWLReferencesContainer.getOWLReferences(referenceName))); if ((ontoRef.getReasoner()) != null) { response.setIsConsistent(ontoRef.getReasoner().isConsistent()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8481/buggy-version/amor_interface_service.src.main.java.it.emarolab.armor.ARMORCommand.java", "BodyUseAPI": ["it.emarolab.amor.owlInterface.OWLReferencesInterface.OWLReferencesContainer.getOWLReferences(java.lang.String)"], "Fixed commit": "eaa1b94e79f50965b358d85b75ad6c3d09729ad0", "Url": "https://api.github.com/repos/EmaroLab/armor", "Date": "2016-06-09T16:26:08Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fonts.size()) > 1) { java.util.logging.Logger.getLogger(com.jpexs.decompiler.flash.tags.gfx.DefineCompactedFont.class.getName()).log(java.util.logging.Level.WARNING, \"Compacted font has more than one FontType inside. This may cause problems while editing.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3382/buggy-version/libsrc.ffdec_lib.src.com.jpexs.decompiler.flash.tags.gfx.DefineCompactedFont.java", "BodyUseAPI": [], "Fixed commit": "5d00b7147f68b26ad6aabd1393ee7206f1375aea", "Url": "https://api.github.com/repos/jindrapetrik/jpexs-decompiler", "Date": "2016-06-06T20:29:03Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getAuthorizationStrategy()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (authorizationStrategy != null) for (java.lang.String group : authorizationStrategy.getGroups()) { referencedGroups.add(group.toLowerCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7538/buggy-version/src.main.java.hudson.plugins.active_directory.ActiveDirectoryUserDetail.java", "BodyUseAPI": ["hudson.security.AuthorizationStrategy.getGroups()"], "Fixed commit": "fcf08a392c8b181cb5d725501a556ff8954ce48c", "Url": "https://api.github.com/repos/llecaroz/active-directory-plugin", "Date": "2015-11-12T19:39:46Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.hackergamingcz.slaparoo.Handlers.Game.getWinner()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (p != winner) { cz.hackergamingcz.slaparoo.Handlers.Bukkit.broadcastMessage(((((\"\u00a76\u00a7l\" + (p.getName())) + \" \u00a7e\u00a7l - \u00a76\u00a7l\") + (KillCounter.score.get(p))) + \" \u00a7e\u00a7lzabit\u00ed!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/9120/buggy-version/src.cz.hackergamingcz.slaparoo.Handlers.Game.java", "BodyUseAPI": ["cz.hackergamingcz.slaparoo.Handlers.Bukkit.broadcastMessage(((((\"\u00a76\u00a7l\" + (p.getName())) + \" \u00a7e\u00a7l - \u00a76\u00a7l\") + (KillCounter.score.get(p))) + \" \u00a7e\u00a7lzabit\u00ed!\"))", "KillCounter.score.get(org.bukkit.entity.Player)", "org.bukkit.entity.Player.getName()"], "Fixed commit": "4fe5cbc6d68d55daeb8a8d90c3264e5998420c37", "Url": "https://api.github.com/repos/TomasCZE7/Slaparoo", "Date": "2017-08-31T09:31:25Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((locationID == 0) && (unavailable == false)) { if (id > 0) { org.jmanderson.subbing.DataUpdater.deleteSchedule(id); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2443/buggy-version/JavaSource.org.jmanderson.subbing.DataUpdater.java", "BodyUseAPI": [], "Fixed commit": "d9213fb7dae70f2045bc674b5addc815e64c5a01", "Url": "https://api.github.com/repos/jma505/SubbingWebsite", "Date": "2015-11-25T23:38:49Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mItem.imgUrl) != null) { if (!(mItem.imgUrl.equals(\"\"))) { new com.education.textbookbns.textbookbns.SaleItemDetailFragment.DownloadImageTask(((android.widget.ImageView) (rootView.findViewById(R.id.imageViewBook)))).execute(mItem.imgUrl); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1280/buggy-version/app.src.main.java.com.education.textbookbns.textbookbns.SaleItemDetailFragment.java", "BodyUseAPI": ["mItem.imgUrl.equals(java.lang.String)", "com.education.textbookbns.textbookbns.SaleItemDetailFragment.DownloadImageTask.execute(mItem.imgUrl)"], "Fixed commit": "d264b93b9cae142df5a0252fd51bdeab215c6da3", "Url": "https://api.github.com/repos/Aaron-Zhao/Textbookbns", "Date": "2016-02-17T01:13:50Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getArguments().getString(com.company.wishlist.fragment.WishListFragment.MODE).equals(com.company.wishlist.fragment.WishListFragment.WISH_LIST_MODE)) { adapter.onFriendSelected(friendId); }else { onFriendSelected(friendId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4607/buggy-version/app.src.main.java.com.company.wishlist.fragment.WishListFragment.java", "BodyUseAPI": [], "Fixed commit": "94881ee09084a7353c7be067e0602799090fdfe2", "Url": "https://api.github.com/repos/XSmile2008/Wishlist", "Date": "2016-01-24T14:36:36Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((keyColumns.size()) > 1) { return handle.createQuery(query).map(new org.skife.jdbi.v2.tweak.ResultSetMapper<com.metamx.common.Pair<java.lang.Object, java.lang.String>>() { @java.lang.Override public com.metamx.common.Pair<java.lang.Object, java.lang.String> map(final int index, final java.sql.ResultSet r, final org.skife.jdbi.v2.StatementContext ctx) throws java.sql.SQLException { java.lang.String[] key = new java.lang.String[keyColumns.size()]; int idx = 0; for (java.lang.String keyColumn : keyColumns) { key[(idx++)] = r.getString(keyColumn); } return new com.metamx.common.Pair<java.lang.Object, java.lang.String>(new org.apache.commons.collections.keyvalue.MultiKey(key, false), r.getString(valueColumn)); } }).list(); }else { return handle.createQuery(query).map(new org.skife.jdbi.v2.tweak.ResultSetMapper<com.metamx.common.Pair<java.lang.Object, java.lang.String>>() { @java.lang.Override public com.metamx.common.Pair<java.lang.Object, java.lang.String> map(final int index, final java.sql.ResultSet r, final org.skife.jdbi.v2.StatementContext ctx) throws java.sql.SQLException { return new com.metamx.common.Pair<java.lang.Object, java.lang.String>(r.getString(keyColumns.get(0)), r.getString(valueColumn)); } }).list(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8582/buggy-version/extensions-core.namespace-lookup.src.main.java.io.druid.server.namespace.JDBCExtractionNamespaceCacheFactory.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "handle.createQuery(query).map(org.skife.jdbi.v2.tweak.ResultSetMapper<com.metamx.common.Pair<java.lang.Object, java.lang.String>>)", "handle.createQuery(query).map(org.skife.jdbi.v2.tweak.ResultSetMapper<com.metamx.common.Pair<java.lang.Object, java.lang.String>>)", "handle.createQuery(query).map(new org.skife.jdbi.v2.tweak.ResultSetMapper<com.metamx.common.Pair<java.lang.Object, java.lang.String>>() {\n    @java.lang.Override\n    public com.metamx.common.Pair<java.lang.Object, java.lang.String> map(final int index, final java.sql.ResultSet r, final org.skife.jdbi.v2.StatementContext ctx) throws java.sql.SQLException {\n        java.lang.String[] key = new java.lang.String[keyColumns.size()];\n        int idx = 0;\n        for (java.lang.String keyColumn : keyColumns) {\n            key[(idx++)] = r.getString(keyColumn);\n        }\n        return new com.metamx.common.Pair<java.lang.Object, java.lang.String>(new org.apache.commons.collections.keyvalue.MultiKey(key, false), r.getString(valueColumn));\n    }\n}).list()", "handle.createQuery(query).map(new org.skife.jdbi.v2.tweak.ResultSetMapper<com.metamx.common.Pair<java.lang.Object, java.lang.String>>() {\n    @java.lang.Override\n    public com.metamx.common.Pair<java.lang.Object, java.lang.String> map(final int index, final java.sql.ResultSet r, final org.skife.jdbi.v2.StatementContext ctx) throws java.sql.SQLException {\n        return new com.metamx.common.Pair<java.lang.Object, java.lang.String>(r.getString(keyColumns.get(0)), r.getString(valueColumn));\n    }\n}).list()", "java.sql.ResultSet.getString(java.lang.String)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "c83c5d30c417fbeb3a7ddc9e3b4fec90fb603944", "Url": "https://api.github.com/repos/sirpkt/druid", "Date": "2016-05-04T02:12:22Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((descriptionI.getInputType()) == null) { int dsf = 5; dsf++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5658/buggy-version/src.org.pikater.core.ontology.subtrees.batchDescription.DataSourceDescriptions.java", "BodyUseAPI": [], "Fixed commit": "d8de8b7108303b84aaa93bce5ea2c257cb8ce77d", "Url": "https://api.github.com/repos/krajj7/pikater", "Date": "2014-08-23T14:34:08Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((entropy > ((hashLength) / 2)) || (entropy < (entropyByteLength))) { throw new java.lang.Exception((((\"Inappropriate entropy requierement given, should be between \" + ((hashLength) / 2)) + \" and \") + (entropyByteLength))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4594/buggy-version/src.backend.SHAEnglishGenerator.java", "BodyUseAPI": [], "Fixed commit": "b3104747c4c01a03c451612429ac916c316e6794", "Url": "https://api.github.com/repos/p4553d/android-pass", "Date": "2014-06-15T22:21:00Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((linkedNPCID) == (-1)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4128/buggy-version/src.main.java.me.tehbeard.cititrader.StockRoomTrait.java", "BodyUseAPI": [], "Fixed commit": "179211a194d57a7a3e2bb1ebb10c4107a9cadb89", "Url": "https://api.github.com/repos/tenowg/CitiTraders", "Date": "2012-09-19T04:26:26Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((text.length()) > 0) { if ((text.equalsIgnoreCase(\"1\")) || (text.equalsIgnoreCase(\"true\"))) { params.put(field.getName(), true); }else { params.put(field.getName(), false); } }else { params.put(field.getName(), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/799/buggy-version/src.main.java.com.eweblib.util.EweblibUtil.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "14e498505210da6dd66d95f01f93929b6d2aade8", "Url": "https://api.github.com/repos/antme/_eweblib", "Date": "2015-01-12T03:58:29Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["geom.RQuaternion.clone()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((q1.dot(q3)) < 0.0F) { global.Fields.debug(\"Q1 dot Q2: %f\\n\", q1.dot(q3)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/9274/buggy-version/RobotRun.src.geom.RQuaternion.java", "BodyUseAPI": ["global.Fields.debug(java.lang.String,float)", "geom.RQuaternion.dot(geom.RQuaternion)"], "Fixed commit": "ea0748aeeecc1543ab35ae7b6076a50bb5dd0892", "Url": "https://api.github.com/repos/skuhl/RobotRun", "Date": "2017-06-15T14:43:46Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, sif3.common.persist.model.SIF3Session>.get(sif3Session.getSessionToken())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((currentSIF3Session != null) && (au.com.systemic.framework.utils.StringUtils.notEmpty(currentSIF3Session.getSecurityToken()))) { secTokenSession.remove(currentSIF3Session.getSecurityToken()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1896/buggy-version/SIF3InfraREST.sif3InfraCommon.src.sif3.infra.common.env.mgr.DirectProviderEnvironmentManager.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.remove(currentSIF3Session.getSecurityToken())", "sif3.common.persist.model.SIF3Session.getSecurityToken()"], "Fixed commit": "3a3b8b01964fd735140667a29444e17b6a819a37", "Url": "https://api.github.com/repos/nsip/sif3-framework-java", "Date": "2016-05-19T00:27:46Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stack.getItem()) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6954/buggy-version/src.igwmod.WikiUtils.java", "BodyUseAPI": [], "Fixed commit": "12f669b93168cbd066db81d6c92c15dfa609dddd", "Url": "https://api.github.com/repos/MineMaarten/IGW-mod", "Date": "2015-07-24T15:42:58Z"},
{"Line": "=>579", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((toolbar.getParent()) instanceof android.support.design.widget.AppBarLayout) { ((android.support.design.widget.AppBarLayout) (toolbar.getParent())).setExpanded(true, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4211/buggy-version/app.src.main.java.com.gmail.jorgegilcavazos.ballislife.features.main.MainActivity.java", "BodyUseAPI": ["android.support.v7.widget.Toolbar.getParent()", "((android.support.design.widget.AppBarLayout) (toolbar.getParent())).setExpanded(boolean,boolean)"], "Fixed commit": "d61721b70b913ffbea9736c7e5b0846c6d63703e", "Url": "https://api.github.com/repos/jorgegil96/All-NBA", "Date": "2017-06-15T05:11:30Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > 0) { where += \" AND \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1726/buggy-version/src.com.example.yinyangapp.database.DatabaseAdapter.java", "BodyUseAPI": [], "Fixed commit": "9cf956455b411485b14913ea9e9b5f95bbb6875a", "Url": "https://api.github.com/repos/danidanone17/YinYangApp", "Date": "2013-04-19T10:00:18Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"T3\".equals(lab)) { hm.put(\"series\", val); }else if ((\"AU\".equals(lab)) || (\"A1\".equals(lab))) { if (\"\".equals(author)) { author = val; }else { author += \" and \" + val; } }else if (\"A2\".equals(lab)) { if (\"\".equals(editor)) { editor = val; }else { editor += \" and \" + val; } }else if (((\"JA\".equals(lab)) || (\"JF\".equals(lab))) || (\"JO\".equals(lab))) { if (\"inproceedings\".equals(type)) { hm.put(\"booktitle\", val); }else { hm.put(\"journal\", val); } }else if (\"SP\".equals(lab)) { startPage = val; }else if (\"PB\".equals(lab)) { if (\"phdthesis\".equals(type)) { hm.put(\"school\", val); }else { hm.put(\"publisher\", val); } }else if ((\"AD\".equals(lab)) || (\"CY\".equals(lab))) { hm.put(\"address\", val); }else if (\"EP\".equals(lab)) { endPage = val; }else if (\"SN\".equals(lab)) { hm.put(\"issn\", val); }else if (\"VL\".equals(lab)) { hm.put(\"volume\", val); }else if (\"IS\".equals(lab)) { hm.put(\"number\", val); }else if ((\"N2\".equals(lab)) || (\"AB\".equals(lab))) { java.lang.String oldAb = hm.get(\"abstract\"); if (oldAb == null) { hm.put(\"abstract\", val); }else { hm.put(\"abstract\", ((oldAb + \"\\n\") + val)); } }else if (\"UR\".equals(lab)) { hm.put(\"url\", val); }else if (((\"Y1\".equals(lab)) || (\"PY\".equals(lab))) && ((val.length()) >= 4)) { java.lang.String[] parts = val.split(\"/\"); hm.put(\"year\", parts[0]); if (((parts.length) > 1) && (!(parts[1].isEmpty()))) { try { int monthNumber = java.lang.Integer.parseInt(parts[1]); net.sf.jabref.importer.fileformat.MonthUtil.Month month = net.sf.jabref.importer.fileformat.MonthUtil.getMonthByNumber(monthNumber); if (month.isValid()) { hm.put(\"month\", month.bibtexFormat); } } catch (java.lang.NumberFormatException ex) { } } }else if (\"KW\".equals(lab)) { if (hm.containsKey(\"keywords\")) { java.lang.String kw = hm.get(\"keywords\"); hm.put(\"keywords\", ((kw + \", \") + val)); }else { hm.put(\"keywords\", val); } }else if (((\"U1\".equals(lab)) || (\"U2\".equals(lab))) || (\"N1\".equals(lab))) { if (!(comment.isEmpty())) { comment = comment + \"\\n\"; } comment = comment + val; }else if (\"ID\".equals(lab)) { hm.put(\"refid\", val); }else if (\"M3\".equals(lab)) { java.lang.String doi = val; if (doi.startsWith(\"doi:\")) { doi = doi.replaceAll(\"(?i)doi:\", \"\").trim(); hm.put(\"doi\", doi); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8132/buggy-version/src.main.java.net.sf.jabref.importer.fileformat.RisImporter.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "9c2703d372433873e60c2bb58fd5cbb4e13cc040", "Url": "https://api.github.com/repos/obraliar/jabref", "Date": "2016-02-16T23:33:32Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((userSearch.equals(null)) == false) && ((userSearch.equals(\"\")) == false)) { java.lang.System.out.println((userSearch + 1)); frenchWord = english.searchTree(userSearch).getFren(); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4373/buggy-version/Project.Translator.java", "BodyUseAPI": ["english.searchTree(userSearch).getFren()", "DictionaryTree.searchTree(java.lang.String)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "e701dbbe8053e4fac40c2eca06ff819fda3c2b68", "Url": "https://api.github.com/repos/dhlp123/TranslatorGroupProject", "Date": "2017-03-27T00:25:24Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dice.isSpinable()) { setCount(((count) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5638/buggy-version/core.src.com.marswuerfel.game.objects.DiceCard.java", "BodyUseAPI": [], "Fixed commit": "e1fbd662fdfa8c50cbd1e77f8674b53e01b1efbb", "Url": "https://api.github.com/repos/Lumean97/Marswuerfel", "Date": "2015-04-15T09:53:31Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNotRepeating) translatedTextTextView.setText(fileFormats.entryList.get(lastEntryIdForExercise).translationList.get(translatedTextId).text); else translatedTextTextView.setText(fileFormats.entryList.get(lastEntryIdForRepeat).translationList.get(translatedTextId).text);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8985/buggy-version/src.at.rhomberg.parleydrone.CollectionSummaryActivity.java", "BodyUseAPI": [], "Fixed commit": "d99b6e771b3e39ec6411b9c08250ee68b4abba93", "Url": "https://api.github.com/repos/hrsFire/ParleyDrone", "Date": "2013-11-06T16:38:43Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gr.iti.mklab.reveal.util.MediaCluster.getCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((offset + count) > numMembers) count = numMembers - offset;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5924/buggy-version/src.main.java.gr.iti.mklab.reveal.web.RevealController.java", "BodyUseAPI": [], "Fixed commit": "4743e5c3f7b807edd666e81dfe2664e6f6f5bfa6", "Url": "https://api.github.com/repos/MKLab-ITI/reveal-media-webservice", "Date": "2014-10-08T06:52:32Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gr.iti.mklab.reveal.util.MediaCluster.getCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (offset > numMembers) offset = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5924/buggy-version/src.main.java.gr.iti.mklab.reveal.web.RevealController.java", "BodyUseAPI": [], "Fixed commit": "4743e5c3f7b807edd666e81dfe2664e6f6f5bfa6", "Url": "https://api.github.com/repos/MKLab-ITI/reveal-media-webservice", "Date": "2014-10-08T06:52:32Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.socialsensor.framework.client.dao.impl.StreamUserDAOImpl.getStreamUsers(gr.iti.mklab.reveal.mongo.DBObject)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((users != null) && ((users.size()) > 0)) { q.put(\"uid\", users.get(0).getId()); }else { return new java.util.ArrayList<gr.iti.mklab.reveal.util.MediaItem>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5924/buggy-version/src.main.java.gr.iti.mklab.reveal.mongo.RevealMediaItemDaoImpl.java", "BodyUseAPI": ["java.util.List<eu.socialsensor.framework.common.domain.StreamUser>.get(int)", "gr.iti.mklab.reveal.mongo.BasicDBObject.put(java.lang.String,users.get(0).getId())", "users.get(0).getId()"], "Fixed commit": "4743e5c3f7b807edd666e81dfe2664e6f6f5bfa6", "Url": "https://api.github.com/repos/MKLab-ITI/reveal-media-webservice", "Date": "2014-10-08T06:52:32Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getParentFile()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (((parent != null) && (!(parent.exists()))) && (!(parent.mkdirs()))) { context.addMessage(CompilerMessageCategory.ERROR, (\"Cannot create directory \" + (parent.getPath())), null, (-1), (-1)); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3362/buggy-version/plugins.android.src.org.jetbrains.android.compiler.AndroidAptCompiler.java", "BodyUseAPI": ["java.io.File.getPath()", "org.jetbrains.android.compiler.CompileContext.addMessage(CompilerMessageCategory.ERROR,java.lang.String,<nulltype>,int,int)"], "Fixed commit": "ca57570a9e1fc85e5e5ab4e55e20bcb1bf86461c", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2012-05-25T13:14:31Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isActive)) { if ((java.lang.Math.random()) < (inactiveDecayProbability)) { isDestroyed = true; } }else { if (((java.lang.System.currentTimeMillis()) - (startTime)) >= ((activeDuration) * 1000)) { isDestroyed = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5689/buggy-version/src.at.computercamp.slither.server.Item.java", "BodyUseAPI": [], "Fixed commit": "12af764e0842272cba8708d37e68e1c378048472", "Url": "https://api.github.com/repos/petabyteboy/cc-slither", "Date": "2016-08-12T14:06:04Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (LDAPConstants.LDAP_TYPE_OR_VALUE_EXISTS.equals(ire.getLDAPErrorCode())) { throw new org.forgerock.json.resource.ForbiddenException(\"Cannot update a password to the same value.\"); }else { org.forgerock.openam.core.rest.IdentityRestUtils.debug.warning(((\"IdentityRestUtils.changePassword() :: IdRepoException occurred while \" + \"changing the password for user: \") + username), ire); throw new org.forgerock.json.resource.InternalServerErrorException(\"An error occurred while trying to change the password\", ire); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8695/buggy-version/openam-core-rest.src.main.java.org.forgerock.openam.core.rest.IdentityRestUtils.java", "BodyUseAPI": ["com.sun.identity.shared.debug.Debug.warning(java.lang.String,com.sun.identity.idm.IdRepoException)"], "Fixed commit": "7d17b3f839a95a855c453e69b7e41e28fc450ae4", "Url": "https://api.github.com/repos/OpenRock/OpenAM", "Date": "2015-12-15T12:24:18Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (URLs.isEmpty()) { new hu.juranyi.zsolt.heritrixremote.model.ErrorHandler(hu.juranyi.zsolt.heritrixremote.model.ErrorType.NO_VALID_URLS_SPECIFIED); }else { java.lang.String jobdir = hu.juranyi.zsolt.heritrixremote.model.Job.URLtoDirectoryName(URLs.get(0)); java.lang.System.out.println(((\"Creating job '\" + jobdir) + \"'\")); try { new hu.juranyi.zsolt.heritrixremote.model.HeritrixCall(hu.juranyi.zsolt.heritrixremote.HeritrixRemote.heritrix).data((\"action=create&createpath=\" + jobdir)).getResponse(); } catch (java.lang.Exception ex) { new hu.juranyi.zsolt.heritrixremote.model.ErrorHandler(hu.juranyi.zsolt.heritrixremote.model.ErrorType.FAILED_TO_PERFORM_ACTION); } java.lang.System.out.println(\"Fetching CXML...\"); java.lang.String[] oldCXML = null; if (((hu.juranyi.zsolt.heritrixremote.HeritrixRemote.arguments.length) >= 6) && (hu.juranyi.zsolt.heritrixremote.HeritrixRemote.arguments[4].equalsIgnoreCase(\"use\"))) { hu.juranyi.zsolt.heritrixremote.model.TextFile f = new hu.juranyi.zsolt.heritrixremote.model.TextFile(hu.juranyi.zsolt.heritrixremote.HeritrixRemote.arguments[5]); if (!(f.load())) { new hu.juranyi.zsolt.heritrixremote.model.ErrorHandler(hu.juranyi.zsolt.heritrixremote.model.ErrorType.FAILED_TO_LOAD_YOUR_CXML); }else { f.getLines().toArray(); } }else { oldCXML = new hu.juranyi.zsolt.heritrixremote.model.Job(hu.juranyi.zsolt.heritrixremote.HeritrixRemote.heritrix, jobdir).getCXML().split(\"\\n\"); } java.lang.System.out.println(\"Inserting URLs...\"); hu.juranyi.zsolt.heritrixremote.model.TextFile newCXML = new hu.juranyi.zsolt.heritrixremote.model.TextFile(\"temp.cxml\"); boolean inProp = false; for (java.lang.String line : oldCXML) { if (inProp) { if (line.matches(\".*</prop>.*\")) { inProp = false; }else { continue; } } if (line.matches(\".*metadata.operatorContactUrl=.*\")) { line = \"metadata.operatorContactUrl=http://127.0.0.1/\"; } newCXML.getLines().add(line); if (line.matches(\".*<prop[^>]+key=\\\"?seeds.textSource.value\\\"?.*\")) { inProp = true; for (java.lang.String URL : URLs) { newCXML.getLines().add(URL.replaceAll(\"&\", \"&amp;\")); } } } newCXML.save(); java.lang.System.out.println(\"Pushing CXML...\"); try { java.lang.String response = new hu.juranyi.zsolt.heritrixremote.model.HeritrixCall(hu.juranyi.zsolt.heritrixremote.HeritrixRemote.heritrix).path(((\"job/\" + jobdir) + \"/jobdir/crawler-beans.cxml\")).file(new java.io.File(\"temp.cxml\")).getResponse(); if ((null != response) && (!(response.isEmpty()))) { new hu.juranyi.zsolt.heritrixremote.model.ErrorHandler(hu.juranyi.zsolt.heritrixremote.model.ErrorType.FAILED_TO_PUSH_CXML); } } catch (java.lang.Exception ex) { new hu.juranyi.zsolt.heritrixremote.model.ErrorHandler(hu.juranyi.zsolt.heritrixremote.model.ErrorType.FAILED_TO_PUSH_CXML); } try { new hu.juranyi.zsolt.heritrixremote.model.HeritrixCall(hu.juranyi.zsolt.heritrixremote.HeritrixRemote.heritrix).data(\"action=rescan\").getResponse(); } catch (java.lang.Exception ex) { new hu.juranyi.zsolt.heritrixremote.model.ErrorHandler(hu.juranyi.zsolt.heritrixremote.model.ErrorType.FAILED_TO_PERFORM_ACTION); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7710/buggy-version/src.hu.juranyi.zsolt.heritrixremote.HeritrixRemote.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)", "hu.juranyi.zsolt.heritrixremote.model.Job.URLtoDirectoryName(java.lang.String)"], "Fixed commit": "e23d536a121dc5a1cec7e85df81211f1ac818a0e", "Url": "https://api.github.com/repos/juzraai/HeritrixRemote", "Date": "2013-05-27T10:32:31Z"},
{"Line": "=>545", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jhl.encourage.apis.SpocObject.getMap()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((map.get(\"eventaddress\")) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7509/buggy-version/Encourage-Android.src.com.jhl.encourage.activities.JHTimelineActivity.java", "BodyUseAPI": [], "Fixed commit": "1228b3a374c887b564c21c1163009a13658b1d33", "Url": "https://api.github.com/repos/abubalanandan/Encourage-Android", "Date": "2014-08-08T22:31:42Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.jadventure.game.QueueProvider.mode.equals(\"server\")) { com.jadventure.game.QueueProvider.queue.offer(\"QUERY\"); while ((message = com.jadventure.game.QueueProvider.inputQueue.poll()) == null) { } }else { java.util.Scanner input = new java.util.Scanner(java.lang.System.in); message = input.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8152/buggy-version/src.main.java.com.jadventure.game.QueueProvider.java", "BodyUseAPI": [], "Fixed commit": "e49898a6a80423a6145845f5fceb57fd128f23fe", "Url": "https://api.github.com/repos/paddatrapper/JAdventure", "Date": "2014-09-22T05:28:45Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jsonObject.optString(\"login\").trim()", "jsonObject.optString(\"expiration\").trim()", "jsonObject.optString(\"token\").trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((!(login.isEmpty())) && (!(token.isEmpty()))) && (!(expiration.isEmpty()))) { createUserCredentials(login, token, expiration); userCredentials = getUserCredentials(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7647/buggy-version/app.src.main.java.bart.friendfinderapp.loginActivity.LoginActivity.java", "BodyUseAPI": ["bart.friendfinderapp.loginActivity.LoginActivity.createUserCredentials(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "0cb0405e8df76af8d5340765f2ca871ad22b909d", "Url": "https://api.github.com/repos/pszczolkowski/FriendFinder_frontend", "Date": "2015-11-23T20:06:44Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((documentEvent.getSource().toString().length()) > 20) { source = source.substring(20, ((source.length()) - 1)); return fi.helsinki.cs.tmc.core.utilities.JsonMaker.create().add(\"file\", new fi.helsinki.cs.tmc.intellij.services.PathResolver().getPathRelativeToProject(source)).add(\"patches\", diff.patch_toText(patches)).add(\"full_document\", ((documentEvent.getNewLength()) == (documentEvent.getDocument().getTextLength()))).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3308/buggy-version/tmc-plugin-intellij.src.main.java.fi.helsinki.cs.tmc.intellij.spyware.TextInputListener.java", "BodyUseAPI": ["com.intellij.openapi.editor.event.DocumentEvent.getNewLength()", "com.intellij.openapi.editor.event.DocumentEvent.getDocument()", "fi.helsinki.cs.tmc.core.utilities.JsonMaker.create().add(\"file\", new fi.helsinki.cs.tmc.intellij.services.PathResolver().getPathRelativeToProject(source)).add(\"patches\", diff.patch_toText(patches)).add(java.lang.String,((documentEvent.getNewLength()) == (documentEvent.getDocument().getTextLength())))", "fi.helsinki.cs.tmc.core.utilities.JsonMaker.create().add(\"file\", new fi.helsinki.cs.tmc.intellij.services.PathResolver().getPathRelativeToProject(source)).add(\"patches\", diff.patch_toText(patches)).add(\"full_document\", ((documentEvent.getNewLength()) == (documentEvent.getDocument().getTextLength()))).toString()", "documentEvent.getDocument().getTextLength()"], "Fixed commit": "0b94f4a7a742a2c24e8a3e9b28bc881590cc099c", "Url": "https://api.github.com/repos/testmycode/tmc-intellij", "Date": "2016-08-25T16:02:35Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (text != null) { fi.helsinki.cs.tmc.spyware.LoggableEvent event = new fi.helsinki.cs.tmc.spyware.LoggableEvent(exercise, eventType, text.getBytes()); fi.helsinki.cs.tmc.intellij.spyware.SpywareEventManager.add(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3308/buggy-version/tmc-plugin-intellij.src.main.java.fi.helsinki.cs.tmc.intellij.spyware.TextInputListener.java", "BodyUseAPI": ["java.lang.String.getBytes()"], "Fixed commit": "0b94f4a7a742a2c24e8a3e9b28bc881590cc099c", "Url": "https://api.github.com/repos/testmycode/tmc-intellij", "Date": "2016-08-25T16:02:35Z"},
{"Line": "=>1446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (oldSuperCardToast.isTouchDismissable()) { newSuperCardToast.setTouchToDismiss(oldSuperCardToast.isTouchDismissable()); }else if (oldSuperCardToast.isSwipeDismissable()) { newSuperCardToast.setSwipeToDismiss(oldSuperCardToast.isSwipeDismissable()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6365/buggy-version/supertoasts.src.com.github.johnpersano.supertoasts.SuperCardToast.java", "BodyUseAPI": ["com.github.johnpersano.supertoasts.SuperCardToast.isSwipeDismissable()", "com.github.johnpersano.supertoasts.SuperCardToast.setSwipeToDismiss(boolean)", "com.github.johnpersano.supertoasts.SuperCardToast.setTouchToDismiss(boolean)", "com.github.johnpersano.supertoasts.SuperCardToast.isTouchDismissable()", "com.github.johnpersano.supertoasts.SuperCardToast.isSwipeDismissable()"], "Fixed commit": "06e5e4824950bb9cf75caf4ca71daa32ba2a0ab0", "Url": "https://api.github.com/repos/JohnPersano/SuperToasts", "Date": "2013-12-16T21:43:15Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (inQuotes && (word != null)) { word.append(c); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8126/buggy-version/olca-core.src.main.java.org.openlca.core.matrix.io.olcamat.Csv.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char)"], "Fixed commit": "33f97e27b4c5c9a3fd945ee46886c1e699d82b4f", "Url": "https://api.github.com/repos/GreenDelta/olca-modules", "Date": "2017-10-04T15:40:45Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tagContents.length()) == 0) return this;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7228/buggy-version/src.com.kizna.html.tags.HTMLTag.java", "BodyUseAPI": [], "Fixed commit": "8b19c16496d2e5fc31b6acaec6c6eb8ce99646c4", "Url": "https://api.github.com/repos/omegat-org/htmlparser", "Date": "2002-08-08T07:04:52Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["GnuBackgammon.Instance.fibsPlayersPool.obtain()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((p != null) || (arg1 != null)) { p.parsePlayer(arg1); if ((it.alcacoop.backgammon.GnuBackgammon.fsm) instanceof it.alcacoop.backgammon.fsm.FIBSFSM) GnuBackgammon.fsm.processEvent(Events.FIBS_PLAYER_CHANGED, p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3494/buggy-version/GnuBackgammon.src.it.alcacoop.fibs.CommandDispatcherImpl.java", "BodyUseAPI": ["it.alcacoop.fibs.Player.parsePlayer(java.lang.String)", "GnuBackgammon.fsm.processEvent(Events.FIBS_PLAYER_CHANGED,it.alcacoop.fibs.Player)"], "Fixed commit": "b1c2b75f9644a2897cd76370d127e56f484085cc", "Url": "https://api.github.com/repos/alcacoop/it.alcacoop.backgammon", "Date": "2013-09-03T15:12:17Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((app_data) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3494/buggy-version/GnuBackgammon.src.it.alcacoop.backgammon.utils.AppDataManager.java", "BodyUseAPI": [], "Fixed commit": "b1c2b75f9644a2897cd76370d127e56f484085cc", "Url": "https://api.github.com/repos/alcacoop/it.alcacoop.backgammon", "Date": "2013-09-03T15:12:17Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((userRequest.getResponder()) == null) || (!(userRequest.getResponder().equals(this.getId())))) _requests.add(userRequest);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3361/buggy-version/src.main.java.org.ndexbio.common.models.object.User.java", "BodyUseAPI": [], "Fixed commit": "b8a408f2b087ab122deebfb51025e4fd96bda36c", "Url": "https://api.github.com/repos/cytoscape/ndex-common", "Date": "2014-01-10T01:05:25Z"},
{"Line": "=>687", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.ParameterizedType.getRawType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((rawTye == (java.util.Set.class)) || (rawTye == (java.util.HashSet.class))) { collection = new java.util.HashSet(); }else if (rawTye == (java.util.TreeSet.class)) { collection = new java.util.TreeSet(); }else { collection = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4949/buggy-version/src.main.java.com.alibaba.fastjson.util.TypeUtils.java", "BodyUseAPI": [], "Fixed commit": "4107c116464b0496b7afa3697cfab1a26c35d482", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2014-10-03T06:32:14Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<com.gildedgames.fuzzyjava.api.evaluation.IProperty<E>, com.gildedgames.fuzzyjava.api.evaluation.Parameter[]>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (prop == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2227/buggy-version/fuzzy-java.src.main.java.com.gildedgames.fuzzyjava.core.evaluation.RuleSet.java", "BodyUseAPI": [], "Fixed commit": "d09154a8a93ac85b29266061b3c274cb1fcb3566", "Url": "https://api.github.com/repos/HEmile/Fuzzy-Java", "Date": "2015-02-26T19:43:02Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<com.gildedgames.fuzzyjava.api.evaluation.IProperty<E>, com.gildedgames.fuzzyjava.api.evaluation.Parameter[]>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (prop == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2227/buggy-version/fuzzy-java.src.main.java.com.gildedgames.fuzzyjava.core.evaluation.RuleSet.java", "BodyUseAPI": [], "Fixed commit": "d09154a8a93ac85b29266061b3c274cb1fcb3566", "Url": "https://api.github.com/repos/HEmile/Fuzzy-Java", "Date": "2015-02-26T19:43:02Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["etxtQty.getText().toString()", "etxtLot.getText().toString()", "etxtCode.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((((lot.trim().length()) > 0) && ((qty.trim().length()) > 0)) && ((code.trim().length()) > 0))) { message(getString(R.string.code_lot_qty_not_empty)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4008/buggy-version/AndroidStudioWorkspace.StockSurvey.app.src.main.java.py.com.unionsrl.stocksurvey.StockSurveyActivity.java", "BodyUseAPI": [], "Fixed commit": "ab18618655cbb7d70b0367c27f9c269730abf922", "Url": "https://api.github.com/repos/ancho85/android101", "Date": "2015-03-10T20:14:56Z"},
{"Line": "=>1038", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numParams == 0) && (numValues == 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4282/buggy-version/src.main.java.org.datanucleus.api.jdo.query.JDOTypesafeQuery.java", "BodyUseAPI": [], "Fixed commit": "6ee5e4389d6ddaa26adf7f43a0405c68fee144b8", "Url": "https://api.github.com/repos/datanucleus/datanucleus-api-jdo", "Date": "2014-06-05T11:00:55Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getResources().getConfiguration().orientation) == (android.content.res.Configuration.ORIENTATION_PORTRAIT)) { android.widget.ScrollView scrollView = ((android.widget.ScrollView) (findViewById(R.id.ScrollView01))); scrollView.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/9126/buggy-version/app.src.main.java.com.example.ctsuser1.helloworld.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9af10e27d92c8e3a9502a6eef3db38c2678767ef", "Url": "https://api.github.com/repos/aveenathan/CatpixMeows", "Date": "2015-05-28T01:29:49Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.molgenis.data.Repository.getEntityMetaData()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (RuntimeProperty.ENTITY_NAME.equalsIgnoreCase(entityMetaData.getName())) { return new org.molgenis.data.CrudRepositorySecurityDecorator(new org.molgenis.data.validation.RepositoryValidationDecorator(dataService, ((org.molgenis.data.CrudRepository) (repository)), new org.molgenis.data.validation.EntityAttributesValidator())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4064/buggy-version/molgenis-core-ui.src.main.java.org.molgenis.ui.MolgenisWebAppConfig.java", "BodyUseAPI": [], "Fixed commit": "1ed8036a8346bb66cf47608a7af5c33ddc448c46", "Url": "https://api.github.com/repos/Mark-de-Haan/molgenis", "Date": "2014-11-20T13:17:36Z"},
{"Line": "=>874", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arg[i]) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7413/buggy-version/scouter.agent.java.src.scouter.agent.trace.TraceMain.java", "BodyUseAPI": [], "Fixed commit": "ced02cb0f9461d2f81d8f08f3704063a8ccfb521", "Url": "https://api.github.com/repos/scouter-project/scouter", "Date": "2017-04-10T01:25:42Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(msg.getSourceName().equals(getConsole().getMainSystem()))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7889/buggy-version/plugins-dev.uavs.pt.lsts.neptus.plugins.uavs.panels.AutopilotModePanel.java", "BodyUseAPI": [], "Fixed commit": "003fe8f81c3b0bd73bd525dda2e28d0c022360ef", "Url": "https://api.github.com/repos/LSTS/neptus", "Date": "2014-06-23T15:58:12Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ai.gage.mitch.checkers.agent.CheckersAgent.alphaBeta(ai.gage.mitch.checkers.agent.GameNode,int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((node.getValue()) == moveIndex) { return node.getMove(); }else if ((node.getValue()) == (-moveIndex)) { return node.getMove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5671/buggy-version/src.ai.gage.mitch.checkers.agent.CheckersAgent.java", "BodyUseAPI": ["ai.gage.mitch.checkers.agent.GameNode.getValue()", "ai.gage.mitch.checkers.agent.GameNode.getMove()", "ai.gage.mitch.checkers.agent.GameNode.getMove()"], "Fixed commit": "2aa4f91f14faea02ca004020818ac51cb9b28c53", "Url": "https://api.github.com/repos/gvanderclay/CheckersAI", "Date": "2016-04-18T23:31:14Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (uk.ac.imperial.lsds.seep.GLOBALS.valueFor(\"net-routing\").equals(\"FixedRoutes\")) { upstreamCosts = parseFixedRoutes(routes); }else { throw new java.lang.RuntimeException((\"Unknown routing alg: \" + (uk.ac.imperial.lsds.seep.GLOBALS.valueFor(\"net-routing\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1541/buggy-version/seep-system.src.main.java.uk.ac.imperial.lsds.seep.manet.NetRateMonitor.java", "BodyUseAPI": [], "Fixed commit": "92709ff9c05cb5764e06291e5970935f22958cb9", "Url": "https://api.github.com/repos/lsds/SEEP", "Date": "2015-11-02T14:10:12Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["epgmElement.getProperties().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (bindingProp == null) { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/556/buggy-version/gradoop-flink.src.main.java.org.gradoop.flink.model.impl.operators.projection.common.BindingExtractor.java", "BodyUseAPI": [], "Fixed commit": "026bfca322d8ef1f811c298679930bac413d7678", "Url": "https://api.github.com/repos/foesi/gradoop", "Date": "2016-08-05T06:08:34Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.trianguloy.llscript.repository.web.ManagedWebView.getRepoDocument()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (repoDocument != null) { org.jsoup.select.Elements elements = repoDocument.select(((\"a[href*=\" + url) + \"]\")); if ((elements.size()) > 0) { scriptName = elements.first().ownText(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/561/buggy-version/app.src.main.java.com.trianguloy.llscript.repository.internal.ImportUtils.java", "BodyUseAPI": ["org.jsoup.nodes.Document.select(java.lang.String)"], "Fixed commit": "614584c62c0c16e18759bd2062480cf66c5aa9fe", "Url": "https://api.github.com/repos/TrianguloY/LLScript_Repository_Importer", "Date": "2015-11-12T14:24:10Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (scriptName == null) { scriptName = name; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/561/buggy-version/app.src.main.java.com.trianguloy.llscript.repository.internal.ImportUtils.java", "BodyUseAPI": [], "Fixed commit": "614584c62c0c16e18759bd2062480cf66c5aa9fe", "Url": "https://api.github.com/repos/TrianguloY/LLScript_Repository_Importer", "Date": "2015-11-12T14:24:10Z"},
{"Line": "=>938", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ap.mclass) != null) { if ((ap.mclass.name.equals(\"healer\")) && ((ap.healtimer) <= 0)) { if (((ap.player.getHealth()) + 1) <= 20) { if ((ap.player.getHealth()) < 0) { ap.player.setHealth(1); } ap.player.setHealth(((ap.player.getHealth()) + 1)); ap.healtimer = 2; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/9261/buggy-version/src.main.java.com.orange451.UltimateArena.Arenas.Arena.java", "BodyUseAPI": ["ap.player.getHealth()", "ap.player.setHealth(int)", "ap.player.getHealth()", "ap.mclass.name.equals(java.lang.String)", "ap.player.getHealth()", "ap.player.setHealth(((ap.player.getHealth()) + 1))"], "Fixed commit": "a23e27f4901096a197d27ac4f62b62a884208e03", "Url": "https://api.github.com/repos/MineSworn/UltimateArena", "Date": "2013-06-16T04:02:11Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (1 == (subFields.length)) message = \"\"; else message = nl.tudelft.otsim.GeoObjects.VMS.TimedMessage.decode(subFields[1]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1744/buggy-version/src.nl.tudelft.otsim.GeoObjects.VMS.java", "BodyUseAPI": [], "Fixed commit": "9eeee03ba44096a431f2663865f51d9f77393227", "Url": "https://api.github.com/repos/OTSim/OTSim", "Date": "2014-01-15T10:54:42Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((args != null) && ((args.length) > 0)) { org.fastj.fit.runner.TCaseRunner.main(args); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3928/buggy-version/src.org.fastj.fit.runner.RunMain.java", "BodyUseAPI": ["org.fastj.fit.runner.TCaseRunner.main(java.lang.String[])"], "Fixed commit": "a40917d0fb76c59417a36b51434348111542390d", "Url": "https://api.github.com/repos/fastj/fit", "Date": "2016-05-04T13:53:05Z"},
{"Line": "=>1432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((demodulator) != null) return demodulator.setChannelWidth(newChannelWidth); else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2915/buggy-version/app.src.main.java.com.mantz_it.rfanalyzer.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "79f2f200e0c4317d9ff93536b91b364bcd2c5154", "Url": "https://api.github.com/repos/demantz/RFAnalyzer", "Date": "2014-11-22T17:27:07Z"},
{"Line": "=>1440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scheduler) != null) scheduler.setChannelFrequency(newChannelFrequency);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2915/buggy-version/app.src.main.java.com.mantz_it.rfanalyzer.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "79f2f200e0c4317d9ff93536b91b364bcd2c5154", "Url": "https://api.github.com/repos/demantz/RFAnalyzer", "Date": "2014-11-22T17:27:07Z"},
{"Line": "=>1446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scheduler) != null) scheduler.setSquelchSatisfied(squelchSatisfied);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2915/buggy-version/app.src.main.java.com.mantz_it.rfanalyzer.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "79f2f200e0c4317d9ff93536b91b364bcd2c5154", "Url": "https://api.github.com/repos/demantz/RFAnalyzer", "Date": "2014-11-22T17:27:07Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (child.contains(\".\")) { int index = child.lastIndexOf('.'); parentNode = getNode(\"\", child.substring(0, index)); child = child.substring((index + 1)); }else if ((parent.length()) == 0) { parentNode = getConfiguration(); }else if (parent.contains(\".\")) { int index = parent.indexOf('.'); parentNode = getNode(parent.substring(0, index), parent.substring((index + 1))); }else { parentNode = getNode(\"\", parent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5705/buggy-version/src.main.java.com.platymuus.bukkit.permissions.PermissionsPlugin.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(char)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int)", "com.platymuus.bukkit.permissions.PermissionsPlugin.getNode(java.lang.String,java.lang.String)"], "Fixed commit": "625eab5c9537b056140c67c0543d0db5db3daa52", "Url": "https://api.github.com/repos/SpaceManiac/PermissionsBukkit", "Date": "2011-07-13T08:43:23Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getCause()) instanceof java.lang.RuntimeException) { throw ((java.lang.RuntimeException) (e.getCause())); }else { throw new java.lang.RuntimeException(e.getCause()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/342/buggy-version/katharsis-core.src.main.java.io.katharsis.repository.annotated.AnnotatedRepositoryAdapter.java", "BodyUseAPI": ["java.lang.reflect.InvocationTargetException.getCause()", "java.lang.reflect.InvocationTargetException.getCause()"], "Fixed commit": "d24a550b346f0e3c6a62cb55a7b441f4f7354af6", "Url": "https://api.github.com/repos/katharsis-project/katharsis-framework", "Date": "2016-11-01T20:06:20Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.topsun.posclient.datamodel.PartSales.getCashierModelList()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == cms) { return new java.math.BigDecimal(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8356/buggy-version/com.topsun.posclient.sales.core.src.com.topsun.posclient.sales.core.SalesDataUtil.java", "BodyUseAPI": [], "Fixed commit": "d041d2dda3220485d24ebb51a580938d875c1f22", "Url": "https://api.github.com/repos/tandong8888/topsun", "Date": "2013-12-17T05:21:56Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((name.length()) > 32) this.name = name.substring(0, 32); else this.name = name;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3756/buggy-version/src.com.ftwinston.KillerMinecraft.Option.java", "BodyUseAPI": [], "Fixed commit": "62b92ce306cbe6ae631253dc388e2ed4e387cfbb", "Url": "https://api.github.com/repos/KillerMinecraft/KillerMinecraft", "Date": "2013-09-22T09:23:49Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (itemView instanceof android.widget.TextView) { mTitleTextView = ((android.widget.TextView) (itemView)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6173/buggy-version/app.src.main.java.me.ipoondev.photogallery.PhotoGalleryFragment.java", "BodyUseAPI": [], "Fixed commit": "e1673897edc3d1277da7d4a524f50c3404b170a7", "Url": "https://api.github.com/repos/Pawares/PhotoGallery", "Date": "2017-08-12T09:50:17Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.aitusoftware.transport.buffer.PageHeader.nextAvailableWritePosition()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((slab.getIntVolatile(com.aitusoftware.transport.buffer.Offsets.toPageOffset(position))) & (com.aitusoftware.transport.buffer.Page.EOF_MARKER)) != 0) { return com.aitusoftware.transport.buffer.Page.ERR_NOT_ENOUGH_SPACE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8986/buggy-version/src.main.java.com.aitusoftware.transport.buffer.Page.java", "BodyUseAPI": [], "Fixed commit": "e9a2bb8cc33b3bd2f824bd754ba24d1b1c982443", "Url": "https://api.github.com/repos/aitusoftware/transport", "Date": "2017-11-13T19:33:29Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(targetDefinition.isHelperTable())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/9220/buggy-version/SemantikosKernelEJB.src.cl.minsal.semantikos.model.relationships.RelationshipDefinition.java", "BodyUseAPI": [], "Fixed commit": "af120456f257b139d1cc30b976ceba3af2ca64a2", "Url": "https://api.github.com/repos/MedicalTrends/servidor-terminologico", "Date": "2016-12-02T18:49:16Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.teavm.dependency.DependencyClassSource.get(java.lang.String)", "org.teavm.dependency.FieldReference.getClassName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (clsName.equals(cls.getParent())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5295/buggy-version/teavm-core.src.main.java.org.teavm.dependency.DependencyChecker.java", "BodyUseAPI": [], "Fixed commit": "8fed4a2da116435461732a651a36bea7b78eec51", "Url": "https://api.github.com/repos/konsoletyper/teavm", "Date": "2014-11-03T17:31:49Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cls.getName().equals(\"java.lang.Object\")) { cls.setParent(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5295/buggy-version/teavm-core.src.main.java.org.teavm.parsing.Parser.java", "BodyUseAPI": ["org.teavm.parsing.ClassHolder.setParent(<nulltype>)"], "Fixed commit": "8fed4a2da116435461732a651a36bea7b78eec51", "Url": "https://api.github.com/repos/konsoletyper/teavm", "Date": "2014-11-03T17:31:49Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (obj != null) { request.setArguments(new java.lang.Object[]{ obj }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6245/buggy-version/motan-core.src.main.java.com.weibo.api.motan.protocol.v2motan.MotanV2Codec.java", "BodyUseAPI": ["com.weibo.api.motan.rpc.DefaultRequest.setArguments(java.lang.Object[])"], "Fixed commit": "cf14fa62139cbef04b19680453f6021afff667a2", "Url": "https://api.github.com/repos/weibocom/motan", "Date": "2017-11-23T08:21:40Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((date_published.length()) > 20) { tmpStr.setCharAt(10, ' '); date_published = tmpStr.substring(0, 19); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8498/buggy-version/app.src.main.java.com.mummyding.app.leisure.model.science.ArticleBean.java", "BodyUseAPI": [], "Fixed commit": "b94a3bb307c746f4c1db5bf002f05c5d2f28ae5e", "Url": "https://api.github.com/repos/MummyDing/Leisure", "Date": "2015-11-25T03:32:18Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mcp.mobius.waila.api.IWailaDataAccessor.getTileEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tInv.getSizeInventory()) > 0) { net.minecraft.item.ItemStack tryBoundGem = tInv.getStackInSlot(0); if (tryBoundGem != null) { if ((tryBoundGem.getItem()) instanceof ec3.common.item.ItemBoundGem) { ec3.common.item.ItemBoundGem itm = ((ec3.common.item.ItemBoundGem) (tryBoundGem.getItem())); itm.addInformation(tryBoundGem, null, currenttip, true); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8451/buggy-version/java.ec3.integration.waila.WailaDataProvider.java", "BodyUseAPI": ["net.minecraft.inventory.IInventory.getStackInSlot(int)"], "Fixed commit": "c6c0ce7937e5249d8675e1985c861d7e702f0d58", "Url": "https://api.github.com/repos/Modbder/EssentialCraft3", "Date": "2015-08-14T12:41:44Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (this.extendString.endsWith(\"{\")) { extendString = extendString.substring(0, ((this.extendString.length()) - 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5345/buggy-version/src.com.smanzana.JavaVis.Parser.ClassDeclaration.java", "BodyUseAPI": [], "Fixed commit": "80be07ecb452cb4a8466f266e8ea84d871043779", "Url": "https://api.github.com/repos/Dove-Bren/JavaVis", "Date": "2015-04-21T06:27:20Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((extendString.contains(\"<\")) && ((tokens.length) >= (i + 3))) { if (tokens[(i + 2)].contains(\">\")) { extendString = (extendString) + (tokens[(i + 2)]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5345/buggy-version/src.com.smanzana.JavaVis.Parser.ClassDeclaration.java", "BodyUseAPI": [], "Fixed commit": "80be07ecb452cb4a8466f266e8ea84d871043779", "Url": "https://api.github.com/repos/Dove-Bren/JavaVis", "Date": "2015-04-21T06:27:20Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entropyBits) != null) { entropyBits.get().set((seedLength * 8L)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5121/buggy-version/betterrandom.src.main.java.io.github.pr0methean.betterrandom.prng.adapter.SplittableRandomAdapter.java", "BodyUseAPI": [], "Fixed commit": "5ba8e71a5ab9dddc513c50a258e261d7f53c8901", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2017-10-28T21:54:10Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(productQuantity.equals(\"\"))) { try { cartItem.quantity = java.lang.Integer.valueOf(productQuantity); cart.items.add(cartItem); cartItem.cart = cart; controllers.Ebean.save(cartItem); java.lang.System.out.println((((\"adding item # \" + productId) + \" to cart, quantity: \") + productQuantity)); } catch (java.lang.NumberFormatException e) { java.lang.System.out.println(\"Not a valid quantity!\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7067/buggy-version/app.controllers.ShoppingCart.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "978b882b21a1379148355310d90f72eb0cbbb5fc", "Url": "https://api.github.com/repos/sharukhhasan/swe-project", "Date": "2016-03-30T06:56:28Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (intentData == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6675/buggy-version/app.src.main.java.com.imaginarystudios.mocotodo.Models.TasksModel.java", "BodyUseAPI": [], "Fixed commit": "45eb4efca33b3003e8bb6d055f7c99470aaa8e8f", "Url": "https://api.github.com/repos/knock-in/mocotodo", "Date": "2016-04-29T19:33:49Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (itemSelected.contains(\" \")) { itemSelected = itemSelected.replace(\" \", \"%20\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2412/buggy-version/SoftwareFinder.app.src.main.java.edu.fairmontstate.softwarefinder.SoftwareActivity.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "96eb09767190d9f11212cfb67c75fb722f79efa5", "Url": "https://api.github.com/repos/tdevine1/SoftwareRegistry", "Date": "2016-04-27T16:20:41Z"},
{"Line": "=>583", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["int[].clone()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.util.Arrays.equals(this.shape, nshape)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3804/buggy-version/org.eclipse.january.src.org.eclipse.january.dataset.AbstractDataset.java", "BodyUseAPI": [], "Fixed commit": "e208e7eebcb9e02161f2ceaefd72502be84b9790", "Url": "https://api.github.com/repos/eclipse/dawnsci", "Date": "2016-08-19T10:24:09Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((wxProductCategory.getId()) != null) { wxProductCategory.setCreateDate(new java.util.Date()); wxProductCategory = productCategoryDao.save(wxProductCategory); }else { net.chat.domain.mall.WxProductCategory category = productCategoryDao.findOne(wxProductCategory.getId()); category.setCategoryName(wxProductCategory.getCategoryName()); category.setDescription(wxProductCategory.getDescription()); category.setStyle(wxProductCategory.getStyle()); category.setMallId(wxProductCategory.getMallId()); wxProductCategory = category; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6865/buggy-version/src.main.java.net.chat.service.mall.impl.MallServiceImpl.java", "BodyUseAPI": ["net.chat.domain.mall.WxProductCategory.setMallId(wxProductCategory.getMallId())", "net.chat.domain.mall.WxProductCategory.getCategoryName()", "net.chat.dao.mall.WxProductCategoryDao.findOne(wxProductCategory.getId())", "net.chat.domain.mall.WxProductCategory.setStyle(wxProductCategory.getStyle())", "net.chat.dao.mall.WxProductCategoryDao.save(net.chat.domain.mall.WxProductCategory)", "net.chat.domain.mall.WxProductCategory.setCategoryName(wxProductCategory.getCategoryName())", "net.chat.domain.mall.WxProductCategory.getDescription()", "net.chat.domain.mall.WxProductCategory.getId()", "net.chat.domain.mall.WxProductCategory.getMallId()", "net.chat.domain.mall.WxProductCategory.setDescription(wxProductCategory.getDescription())", "net.chat.domain.mall.WxProductCategory.setCreateDate(java.util.Date)", "net.chat.domain.mall.WxProductCategory.getStyle()"], "Fixed commit": "db0d1be8e39a8247e145839bacbe40f4a8a453ff", "Url": "https://api.github.com/repos/linking12/WeiChat", "Date": "2013-12-05T06:22:50Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((camera) != null) { cameraPreview = new edu.oakland.textblock.CameraPreview(this, camera); android.widget.FrameLayout preview = ((android.widget.FrameLayout) (findViewById(R.id.camera_preview))); preview.addView(cameraPreview); }else { android.widget.TextView showCameraStatus = new android.widget.TextView(this); showCameraStatus.setText(\"Fail to access a camera.\\n OpenCamera() return null.\"); android.view.ViewGroup show = ((android.view.ViewGroup) (findViewById(R.id.camera_preview))); show.addView(showCameraStatus); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2870/buggy-version/app.src.main.java.edu.oakland.textblock.TakePhotoActivity.java", "BodyUseAPI": [], "Fixed commit": "fdf8162c2edb02b922bc38a66b100e2373b23519", "Url": "https://api.github.com/repos/toto6321/TextBlock", "Date": "2017-01-29T02:40:43Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.swrlRuleEngineModel) != null) this.swrlRuleEngineModel.unregisterOntologyListener();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1148/buggy-version/src.main.java.org.swrltab.ui.SWRLTab.java", "BodyUseAPI": [], "Fixed commit": "9b7f4301f33bf183dc8b61c4fa3164cc57df78a4", "Url": "https://api.github.com/repos/protegeproject/swrltab-plugin", "Date": "2016-06-17T20:15:19Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.sqwrlQueryEngineModel) != null) this.sqwrlQueryEngineModel.unregisterOntologyListener();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1148/buggy-version/src.main.java.org.swrltab.ui.SQWRLTab.java", "BodyUseAPI": [], "Fixed commit": "9b7f4301f33bf183dc8b61c4fa3164cc57df78a4", "Url": "https://api.github.com/repos/protegeproject/swrltab-plugin", "Date": "2016-06-17T20:15:19Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (myMAC.equals(\"\")) { myMAC = wifi.getBSSID(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7502/buggy-version/app.src.main.java.project.mobile.newworld.MySettings.java", "BodyUseAPI": [], "Fixed commit": "864114507cfd44cbc2814e0fcfc1fdf816d265ec", "Url": "https://api.github.com/repos/jdurbanek/NewWorld", "Date": "2016-04-29T20:35:50Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (keyCode == 0) { keyCode = event.getNativeEvent().getKeyCode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4141/buggy-version/src.main.java.it.lelmarir.codecatcher.widgetset.client.codecatcher.CodeCatcherConnector.java", "BodyUseAPI": [], "Fixed commit": "2f1c9a2a98aa1570e5b6fb51eec6893964b2308b", "Url": "https://api.github.com/repos/lelmarir/CodeCatcher", "Date": "2014-04-29T12:10:21Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((matchingClasses.size()) > 0) { return elementsForClasses.get(org.openflexo.antar.binding.TypeUtils.getMostSpecializedClass(matchingClasses)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5133/buggy-version/flexodesktop.GUI.flexointerfacebuilder.src.main.java.org.openflexo.fib.model.FIBBrowser.java", "BodyUseAPI": ["java.util.Hashtable<java.lang.Class, org.openflexo.fib.model.FIBBrowserElement>.get(org.openflexo.antar.binding.TypeUtils.getMostSpecializedClass(matchingClasses))", "org.openflexo.antar.binding.TypeUtils.getMostSpecializedClass(java.util.List<java.lang.Class>)"], "Fixed commit": "5bcb7fc9b72c05739731404c4b698f03740d0905", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2012-09-06T11:06:34Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (didMerge) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2373/buggy-version/Board.java", "BodyUseAPI": [], "Fixed commit": "22999b77eea2ec2ac6fe1b883f0eec1c0cec469e", "Url": "https://api.github.com/repos/abrievanaardt/cell-wars", "Date": "2015-03-19T00:40:38Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (didMerge) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2373/buggy-version/Board.java", "BodyUseAPI": [], "Fixed commit": "22999b77eea2ec2ac6fe1b883f0eec1c0cec469e", "Url": "https://api.github.com/repos/abrievanaardt/cell-wars", "Date": "2015-03-19T00:40:38Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (privateToPublic.values().contains(address.getHost())) { return address; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3404/buggy-version/hazelcast-client.src.main.java.com.hazelcast.client.spi.impl.AwsAddressTranslator.java", "BodyUseAPI": [], "Fixed commit": "cfc721c2eec80ef093d972221ce2308ab08550a2", "Url": "https://api.github.com/repos/bilalyasar/hazelcast", "Date": "2016-09-27T15:15:29Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (directory == null) { directory = catalog.getResourceLoader().findOrCreateDirectory(\"data\", workspaceName, storeName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8724/buggy-version/src.restconfig.src.main.java.org.geoserver.catalog.rest.StoreFileResource.java", "BodyUseAPI": [], "Fixed commit": "218294bcb88a8f8578bc1b5a59f0a3634115efa7", "Url": "https://api.github.com/repos/n-lagomarsini/geoserver", "Date": "2014-06-05T17:30:48Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.restlet.data.Method.equals(Method.POST)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (isPost && (storeName != null)) { org.geoserver.catalog.CoverageStoreInfo coverage = catalog.getCoverageStoreByName(storeName); if (coverage != null) { if ((workspaceName == null) || ((workspaceName != null) && (coverage.getWorkspace().getName().equalsIgnoreCase(workspaceName)))) { java.io.File dirFile = org.geotools.data.DataUtilities.urlToFile(new java.net.URL(coverage.getURL())); if (!(dirFile.exists())) { directory = catalog.getResourceLoader().findOrCreateDirectory(dirFile, \"\"); }else { directory = dirFile; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8724/buggy-version/src.restconfig.src.main.java.org.geoserver.catalog.rest.StoreFileResource.java", "BodyUseAPI": ["org.geoserver.catalog.Catalog.getCoverageStoreByName(java.lang.String)"], "Fixed commit": "218294bcb88a8f8578bc1b5a59f0a3634115efa7", "Url": "https://api.github.com/repos/n-lagomarsini/geoserver", "Date": "2014-06-05T17:30:48Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.netflix.metacat.client.module.Status.fromStatusCode(response.status())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (status == null) { return new com.netflix.metacat.common.exception.MetacatException(message, response.status(), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/810/buggy-version/metacat-client.src.main.java.com.netflix.metacat.client.module.MetacatErrorDecoder.java", "BodyUseAPI": [], "Fixed commit": "56067c3b8e3e5b81f8d4a90101af73a278ed558b", "Url": "https://api.github.com/repos/Netflix/metacat", "Date": "2016-06-01T21:20:55Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (steps != null) for (api.v1.Models.Step step : steps) jsonSteps.add(jsonify(step));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8173/buggy-version/src.main.java.api.v1.Services.StepsServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "b665983cfbac85549a2a32799a2652ed1e22d1a9", "Url": "https://api.github.com/repos/Condition17/MyRecipes-backend", "Date": "2017-05-11T19:04:53Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["peergroup.FileHandle.getChunkData(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (swap == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1173/buggy-version/src.peergroup.ThriftDataHandler.java", "BodyUseAPI": [], "Fixed commit": "47c7a1e6c4f37b1f820bbcc36db19108a879b240", "Url": "https://api.github.com/repos/smashnet/Peergroup", "Date": "2012-06-07T17:00:18Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["runtime.clueless.gui.fxml.GameManager.getInstance().isGuessCorrect(runtime.clueless.gui.fxml.RoomCard,runtime.clueless.gui.fxml.SuspectCard,runtime.clueless.gui.fxml.WeaponCard)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (didPlayerWin) { message(((\" Player \" + (currentPlayerID)) + \" has won the game... the game will now exit\")); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1492/buggy-version/Clueless.src.runtime.clueless.gui.fxml.MainGUIFXML.java", "BodyUseAPI": [], "Fixed commit": "017eb05d37821e20c51097ca9307654a4c64c53c", "Url": "https://api.github.com/repos/jmn5334/RunTime", "Date": "2017-05-03T03:30:34Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.appwidget.AppWidgetManager.getAppWidgetInfo(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((context == null) || (appInfo == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3322/buggy-version/decimal-clock-widget.src.com.lucasdnd.decimaltimeclockwidget.BaseClockProvider.java", "BodyUseAPI": [], "Fixed commit": "aa5e9eefe1516a6fe078d3b94e8babd5bd1bc64b", "Url": "https://api.github.com/repos/lucasdnd/decimal-clock-widget", "Date": "2014-12-03T20:45:46Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (percent != 0) { data.add(new javafx.scene.chart.PieChart.Data(legend, (games / total))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3697/buggy-version/src.pieChart.PieChartController.java", "BodyUseAPI": [], "Fixed commit": "f2d4c54ee89c0d3a6ba66ab510a66f425360752f", "Url": "https://api.github.com/repos/combateer3/Brawlhalla-Legend-Counter", "Date": "2016-08-22T18:58:40Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.jboss.pressgang.ccms.contentspec.utils.ContentSpecUtilities.isNodeALevel(childNode)) { nodes.add(childNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7925/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.utils.TranslationUtilities.java", "BodyUseAPI": ["java.util.Set<org.jboss.pressgang.ccms.wrapper.CSNodeWrapper>.add(org.jboss.pressgang.ccms.wrapper.CSNodeWrapper)"], "Fixed commit": "a2df4b0c030f168a7575fb7153547befc9bc4e0f", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSContentSpec", "Date": "2013-08-21T05:00:34Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.jboss.pressgang.ccms.contentspec.utils.ContentSpecUtilities.isNodeALevel(childNode)) { nodes.add(childNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7925/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.utils.TranslationUtilities.java", "BodyUseAPI": ["java.util.Set<org.jboss.pressgang.ccms.wrapper.CSNodeWrapper>.add(org.jboss.pressgang.ccms.wrapper.CSNodeWrapper)"], "Fixed commit": "a2df4b0c030f168a7575fb7153547befc9bc4e0f", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSContentSpec", "Date": "2013-08-21T05:00:34Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openqa.selenium.TakesScreenshot.getScreenshotAs(OutputType.FILE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(tmp.renameTo(target.getAbsoluteFile()))) { jp.vmi.selenium.selenese.Runner.log.warn((\"fail to rename file to :\" + (target.getAbsolutePath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3446/buggy-version/src.main.java.jp.vmi.selenium.selenese.Runner.java", "BodyUseAPI": ["java.lang.System.Logger.warn(java.lang.String)", "java.io.File.getAbsolutePath()"], "Fixed commit": "28b6e9d5c825aa6eda5eb0f2312bde08c9be4168", "Url": "https://api.github.com/repos/vmi/selenese-runner-java", "Date": "2012-07-19T14:55:12Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openqa.selenium.TakesScreenshot.getScreenshotAs(OutputType.FILE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(tmp.renameTo(new java.io.File(filename)))) { jp.vmi.selenium.selenese.command.CaptureEntirePageScreenshot.log.warn((\"fail to rename file to:\" + (filename))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3446/buggy-version/src.main.java.jp.vmi.selenium.selenese.command.CaptureEntirePageScreenshot.java", "BodyUseAPI": [], "Fixed commit": "28b6e9d5c825aa6eda5eb0f2312bde08c9be4168", "Url": "https://api.github.com/repos/vmi/selenese-runner-java", "Date": "2012-07-19T14:55:12Z"},
{"Line": "=>698", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((srcFolder != null) && (srcFolder.exists())) { final com.liferay.ide.core.util.PropertiesUtil.ResourceNodeInfo resourceNodeInfo = com.liferay.ide.core.util.PropertiesUtil.getResourceNodeInfo(portletXml); for (java.lang.String resourceBundleValue : resourceNodeInfo.getResourceBundlePatterns()) { final org.eclipse.core.resources.IFile[] resourceBundleFiles = com.liferay.ide.core.util.PropertiesUtil.visitPropertiesFiles(srcFolder, resourceBundleValue); if ((resourceBundleFiles != null) && ((resourceBundleFiles.length) > 0)) { retval.addAll(java.util.Arrays.asList(resourceBundleFiles)); } } for (final java.lang.String supportedLocaleValue : resourceNodeInfo.getSupportedLocalePatterns()) { final org.eclipse.core.resources.IFile[] supportedLocaleFiles = com.liferay.ide.core.util.PropertiesUtil.visitPropertiesFiles(srcFolder, supportedLocaleValue); if ((supportedLocaleFiles != null) && ((supportedLocaleFiles.length) > 0)) { retval.addAll(java.util.Arrays.asList(supportedLocaleFiles)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/365/buggy-version/tools.plugins.com.liferay.ide.core.src.com.liferay.ide.core.util.PropertiesUtil.java", "BodyUseAPI": ["com.liferay.ide.core.util.PropertiesUtil.visitPropertiesFiles(org.eclipse.core.resources.IFolder,java.lang.String)", "com.liferay.ide.core.util.PropertiesUtil.visitPropertiesFiles(org.eclipse.core.resources.IFolder,java.lang.String)"], "Fixed commit": "df080a01fc09ed94a8a9560c3e4bf28b52e43c48", "Url": "https://api.github.com/repos/yanan/liferay-ide", "Date": "2017-01-20T11:01:52Z"},
{"Line": "=>811", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.nasa.jpl.view_repo.db.PostgresHelper.execQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rs.next()) { return rs.getInt(1); }else { rs = execQuery(java.lang.String.format(\"SELECT parentcommit FROM refs WHERE refId = '%s'\", workspaceId)); if (rs.next()) { return rs.getInt(1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1108/buggy-version/mms-ent.repo-amp.src.main.java.gov.nasa.jpl.view_repo.db.PostgresHelper.java", "BodyUseAPI": ["java.sql.ResultSet.getInt(int)"], "Fixed commit": "5049394c34fe5b675087ead6d48e884e331ee726", "Url": "https://api.github.com/repos/Open-MBEE/mms", "Date": "2017-07-21T00:43:41Z"},
{"Line": "=>833", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.nasa.jpl.view_repo.db.PostgresHelper.execQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rs.next()) { return rs.getString(1); }else { rs = this.conn.prepareStatement(java.lang.String.format(\"select commits.elasticid from refs left join commits on refs.parentcommit = commits.id where refs.refid = '%s'\", workspaceId)).executeQuery(); if (rs.next()) { return rs.getString(1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1108/buggy-version/mms-ent.repo-amp.src.main.java.gov.nasa.jpl.view_repo.db.PostgresHelper.java", "BodyUseAPI": ["java.sql.ResultSet.getString(int)"], "Fixed commit": "5049394c34fe5b675087ead6d48e884e331ee726", "Url": "https://api.github.com/repos/Open-MBEE/mms", "Date": "2017-07-21T00:43:41Z"},
{"Line": "=>719", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (_network)) { _network.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1688/buggy-version/modules.andes-core.client.src.main.java.org.wso2.andes.client.protocol.AMQProtocolHandler.java", "BodyUseAPI": [], "Fixed commit": "123d7c6bd10b7fd21e0b9bfbc01384805f5f0002", "Url": "https://api.github.com/repos/pumudu88/andes", "Date": "2016-04-26T09:31:38Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIsCustomLocation) { mCustomLocationHolderView.setVisibility((visibility ? android.view.View.VISIBLE : android.view.View.GONE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8305/buggy-version/app.src.main.java.com.globalfriends.com.aroundme.ui.Launcher.java", "BodyUseAPI": [], "Fixed commit": "c096df5e559d14d2c2a45446e12e98f295ade297", "Url": "https://api.github.com/repos/GlobalFriends/AroundMe", "Date": "2016-01-09T07:01:42Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang.StringUtils.isEmpty(codeSigningIdentity))) { packageCommandLine.add(\"--sign\"); packageCommandLine.add(codeSigningIdentity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5183/buggy-version/src.main.java.au.com.rayh.XCodeBuilder.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "daf082cadbf3afaf184061a6be1013d603cba834", "Url": "https://api.github.com/repos/dlvenable/xcode-plugin", "Date": "2012-11-25T21:04:55Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t instanceof java.lang.InterruptedException) java.lang.Thread.currentThread().interrupt(); else if (t instanceof java.lang.ThreadDeath) throw ((java.lang.ThreadDeath) (t));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6226/buggy-version/src.org.jitsi.videobridge.IceUdpTransportManager.java", "BodyUseAPI": [], "Fixed commit": "0515347fed15862e1b4f61a9291ce5c1744b6bba", "Url": "https://api.github.com/repos/hpi-m1-2014/jitsi-videobridge", "Date": "2014-05-07T11:25:14Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ShuttleConstants.OFF_DUTY.equals(ticketResult.getRouteType())) { routeNumber.setTextColor(Color.BLACK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/495/buggy-version/ShuttleBus.app.src.main.java.com.example.fengge.shuttlebus.TicketActivity.java", "BodyUseAPI": [], "Fixed commit": "99f2b6084e605184b4be0f5ff6072d45ee5126e8", "Url": "https://api.github.com/repos/GerrardFeng/shuttleBus", "Date": "2016-01-15T01:49:24Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.outsidehacks.ohana.discout.EventData>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (eventData != null) { eventDatasForQueue.add(eventData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/9115/buggy-version/app.src.main.java.com.outsidehacks.ohana.discout.MainActivity.java", "BodyUseAPI": ["java.util.List<com.outsidehacks.ohana.discout.EventData>.add(com.outsidehacks.ohana.discout.EventData)"], "Fixed commit": "616bebb341acb4a0090d71fce8cbdb2607d25e49", "Url": "https://api.github.com/repos/nareddyt/DiscOut", "Date": "2016-07-24T18:09:11Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (artists != null) { for (java.lang.String artist : artists) { com.outsidehacks.ohana.discout.EventData eventData = eventArtistMap.get(artist); if (eventData != null) { eventDatasForQueue.add(eventData); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/9115/buggy-version/app.src.main.java.com.outsidehacks.ohana.discout.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "616bebb341acb4a0090d71fce8cbdb2607d25e49", "Url": "https://api.github.com/repos/nareddyt/DiscOut", "Date": "2016-07-24T18:09:11Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((intent.getAction()) == null) { android.util.Log.d(\"MainActivity\", \"intent null\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4276/buggy-version/app.src.main.java.com.ywca.pentref.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "630443da07477f69fc6733ea65ecf74afab385f4", "Url": "https://api.github.com/repos/Milwyr/Pentref", "Date": "2017-04-07T16:14:42Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.ips.deletePriceStep(min_value, max_value))) throw new java.rmi.RemoteException(\"PriceStep could not be deleted. False Range Definitions.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/9122/buggy-version/src.BillingServer.BillingServerSecureImpl.java", "BodyUseAPI": [], "Fixed commit": "c7b883ff4b69de1d1f6a2f041bebd1fbc2f913f2", "Url": "https://api.github.com/repos/delta458/DSLAB2", "Date": "2012-11-27T21:01:04Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e.isTank) { map.deleteElement(bullet.getLocation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2195/buggy-version/src.engine.Engine.java", "BodyUseAPI": [], "Fixed commit": "6ce8ecd503ead242ed6abdaf3c5ba90a2c606a2b", "Url": "https://api.github.com/repos/faradaytrs/Tanks", "Date": "2014-11-28T21:12:16Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.imageValidator.isImageValid(multipartFile)) { movie.setImage(multipartFile.getBytes()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/257/buggy-version/src.main.java.net.toracode.moviedb.controllers.MovieController.java", "BodyUseAPI": ["org.springframework.web.multipart.MultipartFile.getBytes()", "net.toracode.moviedb.entities.Movie.setImage(multipartFile.getBytes())"], "Fixed commit": "2897685b6435837182e805bda08b86b676d4a50b", "Url": "https://api.github.com/repos/sayemkcn/md12101046", "Date": "2016-11-06T17:37:46Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((items.length) == 0) return new java.util.ArrayList<Models.MealItem>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4978/buggy-version/src.MealPlanner.MealPlanner.java", "BodyUseAPI": [], "Fixed commit": "b8245f584d0864858e53e47febcbe046e801d305", "Url": "https://api.github.com/repos/wjbigari/MealPlanner.Backend", "Date": "2017-12-11T16:39:07Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getAction()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"user.check.callservice\".equals(action)) { android.os.UserManager userManager = ((android.os.UserManager) (context.getSystemService(Context.USER_SERVICE))); if (userManager.isSystemUser()) { android.content.Intent callIntent = new android.content.Intent(); callIntent.setClassName(\"com.agold.sos\", \"com.agold.sos.services.CallService\"); context.startService(callIntent); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/62/buggy-version/app.src.main.java.com.agold.sos.PhoneWindowManagerReceiver.java", "BodyUseAPI": [], "Fixed commit": "f1c6c4fd9177c776ee5316d6f42fbab7be433791", "Url": "https://api.github.com/repos/iColdplay/com.agold.sos", "Date": "2017-10-30T08:34:28Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.silverpeas.util.StringUtil.isDefined(this.id)) { return java.lang.Integer.parseInt(this.id); }else { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2029/buggy-version/lib-core.src.main.java.com.stratelia.webactiv.beans.admin.SpaceInst.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "c5179c11c6508e3da38fead135333c7be5fb9925", "Url": "https://api.github.com/repos/SilverTeamWork/Silverpeas-Core", "Date": "2014-12-09T10:51:02Z"},
{"Line": "=>487", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (childDocs == 0) { starChild.setStartDocumentId(startOffset); starChild.setEndDocumentId((startOffset + rowsAdded)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8996/buggy-version/pinot-core.src.main.java.com.linkedin.pinot.core.startree.OffHeapStarTreeBuilder.java", "BodyUseAPI": [], "Fixed commit": "ab496e6d85399d3f7f2726d62869b1f014c7fdb3", "Url": "https://api.github.com/repos/linkedin/pinot", "Date": "2016-03-16T21:57:40Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (childDocs == 0) { child.setStartDocumentId(range.getLeft()); child.setEndDocumentId(range.getRight()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8996/buggy-version/pinot-core.src.main.java.com.linkedin.pinot.core.startree.OffHeapStarTreeBuilder.java", "BodyUseAPI": [], "Fixed commit": "ab496e6d85399d3f7f2726d62869b1f014c7fdb3", "Url": "https://api.github.com/repos/linkedin/pinot", "Date": "2016-03-16T21:57:40Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.solr.request.sparse.SparseKeys.useOverallHeuristic(int,searcher.maxDoc())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (heuristic && (sparseKeys.heuristicFineCount)) { counts.setContentKey(SparseCounterPool.NEEDS_CLEANING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4266/buggy-version/solr.core.src.java.org.apache.solr.request.sparse.SparseDocValuesFacets.java", "BodyUseAPI": [], "Fixed commit": "54c962c4a301bee93fd4032e68152780ed253e28", "Url": "https://api.github.com/repos/tokee/lucene-solr", "Date": "2015-06-15T09:02:46Z"},
{"Line": "=>1930", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.defaultDialog) != null) && ((this.defaultDialog.getState()) == null)) { this.defaultDialog.setState(SIPDialog.TERMINATED_STATE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/741/buggy-version/src.gov.nist.javax.sip.stack.SIPClientTransactionImpl.java", "BodyUseAPI": ["gov.nist.javax.sip.stack.SIPDialog.setState(SIPDialog.TERMINATED_STATE)"], "Fixed commit": "9c667b9ec39520965fcaefb4e4483afd5f681c1d", "Url": "https://api.github.com/repos/vladimirralev/jsip", "Date": "2016-09-25T18:55:46Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name.isEmpty()) || (name.contains(\"/\"))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6609/buggy-version/ceri-ci.src.main.java.ceri.ci.common.ResourceMap.java", "BodyUseAPI": [], "Fixed commit": "1cfde4282562c46cc628b5f1c0a2e082ff5724d5", "Url": "https://api.github.com/repos/cerijerome/ceri", "Date": "2014-05-20T02:00:25Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rs.next()) { permanent = rs.getBoolean(\"permanent\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4640/buggy-version/src.de.lordvader.Punisher.Util.MySql.java", "BodyUseAPI": ["java.sql.ResultSet.getBoolean(java.lang.String)"], "Fixed commit": "92c412f0eaf37757b7342acd85b467263dc23656", "Url": "https://api.github.com/repos/lordvaderde/Punisher", "Date": "2016-04-12T15:14:49Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rs.next()) { return rs.getLong(\"expirationDate\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4640/buggy-version/src.de.lordvader.Punisher.Util.MySql.java", "BodyUseAPI": ["java.sql.ResultSet.getLong(java.lang.String)"], "Fixed commit": "92c412f0eaf37757b7342acd85b467263dc23656", "Url": "https://api.github.com/repos/lordvaderde/Punisher", "Date": "2016-04-12T15:14:49Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rs.next()) { permanent = rs.getBoolean(\"permanent\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4640/buggy-version/src.de.lordvader.Punisher.Util.MySql.java", "BodyUseAPI": ["java.sql.ResultSet.getBoolean(java.lang.String)"], "Fixed commit": "92c412f0eaf37757b7342acd85b467263dc23656", "Url": "https://api.github.com/repos/lordvaderde/Punisher", "Date": "2016-04-12T15:14:49Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rs.next()) { return rs.getLong(\"expirationDate\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4640/buggy-version/src.de.lordvader.Punisher.Util.MySql.java", "BodyUseAPI": ["java.sql.ResultSet.getLong(java.lang.String)"], "Fixed commit": "92c412f0eaf37757b7342acd85b467263dc23656", "Url": "https://api.github.com/repos/lordvaderde/Punisher", "Date": "2016-04-12T15:14:49Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.erudika.para.persistence.DAO.readAll(java.lang.String,java.util.ArrayList<java.lang.String>,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(fromDB.isEmpty())) { results.addAll(fromDB.values()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/157/buggy-version/para.src.main.java.com.erudika.para.search.ElasticSearch.java", "BodyUseAPI": ["java.util.ArrayList<P>.addAll(java.util.Collection<P>)", "java.util.Map<java.lang.String, P>.values()"], "Fixed commit": "4d46447a9a6793c1ba2c3d7fc3ae4af3bad60d0c", "Url": "https://api.github.com/repos/Erudika/para", "Date": "2015-03-23T17:37:50Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(imageUrl.startsWith(\"http\"))) { imageUrl = com.psddev.dari.util.JspUtils.getAbsoluteUrl(request, imageUrl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5620/buggy-version/util.src.main.java.com.psddev.dari.util.JavaImageServlet.java", "BodyUseAPI": ["com.psddev.dari.util.JspUtils.getAbsoluteUrl(javax.servlet.http.HttpServletRequest,java.lang.String)"], "Fixed commit": "5ced6ea7df42b0d5925e16f40de35df073b186a8", "Url": "https://api.github.com/repos/perfectsense/dari", "Date": "2015-06-09T21:16:38Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fileExists) { storage.Storage.readTasksFromFile(); }else { storage.Storage.writeTasksToFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8787/buggy-version/src.logic.Logic.java", "BodyUseAPI": [], "Fixed commit": "d62116a3f080fed40216c62e63c83504183cb5a4", "Url": "https://api.github.com/repos/cs2103jan2016-f14-1j/main", "Date": "2016-04-01T05:09:35Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT)) && (BuildConfig.DEBUG)) { android.webkit.WebView.setWebContentsDebuggingEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4999/buggy-version/app.src.main.java.com.example.star.zhihudaily.NewsFragment.java", "BodyUseAPI": [], "Fixed commit": "351f45f3ee0cfb586073b630de1481178f0ca9ed", "Url": "https://api.github.com/repos/xingstarx/ZhiHuDaily", "Date": "2016-05-06T16:21:49Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.springframework.transaction.support.TransactionSynchronizationManager.isSynchronizationActive()) { sessionHolder.setSynchronizedWithTransaction(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8914/buggy-version/grails-datastore-gorm-hibernate5.src.main.groovy.org.grails.orm.hibernate.GrailsHibernateTemplate.java", "BodyUseAPI": [], "Fixed commit": "38262ad11544648037d2f1b1ec3b9fa585f3c329", "Url": "https://api.github.com/repos/grails/gorm-hibernate5", "Date": "2016-08-26T10:16:58Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.comze_instancelabs.horseracingplus.Main.getKeyByValue(main.arenap,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (last.isInsideVehicle()) { last.getVehicle().remove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8141/buggy-version/src.com.comze_instancelabs.horseracingplus.ArenaSystem.java", "BodyUseAPI": ["org.bukkit.entity.Player.getVehicle()", "last.getVehicle().remove()"], "Fixed commit": "21547dec01846f6685bea7adf9a63770c413f588", "Url": "https://api.github.com/repos/instance01/HorseRacingPlus", "Date": "2013-12-01T14:11:08Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.worldObj.isRemote)) invPlayer.consumeInventoryItem(invPlayer.getCurrentItem().getItem());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4483/buggy-version/src.Common.com.bioxx.tfc.Containers.ContainerSpecialCrafting.java", "BodyUseAPI": [], "Fixed commit": "7c027b76984ff266a3a8afafee9b5fd06425b389", "Url": "https://api.github.com/repos/CHeuberger/TFCraft", "Date": "2015-06-20T04:03:21Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.worldObj.isRemote)) invPlayer.decrStackSize(invPlayer.currentItem, 5);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4483/buggy-version/src.Common.com.bioxx.tfc.Containers.ContainerSpecialCrafting.java", "BodyUseAPI": [], "Fixed commit": "7c027b76984ff266a3a8afafee9b5fd06425b389", "Url": "https://api.github.com/repos/CHeuberger/TFCraft", "Date": "2015-06-20T04:03:21Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resultField.getText().length()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3331/buggy-version/app.src.main.java.petersonapps.vs.lessons.lesson2hw.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ff6b92db9e3cfb5b76ec083a6c3e1a4e08eccbd0", "Url": "https://api.github.com/repos/vov4ik-bratik/calculatorAndroid", "Date": "2017-03-27T11:06:43Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["response.get(position).getPhotos()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((photos != null) && ((photos.length) > 0)) com.squareup.picasso.Picasso.with(holder.nameTv.getContext()).load((((com.pollux.sherpa.adapter.PlaceAdapter.PHOTO_BASE_URL) + \"&photoreference=\") + (photos[0].getPhotoReference()))).into(holder.placeIv);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/138/buggy-version/app.src.main.java.com.pollux.sherpa.adapter.PlaceAdapter.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(holder.nameTv.getContext()).load((((com.pollux.sherpa.adapter.PlaceAdapter.PHOTO_BASE_URL) + \"&photoreference=\") + (photos[0].getPhotoReference()))).into(android.widget.ImageView)", "photos[0].getPhotoReference()", "com.squareup.picasso.Picasso.with(holder.nameTv.getContext()).load((((com.pollux.sherpa.adapter.PlaceAdapter.PHOTO_BASE_URL) + \"&photoreference=\") + (photos[0].getPhotoReference())))"], "Fixed commit": "1c664f172e9419b471913d589518826357c49afe", "Url": "https://api.github.com/repos/pollux-/Sherpa", "Date": "2016-02-07T07:21:42Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.xmodel.Xlate.get(org.xmodel.IModelObject,java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (spec != null) return org.xmodel.xpath.function.custom.ResultType.valueOf(spec.toUpperCase());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2406/buggy-version/src.org.xmodel.xpath.function.custom.CallFunction.java", "BodyUseAPI": ["org.xmodel.xpath.function.custom.ResultType.valueOf(java.lang.String)", "java.lang.String.toUpperCase()"], "Fixed commit": "ddbca0eacba164d9f04400d2295f6bb1ed875928", "Url": "https://api.github.com/repos/bdunnagan/XModel", "Date": "2013-05-22T20:53:42Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(userEmailList.contains(value.email))) userEmailList.add(value.email);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6808/buggy-version/MapBook.app.src.main.java.com.mapbook.mapbook.Users.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(value.email)"], "Fixed commit": "bef98725b251106c5b799ae8353238c9ade04a2c", "Url": "https://api.github.com/repos/g090617/CSM117-Project", "Date": "2017-12-01T02:15:11Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ApplicationLoader.applicationContext.getSharedPreferences(java.lang.String,Activity.MODE_PRIVATE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (preferences.getBoolean(\"enable_sms\", false)) { }else if (preferences.getBoolean(\"enable_email\", false)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2921/buggy-version/iMissAndroid.src.main.java.info.hugozhu.imiss.SMSBroadcastReceiver.java", "BodyUseAPI": ["android.content.SharedPreferences.getBoolean(java.lang.String,boolean)"], "Fixed commit": "8a2d2d78ed7726990410ebd6da695e165c791ee0", "Url": "https://api.github.com/repos/hugozhu/iMiss", "Date": "2014-06-17T07:05:33Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.dsFlag) java.lang.System.out.println((\"no dataSource in Transfer\" + (eClass.getName())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2135/buggy-version/src.ids.minishark.Transfer.java", "BodyUseAPI": [], "Fixed commit": "c1f2f8e21d1d9aa9d19477c16d3c5608251360d5", "Url": "https://api.github.com/repos/sharklite/MiniShark", "Date": "2017-04-13T05:35:51Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) { mFingerprintManager = ((android.hardware.fingerprint.FingerprintManager) (getSystemService(com.akshay.customlockscreen.activity.FINGERPRINT_SERVICE))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7489/buggy-version/customlockscreen.src.main.java.com.akshay.customlockscreen.activity.EnterPinActivity.java", "BodyUseAPI": [], "Fixed commit": "8fcb0091d1a737dc1287a8013025ba235fdc5d04", "Url": "https://api.github.com/repos/AkshayPathak/lockscreen", "Date": "2017-12-29T18:41:22Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentPlayers.contains(myPlayer)) { if ((this.confirm) == 1) { if ((selectedCard) >= 0) { toPlayCard(myPlayer.getCards().get(selectedCard)); }else { pass(myPlayer); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1180/buggy-version/app.src.main.java.com.trifice.theunderworldsiege.MainModel.java", "BodyUseAPI": ["myPlayer.getCards().get(int)", "com.trifice.theunderworldsiege.Player.getCards()", "com.trifice.theunderworldsiege.MainModel.pass(com.trifice.theunderworldsiege.Player)", "com.trifice.theunderworldsiege.MainModel.toPlayCard(myPlayer.getCards().get(selectedCard))"], "Fixed commit": "6feca42f5381ad4f4d6a6326185fee0e687980f6", "Url": "https://api.github.com/repos/chengenzhao/TheUnderworldSiege", "Date": "2015-04-06T06:16:44Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tracking_listModel.getSize()) > 1) { for (int i = 0; i < (tracking_listModel.getSize()); i++) { sb.append(tracking_listModel.get(i).toString()); sb.append(\" \"); } }else { sb.append(tracking_listModel.get(0).toString()); sb.append(\" \"); sb.append(tracking_listModel.get(0).toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8478/buggy-version/src.main.java.com.gguo.trackingguru.ComponentControls.java", "BodyUseAPI": ["javax.swing.DefaultListModel.get(int)", "java.lang.Object.toString()", "javax.swing.DefaultListModel.getSize()", "java.lang.Object.toString()", "javax.swing.DefaultListModel.get(int)", "java.lang.StringBuilder.append(java.lang.String)", "javax.swing.DefaultListModel.get(int)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "e98e3d73842a1e040d6f9f494b45d2207eafb55f", "Url": "https://api.github.com/repos/gguo5/trackingguru", "Date": "2015-03-07T05:31:51Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((otherMethod.id) < (this.id)) { compare = -1; }else if ((otherMethod.id) > (this.id)) { compare = 1; }else { compare = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5374/buggy-version/src.br.usp.each.saeg.road2fault.extractor.model.XmlMethod.java", "BodyUseAPI": [], "Fixed commit": "a02e4e2c0bce760535b9043ca632abf0049fd4ea", "Url": "https://api.github.com/repos/saeg/road2fault", "Date": "2017-09-08T15:17:18Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isOver()) this.state = new com.googlecode.prmf.Postgame(inputThread);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6229/buggy-version/src.com.googlecode.prmf.Game.java", "BodyUseAPI": [], "Fixed commit": "b852c10515a522ca16da7eb3f8347888c792ff78", "Url": "https://api.github.com/repos/miorel/prmf", "Date": "2010-04-13T01:19:56Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((contact.getId()) == null) { response.getWriter().println(\"cannot find this contact\"); }else { request.setAttribute(\"contact\", contact); getServletContext().getRequestDispatcher(\"/WEB-INF/jsp/contact/show.jsp\").forward(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1361/buggy-version/src.main.java.com.bodejidi.ContactServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,com.bodejidi.Contact)"], "Fixed commit": "5562b5bd0a5bdc0ef197f6f4d3733db92dad348f", "Url": "https://api.github.com/repos/lidgik/practice", "Date": "2014-07-25T15:45:06Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((str.length()) > 1) { if (((str.charAt(0)) == '\\\"') && ((str.charAt(((str.length()) - 1))) == '\\\"')) { int count = 0; for (int i = 0; i < (str.length()); i++) { if ((str.charAt(i)) == '\\\"') { count++; } } if (count == 2) { return str.substring(1, ((str.length()) - 1)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4164/buggy-version/src.todo.library.NLP.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.lang.String.length()", "java.lang.String.charAt(int)", "java.lang.String.length()", "java.lang.String.charAt(int)", "java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "8e45c221bd1c8a50791e52dd03dc6bb51c50aced", "Url": "https://api.github.com/repos/cs2103aug2014-t15-2j/todo", "Date": "2014-09-24T03:23:09Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["in.celest.xash3d.dedicated.CommandParser.parseSingleParameter(DedicatedActivity.argsString,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (game.equals(\"\")) game = \"valve\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/985/buggy-version/src.in.celest.xash3d.dedicated.ListActivity.java", "BodyUseAPI": [], "Fixed commit": "8c86ca7adcea94dd39f1121a5ede64d9c2adb8b9", "Url": "https://api.github.com/repos/GregTheMadMonk/xashds-android", "Date": "2017-03-19T11:39:04Z"},
{"Line": "=>694", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((project.isRemote()) && (!(com.nomagic.magicdraw.esi.EsiUtils.getCurrentBranch(project.getPrimaryProject()).getName().equals(\"trunk\")))) { refId = com.nomagic.magicdraw.esi.EsiUtils.getCurrentBranch(project.getPrimaryProject()).getID().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5601/buggy-version/src.main.java.gov.nasa.jpl.mbee.mdk.mms.MMSUtils.java", "BodyUseAPI": ["com.nomagic.magicdraw.esi.EsiUtils.getCurrentBranch(project.getPrimaryProject())", "com.nomagic.magicdraw.esi.EsiUtils.getCurrentBranch(project.getPrimaryProject()).getID().toString()", "com.nomagic.magicdraw.esi.EsiUtils.getCurrentBranch(project.getPrimaryProject()).getID()", "com.nomagic.magicdraw.core.Project.getPrimaryProject()"], "Fixed commit": "cfd91737e59b3f28c4f6d4c6508543832b9bdc7e", "Url": "https://api.github.com/repos/Open-MBEE/mdk", "Date": "2017-06-05T14:28:14Z"},
{"Line": "=>482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (block_channel.containsKey(block)) { block_channel.remove(block); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3948/buggy-version/WirelessRedstone.src.za.net.quantumsicarius.wirelessredstone.WirelessRedstone.java", "BodyUseAPI": ["java.util.HashMap<org.getspout.spoutapi.block.SpoutBlock, java.lang.Integer>.remove(org.getspout.spoutapi.block.SpoutBlock)"], "Fixed commit": "8253db6b11d1b699d1621e228861f64c93cf089b", "Url": "https://api.github.com/repos/Quantum-Sicarius-za-net/Wireless-Redstone", "Date": "2012-06-12T19:01:32Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((block.isEmpty()) | (block.isLiquid())) | ((block.getType()) == (org.bukkit.Material.AIR))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3948/buggy-version/WirelessRedstone.src.za.net.quantumsicarius.wirelessredstone.WirelessRedstone.java", "BodyUseAPI": [], "Fixed commit": "8253db6b11d1b699d1621e228861f64c93cf089b", "Url": "https://api.github.com/repos/Quantum-Sicarius-za-net/Wireless-Redstone", "Date": "2012-06-12T19:01:32Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((CURRENT_ACTION) == (com.example.crist.mycalculatorapp.MainActivity.DIVISION)) { if ((val2) == 0) val1 = java.lang.Double.NaN; else val1 /= val2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4074/buggy-version/app.src.main.java.com.example.crist.mycalculatorapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "faf4e42f196eeb73e41fa0c08cb5d6d2a90f213d", "Url": "https://api.github.com/repos/chrisnab/MyCalculatorApp", "Date": "2017-03-31T19:08:34Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((textField.getText().toString().length()) != 0) && (java.lang.Character.isDigit(textField.getText().charAt(0)))) compute();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4074/buggy-version/app.src.main.java.com.example.crist.mycalculatorapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "faf4e42f196eeb73e41fa0c08cb5d6d2a90f213d", "Url": "https://api.github.com/repos/chrisnab/MyCalculatorApp", "Date": "2017-03-31T19:08:34Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.Integer, ca.nicho.foundation.entity.Entity>.get(packet.id)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((ent instanceof ca.nicho.foundation.entity.EntityPlayer) && ((ent.owner) == (ca.nicho.foundation.Game.ownerID)))) { ent.locX = packet.x; ent.locY = packet.y; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2809/buggy-version/GameFoundation.src.ca.nicho.foundation.world.World.java", "BodyUseAPI": [], "Fixed commit": "c1688f0bbcb765217b57a41390f355d110a0cc9c", "Url": "https://api.github.com/repos/nicho96/GameDesign", "Date": "2016-11-18T15:28:56Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jbpm.console.ng.gc.client.util.DataGridUtils.getIdRowSelected(com.github.gwtbootstrap.client.ui.DataGrid<org.jbpm.console.ng.ht.model.TaskSummary>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (idRowSelected != null) { idSelected = java.lang.Long.valueOf(idRowSelected); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5687/buggy-version/jbpm-console-ng-human-tasks.jbpm-console-ng-human-tasks-client.src.main.java.org.jbpm.console.ng.ht.client.editors.taskslist.TasksListPresenter.java", "BodyUseAPI": ["java.lang.Long.valueOf(java.lang.String)"], "Fixed commit": "dd975c5a393b71cfac3fa97ff7ac062322df3e30", "Url": "https://api.github.com/repos/nicolasegomez/jbpm-console-ng", "Date": "2014-06-06T15:11:29Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (toReturn.endsWith(\",\")) { toReturn = toReturn.substring(0, ((toReturn.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/555/buggy-version/src.main.java.util.json.JSONArray.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "b536a224be2a88d6321245bcce07b8e259b3cacc", "Url": "https://api.github.com/repos/nikvaessen/Sphinx4-HTTP-server", "Date": "2016-07-27T07:50:00Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (toReturn.endsWith(\",\")) { toReturn = toReturn.substring(0, ((toReturn.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/555/buggy-version/src.main.java.util.json.JSONObject.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "b536a224be2a88d6321245bcce07b8e259b3cacc", "Url": "https://api.github.com/repos/nikvaessen/Sphinx4-HTTP-server", "Date": "2016-07-27T07:50:00Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ctx.ansi.isEnabled()) java.lang.System.out.print(ctx.ansi);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5649/buggy-version/compilers.framework.src.main.java.org.thingml.compilers.checker.Checker.java", "BodyUseAPI": ["java.io.PrintStream.print(ctx.ansi)"], "Fixed commit": "cb517cafa669a9ed8b99b5c87e10dabae80e769e", "Url": "https://api.github.com/repos/TelluIoT/ThingML", "Date": "2017-01-05T19:08:26Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(decoratedParameter.isReadOnly())) { if (org.apache.commons.lang.StringUtils.equals(undecoratedParameter.getName(), decoratedParameter.getName())) { decoratedParameter.setValue(undecoratedParameter.getValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8240/buggy-version/src.transport.payload-codec.src.main.java.org.hbird.transport.payloadcodec.InMemoryPayloadCodec.java", "BodyUseAPI": ["org.apache.commons.lang.StringUtils.equals(undecoratedParameter.getName(),decoratedParameter.getName())", "org.hbird.core.commons.tmtc.Parameter<java.lang.Long>.getName()", "org.hbird.core.commons.tmtc.Parameter<java.lang.Long>.setValue(undecoratedParameter.getValue())"], "Fixed commit": "ac60dee0563bc9ef646cc05d4ae1fe0712c1da87", "Url": "https://api.github.com/repos/JohannesKlug/hbird", "Date": "2012-11-21T11:38:27Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hbird.core.commons.tmtc.TmTcGroup.getStringParameters()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (stringParameters != null) { for (final org.hbird.core.commons.tmtc.Parameter<java.lang.String> undecoratedParameter : stringParameters.values()) { for (final org.hbird.core.commons.tmtc.Parameter<java.lang.String> decoratedParameter : decoratedTmTcGroup.getStringParameters().values()) { if (!(decoratedParameter.isReadOnly())) { if (org.apache.commons.lang.StringUtils.equals(undecoratedParameter.getName(), decoratedParameter.getName())) { decoratedParameter.setValue(undecoratedParameter.getValue()); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8240/buggy-version/src.transport.payload-codec.src.main.java.org.hbird.transport.payloadcodec.InMemoryPayloadCodec.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.hbird.core.commons.tmtc.Parameter<java.lang.String>>.values()"], "Fixed commit": "ac60dee0563bc9ef646cc05d4ae1fe0712c1da87", "Url": "https://api.github.com/repos/JohannesKlug/hbird", "Date": "2012-11-21T11:38:27Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(decoratedParameter.isReadOnly())) { if (org.apache.commons.lang.StringUtils.equals(undecoratedParameter.getName(), decoratedParameter.getName())) { decoratedParameter.setValue(undecoratedParameter.getValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8240/buggy-version/src.transport.payload-codec.src.main.java.org.hbird.transport.payloadcodec.InMemoryPayloadCodec.java", "BodyUseAPI": ["org.hbird.core.commons.tmtc.Parameter<java.lang.Integer>.getName()", "org.hbird.core.commons.tmtc.Parameter<java.lang.Integer>.setValue(undecoratedParameter.getValue())", "org.apache.commons.lang.StringUtils.equals(undecoratedParameter.getName(),decoratedParameter.getName())"], "Fixed commit": "ac60dee0563bc9ef646cc05d4ae1fe0712c1da87", "Url": "https://api.github.com/repos/JohannesKlug/hbird", "Date": "2012-11-21T11:38:27Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getDatabase().getTransaction().isActive()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!txAlreadyBegun) graph.commit();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1716/buggy-version/graphdb.src.main.java.com.orientechnologies.orient.graph.sql.OCommandExecutorSQLMoveVertex.java", "BodyUseAPI": [], "Fixed commit": "b517d96144c8a6a9038b7b05781564582d92f2f2", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-10-01T07:16:23Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(remainingWitnesses.isEmpty())) { org.neo4j.graphdb.Relationship addedRelationship = originNode.createRelationshipTo(targetNode, ERelations.NORMAL); addedRelationship.setProperty(\"lexemes\", remainingWitnesses.toArray(new java.lang.String[remainingWitnesses.size()])); if (stayingWitnesses.isEmpty()) { deletedRelationships.add(new net.stemmaweb.model.RelationshipModel(originalRel)); originalRel.delete(); }else originalRel.setProperty(\"lexemes\", stayingWitnesses.toArray(new java.lang.String[stayingWitnesses.size()])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6086/buggy-version/stemmarest.src.main.java.net.stemmaweb.rest.Reading.java", "BodyUseAPI": ["org.neo4j.graphdb.Relationship.setProperty(java.lang.String,java.lang.String[])", "java.util.ArrayList<java.lang.String>.size()", "java.util.ArrayList<java.lang.String>.toArray(java.lang.String[])"], "Fixed commit": "5cc94293c3883d4cfaccfa19eee015f1aa119d1c", "Url": "https://api.github.com/repos/tohotforice/PSE2_DH", "Date": "2015-05-13T22:43:00Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((buffer.length()) > 0) { value = buffer.toString(); }else { java.lang.String[] letters = name.split(\"(?<=[\\\\S])[\\\\S]*\\\\s*\"); if ((letters.length) > 1) { value = java.util.stream.Stream.of(letters).map(( s) -> s.toUpperCase()).collect(java.util.stream.Collectors.joining()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4508/buggy-version/mica-core.src.main.java.org.obiba.mica.core.domain.LocalizedString.java", "BodyUseAPI": ["java.lang.StringBuffer.toString()"], "Fixed commit": "f5e072c6d5aeb54440e1382ec5cf2dbe2bbae959", "Url": "https://api.github.com/repos/obiba/mica-server", "Date": "2014-10-21T17:41:34Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.data4all.util.MapUtil.getBoundingBoxForOsmElement(io.github.data4all.model.data.AbstractDataElement)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (bb == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1377/buggy-version/src.main.java.io.github.data4all.util.MapUtil.java", "BodyUseAPI": [], "Fixed commit": "a3275626b7c030c4e72c77c479e885508355bf0a", "Url": "https://api.github.com/repos/Data4All/Data4All", "Date": "2015-03-20T10:32:29Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.data4all.util.MapUtil.getBoundingBoxForOsmElements(java.util.List<io.github.data4all.model.data.AbstractDataElement>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (bb == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1377/buggy-version/src.main.java.io.github.data4all.util.MapUtil.java", "BodyUseAPI": [], "Fixed commit": "a3275626b7c030c4e72c77c479e885508355bf0a", "Url": "https://api.github.com/repos/Data4All/Data4All", "Date": "2015-03-20T10:32:29Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getBoolean(getResources().getString(R.string.download_mode_key),boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (preference) { if (org.fossasia.openevent.utils.NetworkUtils.haveWifiConnection(this)) { org.fossasia.openevent.OpenEventApp.postEventOnUIThread(new org.fossasia.openevent.events.DataDownloadEvent()); sharedPreferences.edit().putBoolean(ConstantStrings.IS_DOWNLOAD_DONE, true).apply(); }else if (org.fossasia.openevent.utils.NetworkUtils.haveMobileConnection(this)) { org.fossasia.openevent.OpenEventApp.postEventOnUIThread(new org.fossasia.openevent.events.DataDownloadEvent()); sharedPreferences.edit().putBoolean(ConstantStrings.IS_DOWNLOAD_DONE, true).apply(); }else { final android.support.design.widget.Snackbar snackbar = android.support.design.widget.Snackbar.make(mainFrame, R.string.internet_preference_warning, Snackbar.LENGTH_INDEFINITE); snackbar.setAction(R.string.yes, new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View view) { downloadFromAssets(); } }); snackbar.show(); } }else { org.fossasia.openevent.OpenEventApp.postEventOnUIThread(new org.fossasia.openevent.events.DataDownloadEvent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5544/buggy-version/android.app.src.main.java.org.fossasia.openevent.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "acbba4e2ffda8780ddd6a492d072b78ddacb9513", "Url": "https://api.github.com/repos/betterclever/open-event-android", "Date": "2017-03-07T10:16:55Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mutationStatus == (org.apache.accumulo.core.client.ConditionalWriter.Status.REJECTED)) { mutationStatus = org.apache.accumulo.core.client.ConditionalWriter.Status.UNKNOWN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6126/buggy-version/src.main.java.org.apache.accumulo.accismus.Transaction.java", "BodyUseAPI": [], "Fixed commit": "4d4b9fae740bcfdd13e026597922ecf8ba9f70a6", "Url": "https://api.github.com/repos/keith-turner/Accismus", "Date": "2013-07-18T13:39:19Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, org.wso2.carbon.user.api.ClaimMapping>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(claimMapping.getMappedAttribute())) { mappedAttributes.add(new org.wso2.carbon.identity.claim.metadata.mgt.model.AttributeMapping(primaryDomainName, claimMapping.getMappedAttribute())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4770/buggy-version/components.claim-mgt.org.wso2.carbon.identity.claim.metadata.mgt.src.main.java.org.wso2.carbon.identity.claim.metadata.mgt.DefaultClaimMetadataStore.java", "BodyUseAPI": ["java.util.List<org.wso2.carbon.identity.claim.metadata.mgt.model.AttributeMapping>.add(org.wso2.carbon.identity.claim.metadata.mgt.model.AttributeMapping)", "org.wso2.carbon.user.api.ClaimMapping.getMappedAttribute()"], "Fixed commit": "f4a242b92f2f9acf7b9a759c2bf756a20657400b", "Url": "https://api.github.com/repos/wso2/carbon-identity-framework", "Date": "2017-06-22T05:16:35Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, org.wso2.carbon.user.api.ClaimMapping>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((claimMapping.getMappedAttributes()) != null) { for (java.util.Map.Entry<java.lang.String, java.lang.String> claimMappingEntry : claimMapping.getMappedAttributes().entrySet()) { mappedAttributes.add(new org.wso2.carbon.identity.claim.metadata.mgt.model.AttributeMapping(claimMappingEntry.getKey(), claimMappingEntry.getValue())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4770/buggy-version/components.claim-mgt.org.wso2.carbon.identity.claim.metadata.mgt.src.main.java.org.wso2.carbon.identity.claim.metadata.mgt.DefaultClaimMetadataStore.java", "BodyUseAPI": ["claimMapping.getMappedAttributes().entrySet()", "org.wso2.carbon.user.api.ClaimMapping.getMappedAttributes()"], "Fixed commit": "f4a242b92f2f9acf7b9a759c2bf756a20657400b", "Url": "https://api.github.com/repos/wso2/carbon-identity-framework", "Date": "2017-06-22T05:16:35Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getHealth()) > 0) { p.setHealth(java.lang.Math.min(((p.getHealth()) + amount), p.getMaxHealth())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4831/buggy-version/src.main.java.info.faceland.strife.tasks.HealthRegenTask.java", "BodyUseAPI": ["org.bukkit.entity.Player.setHealth(int)", "java.lang.Math.min(((p.getHealth()) + amount),p.getMaxHealth())", "org.bukkit.entity.Player.getMaxHealth()", "org.bukkit.entity.Player.getHealth()"], "Fixed commit": "e41e0b233403db0d1b5146bf298604bf6d3f5d3b", "Url": "https://api.github.com/repos/TealCube/strife", "Date": "2016-07-27T15:58:59Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((p.getSaturation()) > 0.1) { amount *= 1.2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4831/buggy-version/src.main.java.info.faceland.strife.tasks.HealthRegenTask.java", "BodyUseAPI": [], "Fixed commit": "e41e0b233403db0d1b5146bf298604bf6d3f5d3b", "Url": "https://api.github.com/repos/TealCube/strife", "Date": "2016-07-27T15:58:59Z"},
{"Line": "=>600", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasValues) { org.eyeseetea.malariacare.database.model.Value rdtValue = values.get(0); return rdtValue.isAPositive(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1192/buggy-version/app.src.main.java.org.eyeseetea.malariacare.database.model.Survey.java", "BodyUseAPI": [], "Fixed commit": "3251917f65deba0614a77c4365d5ca391ffb5565", "Url": "https://api.github.com/repos/EyeSeeTea/pictureapp", "Date": "2016-03-17T21:25:47Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.jflask.util.Log.DEBUG) net.jflask.util.Log.debug((((\"Trying to open \" + p) + \" with loader \") + (loader)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1756/buggy-version/jflask.src.main.java.net.jflask.sun.ResourceHandler.java", "BodyUseAPI": [], "Fixed commit": "07f06cdfe9094ad77b7372be5e754ef2d57090b0", "Url": "https://api.github.com/repos/pcdv/jflask", "Date": "2015-12-02T16:27:04Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((name.equals(\"home\")) || (name.equals(user.getName()))) && (this.homes.containsKey(((user.getName()) + \":home\")))) { return this.homes.get(((user.getName()) + \":home\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8966/buggy-version/travel.src.main.java.de.cubeisland.cubeengine.travel.storage.TelePointManager.java", "BodyUseAPI": ["java.util.Map<java.lang.String, de.cubeisland.cubeengine.travel.storage.Home>.get(((user.getName()) + \":home\"))", "de.cubeisland.cubeengine.core.user.User.getName()"], "Fixed commit": "0cab7bf4ad768811716b5aebb223c942477aad79", "Url": "https://api.github.com/repos/CubeEngineDev/CubeEngine", "Date": "2013-05-10T19:25:05Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((info.getMajorVersion()) > 3) || (((info.getMajorVersion()) > 2) && ((info.getMinorVersion()) > 1))) { org.lwjgl.glfw.GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MAJOR, info.getMajorVersion()); org.lwjgl.glfw.GLFW.glfwWindowHint(GLFW.GLFW_CONTEXT_VERSION_MINOR, info.getMinorVersion()); org.lwjgl.glfw.GLFW.glfwWindowHint(GLFW.GLFW_OPENGL_PROFILE, GLFW.GLFW_OPENGL_CORE_PROFILE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6433/buggy-version/src.omnikryptec.display.Window.java", "BodyUseAPI": [], "Fixed commit": "2a73d2bb9dcb1bb267e05f117702ca183a577808", "Url": "https://api.github.com/repos/OmniKryptec/OmniKryptec-Engine", "Date": "2017-12-10T16:52:29Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (route.getStartlocation().equals(startLocation)) { if (fi.ohtu.mobilityprofile.Util.aroundTheSameTime(new java.sql.Time(route.getTimestamp()), 2, 2)) { if (destinations.contains(route.getDestination())) continue; fi.ohtu.mobilityprofile.suggestions.Suggestion suggestion = new fi.ohtu.mobilityprofile.suggestions.Suggestion(route.getDestination(), fi.ohtu.mobilityprofile.suggestions.SuggestionAccuracy.HIGH, ROUTE_SUGGESTION); suggestions.add(suggestion); destinations.add(route.getDestination()); counter++; if (counter >= 3) break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3239/buggy-version/app.src.main.java.fi.ohtu.mobilityprofile.suggestions.sources.RouteSuggestions.java", "BodyUseAPI": ["fi.ohtu.mobilityprofile.domain.RouteSearch.getDestination()", "fi.ohtu.mobilityprofile.Util.aroundTheSameTime(java.sql.Time,int,int)", "java.util.Set<java.lang.String>.add(route.getDestination())", "fi.ohtu.mobilityprofile.domain.RouteSearch.getDestination()", "fi.ohtu.mobilityprofile.domain.RouteSearch.getTimestamp()", "java.util.Set<java.lang.String>.contains(route.getDestination())", "fi.ohtu.mobilityprofile.domain.RouteSearch.getDestination()"], "Fixed commit": "b3bd0900689a104cea2fd07e0c77ba1b0b450311", "Url": "https://api.github.com/repos/mobility-profile/Mobility-Profile", "Date": "2016-08-05T16:53:10Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((searchable.length()) > 0) { javax.swing.JOptionPane.showMessageDialog(null, \"No results found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6549/buggy-version/Hunter.java", "BodyUseAPI": [], "Fixed commit": "1cea6c21609cb7d0d2ef559fb8cbf8da7d3a2807", "Url": "https://api.github.com/repos/Cloud-Rush/Text-Editor", "Date": "2013-11-06T17:36:08Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(deletedSet.isEmpty())) getNetworkViewMainPanel().getNetworkViewGrid().update(getNetworkViewMainPanel().getNetworkViewGrid().getThumbnailSlider().getValue());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/538/buggy-version/swing-application-impl.src.main.java.org.cytoscape.internal.view.NetworkViewMediator.java", "BodyUseAPI": [], "Fixed commit": "432910d0f564c16fea072e6c9ca25126c5ae8328", "Url": "https://api.github.com/repos/cytoscape/cytoscape-impl", "Date": "2016-02-19T20:05:45Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((archiveEntries.containsKey(entry)) && (!overwrite)) { throw new java.io.IOException((\"Archive already contains entry: \" + entry)); }else { archiveEntries.remove(entry); archiveEntriesToAdd.remove(entry); archiveEntries.put(entry, newEntry); archiveEntriesToAdd.put(entry, file); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3625/buggy-version/ArchiveModifier.src.ArchiveModifier.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.util.zip.ZipEntry>.remove(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.zip.ZipEntry>.put(java.lang.String,java.util.zip.ZipEntry)", "java.util.HashMap<java.lang.String, java.io.File>.remove(java.lang.String)", "java.util.HashMap<java.lang.String, java.io.File>.put(java.lang.String,java.io.File)"], "Fixed commit": "f48549a2e1ed35694b5e94cc9081661725d8ad3c", "Url": "https://api.github.com/repos/benjholla/ArchiveModifier", "Date": "2015-10-19T04:03:25Z"},
{"Line": "=>1354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((note[lane]) != null) { return note[lane][getImageIndex(note[lane].length, time, state)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/703/buggy-version/src.bms.player.beatoraja.play.PlaySkin.java", "BodyUseAPI": ["bms.player.beatoraja.play.PlaySkin.SkinLaneObject.getImageIndex(note[lane].length,long,bms.player.beatoraja.MainState)"], "Fixed commit": "ee26dfbfa75475730fc52c5d53f35405ebdf769a", "Url": "https://api.github.com/repos/exch-bms2/beatoraja", "Date": "2016-10-11T06:07:51Z"},
{"Line": "=>1368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((minenote[lane]) != null) { return minenote[lane][getImageIndex(minenote[lane].length, time, state)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/703/buggy-version/src.bms.player.beatoraja.play.PlaySkin.java", "BodyUseAPI": ["bms.player.beatoraja.play.PlaySkin.SkinLaneObject.getImageIndex(minenote[lane].length,long,bms.player.beatoraja.MainState)"], "Fixed commit": "ee26dfbfa75475730fc52c5d53f35405ebdf769a", "Url": "https://api.github.com/repos/exch-bms2/beatoraja", "Date": "2016-10-11T06:07:51Z"},
{"Line": "=>1361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((longnote[type][lane]) != null) { return longnote[type][lane][getImageIndex(longnote[type][lane].length, time, state)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/703/buggy-version/src.bms.player.beatoraja.play.PlaySkin.java", "BodyUseAPI": ["bms.player.beatoraja.play.PlaySkin.SkinLaneObject.getImageIndex(longnote[type][lane].length,long,bms.player.beatoraja.MainState)"], "Fixed commit": "ee26dfbfa75475730fc52c5d53f35405ebdf769a", "Url": "https://api.github.com/repos/exch-bms2/beatoraja", "Date": "2016-10-11T06:07:51Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(testCase)) { toMoveTo = context.getGameLogic().getEventManager().getUnaffectedStation(); while (toMoveTo.isJunction()) { toMoveTo = context.getGameLogic().getEventManager().getUnaffectedStation(); } }else { toMoveTo = com.TeamHEC.gameLogic.Game.getInstance().getMap().getRandomStation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5318/buggy-version/declassified.core.src.com.TeamHEC.gameLogic.event.TeleportEvent.java", "BodyUseAPI": [], "Fixed commit": "c6b27b0b4320766d00cd1f224bf20337714aa45c", "Url": "https://api.github.com/repos/CallumHewitt/LocomotionCommotion-Declassified", "Date": "2015-02-17T17:01:09Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.ednovo.gooru.client.mvp.gshelf.ShelfTreeWidget.ASSESSMENT_URL.equalsIgnoreCase(collectionDo.getType())) { showAssessmentUrlInfo(collectionDo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/407/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.gshelf.ShelfTreeWidget.java", "BodyUseAPI": [], "Fixed commit": "22d0a749935f416cd56d5ac52d5c0335325f2960", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-07-15T09:27:21Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.syncleus.ferma.framefactories.annotation.AbstractEdgeFrame.class.isAssignableFrom(edgeClass))) throw new java.lang.IllegalStateException((((\"Class \" + label) + \" doesn't extend class \") + (com.syncleus.ferma.framefactories.annotation.AbstractEdgeFrame.class.getCanonicalName())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7405/buggy-version/src.main.java.com.syncleus.ferma.framefactories.annotation.IncidenceMethodHandler.java", "BodyUseAPI": ["java.lang.Class.getCanonicalName()"], "Fixed commit": "ce6fed8ef9829189d6fe6f114ec8b0904fd4e0e9", "Url": "https://api.github.com/repos/Syncleus/Ferma", "Date": "2015-06-13T22:56:18Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (edgeClass == null) throw new java.lang.IllegalStateException((\"Couldn't find an edge with name \" + label));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7405/buggy-version/src.main.java.com.syncleus.ferma.framefactories.annotation.IncidenceMethodHandler.java", "BodyUseAPI": [], "Fixed commit": "ce6fed8ef9829189d6fe6f114ec8b0904fd4e0e9", "Url": "https://api.github.com/repos/Syncleus/Ferma", "Date": "2015-06-13T22:56:18Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((context) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6762/buggy-version/app.src.main.java.com.paulvarry.intra42.adapters.SpinnerAdapterCursusAccent.java", "BodyUseAPI": [], "Fixed commit": "55db2f72309cdc5b4c57983394b6fa6e79f1613d", "Url": "https://api.github.com/repos/pvarry/intra42", "Date": "2017-05-10T17:05:00Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.pineapple.MenuPanel.highScoreList.get(((2 * (com.example.pineapple.MenuPanel.leaderboardLevel)) + (com.example.pineapple.MenuPanel.leaderboardDifficulty))).get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (s.getUser().equals(com.scoreloop.client.android.core.model.Session.getCurrentSession().getUser())) { leaderboardPaint.setColor(Color.WHITE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8771/buggy-version/Pineapple.src.com.example.pineapple.MenuPanel.java", "BodyUseAPI": [], "Fixed commit": "1c5b1de8b23cd130bbf68aa8111ef86605cdc138", "Url": "https://api.github.com/repos/oskarwaglund/project-pineapple", "Date": "2013-05-14T20:47:52Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((googleMap) != null) { googleMap.animateCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(new com.google.android.gms.maps.model.LatLng(geoPoint.getLatitude(), geoPoint.getLongitude()), 18)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3038/buggy-version/app.src.main.java.edu.istic.tdf.dfclient.fragment.SitacFragment.java", "BodyUseAPI": [], "Fixed commit": "3debcafa8533f1236dff85c1b93ae639e3df6cc2", "Url": "https://api.github.com/repos/TeamDroneFireman/AndroidApp", "Date": "2016-04-29T07:28:10Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (zoneId == null) { this.allExileZones = true; }else { this.allExileZones = allExileZones; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3258/buggy-version/Mage.src.mage.target.common.TargetCardInExile.java", "BodyUseAPI": [], "Fixed commit": "2969ea2facc3d60c5c4ced068daec863ffbe2d8c", "Url": "https://api.github.com/repos/daagar/mage", "Date": "2015-02-15T22:53:35Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldVersion == 6) { db.execSQL(((((\"CREATE TABLE IF NOT EXISTS \" + (com.teamunemployment.breadcrumbs.database.DatabaseController.FOLLOWING_TABLE)) + \" (_id INTEGER PRIMARY KEY AUTOINCREMENT, \") + \"UserId INTEGER,\") + \"FollowedUserId INTEGER);\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6089/buggy-version/BreadCrumbs.com.teamunemployment.breadcrumbs.src.main.java.com.teamunemployment.breadcrumbs.database.DatabaseController.java", "BodyUseAPI": [], "Fixed commit": "0bf9af38abc143a6a7226c4b908410210a955f70", "Url": "https://api.github.com/repos/kloin/ICEMANv0.5", "Date": "2016-08-02T06:48:20Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((triple instanceof rdfbones.rdfdataset.RestrictionTriple) && (!(triple instanceof rdfbones.rdfdataset.InstanceRestrictionTriple))) || (triple.predicate.equals(\"rdfs:subClassOf\"))) { this.schemeTriples.add(triple); }else if (triple.predicate.equals(\"rdf:type\")) { this.schemeTriples.add(triple); }else { this.dataTriples.add(triple); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1554/buggy-version/src.rdfbones.rdfdataset.TripleCollector.java", "BodyUseAPI": [], "Fixed commit": "268856546a8a8722e8193e1079b41750350d49be", "Url": "https://api.github.com/repos/RDFBones/RDFBones", "Date": "2017-03-21T22:27:11Z"},
{"Line": "=>1630", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vbotstars.size()) > 0) { if (!(vbotstars.get(0).equals(\"\"))) { vbotstars.add(0, \"\"); } }else { vbotstars.add(0, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/930/buggy-version/rivescript-core.src.main.java.com.rivescript.RiveScript.java", "BodyUseAPI": ["java.util.Vector<java.lang.String>.add(int,java.lang.String)", "java.util.Vector<java.lang.String>.add(int,java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.util.Vector<java.lang.String>.get(int)"], "Fixed commit": "84926283587a65b4a228bacac312cecaf605fe48", "Url": "https://api.github.com/repos/balachandarsv/rivescript-java", "Date": "2016-12-24T17:34:07Z"},
{"Line": "=>1646", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vbotstars.size()) > 0) { if (!(vbotstars.get(0).equals(\"\"))) { vbotstars.add(0, \"\"); } }else { vbotstars.add(0, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/930/buggy-version/rivescript-core.src.main.java.com.rivescript.RiveScript.java", "BodyUseAPI": ["java.util.Vector<java.lang.String>.add(int,java.lang.String)", "java.util.Vector<java.lang.String>.get(int)", "java.util.Vector<java.lang.String>.add(int,java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "84926283587a65b4a228bacac312cecaf605fe48", "Url": "https://api.github.com/repos/balachandarsv/rivescript-java", "Date": "2016-12-24T17:34:07Z"},
{"Line": "=>1638", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vstars.size()) > 0) { if (!(vstars.get(0).equals(\"\"))) { vstars.add(0, \"\"); } }else { vstars.add(0, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/930/buggy-version/rivescript-core.src.main.java.com.rivescript.RiveScript.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.util.Vector<java.lang.String>.add(int,java.lang.String)", "java.util.Vector<java.lang.String>.get(int)", "java.util.Vector<java.lang.String>.add(int,java.lang.String)"], "Fixed commit": "84926283587a65b4a228bacac312cecaf605fe48", "Url": "https://api.github.com/repos/balachandarsv/rivescript-java", "Date": "2016-12-24T17:34:07Z"},
{"Line": "=>1622", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vstars.size()) > 0) { if (!(vstars.get(0).equals(\"\"))) { vstars.add(0, \"\"); } }else { vstars.add(0, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/930/buggy-version/rivescript-core.src.main.java.com.rivescript.RiveScript.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.util.Vector<java.lang.String>.add(int,java.lang.String)", "java.util.Vector<java.lang.String>.add(int,java.lang.String)", "java.util.Vector<java.lang.String>.get(int)"], "Fixed commit": "84926283587a65b4a228bacac312cecaf605fe48", "Url": "https://api.github.com/repos/balachandarsv/rivescript-java", "Date": "2016-12-24T17:34:07Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((file) != null) { report.append(\"ModelerFile : \").append('\\n').append(file.getContent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2577/buggy-version/Collaboration.src.org.netbeans.jpa.modeler.collaborate.issues.ExceptionReporterPanel.java", "BodyUseAPI": [], "Fixed commit": "8d9f68d4fae7f0e5dbfbb6418c76c5ac8b13fd47", "Url": "https://api.github.com/repos/jeddict/jeddict", "Date": "2016-03-22T05:07:20Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.tudelft.watchdog.ui.preferences.Preferences.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(preferences.isOldVersion())) { preferences.setBigUpdateAnswered(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6619/buggy-version/WatchDogEclipsePlugin.WatchDog.src.nl.tudelft.watchdog.ui.handlers.InfoHandler.java", "BodyUseAPI": ["nl.tudelft.watchdog.ui.preferences.Preferences.setBigUpdateAnswered(boolean)"], "Fixed commit": "9dd076d5d15bce6f6cf03e8cf8da72e203a4674b", "Url": "https://api.github.com/repos/TestRoots/watchdog", "Date": "2015-01-28T17:13:56Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((wrappedNode.getImplements()) != null) { for (com.github.javaparser.ast.type.ClassOrInterfaceType implementedType : wrappedNode.getImplements()) { me.tomassetti.symbolsolver.model.resolution.SymbolReference<me.tomassetti.symbolsolver.javaparsermodel.declarations.TypeDeclaration> implementedDeclRef = solveType(implementedType.getName(), typeSolver); if (!(implementedDeclRef.isSolved())) { throw new me.tomassetti.symbolsolver.javaparsermodel.UnsolvedSymbolException(implementedType.getName()); } ancestors.add(new me.tomassetti.symbolsolver.model.typesystem.ReferenceTypeUsageImpl(implementedDeclRef.getCorrespondingDeclaration(), typeSolver)); ancestors.addAll(implementedDeclRef.getCorrespondingDeclaration().getAllAncestors()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1742/buggy-version/java-symbol-solver-core.src.main.java.me.tomassetti.symbolsolver.javaparsermodel.declarations.JavaParserEnumDeclaration.java", "BodyUseAPI": ["com.github.javaparser.ast.body.EnumDeclaration.getImplements()"], "Fixed commit": "5e4fc840b1611dda99bbe51f19fc910aa50f667f", "Url": "https://api.github.com/repos/gs0510/java-symbol-solver", "Date": "2016-09-29T15:28:14Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.guerinet.stringparser.HeaderString>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(string1 instanceof com.guerinet.stringparser.LanguageString)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6507/buggy-version/src.main.java.com.guerinet.stringparser.StringParser.java", "BodyUseAPI": [], "Fixed commit": "8d2f0f1a74279e776bda90c342bc577004f2ba82", "Url": "https://api.github.com/repos/jguerinet/string-parser", "Date": "2015-09-12T04:17:12Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((world.getBlockId(x, (y - 1), z)) == (Block.grass.blockID)) world.setBlock(x, (y - 1), z, Block.dirt.blockID);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/823/buggy-version/src.minecraft.mods.SecretRoomsMod.items.ItemCamoDoor.java", "BodyUseAPI": ["net.minecraft.world.World.setBlock(int,int,int,Block.dirt.blockID)"], "Fixed commit": "498b8269dcfd72d59a3e165b0d72f2c1c7f10930", "Url": "https://api.github.com/repos/AbrarSyed/SecretRoomsMod-forge", "Date": "2013-04-20T23:20:33Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (world.isRemote) cpw.mods.fml.common.network.PacketDispatcher.sendPacketToServer(te.getDescriptionPacket()); else cpw.mods.fml.common.network.PacketDispatcher.sendPacketToAllInDimension(te.getDescriptionPacket(), world.provider.dimensionId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/823/buggy-version/src.minecraft.mods.SecretRoomsMod.items.ItemCamoDoor.java", "BodyUseAPI": ["cpw.mods.fml.common.network.PacketDispatcher.sendPacketToAllInDimension(te.getDescriptionPacket(),world.provider.dimensionId)"], "Fixed commit": "498b8269dcfd72d59a3e165b0d72f2c1c7f10930", "Url": "https://api.github.com/repos/AbrarSyed/SecretRoomsMod-forge", "Date": "2013-04-20T23:20:33Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (world.isRemote) cpw.mods.fml.common.network.PacketDispatcher.sendPacketToServer(te.getDescriptionPacket()); else cpw.mods.fml.common.network.PacketDispatcher.sendPacketToAllInDimension(te.getDescriptionPacket(), world.provider.dimensionId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/823/buggy-version/src.minecraft.mods.SecretRoomsMod.items.ItemCamoDoor.java", "BodyUseAPI": ["cpw.mods.fml.common.network.PacketDispatcher.sendPacketToAllInDimension(te.getDescriptionPacket(),world.provider.dimensionId)"], "Fixed commit": "498b8269dcfd72d59a3e165b0d72f2c1c7f10930", "Url": "https://api.github.com/repos/AbrarSyed/SecretRoomsMod-forge", "Date": "2013-04-20T23:20:33Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((no.digipost.android.documentstore.DocumentContentStore.documentParent) == null) || ((no.digipost.android.documentstore.DocumentContentStore.documentParent.getAttachment()) == null)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6936/buggy-version/Digipost.src.main.java.no.digipost.android.documentstore.DocumentContentStore.java", "BodyUseAPI": [], "Fixed commit": "fd3369e72a982add8780f8cd4799559b918f3a7b", "Url": "https://api.github.com/repos/digipost/android", "Date": "2014-07-22T07:17:39Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getActionCommand().equals(\"Delete Stones\")) && (graphicalUI.GraphicalUI.getCreation())) { if (graphicalUI.GraphicalUI.getDeleteStones()) { graphicalUI.GraphicalUI.setMixedStones(true); graphicalUI.GraphicalUI.setDeleteStones(false); GraphicalUI.feedback.setText(\"Delete stones deselected\"); }else { graphicalUI.GraphicalUI.setMixedStones(false); graphicalUI.GraphicalUI.setDeleteStones(true); GraphicalUI.feedback.setText(\"Delete stones selected\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2455/buggy-version/src.graphicalUI.CreationMenuListener.java", "BodyUseAPI": [], "Fixed commit": "e51847360c03e9a95195a9837c4a300f56e81f31", "Url": "https://api.github.com/repos/NiklasZ/Go-Life-and-Death-Player", "Date": "2015-01-28T20:54:37Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((operations.size()) > 0) && ((attributes.size()) == 0)) { return (height) + 20; }else { return height; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/698/buggy-version/src.models.ClassObject.java", "BodyUseAPI": [], "Fixed commit": "49eb31ad27cec98ce73d76b2a09545242655fbbe", "Url": "https://api.github.com/repos/oRANGE-CSCITeam/UML-Editor", "Date": "2014-02-14T00:21:10Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pos) != null) { edu.pdx.oss.asthmacontrol.DatabaseOperations dop = new edu.pdx.oss.asthmacontrol.DatabaseOperations(ctx); java.lang.String logDate = li.get(pos); dop.deleteDateFromAsthmaTime(dop, logDate); li.remove(pos); displayDataOnGridView(); android.widget.Toast.makeText(getBaseContext(), \"Selected date has been removed successfully..\", Toast.LENGTH_LONG).show(); }else { android.widget.Toast.makeText(getBaseContext(), \"Error... Select a date first\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4477/buggy-version/app.src.main.java.edu.pdx.oss.asthmacontrol.UpdateAsthmaTimeActivity.java", "BodyUseAPI": [], "Fixed commit": "80dd206ad4b5222497f33302444d755442547e75", "Url": "https://api.github.com/repos/Azzam-Enajjar/AsthmaControl", "Date": "2015-07-24T23:07:35Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(buffers.empty())) launch.putExtra(\"extraBufferId\", buffers.peek());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3289/buggy-version/QuasselDroid.src.main.java.com.iskrembilen.quasseldroid.util.QuasseldroidNotificationManager.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,java.lang.Integer)", "java.util.Stack<java.lang.Integer>.peek()"], "Fixed commit": "0fe9cd88e8bef72e15f05107f240b09b2591d94e", "Url": "https://api.github.com/repos/justjanne/QuasselDroid", "Date": "2015-11-13T23:18:59Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.iskrembilen.quasseldroid.protocol.state.Client.getInstance().getNetworks().getBufferById(event.bufferId)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (buffer == null) { dismiss(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3289/buggy-version/QuasselDroid.src.main.java.com.iskrembilen.quasseldroid.gui.dialogs.TopicViewDialog.java", "BodyUseAPI": [], "Fixed commit": "0fe9cd88e8bef72e15f05107f240b09b2591d94e", "Url": "https://api.github.com/repos/justjanne/QuasselDroid", "Date": "2015-11-13T23:18:59Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.stanford.nlp.semgraph.SemanticGraph.reln(edu.stanford.nlp.ling.IndexedWord,edu.stanford.nlp.ling.IndexedWord)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (gr == null) gr = deps.reln(depWord, word);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2354/buggy-version/src.corp.data.feature.CorpRelFeatureNGramDep.java", "BodyUseAPI": [], "Fixed commit": "3a2a20cdbe25fcbf35f4c205e2574352c662c8b5", "Url": "https://api.github.com/repos/forkunited/CorporateRelationExtraction", "Date": "2013-09-07T01:21:53Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jobOutput instanceof org.kiji.mapreduce.output.impl.KijiTableMapReduceJobOutput) { return withOutput(((org.kiji.mapreduce.output.impl.KijiTableMapReduceJobOutput) (jobOutput))); }else { throw new java.lang.RuntimeException((\"jobOutput parameter of KijiProduceJobBuilder.withOutput() must \" + \"be a KijiTableMapReduceJobOutput.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4093/buggy-version/kiji-mapreduce.src.main.java.org.kiji.mapreduce.produce.KijiProduceJobBuilder.java", "BodyUseAPI": [], "Fixed commit": "41faa4efa1409c63c0ec3a9ea64fbb1bc9c4f145", "Url": "https://api.github.com/repos/sqrl/kiji-mapreduce", "Date": "2013-02-17T15:39:28Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.search.Document.get(Field.ROOT_ENTRY_CLASS_NAME)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.liferay.portal.kernel.util.Validator.isNull(className)) { className = document.get(Field.ENTRY_CLASS_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8872/buggy-version/portal-impl.src.com.liferay.portal.search.SearchPermissionCheckerImpl.java", "BodyUseAPI": [], "Fixed commit": "d6a27afcef4205414df4656d4204c20a6c1263b1", "Url": "https://api.github.com/repos/Preston-Crary/liferay-portal", "Date": "2015-05-22T21:08:16Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (components[argIndex].contains(\"$f\")) { temp = temp.replace(\"sw\", \"s.s\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/99/buggy-version/output.MIPSInstructionSelector.java", "BodyUseAPI": [], "Fixed commit": "277eb0956d55e30c791af0eb8603adf1c87c8e74", "Url": "https://api.github.com/repos/CS4240-tiger/tiger-compiler", "Date": "2014-12-06T17:42:16Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((widthSeekBar.getProgress()) == progress) { widthText.setText(java.lang.String.format(java.util.Locale.US, getString(R.string.pixel_suffix), (progress * 10))); }else { widthSeekBar.setProgress(progress); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/126/buggy-version/libs.editor.WordPressEditor.src.main.java.org.wordpress.android.editor.ImageSettingsDialogFragment.java", "BodyUseAPI": ["android.widget.SeekBar.setProgress(int)", "java.lang.String.format(java.util.Locale,getString(R.string.pixel_suffix),int)", "android.widget.EditText.setText(java.lang.String)"], "Fixed commit": "4ed6be83310cc4b4f149ddb242e061f87289cb26", "Url": "https://api.github.com/repos/jeffbarge/WordPress-Android", "Date": "2017-09-28T05:09:19Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (code instanceof wyil.transforms.BinOp) { infer(index, ((wyil.transforms.BinOp) (code)), entry, environment); }else if (code instanceof wyil.transforms.Convert) { infer(index, ((wyil.transforms.Convert) (code)), entry, environment); }else if (code instanceof wyil.transforms.Const) { infer(((wyil.transforms.Const) (code)), entry, environment); }else if (code instanceof wyil.transforms.Debug) { infer(((wyil.transforms.Debug) (code)), entry, environment); }else if (code instanceof wyil.transforms.DictLoad) { infer(index, ((wyil.transforms.DictLoad) (code)), entry, environment); }else if (code instanceof wyil.transforms.ExternJvm) { }else if (code instanceof wyil.transforms.Fail) { }else if (code instanceof wyil.transforms.FieldLoad) { infer(index, ((wyil.transforms.FieldLoad) (code)), entry, environment); }else if (code instanceof wyil.transforms.IndirectInvoke) { infer(((wyil.transforms.IndirectInvoke) (code)), entry, environment); }else if (code instanceof wyil.transforms.IndirectSend) { infer(((wyil.transforms.IndirectSend) (code)), entry, environment); }else if (code instanceof wyil.transforms.Invoke) { infer(((wyil.transforms.Invoke) (code)), entry, environment); }else if (code instanceof wyil.transforms.Label) { }else if (code instanceof wyil.transforms.ListOp) { infer(index, ((wyil.transforms.ListOp) (code)), entry, environment); }else if (code instanceof wyil.transforms.ListLoad) { infer(index, ((wyil.transforms.ListLoad) (code)), entry, environment); }else if (code instanceof wyil.transforms.Load) { infer(index, ((wyil.transforms.Load) (code)), entry, environment); }else if (code instanceof wyil.transforms.MultiStore) { infer(((wyil.transforms.MultiStore) (code)), entry, environment); }else if (code instanceof wyil.transforms.NewDict) { infer(index, ((wyil.transforms.NewDict) (code)), entry, environment); }else if (code instanceof wyil.transforms.NewList) { infer(index, ((wyil.transforms.NewList) (code)), entry, environment); }else if (code instanceof wyil.transforms.NewRecord) { infer(index, ((wyil.transforms.NewRecord) (code)), entry, environment); }else if (code instanceof wyil.transforms.NewSet) { infer(index, ((wyil.transforms.NewSet) (code)), entry, environment); }else if (code instanceof wyil.transforms.Return) { infer(((wyil.transforms.Return) (code)), entry, environment); }else if (code instanceof wyil.transforms.Send) { infer(((wyil.transforms.Send) (code)), entry, environment); }else if (code instanceof wyil.transforms.Store) { infer(((wyil.transforms.Store) (code)), entry, environment); }else if (code instanceof wyil.transforms.SetOp) { infer(index, ((wyil.transforms.SetOp) (code)), entry, environment); }else if (code instanceof wyil.transforms.Skip) { }else if (code instanceof wyil.transforms.UnOp) { infer(index, ((wyil.transforms.UnOp) (code)), entry, environment); }else { syntaxError((\"unknown wyil code encountered: \" + code), filename, entry); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7178/buggy-version/src.wyil.transforms.ConstantPropagation.java", "BodyUseAPI": ["wyil.transforms.ConstantPropagation.syntaxError((\"unknown wyil code encountered: \" + code),wyil.transforms.ConstantPropagation,wyil.lang.Block.Entry)"], "Fixed commit": "b98e28d0be73332e41af602a2da2cf8126f2174f", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-06-20T04:41:56Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.persistence.EntityManager.find(java.lang.Class,java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (product == null) { throw new java.lang.IllegalStateException(\"Defining Product is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8505/buggy-version/animations.src.main.java.com.chiralbehaviors.CoRE.meta.models.WorkspaceModelImpl.java", "BodyUseAPI": [], "Fixed commit": "753ba52489b085ead61cbe32e8475af4eb50b8bc", "Url": "https://api.github.com/repos/ChiralBehaviors/Ultrastructure", "Date": "2015-05-05T19:55:50Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.alesharik.webserver.api.ServerInfo.provider) == null) return \"AlesharikWebServer: ServerInfo class not initialized! Please, report this information to server admin or server api realisation creator!\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7904/buggy-version/api.src.com.alesharik.webserver.api.ServerInfo.java", "BodyUseAPI": [], "Fixed commit": "a7d31903ef83e6371f0db62d088c8abfad4aff05", "Url": "https://api.github.com/repos/alesharik/AlesharikWebServer", "Date": "2017-08-16T20:43:36Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (locationDefinition == null) { throw new java.lang.IllegalArgumentException(\"Location definition is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2132/buggy-version/opennms-dao.src.main.java.org.opennms.netmgt.dao.hibernate.LocationMonitorDaoHibernate.java", "BodyUseAPI": [], "Fixed commit": "0121854e28c70fc97ca18e12e63dbcd3c9d46f6b", "Url": "https://api.github.com/repos/OpenNMS/opennms", "Date": "2013-11-15T22:29:06Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opennms.netmgt.dao.api.LocationMonitorDao.findMonitoringLocationDefinition(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (locationDefinition == null) { throw new java.lang.IllegalArgumentException((\"Cannot find location definition: \" + location)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2132/buggy-version/opennms-webapp.src.main.java.org.opennms.web.rest.RemotePollerAvailabilityService.java", "BodyUseAPI": [], "Fixed commit": "0121854e28c70fc97ca18e12e63dbcd3c9d46f6b", "Url": "https://api.github.com/repos/OpenNMS/opennms", "Date": "2013-11-15T22:29:06Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRightIconColor) != (-1)) { com.arlib.floatingsearchview.util.Util.setIconColor(viewHolder.rightIcon, mRightIconColor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/450/buggy-version/library.src.main.java.com.arlib.floatingsearchview.suggestions.SearchSuggestionsAdapter.java", "BodyUseAPI": [], "Fixed commit": "3580aed96da4f2848b8dd69964bae1b679877014", "Url": "https://api.github.com/repos/arimorty/floatingsearchview", "Date": "2017-04-14T21:52:46Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTextColor) != (-1)) { viewHolder.body.setTextColor(mTextColor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/450/buggy-version/library.src.main.java.com.arlib.floatingsearchview.suggestions.SearchSuggestionsAdapter.java", "BodyUseAPI": [], "Fixed commit": "3580aed96da4f2848b8dd69964bae1b679877014", "Url": "https://api.github.com/repos/arimorty/floatingsearchview", "Date": "2017-04-14T21:52:46Z"},
{"Line": "=>424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getPreviewResolution()) != null) { mPreview.setTruePreviewSize((invertPreviewSizes ? getPreviewResolution().getHeight() : getPreviewResolution().getWidth()), (invertPreviewSizes ? getPreviewResolution().getWidth() : getPreviewResolution().getHeight())); mCameraParameters.setPreviewSize(getPreviewResolution().getWidth(), getPreviewResolution().getHeight()); try { mCamera.setParameters(mCameraParameters); } catch (java.lang.Exception e) { e.printStackTrace(); mCameraParameters = resolutionLess; } }else { have_to_readjust = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8228/buggy-version/camerakit.src.main.api16.com.flurgle.camerakit.Camera1.java", "BodyUseAPI": [], "Fixed commit": "5489e3433a8bf49eee71595145c94452be2ff0be", "Url": "https://api.github.com/repos/gasoline-joe/CameraKit-Android", "Date": "2017-09-12T05:30:58Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCaptureResolution()) != null) { mCameraParameters.setPictureSize(getCaptureResolution().getWidth(), getCaptureResolution().getHeight()); try { mCamera.setParameters(mCameraParameters); } catch (java.lang.Exception e) { e.printStackTrace(); mCameraParameters = resolutionLess; } }else { have_to_readjust = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8228/buggy-version/camerakit.src.main.api16.com.flurgle.camerakit.Camera1.java", "BodyUseAPI": [], "Fixed commit": "5489e3433a8bf49eee71595145c94452be2ff0be", "Url": "https://api.github.com/repos/gasoline-joe/CameraKit-Android", "Date": "2017-09-12T05:30:58Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (have_to_readjust) { adjustCameraParameters(); android.util.Log.d(com.flurgle.camerakit.Camera1.TAG, \"RE_ADJUST\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8228/buggy-version/camerakit.src.main.api16.com.flurgle.camerakit.Camera1.java", "BodyUseAPI": [], "Fixed commit": "5489e3433a8bf49eee71595145c94452be2ff0be", "Url": "https://api.github.com/repos/gasoline-joe/CameraKit-Android", "Date": "2017-09-12T05:30:58Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((GlobalData.GetPassword()) == null) { GlobalData.SetPassword(guiPassword); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7771/buggy-version/Final.src.ActiveClient.java", "BodyUseAPI": [], "Fixed commit": "1e9fcd69449a1fda829b6fb584710cc85b50f35b", "Url": "https://api.github.com/repos/banzhamj/CS694-Final-MB-JB-JE-BK", "Date": "2012-06-06T01:44:29Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (source.equals(\"basic_supply\")) { card = gameService.getCardByName(cardName); }else { java.lang.String cardId = paramValues.get(\"cardId\"); card = findCardById(getGame().getSupplyGrid(), cardId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5804/buggy-version/src.main.java.org.smartreaction.battletechdomination.view.GameView.java", "BodyUseAPI": [], "Fixed commit": "f280ef6fb6053fa0a3526771ec2ab65b004bbef5", "Url": "https://api.github.com/repos/icesphere/battle-tech-domination", "Date": "2016-03-26T03:54:05Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kamesuta.mc.signpic.Client.mc.theWorld.getBlockState(net.minecraft.util.BlockPos)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (blockstate != null) { final net.minecraft.block.Block block = blockstate.getBlock(); if (block instanceof net.minecraft.block.BlockSign) { final net.minecraft.tileentity.TileEntity tile = com.kamesuta.mc.signpic.Client.mc.theWorld.getTileEntity(pos); if (tile instanceof net.minecraft.tileentity.TileEntitySign) return ((net.minecraft.tileentity.TileEntitySign) (tile)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6038/buggy-version/src.main.java.com.kamesuta.mc.signpic.Client.java", "BodyUseAPI": ["net.minecraft.block.state.IBlockState.getBlock()"], "Fixed commit": "d84c031568d2dad4a591bd0ad3d5d7e3d5c3d6b0", "Url": "https://api.github.com/repos/Team-Fruit/SignPicture", "Date": "2016-09-13T14:33:25Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (list != null) { for (java.lang.Object obj : list) { parentSensors.add(((java.lang.String) (obj))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/636/buggy-version/Model.src.main.java.config.SensorParams.java", "BodyUseAPI": [], "Fixed commit": "e3d75e1d12019c09c374a2d822e30f4faa68a8b9", "Url": "https://api.github.com/repos/SmartCampus/middleware", "Date": "2015-02-23T15:19:47Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratelia.webactiv.util.contact.model.ContactDetail.getUserFull()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (userFull != null) { value = userFull.getValue(property); if ((com.silverpeas.util.StringUtil.isDefined(value)) && (userFull.getPropertyType(property).equals(DomainProperty.PROPERTY_TYPE_USERID))) { com.stratelia.webactiv.beans.admin.UserDetail anotherUser = com.stratelia.webactiv.beans.admin.UserDetail.getById(value); if (anotherUser != null) { value = ((anotherUser.getLastName()) + \" \") + (anotherUser.getFirstName()); }else { value = \"\"; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8396/buggy-version/yellowpages.yellowpages-war.src.main.java.com.stratelia.webactiv.yellowpages.control.DisplayContactsHelper.java", "BodyUseAPI": ["userFull.getPropertyType(property).equals(DomainProperty.PROPERTY_TYPE_USERID)", "com.stratelia.webactiv.beans.admin.UserFull.getValue(java.lang.String)", "com.stratelia.webactiv.beans.admin.UserFull.getPropertyType(java.lang.String)"], "Fixed commit": "ff7e07fc7fe1e9b4f4e5d55022337830006e5194", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Components", "Date": "2016-04-08T17:44:48Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTrain) { bioLabels = doc.getGoldBIOEncoding(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2360/buggy-version/src.main.java.experiments.NERBaseline.java", "BodyUseAPI": [], "Fixed commit": "bf3e317558af45affe9883854e96ec5f48c49019", "Url": "https://api.github.com/repos/cgraber/CS546Project", "Date": "2016-04-29T19:06:27Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((b) != null) ret.b = b;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2372/buggy-version/deeplearning4j-parent.deeplearning4j-core.src.main.java.org.deeplearning4j.nn.LogisticRegression.java", "BodyUseAPI": [], "Fixed commit": "dae23a485c965dcc59c03796fb58ace91193f33f", "Url": "https://api.github.com/repos/agibsonccc/java-deeplearning", "Date": "2014-02-20T08:15:31Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((W) != null) ret.W = W;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2372/buggy-version/deeplearning4j-parent.deeplearning4j-core.src.main.java.org.deeplearning4j.nn.LogisticRegression.java", "BodyUseAPI": [], "Fixed commit": "dae23a485c965dcc59c03796fb58ace91193f33f", "Url": "https://api.github.com/repos/agibsonccc/java-deeplearning", "Date": "2014-02-20T08:15:31Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bound == null) bound = scope.getJavaLangObject();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1104/buggy-version/org.eclipse.jdt.core.compiler.org.eclipse.jdt.internal.compiler.ast.Expression.java", "BodyUseAPI": [], "Fixed commit": "0e681f80efbcd55630ac88e7932322f24f43cac4", "Url": "https://api.github.com/repos/Overruler/eclipse.jdt.core", "Date": "2014-04-14T09:35:36Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Object, java.lang.Integer>.putIfAbsent(java.lang.Object,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (identifier == null) { final int id = this.counter; (this.counter)++; return id; }else { return identifier; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7352/buggy-version/kieker-analysis.src.kieker.analysisteetime.util.ObjectIdentifierRegistry.java", "BodyUseAPI": [], "Fixed commit": "e227268b4bb66c2c74af32800610db549d787017", "Url": "https://api.github.com/repos/kieker-monitoring/kieker", "Date": "2017-02-08T10:28:01Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getClickedBlock().getState()) instanceof org.bukkit.block.Sign) { sign = ((org.bukkit.block.Sign) (event.getClickedBlock().getState())); if (sign.getLine(0).equals(\"[LockBuy]\")) { if ((plugin.permissionsCheck(player, \"lockbuy.admin.toggle\", true)) == true) { if (sign.getLine(3).equals(((org.bukkit.ChatColor.GREEN) + \"[Active]\"))) { sign.setLine(3, ((org.bukkit.ChatColor.RED) + \"[INACTIVE]\")); }else if (sign.getLine(3).equals(((org.bukkit.ChatColor.RED) + \"[INACTIVE]\"))) { sign.setLine(3, ((org.bukkit.ChatColor.GREEN) + \"[Active]\")); } }else { player.sendMessage(((me.ChrizC.lockbuy.LBPlayerListener.ERR_PREFIX) + \"Error! You do not have the correct Permission to disable this sign.\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3454/buggy-version/me.ChrizC.lockbuy.LBPlayerListener.java", "BodyUseAPI": ["org.bukkit.event.player.PlayerInteractEvent.getClickedBlock()", "event.getClickedBlock().getState()"], "Fixed commit": "2ae8245de09ed224a9ca3ce6a83e4c000ec050be", "Url": "https://api.github.com/repos/ChrizC/LockBuy", "Date": "2011-07-10T13:58:37Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getClickedBlock().getState()) instanceof org.bukkit.block.Sign) { sign = ((org.bukkit.block.Sign) (event.getClickedBlock().getState())); if ((sign.getLine(0).equals(\"[LockBuy]\")) && (sign.getLine(3).equals(((org.bukkit.ChatColor.GREEN) + \"[Active]\")))) { if ((plugin.permissionsCheck(player, \"lockbuy.user.use\", false)) == true) { java.util.regex.Matcher m = p.matcher(sign.getLine(1)); if ((m.find()) == true) { double price = java.lang.Double.parseDouble(m.group()); org.bukkit.block.BlockFace[] array = new org.bukkit.block.BlockFace[]{ org.bukkit.block.BlockFace.UP, org.bukkit.block.BlockFace.DOWN, org.bukkit.block.BlockFace.NORTH, org.bukkit.block.BlockFace.SOUTH, org.bukkit.block.BlockFace.EAST, org.bukkit.block.BlockFace.WEST }; for (org.bukkit.block.BlockFace face : array) { org.bukkit.block.BlockState state = sign.getBlock().getFace(face).getState(); if (state instanceof org.bukkit.block.Sign) { org.bukkit.block.Sign temp = ((org.bukkit.block.Sign) (state)); if (temp.getLine(0).equalsIgnoreCase(\"[Private]\")) { locketteSign = temp; signFound = true; } } } if ((signFound) == true) { if (!(locketteSign.getLine(1).equals(player.getName()))) { if ((plugin.Method.hasAccount(player.getName())) == true) { if ((plugin.moneyCheck(player, price, config.negative)) == true) { plugin.Method.getAccount(player.getName()).subtract(price); if ((config.payOwner) == true) { if (plugin.Method.hasAccount(locketteSign.getLine(1))) { plugin.Method.getAccount(locketteSign.getLine(1)).add(price); org.bukkit.entity.Player[] array2 = org.bukkit.Bukkit.getServer().getOnlinePlayers(); for (int i = 0; i < (array2.length); i++) { if (array2[i].getName().equals(locketteSign.getLine(1))) { org.bukkit.Bukkit.getServer().getPlayer(locketteSign.getLine(1)).sendMessage(((me.ChrizC.lockbuy.LBPlayerListener.PREFIX) + \"One of your Lockette containers has just been purchased!\")); } } } } if ((config.clear) == true) { boolean moreUsersFound = false; locketteSign.setLine(1, \"\"); locketteSign.setLine(2, \"\"); locketteSign.setLine(3, \"\"); for (org.bukkit.block.BlockFace face : array) { org.bukkit.block.BlockState state = locketteSign.getBlock().getFace(face).getState(); if (state instanceof org.bukkit.block.Sign) { org.bukkit.block.Sign temp = ((org.bukkit.block.Sign) (state)); if (temp.getLine(0).equalsIgnoreCase(\"[More Users]\")) { moreUsers = temp; moreUsersFound = true; } } } if (moreUsersFound == true) { if ((config.destroy) == true) { world.getBlockAt(moreUsers.getX(), moreUsers.getY(), moreUsers.getZ()).setType(Material.AIR); }else { moreUsers.setLine(1, \"\"); moreUsers.setLine(2, \"\"); moreUsers.setLine(3, \"\"); moreUsers.update(); } } } locketteSign.setLine(1, player.getName()); if ((config.persist) == false) { org.bukkit.block.Block block = world.getBlockAt(sign.getX(), sign.getY(), sign.getZ()); block.setType(Material.AIR); } player.sendMessage(((me.ChrizC.lockbuy.LBPlayerListener.PREFIX) + \"You have purchased this container.\")); locketteSign.update(); }else { player.sendMessage(((me.ChrizC.lockbuy.LBPlayerListener.ERR_PREFIX) + \"Error! You don't have enough funds to buy this.\")); } }else { player.sendMessage(((me.ChrizC.lockbuy.LBPlayerListener.ERR_PREFIX) + \"Error! You don't appear to have an economy account.\")); } }else { player.sendMessage(((me.ChrizC.lockbuy.LBPlayerListener.ERR_PREFIX) + \"Error! You already own this container.\")); } }else { sign.setLine(3, ((org.bukkit.ChatColor.RED) + \"[INACTIVE]\")); player.sendMessage(((me.ChrizC.lockbuy.LBPlayerListener.ERR_PREFIX) + \"Error! A Lockette sign could not be found!\")); } }else { sign.setLine(3, ((org.bukkit.ChatColor.RED) + \"[INACTIVE]\")); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3454/buggy-version/me.ChrizC.lockbuy.LBPlayerListener.java", "BodyUseAPI": ["event.getClickedBlock().getState()", "org.bukkit.event.player.PlayerInteractEvent.getClickedBlock()"], "Fixed commit": "2ae8245de09ed224a9ca3ce6a83e4c000ec050be", "Url": "https://api.github.com/repos/ChrizC/LockBuy", "Date": "2011-07-10T13:58:37Z"},
{"Line": "=>1457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.overture.pog.visitors.PExp.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (assistantFactory.createPTypeAssistant().isUnion(rType)) { obligations.add(org.overture.pog.obligation.SubTypeObligation.newInstance(rExp, org.overture.ast.factory.AstFactory.newABooleanBasicType(rExp.getLocation()), rType, question, assistantFactory)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2205/buggy-version/core.pog.src.main.java.org.overture.pog.visitors.PogParamExpVisitor.java", "BodyUseAPI": ["org.overture.pog.obligation.SubTypeObligation.newInstance(org.overture.pog.visitors.PExp,org.overture.ast.factory.AstFactory.newABooleanBasicType(rExp.getLocation()),org.overture.ast.types.PType,org.overture.pog.pub.IPOContextStack,org.overture.pog.pub.IPogAssistantFactory)", "org.overture.pog.obligation.ProofObligationList.add(org.overture.pog.obligation.SubTypeObligation.newInstance(rExp, org.overture.ast.factory.AstFactory.newABooleanBasicType(rExp.getLocation()), rType, question, assistantFactory))"], "Fixed commit": "19b68696d82ac34461e4966f5df10391faf8a521", "Url": "https://api.github.com/repos/overturetool/overture", "Date": "2014-05-01T11:24:24Z"},
{"Line": "=>1452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.overture.pog.visitors.PExp.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (assistantFactory.createPTypeAssistant().isUnion(lType)) { obligations.add(org.overture.pog.obligation.SubTypeObligation.newInstance(lExp, org.overture.ast.factory.AstFactory.newABooleanBasicType(lExp.getLocation()), lType, question, assistantFactory)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2205/buggy-version/core.pog.src.main.java.org.overture.pog.visitors.PogParamExpVisitor.java", "BodyUseAPI": ["org.overture.pog.obligation.ProofObligationList.add(org.overture.pog.obligation.SubTypeObligation.newInstance(lExp, org.overture.ast.factory.AstFactory.newABooleanBasicType(lExp.getLocation()), lType, question, assistantFactory))", "org.overture.pog.obligation.SubTypeObligation.newInstance(org.overture.pog.visitors.PExp,org.overture.ast.factory.AstFactory.newABooleanBasicType(lExp.getLocation()),org.overture.ast.types.PType,org.overture.pog.pub.IPOContextStack,org.overture.pog.pub.IPogAssistantFactory)"], "Fixed commit": "19b68696d82ac34461e4966f5df10391faf8a521", "Url": "https://api.github.com/repos/overturetool/overture", "Date": "2014-05-01T11:24:24Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["vpnInstOp.get().getVpnToDpnList()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (dpnListInVpn != null) { for (org.opendaylight.yang.gen.v1.urn.opendaylight.netvirt.l3vpn.rev130911.vpn.instance.op.data.vpn.instance.op.data.entry.VpnToDpnList dpn : dpnListInVpn) { java.math.BigInteger dpnId = dpn.getDpnId(); long vpnId = org.opendaylight.netvirt.natservice.internal.NatUtil.readVpnId(dataBroker, vpnInstOp.get().getVrfId()); if (create) { installDefNATRouteInDPN(dpnId, vpnId); }else { removeDefNATRouteInDPN(dpnId, vpnId); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2399/buggy-version/vpnservice.natservice.natservice-impl.src.main.java.org.opendaylight.netvirt.natservice.internal.ExternalNetworkListener.java", "BodyUseAPI": [], "Fixed commit": "a04ad5873989dd70136ca1f1cd137c515d7dcf7f", "Url": "https://api.github.com/repos/opendaylight/netvirt", "Date": "2016-09-17T14:26:07Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.servoframework.Servo.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (c == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7472/buggy-version/src.org.servoframework.http.AcceptThread.java", "BodyUseAPI": [], "Fixed commit": "c6d282f6e58327efccd11a21f32068072ffe9180", "Url": "https://api.github.com/repos/smakerdev/ServoFramework", "Date": "2017-07-23T13:12:53Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nestlabs.sdk.Thermostat.getTargetTemperatureC()", "com.nestlabs.sdk.Thermostat.getAmbientTemperatureC()", "com.nestlabs.sdk.Thermostat.getHvacMode()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((com.project.uoft.thermostat_interface.MainActivity.KEY_COOL.equals(mode)) && (init_target_temp > ambient_temp)) init_target_temp = ambient_temp; else if ((com.project.uoft.thermostat_interface.MainActivity.KEY_HEAT.equals(mode)) && (init_target_temp < ambient_temp)) init_target_temp = ambient_temp;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/746/buggy-version/app.src.main.java.com.project.uoft.thermostat_interface.MainActivity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "582b5d7266fd9d3dd6c3377cedde5f42b2f02716", "Url": "https://api.github.com/repos/marmot1234/Thermostat_Interface", "Date": "2016-07-25T19:43:56Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (temp_diff == 0) mSavingText.setText((\"\u00a2 \" + 0));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/746/buggy-version/app.src.main.java.com.project.uoft.thermostat_interface.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "582b5d7266fd9d3dd6c3377cedde5f42b2f02716", "Url": "https://api.github.com/repos/marmot1234/Thermostat_Interface", "Date": "2016-07-25T19:43:56Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (evoBoard.isUserControl()) cameraR = ((-(PI)) / 2.0F) - ((float) (evoBoard.getSelectedCreature().getRotation()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5674/buggy-version/src.evolv.io.EvolvioColor.java", "BodyUseAPI": ["evolv.io.Board.getSelectedCreature()", "evoBoard.getSelectedCreature().getRotation()"], "Fixed commit": "5976c84cb8504bede56e36220646bb43a2f3f522", "Url": "https://api.github.com/repos/UnknownEvil/evolv.io", "Date": "2017-04-03T20:59:30Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (exception != null) exception.printStackTrace();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2755/buggy-version/src.main.java.org.altbeacon.beacon.utils.eddystoneeid.EidResolver.java", "BodyUseAPI": ["java.lang.Exception.printStackTrace()"], "Fixed commit": "3305b1b5c738043fbc9f45f4f692394af59e378e", "Url": "https://api.github.com/repos/UHMC/android-beacon-library", "Date": "2016-07-28T02:01:15Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT)) { view.evaluateJavascript(mPluginManager.getInjectableJs(), null); view.evaluateJavascript(\"javascript: scmobile.utils.sendScmobileReadyEvent()\", null); }else { view.loadUrl(mPluginManager.getInjectableJs()); view.loadUrl(\"javascript: scmobile.utils.sendScmobileReadyEvent()\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1286/buggy-version/sitecore-js-android.src.net.sitecore.android.sdk.web.ScWebViewClient.java", "BodyUseAPI": [], "Fixed commit": "b4867f6b32039ca6cf1b424d1059a849740601fa", "Url": "https://api.github.com/repos/Sitecore/sitecore-android-sdk", "Date": "2013-12-05T16:04:32Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(possibles.isEmpty())) { for (java.util.Set<harvester.scheme.XPath.Pair<java.lang.String, java.lang.String>> pos : possibles) { java.lang.String xpath = baseXPath; for (harvester.scheme.XPath.Pair<java.lang.String, java.lang.String> e : pos) xpath = xpath.replace(e.fst, e.snd); allXPath.add(xpath); } }else allXPath.add(baseXPath);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5014/buggy-version/HtmlHarvester.src.harvester.scheme.XPath.java", "BodyUseAPI": [], "Fixed commit": "3654bd460974ef1d22e0ceb019d3ef7657f60db2", "Url": "https://api.github.com/repos/nyradr/HTML_Harvester", "Date": "2016-05-10T18:44:24Z"},
{"Line": "=>519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.blackducksoftware.integration.jira.task.issue.HubIssueTrackerHandler.createHubIssue(eventData.getComponentIssueUrl(),com.atlassian.jira.issue.Issue)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(hubIssueUrl)) { final com.blackducksoftware.integration.jira.task.conversion.output.HubIssueTrackerProperties issueTrackerProperties = new com.blackducksoftware.integration.jira.task.conversion.output.HubIssueTrackerProperties(hubIssueUrl, issue.getId()); addHubIssueUrlIssueProperty(notificationEvent, eventData, issueTrackerProperties, issue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4899/buggy-version/src.main.java.com.blackducksoftware.integration.jira.task.issue.JiraIssueHandler.java", "BodyUseAPI": [], "Fixed commit": "fc0efec516da75b3da3724689aae8d8af41bb5cc", "Url": "https://api.github.com/repos/blackducksoftware/hub-jira", "Date": "2017-05-03T19:09:50Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((recur.getWeekStartDay()) != null) { rrc.setWkst(recur.getWeekStartDay().name()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3941/buggy-version/bw-calendar-engine-ical.src.main.java.org.bedework.icalendar.RecurRuleComponents.java", "BodyUseAPI": ["org.bedework.icalendar.RecurRuleComponents.setWkst(recur.getWeekStartDay().name())", "net.fortuna.ical4j.model.Recur.getWeekStartDay()", "recur.getWeekStartDay().name()"], "Fixed commit": "3b17a03ea619113797dfdf975a66b40206cf36c6", "Url": "https://api.github.com/repos/Bedework/bw-calendar-engine", "Date": "2017-03-09T20:21:21Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((is0lates.GrandExchangeAlcher.GrandExchangeAlcher.f2pItemsOnly) || (!(isMember()))) && (alchItem.members)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6909/buggy-version/src.is0lates.GrandExchangeAlcher.GrandExchangeAlcher.java", "BodyUseAPI": [], "Fixed commit": "2fb675fe0498ca80e2fad9d1deba563ad396dd99", "Url": "https://api.github.com/repos/ChrisHemmens/powerbot", "Date": "2016-04-20T12:03:29Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.tgac.conan.process.ec.ErrorCorrector.getArgs()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((ecPairedEndArgs.getSingleEndCorrectedFiles()) != null) && (!(ecPairedEndArgs.getSingleEndCorrectedFiles().isEmpty()))) { lib.setSeFile(new uk.ac.tgac.conan.core.data.SeqFile(ecPairedEndArgs.getSingleEndCorrectedFiles().get(0))); }else { lib.setSeFile(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6054/buggy-version/src.main.java.uk.ac.tgac.rampart.tool.process.mecq.MecqProcess.java", "BodyUseAPI": ["uk.ac.tgac.conan.core.data.Library.setSeFile(uk.ac.tgac.conan.core.data.SeqFile)", "uk.ac.tgac.conan.process.ec.ErrorCorrectorPairedEndArgs.getSingleEndCorrectedFiles()", "ecPairedEndArgs.getSingleEndCorrectedFiles().get(int)"], "Fixed commit": "7fe8358d6cc4b1936cec4701558f69809dca1824", "Url": "https://api.github.com/repos/TGAC/RAMPART", "Date": "2013-05-03T15:32:28Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(data.getColumnIndex(AlexandriaContract.AuthorEntry.AUTHOR))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (authors == null) { authors = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/381/buggy-version/alexandria.app.src.main.java.it.jaschke.alexandria.BookDetail.java", "BodyUseAPI": [], "Fixed commit": "e5c62871dc2a0d318a2ff512e103613a53f19b0d", "Url": "https://api.github.com/repos/carlosrzisc/Udacity-SuperDuo", "Date": "2015-07-22T17:42:50Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (new com.appteam.nimbus.PersonalData(this).getStatus()) i = new android.content.Intent(this, com.appteam.nimbus.homeActivity.class); else i = new android.content.Intent(this, com.appteam.nimbus.Login.class);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2383/buggy-version/app.src.main.java.com.appteam.nimbus.AboutNimbusSplash.java", "BodyUseAPI": [], "Fixed commit": "50024ece2c192b8c993413cbb104f3bebf8ddf82", "Url": "https://api.github.com/repos/vijaya22/festnimbus", "Date": "2016-02-12T18:06:04Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (new com.appteam.nimbus.PersonalData(this).getStatus()) i = new android.content.Intent(this, com.appteam.nimbus.homeActivity.class); else i = new android.content.Intent(this, com.appteam.nimbus.Login.class);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2383/buggy-version/app.src.main.java.com.appteam.nimbus.AboutNimbusSplash.java", "BodyUseAPI": [], "Fixed commit": "50024ece2c192b8c993413cbb104f3bebf8ddf82", "Url": "https://api.github.com/repos/vijaya22/festnimbus", "Date": "2016-02-12T18:06:04Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.ednovo.gooru.client.mvp.gshelf.righttabs.MyCollectionsRightClusterView.COLLECTION.equalsIgnoreCase(currentTypeView)) || (currentTypeView.contains(org.ednovo.gooru.client.mvp.gshelf.righttabs.MyCollectionsRightClusterView.ASSESSMENT))) { lnkPreview.setVisible(isVisible); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2974/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.gshelf.righttabs.MyCollectionsRightClusterView.java", "BodyUseAPI": [], "Fixed commit": "58a82acdc071dd8dd979e57d465638ba36b06c9b", "Url": "https://api.github.com/repos/mitraj/Gooru-Web", "Date": "2015-07-20T13:18:41Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((message.getResponseData()) != null) && ((message.getResponseData().get(\"mail_send\")) != null)) { java.lang.Boolean mailSend = ((java.lang.Boolean) (message.getResponseData().get(\"mail_send\"))); mailSubject = ((java.lang.String) (((mailSend != null) && (mailSend.booleanValue())) ? message.getResponseData().get(\"mail_subject\") : null)); mailContent = ((java.lang.String) (((mailSend != null) && (mailSend.booleanValue())) ? message.getResponseData().get(\"mail_content\") : null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3137/buggy-version/lider-taskmanager-impl.src.main.java.tr.org.liderahenk.lider.taskmanager.TaskManagerImpl.java", "BodyUseAPI": ["message.getResponseData().get(java.lang.String)", "tr.org.liderahenk.lider.core.api.messaging.messages.ITaskStatusMessage.getResponseData()", "tr.org.liderahenk.lider.core.api.messaging.messages.ITaskStatusMessage.getResponseData()", "tr.org.liderahenk.lider.core.api.messaging.messages.ITaskStatusMessage.getResponseData()", "message.getResponseData().get(java.lang.String)", "message.getResponseData().get(java.lang.String)"], "Fixed commit": "489a1642ab90494592acf7980b1d86ab62e46be9", "Url": "https://api.github.com/repos/Pardus-LiderAhenk/lider", "Date": "2017-08-23T06:37:19Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(description.equals(\"\"))) resultXML += (\"<Description>\" + description) + \"</Description>\\n\"; else resultXML += \"<Description />\\n\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2427/buggy-version/project3.project3-searcher.src.edu.ucla.cs.cs144.AuctionSearch.java", "BodyUseAPI": [], "Fixed commit": "7db17527a307c0862ad5f05a82a59f71e5d4faa3", "Url": "https://api.github.com/repos/AmberYu/winter15-cs144", "Date": "2015-02-10T08:48:33Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentObject) != 0) (currentObject)--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8729/buggy-version/SpaceGolfLevelBuilder.src.panels.DrawSpace.java", "BodyUseAPI": [], "Fixed commit": "0c6b2d1664de85b704f4c393de71b7fe2fe3df04", "Url": "https://api.github.com/repos/gloges/SpaceGolf", "Date": "2015-03-18T00:48:20Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((property.getHint()) != null) { java.lang.String hintTranslation = plugin.translateLabel(property.getHint(), locale); labels.put(property.getHint(), hintTranslation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6243/buggy-version/jcommune-view.jcommune-web-controller.src.main.java.org.jtalks.jcommune.web.controller.PluginController.java", "BodyUseAPI": ["org.jtalks.jcommune.plugin.api.core.Plugin.translateLabel(property.getHint(),java.util.Locale)", "java.util.Map<java.lang.String, java.lang.String>.put(property.getHint(),java.lang.String)", "org.jtalks.jcommune.model.entity.PluginProperty.getHint()", "org.jtalks.jcommune.model.entity.PluginProperty.getHint()"], "Fixed commit": "b739b9756e7247caf367bd1dfc44c6753c5e9e93", "Url": "https://api.github.com/repos/jtalks-org/jcommune", "Date": "2014-07-29T09:24:32Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["amp.rabbit.topology.ProducingRoute.getExchange()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (ex.shouldDeclare()) { channel.exchangeDeclare(ex.getName(), ex.getExchangeType(), ex.isDurable(), ex.isAutoDelete(), ex.getArguments()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/182/buggy-version/java.amp-rabbit.src.main.java.amp.rabbit.transport.MultiConnectionRabbitSender.java", "BodyUseAPI": ["amp.rabbit.topology.Exchange.isAutoDelete()", "amp.rabbit.topology.Exchange.getArguments()", "com.rabbitmq.client.Channel.exchangeDeclare(ex.getName(),ex.getExchangeType(),ex.isDurable(),ex.isAutoDelete(),ex.getArguments())", "amp.rabbit.topology.Exchange.isDurable()", "amp.rabbit.topology.Exchange.getName()", "amp.rabbit.topology.Exchange.getExchangeType()"], "Fixed commit": "207ff6b1bbd934fbd9078f533d5ef197b8730e83", "Url": "https://api.github.com/repos/Berico-Technologies/AMP", "Date": "2013-10-17T14:53:52Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (heatingPoint.equals(b)) { if (((new wslf.geometry.Vector(heatingPoint, a).x) < 0) == reversed) { a.swap(b); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8238/buggy-version/pilot-problem.src.wslf.geometry.Segment.java", "BodyUseAPI": ["wslf.geometry.Point.swap(wslf.geometry.Point)"], "Fixed commit": "b611d8fb1056b5c60622d16413c1d15ab7502dea", "Url": "https://api.github.com/repos/WslF/2dWay", "Date": "2016-04-21T16:06:01Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (heatingPoint.equals(a)) { if (((new wslf.geometry.Vector(heatingPoint, b).x) > 0) == reversed) { a.swap(b); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8238/buggy-version/pilot-problem.src.wslf.geometry.Segment.java", "BodyUseAPI": ["wslf.geometry.Point.swap(wslf.geometry.Point)"], "Fixed commit": "b611d8fb1056b5c60622d16413c1d15ab7502dea", "Url": "https://api.github.com/repos/WslF/2dWay", "Date": "2016-04-21T16:06:01Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(cellDefinition.getDefaultValue())) { cell.setCellValue(java.lang.Double.valueOf(cellDefinition.getDefaultValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5421/buggy-version/src.main.java.com.adms.imex.excelformat.ExcelFileFormatWriter.java", "BodyUseAPI": ["java.lang.Double.valueOf(cellDefinition.getDefaultValue())", "com.adms.imex.excelformat.CellDefinition.getDefaultValue()", "org.apache.poi.ss.usermodel.Cell.setCellValue(java.lang.Double)"], "Fixed commit": "32d2ad23b75e7599f3c619f0768efe0ce0344f81", "Url": "https://api.github.com/repos/AdamsTHDev/admsImex", "Date": "2014-12-24T07:44:50Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((cellDataHolder.getValue()) != null) && ((cellDataHolder.getValue()) instanceof java.util.Date)) { cell.setCellValue(((java.util.Date) (cellDataHolder.getValue()))); }else { cell.setCellValue(((java.util.Date) (cellDefinition.parse(((java.lang.String) (cellDataHolder.getValue())))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5421/buggy-version/src.main.java.com.adms.imex.excelformat.ExcelFileFormatWriter.java", "BodyUseAPI": ["com.adms.imex.excelformat.CellDefinition.parse(((java.lang.String) (cellDataHolder.getValue())))", "com.adms.imex.excelformat.DataHolder.getValue()", "org.apache.poi.ss.usermodel.Cell.setCellValue(((java.util.Date) (cellDefinition.parse(((java.lang.String) (cellDataHolder.getValue()))))))", "org.apache.poi.ss.usermodel.Cell.setCellValue(((java.util.Date) (cellDataHolder.getValue())))", "com.adms.imex.excelformat.DataHolder.getValue()"], "Fixed commit": "32d2ad23b75e7599f3c619f0768efe0ce0344f81", "Url": "https://api.github.com/repos/AdamsTHDev/admsImex", "Date": "2014-12-24T07:44:50Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(cellDefinition.getDefaultValue())) { cell.setCellValue(cellDefinition.getDefaultValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5421/buggy-version/src.main.java.com.adms.imex.excelformat.ExcelFileFormatWriter.java", "BodyUseAPI": ["org.apache.poi.ss.usermodel.Cell.setCellValue(cellDefinition.getDefaultValue())", "com.adms.imex.excelformat.CellDefinition.getDefaultValue()"], "Fixed commit": "32d2ad23b75e7599f3c619f0768efe0ce0344f81", "Url": "https://api.github.com/repos/AdamsTHDev/admsImex", "Date": "2014-12-24T07:44:50Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.tehkode.permissions.bukkit.PermissionsEx.getPermissionManager().getDefaultGroup()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (g != defaultGroup) user.addGroup(g);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4813/buggy-version/src.main.java.com.matejdro.bukkit.mcnsa.challenges.PlayerPoints.java", "BodyUseAPI": ["ru.tehkode.permissions.PermissionUser.addGroup(ru.tehkode.permissions.PermissionGroup)"], "Fixed commit": "72293e393bd93a8e07c6cdf1b7b9253610293b0f", "Url": "https://api.github.com/repos/MCNSA/MCNSAChallenges", "Date": "2013-05-30T13:49:09Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((event.getType()) == (TreeCacheEvent.Type.NODE_ADDED)) || ((event.getType()) == (TreeCacheEvent.Type.NODE_UPDATED))) io.seldon.api.state.zk.ZkClientConfigHandler.logger.info((\"Message received from ZK : \" + (event.toString())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/596/buggy-version/server.src.io.seldon.api.state.zk.ZkClientConfigHandler.java", "BodyUseAPI": ["org.apache.log4j.Logger.info((\"Message received from ZK : \" + (event.toString())))", "org.apache.curator.framework.recipes.cache.TreeCacheEvent.toString()"], "Fixed commit": "d3483a447fa955d7585ebef7813a4e418ba0149a", "Url": "https://api.github.com/repos/SeldonIO/seldon-server", "Date": "2015-04-15T09:03:27Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.apache.camel.component.facebook.data.FacebookMethodsType>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((candidates.size()) > nGetMethods) { nameStyle = org.apache.camel.component.facebook.config.FacebookNameStyle.GET_AND_SEARCH; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2316/buggy-version/components.camel-facebook.src.main.java.org.apache.camel.component.facebook.FacebookEndpoint.java", "BodyUseAPI": [], "Fixed commit": "a5e82add99d0f4702977c502d4f818045c436a92", "Url": "https://api.github.com/repos/FergusNelson/camel", "Date": "2013-10-09T03:33:44Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((links) == null) return new java.util.ArrayList<hudson.plugins.sidebar_link.LinkAction>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5611/buggy-version/src.main.java.hudson.plugins.sidebar_link.ProjectLinks.java", "BodyUseAPI": [], "Fixed commit": "3551e641c2b43ef92ecf98e75dfabce48efba903", "Url": "https://api.github.com/repos/lvotypko/sidebar-link-plugin", "Date": "2015-04-21T14:40:52Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eventDetailsOpen) { getActivity().getFragmentManager().beginTransaction().setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE).remove(getFragmentManager().findFragmentById(R.id.drawer_layout)).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/222/buggy-version/app.src.main.java.com.swamphacks.swamphacks_android.events.EventsFragment.java", "BodyUseAPI": [], "Fixed commit": "dab2a4c020238c864f757ca33f1ca3b4bff30e57", "Url": "https://api.github.com/repos/swamphacks/2017-Mobile-Android", "Date": "2017-01-07T14:34:12Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (registrationOpen) { getActivity().getFragmentManager().beginTransaction().setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE).remove(getFragmentManager().findFragmentById(R.id.drawer_layout)).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/222/buggy-version/app.src.main.java.com.swamphacks.swamphacks_android.profile.VolunteerProfileFragment.java", "BodyUseAPI": [], "Fixed commit": "dab2a4c020238c864f757ca33f1ca3b4bff30e57", "Url": "https://api.github.com/repos/swamphacks/2017-Mobile-Android", "Date": "2017-01-07T14:34:12Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sponsorDetailOpen) { getActivity().getFragmentManager().beginTransaction().setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE).remove(getFragmentManager().findFragmentById(R.id.drawer_layout)).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/222/buggy-version/app.src.main.java.com.swamphacks.swamphacks_android.sponsors.SponsorsFragment.java", "BodyUseAPI": [], "Fixed commit": "dab2a4c020238c864f757ca33f1ca3b4bff30e57", "Url": "https://api.github.com/repos/swamphacks/2017-Mobile-Android", "Date": "2017-01-07T14:34:12Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((split.length) < 2) { split = new java.lang.String[]{ split[0], \"\" }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2256/buggy-version/src.main.java.com.codemagi.burp.parser.HttpRequest.java", "BodyUseAPI": [], "Fixed commit": "17d8102810fea65c64035a95c02c613cbbdcdb23", "Url": "https://api.github.com/repos/myvyang/burp-suite-utils", "Date": "2017-08-04T01:41:58Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((split.length) < 2) { split = new java.lang.String[]{ split[0], \"\" }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2256/buggy-version/src.main.java.com.codemagi.burp.parser.HttpResponse.java", "BodyUseAPI": [], "Fixed commit": "17d8102810fea65c64035a95c02c613cbbdcdb23", "Url": "https://api.github.com/repos/myvyang/burp-suite-utils", "Date": "2017-08-04T01:41:58Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"arm\".equalsIgnoreCase(osgiArch)) { libName = \"hidapi-jni-arm\"; }else if (\"x86\".equals(osgiArch)) { libName = \"hidapi-jni-32\"; }else { libName = \"hidapi-jni-64\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3684/buggy-version/bundles.binding.org.openhab.binding.wmr100.src.main.java.org.openhab.binding.wmr100.internal.WMR100Activator.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "0ca949b434394b25f5c82461176152a607172538", "Url": "https://api.github.com/repos/Gecko33/openhab", "Date": "2013-12-07T00:07:59Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (view != null) { if ((((view.getClass()) == (android.widget.Button.class)) && ((view.getId()) != (R.id.btnNavigationBack))) && ((view.getId()) != (R.id.btnNavigationHome))) { ((android.widget.Button) (view)).setTextSize(fontSize); }else if (((view.getClass()) == (android.widget.TextView.class)) && (!(((android.widget.TextView) (view)).getText().toString().trim().equals(\"\")))) { ((android.widget.TextView) (view)).setTextSize(fontSize); }else if (((view.getClass()) == (android.widget.RadioButton.class)) && (!(((android.widget.RadioButton) (view)).getText().toString().trim().equals(\"\")))) { ((android.widget.RadioButton) (view)).setTextSize(fontSize); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/9216/buggy-version/src.org.easyaccess.Utils.java", "BodyUseAPI": ["android.view.View.getClass()", "android.view.View.getClass()", "android.view.View.getId()", "android.view.View.getId()", "android.view.View.getClass()"], "Fixed commit": "4cc5b9b2f4e610efde1ed620dbf68a5f8ebfe38b", "Url": "https://api.github.com/repos/saurabh2590/EasyAccess", "Date": "2014-12-07T00:11:25Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (view != null) { if ((((view.getClass()) == (android.widget.Button.class)) && ((view.getId()) != (R.id.btnNavigationBack))) && ((view.getId()) != (R.id.btnNavigationHome))) { if (bgColor != (view.getContext().getResources().getColor(R.color.card_background_regular))) { ((android.widget.Button) (view)).setBackgroundColor(bgColor); }else { ((android.widget.Button) (view)).setBackgroundDrawable(((android.widget.Button) (view)).getContext().getResources().getDrawable(R.drawable.card)); } ((android.widget.Button) (view)).setTextColor(fgColor); }else if (((view.getClass()) == (android.widget.TextView.class)) && (!(((android.widget.TextView) (view)).getText().toString().trim().equals(\"\")))) { if (bgColor != (view.getContext().getResources().getColor(R.color.card_background_regular))) { ((android.widget.TextView) (view)).setBackgroundColor(bgColor); }else { ((android.widget.TextView) (view)).setBackgroundResource(Color.TRANSPARENT); } ((android.widget.TextView) (view)).setTextColor(fgColor); }else if (((view.getClass()) == (android.widget.RadioButton.class)) && (!(((android.widget.RadioButton) (view)).getText().toString().trim().equals(\"\")))) { if (bgColor != (view.getContext().getResources().getColor(R.color.card_background_regular))) { ((android.widget.RadioButton) (view)).setBackgroundColor(bgColor); }else { ((android.widget.RadioButton) (view)).setBackgroundResource(Color.TRANSPARENT); } ((android.widget.RadioButton) (view)).setTextColor(fgColor); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/9216/buggy-version/src.org.easyaccess.Utils.java", "BodyUseAPI": ["android.view.View.getId()", "view.getContext().getResources().getColor(R.color.card_background_regular)", "android.view.View.getClass()", "android.view.View.getId()", "android.view.View.getContext()", "android.view.View.getClass()", "view.getContext().getResources()", "view.getContext().getResources().getColor(R.color.card_background_regular)", "android.view.View.getContext()", "view.getContext().getResources().getColor(R.color.card_background_regular)", "view.getContext().getResources()", "android.view.View.getClass()", "android.view.View.getContext()", "view.getContext().getResources()"], "Fixed commit": "4cc5b9b2f4e610efde1ed620dbf68a5f8ebfe38b", "Url": "https://api.github.com/repos/saurabh2590/EasyAccess", "Date": "2014-12-07T00:11:25Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (view != null) { if ((((view.getClass()) == (android.widget.Button.class)) && ((view.getId()) != (R.id.btnNavigationBack))) && ((view.getId()) != (R.id.btnNavigationHome))) { switch (fontType) { case org.easyaccess.Utils.NONE : ((android.widget.Button) (view)).setTypeface(null, Typeface.BOLD); break; case org.easyaccess.Utils.SERIF : ((android.widget.Button) (view)).setTypeface(Typeface.SERIF); break; case org.easyaccess.Utils.MONOSPACE : ((android.widget.Button) (view)).setTypeface(Typeface.MONOSPACE); break; } }else if (((view.getClass()) == (android.widget.TextView.class)) && (!(((android.widget.TextView) (view)).getText().toString().trim().equals(\"\")))) { switch (fontType) { case org.easyaccess.Utils.NONE : ((android.widget.TextView) (view)).setTypeface(null, Typeface.NORMAL); break; case org.easyaccess.Utils.SERIF : ((android.widget.TextView) (view)).setTypeface(Typeface.SERIF); break; case org.easyaccess.Utils.MONOSPACE : ((android.widget.TextView) (view)).setTypeface(Typeface.MONOSPACE); break; } }else if (((view.getClass()) == (android.widget.RadioButton.class)) && (!(((android.widget.RadioButton) (view)).getText().toString().trim().equals(\"\")))) { switch (fontType) { case org.easyaccess.Utils.NONE : ((android.widget.RadioButton) (view)).setTypeface(null, Typeface.NORMAL); break; case org.easyaccess.Utils.SERIF : ((android.widget.RadioButton) (view)).setTypeface(Typeface.SERIF); break; case org.easyaccess.Utils.MONOSPACE : ((android.widget.RadioButton) (view)).setTypeface(Typeface.MONOSPACE); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/9216/buggy-version/src.org.easyaccess.Utils.java", "BodyUseAPI": ["android.view.View.getId()", "android.view.View.getClass()", "android.view.View.getClass()", "android.view.View.getId()", "android.view.View.getClass()"], "Fixed commit": "4cc5b9b2f4e610efde1ed620dbf68a5f8ebfe38b", "Url": "https://api.github.com/repos/saurabh2590/EasyAccess", "Date": "2014-12-07T00:11:25Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(log.Log.getInitilized())) { log.Log.initLog(LogType.NOLOG, rules, gridType, dimension, cellType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/539/buggy-version/src.game.Controller.java", "BodyUseAPI": [], "Fixed commit": "b3738fd8f1ed8a8401e88248434da1232ef191d7", "Url": "https://api.github.com/repos/14775/FuckMAK", "Date": "2017-10-28T18:49:05Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.tajo.plan.JoinNode.getJoinQual()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((joinQual.getLeftExpr().getType()) == (EvalType.FIELD)) { leftColumn = joinQual.getLeftExpr(); }else if ((joinQual.getLeftExpr().getType()) == (EvalType.CAST)) { leftColumn = ((org.apache.tajo.plan.FieldEval) (((org.apache.tajo.plan.CastEval) (joinQual.getLeftExpr())).getOperand())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4743/buggy-version/tajo-plan.src.main.java.org.apache.tajo.plan.LogicalOptimizer.java", "BodyUseAPI": ["org.apache.tajo.plan.BinaryEval.getLeftExpr()", "joinQual.getLeftExpr().getType()", "((org.apache.tajo.plan.CastEval) (joinQual.getLeftExpr())).getOperand()", "org.apache.tajo.plan.BinaryEval.getLeftExpr()", "org.apache.tajo.plan.BinaryEval.getLeftExpr()"], "Fixed commit": "c9cb80560930a3332bc731c6922501e5bd87a4dc", "Url": "https://api.github.com/repos/jihoonson/tajo", "Date": "2015-07-02T07:19:18Z"},
{"Line": "=>678", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((transportDetails.gettransportMethodId()) == 6) { if ((configurationTransportManager.getWSSenderList(transportId).size()) == 0) { com.ut.dph.model.configurationWebServiceSenders confWSSender = new com.ut.dph.model.configurationWebServiceSenders(); confWSSender.setTransportId(transportId); confWSSender.setDomain(domain1); configurationTransportManager.saveWSSender(confWSSender); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4310/buggy-version/src.main.java.com.ut.dph.controller.adminConfigController.java", "BodyUseAPI": [], "Fixed commit": "33ef3de49e120581b6903f563ba59073aa098dc0", "Url": "https://api.github.com/repos/thenhkid/universalTranslator", "Date": "2015-07-20T21:41:53Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.position) < 1) { this.position = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8492/buggy-version/src.br.com.os.model.Passenger.java", "BodyUseAPI": [], "Fixed commit": "c8020e7228b8766b648fa5a25b23e29bc21ac797", "Url": "https://api.github.com/repos/ajeferson/CrazyTrain", "Date": "2016-03-14T01:30:42Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPlayer) != null) { currentPlayer.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8921/buggy-version/src.main.java.fun.personalUse.mainAlbumTunesApp.AlbumTunesController.java", "BodyUseAPI": [], "Fixed commit": "08ed6d322d1f573d2c4ca68f75402a7a0d6bc9ed", "Url": "https://api.github.com/repos/Kneuman0/AlbumTunes", "Date": "2016-07-08T02:12:50Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(database.checkConnection())) { database.open(); if (!(database.checkConnection())) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4832/buggy-version/src.org.melonbrew.fe.database.databases.SQLDB.java", "BodyUseAPI": ["org.melonbrew.fe.SQLibrary.Database.checkConnection()", "org.melonbrew.fe.SQLibrary.Database.open()"], "Fixed commit": "8677e1bd1e715a87d441c6414e2954efa833ad88", "Url": "https://api.github.com/repos/OdiumxXx/Fe", "Date": "2012-09-26T21:45:56Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(playerDB.containsKey(name))) newPlayer(name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1958/buggy-version/src.main.java.ccm.pay2spawn.permissions.PermissionsDB.java", "BodyUseAPI": ["ccm.pay2spawn.permissions.PermissionsDB.newPlayer(java.lang.String)"], "Fixed commit": "602b4b5488e8d08bf9022ff50593991665977233", "Url": "https://api.github.com/repos/CCM-Modding/Pay2Spawn", "Date": "2014-07-16T00:47:26Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rankB) == (com.tr.rp.ranks.Rank.MAX)) { return com.tr.rp.ranks.Rank.MAX; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6096/buggy-version/src.main.java.com.tr.rp.ast.expressions.RankExpr.java", "BodyUseAPI": [], "Fixed commit": "87d788f0b10dc8ce86838344b2f37a9bf64f5015", "Url": "https://api.github.com/repos/tjitze/RankPL", "Date": "2017-07-25T22:32:58Z"},
{"Line": "=>1049", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(stateReqList.isEmpty())) { dtLog.writeEntry(myState, ((((stateReqList.get(1).getTransaction()) + \";\") + \"UPset :\") + (upSet))); oldDecisionListAbort.add(stateReqList.get(1)); java.lang.System.out.println((\"The abort list is\" + (oldDecisionListAbort))); }else { dtLog.writeEntry(myState, ((((currentAction.getTransaction()) + \";\") + \"UPset :\") + (upSet))); oldDecisionListAbort.add(currentAction); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4183/buggy-version/src.ut.distcomp.framework.Node.java", "BodyUseAPI": ["java.util.ArrayList<ut.distcomp.framework.MessageParser>.add(stateReqList.get(1))", "ut.distcomp.framework.DTLog.writeEntry(ut.distcomp.framework.StateAC,((((stateReqList.get(1).getTransaction()) + \";\") + \"UPset :\") + (upSet)))", "stateReqList.get(1).getTransaction()", "java.util.ArrayList<ut.distcomp.framework.MessageParser>.get(int)", "java.util.ArrayList<ut.distcomp.framework.MessageParser>.get(int)"], "Fixed commit": "60dda6bf272d06df9b500b0f6dbd896b40311f04", "Url": "https://api.github.com/repos/anaptyxis/ThreePC", "Date": "2015-10-10T04:53:20Z"},
{"Line": "=>1030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(stateReqList.isEmpty())) upSet = stateReqList.get(0).getUpSet(); else { upSet = currentAction.getUpSet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4183/buggy-version/src.ut.distcomp.framework.Node.java", "BodyUseAPI": ["stateReqList.get(0).getUpSet()", "java.util.ArrayList<ut.distcomp.framework.MessageParser>.get(int)"], "Fixed commit": "60dda6bf272d06df9b500b0f6dbd896b40311f04", "Url": "https://api.github.com/repos/anaptyxis/ThreePC", "Date": "2015-10-10T04:53:20Z"},
{"Line": "=>1018", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(stateReqList.isEmpty())) actionMessageParser = stateReqList.get(0); else actionMessageParser = currentAction;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4183/buggy-version/src.ut.distcomp.framework.Node.java", "BodyUseAPI": ["java.util.ArrayList<ut.distcomp.framework.MessageParser>.get(int)"], "Fixed commit": "60dda6bf272d06df9b500b0f6dbd896b40311f04", "Url": "https://api.github.com/repos/anaptyxis/ThreePC", "Date": "2015-10-10T04:53:20Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(noReturn)) { if ((this.reductionOperation) == null) throw new java.lang.UnsupportedOperationException((\"NO REDUCTION OBJECT HAS BEEN SPECIFIED FOR THE GROUP. EITHER A REDUCTION OBJECT MUST BE SPECIFIED,\\n\" + \"OR THE SUB-RESULTS MUST BE RETRIEVED INDIVIDUALLY!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8458/buggy-version/ParaTaskLambda.src.pt.runtime.TaskIDGroup.java", "BodyUseAPI": [], "Fixed commit": "bc9286773453de6b9466bc6bd569636333c798c6", "Url": "https://api.github.com/repos/ParallelAndReconfigurableComputing/ParallelTask", "Date": "2017-08-29T05:48:37Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (noReturn) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8458/buggy-version/ParaTaskLambda.src.pt.runtime.TaskIDGroup.java", "BodyUseAPI": [], "Fixed commit": "bc9286773453de6b9466bc6bd569636333c798c6", "Url": "https://api.github.com/repos/ParallelAndReconfigurableComputing/ParallelTask", "Date": "2017-08-29T05:48:37Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(images.get(position).isSelected)) && ((countSelected) == (com.darsh.multipleimageselect.helpers.Constants.limit))) { android.widget.Toast.makeText(getApplicationContext(), java.lang.String.format(getString(R.string.limit_exceeded), Constants.limit), Toast.LENGTH_LONG).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5030/buggy-version/multipleimageselect.src.main.java.com.darsh.multipleimageselect.activities.ImageSelectActivity.java", "BodyUseAPI": [], "Fixed commit": "d54c6dbd3c35ab15bc314537d0cd88bd0d14c4c6", "Url": "https://api.github.com/repos/ahmadplero/MultipleImageSelect", "Date": "2015-09-28T18:28:21Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["GameObjects.CarPhysics.getMagnitude()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (size != 0) { x /= size; y /= size; z /= size; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8988/buggy-version/OtoParkerProject.src.GameObjects.CarPhysics.java", "BodyUseAPI": [], "Fixed commit": "d65bb529bced31da914be110e1c4a4b6ed3dd005", "Url": "https://api.github.com/repos/celikkoseoglu/CS319-Bilkent", "Date": "2016-12-25T12:25:45Z"},
{"Line": "=>662", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (individualId > 0) { individualDBAdaptor.checkId(individualId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/167/buggy-version/opencga-catalog.src.main.java.org.opencb.opencga.catalog.managers.SampleManager.java", "BodyUseAPI": ["org.opencb.opencga.catalog.managers.SampleManager.checkId(long)"], "Fixed commit": "2b0b6f53d1748b3e4a4add6b261569d38688e491", "Url": "https://api.github.com/repos/opencb/opencga", "Date": "2017-01-31T09:23:25Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newNode.matchAny) { currentParent.wildChild = newNode; }else if (newNode.greedyMatchAny) { currentParent.greedyWildChild = newNode; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1831/buggy-version/api.src.main.java.com.flipkart.poseidon.ds.trie.Trie.java", "BodyUseAPI": [], "Fixed commit": "3055951473f654d6c1b4be1912cddedcf8758036", "Url": "https://api.github.com/repos/flipkart-incubator/Poseidon", "Date": "2016-07-25T09:32:39Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((kvp.length) == 2) { envMap.put(kvp[0], kvp[1]); }else if ((kvp.length) == 1) { envMap.put(kvp[0], \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2499/buggy-version/code.implementation.docker.common.src.main.java.io.cattle.platform.docker.transform.DockerTransformerImpl.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "97457634427dc74cf3e7186aa87753c9622e5218", "Url": "https://api.github.com/repos/rancher/cattle", "Date": "2015-05-05T23:47:15Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"\".equals(item.getText()))) owner.checkin(java.lang.Integer.parseInt(item.getText())); else java.lang.System.out.println(\"Empty field\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6745/buggy-version/src.check.Checkin.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "javax.swing.JTextField.getText()", "libarypackage.Libary.checkin(int)"], "Fixed commit": "5b157160dbd7ba5fd617577244147f1297ec3373", "Url": "https://api.github.com/repos/rukeyscott/Library", "Date": "2015-04-19T19:23:42Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (current != (depart)) destroy(current);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2711/buggy-version/pc.src.pathfinding.astar.AStarCourbe.java", "BodyUseAPI": ["pathfinding.astar.AStarCourbe.destroy(pathfinding.astar.AStarCourbeNode)"], "Fixed commit": "76743c7ec3cce6aecb88aba07a7fa707d7430b8a", "Url": "https://api.github.com/repos/INTechSenpai/moon-rover", "Date": "2017-05-11T12:43:40Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityTargetEvent.getTarget()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(player.isOnline())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6991/buggy-version/src.main.java.com.lenis0012.bukkit.loginsecurity.modules.general.PlayerListener.java", "BodyUseAPI": [], "Fixed commit": "6228b9f3d85fbb8ef89ebfa93fa96566297477a5", "Url": "https://api.github.com/repos/lenis0012/LoginSecurity-2", "Date": "2016-07-28T21:28:50Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (bmiMessage != null) { logService.log(LogService.LOG_DEBUG, (\"Registering existing module with message: \" + (bmiMessage.toString()))); eventHandler.handleEvent(new com.buglabs.bug.bmi.BMIModuleEvent(bmiMessage)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1510/buggy-version/com.buglabs.bug.bmi.com.buglabs.bug.bmi.Activator.java", "BodyUseAPI": ["com.buglabs.bug.bmi.sysfs.BMIDevice.toString()", "org.osgi.service.log.LogService.log(LogService.LOG_DEBUG,(\"Registering existing module with message: \" + (bmiMessage.toString())))", "com.buglabs.bug.bmi.BMIModuleEventHandler.handleEvent(com.buglabs.bug.bmi.BMIModuleEvent)"], "Fixed commit": "bf09d21ec950f6bf27c923ffd03ca56d2296c84b", "Url": "https://api.github.com/repos/buglabs/bug-osgi", "Date": "2011-07-12T23:31:24Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.transitionModel.get(ngram[0])) != null) list = this.transitionModel.get(ngram[0]); else list = new java.util.ArrayList<>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4111/buggy-version/src.PartsOfSpeech.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.ArrayList<PartsOfSpeech.ProbabilityPair>>.get(java.lang.String)"], "Fixed commit": "a05cdbbbbb68f7301d773ba2331a7e1c9ba27d51", "Url": "https://api.github.com/repos/danielmhair/partsOfSpeech", "Date": "2016-11-15T06:57:51Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getWidget().getNumberOfSeries()) == 0) { seriesAndDataLabelsRendered = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6304/buggy-version/addon.src.main.java.com.vaadin.addon.charts.shared.ChartConnector.java", "BodyUseAPI": [], "Fixed commit": "5a77b1a7e5194951f261c46d974d1b8111211493", "Url": "https://api.github.com/repos/vaadin/charts", "Date": "2017-06-09T10:57:16Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jsOverlay.getSeries()) != null) { return jsOverlay.getSeries().length(); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6304/buggy-version/addon.src.main.java.com.vaadin.addon.charts.client.ui.HighchartWidget.java", "BodyUseAPI": ["jsOverlay.getSeries().length()", "com.vaadin.addon.charts.client.ui.HighchartJsOverlay.getSeries()"], "Fixed commit": "5a77b1a7e5194951f261c46d974d1b8111211493", "Url": "https://api.github.com/repos/vaadin/charts", "Date": "2017-06-09T10:57:16Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isHome()) { org.xdty.smilehelper.MyWindowManager.removeAddWindow(getApplicationContext()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3052/buggy-version/src.org.xdty.smilehelper.FloatWindowService.java", "BodyUseAPI": [], "Fixed commit": "763b91e99878866a09b10533e0bd317713f93a08", "Url": "https://api.github.com/repos/xdtianyu/SmileHelper", "Date": "2013-09-23T08:46:11Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (templateIdObj instanceof java.lang.Long) { templateId = ((java.lang.Long) (templateIdObj)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1721/buggy-version/src.main.java.org.olat.course.config.CourseConfig.java", "BodyUseAPI": [], "Fixed commit": "743b5469316157a1457ba1ba0eec86b417481ea3", "Url": "https://api.github.com/repos/klemens/openolat", "Date": "2015-05-11T09:26:01Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (view == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7626/buggy-version/base_project.src.main.java.com.artemkopan.baseproject.utils.animations.AnimUtils.java", "BodyUseAPI": [], "Fixed commit": "563f427e8892d543888938174f8b64c6a1c63638", "Url": "https://api.github.com/repos/artemkopan/BaseProject", "Date": "2016-09-21T14:48:56Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (gradeLevel != null) { list = teacherRepo.findByGradeLevel(gradeLevel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2505/buggy-version/src.main.java.com.libertymutual.goforcode.schoolmanagementsystem.api.TeacherApiController.java", "BodyUseAPI": ["com.libertymutual.goforcode.schoolmanagementsystem.repositories.TeacherRepository.findByGradeLevel(java.lang.Integer)"], "Fixed commit": "0d8735dab3cc0907c79aecb571cf6c76e1f66cd1", "Url": "https://api.github.com/repos/romangalanti/school-management-system", "Date": "2017-10-11T20:26:43Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.apache.storm.utils.TupleUtils.isTick(input))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5656/buggy-version/external.elasticsearch.src.main.java.com.digitalpebble.stormcrawler.elasticsearch.metrics.StatusMetricsBolt.java", "BodyUseAPI": [], "Fixed commit": "a0b42e19a5e6cb3595f0adc15ca07952c0c7e688", "Url": "https://api.github.com/repos/DigitalPebble/storm-crawler", "Date": "2017-03-20T12:35:58Z"},
{"Line": "=>969", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(deviceSupportMultiPane())) layout.closeDrawer(drawer);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1144/buggy-version/MaterialNavigationDrawerLib.src.main.java.it.neokree.materialnavigationdrawer.MaterialNavigationDrawer.java", "BodyUseAPI": [], "Fixed commit": "9b6919125424191e2933d050d6327af9eecf0fdd", "Url": "https://api.github.com/repos/filipebezerra/HorariosRmtcGoiania", "Date": "2015-03-11T23:42:44Z"},
{"Line": "=>1287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (stack != null) { stackIds.add(java.lang.String.valueOf(stack.getTypeId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4936/buggy-version/src.fr.crafter.tickleman.RealShop.RealShopPlugin.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.lang.String.valueOf(stack.getTypeId())", "org.bukkit.inventory.ItemStack.getTypeId()"], "Fixed commit": "addf5fbfeec9d67f73aa03bf9f2bbc34b9cfe8d3", "Url": "https://api.github.com/repos/RedNifre/RealShop", "Date": "2011-05-24T10:14:55Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (s == (gruppe19.client.ktn.ServerAPI.Status.REJECTED)) { gruppe19.server.db.DatabaseAPI.removeParticipant(connectedUser, a); a.getUserList().remove(connectedUser); send(new gruppe19.server.ktn.ServerMessage('c', a, gruppe19.server.ktn.ServerMessage.Type.Request)); }else { gruppe19.server.db.DatabaseAPI.changeParticipantStatus(connectedUser, a, s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1486/buggy-version/src.gruppe19.server.ktn.Server.java", "BodyUseAPI": ["gruppe19.server.db.DatabaseAPI.changeParticipantStatus(gruppe19.model.User,gruppe19.model.Appointment,gruppe19.client.ktn.ServerAPI.Status)"], "Fixed commit": "de7f76db0bac73a522d2cff348c0b5cbfe627941", "Url": "https://api.github.com/repos/LeoWestby/Kalendersystem", "Date": "2012-03-23T13:41:45Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (requestParams.containsKey(\"assigneeLike\")) { request.setAssigneeLike(requestParams.get(\"assigneeLike\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1867/buggy-version/modules.activiti-rest.src.main.java.org.activiti.rest.service.api.runtime.task.TaskCollectionResource.java", "BodyUseAPI": ["org.activiti.rest.service.api.runtime.task.TaskQueryRequest.setAssigneeLike(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "d2df0c569f5440996f1d96354d96f29a77101277", "Url": "https://api.github.com/repos/Activiti/Activiti", "Date": "2016-07-01T14:39:59Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (m.getCurrentLevel().hasWon()) { m.getCurrentLevel().setLevelComplete(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6839/buggy-version/src.playerController.CompleteLevelMove.java", "BodyUseAPI": ["m.getCurrentLevel().setLevelComplete(boolean)", "playerController.CompleteLevelMove.getCurrentLevel()"], "Fixed commit": "cfb6f5418fc13e49128ad8e79fc7a29f24ecc764", "Url": "https://api.github.com/repos/TuckerHaydon/Kabasuji-Cebriones", "Date": "2016-04-27T23:31:25Z"},
{"Line": "=>547", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (domain.isCurrentHeuristicConsistent()) { assert (this.fHat) >= (this.f); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7459/buggy-version/src.main.java.org.cs4j.core.algorithms.EES.java", "BodyUseAPI": [], "Fixed commit": "c1a7fba00a8d8f665440d9f599b27055a941e072", "Url": "https://api.github.com/repos/sepetnit/j-heuristic-search-framework", "Date": "2015-11-29T06:46:26Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((ForgotPassword.isEnabled()) == false) || ((LoginButton.isEnabled()) == false)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5677/buggy-version/Project.PresentationLayer.LoginPanel.java", "BodyUseAPI": [], "Fixed commit": "8e7109eb7dea11d42a2d6af9416680f93829fa93", "Url": "https://api.github.com/repos/t4kmode/CSE110FA14", "Date": "2014-12-08T09:07:07Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((ForgotPassword.isEnabled()) == false) || ((LoginButton.isEnabled()) == false)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5677/buggy-version/Project.PresentationLayer.LoginPanel.java", "BodyUseAPI": [], "Fixed commit": "8e7109eb7dea11d42a2d6af9416680f93829fa93", "Url": "https://api.github.com/repos/t4kmode/CSE110FA14", "Date": "2014-12-08T09:07:07Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((union.size()) == 0) { return new edu.umass.ciir.models.SimilarityMeasure(0.0, \"Jaccard Coefficient\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8897/buggy-version/src.main.java.edu.umass.ciir.models.JaccardSimilarity.java", "BodyUseAPI": [], "Fixed commit": "bcf994bb16103a8d20a0d81c6b26b1f4de50d76e", "Url": "https://api.github.com/repos/daltonj/CIIRShared", "Date": "2012-07-18T19:43:02Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["co.edu.uniandes.csw.astroDevelopers.noticia.master.logic.ejb.NoticiaMasterLogicService.noticiaSearch(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((news.size()) != 0) return new java.lang.String(wordList.deleteCharAt(((wordList.length()) - 1))); else return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4947/buggy-version/src.KanuaUML12.logic.src.main.java.co.edu.uniandes.csw.astroDevelopers.noticia.master.logic.ejb.NoticiaMasterLogicService.java", "BodyUseAPI": [], "Fixed commit": "35b96bbfb3b7fa9b294db459d30b337cd472548c", "Url": "https://api.github.com/repos/Astrodevelopers/Kanua", "Date": "2014-12-01T02:06:00Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.drill.exec.ops.StatusHandler.class.isInstance(outcomeListener)) { final java.lang.String fragmentName = ((org.apache.drill.exec.ops.StatusHandler) (outcomeListener)).fragmentName; org.apache.drill.exec.rpc.data.DataTunnel.logger.debug(\"ACQUIRE sending semaphore: permits {}. fragment: {}\", sendingSemaphore.availablePermits(), fragmentName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1701/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.rpc.data.DataTunnel.java", "BodyUseAPI": [], "Fixed commit": "35287de9e17c992183423b5dde03526c712a76f4", "Url": "https://api.github.com/repos/adeneche/incubator-drill", "Date": "2016-03-21T08:46:19Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.drill.exec.ops.StatusHandler.class.isInstance(outcomeListener)) { final java.lang.String fragmentName = ((org.apache.drill.exec.ops.StatusHandler) (outcomeListener)).fragmentName; org.apache.drill.exec.rpc.data.DataTunnel.logger.debug(\"RELEASE sending semaphore [{}]: permits {}. fragment: {}\", state, sendingSemaphore.availablePermits(), fragmentName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1701/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.rpc.data.DataTunnel.java", "BodyUseAPI": [], "Fixed commit": "35287de9e17c992183423b5dde03526c712a76f4", "Url": "https://api.github.com/repos/adeneche/incubator-drill", "Date": "2016-03-21T08:46:19Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.evolved.automata.android.lisp.guibuilder.fragments.CodeEditFragment.getLastClickedToolAreaType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((com.evolved.automata.android.lisp.guibuilder.DropboxManager.get()) == null) && (type == (com.evolved.automata.android.lisp.guibuilder.fragments.CodeEditFragment.ToolAreaType.DROPBOX))) { type = com.evolved.automata.android.lisp.guibuilder.fragments.CodeEditFragment.ToolAreaType.CODE_TEMPLATE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7972/buggy-version/projects.android_studio.JavaLisp.AndroidLispGuiBuilder.src.main.java.com.evolved.automata.android.lisp.guibuilder.fragments.CodeEditFragment.java", "BodyUseAPI": [], "Fixed commit": "eabba0fe53156d3cd8b1252134939a221e89d66f", "Url": "https://api.github.com/repos/hexagonc/Android-Lisp", "Date": "2017-04-09T22:55:51Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((responseImpl.type()) != null) { responseImpl.fullHttpReponse().headers().set(de.yourinspiration.jexpresso.core.CONTENT_TYPE, responseImpl.type()); }else { responseImpl.fullHttpReponse().headers().set(de.yourinspiration.jexpresso.core.CONTENT_TYPE, ContentType.TEXT_PLAIN.type()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7900/buggy-version/src.main.java.de.yourinspiration.jexpresso.core.MiddlewareChannelHandler.java", "BodyUseAPI": ["de.yourinspiration.jexpresso.core.ResponseImpl.fullHttpReponse()", "responseImpl.fullHttpReponse().headers()", "de.yourinspiration.jexpresso.core.ResponseImpl.fullHttpReponse()", "responseImpl.fullHttpReponse().headers().set(de.yourinspiration.jexpresso.core.CONTENT_TYPE,responseImpl.type())", "de.yourinspiration.jexpresso.core.ResponseImpl.type()", "responseImpl.fullHttpReponse().headers()", "responseImpl.fullHttpReponse().headers().set(de.yourinspiration.jexpresso.core.CONTENT_TYPE,ContentType.TEXT_PLAIN.type())"], "Fixed commit": "0b7aa4c7f30b886f401d89d92903e215bb757831", "Url": "https://api.github.com/repos/Yourinspiration/jexpresso", "Date": "2014-09-01T13:05:28Z"},
{"Line": "=>563", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mcp.order.gateway.control.TermService.findOneByGameCodeAndCode(body.getGameCode(),body.getTermCode())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (t == null) { throw new com.mcp.order.exception.CoreException(com.mcp.order.exception.ErrCode.E2003); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6741/buggy-version/mcp-order-gateway.src.main.java.com.mcp.order.gateway.control.QueryControl.java", "BodyUseAPI": [], "Fixed commit": "cb0578046b6b5bb06b35903a0ea333e7d07d31bb", "Url": "https://api.github.com/repos/limiteegod/mcp", "Date": "2014-09-18T09:48:30Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<org.w3c.dom.Node>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((temp.getNodeType()) == 2) node = ((org.w3c.dom.Attr) (temp)).getOwnerElement(); else node = current_Node.get(i).getParentNode();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7851/buggy-version/src.main.java.EvalVistor.java", "BodyUseAPI": [], "Fixed commit": "0d8b9e0a80ba3782fbfbc4fa00c85a7df69d1c44", "Url": "https://api.github.com/repos/RemindD/xquery-processor", "Date": "2017-02-02T22:35:27Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getNodeType()) == 2) { str = node.getTextContent(); resStr.append(((((node.getNodeName()) + \"=\\\"\") + str) + \"\\\"\")); resStr.append('\\n'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7851/buggy-version/src.main.java.XPath_Runner.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "org.w3c.dom.Node.getNodeName()", "org.w3c.dom.Node.getTextContent()"], "Fixed commit": "0d8b9e0a80ba3782fbfbc4fa00c85a7df69d1c44", "Url": "https://api.github.com/repos/RemindD/xquery-processor", "Date": "2017-02-02T22:35:27Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getNodeType()) == 1) { str = XPath_Runner.nodeToString(node); if ((node.getNodeType()) != (org.w3c.dom.Node.TEXT_NODE)) { resStr.append(str.substring(((str.indexOf(\"?>\")) + 2))); resStr.append('\\n'); }else { resStr.append(str.substring(((str.indexOf(\"?>\")) + 2))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7851/buggy-version/src.main.java.XPath_Runner.java", "BodyUseAPI": ["XPath_Runner.nodeToString(org.w3c.dom.Node)", "org.w3c.dom.Node.getNodeType()"], "Fixed commit": "0d8b9e0a80ba3782fbfbc4fa00c85a7df69d1c44", "Url": "https://api.github.com/repos/RemindD/xquery-processor", "Date": "2017-02-02T22:35:27Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (restartIfExitsAndFinished) { timer = new ms.frame.countdown.MSCountDownTimer(total, inteval, key, this); timer.setOnCountDownTimerListener(listener); listener.onMSCDTimerCreate(); myCdTimerHashMap.put(key, timer); timer.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7241/buggy-version/msframe.src.main.java.ms.frame.countdown.MSCountDownTimerManager.java", "BodyUseAPI": [], "Fixed commit": "84dbc44d58615905ac1bdf1f1980e1940b4efc2c", "Url": "https://api.github.com/repos/SupLuo/MS", "Date": "2016-07-21T12:28:37Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sign) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3907/buggy-version/src.me.sabbertran.childsgame.Arena.java", "BodyUseAPI": [], "Fixed commit": "26359b1aacc59a1c7bc54024befadb9884773c6a", "Url": "https://api.github.com/repos/MarkehMe/ChildsGame", "Date": "2014-06-24T11:08:45Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["zen.parser.ZGenerator.GetMacroFunc(java.lang.String,ZType.BooleanType,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (Func != null) { @zen.deps.Var zen.ast.ZMacroNode MacroNode = new zen.ast.ZMacroNode(this.ParentNode, this.SourceToken, Func); MacroNode.Append(this.AST[zen.ast.ZAssertNode._Expr]); MacroNode.Append(new zen.ast.ZStringNode(MacroNode, null, this.GetSourceLocation())); return new zen.ast.ZSugarNode(this, MacroNode); }else { @zen.deps.Var zen.ast.ZFuncCallNode MacroNode = new zen.ast.ZFuncCallNode(this.ParentNode, \"assert\", zen.type.ZType.VarType); MacroNode.Append(this.AST[zen.ast.ZAssertNode._Expr]); return new zen.ast.ZSugarNode(this, MacroNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/100/buggy-version/src.zen.ast.ZAssertNode.java", "BodyUseAPI": [], "Fixed commit": "eeb89dc6055aef8824d793e905269ef211c77012", "Url": "https://api.github.com/repos/Kouhei-Moriya/libzen", "Date": "2014-02-24T11:34:52Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["requires().decision().makeDecision(system.dto.EnvDTO,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((action.getAgentPosition()) != null) agent = ((system.model.objects.Agent) (grid[action.getAgentPosition().getX()][action.getAgentPosition().getY()]));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3890/buggy-version/src.system.effector.impl.EffectorImpl.java", "BodyUseAPI": ["system.dto.ActionDTO.getAgentPosition()", "system.dto.ActionDTO.getAgentPosition()", "action.getAgentPosition().getY()", "action.getAgentPosition().getX()"], "Fixed commit": "39a654d46423688059b5b0b6ee049a72f3fdcab6", "Url": "https://api.github.com/repos/gfkl/sma", "Date": "2015-06-05T11:38:10Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stop == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3890/buggy-version/src.system.decisionmaker.impl.DecisionMakerImpl.java", "BodyUseAPI": [], "Fixed commit": "39a654d46423688059b5b0b6ee049a72f3fdcab6", "Url": "https://api.github.com/repos/gfkl/sma", "Date": "2015-06-05T11:38:10Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((altersMasculine > 0) || (altersFeminine > 0)) { manPercentage = altersMasculine / (altersMasculine + altersFeminine); womanPercentage = altersFeminine / (altersMasculine + altersFeminine); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8898/buggy-version/src.net.egosmart.scc.data.Statistics.java", "BodyUseAPI": [], "Fixed commit": "b774dec67e25482bb9588dca01bd8f77a8c78f24", "Url": "https://api.github.com/repos/juergenlerner/scc-test", "Date": "2014-02-15T00:57:44Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (recurse) { res = nodeIter.next().process(processor, recurse); }else { res = processor.process(nodeIter.next()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/9269/buggy-version/src.main.java.com.impossibl.postgres.jdbc.SQLTextTree.java", "BodyUseAPI": ["com.impossibl.postgres.jdbc.SQLTextTree.Node.process(com.impossibl.postgres.jdbc.SQLTextTree.Processor,boolean)"], "Fixed commit": "06d9456ffe5fde914dde8317a913e36849060ab3", "Url": "https://api.github.com/repos/kdubb/pgjdbc-ng", "Date": "2013-04-07T08:59:31Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newPU.getNonJtaDataSource()) != null) { temp.setNonJtaDataSource(newPU.getNonJtaDataSource()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4655/buggy-version/common.src.main.java.org.broadleafcommerce.common.extensibility.jpa.MergePersistenceUnitManager.java", "BodyUseAPI": ["org.springframework.orm.jpa.persistenceunit.MutablePersistenceUnitInfo.getNonJtaDataSource()", "org.springframework.orm.jpa.persistenceunit.MutablePersistenceUnitInfo.setNonJtaDataSource(newPU.getNonJtaDataSource())"], "Fixed commit": "d377ac5e69dedcfc78ee63c6a01b3ba1339a2edd", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2013-01-11T18:38:22Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newPU.getJtaDataSource()) != null) { temp.setJtaDataSource(newPU.getJtaDataSource()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4655/buggy-version/common.src.main.java.org.broadleafcommerce.common.extensibility.jpa.MergePersistenceUnitManager.java", "BodyUseAPI": ["org.springframework.orm.jpa.persistenceunit.MutablePersistenceUnitInfo.setJtaDataSource(newPU.getJtaDataSource())", "org.springframework.orm.jpa.persistenceunit.MutablePersistenceUnitInfo.getJtaDataSource()"], "Fixed commit": "d377ac5e69dedcfc78ee63c6a01b3ba1339a2edd", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2013-01-11T18:38:22Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((keyEvent.uchar) >= '@') && ((keyEvent.uchar) <= '_')) || (((keyEvent.uchar) >= 'a') && ((keyEvent.uchar) <= 'z'))) && (((keyEvent.controlKeyState) & altState) != 0)) { sb.append('\\u001b'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7129/buggy-version/src.main.java.jline.WindowsTerminal.java", "BodyUseAPI": [], "Fixed commit": "22b3a2dce329e83a5ecfba137bde404c85954d47", "Url": "https://api.github.com/repos/redbooth/jline2", "Date": "2014-05-10T07:28:28Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((endTime) != null) isNotChronoTime(taskToUpdate.getStartTime(), new seedu.tasklist.model.task.EndTime(endTime));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7523/buggy-version/src.main.java.seedu.tasklist.logic.commands.UpdateCommand.java", "BodyUseAPI": [], "Fixed commit": "83a5c27b48f35aef5c33dc03134c45b56374f524", "Url": "https://api.github.com/repos/CS2103AUG2016-T11-C1/main", "Date": "2016-10-31T17:20:28Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seedu.tasklist.commons.core.UnmodifiableObservableList<seedu.tasklist.model.task.Task>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (model.isOverlapping(taskToUpdate)) { model.updateFilteredListToShowOverlapping(taskToUpdate); return new seedu.tasklist.logic.commands.CommandResult(java.lang.String.format((((seedu.tasklist.logic.commands.UpdateCommand.MESSAGE_UPDATE_TASK_SUCCESS) + \". \") + (seedu.tasklist.logic.commands.UpdateCommand.MESSAGE_OVERLAP)), taskToUpdate.getTaskDetails())); }else return new seedu.tasklist.logic.commands.CommandResult(java.lang.String.format(seedu.tasklist.logic.commands.UpdateCommand.MESSAGE_UPDATE_TASK_SUCCESS, taskToUpdate.getTaskDetails()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7523/buggy-version/src.main.java.seedu.tasklist.logic.commands.UpdateCommand.java", "BodyUseAPI": ["seedu.tasklist.model.task.Task.getTaskDetails()", "java.lang.String.format(java.lang.String,taskToUpdate.getTaskDetails())", "seedu.tasklist.model.task.Task.getTaskDetails()", "java.lang.String.format(java.lang.String,taskToUpdate.getTaskDetails())", "seedu.tasklist.logic.commands.UpdateCommand.updateFilteredListToShowOverlapping(seedu.tasklist.model.task.Task)"], "Fixed commit": "83a5c27b48f35aef5c33dc03134c45b56374f524", "Url": "https://api.github.com/repos/CS2103AUG2016-T11-C1/main", "Date": "2016-10-31T17:20:28Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (typeSpecifier instanceof org.opencds.cqf.cql.execution.ListTypeSpecifier) { return java.util.List.class; }else if (typeSpecifier instanceof org.opencds.cqf.cql.execution.ChoiceTypeSpecifier) { return java.lang.Object.class; }else { return org.opencds.cqf.cql.execution.Tuple.class; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2076/buggy-version/cql-engine.src.main.java.org.opencds.cqf.cql.execution.Context.java", "BodyUseAPI": [], "Fixed commit": "c57c1c61252bf306af59fb843b13619236f86be9", "Url": "https://api.github.com/repos/DBCG/cql_engine", "Date": "2017-09-10T06:14:22Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.pentaho.di.repository.RepositoriesMeta.findRepository(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (repositoryMeta != null) { for (int i = 0; i < (repositoriesMeta.nrRepositories()); i++) { repositoriesMeta.getRepository(i).setDefault(false); } repositoryMeta.setDefault(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7134/buggy-version/plugins.repositories-plugin.src.main.java.org.pentaho.di.ui.repo.RepositoryConnectController.java", "BodyUseAPI": ["org.pentaho.di.repository.RepositoryMeta.setDefault(boolean)"], "Fixed commit": "1ad0ac53780d8775c47b57d6bf210fae9641cd23", "Url": "https://api.github.com/repos/ddiroma/pentaho-kettle", "Date": "2016-05-17T19:08:39Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(component instanceof javax.swing.JMenuItem)) component.addMouseListener(com.tri.pgs.client.surface.ui.UISystem.listener);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6700/buggy-version/ParlourGameSimulator.src.com.tri.pgs.client.surface.ui.UISystem.java", "BodyUseAPI": ["javax.swing.JComponent.addMouseListener(com.tri.pgs.client.surface.listeners.UIListener)"], "Fixed commit": "e2600ebcef60103154af50021f18c5f064744aea", "Url": "https://api.github.com/repos/HoodleWoodle/ParlourGameSimulator", "Date": "2017-07-26T17:54:46Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ftp.getUserCache().getTrollPlayer(org.bukkit.OfflinePlayer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(target.isBlacklisted())) && (target.canBeTrolledBy(sender))) { sender.sendMessage(((org.shanerx.faketrollplus.utils.Message.PREFIX) + (org.shanerx.faketrollplus.utils.Message.getString(\"no-admin-trolling\")))); return false; }else if ((!(target.isBlacklisted())) && (!(target.canBeTrolledBy(sender)))) { sender.sendMessage(((org.shanerx.faketrollplus.utils.Message.PREFIX) + (org.shanerx.faketrollplus.utils.Message.getString(\"no-admin-trolling\")))); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4879/buggy-version/src.main.java.org.shanerx.faketrollplus.commands.Blacklist.java", "BodyUseAPI": ["org.shanerx.faketrollplus.core.TrollPlayer.isBlacklisted()", "org.bukkit.command.CommandSender.sendMessage(((org.shanerx.faketrollplus.utils.Message.PREFIX) + (org.shanerx.faketrollplus.utils.Message.getString(\"no-admin-trolling\"))))", "org.bukkit.command.CommandSender.sendMessage(((org.shanerx.faketrollplus.utils.Message.PREFIX) + (org.shanerx.faketrollplus.utils.Message.getString(\"no-admin-trolling\"))))", "org.shanerx.faketrollplus.core.TrollPlayer.canBeTrolledBy(org.bukkit.command.CommandSender)"], "Fixed commit": "a775d0e9cf1926bf2befd6bc91f5b924d969806e", "Url": "https://api.github.com/repos/SparklingComet/FakeTrollPlus", "Date": "2017-06-18T17:58:17Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.minecraftwars.incinerator.IncineratorManager.getInstance().getIncinerator(block.getLocation())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (incinerator != null) { if (incinerator.isHot()) { player.sendMessage(((org.bukkit.ChatColor.RED) + \"It's Hot! Ouch!\")); player.damage(0.5); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4171/buggy-version/src.com.minecraftwars.incinerator.PlayerListener.java", "BodyUseAPI": ["com.minecraftwars.incinerator.IncinFurnace.isHot()"], "Fixed commit": "fc6b688293fc2188c14e551e66956909f0ff4c77", "Url": "https://api.github.com/repos/MinecraftWars/Incinerator", "Date": "2013-07-23T22:09:45Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (down) { mMediator.performHapticFeedback(keyEvent, HapticFeedbackConstants.VIRTUAL_KEY, policyFlags); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2906/buggy-version/src.com.spazedog.xposed.additionsgb.backend.pwm.PhoneWindowManager.java", "BodyUseAPI": [], "Fixed commit": "79b9a391013606156123e28e4033f4cc1d0b5653", "Url": "https://api.github.com/repos/SpazeDog/xposed-additions", "Date": "2014-07-01T22:21:35Z"},
{"Line": "=>715", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((a1in.size()) > 0) || ((a1out.size()) > 0)) || ((am.size()) > 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/146/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.cache.local.twoq.O2QCache.java", "BodyUseAPI": [], "Fixed commit": "2b97756207f976a0faf50515222511b5708bc03d", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-07-12T14:28:01Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.dnawaz.util.StringUtils.isNotEmpty(searchCriteria.getTroubleTickets())) { java.lang.String[] troubleTicketList = searchCriteria.getTroubleTickets().split(\",\"); java.lang.StringBuilder troubleTicketCriteria = null; if ((troubleTicketList.length) > 0) { troubleTicketCriteria = new java.lang.StringBuilder(\"and e.EXT_MSG_ID in ( \"); for (java.lang.String troubleticket : troubleTicketList) { troubleTicketCriteria.append(((\"'\" + (troubleticket.trim())) + \"',\")); } troubleTicketCriteria.append(((\"'\" + (troubleTicketList[0])) + \"') \")); query.append(troubleTicketCriteria.toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3032/buggy-version/src.main.java.org.dnawaz.bulletinboard.dao.MonitorDaoImpl.java", "BodyUseAPI": ["searchCriteria.getTroubleTickets().split(java.lang.String)", "org.dnawaz.bulletinboard.domain.SearchCriteria.getTroubleTickets()"], "Fixed commit": "6747989e12798c81602508f852be40033e00483a", "Url": "https://api.github.com/repos/zawanlid/SWIFT_SUPPORT", "Date": "2015-01-22T03:06:38Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isFirst)) stopService(new android.content.Intent(getApplicationContext(), dom133.pl.updater.VersionChecker.class)); else { isFirst = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2274/buggy-version/app.src.main.java.dom133.pl.updater.Settings.java", "BodyUseAPI": [], "Fixed commit": "e19eb1e3ab522d55a8004977249b0bb1f0b306a5", "Url": "https://api.github.com/repos/dom133/Updater-Android", "Date": "2016-11-12T16:00:36Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Objects.equals(download.DownloadString(((((res.getString(R.string.version_url)) + \"-\") + (cm.getCMVersion())) + \".txt\")), \"false\")) { findViewById(R.id.button2).setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2274/buggy-version/app.src.main.java.dom133.pl.updater.Main.java", "BodyUseAPI": [], "Fixed commit": "e19eb1e3ab522d55a8004977249b0bb1f0b306a5", "Url": "https://api.github.com/repos/dom133/Updater-Android", "Date": "2016-11-12T16:00:36Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (bookJsonString == null) { android.content.Intent messageIntent = new android.content.Intent(it.jaschke.alexandria.MainActivity.MESSAGE_EVENT); messageIntent.putExtra(MainActivity.MESSAGE_KEY, \"Internet Error\"); android.support.v4.content.LocalBroadcastManager.getInstance(getApplicationContext()).sendBroadcast(messageIntent); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8038/buggy-version/alexandria.app.src.main.java.it.jaschke.alexandria.services.BookService.java", "BodyUseAPI": [], "Fixed commit": "54e1c23396c8377f53743f0320a1b5652d8a20f0", "Url": "https://api.github.com/repos/smasini/Super-Duo", "Date": "2015-08-18T08:45:41Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((req.headers(\"user\")) != null) { ufh = com.chat.db.Actions.UserFromHeader.fromJson(req.headers(\"user\")); }else { ufh = new com.chat.db.Actions.UserFromHeader(null, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2517/buggy-version/service.src.main.java.com.chat.db.Actions.java", "BodyUseAPI": ["com.chat.db.Actions.UserFromHeader.fromJson(req.headers(\"user\"))", "spark.Request.headers(java.lang.String)"], "Fixed commit": "dd327a05522765c7edb800de4c02e06bcc53a0e4", "Url": "https://api.github.com/repos/dessalines/flowchat", "Date": "2016-06-21T23:13:48Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((BitmapUtil.bmArrowPoint) == null) { com.openwudi.animal.utils.BitmapUtil.init(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1489/buggy-version/app.src.main.java.com.openwudi.animal.utils.MapUtil.java", "BodyUseAPI": [], "Fixed commit": "bee80614afdb1bd45156bfcedc77482946263130", "Url": "https://api.github.com/repos/wodis/Animal", "Date": "2017-08-30T07:16:14Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.yarn.server.nodemanager.containermanager.resourceplugin.fpga.IntelFpgaOpenclPlugin.InnerShellExecutor.getMajorAndMinorNumber(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (null != majorMinorNumber) { java.lang.String[] mmn = majorMinorNumber.split(\":\"); this.aliasMap.put(majorMinorNumber, aliasName); list.add(new org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.fpga.FpgaResourceAllocator.FpgaDevice(getFpgaType(), java.lang.Integer.parseInt(mmn[0]), java.lang.Integer.parseInt(mmn[1]), null, fields[0], aliasName, fields[1], fields[2], fields[3])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8894/buggy-version/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-nodemanager.src.main.java.org.apache.hadoop.yarn.server.nodemanager.containermanager.resourceplugin.fpga.IntelFpgaOpenclPlugin.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "28f38913bdba1a3b62e3659307958e7ed5f09091", "Url": "https://api.github.com/repos/tangzhankun/hadoop", "Date": "2017-11-22T12:40:36Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (username.isEmpty()) { username = null; }else { org.dsa.iot.dslink.node.value.Value vPass = params.get(\"password\"); if (vPass != null) { password = vPass.getString().toCharArray(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8836/buggy-version/src.main.java.org.dsa.iot.mqtt.Actions.java", "BodyUseAPI": [], "Fixed commit": "b0b3034ce75b30e47f0bec98c1e37d25637e8c0c", "Url": "https://api.github.com/repos/IOT-DSA/dslink-java-mqtt", "Date": "2015-08-24T22:54:38Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.inventory.InventoryClickEvent.getWhoClicked()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((player.getGameMode()) == (org.bukkit.GameMode.CREATIVE)) event.setCancelled(false); else event.setCancelled(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4861/buggy-version/src.fr.doctorwho.events.InventoryClick.java", "BodyUseAPI": [], "Fixed commit": "b59a18a988cb5d62ef41e9246c756ee3f87ff893", "Url": "https://api.github.com/repos/Montras59/TaratataAPI", "Date": "2017-12-17T12:30:02Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mt.edu.um.cs.cps2000.runtime.TypeChecker.getFactorLiteralType(org.w3c.dom.Node)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (expType.equals(\"unit\")) { errorLogger(lineNumber, ((((\"Operator '\" + op) + \"' cannot be used with type '\") + expType) + \"'\"), false); ok = false; }else if (((expType.equals(\"char\")) || (expType.equals(\"string\"))) || (expType.equals(\"unit\"))) { errorLogger(lineNumber, ((((\"Operator '\" + op) + \"' cannot be used with type '\") + expType) + \"'\"), false); ok = false; }else if (((op.equals(\"and\")) && (!(expType.equals(\"bool\")))) || ((!(op.equals(\"and\"))) && (expType.equals(\"bool\")))) { errorLogger(lineNumber, ((((\"Operator '\" + op) + \"' cannot be used with type '\") + expType) + \"'\"), false); ok = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6932/buggy-version/src.mt.edu.um.cs.cps2000.runtime.TypeChecker.java", "BodyUseAPI": ["mt.edu.um.cs.cps2000.runtime.TypeChecker.errorLogger(java.lang.String,java.lang.String,boolean)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "mt.edu.um.cs.cps2000.runtime.TypeChecker.errorLogger(java.lang.String,java.lang.String,boolean)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "mt.edu.um.cs.cps2000.runtime.TypeChecker.errorLogger(java.lang.String,java.lang.String,boolean)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "be3977cf1836e263490f1530d45789cec79ee2a9", "Url": "https://api.github.com/repos/kylebonnici/CPS2000", "Date": "2015-05-04T00:37:43Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["stackFrames.peek().getFunction(java.lang.String,getSignatureFromActualParams(actualParams))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (func.getType().equals(\"unit\")) lastExpression = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6932/buggy-version/src.mt.edu.um.cs.cps2000.runtime.Execute.java", "BodyUseAPI": [], "Fixed commit": "be3977cf1836e263490f1530d45789cec79ee2a9", "Url": "https://api.github.com/repos/kylebonnici/CPS2000", "Date": "2015-05-04T00:37:43Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (msg.getAbbrev().equals(\"EntityState\")) { int srcIdNumber = msg.getSrc(); pt.lsts.neptus.comm.manager.imc.ImcSystem sys = pt.lsts.neptus.comm.manager.imc.ImcSystemsHolder.lookupSystem(srcIdNumber); if ((sys != null) && (logLabel.equalsIgnoreCase(sys.getName()))) { pt.lsts.imc.EntityState est = ((pt.lsts.imc.EntityState) (msg)); java.lang.String entityName = pt.lsts.neptus.comm.manager.imc.EntitiesResolver.resolveName(getLogLabel(), ((int) (msg.getSrcEnt()))); if ((entityName != null) && (pt.lsts.neptus.util.logdownload.LogsDownloaderWorker.CAMERA_CPU_LABEL.equalsIgnoreCase(entityName))) { java.lang.String descStateCode = est.getDescription(); if ((descStateCode != null) && ((\"active\".equalsIgnoreCase(descStateCode.trim())) || (pt.lsts.neptus.i18n.I18n.text(\"active\").equalsIgnoreCase(descStateCode.trim())))) { cameraButton.setBackground(java.awt.Color.GREEN); }else { cameraButton.setBackground(null); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/658/buggy-version/src.pt.lsts.neptus.util.logdownload.LogsDownloaderWorker.java", "BodyUseAPI": ["pt.lsts.imc.IMCMessage.getSrc()", "pt.lsts.neptus.comm.manager.imc.EntitiesResolver.resolveName(java.lang.String,((int) (msg.getSrcEnt())))", "pt.lsts.imc.IMCMessage.getSrcEnt()"], "Fixed commit": "ed809c69a90a65a7460f6d92785a7149523264d1", "Url": "https://api.github.com/repos/LSTS/neptus", "Date": "2014-10-10T15:39:36Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["password.pwm.util.macro.MacroMachine.expandMacros(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(expandedValue)) { final java.lang.String loweredLoop = expandedValue.toLowerCase(); if (lcasePwd.contains(loweredLoop)) { errorList.add(new password.pwm.util.ErrorInformation(PwmError.PASSWORD_USING_DISALLOWED)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7856/buggy-version/src.main.java.password.pwm.util.PwmPasswordRuleValidator.java", "BodyUseAPI": ["java.lang.String.toLowerCase()"], "Fixed commit": "a15d7c1babc173a2418b0db7237d4c3b7f9d4e57", "Url": "https://api.github.com/repos/klasen/pwm", "Date": "2016-04-01T17:41:02Z"},
{"Line": "=>2032", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ev.getSource()) instanceof javax.swing.JSpinner) { setStatus(((javax.swing.JSpinner) (ev.getSource())).getToolTipText()); }else if ((ev.getSource()) instanceof javax.swing.JCheckBox) { setStatus(((javax.swing.JCheckBox) (ev.getSource())).getToolTipText()); }else { setStatus(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3870/buggy-version/src.de.dmarcini.submatix.pclogger.gui.MainCommGUI.java", "BodyUseAPI": ["java.awt.event.MouseEvent.getSource()", "java.awt.event.MouseEvent.getSource()", "java.lang.Object.getToolTipText()", "java.lang.Object.getToolTipText()", "de.dmarcini.submatix.pclogger.gui.MainCommGUI.setStatus(java.lang.String)", "java.awt.event.MouseEvent.getSource()", "de.dmarcini.submatix.pclogger.gui.MainCommGUI.setStatus(java.lang.String)"], "Fixed commit": "f85745ee67101af507809507a884aeef8bb34df1", "Url": "https://api.github.com/repos/dmarc0001/submatixBTPC", "Date": "2012-07-30T20:08:31Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jayway.jsonpath.JsonPath.parse(dataStateJson).read(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((gender != null) && (gender == 1)) { user.setSex(\"male\"); }else if ((gender != null) && (gender == 0)) { user.setSex(\"female\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2822/buggy-version/src.main.java.com.crawl.parser.zhihu.ZhiHuNewUserIndexDetailPageParser.java", "BodyUseAPI": [], "Fixed commit": "dd6e4c218d1fc61e70bace6d3f9267773cbfa4ea", "Url": "https://api.github.com/repos/wycm/zhihu-crawler", "Date": "2016-12-14T03:02:08Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.rackspacecloud.blueflood.utils.EventModuleLoader.instance) == null) { com.rackspacecloud.blueflood.utils.EventModuleLoader.loadEventModule(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2924/buggy-version/blueflood-core.src.main.java.com.rackspacecloud.blueflood.utils.EventModuleLoader.java", "BodyUseAPI": [], "Fixed commit": "40298cd52fd2c1f4713e7bb59da6bc24f19053f4", "Url": "https://api.github.com/repos/tilogaat/blueflood", "Date": "2015-06-08T23:07:57Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((y > 10) || (y < 0)) { java.lang.System.out.println(\"Please input Y-Coordinates that are between 0 to 9\"); return false; }else { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/990/buggy-version/src.Battleship.java", "BodyUseAPI": [], "Fixed commit": "7812636d9e14c3fb15bc731ec00a92f3335de4d6", "Url": "https://api.github.com/repos/kz4151/Battleship", "Date": "2017-10-14T02:41:52Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(timeline.getDate().split(\"/\")[1])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (t > 10) t -= 12;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2523/buggy-version/app.src.main.java.com.darker.motorservice.fragment.TimelineFragment.java", "BodyUseAPI": [], "Fixed commit": "baa893feaefcb545ad20684950808942477b7109", "Url": "https://api.github.com/repos/iambas/msut", "Date": "2017-08-31T07:11:07Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(timeline.getDate().split(\"/\")[1])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (t > 10) t -= 12;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2523/buggy-version/app.src.main.java.com.darker.motorservice.fragment.TimelineFragment.java", "BodyUseAPI": [], "Fixed commit": "baa893feaefcb545ad20684950808942477b7109", "Url": "https://api.github.com/repos/iambas/msut", "Date": "2017-08-31T07:11:07Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t instanceof java.lang.Error) { throw ((java.lang.Error) (t)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3469/buggy-version/hazelcast.src.main.java.com.hazelcast.map.impl.mapstore.writebehind.DefaultWriteBehindProcessor.java", "BodyUseAPI": [], "Fixed commit": "dd5ea4620d6a296fe9b9b123ba8a26a28ea3d0e3", "Url": "https://api.github.com/repos/ahmetmircik/hazelcast", "Date": "2015-06-29T10:07:00Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yydcdut.note.model.CategoryDBModel.findByCategoryLabel(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (category == null) { category = findByCategoryLabel(newLabel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7957/buggy-version/app.src.main.java.com.yydcdut.note.model.CategoryDBModel.java", "BodyUseAPI": [], "Fixed commit": "963459c06d2d34841d96be8d0d95e96bbabe2a6c", "Url": "https://api.github.com/repos/yydcdut/PhotoNoter", "Date": "2015-10-16T10:15:55Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (category == null) { refresh(); category = findByCategoryLabel(originalLabel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7957/buggy-version/app.src.main.java.com.yydcdut.note.model.CategoryDBModel.java", "BodyUseAPI": [], "Fixed commit": "963459c06d2d34841d96be8d0d95e96bbabe2a6c", "Url": "https://api.github.com/repos/yydcdut/PhotoNoter", "Date": "2015-10-16T10:15:55Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((welcomeDetail.getWelcomeSettings()) == null) { welcomeDetail.setWelcomeSettings(new com.symphony.api.adminbot.model.WelcomeSettings()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4476/buggy-version/admin-bot.src.main.java.com.symphony.adminbot.api.impl.AbstractV1AdminService.java", "BodyUseAPI": ["com.symphony.api.adminbot.model.DeveloperWelcomeDetail.setWelcomeSettings(com.symphony.api.adminbot.model.WelcomeSettings)"], "Fixed commit": "4f1be03d4b9b66a3ba3441dd36ac297f6a372bc8", "Url": "https://api.github.com/repos/symphonyoss/symphony-admin-bot", "Date": "2017-07-29T00:57:27Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((globalProperties.hubProxyUsername) != null) { restConnectionBuilder.setProxyUsername(globalProperties.hubProxyUsername); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8331/buggy-version/src.main.java.com.blackducksoftware.integration.hub.alert.channel.ChannelRestConnectionFactory.java", "BodyUseAPI": ["com.blackducksoftware.integration.hub.rest.UnauthenticatedRestConnectionBuilder.setProxyUsername(globalProperties.hubProxyUsername)"], "Fixed commit": "c64e8368a2d61750f247c5d5cb643c6db267aaf9", "Url": "https://api.github.com/repos/blackducksoftware/blackduck-alert", "Date": "2017-12-11T20:58:00Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (postData != null) { post.setPlaces(postData.getPlaces()); post.setAllPictures(postData.getAllPictures()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/631/buggy-version/app.src.main.java.blogr.vpm.fr.blogr.persistence.FilePostRetriever.java", "BodyUseAPI": ["blogr.vpm.fr.blogr.bean.Post.getAllPictures()", "blogr.vpm.fr.blogr.bean.Post.setPlaces(postData.getPlaces())", "blogr.vpm.fr.blogr.bean.Post.getPlaces()", "blogr.vpm.fr.blogr.bean.Post.setAllPictures(postData.getAllPictures())"], "Fixed commit": "c307e22c2e4f4238818fdaa67166c1ebbecfac32", "Url": "https://api.github.com/repos/vpmalley/tpblogr", "Date": "2015-05-13T19:06:18Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (store.hasStoredToken(activity)) { android.util.Log.d(\"picture\", \"hasToken\"); org.scribe.model.Token token = store.getStoredToken(activity); blogr.vpm.fr.blogr.apis.flickr.FlickrPicturesUploader picUploader = new blogr.vpm.fr.blogr.apis.flickr.FlickrJPicturesUploader(activity, token); picUploader.uploadPicture(this); }else { blogr.vpm.fr.blogr.apis.flickr.FlickrOAuthAuthoriser.PostExecution postExecution = new blogr.vpm.fr.blogr.apis.flickr.FlickrOAuthAuthoriser.PostExecution() { @java.lang.Override public void onPostExecute(org.scribe.model.Token accessToken) { blogr.vpm.fr.blogr.apis.flickr.FlickrPicturesUploader picUploader = new blogr.vpm.fr.blogr.apis.flickr.FlickrJPicturesUploader(activity, accessToken); picUploader.uploadPicture(blogr.vpm.fr.blogr.picture.LocalPicture.this); } }; new blogr.vpm.fr.blogr.apis.flickr.FlickrOAuthAuthoriser(postExecution).launchAuthorizationFlow(activity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/631/buggy-version/app.src.main.java.blogr.vpm.fr.blogr.picture.LocalPicture.java", "BodyUseAPI": ["blogr.vpm.fr.blogr.apis.flickr.FlickrOAuthTokenStore.getStoredToken(android.app.Activity)", "blogr.vpm.fr.blogr.apis.flickr.FlickrOAuthAuthoriser.launchAuthorizationFlow(android.app.Activity)"], "Fixed commit": "c307e22c2e4f4238818fdaa67166c1ebbecfac32", "Url": "https://api.github.com/repos/vpmalley/tpblogr", "Date": "2015-05-13T19:06:18Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((csrfToken) != null) { return csrfToken; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6582/buggy-version/src.org.pi.litepost.applicationLogic.SessionManager.java", "BodyUseAPI": [], "Fixed commit": "1430f08bb99972615418ee3833e24d1c10eead8c", "Url": "https://api.github.com/repos/PraktischeInformatik/LitePost", "Date": "2015-02-24T16:32:38Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((exists(\"csrf_token\")) && (get(\"csrf_token\").equals(token))) { set(\"csrf_token\", \"\"); return (token != null) && (!(token.equals(\"\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6582/buggy-version/src.org.pi.litepost.applicationLogic.SessionManager.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "1430f08bb99972615418ee3833e24d1c10eead8c", "Url": "https://api.github.com/repos/PraktischeInformatik/LitePost", "Date": "2015-02-24T16:32:38Z"},
{"Line": "=>875", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCapsText()) { putClientProperty(\"cn1$origText\", t); if (t != null) { super.setText(getUIManager().localize(t, t).toUpperCase()); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7738/buggy-version/CodenameOne.src.com.codename1.ui.Button.java", "BodyUseAPI": [], "Fixed commit": "98754e015c2a462dceb7bafbf4cd292ec9d73ed2", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2017-08-12T05:03:01Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (builder != null) { builder.notifyResourceLoading(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5241/buggy-version/flexodesktop.technologyadapters.emfconnector.src.main.java.org.openflexo.technologyadapter.emf.rm.EMFModelResource.java", "BodyUseAPI": [], "Fixed commit": "f46c10ba906d8a38843852be248d56150c626d89", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2012-12-20T20:09:05Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hive.shims.ShimLoader.getHadoopShims().getShortUserName(org.apache.hadoop.security.UserGroupInformation)", "org.apache.hadoop.hive.conf.HiveConf.getVar(conf, HiveConf.ConfVars.USERS_IN_ADMIN_ROLE, \"hdfs\").trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (user.equals(adminStr)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6053/buggy-version/metastore.src.java.org.apache.hadoop.hive.metastore.Warehouse.java", "BodyUseAPI": [], "Fixed commit": "8664b46653fe599a00f5f87817966c16fe8457b3", "Url": "https://api.github.com/repos/vipshop/hive", "Date": "2014-08-22T02:53:58Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bazaarvoice.jolt.common.WalkedPath.lastElement()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (lpe != null) lpe.resetHashCount();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/414/buggy-version/jolt-core.src.main.java.com.bazaarvoice.jolt.shiftr.spec.ShiftrCompositeSpec.java", "BodyUseAPI": ["com.bazaarvoice.jolt.shiftr.spec.LiteralPathElement.resetHashCount()"], "Fixed commit": "b1a4df14aa846404458309d2f0177f5436e94732", "Url": "https://api.github.com/repos/topmonks/jolt", "Date": "2014-10-08T18:52:03Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bazaarvoice.jolt.common.WalkedPath.lastElement()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (lpe != null) lpe.resetHashCount();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/414/buggy-version/jolt-core.src.main.java.com.bazaarvoice.jolt.shiftr.spec.ShiftrCompositeSpec.java", "BodyUseAPI": ["com.bazaarvoice.jolt.shiftr.spec.LiteralPathElement.resetHashCount()"], "Fixed commit": "b1a4df14aa846404458309d2f0177f5436e94732", "Url": "https://api.github.com/repos/topmonks/jolt", "Date": "2014-10-08T18:52:03Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bazaarvoice.jolt.common.WalkedPath.lastElement()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (lpe != null) lpe.resetHashCount();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/414/buggy-version/jolt-core.src.main.java.com.bazaarvoice.jolt.shiftr.spec.ShiftrCompositeSpec.java", "BodyUseAPI": ["com.bazaarvoice.jolt.shiftr.spec.LiteralPathElement.resetHashCount()"], "Fixed commit": "b1a4df14aa846404458309d2f0177f5436e94732", "Url": "https://api.github.com/repos/topmonks/jolt", "Date": "2014-10-08T18:52:03Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN).get()", "io.cattle.platform.iaas.api.auth.dao.AuthDao.hasAccessToAnyProject(java.util.Set<io.cattle.platform.api.auth.Identity>,boolean,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((!hasAccessToAProject) && (hasLoggedIn != null)) && (!((java.lang.Boolean) (hasLoggedIn)))) { projectResourceManager.createProjectForUser(account); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2289/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.TokenUtils.java", "BodyUseAPI": [], "Fixed commit": "c230b0acdfaee5ddbbe5f0685cbfb737599ec22f", "Url": "https://api.github.com/repos/hibooboo2/cattle", "Date": "2015-09-03T18:02:11Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (account != null) { io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN).set(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2289/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.TokenUtils.java", "BodyUseAPI": ["io.cattle.platform.object.util.DataAccessor.fields(io.cattle.platform.core.model.Account)", "io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN)", "io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN).set(boolean)"], "Fixed commit": "c230b0acdfaee5ddbbe5f0685cbfb737599ec22f", "Url": "https://api.github.com/repos/hibooboo2/cattle", "Date": "2015-09-03T18:02:11Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(requests.isEmpty())) { requests.remove().fulfillSilently(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3079/buggy-version/src.server.Server.java", "BodyUseAPI": ["requests.remove().fulfillSilently(server.Server)", "java.util.PriorityQueue<request.Request>.remove()"], "Fixed commit": "b1746667b2d744b922ca997ed864e14fad3748d1", "Url": "https://api.github.com/repos/scobb/360P_4", "Date": "2015-03-26T00:49:13Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ch == 'd') { display(); }else if (ch == 'q') { java.lang.System.exit(0); }else { java.lang.System.out.println(\"Please enter 'd' or an id number\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6397/buggy-version/430.src.hw3.ClientComponent.java", "BodyUseAPI": [], "Fixed commit": "44c4a1c1696c2c57866df0080491cd2b30f8f7e8", "Url": "https://api.github.com/repos/joel-delong/Workspace", "Date": "2016-04-12T21:13:38Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (hook == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2643/buggy-version/cascading-core.src.main.java.cascading.util.ShutdownUtil.java", "BodyUseAPI": [], "Fixed commit": "a97f8f3685133f6c83fb4c39a2cd048cce392dbb", "Url": "https://api.github.com/repos/cwensel/cascading", "Date": "2015-07-23T21:58:45Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(net.trustyuri.TrustyUriUtils.isPotentialTrustyUri(nanopub.getUri()))) { throw new net.trustyuri.TrustyUriException((\"Not a (broken) trusty URI: \" + (nanopub.getUri()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8234/buggy-version/src.main.java.org.nanopub.trusty.FixTrustyNanopub.java", "BodyUseAPI": ["org.nanopub.Nanopub.getUri()"], "Fixed commit": "17d0745fc271f3805a89dda92097c0aeed9fc3ed", "Url": "https://api.github.com/repos/Nanopublication/nanopub-java", "Date": "2015-07-16T14:03:10Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bedework.webcommon.BwRequest.getClient()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (col.getPath().equals(cl.getPublicCalendarsRootPath())) { if (debug) { debug(\"Return public root\"); } return getPublicCollections(request); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3026/buggy-version/bw-calendar-client-webcommon.src.main.java.org.bedework.webcommon.BwSessionImpl.java", "BodyUseAPI": [], "Fixed commit": "9cbd832dd1072a0059e31633970707151bc2ab9e", "Url": "https://api.github.com/repos/Bedework/bw-calendar-client", "Date": "2017-03-23T19:27:07Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (pren == null) { this.getServletContext().getRequestDispatcher(\"/WEB-INF/connexionMembre.jsp\").forward(request, response); java.lang.System.out.println(\"session est null\"); }else { this.getServletContext().getRequestDispatcher(\"/espace-membres/index.jsp\").forward(request, response); java.lang.System.out.println(\"session est non null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8466/buggy-version/src.fr.servlets.ConnexionMembre.java", "BodyUseAPI": [], "Fixed commit": "d09a52485595e6de365061f938a15e4db3e8b4e0", "Url": "https://api.github.com/repos/alexisdoualle/ppefredi", "Date": "2017-03-13T14:42:44Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (remaining != 0) data.add(arrayFactory.createArray(remaining, this.bytesPerElement));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/22/buggy-version/src.main.java.org.mastodon.pool.MultiArrayMemPool.java", "BodyUseAPI": [], "Fixed commit": "7ce79c28910e53436ec15a3fa313c6bc16ef8ba9", "Url": "https://api.github.com/repos/bigdataviewer/mastodon-collection", "Date": "2016-10-25T13:54:17Z"},
{"Line": "=>608", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["result.get(i).getStatus()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.ednovo.gooru.client.mvp.classpage.studentclassview.reports.assessmentreport.STATUS_CORRECT.equalsIgnoreCase(scoreStatus)) { anserlbl.getElement().getStyle().setColor(org.ednovo.gooru.client.mvp.classpage.studentclassview.reports.assessmentreport.CORRECT); }else { anserlbl.getElement().getStyle().setColor(org.ednovo.gooru.client.mvp.classpage.studentclassview.reports.assessmentreport.INCORRECT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7455/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.classpage.studentclassview.reports.assessmentreport.AssessmentProgressReportChildView.java", "BodyUseAPI": [], "Fixed commit": "6e622f847cd671d22cdb6fe4e43820e011f48399", "Url": "https://api.github.com/repos/ssushma/Gooru-Web", "Date": "2016-01-12T07:21:55Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(token.isEmpty())) { end = java.lang.Math.min((i + precision), end); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2611/buggy-version/app.src.main.java.com.ifthenelse.ejmoore2.agenda.DatetimeUtils.java", "BodyUseAPI": [], "Fixed commit": "faf71d386f8fce7686454591aecac3043cbf8d25", "Url": "https://api.github.com/repos/edjmore/Agenda", "Date": "2017-01-24T06:10:30Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.contains(\"subrange\")) { type = \"int\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8938/buggy-version/jkind-api.src.jkind.api.xml.XmlHandler.java", "BodyUseAPI": [], "Fixed commit": "2944b52b27d22dfc260415fe70104794153be0fe", "Url": "https://api.github.com/repos/agacek/jkind", "Date": "2013-08-05T19:23:32Z"},
{"Line": "=>1593", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (find == null) { if (index >= (nodes.size())) return nodes.get(0); return nodes.get(index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1650/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.agents.fsimporter.chooser.LocationDialog.java", "BodyUseAPI": [], "Fixed commit": "21179b82e2e23d7bd61b6235745ec2be7f514f5e", "Url": "https://api.github.com/repos/jburel/openmicroscopy", "Date": "2015-01-16T14:11:51Z"},
{"Line": "=>1602", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index >= (nodes.size())) return nodes.get(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1650/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.agents.fsimporter.chooser.LocationDialog.java", "BodyUseAPI": ["java.util.List<org.openmicroscopy.shoola.agents.util.browser.DataNode>.get(int)"], "Fixed commit": "21179b82e2e23d7bd61b6235745ec2be7f514f5e", "Url": "https://api.github.com/repos/jburel/openmicroscopy", "Date": "2015-01-16T14:11:51Z"},
{"Line": "=>1129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (select != null) { if (((node.getDataObject().getId()) < 0) && ((select.getDataObject().getId()) < 0)) { if (node.toString().trim().equals(select.toString().trim())) selected = comboBoxItem; }else { if ((node.getDataObject().getId()) == (select.getDataObject().getId())) { selected = comboBoxItem; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1650/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.agents.fsimporter.chooser.LocationDialog.java", "BodyUseAPI": ["select.getDataObject().getId()", "select.toString().trim()", "org.openmicroscopy.shoola.agents.util.browser.DataNode.getDataObject()", "select.getDataObject().getId()", "org.openmicroscopy.shoola.agents.util.browser.DataNode.getDataObject()", "node.toString().trim().equals(select.toString().trim())", "org.openmicroscopy.shoola.agents.util.browser.DataNode.toString()"], "Fixed commit": "21179b82e2e23d7bd61b6235745ec2be7f514f5e", "Url": "https://api.github.com/repos/jburel/openmicroscopy", "Date": "2015-01-16T14:11:51Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mCurFilter) == null) && (query == null)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/937/buggy-version/app.src.main.java.com.yst.sklad.tsd.activities.StockCellsActivity.java", "BodyUseAPI": [], "Fixed commit": "f166303e570d43fbb2d516b7ce18fb9a065b5b1d", "Url": "https://api.github.com/repos/vlapenkov/SampleStorage", "Date": "2016-07-28T12:23:18Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(assigned)) numTreesAssigned = defaultNumberOfItems;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1281/buggy-version/Source.mesquite.trees.DefiniteTreeSource.DefiniteTreeSource.java", "BodyUseAPI": [], "Fixed commit": "e0b2a48e3ae67cbe965a14b482396348f51f25ed", "Url": "https://api.github.com/repos/wmaddisn/MesquiteCore", "Date": "2015-08-15T17:05:41Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (userUnit.equalsIgnoreCase(\"\")) { java.lang.System.out.println((((\"\\nYou just stored \" + newQuantity) + \" \") + newItem)); }else { java.lang.System.out.println((((((\"\\nYou just stored \" + newQuantity) + \" \") + userUnit) + \" of \") + newItem)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3985/buggy-version/SmartFridge.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "482c62145da88e40fbe8445d8d14d5ac3f0d1711", "Url": "https://api.github.com/repos/GroupTrump2016/SSmmaarrttFFrriiddggee", "Date": "2016-04-02T23:04:22Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((quantity[i]) != 0) { java.lang.System.out.println((((((items[i]) + \" \") + (quantity[i])) + \" \") + (units[i]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3985/buggy-version/SmartFridge.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "482c62145da88e40fbe8445d8d14d5ac3f0d1711", "Url": "https://api.github.com/repos/GroupTrump2016/SSmmaarrttFFrriiddggee", "Date": "2016-04-02T23:04:22Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (userUnit.equalsIgnoreCase(\"\")) { java.lang.System.out.println((((\"\\nYou just stored \" + newQuantity) + \" \") + newItem)); }else { java.lang.System.out.println((((((\"\\nYou just stored \" + newQuantity) + \" \") + userUnit) + \" of \") + newItem)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3985/buggy-version/SmartFridge.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "482c62145da88e40fbe8445d8d14d5ac3f0d1711", "Url": "https://api.github.com/repos/GroupTrump2016/SSmmaarrttFFrriiddggee", "Date": "2016-04-02T23:04:22Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (userUnit.equalsIgnoreCase(\"\")) { java.lang.System.out.println((((\"\\nYou just removed \" + removeQuantity) + \" \") + removeItem)); }else { java.lang.System.out.println((((((\"\\nYou just removed \" + removeQuantity) + \" \") + userUnit) + \" of \") + removeItem)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3985/buggy-version/SmartFridge.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "482c62145da88e40fbe8445d8d14d5ac3f0d1711", "Url": "https://api.github.com/repos/GroupTrump2016/SSmmaarrttFFrriiddggee", "Date": "2016-04-02T23:04:22Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((capacity) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8889/buggy-version/LFUCache.java", "BodyUseAPI": [], "Fixed commit": "f9084bf6863ff5c70c8d9be1a3ce862623a1fce2", "Url": "https://api.github.com/repos/mtbar131/LFUCache", "Date": "2017-01-01T08:04:43Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (moss.mystery.energymonitor.monitors.MonitorLibrary.screenOn) { moss.mystery.energymonitor.monitors.MonitorLibrary.screenStart = java.lang.System.currentTimeMillis(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5745/buggy-version/app.src.main.java.moss.mystery.energymonitor.monitors.MonitorLibrary.java", "BodyUseAPI": [], "Fixed commit": "014c382d5c04aadfd2cb9277dfb11ae0f130d9e9", "Url": "https://api.github.com/repos/mystery-moss/Drain-Blame", "Date": "2017-07-01T15:42:09Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.ObjectInputStream.readInt()", "java.io.ObjectInputStream.readObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lengthTitle != (title.length())) { throw new java.io.IOException(\"Incorrect title\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6364/buggy-version/src.main.java.ua.sumdu.j2se.zaretsky.tasks.model.TaskIO.java", "BodyUseAPI": [], "Fixed commit": "f5c9566a8b6b656b6d79ea5af4b94d8cff7d8621", "Url": "https://api.github.com/repos/Soldier180/tm_for_maven", "Date": "2017-02-08T09:42:53Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(contains(key))) { return (setOperations.add(processorName, key)) != null; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8687/buggy-version/components.camel-spring-redis.src.main.java.org.apache.camel.component.redis.processor.idempotent.RedisIdempotentRepository.java", "BodyUseAPI": ["org.springframework.data.redis.core.SetOperations<java.lang.String, java.lang.String>.add(java.lang.String,java.lang.String)"], "Fixed commit": "4cc8db61b199fc6a2f2bad46974d5f345ebe6cd8", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-06-26T03:17:23Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((required.getMemory()) == 0) { return available.getMemory(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1955/buggy-version/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-common.src.main.java.org.apache.hadoop.yarn.util.resource.DefaultResourceCalculator.java", "BodyUseAPI": [], "Fixed commit": "4e4a02d8a8af66ccdd4de1658ecb3d93ee4cabcf", "Url": "https://api.github.com/repos/messi49/hadoop", "Date": "2015-08-24T11:28:56Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((b.getMemory()) == 0) { return ((float) (a.getMemory())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1955/buggy-version/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-common.src.main.java.org.apache.hadoop.yarn.util.resource.DefaultResourceCalculator.java", "BodyUseAPI": [], "Fixed commit": "4e4a02d8a8af66ccdd4de1658ecb3d93ee4cabcf", "Url": "https://api.github.com/repos/messi49/hadoop", "Date": "2015-08-24T11:28:56Z"},
{"Line": "=>1094", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["taskcommando.parser.CommandParser.getRecurringType(java.lang.String)", "taskcommando.parser.CommandParser.getRecurringOccurrenceType(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(occurrenceType.contains(type))) { java.lang.String message = taskcommando.constants.Constants.INVALID_RECURRING_TYPE; return taskcommando.parser.CommandParser.invalidCommand(message); }else if (occurrence == 0) { java.lang.String message = taskcommando.constants.Constants.MISSING_RECURRING_OCCURRENCE; return taskcommando.parser.CommandParser.invalidCommand(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/9044/buggy-version/src.taskcommando.parser.CommandParser.java", "BodyUseAPI": [], "Fixed commit": "7cf70ec8cfb1df1ea3c49c84b0959a12c6dcd8ee", "Url": "https://api.github.com/repos/cs2103jan2015-t13-3j/main", "Date": "2015-04-13T05:49:33Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((one) != null) && ((two) != null)) && ((three) != null)) { setupHeaderItem(one, iv_user_avatar_one, tv_user_name_one, tv_billboard_amount_one); setupHeaderItem(two, iv_user_avatar_two, tv_user_name_two, tv_billboard_amount_two); setupHeaderItem(three, iv_user_avatar_three, tv_user_name_three, tv_billboard_amount_three); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3821/buggy-version/app.src.main.java.com.lcjian.happyredenvelope.ui.main.BillboardsFragment.java", "BodyUseAPI": [], "Fixed commit": "b0498cbf337f1e7d95b6b356aa2bb4f3c2c962b4", "Url": "https://api.github.com/repos/LCJIAN/HappyRedEnvelope", "Date": "2017-07-17T11:54:51Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item.getTemperature()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5400/buggy-version/app.src.main.java.com.example.jeka.exampledrawerbar.database.ForecastDatabaseQuery.java", "BodyUseAPI": [], "Fixed commit": "102ae1941e01392b30bf44857c2c64f71257fa84", "Url": "https://api.github.com/repos/Scorpio93/SimpleWeatherApplication", "Date": "2017-05-13T20:43:59Z"},
{"Line": "=>828", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.Integer, blockfighter.server.entities.player.Buff>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (buff instanceof blockfighter.server.entities.player.BuffShieldReflect) { this.reflects.put(bEntry.getKey(), buff); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7789/buggy-version/Ascension.src.blockfighter.server.entities.player.Player.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.Integer, blockfighter.server.entities.player.Buff>.put(bEntry.getKey(),blockfighter.server.entities.player.Buff)"], "Fixed commit": "9d04874a0df4a93fec8e883fe3ffe949b4097583", "Url": "https://api.github.com/repos/K-Games/Ascension", "Date": "2017-07-26T05:14:39Z"},
{"Line": "=>832", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.Integer, blockfighter.server.entities.player.Buff>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (buff instanceof blockfighter.server.entities.player.BuffPassiveBarrier) { if ((this.barrierBuff) == null) { this.barrierBuff = buff; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7789/buggy-version/Ascension.src.blockfighter.server.entities.player.Player.java", "BodyUseAPI": [], "Fixed commit": "9d04874a0df4a93fec8e883fe3ffe949b4097583", "Url": "https://api.github.com/repos/K-Games/Ascension", "Date": "2017-07-26T05:14:39Z"},
{"Line": "=>680", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((callSite instanceof soot.jimple.DefinitionStmt) && (!(isExceptionHandler(retSite)))) { soot.jimple.DefinitionStmt defnStmt = ((soot.jimple.DefinitionStmt) (callSite)); soot.Value leftOp = defnStmt.getLeftOp(); if (thisLocal == leftOp) thisAliases = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2093/buggy-version/src.soot.jimple.infoflow.problems.InfoflowProblem.java", "BodyUseAPI": [], "Fixed commit": "174e1ae06b021af95e25103e952ab2059b5b760b", "Url": "https://api.github.com/repos/wuestholz/soot-infoflow", "Date": "2016-06-27T16:06:38Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getNeighbourList().size()) == 1) && (node.getIp().equals(randomNode.getIp()))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3783/buggy-version/src.dsnode.model.NeighbourTable.java", "BodyUseAPI": [], "Fixed commit": "2f2c02b50c407b1a060e52a7a45e952fc731afe4", "Url": "https://api.github.com/repos/isuru-c/DSNode", "Date": "2017-11-10T06:15:28Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((hasDrunkard) || (moveTo == null)) { moveTo = field.findFirstStepInPath(this.getPos(), station.getPos()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6547/buggy-version/src.ru.spbau.drunkard.actors.Policeman.java", "BodyUseAPI": [], "Fixed commit": "6fa70721b6156bac004c15c45d9b96c35d562f0e", "Url": "https://api.github.com/repos/Icemore/drunkard", "Date": "2014-05-19T06:30:21Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((type.getAuthenticationFields()) == null) { type.setAuthenticationFields(com.denimgroup.threadfix.CollectionUtils.listOf(com.denimgroup.threadfix.data.entities.RemoteProviderAuthenticationField.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2658/buggy-version/threadfix-importers.src.main.java.com.denimgroup.threadfix.importer.update.impl.RemoteProviderUpdater.java", "BodyUseAPI": ["com.denimgroup.threadfix.data.entities.RemoteProviderType.setAuthenticationFields(com.denimgroup.threadfix.CollectionUtils.listOf(com.denimgroup.threadfix.data.entities.RemoteProviderAuthenticationField.class))"], "Fixed commit": "d528a0f4eaf74f0fe2ba628cecfc8a8b7c8aef8e", "Url": "https://api.github.com/repos/denimgroup/threadfix", "Date": "2015-02-26T17:13:10Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.currentScreen) != null) { float partialTicks = this.timer.renderPartialTicks; this.timer.update(); this.timer.renderPartialTicks = partialTicks; }else { this.timer.update(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7554/buggy-version/src.client.net.specialattack.settling.client.SettlingClient.java", "BodyUseAPI": [], "Fixed commit": "9939b38aeb874100caffd545c415bbd4216f5722", "Url": "https://api.github.com/repos/mbl111/SettlingGame", "Date": "2013-03-24T12:18:14Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wasLooperNull) { android.os.Looper.loop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7895/buggy-version/dexter.src.main.java.com.karumi.dexter.WorkerThread.java", "BodyUseAPI": [], "Fixed commit": "2177e13c6da036bd8ddbc0746a9bb4b7dff653b2", "Url": "https://api.github.com/repos/Coppernic/Dexter", "Date": "2017-06-27T09:58:00Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dasein.cloud.aws.network.SecurityGroup.getFirewall(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (fw == null) { throw new org.dasein.cloud.CloudException((\"No such firewall: \" + firewallId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/9034/buggy-version/src.main.java.org.dasein.cloud.aws.network.SecurityGroup.java", "BodyUseAPI": [], "Fixed commit": "9fe1291ed0344665de1c3eafda030e4d320b885f", "Url": "https://api.github.com/repos/greese/dasein-cloud-aws", "Date": "2012-11-19T00:46:56Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dasein.cloud.aws.network.SecurityGroup.getFirewall(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((direction.equals(Direction.EGRESS)) && ((fw.getProviderVlanId()) == null)) { throw new org.dasein.cloud.OperationNotSupportedException(\"AWS does not support EGRESS rules for non-VPC security groups\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/9034/buggy-version/src.main.java.org.dasein.cloud.aws.network.SecurityGroup.java", "BodyUseAPI": [], "Fixed commit": "9fe1291ed0344665de1c3eafda030e4d320b885f", "Url": "https://api.github.com/repos/greese/dasein-cloud-aws", "Date": "2012-11-19T00:46:56Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((SneakySnakeClient.Main.online) == false) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5338/buggy-version/src.SneakySnakeClient.Scene.ChatInput.java", "BodyUseAPI": [], "Fixed commit": "262b1ee671f46da40716bc3abd607684d6173f2c", "Url": "https://api.github.com/repos/PLEXATIC/SneakySnakeClient", "Date": "2016-03-30T07:25:41Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.boisestate.cs.solvers.ExtendedSolver.isSingleton(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (argSingleton) { paramSymbols = java.lang.String.format(\"\\\\\\\"%s\\\\\\\", %d, %d\", edu.boisestate.cs.Parser.actualVals.get(arg), start, end); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5619/buggy-version/src.main.java.edu.boisestate.cs.Parser.java", "BodyUseAPI": [], "Fixed commit": "d8efacee2c53cf4945411fe3ef55c7d65f543219", "Url": "https://api.github.com/repos/BoiseState/string-constraint-solvers", "Date": "2016-08-24T20:38:15Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (params.startsWith(\"[CI\")) { if (!argSingleton) { paramSymbols = java.lang.String.format(\"<C[]:%d>, %d, %d\", arg, start, end); } end = start + end; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5619/buggy-version/src.main.java.edu.boisestate.cs.Parser.java", "BodyUseAPI": [], "Fixed commit": "d8efacee2c53cf4945411fe3ef55c7d65f543219", "Url": "https://api.github.com/repos/BoiseState/string-constraint-solvers", "Date": "2016-08-24T20:38:15Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jsonuser.has(\"expired_date\")) { if (!(self.checkDateTimeEndByString(jsonuser.getString(\"expired_date\")))) { org.json.JSONObject params = new org.json.JSONObject(); params.put(\"function\", \"delete_group\"); com.llp.lunchkaki.services.WebSocketService.sendRequest(params); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7785/buggy-version/app.src.main.java.com.llp.lunchkaki.activities.HomeActivity.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "com.llp.lunchkaki.activities.HomeActivity.checkDateTimeEndByString(jsonuser.getString(\"expired_date\"))"], "Fixed commit": "b9fe7aef931ab84647ff6c4dfa460a1e159894e1", "Url": "https://api.github.com/repos/brianfwz/lkk", "Date": "2016-05-12T11:14:32Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["maxPlayers.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (numOfPlayers.equals(\"\")) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1763/buggy-version/app.src.main.java.client.views.GameListView.java", "BodyUseAPI": [], "Fixed commit": "53c74f97452f4c3dd6c68cfc737491cf222eab63", "Url": "https://api.github.com/repos/eseamons/TicketToRide", "Date": "2017-04-03T22:44:12Z"},
{"Line": "=>536", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controller.ServerController.resetDay()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (thing == true) { startDay(); }else { endGame(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/410/buggy-version/src.controller.ServerController.java", "BodyUseAPI": [], "Fixed commit": "269413dcb56adbc1c83b50ddcf139e8f28d984bf", "Url": "https://api.github.com/repos/sstone93/MAGIC", "Date": "2015-03-13T17:50:31Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["freemarker.core.Expression.evalAndCoerceToString(freemarker.core.Environment)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (index >= (s.length())) { throw new freemarker.core._MiscTemplateException(new java.lang.Object[]{ \"String index out of range: The index was \", new java.lang.Integer(index), \" (0-based), but the length of the string is only \", new java.lang.Integer(s.length()), \".\" }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2387/buggy-version/src.main.java.freemarker.core.DynamicKeyName.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "a74beea9c4bfe94379f6862b573b1d6d11afd2af", "Url": "https://api.github.com/repos/wpzwmcom/freemarker", "Date": "2014-09-16T21:04:25Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scan.currentToken.subClassif) == (Token.STRING)) { resVal = new havabol.ResultValue(scan.currentToken.tokenStr); resVal.type = Token.STRING; resVal.structure.add(\"STRING\"); }else { resVal = expr(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7880/buggy-version/src.havabol.Parser.java", "BodyUseAPI": [], "Fixed commit": "81443383e50dc6c22760ea214a37d330d56edd80", "Url": "https://api.github.com/repos/bucknercd/Interpreter", "Date": "2017-04-10T19:59:12Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(init())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7136/buggy-version/src.main.java.org.owntracks.android.services.ServiceBroker.java", "BodyUseAPI": [], "Fixed commit": "0bb684bd8d73601589bf33cc2c6c26f5b7f61012", "Url": "https://api.github.com/repos/owntracks/android", "Date": "2015-03-18T18:10:17Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.geo.GeoQuake.Utils.checkNetwork(mContext)) { setUpMap(); networkCheckFetchData(); }else { com.geo.GeoQuake.Utils.connectToast(mContext); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8666/buggy-version/src.com.geo.GeoQuake.MapActivity.java", "BodyUseAPI": ["com.geo.GeoQuake.Utils.connectToast(android.content.Context)"], "Fixed commit": "21e59cbf8acf18e4d9b192ee63a3831d52b2e7df", "Url": "https://api.github.com/repos/stinsonga/GeoQuake", "Date": "2015-08-17T23:25:20Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((step) != null) { super.setValue(object); step.getParameters().put(parameterName, object); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1382/buggy-version/src.main.java.ijfx.core.workflow.WorkflowStepWidgetModel.java", "BodyUseAPI": [], "Fixed commit": "69e1061399aa032a7258e5616f65eaad3fa1cd02", "Url": "https://api.github.com/repos/cmongis/imagejfx-core", "Date": "2017-05-17T14:16:48Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(next.getTurnType().goAhead())) { andSpeakArriveAtPoint(nextNextInfo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1444/buggy-version/OsmAnd.src.net.osmand.plus.routing.VoiceRouter.java", "BodyUseAPI": [], "Fixed commit": "74c42aedebbadcaa2b4e1c81928b345753c856b5", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2015-09-06T06:21:21Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentPodcastList.remove(podcast)) ((net.alliknow.podcatcher.adapters.PodcastListAdapter) (adapter)).updateList(currentPodcastList);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3552/buggy-version/src.net.alliknow.podcatcher.view.fragments.PodcastListFragment.java", "BodyUseAPI": ["net.alliknow.podcatcher.view.fragments.PodcastListFragment.updateList(java.util.List<net.alliknow.podcatcher.model.types.Podcast>)"], "Fixed commit": "03c1b074baab3074a19a7e3e77cccc234cfd35f1", "Url": "https://api.github.com/repos/salema/PodCatcher-Deluxe-Android", "Date": "2013-10-25T10:17:27Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event instanceof net.minecraftforge.fml.common.gameevent.PlayerEvent.ItemSmeltedEvent) { addStack.setCount(stack.getCount()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1199/buggy-version/src.main.java.avi.mod.skrim.skills.cooking.SkillCooking.java", "BodyUseAPI": [], "Fixed commit": "e50f98d503403c9ff1d57d35b299a0041c0d0e81", "Url": "https://api.github.com/repos/admirallightningbolt/skrim", "Date": "2017-02-24T20:49:48Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/462/buggy-version/components.formats-common.src.loci.common.Location.java", "BodyUseAPI": [], "Fixed commit": "96fdbdeb059bafb2c99afa864dafee0e1f6efc4c", "Url": "https://api.github.com/repos/openmicroscopy/bioformats", "Date": "2014-04-17T13:24:33Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.knime.knip.base.data.img.ImgPlusCell<T>.getMinimum()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(java.util.Arrays.equals(minimum, localMin))) { for (int d = 0; d < (minimum.length); d++) { if ((minimum[d]) != 0) { tmp = net.imglib2.img.ImgView.wrap(net.imglib2.view.Views.translate(tmp, minimum), m_img.factory()); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2407/buggy-version/org.knime.knip.base.src.org.knime.knip.base.data.img.ImgPlusCell.java", "BodyUseAPI": ["net.imglib2.view.Views.translate(net.imglib2.img.Img<T>,long[])", "net.imglib2.img.ImgView.wrap(net.imglib2.view.Views.translate(tmp, minimum),m_img.factory())"], "Fixed commit": "32aa0d2fcc574b5c10ee3b9197f6761f18032af4", "Url": "https://api.github.com/repos/knime-ip/knip", "Date": "2015-07-29T13:20:53Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Request.GetReply.getDocumentBytesList()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (resultBytesList.isEmpty()) { return null; }else { resultBytes = resultBytesList.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7490/buggy-version/src.main.java.org.dabudb.dabu.client.DbClient.java", "BodyUseAPI": ["java.util.List<com.google.protobuf.ByteString>.get(int)"], "Fixed commit": "f587c63a1e212123d7517d39b151ef8cfc01aec6", "Url": "https://api.github.com/repos/lwhite1/dabooDb", "Date": "2016-04-16T16:38:47Z"},
{"Line": "=>515", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (segment.isTurn) { if (turnComplete()) { return true; }else { int headingDifference = ((int) (segment.Angle)) - heading; if ((((int) (segment.Angle)) - heading) >= 180) { headingDifference = (((int) (segment.Angle)) - 360) - heading; } if ((heading - ((int) (segment.Angle))) >= 180) { headingDifference = (360 - heading) + ((int) (segment.Angle)); } if ((java.lang.Math.abs(headingDifference)) > (java.lang.Math.abs(lastHeadingDifference))) { segment.leftPower *= -1; segment.rightPower *= -1; } powerLevels = new org.firstinspires.ftc.teamcode.PowerLevels(segment.leftPower, segment.rightPower, segment.leftPower, segment.rightPower); if ((loopsPassed) >= 3) { lastHeadingDifference = headingDifference; loopsPassed = 0; } telemetry.addData(\"HD\", headingDifference); telemetry.addData(\"LHD\", lastHeadingDifference); (loopsPassed)++; return false; } }else { if (segment.isDelay) { return delayComplete(); }else { return linearMoveComplete(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1158/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.RevolutionAutonomousBase.java", "BodyUseAPI": [], "Fixed commit": "e775a413ce7387cf4113a84c75bc7b3a1d0427ed", "Url": "https://api.github.com/repos/FTC4924TuxedoPandas/ftc_app", "Date": "2017-01-05T21:07:36Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.media.RingtoneManager.getRingtone(android.content.Context,Settings.System.DEFAULT_NOTIFICATION_URI)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (current != null) layout.setTextViewText(R.id.tv_current, (\"Current: \" + (current.getTitle(context)))); else layout.setTextViewText(R.id.tv_current, \"Failed to Load\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3538/buggy-version/src.com.DizWARE.ShuffleTone.Services.ShuffleService.java", "BodyUseAPI": ["com.DizWARE.ShuffleTone.Others.Ringtone.getTitle(android.content.Context)", "android.widget.RemoteViews.setTextViewText(R.id.tv_current,(\"Current: \" + (current.getTitle(context))))"], "Fixed commit": "4ed7c8fab40889039f721e233da59ef8fb8c5194", "Url": "https://api.github.com/repos/DizWARE/ShuffleTone-3.0", "Date": "2014-03-10T08:52:50Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isFinishing())) { mSearchFragment.clearSearchDetail(); mSearchFragment.clearDialogFragments(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7906/buggy-version/app.src.main.java.com.wishcan.www.vocabulazy.search.SearchActivity.java", "BodyUseAPI": [], "Fixed commit": "6abaf9199cf0086be9a4d888c3c88e398829355a", "Url": "https://api.github.com/repos/allencheng07/VocabuLazy-Android", "Date": "2016-06-16T15:30:53Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.android.popularmoviesstagetwo.MainActivityFragment.favouritedMovies) != null) { loadFavouriteMoviesData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6534/buggy-version/PopularMovies.app.src.main.java.com.example.android.popularmoviesstagetwo.MainActivityFragment.java", "BodyUseAPI": [], "Fixed commit": "ca01ff61fef5d20872728692eb165f52c3ffb06c", "Url": "https://api.github.com/repos/Peretz-Boes/PopularMovies", "Date": "2016-11-21T17:37:18Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((emptyReachableSquares.size()) > 0) { move(grid, emptyReachableSquares.get(Util.randInt(emptyReachableSquares.size())).gridSquare); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/684/buggy-version/Rabbit.java", "BodyUseAPI": ["java.util.List<DistanceSquarePair>.get(Util.randInt(emptyReachableSquares.size()))", "Rabbit.move(Grid,emptyReachableSquares.get(Util.randInt(emptyReachableSquares.size())).gridSquare)", "java.util.List<DistanceSquarePair>.size()", "Util.randInt(emptyReachableSquares.size())"], "Fixed commit": "ed65833eca1c7c231ec390128c31693858f4505d", "Url": "https://api.github.com/repos/saikobee/nature-sim", "Date": "2012-04-16T08:48:15Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((emptyReachableSquares.size()) > 0) { move(grid, emptyReachableSquares.get(Util.randInt(emptyReachableSquares.size())).gridSquare); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/684/buggy-version/Fox.java", "BodyUseAPI": ["java.util.List<DistanceSquarePair>.get(Util.randInt(emptyReachableSquares.size()))", "Fox.move(Grid,emptyReachableSquares.get(Util.randInt(emptyReachableSquares.size())).gridSquare)", "Util.randInt(emptyReachableSquares.size())", "java.util.List<DistanceSquarePair>.size()"], "Fixed commit": "ed65833eca1c7c231ec390128c31693858f4505d", "Url": "https://api.github.com/repos/saikobee/nature-sim", "Date": "2012-04-16T08:48:15Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((secondaryStateTime) <= (life.banana4.ld31.entity.Player.SECONDARY_COOLDOWN)) { batch.draw(animations.charswordswing.getKeyFrame(secondaryStateTime), ((getMidX()) + (offset.x)), ((getMidY()) + (offset.y)), 0, 0, 128, 128, 1, 1, ((getRotation()) + 180), true); }else { batch.draw(animations.charcrossload.getKeyFrame(primaryStateTime), ((getMidX()) + (offset.x)), ((getMidY()) + (offset.y)), 0, 0, 128, 128, 1, 1, ((getRotation()) + 180), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3649/buggy-version/core.src.life.banana4.ld31.entity.Player.java", "BodyUseAPI": [], "Fixed commit": "661f5d7c4c41cdce0bb0633a2aca5ce7debc2a7b", "Url": "https://api.github.com/repos/Banana4Life/LD31", "Date": "2014-12-07T22:59:05Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lon < (-180)) { lon = -180; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3818/buggy-version/src.main.java.com.jillesvangurp.geo.GeoHashUtils.java", "BodyUseAPI": [], "Fixed commit": "f95c3835011cadcf55bbf9dbc33052a4d68db78b", "Url": "https://api.github.com/repos/jillesvangurp/geogeometry", "Date": "2013-03-19T09:30:15Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lon > 180) { lon = 180; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3818/buggy-version/src.main.java.com.jillesvangurp.geo.GeoHashUtils.java", "BodyUseAPI": [], "Fixed commit": "f95c3835011cadcf55bbf9dbc33052a4d68db78b", "Url": "https://api.github.com/repos/jillesvangurp/geogeometry", "Date": "2013-03-19T09:30:15Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.tartarus.snowball.ext.PorterStemmer.getCurrent()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.isEmpty(afterStem))) { stringBuilder.append(afterStem).append(org.molgenis.ontology.service.OntologyServiceImpl.FUZZY_MATCH_SIMILARITY).append(OntologyTermQueryRepository.SINGLE_WHITESPACE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1420/buggy-version/molgenis-ontology-core.src.main.java.org.molgenis.ontology.service.OntologyServiceImpl.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(OntologyTermQueryRepository.SINGLE_WHITESPACE)"], "Fixed commit": "2a94c495b3922267296c2987b914eaf2f6bec4eb", "Url": "https://api.github.com/repos/jjettenn/molgenis", "Date": "2015-01-16T09:04:30Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != fragment) { this.runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { recreateFragmentView(fragment); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/333/buggy-version/src.org.openmrs.mobile.activities.PatientDashboardActivity.java", "BodyUseAPI": ["org.openmrs.mobile.activities.PatientDashboardActivity.runOnUiThread(java.lang.Runnable)", "org.openmrs.mobile.activities.PatientDashboardActivity.3.recreateFragmentView(android.support.v4.app.Fragment)"], "Fixed commit": "7f85f1fd7e034d76dd717c6d46326a9066384901", "Url": "https://api.github.com/repos/openmrs/openmrs-contrib-android-client", "Date": "2015-02-02T15:52:43Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tmpStatuses.size()) < 3) lv_status.scrollToPosition(0); else lv_status.scrollToPosition((position + (tmpStatuses.size())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6138/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.fragments.DisplayStatusFragment.java", "BodyUseAPI": ["java.util.ArrayList<fr.gouv.etalab.mastodon.client.Entities.Status>.size()", "android.support.v7.widget.RecyclerView.scrollToPosition((position + (tmpStatuses.size())))"], "Fixed commit": "0201737bb01574c1bad328444eeba0fc706e7ca6", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2017-12-16T07:37:17Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getInt(Helper.SET_TOOTS_PER_PAGE,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((tmpStatuses.size()) >= tootPerPage) { if (((tmpStatuses.size()) > 0) && ((java.lang.Long.parseLong(tmpStatuses.get(((tmpStatuses.size()) - 1)).getId())) > (java.lang.Long.parseLong(bookmark)))) { tmpStatuses.get(((tmpStatuses.size()) - 1)).setFetchMore(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6138/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.fragments.DisplayStatusFragment.java", "BodyUseAPI": ["java.util.ArrayList<fr.gouv.etalab.mastodon.client.Entities.Status>.get(((tmpStatuses.size()) - 1))", "java.util.ArrayList<fr.gouv.etalab.mastodon.client.Entities.Status>.size()", "java.util.ArrayList<fr.gouv.etalab.mastodon.client.Entities.Status>.get(((tmpStatuses.size()) - 1))", "java.util.ArrayList<fr.gouv.etalab.mastodon.client.Entities.Status>.size()", "tmpStatuses.get(((tmpStatuses.size()) - 1)).getId()", "java.util.ArrayList<fr.gouv.etalab.mastodon.client.Entities.Status>.size()", "java.lang.Long.parseLong(tmpStatuses.get(((tmpStatuses.size()) - 1)).getId())", "tmpStatuses.get(((tmpStatuses.size()) - 1)).setFetchMore(boolean)"], "Fixed commit": "0201737bb01574c1bad328444eeba0fc706e7ca6", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2017-12-16T07:37:17Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!addedSourceTag) || (!(\"source\".equals(tag.name)))) { taggedMeasure.addTag(tag); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6435/buggy-version/src.main.java.com.librato.metrics.reporter.LibratoReporter.java", "BodyUseAPI": ["com.librato.metrics.reporter.TaggedMeasure.addTag(com.librato.metrics.reporter.Tag)"], "Fixed commit": "902e7cb6476dbc0be3a6542fb91b3daa77667a6b", "Url": "https://api.github.com/repos/librato/metrics-librato", "Date": "2016-12-06T19:14:48Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getOperand().evaluate(org.opencds.cqf.cql.execution.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (value == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6557/buggy-version/cql-engine.src.main.java.org.opencds.cqf.cql.elm.execution.ExistsEvaluator.java", "BodyUseAPI": [], "Fixed commit": "3f66cf8938bfba69c4f7db1cc207836149984214", "Url": "https://api.github.com/repos/DBCG/cql_engine", "Date": "2016-09-23T21:01:46Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (bitmap == null) { bitmap = loadRound(null); }else { bitmap = me.wcy.ponymusic.utils.ImageUtils.resizeImage(bitmap, ((me.wcy.ponymusic.utils.MusicUtils.getScreenWidth()) / 2), ((me.wcy.ponymusic.utils.MusicUtils.getScreenWidth()) / 2)); bitmap = me.wcy.ponymusic.utils.ImageUtils.createCircleImage(bitmap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5807/buggy-version/app.src.main.java.me.wcy.ponymusic.utils.CoverLoader.java", "BodyUseAPI": ["me.wcy.ponymusic.utils.ImageUtils.resizeImage(android.graphics.Bitmap,((me.wcy.ponymusic.utils.MusicUtils.getScreenWidth()) / 2),((me.wcy.ponymusic.utils.MusicUtils.getScreenWidth()) / 2))"], "Fixed commit": "2e9a9853f403fb97d7bb19f968a2ae36c6235f2e", "Url": "https://api.github.com/repos/wangchenyan/PonyMusic", "Date": "2015-12-14T09:50:42Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (bitmap == null) { bitmap = loadBlur(null); }else { bitmap = me.wcy.ponymusic.utils.ImageUtils.boxBlurFilter(bitmap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5807/buggy-version/app.src.main.java.me.wcy.ponymusic.utils.CoverLoader.java", "BodyUseAPI": ["me.wcy.ponymusic.utils.ImageUtils.boxBlurFilter(android.graphics.Bitmap)"], "Fixed commit": "2e9a9853f403fb97d7bb19f968a2ae36c6235f2e", "Url": "https://api.github.com/repos/wangchenyan/PonyMusic", "Date": "2015-12-14T09:50:42Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (local > 0) { for (java.lang.Integer l : cacheLocalArray) { if (local >= l) { index = cacheLocalArray.indexOf(l); } } }else { index = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6843/buggy-version/src.main.java.com.sen.lib.view.LinearManager.java", "BodyUseAPI": [], "Fixed commit": "194f1bb3761ac57cb2236164e65e899674069292", "Url": "https://api.github.com/repos/hle999/Senlib", "Date": "2015-06-12T01:39:58Z"},
{"Line": "=>1340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iDirection == (com.tinkerpop.blueprints.Direction.OUT)) result.add(OrientBaseGraph.CONNECTION_OUT); else if (iDirection == (com.tinkerpop.blueprints.Direction.IN)) result.add(OrientBaseGraph.CONNECTION_IN); else { result.add(OrientBaseGraph.CONNECTION_OUT); result.add(OrientBaseGraph.CONNECTION_IN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1660/buggy-version/graphdb.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientVertex.java", "BodyUseAPI": [], "Fixed commit": "cdbf8ef17ed2bbe3027cfd265d3f6082c30ac24c", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-10-17T10:36:39Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (url != null) { java.lang.System.err.println((\"[getPostCounts] URL: \" + (url.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8723/buggy-version/src.main.java.hjeisa.waifubot.web.ConnectionHandler.java", "BodyUseAPI": ["java.net.URL.toString()", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "de1ca0dbe6817051392f12e4ad4c8ed07a948fcd", "Url": "https://api.github.com/repos/isakvik/waifubot", "Date": "2017-11-27T16:22:31Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (sslcontext == null) sslcontext = org.apache.http.conn.ssl.SSLContexts.createSystemDefault();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6623/buggy-version/oxalis-outbound.src.main.java.eu.peppol.outbound.transmission.As2MessageSender.java", "BodyUseAPI": [], "Fixed commit": "2e64eed9efe7e0d4f32898d39c6fed0dd15a5ccc", "Url": "https://api.github.com/repos/difi/oxalis", "Date": "2014-04-09T12:58:45Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (disableSSLVerificationForAS2) { eu.peppol.outbound.transmission.As2MessageSender.log.warn(\"SSL verification for outbound AS2 is disabled\"); try { sslcontext = javax.net.ssl.SSLContext.getInstance(\"SSL\"); sslcontext.init(null, new javax.net.ssl.TrustManager[]{ new javax.net.ssl.X509TrustManager() { public java.security.cert.X509Certificate[] getAcceptedIssuers() { return null; } public void checkClientTrusted(java.security.cert.X509Certificate[] certs, java.lang.String authType) { } public void checkServerTrusted(java.security.cert.X509Certificate[] certs, java.lang.String authType) { } } }, new java.security.SecureRandom()); } catch (java.lang.Exception ex) { eu.peppol.outbound.transmission.As2MessageSender.log.error((\"Failed to disable SSL verification for outbound AS2, defaulting to system defaults : \" + (ex.getMessage()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6623/buggy-version/oxalis-outbound.src.main.java.eu.peppol.outbound.transmission.As2MessageSender.java", "BodyUseAPI": [], "Fixed commit": "2e64eed9efe7e0d4f32898d39c6fed0dd15a5ccc", "Url": "https://api.github.com/repos/difi/oxalis", "Date": "2014-04-09T12:58:45Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (initiator.checkInternalFlags(Flag.RECOVERPOINT)) { rp = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3076/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.utils.ExportMaskUtils.java", "BodyUseAPI": [], "Fixed commit": "b5b426a93d60c6f6477239c155e5e10eb4351ef4", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-12-31T02:59:37Z"},
{"Line": "=>515", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rp && (clusters.iterator().hasNext())) { host = clusters.iterator().next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3076/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.utils.ExportMaskUtils.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.iterator()", "java.util.Iterator<java.lang.String>.next()"], "Fixed commit": "b5b426a93d60c6f6477239c155e5e10eb4351ef4", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-12-31T02:59:37Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.min((5 * (tachyon.Constants.KB)),((int) (tFile.length())))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (len > 0) { byte[] data = new byte[len]; is.read(data, 0, len); fileData = tachyon.CommonUtils.convertByteArrayToString(data); if (fileData == null) { fileData = \"The requested file is not completely encoded in ascii\"; } }else { fileData = \"The requested file has not finished initializing.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4006/buggy-version/src.main.java.tachyon.web.WebInterfaceBrowseServlet.java", "BodyUseAPI": ["tachyon.client.InStream.read(byte[],int,int)"], "Fixed commit": "82ac2c5fe5aadfaebd82b0a614239fa063abc8c9", "Url": "https://api.github.com/repos/amplab/tachyon", "Date": "2013-07-16T03:43:47Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["refnet.RefLinkPart.getAttribute(usedAttributes[i])"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (attribute != null) { strBuilder.append(java.lang.String.valueOf(attribute.getValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7155/buggy-version/src.refnet.RefLinkPart.java", "BodyUseAPI": ["refnet.Attribute.getValue()", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.valueOf(attribute.getValue())"], "Fixed commit": "44ce7e13540967eb6c5c34cfbf9a8363585fc722", "Url": "https://api.github.com/repos/magfr408/referencenetwork", "Date": "2017-05-11T07:15:12Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((trialNumber) == 3) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7693/buggy-version/src.com.uday.processing.MyProcessingSketch.java", "BodyUseAPI": [], "Fixed commit": "ce989d33569e2e5ec7ba2ade894fef9c14ba2e67", "Url": "https://api.github.com/repos/perceptron/Moving-Boat-Eclipse", "Date": "2014-01-28T03:25:41Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (columnIndex != (-1)) { return viewToModel[columnIndex]; }else { return columnIndex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1777/buggy-version/modules.core.org.jowidgets.impl.src.main.java.org.jowidgets.impl.widgets.basic.TableModelSpiAdapter.java", "BodyUseAPI": [], "Fixed commit": "a786eda2bb0d60866932748a91de487df654d003", "Url": "https://api.github.com/repos/jo-source/jo-widgets", "Date": "2016-08-26T12:39:25Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (columnIndex != (-1)) { return modelToView[columnIndex]; }else { return columnIndex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1777/buggy-version/modules.core.org.jowidgets.impl.src.main.java.org.jowidgets.impl.widgets.basic.TableModelSpiAdapter.java", "BodyUseAPI": [], "Fixed commit": "a786eda2bb0d60866932748a91de487df654d003", "Url": "https://api.github.com/repos/jo-source/jo-widgets", "Date": "2016-08-26T12:39:25Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mDoesCacheExist)) { setListShown(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6110/buggy-version/src.com.anypresence.library.AnyPresenceListFragment.java", "BodyUseAPI": [], "Fixed commit": "abff48c753bf46a174eeef799304b1fa03131a14", "Url": "https://api.github.com/repos/AnyPresence/AnyPresence-Android-UI-Library", "Date": "2014-04-16T15:03:42Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((testContextFactory) == null) && ((beanFactory) != null)) { testContextFactory = beanFactory.getBean(com.consol.citrus.context.TestContextFactory.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6442/buggy-version/modules.citrus-core.src.main.java.com.consol.citrus.server.AbstractServer.java", "BodyUseAPI": [], "Fixed commit": "37866fc4f18b5d8498d8eca0131c4db21c56da76", "Url": "https://api.github.com/repos/citrusframework/citrus", "Date": "2016-10-20T09:06:41Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((fNode.getTag().size()) == 0) && (tags.get(0).equalsIgnoreCase(\"Raw\"))) { matchTag = true; }else { for (java.lang.String currentTag : fNode.getTag()) { if (tags.contains(currentTag)) { matchTag = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6037/buggy-version/src.filters.GenericFilter.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.contains(java.lang.String)", "model.FileNode.getTag()"], "Fixed commit": "f2ee8ac7203fe4f91228cce9494808c6f2ea157e", "Url": "https://api.github.com/repos/SingleMolecule/iSBatch", "Date": "2015-05-17T22:56:03Z"},
{"Line": "=>445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((voiceMessage.getDuration()) > 0) request.field(\"duration\", voiceMessage.getDuration());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/954/buggy-version/src.main.java.pro.zackpollard.telegrambot.api.TelegramBot.java", "BodyUseAPI": ["pro.zackpollard.telegrambot.api.SendableVoiceMessage.getDuration()", "com.mashape.unirest.request.body.MultipartBody.field(java.lang.String,voiceMessage.getDuration())"], "Fixed commit": "4de52e3222e2eef2de1aa2ec637e290984dd51ec", "Url": "https://api.github.com/repos/zackpollard/JavaTelegramBot-API", "Date": "2016-04-16T00:40:09Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (graphObject.has(\"paging\")) { org.json.JSONObject jsonPaging = graphObject.getJSONObject(\"paging\"); if (jsonPaging != null) { if (jsonPaging.has(\"cursors\")) { org.json.JSONObject jsonCursors = jsonPaging.getJSONObject(\"cursors\"); if ((jsonCursors != null) && (jsonCursors.has(\"after\"))) after = jsonCursors.getString(\"after\"); } if (jsonPaging.has(\"next\")) hasNext = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3935/buggy-version/socialite.src.main.java.com.vinelab.android.socialite.fbcomments.actions.FBGetCommentsRequest.java", "BodyUseAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Fixed commit": "6926498f8af75259bd311befda8db0fed9aa5aae", "Url": "https://api.github.com/repos/Vinelab/socialite-android", "Date": "2016-01-19T12:31:12Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openide.filesystems.FileObject.getFileObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (jnlp != null) { jnlp.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7724/buggy-version/abf-client.src.main.java.de.cismet.cids.abf.client.CreateSecurityJarAction.java", "BodyUseAPI": ["org.openide.filesystems.FileObject.delete()"], "Fixed commit": "1646c195abc9df1bc5b353b48b10c59f23e35fdb", "Url": "https://api.github.com/repos/cismet/abf", "Date": "2014-01-27T17:39:40Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ttl == null) { return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4346/buggy-version/modules.elasticsearch.src.main.java.org.elasticsearch.action.index.IndexRequest.java", "BodyUseAPI": [], "Fixed commit": "e52dbf4fdaf148cfd45b92c8301fe3d6af468ec2", "Url": "https://api.github.com/repos/elastic/elasticsearch", "Date": "2011-09-13T15:57:38Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.eclipse.jface.wizard.IWizardPage>.indexOf(org.eclipse.jface.wizard.IWizardPage)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((opPages.size()) >= (index + 1)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8544/buggy-version/org.entirej.ide.ui.src.org.entirej.ide.ui.wizards.service.NewEJPojoServiceContentPage.java", "BodyUseAPI": [], "Fixed commit": "b46516b5ceee56feb73b98b743b4b855b16e2c9e", "Url": "https://api.github.com/repos/entirej/plugin", "Date": "2016-04-20T13:02:35Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((objBlocks.isTakable()) || hasUses) { stringBuilder.append(objBlocks.getObjUseEnd()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8357/buggy-version/NLBL.src.main.java.com.nlbhub.nlb.domain.export.STEADExportManager.java", "BodyUseAPI": ["java.lang.StringBuilder.append(objBlocks.getObjUseEnd())", "com.nlbhub.nlb.domain.export.ObjBuildingBlocks.getObjUseEnd()"], "Fixed commit": "8456dba8f81ccb383af1c8263babdca1e370ba2f", "Url": "https://api.github.com/repos/Antokolos/NLB", "Date": "2014-08-01T18:07:04Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((objBlocks.isTakable()) || hasUses) { stringBuilder.append(objBlocks.getObjUseStart()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8357/buggy-version/NLBL.src.main.java.com.nlbhub.nlb.domain.export.STEADExportManager.java", "BodyUseAPI": ["com.nlbhub.nlb.domain.export.ObjBuildingBlocks.getObjUseStart()", "java.lang.StringBuilder.append(objBlocks.getObjUseStart())"], "Fixed commit": "8456dba8f81ccb383af1c8263babdca1e370ba2f", "Url": "https://api.github.com/repos/Antokolos/NLB", "Date": "2014-08-01T18:07:04Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((source) == (color.getRGB())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5438/buggy-version/src.main.java.kops.mco364.paint.BucketTool.java", "BodyUseAPI": [], "Fixed commit": "4ddf3b0b77844c5dba16534b576cfe3792fff544", "Url": "https://api.github.com/repos/LeahMeth/kops-mco364", "Date": "2016-03-03T23:20:41Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((transitionTime) == 0) return 1.0F;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2594/buggy-version/animation4j-core.src.main.java.com.gemserk.animation4j.transitions.TimeTransition.java", "BodyUseAPI": [], "Fixed commit": "8d8d0f065f808107d6514a617dbf8523cda4b41b", "Url": "https://api.github.com/repos/gemserk/animation4j", "Date": "2011-07-14T00:29:19Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (config.hasChanged()) config.save();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/9145/buggy-version/src.main.java.wanion.jeihider.JEIHider.java", "BodyUseAPI": [], "Fixed commit": "7552a92e20b0e444a9020e4381df5d9c7e9952f3", "Url": "https://api.github.com/repos/WanionCane/JEIHider", "Date": "2016-07-17T03:49:24Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (key.equals(playerSettings.getCameraDownKeyName())) { renderInfo.addOffset(0, 1); }else if (key.equals(playerSettings.getCameraLeftKeyName())) { renderInfo.addOffset(1, 0); }else if (key.equals(playerSettings.getCameraRightKeyName())) { renderInfo.addOffset((-1), 0); }else if (key.equals(playerSettings.getZoomInKeyName())) { renderInfo.addImageScale(0.1); }else if (key.equals(playerSettings.getZoomOutKeyName())) { renderInfo.addImageScale((-0.1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4/buggy-version/src.Game.Model.Board.SinglePlayerBoard.java", "BodyUseAPI": ["Game.Model.Settings.PlayerSettings.getCameraLeftKeyName()", "java.lang.String.equals(playerSettings.getCameraRightKeyName())", "Game.Model.Settings.PlayerSettings.getZoomInKeyName()", "java.lang.String.equals(playerSettings.getZoomInKeyName())", "java.lang.String.equals(playerSettings.getCameraLeftKeyName())", "Game.Model.Settings.PlayerSettings.getCameraRightKeyName()", "Game.Model.Settings.PlayerSettings.getZoomOutKeyName()", "java.lang.String.equals(playerSettings.getZoomOutKeyName())"], "Fixed commit": "3e7db186899946a16120808640bd66e5095c794b", "Url": "https://api.github.com/repos/TheAIBot/GOTY-2016", "Date": "2016-01-13T00:54:53Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.telenor.connect.ConnectSdk.isCellularDataNetworkConnected())) { parameters.add(\"prompt\", \"no_seam\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3067/buggy-version/connect.src.com.telenor.connect.AbstractSdkProfile.java", "BodyUseAPI": [], "Fixed commit": "fa93ff6fb9a4317b62d0845e95f610f471ec348c", "Url": "https://api.github.com/repos/telenordigital/connect-android-sdk", "Date": "2017-07-10T13:18:43Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((costumer.getCategory()) == (nota.asyarif.com.nota.item.Costumer.CATEGORY_GROSIR_BESAR)) { mTV_category.setText(mTV_category.getContext().getResources().getString(R.string.costumer_category_big)); }else if ((costumer.getCategory()) == (nota.asyarif.com.nota.item.Costumer.CATEGORY_GROSIR_MENENGAH)) { mTV_category.setText(mTV_category.getContext().getResources().getString(R.string.costumer_category_medium)); }else if ((costumer.getCategory()) == (nota.asyarif.com.nota.item.Costumer.CATEGORY_GROSIR_KECIL)) { mTV_category.setText(mTV_category.getContext().getResources().getString(R.string.costumer_category_small)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1367/buggy-version/app.src.main.java.nota.asyarif.com.nota.activityadapter.CostumerAdapter.java", "BodyUseAPI": ["nota.asyarif.com.nota.item.Costumer.getCategory()", "nota.asyarif.com.nota.item.Costumer.getCategory()"], "Fixed commit": "5b6ccca2dcdd3626ff5b08e0845dfea5721f3241", "Url": "https://api.github.com/repos/asyarifstudio/Nota", "Date": "2017-11-11T01:43:15Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (placeOfBirth == null) mActorDetailView.setPlaceOfBirth(mActorDetailView.getContext().getString(R.string.noPlaceOfBirth)); else mActorDetailView.setPlaceOfBirth(placeOfBirth);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6104/buggy-version/app.src.main.java.com.jaime.toca.MVPActors.mvp.presenters.ActorDetailPresenter.java", "BodyUseAPI": ["com.jaime.toca.MVPActors.mvp.views.ActorDetailView.setPlaceOfBirth(java.lang.String)"], "Fixed commit": "18345fe05ff2801596da6d5aa01d2baf48560bf8", "Url": "https://api.github.com/repos/JaimeToca/AndroidMVP", "Date": "2015-07-28T12:11:14Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((playerList.size()) < 1) { createGameField(chordImpl.getID()); java.util.Collections.sort(playerList); playerList.remove(ownPlayer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4727/buggy-version/src.de.haw.ttv2.main.GameState.java", "BodyUseAPI": ["java.util.List<de.haw.ttv2.main.Player>.remove(de.haw.ttv2.main.Player)", "java.util.Collections.sort(java.util.List<de.haw.ttv2.main.Player>)"], "Fixed commit": "6639a5af28c65fdd355d580fd2ea3e6adb166423", "Url": "https://api.github.com/repos/lgmtr/ttv2", "Date": "2016-12-01T15:40:04Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numberOfPages == 1) { pi.setSides(Item.Sides.SIMPLEX); }else if (pi.getSides().equals(Item.Sides.DUPLEX)) { if ((numberOfPages % 2) != 0) { numberOfPages--; flagDuplexOdd = true; } numberOfPages = numberOfPages / 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5790/buggy-version/src.main.java.io.github.proxyprint.kitchen.models.printshops.pricetable.BudgetCalculator.java", "BodyUseAPI": [], "Fixed commit": "ccab01d2dcc45e2a825cd403213face8fdb1d2e0", "Url": "https://api.github.com/repos/ProxyPrint/proxyprint-kitchen", "Date": "2016-06-09T00:27:45Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.encog.neural.neat.training.opp.NEATMutate.chooseRandomNeuron(org.encog.neural.neat.training.NEATGenome,boolean)", "org.encog.neural.neat.training.opp.NEATMutate.chooseRandomNeuron(org.encog.neural.neat.training.NEATGenome,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((neuron1 == null) || (neuron2 == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8604/buggy-version/src.main.java.org.encog.neural.neat.training.opp.NEATMutate.java", "BodyUseAPI": [], "Fixed commit": "659517846ee07094fe73ab263be6ce4490434ec6", "Url": "https://api.github.com/repos/encog/encog-java-core", "Date": "2013-01-10T12:47:57Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!choosingFrom) { int ac = ((org.encog.neural.neat.NEATPopulation) (target.getPopulation())).getActivationCycles(); if (ac == 1) { start += target.getOutputCount(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8604/buggy-version/src.main.java.org.encog.neural.neat.training.opp.NEATMutate.java", "BodyUseAPI": [], "Fixed commit": "659517846ee07094fe73ab263be6ce4490434ec6", "Url": "https://api.github.com/repos/encog/encog-java-core", "Date": "2013-01-10T12:47:57Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.sandia.cognition.learning.algorithm.clustering.OptimizedKMeansClusterer<DataType>.getClusterCentroid(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (clusterI == null) { clusterDistances[i][i] = 0.0; for (int j = i + 1; j < (this.getNumClusters()); j++) { clusterDistances[i][j] = java.lang.Double.POSITIVE_INFINITY; } continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3467/buggy-version/Components.LearningCore.Source.gov.sandia.cognition.learning.algorithm.clustering.OptimizedKMeansClusterer.java", "BodyUseAPI": [], "Fixed commit": "283bff98999e56160c4ac5c2eee00528a1e84c91", "Url": "https://api.github.com/repos/jbasilico/Foundry", "Date": "2015-08-13T06:58:31Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { value = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/755/buggy-version/src.main.java.de.dustplanet.passwordprotect.PasswordProtect.java", "BodyUseAPI": [], "Fixed commit": "4d37b6d440a91e0967355b9a009bf6ad63b74e6e", "Url": "https://api.github.com/repos/xGhOsTkiLLeRx/PasswordProtect", "Date": "2013-08-14T13:49:16Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.savor.ads.utils.AppUtils.getWifiName(android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(ssid)) { ssid = com.savor.ads.core.Session.get(context).getBoxName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3976/buggy-version/app.src.main.java.com.savor.ads.utils.QrCodeWindowManager.java", "BodyUseAPI": [], "Fixed commit": "8d07b944e275a35c22eb12e0142a2b2ea4558102", "Url": "https://api.github.com/repos/SavorGit/SetTopBox", "Date": "2017-03-09T09:28:35Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((content) != null) { overlay.showPopup(new com.haw.projecthorse.lootmanager.popups.LootPopup(content)); com.haw.projecthorse.intputmanager.InputManager.addInputProcessor(new com.haw.projecthorse.level.util.swipehandler.StageGestureDetector(overlay, false, com.haw.projecthorse.level.util.swipehandler.ControlMode.HORIZONTAL), java.lang.Integer.MAX_VALUE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6883/buggy-version/core.src.com.haw.projecthorse.lootmanager.Chest.java", "BodyUseAPI": [], "Fixed commit": "cbd9c02abb38d9fc5027b55123ae39c5115381f8", "Url": "https://api.github.com/repos/PhilippGrulich/HAW-SE2-projecthorse", "Date": "2014-11-16T19:42:16Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((content) != null) { com.haw.projecthorse.savegame.SaveGameManager.getLoadedGame().addCollectedLootList(content); com.haw.projecthorse.savegame.SaveGameManager.saveLoadedGame(); content.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6883/buggy-version/core.src.com.haw.projecthorse.lootmanager.Chest.java", "BodyUseAPI": [], "Fixed commit": "cbd9c02abb38d9fc5027b55123ae39c5115381f8", "Url": "https://api.github.com/repos/PhilippGrulich/HAW-SE2-projecthorse", "Date": "2014-11-16T19:42:16Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((results.length) == 7) { if ((results[6]) > 0) { otText.setText((\"\" + (results[6]))); }else { otText.setVisibility(View.GONE); otTitle.setVisibility(View.GONE); } }else { otText.setVisibility(View.GONE); otTitle.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5525/buggy-version/src.com.asa.easysal.ui.CalculateDialogFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "b3d252621faaf1bed0a2ee69ee27c66265297953", "Url": "https://api.github.com/repos/Nemisis/EasySalSalaryCalculator", "Date": "2013-01-20T06:56:40Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.parentKey) == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3940/buggy-version/opentides3-core.src.main.java.org.opentides.bean.SystemCodes.java", "BodyUseAPI": [], "Fixed commit": "3cd5aeef634c42d9acc244f86d736354fa30bfb0", "Url": "https://api.github.com/repos/Ideyatech/opentides3", "Date": "2014-08-18T09:02:14Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getVotePartyVotes()) >= (com.Ben12345rocks.VotingPlugin.Config.ConfigOtherRewards.getInstance().getUserVotesRequired())) { for (java.lang.String reward : com.Ben12345rocks.VotingPlugin.Config.ConfigOtherRewards.getInstance().getVotePartyRewards()) { com.Ben12345rocks.AdvancedCore.Objects.RewardHandler.getInstance().giveReward(user, reward); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3815/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.VoteParty.VoteParty.java", "BodyUseAPI": ["com.Ben12345rocks.AdvancedCore.Objects.RewardHandler.getInstance().giveReward(com.Ben12345rocks.VotingPlugin.Objects.User,java.lang.String)"], "Fixed commit": "f58d429173d689cf12c35133ef088c90582389f5", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-10-30T19:04:30Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<com.billybyte.dse.inputs.diotypes.DioType<?>, java.util.Map<java.lang.String, double[]>>.get(com.billybyte.dse.inputs.diotypes.DioType<?>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (innerMap == null) { diotToShortNameToTrialValues.put(underDiot, trialValues); }else { innerMap.putAll(trialValues); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7281/buggy-version/src.main.java.com.billybyte.dse.var.McVar.java", "BodyUseAPI": ["java.util.Map<java.lang.String, double[]>.putAll(java.util.Map<java.lang.String, double[]>)"], "Fixed commit": "b2f3bf3a5f7e7f1e82d90d115501095905443954", "Url": "https://api.github.com/repos/bgithub1/common-libs", "Date": "2015-08-24T00:10:41Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newAddress.getHostName().equals(\"localhost\")) { try { newAddress = java.net.InetAddress.getLocalHost(); } catch (java.net.UnknownHostException e) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6724/buggy-version/DSProject1.src.ProcessManagerClient.java", "BodyUseAPI": [], "Fixed commit": "028145adb5793fb641558ddc4cb397a4c2e08c1f", "Url": "https://api.github.com/repos/simondai13/Projects-DS", "Date": "2013-09-15T20:11:33Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (blockCounter == (org.terasology.componentSystem.action.TunnelAction.MAX_DESTROYED_BLOCKS)) event.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/530/buggy-version/src.main.java.org.terasology.componentSystem.action.TunnelAction.java", "BodyUseAPI": [], "Fixed commit": "6d1e874700751012148c9c0e75ddb82828486469", "Url": "https://api.github.com/repos/jamoozy/Terasology", "Date": "2013-04-02T15:06:07Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getCurTotalCost().compareTo(curAvailable)) < 0) || (rehanced.com.simpleetherwallet.BuildConfig.DEBUG)) { askForPasswordAndDecode(spinner.getSelectedItem().toString()); }else { ac.snackError(getString(R.string.err_send_not_enough_ether)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7696/buggy-version/app.src.main.java.rehanced.com.simpleetherwallet.fragments.FragmentSend.java", "BodyUseAPI": [], "Fixed commit": "2a2e2ce15ea8eca9d24aca338ca12f256087fa68", "Url": "https://api.github.com/repos/manuelsc/Lunary-Ethereum-Wallet", "Date": "2017-06-10T09:45:16Z"},
{"Line": "=>472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"0\".equals(str)) { return java.lang.Boolean.FALSE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/983/buggy-version/src.main.java.com.alibaba.fastjson.util.TypeUtils.java", "BodyUseAPI": [], "Fixed commit": "cbd691c6ab0b759263915c08ef2722ba5bbcb56b", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2014-10-03T09:57:46Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wm.utils.NetUtils.getConnectState(android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((mLastType) != (-10)) && ((mLastType) != netType)) { mCallback.onChange(netType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7532/buggy-version/src.com.wm.network.NetChangeReceiver.java", "BodyUseAPI": ["com.wm.network.NetChangeReceiver.NetChangeCallBack.onChange(int)"], "Fixed commit": "be826ec29bfd6db98ffa682f20be8d143942952f", "Url": "https://api.github.com/repos/lk5103613/WMBloodPressureMeasurement", "Date": "2015-03-19T10:01:51Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (progress > 100) { progress = 100; bytesLimitProgressBar.setTextColor(getResources().getColor(R.color.material_pink_500)); }else { bytesLimitProgressBar.setTextColor(getResources().getColor(R.color.primary_color)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6820/buggy-version/app.src.main.java.com.dylangao.networktrafficmonitor.ui.TrafficDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "f9a5c7439f1646bfd0ac61719af9319d29db9202", "Url": "https://api.github.com/repos/yunxiyinzhe/NetworkTrafficMonitor", "Date": "2014-12-08T11:44:36Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (progress > 100) { progress = 100; bytesLimitProgressBar.setTextColor(getResources().getColor(R.color.material_pink_500)); }else { bytesLimitProgressBar.setTextColor(getResources().getColor(R.color.primary_color)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6820/buggy-version/app.src.main.java.com.dylangao.networktrafficmonitor.ui.TrafficDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "f9a5c7439f1646bfd0ac61719af9319d29db9202", "Url": "https://api.github.com/repos/yunxiyinzhe/NetworkTrafficMonitor", "Date": "2014-12-08T11:44:36Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, io.netty.channel.Channel>.remove(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (proxyChannel != channel) { org.fengfei.lanproxy.server.ProxyChannelManager.proxyChannels.put(port, proxyChannel); }else { if (proxyChannel.isActive()) { proxyChannel.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1496/buggy-version/proxy-server.src.main.java.org.fengfei.lanproxy.server.ProxyChannelManager.java", "BodyUseAPI": ["io.netty.channel.Channel.isActive()", "io.netty.channel.Channel.close()", "java.util.Map<java.lang.Integer, io.netty.channel.Channel>.put(int,io.netty.channel.Channel)"], "Fixed commit": "24d7c05a915bf6ec0f488546604d61387a4be4d1", "Url": "https://api.github.com/repos/ffay/lanproxy", "Date": "2016-12-21T03:32:19Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, io.netty.channel.Channel>.remove(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (proxyChannel == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1496/buggy-version/proxy-server.src.main.java.org.fengfei.lanproxy.server.ProxyChannelManager.java", "BodyUseAPI": [], "Fixed commit": "24d7c05a915bf6ec0f488546604d61387a4be4d1", "Url": "https://api.github.com/repos/ffay/lanproxy", "Date": "2016-12-21T03:32:19Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.equalsIgnoreCase(org.ednovo.gooru.infrastructure.persistence.hibernate.COLLECTION)) { query = getSession().createSQLQuery(sql).addScalar(\"title\", StandardBasicTypes.STRING).addScalar(\"description\", StandardBasicTypes.STRING).addScalar(\"gooruOid\", StandardBasicTypes.STRING).addScalar(\"category\", StandardBasicTypes.STRING).addScalar(\"createdOn\", StandardBasicTypes.STRING).addScalar(\"value\", StandardBasicTypes.STRING).addScalar(\"reportedFlag\", StandardBasicTypes.STRING).addScalar(\"userUid\", StandardBasicTypes.STRING).addScalar(\"product\", StandardBasicTypes.STRING).addScalar(\"reportId\", StandardBasicTypes.STRING).addScalar(\"reportCreator\", StandardBasicTypes.STRING).addScalar(\"reportCreatedOn\", StandardBasicTypes.STRING).addScalar(\"reportDescription\", StandardBasicTypes.STRING).addScalar(\"url\", StandardBasicTypes.STRING).addScalar(\"browserUrl\", StandardBasicTypes.STRING).addScalar(\"scount\", StandardBasicTypes.STRING).addScalar(\"sharing\", StandardBasicTypes.STRING).addScalar(\"notes\", StandardBasicTypes.STRING).addScalar(\"reporterName\", StandardBasicTypes.STRING).addScalar(\"resourceCreatorName\", StandardBasicTypes.STRING).addScalar(\"lastModifiedOn\", StandardBasicTypes.STRING).addScalar(\"thumbnail\", StandardBasicTypes.STRING); }else { query = getSession().createSQLQuery(sql).addScalar(\"title\", StandardBasicTypes.STRING).addScalar(\"description\", StandardBasicTypes.STRING).addScalar(\"gooruOid\", StandardBasicTypes.STRING).addScalar(\"category\", StandardBasicTypes.STRING).addScalar(\"createdOn\", StandardBasicTypes.STRING).addScalar(\"value\", StandardBasicTypes.STRING).addScalar(\"reportedFlag\", StandardBasicTypes.STRING).addScalar(\"userUid\", StandardBasicTypes.STRING).addScalar(\"product\", StandardBasicTypes.STRING).addScalar(\"reportId\", StandardBasicTypes.STRING).addScalar(\"reportCreator\", StandardBasicTypes.STRING).addScalar(\"reportCreatedOn\", StandardBasicTypes.STRING).addScalar(\"reportDescription\", StandardBasicTypes.STRING).addScalar(\"url\", StandardBasicTypes.STRING).addScalar(\"browserUrl\", StandardBasicTypes.STRING).addScalar(\"scount\", StandardBasicTypes.STRING).addScalar(\"sharing\", StandardBasicTypes.STRING).addScalar(\"notes\", StandardBasicTypes.STRING).addScalar(\"reporterName\", StandardBasicTypes.STRING).addScalar(\"resourceCreatorName\", StandardBasicTypes.STRING).addScalar(\"thumbnail\", StandardBasicTypes.STRING).addScalar(\"hasFrameBreaker\", StandardBasicTypes.BOOLEAN).addScalar(\"mediaType\", StandardBasicTypes.STRING).addScalar(\"lastModifiedOn\", StandardBasicTypes.STRING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8934/buggy-version/api.src.main.java.org.ednovo.gooru.infrastructure.persistence.hibernate.FeedbackRepositoryHibernate.java", "BodyUseAPI": [], "Fixed commit": "0c1a45c9f9ea6ad86e598bcf4868d16387ee46bf", "Url": "https://api.github.com/repos/viji-m/Gooru-Core-API", "Date": "2015-08-10T14:21:04Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.equalsIgnoreCase(org.ednovo.gooru.infrastructure.persistence.hibernate.COLLECTION)) { flag.put(\"thumbnail\", object[20]); flag.put(\"lastModifiedOn\", object[21]); }else { flag.put(\"thumbnail\", object[20]); flag.put(\"hasFrameBreaker\", object[21]); flag.put(\"mediaType\", object[22]); flag.put(\"lastModifiedOn\", object[23]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8934/buggy-version/api.src.main.java.org.ednovo.gooru.infrastructure.persistence.hibernate.FeedbackRepositoryHibernate.java", "BodyUseAPI": [], "Fixed commit": "0c1a45c9f9ea6ad86e598bcf4868d16387ee46bf", "Url": "https://api.github.com/repos/viji-m/Gooru-Core-API", "Date": "2015-08-10T14:21:04Z"},
{"Line": "=>1701", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((source) == null) ackOpennet(next); else if (origTag.shouldStop()) { origTag.finishedWaitingForOpennet(next); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1112/buggy-version/src.freenet.node.RequestSender.java", "BodyUseAPI": [], "Fixed commit": "10986277d57cfda46c7510dc6edaa23ccc8f99e5", "Url": "https://api.github.com/repos/freenet/fred", "Date": "2011-08-16T18:26:03Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.utils.conf.AppConfig.getInstance().isFacerConfigured()) { com.backend.facer.FaceSetManager.getInstance().checkFaceSet(); com.backend.facer.FaceRecService.getInstance().checkAllFacesID(); com.backend.facer.FaceRecService.getInstance().checkAndGetFaceidList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6220/buggy-version/photoweb.src.com.service.listener.SpecialListener.java", "BodyUseAPI": [], "Fixed commit": "1a432ee08c1810c8d0f7dca7b5806aeffb8c0c00", "Url": "https://api.github.com/repos/shentar/jAlbum", "Date": "2017-05-25T16:02:04Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tarefas) == null) tarefas = new java.util.HashMap();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8251/buggy-version/app.src.main.java.luis.gestovisualdeobras.model.Apto.java", "BodyUseAPI": [], "Fixed commit": "38b0448f7fcd311c2d84afc991df2ad8817f20d6", "Url": "https://api.github.com/repos/marcusedu/obras", "Date": "2017-09-13T15:54:13Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["partitioners.get(fieldKey).partition(field.getValue())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((partitions.length) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2728/buggy-version/statistics-generator.statistics-generator-impl.src.main.java.pl.edu.icm.coansys.statisticsgenerator.jobs.StatisticsGenerator.java", "BodyUseAPI": [], "Fixed commit": "e131eb9472e89b4c4f81f92710ca790a9d082d5f", "Url": "https://api.github.com/repos/pdendek/CoAnSys", "Date": "2014-05-21T09:19:59Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.minecraftdimensions.bungeesuite.managers.ChatManager.getChannel(p.getChannel())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (c == null) { com.minecraftdimensions.bungeesuite.managers.ChatManager.getServersDefaultChannel(sd); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2589/buggy-version/src.main.java.com.minecraftdimensions.bungeesuite.managers.ChatManager.java", "BodyUseAPI": [], "Fixed commit": "73b0e4395d3913592296dfa92bc72effcaf61106", "Url": "https://api.github.com/repos/Bloodsplat/BungeeSuite", "Date": "2013-09-30T23:18:59Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (allArrowScore.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5284/buggy-version/app.src.main.java.ar.com.tzulberti.archerytraining.activities.common.ContainerStatsActivity.java", "BodyUseAPI": [], "Fixed commit": "14fc546a6b603ca848b1251d4dff2469acbbd2af", "Url": "https://api.github.com/repos/tzulberti/archery-training", "Date": "2017-08-02T02:11:24Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (server.isServing()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6206/buggy-version/src.java.voldemort.hashtrees.tasks.BGHashTreeServer.java", "BodyUseAPI": [], "Fixed commit": "b5d6aae5b708b1a2f4b17acc44499e9c02aed1ad", "Url": "https://api.github.com/repos/gomathi/voldemort", "Date": "2014-08-18T14:16:45Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (server.isServing()) stopServer();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6206/buggy-version/src.java.voldemort.hashtrees.tasks.BGHashTreeServer.java", "BodyUseAPI": [], "Fixed commit": "b5d6aae5b708b1a2f4b17acc44499e9c02aed1ad", "Url": "https://api.github.com/repos/gomathi/voldemort", "Date": "2014-08-18T14:16:45Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) == (com.dale.superhairyjoe.states.PlayerState.SMALL)) { state = com.dale.superhairyjoe.states.PlayerState.BIG; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7722/buggy-version/SuperHairyJoe.src.com.dale.superhairyjoe.entity.mob.Player.java", "BodyUseAPI": [], "Fixed commit": "a3fd58444d9a5d5c5ebe7bae47de826b2d78a25e", "Url": "https://api.github.com/repos/DavidLejeune/SuperHairyJoe_JAVA", "Date": "2016-03-10T08:49:37Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((requestStr.trim().charAt(0)) == '/') requestStr = requestStr.replaceFirst(\"/\", \"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6840/buggy-version/src.main.java.hyphenated.djbot.DjService.java", "BodyUseAPI": ["java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "4579a901dc12b1e3892410f06f8f677e0b2d163a", "Url": "https://api.github.com/repos/Hyphen-ated/DJBot", "Date": "2017-01-14T06:00:52Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mContact.getTags()) != null) { for (com.studio08.ronen.Zivug.Model.ContactLab.Tag tag : mContact.getTags()) { if (!(stringBuilder.toString().isEmpty())) stringBuilder.append(\", \"); stringBuilder.append(tag.toString()); } stringBuilder.trimToSize(); mTagsTextView.setText(stringBuilder.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7341/buggy-version/app.src.main.java.com.studio08.ronen.Zivug.Activities.AddContactActivity.java", "BodyUseAPI": ["com.studio08.ronen.Zivug.Model.Contact.getTags()"], "Fixed commit": "55e13f36632d3cf381197658e03a4ef0ac519008", "Url": "https://api.github.com/repos/ronenlh/Shidduchim", "Date": "2016-09-02T06:31:41Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((position % 2) == 1) { convertView.setBackgroundResource(R.color.light_gray); }else { convertView.setBackgroundColor(Color.WHITE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4841/buggy-version/src.info.vanderkooy.ucheck.ListAdapter.java", "BodyUseAPI": [], "Fixed commit": "0c6ed2fdc03c4c6de94639385bf0738260da8821", "Url": "https://api.github.com/repos/niekvanderkooy/ucheck-android", "Date": "2012-06-27T19:40:41Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (CoreHub.localCfg.get(Preferences.STOREFS, false)) { configError(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3624/buggy-version/ch.elexis.omnivore.src.ch.elexis.omnivore.data.DocHandle.java", "BodyUseAPI": [], "Fixed commit": "316f8b4297640ab00ab5462fc40e73f70c9eee1f", "Url": "https://api.github.com/repos/elexis/elexis-3-base", "Date": "2014-05-26T07:26:39Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (uc != null) uc.disconnect();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8945/buggy-version/src.org.softcatala.traductor.ServerTranslation.java", "BodyUseAPI": ["java.net.HttpURLConnection.disconnect()"], "Fixed commit": "7bb1ce51a26f478f8bf86bf894c20de338f86309", "Url": "https://api.github.com/repos/Softcatala/TraductorSoftcatalaAndroid", "Date": "2012-03-12T15:31:06Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getConfig().getBoolean(\"machines.calculator.enabled\")) getCommand(\"calculator\").setExecutor(new com.tenjava.entries.MarianDCrafter.t2.machines.calculator.CalculatorCommandExecutor(this));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4022/buggy-version/src.main.java.com.tenjava.entries.MarianDCrafter.t2.TenJava.java", "BodyUseAPI": [], "Fixed commit": "e9b4909743e80e64cac2c6eb417da638a7f65565", "Url": "https://api.github.com/repos/tenjava/MarianDCrafter-t2", "Date": "2014-07-12T12:38:57Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userChoiceIsCorrect) { if ((cardIndex < (models.stacks.player.HandStack.MIN_CARD_NB)) || (cardIndex > (models.stacks.player.HandStack.MAX_IN_PLAY_CARD))) { tui.warn((((\"Please enter a number between \" + (models.stacks.player.HandStack.MIN_CARD_NB)) + \" and \") + (models.stacks.player.HandStack.MAX_IN_PLAY_CARD))); userChoiceIsCorrect = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6331/buggy-version/src.controllers.tui.gameProcessing.PlayingStepController.java", "BodyUseAPI": [], "Fixed commit": "7ef64d05da2bfb3ac40a224b827c93aaa10e7004", "Url": "https://api.github.com/repos/card-project/game", "Date": "2012-12-04T15:11:39Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t.getTournamentType().equalsIgnoreCase(\"s\")) { return false; }else { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5306/buggy-version/monaleen-tennis.src.main.java.events.tournaments.BasicTournamentSort.java", "BodyUseAPI": [], "Fixed commit": "345e2747901868a684be08efcefcc0838595fd59", "Url": "https://api.github.com/repos/wanosd/mts", "Date": "2014-04-02T11:20:57Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication().getName().equals(\"anonymousUser\"))) { model.addAttribute(\"message\", \"You are already registered!\"); return \"error\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5306/buggy-version/monaleen-tennis.src.main.java.controllers.MembersController.java", "BodyUseAPI": [], "Fixed commit": "345e2747901868a684be08efcefcc0838595fd59", "Url": "https://api.github.com/repos/wanosd/mts", "Date": "2014-04-02T11:20:57Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userId == 0) { userId = com.liferay.portal.service.UserLocalServiceUtil.getDefaultUserId(companyId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6407/buggy-version/portal-impl.src.com.liferay.portal.service.impl.WorkflowInstanceLinkLocalServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "f02067214c628be30977ee92d6b7c2546fbffcfd", "Url": "https://api.github.com/repos/brianchandotcom/liferay-portal", "Date": "2011-09-08T22:20:10Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((currLeft) == null) && (left.hasNext())) currLeft = left.getNext();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/239/buggy-version/src.relop.SimpleJoin.java", "BodyUseAPI": ["relop.Iterator.getNext()"], "Fixed commit": "b7a8f7c70919667fe3045944d730b1605ec54184", "Url": "https://api.github.com/repos/AhmedGad/Database", "Date": "2013-05-09T22:09:29Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state.get()) == (org.runnerup.common.tracker.TrackerState.ERROR)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6207/buggy-version/app.src.org.runnerup.tracker.Tracker.java", "BodyUseAPI": [], "Fixed commit": "3408f4ac40693dab758cc3b3b1a857b204cb4194", "Url": "https://api.github.com/repos/jonasoreland/runnerup", "Date": "2015-01-04T14:22:34Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(javax.websocket.Endpoint.class.isAssignableFrom(sec.getEndpointClass()))) { annotatedEndpointFactory = io.undertow.websockets.jsr.annotated.AnnotatedEndpointFactory.create(sec.getEndpointClass(), encodingFactory, pt.getParameterNames()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7843/buggy-version/websockets-jsr.src.main.java.io.undertow.websockets.jsr.ServerWebSocketContainer.java", "BodyUseAPI": ["io.undertow.websockets.jsr.annotated.AnnotatedEndpointFactory.create(sec.getEndpointClass(),io.undertow.websockets.jsr.EncodingFactory,pt.getParameterNames())", "javax.websocket.server.ServerEndpointConfig.getEndpointClass()"], "Fixed commit": "7a4e583c2622a68ce73683555ca3bf6f02f86e12", "Url": "https://api.github.com/repos/pferraro/undertow", "Date": "2015-10-26T22:49:36Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (debug == null) { return false; }else { throw new java.lang.IllegalArgumentException((debug + \"is not a valid argument\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/327/buggy-version/src.main.java.com.nbsaw.marisa.env.Environment.java", "BodyUseAPI": [], "Fixed commit": "93bf03bb1dc5ac90fa425709f5252ec91c707571", "Url": "https://api.github.com/repos/Nbsaw/Marisa", "Date": "2017-07-15T07:12:46Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mail.getFrom().equals(ms)) { if (!(mail.isAttachmentsCancelled())) { player.sendMessage(org.bitbucket.ucchy.undine.Messages.get(\"ErrorNoneReadPermission\")); return; } }else { if (!(ms.hasPermission(\"undine.read-all\"))) { player.sendMessage(org.bitbucket.ucchy.undine.Messages.get(\"ErrorNoneReadPermission\")); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5061/buggy-version/src.main.java.org.bitbucket.ucchy.undine.command.UndineAttachCommand.java", "BodyUseAPI": ["org.bitbucket.ucchy.undine.MailData.isAttachmentsCancelled()", "org.bitbucket.ucchy.undine.sender.MailSender.hasPermission(java.lang.String)"], "Fixed commit": "fc66f008f60d7e1b8fcea5b0d279138ec34a8d90", "Url": "https://api.github.com/repos/ucchyocean/UndineMailer", "Date": "2015-12-26T02:18:20Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((exCol != null) && (this.isFailOnError())) { throw new org.apache.maven.plugin.MojoExecutionException(\"One or more exceptions occurred during dependency-check analysis\", exCol); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6390/buggy-version/dependency-check-maven.src.main.java.org.owasp.dependencycheck.maven.AggregateMojo.java", "BodyUseAPI": [], "Fixed commit": "37b9f49467e2172a5a1e5eb7d9b77d77a9548b0a", "Url": "https://api.github.com/repos/jeremylong/DependencyCheck", "Date": "2017-07-22T11:22:37Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { mContent.getSettings().setMixedContentMode(WebSettings.MIXED_CONTENT_ALWAYS_ALLOW); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8511/buggy-version/app.src.main.java.com.adonai.manman.ManPageDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "4ff8d8a0f967d9684b7e2c164db7fea7f9a3642c", "Url": "https://api.github.com/repos/Adonai/Man-Man", "Date": "2015-02-22T16:59:56Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(result.isEmpty())) { network.insertItemTracked(result, result.getCount()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2744/buggy-version/src.main.java.com.raoulvdberge.refinedstorage.apiimpl.network.node.NetworkNodeImporter.java", "BodyUseAPI": ["net.minecraft.item.ItemStack.getCount()", "com.raoulvdberge.refinedstorage.apiimpl.network.node.NetworkNodeImporter.insertItemTracked(net.minecraft.item.ItemStack,result.getCount())"], "Fixed commit": "e997b7e140673b7428f67e33a3df2fa1d23577d8", "Url": "https://api.github.com/repos/raoulvdberge/refinedstorage", "Date": "2017-08-08T07:55:51Z"},
{"Line": "=>847", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((collectionDoVal.getTaxonomySet().size()) == 0) { courseLbl.getElement().getStyle().setDisplay(Display.NONE); addCourseBtn.setText(org.ednovo.gooru.client.mvp.shelf.collection.tab.info.CollectionInfoTabView.ADD_COURSE); removeCourseBtn.setVisible(false); getUiHandlers().updateCourse(collectionDo.getGooruOid(), courseCode, \"delete\"); courseCode = \"\"; }else { for (org.ednovo.gooru.shared.model.code.CodeDo code : collectionDoVal.getTaxonomySet()) { if ((code.getDepth()) == 2) { courseLbl.setText(code.getLabel()); courseLbl.getElement().getStyle().setDisplay(Display.BLOCK); courseCode = java.lang.Integer.toString(code.getCodeId()); addCourseBtn.setText(org.ednovo.gooru.client.mvp.shelf.collection.tab.info.CollectionInfoTabView.CHANGE_COURSE); removeCourseBtn.setVisible(true); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.shelf.collection.tab.info.CollectionInfoTabView.java", "BodyUseAPI": ["org.ednovo.gooru.shared.model.content.CollectionDo.getTaxonomySet()"], "Fixed commit": "63e2d12f3b0c32b90f35ba27129942a12d910f68", "Url": "https://api.github.com/repos/sravanthi1/Gooru-Web", "Date": "2014-05-12T08:40:05Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tmp_pg.Exists()) { gplx.xowa.addons.wikis.ctgs.htmls.catpages.dbs.Xoa_ttl zth_ttl = wiki.Ttl_parse(tmp_pg.Ns_id(), tmp_pg.Ttl_page_db()); zth_itm.Page_ttl_(zth_ttl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7796/buggy-version/400_xowa.src.gplx.xowa.addons.wikis.ctgs.htmls.catpages.dbs.Xoctg_catlink_loader.java", "BodyUseAPI": ["gplx.xowa.addons.wikis.ctgs.htmls.catpages.dbs.Xowd_page_itm.Ns_id()", "gplx.xowa.addons.wikis.ctgs.htmls.catpages.dbs.Xowd_page_itm.Ttl_page_db()", "gplx.xowa.addons.wikis.ctgs.htmls.catpages.dbs.Xow_wiki.Ttl_parse(tmp_pg.Ns_id(),tmp_pg.Ttl_page_db())"], "Fixed commit": "ee1b2bfbd8778197f5e9383447e9b534e06ecf5e", "Url": "https://api.github.com/repos/gnosygnu/xowa", "Date": "2016-10-12T16:45:03Z"},
{"Line": "=>652", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(testFolder.exists())) { testFolder.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8739/buggy-version/phresco-framework-web.src.main.java.com.photon.phresco.framework.actions.applications.Applications.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "f5c438fe65483f99cf71c031cbfa7f621a1a2537", "Url": "https://api.github.com/repos/photon-infotech/framework", "Date": "2013-05-10T11:07:03Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((name.length()) > 0) { for (Contact member : contacts) { if (member.getName().contains(name)) { searched.add(member); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6922/buggy-version/ContactManagerImpl.java", "BodyUseAPI": ["member.getName().contains(java.lang.String)"], "Fixed commit": "d9389a6f5770924e364390d94c6d0f15bd4779c3", "Url": "https://api.github.com/repos/BBK-PiJ-2014-23/cw4", "Date": "2015-02-14T19:16:10Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hello.getRows().get((line - 1)).getErrorStepIndex()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (esi != (-1)) { return java.lang.String.valueOf(esi); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/835/buggy-version/project.src.main.java.com.github.noraui.datas.web.services.service.impl.ModelServiceImpl.java", "BodyUseAPI": ["java.lang.String.valueOf(int)"], "Fixed commit": "86613ee4e1af52493bee1b0e5faac2b0bc34f670", "Url": "https://api.github.com/repos/NoraUi/noraui-datas-webservices", "Date": "2017-06-20T11:23:32Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((immobilized) == false) { vx += ((randFish.getX()) - (x)) / 1000; vy += ((randFish.getY()) - (y)) / 1000; }else { trackOnce(randFish); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1283/buggy-version/src.com.seancheey.data.fish.RectFish.java", "BodyUseAPI": [], "Fixed commit": "fdc04fd769f4119abb98bdb0be2a93f9962989a1", "Url": "https://api.github.com/repos/Seancheey/FishMimic", "Date": "2015-04-24T08:02:52Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (desc != null) b.setToolTip(desc);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/9066/buggy-version/USlickAI2D.src.org.xodia.usai2d.SelectionList.java", "BodyUseAPI": ["org.xodia.usai2d.Button.setToolTip(java.lang.String)"], "Fixed commit": "3af23955d2dba08bf44dbe4888ac12dcd5f0bd03", "Url": "https://api.github.com/repos/Nemferno/USlickAI2D", "Date": "2015-04-27T02:10:52Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"typeName\".equals(field)) { field = \"typeId\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3972/buggy-version/src.main.java.com.zrlog.model.Log.java", "BodyUseAPI": [], "Fixed commit": "1c25b3eea9d2791198bf3d6609c137a317c6f831", "Url": "https://api.github.com/repos/94fzb/zrlog", "Date": "2017-11-04T07:06:09Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"_private\".equals(field)) { field = \"private\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3972/buggy-version/src.main.java.com.zrlog.model.Log.java", "BodyUseAPI": [], "Fixed commit": "1c25b3eea9d2791198bf3d6609c137a317c6f831", "Url": "https://api.github.com/repos/94fzb/zrlog", "Date": "2017-11-04T07:06:09Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["parameters.get(\"frequency\").getAsInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (frequency <= (this.random.nextInt(100))) { int x = (blockX + (random.nextInt(16))) - (maxSpread / 2); int y = (random.nextInt((maxHeight - minHeight))) + minHeight; int z = (blockZ + (random.nextInt(16))) - (maxSpread / 2); spawnCluster(ores, new net.minecraft.util.math.BlockPos(x, y, z), clusterSize, variance, clusterCount, maxSpread, minHeight, maxHeight, random, world, blockReplace); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8481/buggy-version/src.main.java.com.mcmoddev.orespawn.impl.features.ClusterGenerator.java", "BodyUseAPI": [], "Fixed commit": "711838f692a056d217bf1ccaada876e30d56cc44", "Url": "https://api.github.com/repos/dshadowwolf/OreSpawn", "Date": "2017-10-12T04:18:49Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["parameters.get(\"frequency\").getAsInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (frequency <= (this.random.nextInt(100))) { int x = (blockX + (random.nextInt(16))) - (maxSpread / 2); int y = (random.nextInt((maxHeight - minHeight))) + minHeight; int z = (blockZ + (random.nextInt(16))) - (maxSpread / 2); int r = medianSize - variance; if (variance > 0) { r += (random.nextInt((2 * variance))) - variance; } spawnCloud(ores, new net.minecraft.util.math.BlockPos(x, y, z), r, maxSpread, minHeight, maxHeight, random, world, blockReplace); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8481/buggy-version/src.main.java.com.mcmoddev.orespawn.impl.features.NormalCloudGenerator.java", "BodyUseAPI": [], "Fixed commit": "711838f692a056d217bf1ccaada876e30d56cc44", "Url": "https://api.github.com/repos/dshadowwolf/OreSpawn", "Date": "2017-10-12T04:18:49Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((a < 0) || (a > 100)) { com.neophob.sematrix.listener.MessageProcessor.LOG.log(java.util.logging.Level.WARNING, com.neophob.sematrix.listener.MessageProcessor.IGNORE_COMMAND, (\"Invalid brightness value: \" + a)); break; }else { float f = a / 100.0F; com.neophob.sematrix.glue.Collector.getInstance().setBrightness(f); return com.neophob.sematrix.properties.ValidCommands.STATUS_MINI; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/264/buggy-version/src.main.java.com.neophob.sematrix.listener.MessageProcessor.java", "BodyUseAPI": ["java.util.logging.Logger.log(java.util.logging.Level,java.lang.String,java.lang.String)"], "Fixed commit": "ed88303ae37dce94841125e6305c17859cfc68c6", "Url": "https://api.github.com/repos/neophob/PixelController", "Date": "2012-11-12T10:15:50Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Element.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (navajoScript.equals(\"\")) { org.w3c.dom.Element value = ((org.w3c.dom.Element) (expression.getElementsByTagName(\"value\").item(0))); navajoScript = value.getTextContent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5174/buggy-version/core.com.dexels.navajo.core.src.com.dexels.navajo.dependency.TslPreCompiler.java", "BodyUseAPI": [], "Fixed commit": "d958dcd6d5f8e83d93c912f8eb8a6e14a69fbbb1", "Url": "https://api.github.com/repos/Dexels/navajo", "Date": "2015-04-23T15:01:44Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (rt == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7573/buggy-version/finalproj.src.finalproj.read.java", "BodyUseAPI": [], "Fixed commit": "de8b0766bf1a0b9499f010a028719ce34b897e2b", "Url": "https://api.github.com/repos/GoMADAO/AroundU", "Date": "2015-05-24T00:21:24Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (gain.isPatched()) { mValue = ((float) (java.lang.Math.pow(10.0, (0.05 * (gain.getLastValue()))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/9120/buggy-version/src.ddf.minim.ugens.Gain.java", "BodyUseAPI": ["ddf.minim.ugens.UGenInput.getLastValue()", "java.lang.Math.pow(double,(0.05 * (gain.getLastValue())))"], "Fixed commit": "c2aaf14234af251a151d553cb9c834aa6e49a8ec", "Url": "https://api.github.com/repos/ddf/Minim", "Date": "2011-05-20T22:10:43Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (typeFilterMethod != (com.ghostflying.portalwaitinglist.util.SettingUtil.getTypeFilterMethod())) { com.ghostflying.portalwaitinglist.util.SettingUtil.options.edit().putInt(com.ghostflying.portalwaitinglist.util.SettingUtil.TYPE_FILTER_METHOD_NAME, typeFilterMethod.ordinal()).apply(); com.ghostflying.portalwaitinglist.util.SettingUtil.notifyChange(typeFilterMethod); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2518/buggy-version/app.src.main.java.com.ghostflying.portalwaitinglist.util.SettingUtil.java", "BodyUseAPI": ["com.ghostflying.portalwaitinglist.util.SettingUtil.options.edit().putInt(java.lang.String,int)", "com.ghostflying.portalwaitinglist.util.SettingUtil.options.edit().putInt(com.ghostflying.portalwaitinglist.util.SettingUtil.TYPE_FILTER_METHOD_NAME, typeFilterMethod.ordinal()).apply()", "com.ghostflying.portalwaitinglist.util.SettingUtil.notifyChange(com.ghostflying.portalwaitinglist.util.SettingUtil.TypeFilterMethod)", "com.ghostflying.portalwaitinglist.util.SettingUtil.TypeFilterMethod.ordinal()"], "Fixed commit": "0c051c4b365e11beb08852b6d5fb61914e9f66d4", "Url": "https://api.github.com/repos/GhostFlying/PortalWaitingList", "Date": "2015-01-25T08:12:24Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ctx.population().LOC()) != null) locStr = ctx.population().LOC().getText(); else locStr = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4510/buggy-version/src.master.utilities.pfe.PFEVisitor.java", "BodyUseAPI": ["ctx.population().LOC().getText()", "ctx.population().LOC()", "PFExpressionParser.PopContext.population()"], "Fixed commit": "235d543ce1fea31efc60cd8c6df5c828cae5500d", "Url": "https://api.github.com/repos/CompEvol/MASTER", "Date": "2014-06-11T06:31:21Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (val == null) { return val; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1802/buggy-version/src.main.java.org.agmip.dome.Assume.java", "BodyUseAPI": [], "Fixed commit": "bb83df4ea7939223df4e7d940a22192cf70f0960", "Url": "https://api.github.com/repos/MengZhang/dome", "Date": "2013-04-10T15:13:03Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stop) { beendeThreadeebau(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4170/buggy-version/src.tgm.sew.hit.roboterfabrik.MontageMitarbeiter.java", "BodyUseAPI": [], "Fixed commit": "a6fa5e79d3c0d89310977066bdcddc588ad2d4a7", "Url": "https://api.github.com/repos/dscholz-tgm/Roboterfabrik", "Date": "2013-10-03T15:57:55Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mNowPlaying.next()) != null) { playFetched(mNowPlaying.next().getMusicLocation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8027/buggy-version/src.com.example.simpleplayer.MusicPlayerService.java", "BodyUseAPI": ["com.example.simpleplayer.MusicPlayerService.playFetched(mNowPlaying.next().getMusicLocation())", "mNowPlaying.next().getMusicLocation()", "com.example.simpleplayer.Queue.next()"], "Fixed commit": "99380ce3d76544f49769a22cbabf13ba0c4d7672", "Url": "https://api.github.com/repos/derekisbusy/MP3Player", "Date": "2015-11-11T02:18:00Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.galaipa.sbb.ArenaManager.getManager().getArena(event.getPlayer())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((a.inGame) == true) { if (p.getItemInHand().hasItemMeta()) { if (p.getItemInHand().getItemMeta().hasDisplayName()) { if (p.getItemInHand().getItemMeta().getDisplayName().equalsIgnoreCase(((org.bukkit.ChatColor.BLUE) + \"Menu\"))) { event.getPlayer().openInventory(io.github.galaipa.sbb.InGameGui.myInventory); event.setCancelled(true); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/413/buggy-version/src.io.github.galaipa.sbb.AdminGui.java", "BodyUseAPI": [], "Fixed commit": "fc6cbde1a0b45e3c79679e5b371fdf8e44541561", "Url": "https://api.github.com/repos/galaipa/SuperBuildBattle2", "Date": "2016-01-09T19:21:17Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (stopTime.before(java.util.Calendar.getInstance())) { stopTime.roll(java.util.Calendar.DAY_OF_MONTH, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4194/buggy-version/src.uk.co.gidley.clockRadio.ClockRadioActivity.java", "BodyUseAPI": ["java.util.Calendar.roll(int,int)"], "Fixed commit": "4ae23b17fd4f5cd35367039242938466e0a509e5", "Url": "https://api.github.com/repos/bgidley/ClockRadio", "Date": "2011-08-17T09:21:06Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nameArray[cec].toString().equals(\"Match_addr\")) { newFeature.setValue(4, valueArray[cec].toString()); java.lang.System.out.println(valueArray[cec].toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8648/buggy-version/src.org.oki.transmodel.arcgisAddIns.reGeocode.java", "BodyUseAPI": ["com.esri.arcgis.geodatabase.Feature.setValue(int,java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.lang.Object.toString()", "java.lang.Object.toString()"], "Fixed commit": "ef23c968f2ff6d87f0380d229f23b2e35d637ad4", "Url": "https://api.github.com/repos/okiandrew/ArcMapTools", "Date": "2012-08-17T14:12:55Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nx.util.jme3.base.SpatialUtil.gatherFirstSpatial(com.nx.util.jme3.base.Spatial,java.lang.Class<T>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (s != null) { return s; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3887/buggy-version/src.main.java.com.nx.util.jme3.base.SpatialUtil.java", "BodyUseAPI": [], "Fixed commit": "3fe455fef69fdade1accb5f8af506e8512bbc38f", "Url": "https://api.github.com/repos/NemesisMate/UtilJME3-Base", "Date": "2017-09-29T12:02:59Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!success) { completion.invoke(false, null); }else if ((auth.getAccessToken()) == null) { completion.invoke(false, null); }else { initializePlayerIfNeeded(auth.getAccessToken(), new com.reactlibrary.RCTSpotifyCallback<java.lang.Boolean>() { @java.lang.Override public void invoke(java.lang.Boolean loggedIn, com.reactlibrary.RCTSpotifyError error) { completion.invoke(loggedIn, error); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6301/buggy-version/android.src.main.java.com.reactlibrary.RCTSpotifyModule.java", "BodyUseAPI": [], "Fixed commit": "345730b375ccf27602167adee7a6928ee07c5eeb", "Url": "https://api.github.com/repos/lufinkey/react-native-spotify", "Date": "2017-11-14T07:12:17Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x < 0) { overdraw = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5801/buggy-version/src.main.java.com.jjoe64.graphview.series.PointsGraphSeries.java", "BodyUseAPI": [], "Fixed commit": "86f39fca338d7dc082b935a082af46712d90489c", "Url": "https://api.github.com/repos/hcmlab/GraphView", "Date": "2015-06-09T12:02:58Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.jcup.egradle.junit.JUnitResultFilesFinder.findTestFilesInRootProjectFolder(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (files.isEmpty()) { monitor.worked(100); org.eclipse.swt.widgets.Display.getDefault().asyncExec(new java.lang.Runnable() { @java.lang.Override public void run() { monitor.worked(100); org.eclipse.jface.dialogs.MessageDialog.openInformation(de.jcup.egradle.eclipse.api.EGradleUtil.getActiveWorkbenchShell(), \"No test results found\", ((\"There are no test results to import from root project:\\n\\'\" + (rootFolder.getAbsolutePath())) + \"\\'\\n\\nMaybe you have cleaned your project or did you forget to execute your tests?\")); } }); return org.eclipse.core.runtime.Status.OK_STATUS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5536/buggy-version/egradle-plugin-junit-contribution.src.main.java-eclipse.de.jcup.egradle.eclipse.junit.contribution.handlers.ImportGradleJunitResultsJob.java", "BodyUseAPI": [], "Fixed commit": "f9a202a7128af5e8285e1a10bbc319e3d0995a46", "Url": "https://api.github.com/repos/de-jcup/egradle", "Date": "2016-09-20T14:54:56Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (key != null) { if (addToPrevious) yaml.getChildren().get(((yaml.getChildren().size()) - 1)).add(yamlLine(key, value.trim())); else yaml.add(yamlLine(key, value.trim())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3093/buggy-version/src.fitnesse.wikitext.parser.FrontMatter.java", "BodyUseAPI": ["yaml.getChildren().get(((yaml.getChildren().size()) - 1)).add(fitnesse.wikitext.parser.Symbol)", "fitnesse.wikitext.parser.FrontMatter.yamlLine(java.lang.String,java.lang.String)", "fitnesse.wikitext.parser.FrontMatter.yamlLine(java.lang.String,java.lang.String)", "fitnesse.wikitext.parser.Symbol.add(fitnesse.wikitext.parser.Symbol)"], "Fixed commit": "6eab569301668945686c9cb6d149713c442302ac", "Url": "https://api.github.com/repos/amolenaar/fitnesse", "Date": "2016-08-25T21:07:51Z"},
{"Line": "=>580", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getListHeader()) != null) position--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6604/buggy-version/src.com.money.manager.ex.fragment.AllDataFragment.java", "BodyUseAPI": [], "Fixed commit": "3c6705e05dcbe61e2233ef332569609208a3eadb", "Url": "https://api.github.com/repos/AlessandroLazzari/android-money-manager-ex", "Date": "2015-02-24T20:02:10Z"},
{"Line": "=>498", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getListHeader()) != null) position--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6604/buggy-version/src.com.money.manager.ex.fragment.AllDataFragment.java", "BodyUseAPI": [], "Fixed commit": "3c6705e05dcbe61e2233ef332569609208a3eadb", "Url": "https://api.github.com/repos/AlessandroLazzari/android-money-manager-ex", "Date": "2015-02-24T20:02:10Z"},
{"Line": "=>713", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((workersCache.getList().size()) > 0) { java.util.List<java.lang.String> list = workersCache.getList(); java.lang.String designatedWorker = list.get(random.nextInt(list.size())); java.lang.String assignmentPath = ((\"/assign/\" + designatedWorker) + \"/\") + ((java.lang.String) (ctx)); org.apache.zookeeper.book.Master.LOG.info((\"Assignment path: \" + assignmentPath)); createAssignment(assignmentPath, data); }else { org.apache.zookeeper.book.Master.LOG.info(\"No worker for assigning tasks.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1262/buggy-version/src.main.java.org.apache.zookeeper.book.Master.java", "BodyUseAPI": ["org.apache.zookeeper.book.ChildrenCache.getList()"], "Fixed commit": "1082e53acebb4c529d5c7e86e097d33963d70844", "Url": "https://api.github.com/repos/kevinojt/zookeeper-book-example", "Date": "2016-11-13T14:46:07Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["movement.MapRouteMovement.getTotalDistance(java.util.List<movement.map.MapNode>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((distance == 0) && (timeDiff == 0)) { speed = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/9135/buggy-version/movement.MapRouteMovement.java", "BodyUseAPI": [], "Fixed commit": "0446db0dcbf213edf60ee89758409037270bc8f6", "Url": "https://api.github.com/repos/linzhiqi/one", "Date": "2015-04-25T09:38:07Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((objs[i]) == null) { s.append(\"null\"); }else { s.append(objs[i].toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1783/buggy-version/internalLibraries.serviceutils.src.main.java.com.emc.storageos.services.util.Strings.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "a9e44a7aa0d827a028691005da5c9d37da23cb0d", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-09-18T14:24:04Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player instanceof net.minecraft.entity.player.EntityPlayerMP) { ((net.minecraft.entity.player.EntityPlayerMP) (player)).playerNetServerHandler.ticksForFloatKick = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3601/buggy-version/common.mekanism.common.network.PacketPortableTeleport.java", "BodyUseAPI": [], "Fixed commit": "e77229817d1ac202eac91ee7531cbd4e76e37802", "Url": "https://api.github.com/repos/aidancbrady/Mekanism", "Date": "2014-03-16T00:31:31Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (musicService.isPaused()) { playOrPauseButton.setImageResource(R.drawable.ic_play_arrow_white_48dp); pulsator.setDuration(7000); }else { playOrPauseButton.setImageResource(R.drawable.ic_pause_white_24dp); pulsator.setDuration(2000); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7442/buggy-version/app.src.main.java.com.lukechenshui.beatpulse.layout.PlayActivity.java", "BodyUseAPI": [], "Fixed commit": "486e4653d4c6d143184b759f1aa4bffb3910e403", "Url": "https://api.github.com/repos/chenshuiluke/BeatPulse", "Date": "2016-12-14T05:36:15Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id == 0) { id = categoryService.findAll().get(0).getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5626/buggy-version/src.main.java.ru.grigory.site.controller.CategoryController.java", "BodyUseAPI": [], "Fixed commit": "8ad6edd97f27cf3abb1f1f4ad3bb334054b22117", "Url": "https://api.github.com/repos/grigory-panov/dvery-goroda", "Date": "2014-10-19T14:42:03Z"},
{"Line": "=>622", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((v.getTag()) != null) { nameRecommendingTo = v.getTag().toString(); }else { nameRecommendingTo = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5915/buggy-version/app.src.main.java.look.myapplication.MainActivity.java", "BodyUseAPI": ["android.view.View.getTag()", "v.getTag().toString()"], "Fixed commit": "6e6952804c7e741ab784595a6d62dc5637a35329", "Url": "https://api.github.com/repos/kheilma/307-Team-30", "Date": "2017-04-06T21:14:18Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (postition < 10) { pos = \"0\" + postition; }else { pos = postition + \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2730/buggy-version/src.main.java.org.c02.iot.InternetButtonImpl.java", "BodyUseAPI": [], "Fixed commit": "10cd79b2bbec8fa36fbb495abfc0d5ccc08a6dea", "Url": "https://api.github.com/repos/chsaria/InternetButton", "Date": "2017-02-04T12:04:17Z"},
{"Line": "=>862", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hazelcast.config.XmlConfigBuilder.cleanNodeName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (\"optimize-queries\".equals(nodeName)) { mapConfig.setOptimizeQueries(checkTrue(value)); }else if (\"wan-replication-ref\".equals(nodeName)) { mapWanReplicationRefHandle(n, mapConfig); }else if (\"indexes\".equals(nodeName)) { mapIndexesHandle(n, mapConfig); }else if (\"entry-listeners\".equals(nodeName)) { mapEntryListenerHandle(n, mapConfig); }else if (\"partition-strategy\".equals(nodeName)) { mapConfig.setPartitioningStrategyConfig(new com.hazelcast.config.PartitioningStrategyConfig(value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2353/buggy-version/hazelcast.src.main.java.com.hazelcast.config.XmlConfigBuilder.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "83f5bbdb7b44dd34608ee9d795ce670bd795eb87", "Url": "https://api.github.com/repos/hazelcast/hazelcast", "Date": "2014-09-18T13:06:30Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getSession().getAttribute(java.lang.String)", "java.lang.Integer.parseInt(request.getParameter(\"post_id\"))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (model.PostsManager.getInstance().getPostUpvotes().get(postId).contains(logged)) { model.PostsManager.getInstance().upvoteToDownvote(logged, postId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/9083/buggy-version/src.controller.DislikeServlet.java", "BodyUseAPI": ["model.PostsManager.getInstance().upvoteToDownvote(java.lang.String,int)"], "Fixed commit": "02a344fedc27f2db4eea0d1bf1253d0c3b384f9f", "Url": "https://api.github.com/repos/katerinapetkowa/project", "Date": "2016-10-12T09:34:22Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(request.getParameter(\"post_id\"))", "request.getSession().getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (model.PostsManager.getInstance().getPostDownvotes().get(postId).contains(logged)) { model.PostsManager.getInstance().downvoteToUpvote(logged, postId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/9083/buggy-version/src.controller.LikeServlet.java", "BodyUseAPI": ["model.PostsManager.getInstance().downvoteToUpvote(java.lang.String,int)"], "Fixed commit": "02a344fedc27f2db4eea0d1bf1253d0c3b384f9f", "Url": "https://api.github.com/repos/katerinapetkowa/project", "Date": "2016-10-12T09:34:22Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tachyon.util.network.NetworkAddressUtils.WINDOWS)) { java.util.List<java.net.NetworkInterface> netIFs = java.util.Collections.list(networkInterfaces); java.util.Collections.reverse(netIFs); networkInterfaces = java.util.Collections.enumeration(netIFs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3734/buggy-version/common.src.main.java.tachyon.util.network.NetworkAddressUtils.java", "BodyUseAPI": [], "Fixed commit": "f3922bb4f6ee133b4b4abfd66c61d003b282cc33", "Url": "https://api.github.com/repos/pfxuan/tachyon", "Date": "2015-08-20T15:04:44Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.JSON.parseObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (object.getString(\"request_method\").equals(\"CONNECT\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5603/buggy-version/src.main.java.com.credithc.spider.TemplateMain.java", "BodyUseAPI": [], "Fixed commit": "c1ba42de22a19c8cecda9c3e0db0c98a0b173f26", "Url": "https://api.github.com/repos/shawn-bang/spiderPlugin", "Date": "2017-08-03T08:33:39Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.srge.card.RunningInfo.getTimedQuiz()) { mCountDown.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/361/buggy-version/Bonsai.src.org.bonsai.activities.MultiChoiceActivity.java", "BodyUseAPI": [], "Fixed commit": "bc8b290874323caa13f91c6d17acc7439c77d809", "Url": "https://api.github.com/repos/Paradigm-FGCU/bonsai", "Date": "2014-04-21T02:32:30Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mTrips.size()) > 0) { mNames = mDbHelper.getAllNamesInTripId(mTrips.get(0).getId()); }else { mNames = new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4563/buggy-version/app.src.main.java.com.teamltt.carcare.activity.DynamicActivity.java", "BodyUseAPI": ["mTrips.get(0).getId()", "java.util.List<com.teamltt.carcare.model.Trip>.get(int)", "com.teamltt.carcare.database.DbHelper.getAllNamesInTripId(mTrips.get(0).getId())"], "Fixed commit": "f40406e23359a118479f56543127a9def460cffe", "Url": "https://api.github.com/repos/LTT-Gatech/CarCareAndroid", "Date": "2017-04-17T05:02:51Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((input) == null) && ((editor) != null)) { editor.rebuildOutline(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5803/buggy-version/basheditor-plugin.src.main.java-eclipse.de.jcup.basheditor.outline.BashEditorContentOutlinePage.java", "BodyUseAPI": [], "Fixed commit": "0e553250c98ebc0ffbe32187e6d0bc4a0147c204", "Url": "https://api.github.com/repos/de-jcup/eclipse-bash-editor", "Date": "2017-09-19T13:53:07Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((count) <= 10) && ((count) >= 6)) { org.bukkit.Bukkit.broadcastMessage(((((((org.bukkit.ChatColor.YELLOW) + \"The match will begin in \") + (org.bukkit.ChatColor.DARK_RED)) + (count)) + (org.bukkit.ChatColor.YELLOW)) + \" seconds.\")); me.rainoboy97.scrimmage.Start start = new me.rainoboy97.scrimmage.Start(plugin, ((count) - 1)); org.bukkit.Bukkit.getServer().getScheduler().runTaskLater(plugin, start, 20L); }else if (((count) <= 5) && ((count) >= 2)) { org.bukkit.Bukkit.broadcastMessage(((((((org.bukkit.ChatColor.RED) + \"The match will begin in \") + (org.bukkit.ChatColor.DARK_RED)) + (count)) + (org.bukkit.ChatColor.RED)) + \" seconds.\")); me.rainoboy97.scrimmage.Start start = new me.rainoboy97.scrimmage.Start(plugin, ((count) - 1)); org.bukkit.Bukkit.getServer().getScheduler().runTaskLater(plugin, start, 20L); }else if ((count) == 1) { org.bukkit.Bukkit.broadcastMessage(((((((org.bukkit.ChatColor.DARK_GREEN) + \"The match will begin in \") + (org.bukkit.ChatColor.DARK_RED)) + (count)) + (org.bukkit.ChatColor.DARK_GREEN)) + \" second.\")); me.rainoboy97.scrimmage.Start start = new me.rainoboy97.scrimmage.Start(plugin, ((count) - 1)); org.bukkit.Bukkit.getServer().getScheduler().runTaskLater(plugin, start, 20L); }else { Scrimmage.starting = false; Scrimmage.gameActive = true; org.bukkit.Bukkit.broadcastMessage(((org.bukkit.ChatColor.GREEN) + \"Let the games begin!\")); for (java.lang.Object e : Scrimmage.team) { try { java.lang.String s = ((java.lang.String) (e)); org.bukkit.entity.Player p = ((org.bukkit.entity.Player) (org.bukkit.Bukkit.getOfflinePlayer(s))); p.setGameMode(GameMode.SURVIVAL); p.removePotionEffect(PotionEffectType.INVISIBILITY); p.removePotionEffect(PotionEffectType.SATURATION); p.getInventory().clear(); org.bukkit.inventory.ItemStack item; java.util.Iterator iterItems = Var.items.iterator(); java.util.Iterator iterAmounts = Var.amounts.iterator(); for (int i = 1; i <= (Var.itemAmount); i++) { if ((iterItems.hasNext()) && (iterAmounts.hasNext())) { java.lang.Object idEntry = iterItems.next(); java.lang.Object amountEntry = iterAmounts.next(); item = new org.bukkit.inventory.ItemStack(java.lang.Integer.parseInt(idEntry.toString()), java.lang.Integer.parseInt(amountEntry.toString())); p.getInventory().setItem((i - 1), item); } } if ((Var.helmet) != 0) { org.bukkit.inventory.ItemStack helmet = new org.bukkit.inventory.ItemStack(Var.helmet, 1); p.getInventory().setHelmet(helmet); }else { p.getInventory().setHelmet(null); } if ((Var.chestplate) != 0) { org.bukkit.inventory.ItemStack chestplate = new org.bukkit.inventory.ItemStack(Var.chestplate, 1); p.getInventory().setChestplate(chestplate); }else { p.getInventory().setChestplate(null); } if ((Var.leggings) != 0) { org.bukkit.inventory.ItemStack leggings = new org.bukkit.inventory.ItemStack(Var.leggings, 1); p.getInventory().setLeggings(leggings); }else { p.getInventory().setLeggings(null); } if ((Var.boots) != 0) { org.bukkit.inventory.ItemStack boots = new org.bukkit.inventory.ItemStack(Var.boots, 1); p.getInventory().setBoots(boots); }else { p.getInventory().setBoots(null); } p.updateInventory(); org.bukkit.Location loc = p.getLocation(); loc = Var.teamSpawn; me.rainoboy97.scrimmage.RespawnPlayer respawnPlayer = new me.rainoboy97.scrimmage.RespawnPlayer(plugin, p, loc); org.bukkit.Bukkit.getServer().getScheduler().runTaskLater(plugin, respawnPlayer, 1L); } catch (java.lang.Exception z) { } } for (java.lang.Object e : Scrimmage.enemyTeam) { try { java.lang.String s = ((java.lang.String) (e)); org.bukkit.entity.Player p = ((org.bukkit.entity.Player) (org.bukkit.Bukkit.getOfflinePlayer(s))); p.setGameMode(GameMode.SURVIVAL); p.removePotionEffect(PotionEffectType.INVISIBILITY); p.removePotionEffect(PotionEffectType.SATURATION); p.getInventory().clear(); org.bukkit.inventory.ItemStack item; java.util.Iterator iterItems = Var.items.iterator(); java.util.Iterator iterAmounts = Var.amounts.iterator(); for (int i = 1; i <= (Var.itemAmount); i++) { if ((iterItems.hasNext()) && (iterAmounts.hasNext())) { java.lang.Object idEntry = iterItems.next(); java.lang.Object amountEntry = iterAmounts.next(); item = new org.bukkit.inventory.ItemStack(java.lang.Integer.parseInt(idEntry.toString()), java.lang.Integer.parseInt(amountEntry.toString())); p.getInventory().setItem((i - 1), item); } } if ((Var.helmet) != 0) { org.bukkit.inventory.ItemStack helmet = new org.bukkit.inventory.ItemStack(Var.helmet, 1); p.getInventory().setHelmet(helmet); }else { p.getInventory().setHelmet(null); } if ((Var.chestplate) != 0) { org.bukkit.inventory.ItemStack chestplate = new org.bukkit.inventory.ItemStack(Var.chestplate, 1); p.getInventory().setChestplate(chestplate); }else { p.getInventory().setChestplate(null); } if ((Var.leggings) != 0) { org.bukkit.inventory.ItemStack leggings = new org.bukkit.inventory.ItemStack(Var.leggings, 1); p.getInventory().setLeggings(leggings); }else { p.getInventory().setLeggings(null); } if ((Var.boots) != 0) { org.bukkit.inventory.ItemStack boots = new org.bukkit.inventory.ItemStack(Var.boots, 1); p.getInventory().setBoots(boots); }else { p.getInventory().setBoots(null); } p.updateInventory(); org.bukkit.Location loc = p.getLocation(); loc = Var.enemyTeamSpawn; me.rainoboy97.scrimmage.RespawnPlayer respawnPlayer = new me.rainoboy97.scrimmage.RespawnPlayer(plugin, p, loc); for (long i = 1; i <= 20; i++) org.bukkit.Bukkit.getServer().getScheduler().runTaskLater(plugin, respawnPlayer, i); } catch (java.lang.Exception z) { } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6704/buggy-version/src.me.rainoboy97.scrimmage.Start.java", "BodyUseAPI": ["org.bukkit.Bukkit.broadcastMessage(((((((org.bukkit.ChatColor.YELLOW) + \"The match will begin in \") + (org.bukkit.ChatColor.DARK_RED)) + (count)) + (org.bukkit.ChatColor.YELLOW)) + \" seconds.\"))", "org.bukkit.Bukkit.broadcastMessage(((((((org.bukkit.ChatColor.DARK_GREEN) + \"The match will begin in \") + (org.bukkit.ChatColor.DARK_RED)) + (count)) + (org.bukkit.ChatColor.DARK_GREEN)) + \" second.\"))", "org.bukkit.Bukkit.broadcastMessage(((((((org.bukkit.ChatColor.RED) + \"The match will begin in \") + (org.bukkit.ChatColor.DARK_RED)) + (count)) + (org.bukkit.ChatColor.RED)) + \" seconds.\"))"], "Fixed commit": "23a368bc3b90fbc23f92049662cad40acd2bf4c9", "Url": "https://api.github.com/repos/RainoBoy97/Scrimmage", "Date": "2013-09-02T15:40:24Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mGameSettings.getBoolean(com.advancementbureau.defcon.PREFERENCES_NOTIFICATION, true)) { checkBox.setChecked(true); }else { checkBox.setChecked(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5325/buggy-version/src.com.advancementbureau.defcon.DefconSettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "44f1e957d43c5261d5c3d1f6566b92bbdd2ec3ab", "Url": "https://api.github.com/repos/ABianchini/DEFCON", "Date": "2012-03-29T01:47:19Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getMessage()) != null) { android.util.Log.e(com.dnnproject.android.dnnandroidclient.DnnServiceThread.TAG, e.getMessage()); }else { android.util.Log.e(com.dnnproject.android.dnnandroidclient.DnnServiceThread.TAG, ((e.getClass().getSimpleName()) + \"Occured!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6467/buggy-version/app.src.main.java.com.dnnproject.android.dnnandroidclient.DnnServiceThread.java", "BodyUseAPI": ["java.lang.Class<? extends java.io.IOException>.getSimpleName()", "java.io.IOException.getClass()", "android.util.Log.e(java.lang.String,java.lang.String)", "java.io.IOException.getMessage()", "android.util.Log.e(java.lang.String,java.lang.String)"], "Fixed commit": "de9b4fc52747224d5666c6e628b2d77e7479e0c8", "Url": "https://api.github.com/repos/NitaiLavie/DNNAndroidClient", "Date": "2017-05-12T09:02:05Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.poi.ss.usermodel.Row.getCell(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (cell == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7375/buggy-version/src.main.java.de.bischinger.buchungstool.business.CapacityReader.java", "BodyUseAPI": [], "Fixed commit": "83e2b0be5ae6854a22f28d13df027eed781fe4d2", "Url": "https://api.github.com/repos/AlexBischof/bv3", "Date": "2017-02-02T19:35:46Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entity.getPassword().length()) <= (PASSWORD_LENGTH)) { entity.setPassword(passwordEncoder.encode(entity.getPassword())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7257/buggy-version/src.main.java.com.startup.project.services.UserService.java", "BodyUseAPI": ["com.startup.project.entities.User.getPassword()", "com.startup.project.entities.User.setPassword(passwordEncoder.encode(entity.getPassword()))", "org.springframework.security.crypto.password.PasswordEncoder.encode(entity.getPassword())"], "Fixed commit": "aecd5d097f7845e5215ec3078237732f73d13ee3", "Url": "https://api.github.com/repos/VictorFigurskiy/StartupInvestmentSystem", "Date": "2017-10-03T20:45:48Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["models.map.Tile.getAreaEffect()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (areaEffect == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4503/buggy-version/src.models.skills.SneakSkills.DetectRemoveTrapSkill.java", "BodyUseAPI": [], "Fixed commit": "c41ff265602cb10a79681d67b6749ac836c8ad74", "Url": "https://api.github.com/repos/kanye2021/OOP-Game-S16-Iteration2", "Date": "2016-03-07T20:13:11Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (products == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2352/buggy-version/app.src.main.java.com.talkramer.finalproject.model.Model.java", "BodyUseAPI": [], "Fixed commit": "a1278b583ae36326bd5cff577684e9895334ab4e", "Url": "https://api.github.com/repos/yaniv51/AndroidFinalProject", "Date": "2016-08-13T11:54:20Z"},
{"Line": "=>1138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.imag.adele.apam.util.CoreMetadataParser.parseString(java.lang.String,org.apache.felix.ipojo.metadata.Element,java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (value == null) return fr.imag.adele.apam.declarations.InjectedPropertyPolicy.BOTH; else return injected;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8882/buggy-version/runtime.core.src.main.java.fr.imag.adele.apam.util.CoreMetadataParser.java", "BodyUseAPI": [], "Fixed commit": "0cd59ccc6898ff79ef927320e5bc710f58678b71", "Url": "https://api.github.com/repos/AdeleResearchGroup/ApAM", "Date": "2013-10-07T12:39:35Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.util.HashMap<java.lang.String, java.lang.Object>>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (length == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/277/buggy-version/app.src.main.java.com.maxleapmobile.gitmaster.ui.fragment.RecommendFragment.java", "BodyUseAPI": [], "Fixed commit": "fe2b9ab4745f2a5df970a6217b39fcca58f91923", "Url": "https://api.github.com/repos/MaxLeapMobile/MaxLeapGit-Android", "Date": "2015-11-09T06:33:53Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((format.indexOf(\"a \")) == 0) { AmPm = new java.text.SimpleDateFormat(\"a \").format(mCalendar.getTime()); }else { AmPm = new java.text.SimpleDateFormat(\"a\").format(mCalendar.getTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8435/buggy-version/packages.SystemUI.src.com.android.systemui.statusbar.policy.Clock.java", "BodyUseAPI": [], "Fixed commit": "95242d86a01acf09b919dbad9624206a91125dc3", "Url": "https://api.github.com/repos/AICP/frameworks_base", "Date": "2013-10-08T17:49:16Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (thirdBreak < CurrTimeInMins) { javax.swing.JOptionPane.showMessageDialog(null, \"Tu otro break ya paso!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8896/buggy-version/TP_Helper_Git.src.BreakReminder.SetBreak.java", "BodyUseAPI": [], "Fixed commit": "519564f397ab9e39ea585cb799ba80824556b118", "Url": "https://api.github.com/repos/OswaldoRios/TP_Helper", "Date": "2015-05-15T18:36:25Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lunch < CurrTimeInMins) { javax.swing.JOptionPane.showMessageDialog(null, \"Tu Lunch ya paso!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8896/buggy-version/TP_Helper_Git.src.BreakReminder.SetBreak.java", "BodyUseAPI": [], "Fixed commit": "519564f397ab9e39ea585cb799ba80824556b118", "Url": "https://api.github.com/repos/OswaldoRios/TP_Helper", "Date": "2015-05-15T18:36:25Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstBreak < CurrTimeInMins) { javax.swing.JOptionPane.showMessageDialog(null, \"Tu primer break ya paso!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8896/buggy-version/TP_Helper_Git.src.BreakReminder.SetBreak.java", "BodyUseAPI": [], "Fixed commit": "519564f397ab9e39ea585cb799ba80824556b118", "Url": "https://api.github.com/repos/OswaldoRios/TP_Helper", "Date": "2015-05-15T18:36:25Z"},
{"Line": "=>623", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tempPossibleParam.getType().getType().getQualifiedName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (tempQualifiedName.endsWith(\"[]\")) { tempQualifiedName = tempQualifiedName.substring(0, ((tempQualifiedName.length()) - 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7584/buggy-version/de.gebit.integrity.dsl.ui.src.de.gebit.integrity.ui.contentassist.DSLProposalProvider.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "cc9e622692030cf81dce5535ee2875c44893d315", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2013-04-28T17:09:21Z"},
{"Line": "=>645", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tempPossibleResult.getField().getQualifiedName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (tempQualifiedName.endsWith(\"[]\")) { tempQualifiedName = tempQualifiedName.substring(0, ((tempQualifiedName.length()) - 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7584/buggy-version/de.gebit.integrity.dsl.ui.src.de.gebit.integrity.ui.contentassist.DSLProposalProvider.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "cc9e622692030cf81dce5535ee2875c44893d315", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2013-04-28T17:09:21Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.newdawn.slick.GameContainer.getInput()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (input.isKeyDown(Input.KEY_UP)) { sprite = up; gameBoard.setPlayerPosition(0, (-1), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4030/buggy-version/src.se.chalmers.group11.BombSquad.GamePlayState.java", "BodyUseAPI": [], "Fixed commit": "0bbf17d9a5b89b6cc14eb32174f030b8d8bc8d62", "Url": "https://api.github.com/repos/epoxy/BombSquad", "Date": "2012-04-25T08:38:41Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((findViewById(R.id.gridRootLayout)) != null) { mRecyclerView.setLayoutManager(new android.support.v7.widget.GridLayoutManager(this, spanCount)); }else { mRecyclerView.setLayoutManager(new android.support.v7.widget.LinearLayoutManager(this)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4948/buggy-version/source-code.app.src.main.java.org.buildmlearn.toolkit.activity.TemplateActivity.java", "BodyUseAPI": [], "Fixed commit": "e3f7d0251ae322e3b6fd07221a4557dd7b882aaa", "Url": "https://api.github.com/repos/codingblazer/BuildmLearn-Toolkit-Android", "Date": "2017-02-27T09:54:00Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.ServletContext.getResourcePaths(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (paths != null) { for (java.lang.String path : paths) { leap.lang.servlet.ServletResource resource = leap.lang.servlet.Servlets.getResource(sc, path); if (!(resource.isDirectory())) { add(resource, leap.core.Strings.removeStart(path, pathPrefix)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4852/buggy-version/base.core.src.main.java.leap.core.AppResources.java", "BodyUseAPI": [], "Fixed commit": "700e24e262219157599a6b90746159de78e26205", "Url": "https://api.github.com/repos/leapframework/framework", "Date": "2016-08-25T11:11:56Z"},
{"Line": "=>572", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((newContainer.getPosition()) != (com.RotN.beergammon.logic.CheckerContainer.BoardPositions.WHITE_BUNKER)) && ((newContainer.getPosition()) != (com.RotN.beergammon.logic.CheckerContainer.BoardPositions.BLACK_BUNKER))) { if (((gammon.turn) == (com.RotN.beergammon.logic.CheckerContainer.GameColor.BLACK)) && ((newContainer.getWhiteCheckerCount()) == 1)) { gammon.containers.get(BoardPositions.POKEY.getIndex()).addPiece(GameColor.WHITE); newContainer.removePiece(GameColor.WHITE); gotEm = true; }else if (((gammon.turn) == (com.RotN.beergammon.logic.CheckerContainer.GameColor.WHITE)) && ((newContainer.getBlackCheckerCount()) == 1)) { gammon.containers.get(BoardPositions.POKEY.getIndex()).addPiece(GameColor.BLACK); newContainer.removePiece(GameColor.BLACK); gotEm = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3421/buggy-version/src.com.RotN.beergammon.logic.TheGameImpl.java", "BodyUseAPI": ["com.RotN.beergammon.logic.CheckerContainer.removePiece(GameColor.WHITE)", "com.RotN.beergammon.logic.CheckerContainer.removePiece(GameColor.BLACK)", "com.RotN.beergammon.logic.CheckerContainer.getWhiteCheckerCount()", "com.RotN.beergammon.logic.CheckerContainer.getBlackCheckerCount()"], "Fixed commit": "a6b841c46614a12ecff331f52c71fc5307f53212", "Url": "https://api.github.com/repos/dvdvrhs/BeerGammon", "Date": "2012-12-23T13:32:51Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((chargeableInventory) != null) { chargeableInventory.setInventorySlotContents((slot - (inventory.length)), itemStack); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5156/buggy-version/src.pneumaticCraft.common.tileentity.TileEntityChargingStation.java", "BodyUseAPI": [], "Fixed commit": "2a4d40d158a8f405d0de0c6df4e9a5259cab01f7", "Url": "https://api.github.com/repos/MineMaarten/PneumaticCraft", "Date": "2016-02-06T14:06:41Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((secStorageVm == null) && ((args.getType()) != (com.cloud.storage.secondary.SecStorageVmAlertEventArgs.SSVM_CREATE_FAILURE))) { throw new com.cloud.utils.exception.CloudRuntimeException(\"Invalid alert arguments, secStorageVm must be set\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/837/buggy-version/server.src.com.cloud.alert.SecondaryStorageVmAlertAdapter.java", "BodyUseAPI": [], "Fixed commit": "302d5195d4a1205d3364cad236039c2dc76027c2", "Url": "https://api.github.com/repos/apache/cloudstack", "Date": "2014-11-18T13:31:33Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((proxy == null) && ((args.getType()) != (com.cloud.consoleproxy.ConsoleProxyAlertEventArgs.PROXY_CREATE_FAILURE))) { throw new com.cloud.utils.exception.CloudRuntimeException(\"Invalid alert arguments, proxy must be set\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/837/buggy-version/server.src.com.cloud.alert.ConsoleProxyAlertAdapter.java", "BodyUseAPI": [], "Fixed commit": "302d5195d4a1205d3364cad236039c2dc76027c2", "Url": "https://api.github.com/repos/apache/cloudstack", "Date": "2014-11-18T13:31:33Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((bubolo.audio.Audio.lastSoundPlayed) != soundEffect) || ((bubolo.audio.Audio.nextPlayTime) < (java.lang.System.currentTimeMillis()))) { bubolo.audio.Audio.nextPlayTime = (java.lang.System.currentTimeMillis()) + (bubolo.audio.Audio.soundDelay); bubolo.audio.Audio.lastSoundPlayed = soundEffect; soundEffect.play(bubolo.audio.Audio.soundEffectVolume); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/608/buggy-version/bubolo.src.bubolo.audio.Audio.java", "BodyUseAPI": ["bubolo.audio.SoundEffect.play(int)"], "Fixed commit": "b778d26cea5f6bdbfd54940912e4e79671bfd99a", "Url": "https://api.github.com/repos/BU-CS673/bubolo", "Date": "2014-04-29T07:52:29Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((directionEvents.size()) > 0) if (directionEvents.get(0).eTime.isAfter(t1)) throw new devices.encoder.Encoder.DirectionChange();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8923/buggy-version/RPISensors.src.main.java.devices.encoder.Encoder.java", "BodyUseAPI": ["directionEvents.get(0).eTime.isAfter(java.time.Instant)", "dataTypes.CircularArrayRing<devices.encoder.Encoder.TimedDirectionEvent>.get(int)"], "Fixed commit": "be3351c36ccc67afa10539afe7077de3fca521df", "Url": "https://api.github.com/repos/gjwo/RPISensors", "Date": "2016-12-23T10:53:06Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((directionEvents.size()) > 0) if (directionEvents.get(0).getTime().isAfter(startTime)) startTime = directionEvents.get(0).getTime().plusMillis(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8923/buggy-version/RPISensors.src.main.java.devices.encoder.Encoder.java", "BodyUseAPI": ["directionEvents.get(0).getTime()", "directionEvents.get(0).getTime()", "directionEvents.get(0).getTime().isAfter(java.time.Instant)", "dataTypes.CircularArrayRing<devices.encoder.Encoder.TimedDirectionEvent>.get(int)", "dataTypes.CircularArrayRing<devices.encoder.Encoder.TimedDirectionEvent>.get(int)", "directionEvents.get(0).getTime().plusMillis(int)"], "Fixed commit": "be3351c36ccc67afa10539afe7077de3fca521df", "Url": "https://api.github.com/repos/gjwo/RPISensors", "Date": "2016-12-23T10:53:06Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v7.widget.RecyclerView.getChildPosition(android.view.View)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (position == (android.support.v7.widget.RecyclerView.NO_POSITION)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2198/buggy-version/library.src.main.java.com.kiguruming.recyclerview.itemdecoration.PinnedHeaderItemDecoration.java", "BodyUseAPI": [], "Fixed commit": "63df51d9610c21c614abbf60eb70123e8e2281a5", "Url": "https://api.github.com/repos/takahr/pinned-section-item-decoration", "Date": "2016-01-03T21:20:11Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((deltaX == 0) && (deltaY == 0)) return 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/436/buggy-version/src.editor.TransitionPaint.java", "BodyUseAPI": [], "Fixed commit": "4105d3b7a1a0c85a6e41f215b9715e8db0df360f", "Url": "https://api.github.com/repos/RaphaelBucher/EditorForAutomata", "Date": "2017-01-13T12:39:28Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["InternalAPI.symbol.getSymbolForIdentifier(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ageSymbol == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/840/buggy-version/src.main.java.me.heldplayer.plugins.nei.mystcraft.client.WritingDeskRecipeHandler.java", "BodyUseAPI": [], "Fixed commit": "8b87c468449569148c39797ecae387679e705cbe", "Url": "https://api.github.com/repos/heldplayer/MystNEI-Plugin", "Date": "2014-10-27T21:13:21Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["InternalAPI.symbol.getSymbolForIdentifier(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ageSymbol == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/840/buggy-version/src.main.java.me.heldplayer.plugins.nei.mystcraft.client.WritingDeskRecipeHandler.java", "BodyUseAPI": [], "Fixed commit": "8b87c468449569148c39797ecae387679e705cbe", "Url": "https://api.github.com/repos/heldplayer/MystNEI-Plugin", "Date": "2014-10-27T21:13:21Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((recipe.tank.getFluid()) != null) { net.specialattack.forge.core.client.GuiHelper.drawFluid(recipe.tank.getFluid().getFluid(), (left + 1), (ltop - lheight), (width - 2), lheight); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/840/buggy-version/src.main.java.me.heldplayer.plugins.nei.mystcraft.client.WritingDeskRecipeHandler.java", "BodyUseAPI": ["net.minecraftforge.fluids.FluidTank.getFluid()", "net.specialattack.forge.core.client.GuiHelper.drawFluid(recipe.tank.getFluid().getFluid(),int,int,int,int)", "recipe.tank.getFluid().getFluid()"], "Fixed commit": "8b87c468449569148c39797ecae387679e705cbe", "Url": "https://api.github.com/repos/heldplayer/MystNEI-Plugin", "Date": "2014-10-27T21:13:21Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (itemInHand != null) { net.minecraft.tileentity.TileEntity te = ((net.minecraft.block.ITileEntityProvider) (block)).createNewTileEntity(net.minecraftforge.common.DimensionManager.getWorld(dimensionId), itemInHand.getItemDamage()); if (te != null) { java.lang.Class<? extends net.minecraft.tileentity.TileEntity> clsTe = te.getClass(); mytown.new_protection.ProtectionUtils.addToBlockWhitelist(clsTe, dimensionId, x, y, z, tblock.getTown()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2413/buggy-version/src.main.java.mytown.new_protection.Protections.java", "BodyUseAPI": ["net.minecraft.item.ItemStack.getItemDamage()", "net.minecraft.block.Block.createNewTileEntity(net.minecraftforge.common.DimensionManager.getWorld(dimensionId),itemInHand.getItemDamage())"], "Fixed commit": "abb49307d71e02ac90a9b95e2b12ff6fb7c225a6", "Url": "https://api.github.com/repos/MyEssentials/MyTown2", "Date": "2015-02-22T13:16:42Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (start < 0) { start = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/517/buggy-version/src.main.java.com.alibaba.druid.sql.visitor.functions.Right.java", "BodyUseAPI": [], "Fixed commit": "d75b1104a54f40fa59c51399b2b5ea7749c91297", "Url": "https://api.github.com/repos/carvinhappy/druid", "Date": "2013-06-06T06:29:08Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.equals(httpServletRequest.getMethod())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (post) { ssoResponseValidator.setReplayCache(getReplayCache()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4473/buggy-version/services.idp.src.main.java.org.apache.cxf.fediz.service.idp.protocols.TrustedIdpSAMLProtocolHandler.java", "BodyUseAPI": [], "Fixed commit": "e4956f9ecf58ebc40a1fc7232d89bd3f6c15a138", "Url": "https://api.github.com/repos/apache/cxf-fediz", "Date": "2016-01-19T14:50:08Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gearapp.sstudio.com.gearapp.MainActivity.DegreesGear2) == 360) { gearapp.sstudio.com.gearapp.MainActivity.DegreesGear2 = 0; }else if ((gearapp.sstudio.com.gearapp.MainActivity.DegreesGear3) == 360) { gearapp.sstudio.com.gearapp.MainActivity.DegreesGear3 = 0; }else if ((gearapp.sstudio.com.gearapp.MainActivity.DegreesGear4) == 360) { gearapp.sstudio.com.gearapp.MainActivity.DegreesGear4 = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/342/buggy-version/app.src.main.java.gearapp.sstudio.com.gearapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ed1182b034c7661187d6e31f016db7c432c7882d", "Url": "https://api.github.com/repos/Skyrisu/Gear", "Date": "2014-12-04T23:06:27Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.jar.JarFile.getEntry(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (mcmod != null) { java.io.InputStreamReader reader = new java.io.InputStreamReader(jar.getInputStream(mcmod)); java.util.List<net.mineguild.ModPack.ModInfo> mods = com.google.common.collect.Lists.newArrayList(net.mineguild.Launcher.utils.json.JsonFactory.GSON.fromJson(reader, net.mineguild.ModPack.ModInfo[].class)); jar.close(); return mods; }else { net.mineguild.Launcher.log.Logger.logDebug(((f.getPath()) + \" has no mcmod.info! Ignoring.\")); jar.close(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2103/buggy-version/src.main.java.net.mineguild.Launcher.utils.json.JsonFactory.java", "BodyUseAPI": ["java.util.jar.JarFile.getInputStream(java.util.zip.ZipEntry)"], "Fixed commit": "ad1c87f961b08650b06d7f15bf1acc1380e0e564", "Url": "https://api.github.com/repos/mineguild/MineguildLauncher", "Date": "2014-12-09T07:08:59Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getParentFile()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(parent.exists())) { parent.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3212/buggy-version/src.com.rauban.dropandtransfer.model.io.FileTransfer.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "39b8a2eda84d559631f6fd8f6dfe860496bc7a62", "Url": "https://api.github.com/repos/RobertBorg/DropAndTransfer", "Date": "2015-05-17T14:15:41Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.telephony.PhoneNumberUtils.isGlobalPhoneNumber(phoneNumber)) { contact = contactsProvider.getContactByPhoneNumber(phoneNumber); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4083/buggy-version/android.src.main.java.com.rt2zz.reactnativecontacts.ContactsManager.java", "BodyUseAPI": ["com.rt2zz.reactnativecontacts.ContactsProvider.getContactByPhoneNumber(java.lang.String)"], "Fixed commit": "f98d58e291ab37fcccfd5f8101cc77505c77a5d0", "Url": "https://api.github.com/repos/mbernardeau/react-native-contacts", "Date": "2017-06-14T09:05:29Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((d.getCommands()) != null) { for (final java.util.Map.Entry<java.lang.String, java.util.Map<java.lang.String, java.lang.Object>> m : d.getCommands().entrySet()) { b.append(\"\\n\").append(\" &cCommand: &6/\").append(m.getKey()); for (java.lang.String s : m.getValue().keySet()) { b.append(\"\\n &c\").append(s).append(\"&6: \").append(m.getValue().get(s)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/500/buggy-version/src.main.java.com.cyandev.plugin.plugininfo.Command.java", "BodyUseAPI": ["org.bukkit.plugin.PluginDescriptionFile.getCommands()", "d.getCommands().entrySet()"], "Fixed commit": "bd64f9314ea38f9cab25a7472c146c0e140025ca", "Url": "https://api.github.com/repos/Sauilitired/PluginInfo", "Date": "2015-03-22T20:11:35Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.eldridge.twitsync.controller.PreferenceController.getInstance(getApplicationContext()).checkForExistingCredentials()) { startStreamingService(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2919/buggy-version/TwitterSync.src.main.java.com.eldridge.twitsync.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "eccc88651167a5a2b75edadca4cce479ff979cad", "Url": "https://api.github.com/repos/rde8026/TwitterClient", "Date": "2013-09-06T01:37:20Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.manalith.ircbot.plugin.tweetreader.TweetReader.TwitterUrlType.Photo.pattern.matcher(url).matches()) return org.manalith.ircbot.plugin.tweetreader.TweetReader.UrlType.PhotoURL;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4559/buggy-version/ManalithBot.src.main.java.org.manalith.ircbot.plugin.tweetreader.TweetReader.java", "BodyUseAPI": [], "Fixed commit": "b239e538fda2c207c4f3ef28bf41bc4e4459e175", "Url": "https://api.github.com/repos/darkcircle/ManalithBot", "Date": "2015-01-16T08:27:47Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.common.ForgeHooks.rayTraceEyes(net.minecraft.entity.player.EntityPlayer,((((net.minecraft.entity.player.EntityPlayerMP) (playerIn)).interactionManager.getBlockReachDistance()) + 1))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (rayResult == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8421/buggy-version/src.com.jaquadro.minecraft.storagedrawers.block.BlockDrawers.java", "BodyUseAPI": [], "Fixed commit": "7d58c830cff7588e1d493c8aac6f51b3dffea6a8", "Url": "https://api.github.com/repos/jaquadro/StorageDrawers", "Date": "2016-11-02T04:23:53Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entity != (game.player)) { if (((Mappers.state.get(entity).enabledState) == (io.whitegoldlabs.wiseguys.component.StateComponent.EnabledState.DISABLED)) || ((Mappers.position.get(entity).y) < (-100))) { game.engine.removeEntity(entity); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6983/buggy-version/wise-guys.core.src.io.whitegoldlabs.wiseguys.system.ReaperSystem.java", "BodyUseAPI": ["game.engine.removeEntity(com.badlogic.ashley.core.Entity)", "Mappers.state.get(com.badlogic.ashley.core.Entity)", "Mappers.position.get(com.badlogic.ashley.core.Entity)"], "Fixed commit": "13b31d3749eeeb535e2f34342489ac9522ff8fe4", "Url": "https://api.github.com/repos/Jenuma/wise-guys", "Date": "2017-02-03T20:53:06Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(_currentOngoingEvents.equals(newOngoingEvents))) _currentOngoingEvents = newOngoingEvents;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1864/buggy-version/src.NewAI.AILogic.AILogicRunner.java", "BodyUseAPI": [], "Fixed commit": "bb99af416494abf02f299ad8f1d4fdf6b50524e1", "Url": "https://api.github.com/repos/jipjan/ProjectFestival", "Date": "2017-05-03T19:02:02Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Locale.getDefault()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (locale.getLanguage().equals(\"ru\")) { java.util.Locale.setDefault(new java.util.Locale(\"uk\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/9112/buggy-version/app.src.main.java.com.vint.timeapp.presenter.CalendarPresenter.java", "BodyUseAPI": [], "Fixed commit": "e69f94e6ec9c8735ba6e5420a48a4d3c00a3b864", "Url": "https://api.github.com/repos/gutsul/TimeApp", "Date": "2017-11-14T18:03:19Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stations) != null) builder.append(\" \").append(stations.size()).append(stations);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2671/buggy-version/enabler.src.de.schildbach.pte.dto.NearbyStationsResult.java", "BodyUseAPI": [], "Fixed commit": "a3ea6ec0c10d01fdb89dd96de04d9b593012756d", "Url": "https://api.github.com/repos/schildbach/public-transport-enabler", "Date": "2014-11-30T12:21:46Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((suggestedLocations) != null) builder.append(\" \").append(suggestedLocations.size()).append(suggestedLocations);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2671/buggy-version/enabler.src.de.schildbach.pte.dto.SuggestLocationsResult.java", "BodyUseAPI": [], "Fixed commit": "a3ea6ec0c10d01fdb89dd96de04d9b593012756d", "Url": "https://api.github.com/repos/schildbach/public-transport-enabler", "Date": "2014-11-30T12:21:46Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stationDepartures) != null) builder.append(\" \").append(stationDepartures.size()).append(stationDepartures);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2671/buggy-version/enabler.src.de.schildbach.pte.dto.QueryDeparturesResult.java", "BodyUseAPI": [], "Fixed commit": "a3ea6ec0c10d01fdb89dd96de04d9b593012756d", "Url": "https://api.github.com/repos/schildbach/public-transport-enabler", "Date": "2014-11-30T12:21:46Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((game) != null) { if (org.apache.commons.lang3.StringUtils.isNotEmpty(game.getName())) { ch.citux.td.data.worker.TDTaskManager.executeTask(this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3160/buggy-version/src.main.java.ch.citux.td.ui.fragments.GameStreamsFragment.java", "BodyUseAPI": [], "Fixed commit": "241e61b16a0774025a907588d8be3a7f41648302", "Url": "https://api.github.com/repos/CiTuX/TD", "Date": "2014-12-14T02:59:44Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getModifiers()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((modifiers & (java.lang.reflect.Modifier.STATIC)) != 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/350/buggy-version/src.main.java.com.alibaba.fastjson.util.JavaBeanInfo.java", "BodyUseAPI": [], "Fixed commit": "266091eaefc893ae9ccc1cf7c4b9fdeff1f3133d", "Url": "https://api.github.com/repos/VictorZeng/fastjson", "Date": "2016-06-27T02:48:02Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((data.getSettings()) != null) && ((data.getSettings().getIsLoginRequired()) != null)) { settingsObj.put(\"comment\", \"turn-on\"); settingsObj.put(\"isLoginRequired\", data.getSettings().getIsLoginRequired()); collectionDataObject.put(\"settings\", settingsObj); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1847/buggy-version/src.main.java.org.ednovo.gooru.server.service.FolderServiceImpl.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,data.getSettings().getIsLoginRequired())", "data.getSettings().getIsLoginRequired()", "org.ednovo.gooru.shared.model.content.CollectionDo.getSettings()"], "Fixed commit": "13d3efb340d2c671c048848bfd88566e58730909", "Url": "https://api.github.com/repos/sravanthi1/Gooru-Web", "Date": "2015-04-22T07:13:27Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (i < (arr.length)) { sb = new java.lang.StringBuffer(arr[(i++)]); for (; i < (arr.length); i++) { sb.append(\"\\n\").append(arr[i]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/793/buggy-version/src.com.comcast.cns.model.CNSMessage.java", "BodyUseAPI": ["java.lang.StringBuffer.append(java.lang.String)"], "Fixed commit": "484764a3d8c703368ccc460efb921f08ab44eeea", "Url": "https://api.github.com/repos/Comcast/cmb", "Date": "2012-12-14T22:45:42Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Systems.ballAssembly.shooter_speed) < 0) { Systems.ballAssembly.shooter_speed = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4465/buggy-version/src.Systems.ballAssembly.java", "BodyUseAPI": [], "Fixed commit": "58560b6039c610c5a749c81cfc9fc7fb2f239dc6", "Url": "https://api.github.com/repos/Team6083/2017_Overlooking", "Date": "2017-04-07T02:39:18Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 10) secretKeyFactory = javax.crypto.SecretKeyFactory.getInstance(\"PBKDF2WithHmacSHA1\"); else secretKeyFactory = javax.crypto.SecretKeyFactory.getInstance(\"PBEWITHSHAAND128BITAES-CBC-BC\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8168/buggy-version/src.com.mseclab.gdgmeetsu2014.symmetricdemostep4.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d89d02dfb47d29084e8f61084c5514816a960aa6", "Url": "https://api.github.com/repos/mseclab/gdgmeetsu2014-symmetric-demo-step4", "Date": "2014-05-28T21:40:02Z"},
{"Line": "=>499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (dmTasks.getFirstTaskItemCompleted())) { com.romanpulov.symphonytimer.MediaPlayerHelper.getInstance(this).stop(); com.romanpulov.symphonytimer.VibratorHelper.getInstance(this).cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1809/buggy-version/src.com.romanpulov.symphonytimer.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c21388029eb9984be5fde73706d3a33b87c6fea0", "Url": "https://api.github.com/repos/MrZeRo2000/symphonytimer-android", "Date": "2015-06-15T13:09:23Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mMetronomeRunning) { metronomeStartStop(); metronomeStartStop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7525/buggy-version/app.src.main.java.tech.michaeloverman.android.mscount.NormalMetronomeFragment.java", "BodyUseAPI": [], "Fixed commit": "f9d9aeb40fae9667b78927d08a26b11a5aa111ce", "Url": "https://api.github.com/repos/michaeloverman/Ms.-Count", "Date": "2017-03-11T04:18:19Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (memento != null) { memento.resetToMemento(holdings); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1183/buggy-version/JavaFXApp.src.controller.SimulationController.java", "BodyUseAPI": ["controller.Memento.resetToMemento(java.util.ArrayList<model.PortfolioElements.Holding>)"], "Fixed commit": "f997ae5aa3fd6823d4196500bb0665043d12f021", "Url": "https://api.github.com/repos/MukeytheMuse/FPTS", "Date": "2016-04-10T20:05:21Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentSimulator) != null) && ((values) != null)) { currentSimulator.addPreviousValues(values); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1183/buggy-version/JavaFXApp.src.controller.SimulationController.java", "BodyUseAPI": [], "Fixed commit": "f997ae5aa3fd6823d4196500bb0665043d12f021", "Url": "https://api.github.com/repos/MukeytheMuse/FPTS", "Date": "2016-04-10T20:05:21Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (targetBlock == (net.minecraft.init.Blocks.flowing_water)) { targetBlock = net.minecraft.init.Blocks.water; }else if (targetBlock == (net.minecraft.init.Blocks.flowing_lava)) { targetBlock = net.minecraft.init.Blocks.lava; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5841/buggy-version/src.main.java.fi.dy.masa.enderutilities.item.ItemEnderBucket.java", "BodyUseAPI": [], "Fixed commit": "26f9c8a6321dcb51e8078f2efe93893e9a511524", "Url": "https://api.github.com/repos/maruohon/modjam4", "Date": "2014-07-14T14:34:44Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((com.byd.audioplayer.audio.AudioPlayerService.mPlayer) != null) && (com.byd.audioplayer.audio.AudioPlayerService.mPlayer.isPlaying())) { com.byd.audioplayer.audio.AudioPlayerService.mPlayer.pause(); if (null != (mPlayPauseListener)) { mPlayPauseListener.onPlayPause(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2379/buggy-version/BYDaudio.src.com.byd.audioplayer.audio.AudioPlayerService.java", "BodyUseAPI": ["android.media.MediaPlayer.pause()"], "Fixed commit": "0c3cec1628d8639cb311ddf3f24cb2980f9ec0fa", "Url": "https://api.github.com/repos/2014-1/001", "Date": "2014-04-29T08:43:50Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((com.byd.audioplayer.audio.AudioPlayerService.mPlayer) != null) && (!(com.byd.audioplayer.audio.AudioPlayerService.mPlayer.isPlaying()))) { com.byd.audioplayer.audio.AudioPlayerService.mPlayer.start(); if (null != (mPlayPauseListener)) { mPlayPauseListener.onPlayPause(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2379/buggy-version/BYDaudio.src.com.byd.audioplayer.audio.AudioPlayerService.java", "BodyUseAPI": ["android.media.MediaPlayer.start()"], "Fixed commit": "0c3cec1628d8639cb311ddf3f24cb2980f9ec0fa", "Url": "https://api.github.com/repos/2014-1/001", "Date": "2014-04-29T08:43:50Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.preibisch.mvrecon.fiji.datasetmanager.grid.RegularTranformHelpers.prod(int[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nTiles < 1) return transforms;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2975/buggy-version/src.main.java.net.preibisch.mvrecon.fiji.datasetmanager.grid.RegularTranformHelpers.java", "BodyUseAPI": [], "Fixed commit": "ac231e5fd62e94929d3a271df916c2c5d00b8550", "Url": "https://api.github.com/repos/PreibischLab/multiview-reconstruction", "Date": "2017-12-04T09:24:45Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((state) == (PlayerState.RUNNING)) || ((state) == (PlayerState.STANDING))) nbJump = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7867/buggy-version/core.src.com.ludum.entity.player.Swan.java", "BodyUseAPI": [], "Fixed commit": "236339f67d81760f6c61d97411ce71f930831ec2", "Url": "https://api.github.com/repos/Daiwen/ludum-08-2014", "Date": "2014-08-25T16:23:16Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (project.isOpen()) { org.eclipse.cdt.core.CCorePlugin.log(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6771/buggy-version/core.org.eclipse.cdt.core.model.org.eclipse.cdt.internal.core.settings.model.xml.XmlProjectDescriptionStorage.java", "BodyUseAPI": [], "Fixed commit": "d7dc313c499830cef8fd9d82b06b8416425bd797", "Url": "https://api.github.com/repos/sba1/cdt", "Date": "2013-09-21T10:19:24Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_listener) != null) { m_listener.connectionLost(connection.getDestinationNodeID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3004/buggy-version/src.de.hhu.bsinfo.dxnet.nio.NIOConnectionManager.java", "BodyUseAPI": [], "Fixed commit": "c8007f48b6408f29b873803acfa56b433aa0f68b", "Url": "https://api.github.com/repos/hhu-bsinfo/dxram", "Date": "2017-11-30T14:14:09Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_listener) != null) { m_listener.connectionLost(p_connection.getDestinationNodeID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3004/buggy-version/src.de.hhu.bsinfo.dxnet.ib.IBConnectionManager.java", "BodyUseAPI": [], "Fixed commit": "c8007f48b6408f29b873803acfa56b433aa0f68b", "Url": "https://api.github.com/repos/hhu-bsinfo/dxram", "Date": "2017-11-30T14:14:09Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastEntity) != null) { lastEntity.clear(); lastEntity = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1061/buggy-version/src.main.java.com.sk89q.craftbook.circuits.gates.world.entity.AnimalBreeder.java", "BodyUseAPI": [], "Fixed commit": "bfabb90669da4672fc7619857f4c0720ebbb0d95", "Url": "https://api.github.com/repos/Nekocraft/craftbook", "Date": "2013-05-04T23:01:28Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["taskey.logic.ProcessedObject.getTask()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (task != null) { java.util.ArrayList<java.lang.String> tags = task.getTaskTags(); if (tags != null) { for (int i = 0; i < (tags.size()); i++) { if (!(tagDB.hasTag(tags.get(i)))) { tagDB.addTag(tags.get(i)); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4376/buggy-version/taskey.src.taskey.parser.Parser.java", "BodyUseAPI": ["taskey.logic.Task.getTaskTags()"], "Fixed commit": "f9f2e529653e80fefd092f6152952424290408b1", "Url": "https://api.github.com/repos/cs2103jan2016-f14-4j/main", "Date": "2016-03-06T11:05:52Z"},
{"Line": "=>1002", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((prevChar == ' ') || (prevChar == '\\n')) || (prevChar == '\\t')) { for (java.lang.String s : iToSearch) { if ((iText.length()) < (i + (s.length()))) { continue; } if (iText.substring(i, (i + (s.length()))).equalsIgnoreCase(s)) { if ((iText.length()) == (i + (s.length()))) { return i; } char nextChar = iText.charAt((i + (s.length()))); if (((nextChar == ' ') || (nextChar == '\\n')) || (nextChar == '\\t')) { return i; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5899/buggy-version/core.src.main.java.com.orientechnologies.orient.core.serialization.serializer.OStringSerializerHelper.java", "BodyUseAPI": [], "Fixed commit": "4d32967243a23324ef3bc82e9a81316f4b92c3ab", "Url": "https://api.github.com/repos/emrul/orientdb", "Date": "2015-06-30T16:08:59Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (targetAddCurrency < 0) { return server.enums.ResponseType.INVALID_CURRENCY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2558/buggy-version/src.main.java.server.analyzers.AddCurrencyAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "dea4b630e92fecb1d1d41e5215aaf6e0c8d18aa1", "Url": "https://api.github.com/repos/ilysion/CommandlineBuddy", "Date": "2017-05-17T11:47:05Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["myworld.dao.ClientDao.getClient(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (client == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3667/buggy-version/myworld.src.myworld.servlet.ajax.ClientProfileServlet.java", "BodyUseAPI": [], "Fixed commit": "cf9709dea6575aa1b6f3acf6cf070b93b9179c34", "Url": "https://api.github.com/repos/l0huan08/myworld", "Date": "2014-09-26T19:45:56Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((aisHandler) != null) { if ((chartPanel.getMap().getScale()) != (mapScale)) { mapScale = chartPanel.getMap().getScale(); mapClearTargets(); } if ((((highlightedMMSI) != 0) && ((highlightedMMSI) != (statusArea.getHighlightedVesselMMSI()))) || ((statusArea.getHighlightedVesselMMSI()) == (-1))) { highlightInfoPanel.setVisible(false); highlighted = null; highlightedMMSI = 0; } shipList = aisHandler.getShipList(); for (int i = 0; i < (shipList.size()); i++) { if (aisHandler.getVesselTargets().containsKey(shipList.get(i).MMSI)) { dk.frv.enav.esd.ais.AisHandler.AisMessageExtended vessel = shipList.get(i); dk.frv.enav.ins.ais.VesselTarget vesselTarget = aisHandler.getVesselTargets().get(vessel.MMSI); location = vesselTarget.getPositionData(); double trueHeading = location.getTrueHeading(); if (trueHeading == 511) { trueHeading = location.getCog(); } if (!(drawnVessels.containsKey(vessel.MMSI))) { vesselComponent = new dk.frv.enav.esd.layers.ais.Vessel(vessel.MMSI); list.add(vesselComponent); drawnVessels.put(vessel.MMSI, vesselComponent); } drawnVessels.get(vessel.MMSI).updateLayers(trueHeading, location.getPos().getLatitude(), location.getPos().getLongitude(), vesselTarget.getStaticData(), location.getSog(), java.lang.Math.toRadians(location.getCog()), mapScale); } } doPrepare(); if ((highlighted) != null) { java.awt.geom.Point2D newXY = chartPanel.getMap().getProjection().forward(highlightedVessel.getLat(), highlightedVessel.getLon()); if ((xy) != newXY) { xy = newXY; highlightInfoPanel.displayHighlight((((int) (xy.getX())) - 23), (((int) (xy.getY())) - 6)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5089/buggy-version/src.main.java.dk.frv.enav.esd.layers.ais.AisLayer.java", "BodyUseAPI": [], "Fixed commit": "cac725d7a591095ae736f4603bcba43a5ab92b81", "Url": "https://api.github.com/repos/DaMSA/eNav-Shore-Display", "Date": "2012-05-22T20:33:18Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["MusicOrganizerWindow.promptForAlbumName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (name == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7393/buggy-version/src.MusicOrganizerController.java", "BodyUseAPI": [], "Fixed commit": "b90353e5ad1970dc5090df6bb44b33d8b4ad3c6e", "Url": "https://api.github.com/repos/driedwatermelon/progIV", "Date": "2017-09-29T13:13:24Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((resource) != null) { if (twigkit.klustr.strategy.Single.logger.isDebugEnabled()) { twigkit.klustr.strategy.Single.logger.debug(((((\"Using resource \" + (resource.getClass().getName())) + \"[\") + (resource)) + \"]\")); } return resource; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6939/buggy-version/src.main.java.twigkit.klustr.strategy.Single.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "5ac2fec7ac0478f0a3e3ba40a6c0ace14112bea0", "Url": "https://api.github.com/repos/twigkit/klustr", "Date": "2011-11-03T13:56:23Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uriMatches && domainMatches) && rangeMatches) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8586/buggy-version/webapp.src.edu.cornell.mannlib.vitro.webapp.web.templatemodels.individual.GroupedPropertyList.java", "BodyUseAPI": [], "Fixed commit": "b276cd5049de5e98d297e43aaf6be3bb40df5558", "Url": "https://api.github.com/repos/vivo-project/Vitro", "Date": "2013-11-06T16:02:33Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((op.getRangeVClassURI()) == null) { if ((pi.getDomainClassURI()) == null) { rangeMatches = true; } }else if (op.getRangeVClassURI().equals(pi.getRangeClassURI())) { rangeMatches = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8586/buggy-version/webapp.src.edu.cornell.mannlib.vitro.webapp.web.templatemodels.individual.GroupedPropertyList.java", "BodyUseAPI": ["op.getRangeVClassURI().equals(pi.getRangeClassURI())", "edu.cornell.mannlib.vitro.webapp.beans.ObjectProperty.getRangeVClassURI()"], "Fixed commit": "b276cd5049de5e98d297e43aaf6be3bb40df5558", "Url": "https://api.github.com/repos/vivo-project/Vitro", "Date": "2013-11-06T16:02:33Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((op.getDomainVClassURI()) == null) { if ((pi.getDomainClassURI()) == null) { domainMatches = true; } }else if (op.getDomainVClassURI().equals(pi.getDomainClassURI())) { domainMatches = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8586/buggy-version/webapp.src.edu.cornell.mannlib.vitro.webapp.web.templatemodels.individual.GroupedPropertyList.java", "BodyUseAPI": ["edu.cornell.mannlib.vitro.webapp.beans.ObjectProperty.getDomainVClassURI()", "op.getDomainVClassURI().equals(pi.getDomainClassURI())"], "Fixed commit": "b276cd5049de5e98d297e43aaf6be3bb40df5558", "Url": "https://api.github.com/repos/vivo-project/Vitro", "Date": "2013-11-06T16:02:33Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ignoreOnce) { ignoreOnce = false; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6920/buggy-version/app.src.main.java.com.daknuett.specimenrecorder.listeners.settings.LocationUseGPSCheckboxListener.java", "BodyUseAPI": [], "Fixed commit": "5437002de28436b5ca02bdbfa597f5ddcf7c1d94", "Url": "https://api.github.com/repos/daknuett/SpecimenRecorder", "Date": "2017-08-12T18:55:33Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (parameters.has(\"given\")) { givenName = parameters.getString(\"given\"); payload = ((payload + \"<givenName>\") + givenName) + \"</givenName>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4276/buggy-version/FHIR-MAPPING.src.main.java.fhirconverter.converter.OpenEMPIbase.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "e0a1e7a4a112d49a57677bb23e585f45d5638a97", "Url": "https://api.github.com/repos/koonwei/NHS2", "Date": "2017-08-02T16:25:35Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mobilityBoards.size()) != 0) { lowestMobilityScore = java.util.Collections.min(mobilityBoards.values()).intValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/782/buggy-version/src.othello.ai.heuristic.Mobility.java", "BodyUseAPI": ["java.lang.Object.intValue()", "java.util.Collections.min(mobilityBoards.values())", "java.util.Map<othello.model.Board, java.lang.Double>.values()"], "Fixed commit": "a166d184875b4b262c56e7b4de4172243362ec40", "Url": "https://api.github.com/repos/josebezme/project-othello-2012", "Date": "2012-08-03T04:11:35Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isValidFilesystem) { break; }else if (retryCount < ((voldemort.store.readonly.fetcher.HdfsFetcher.NUM_RETRIES) - 1)) { voldemort.store.readonly.fetcher.HdfsFetcher.logger.error(\"Could not get a valid Filesystem object. Trying again.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8019/buggy-version/contrib.hadoop-store-builder.src.java.voldemort.store.readonly.fetcher.HdfsFetcher.java", "BodyUseAPI": [], "Fixed commit": "0881e1f26363e3fff8703114712a1be4cc75a0a7", "Url": "https://api.github.com/repos/voldemort/voldemort", "Date": "2013-02-19T22:40:42Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.isoron.uhabits.models.CheckmarkList.getValues(long,long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((values.length) == 0) out.write(\"0\"); else out.write(java.lang.String.format(\"%d\", values[0]));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7454/buggy-version/app.src.main.java.org.isoron.uhabits.models.CheckmarkList.java", "BodyUseAPI": ["java.io.Writer.write(java.lang.String)", "java.lang.String.format(java.lang.String,int)"], "Fixed commit": "75beacf5d1199eacdadb7d725e1de0a058099f6e", "Url": "https://api.github.com/repos/JotraN/uhabits", "Date": "2016-09-15T02:18:55Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (level <= 1) { t.forward(length); t.forward((-length)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/711/buggy-version/src.SlingShotTree.java", "BodyUseAPI": [], "Fixed commit": "5a65c90dad23517f0fe36e8db839a7fca79a4238", "Url": "https://api.github.com/repos/mexryxem/EsaFinal", "Date": "2016-05-19T15:26:13Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.os.Environment.getExternalStorageDirectory().exists()) { destination = new java.io.File(android.os.Environment.getExternalStorageDirectory(), com.readtracker.android.db.export.JSONExporter.DEFAULT_EXPORT_FILENAME); }else { android.util.Log.d(com.readtracker.android.db.export.JSONExporter.TAG, \"Couldn't find a place to export\"); destination = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1822/buggy-version/app.src.main.java.com.readtracker.android.db.export.JSONExporter.java", "BodyUseAPI": [], "Fixed commit": "060312c2011e69cd0b8657e00e0cf7fd5cb20fa7", "Url": "https://api.github.com/repos/christoffer/readtracker", "Date": "2016-10-20T14:32:35Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMpEntries.size()) < 2) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3415/buggy-version/src.com.android.gallery3d.mpo.MpoParser.java", "BodyUseAPI": [], "Fixed commit": "b2aa89983d18f4b5edc3b9d2cd5acb999a0121c4", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-packages-apps-Gallery2", "Date": "2016-06-28T05:43:27Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (overdue_time_seconds < 0) overdue_time_seconds = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5630/buggy-version/src.Library.Library.java", "BodyUseAPI": [], "Fixed commit": "fc0054fec2eff0a608f8b5162f75e2125f7daa93", "Url": "https://api.github.com/repos/l0huan08/Library", "Date": "2014-08-14T19:09:06Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(accountGroups.isEmpty())) disjunction.add(org.hibernate.criterion.Restrictions.in(\"group\", accountGroups));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2369/buggy-version/src.main.java.org.jbei.ice.lib.dao.hibernate.PermissionDAO.java", "BodyUseAPI": ["org.hibernate.criterion.Disjunction.add(org.hibernate.criterion.Restrictions.in(\"group\", accountGroups))", "org.hibernate.criterion.Restrictions.in(java.lang.String,java.util.Set<org.jbei.ice.lib.group.Group>)"], "Fixed commit": "d3ae3c81ac5b8c7c6212e6719de4c2538526f051", "Url": "https://api.github.com/repos/JBEI/ice", "Date": "2015-09-24T16:22:36Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Queue<java.lang.String>.remove()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (de.alaoli.games.minecraft.mods.yadm.util.CommandUtil.isInt(name)) { sender.addChatMessage(new net.minecraft.util.ChatComponentText(\"Numbers aren't allowed for dimension names\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4659/buggy-version/src.main.java.de.alaoli.games.minecraft.mods.yadm.command.CreateCommand.java", "BodyUseAPI": [], "Fixed commit": "c9d863d99039facd8e8605fedf327c11ea6aa245", "Url": "https://api.github.com/repos/DerOli82/yadm", "Date": "2016-08-10T17:23:34Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((responseCode) == 0) { showToast(\"Data not syncrhonised, no internet or damaged transceivers.\"); }else if ((responseCode) == 404) { showToast(\"The app requested data which doesn't exist.\"); }else { showToast(\"Data not synchronised, unknown server problem.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3479/buggy-version/src.gov.polisen.ainappen.ExternalDBHandeler.java", "BodyUseAPI": [], "Fixed commit": "d1353708dca9d82f80f4cc0d09133fb2b4de4dae", "Url": "https://api.github.com/repos/Rovanion/AinAppen", "Date": "2014-05-08T10:25:29Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (foundFreeThread) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5636/buggy-version/core.src.com.lucasdnd.serversimulator.gameplay.Software.java", "BodyUseAPI": [], "Fixed commit": "e456cdf0894c187ee4b7e628fa8d58d2f0209ada", "Url": "https://api.github.com/repos/lucas-tulio/server-simulator", "Date": "2015-10-06T01:59:21Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(be.ugent.oomo.groep12.studgent.utilities.LocationUtil.isGPSEnabled(this))) { android.widget.Toast.makeText(this, \"Zonder GPS is inchecken niet mogelijk.\", Toast.LENGTH_SHORT).show(); }else { java.lang.String checkinPossible = checkInAllowed(); if (checkinPossible.equals(\"\")) { ceckInDialog(); }else { if (checkinPossible.equalsIgnoreCase(\"Je bent nog ingelogd in poi in uw buurt\")) { checkinNotAllowedDiagram(); }else if (checkinPossible.equalsIgnoreCase(\"POI is te ver\")) { checkinPOIIsToFareDiagram(); }else if (checkinPossible.equalsIgnoreCase(\"Gebruiker is niet ingelogd\")) { android.widget.Toast.makeText(this, \"Log in om in te checken!\", Toast.LENGTH_SHORT).show(); }else { android.widget.Toast.makeText(this, \"Inchecken niet mogelijk\", Toast.LENGTH_SHORT).show(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2206/buggy-version/src.be.ugent.oomo.groep12.studgent.activity.POIDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "624750caf52b0e405629f024b34f49fd691a6575", "Url": "https://api.github.com/repos/studgent/android", "Date": "2014-05-13T14:07:16Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (editable.toString().equals(\"\")) { com.fueltrack.adlawren.adlawren_fueltrack.DisplayLogEntryDataStore.getInstance().updateOdometerReading(0.0); }else { com.fueltrack.adlawren.adlawren_fueltrack.DisplayLogEntryDataStore.getInstance().updateOdometerReading(java.lang.Double.valueOf(editable.toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5573/buggy-version/app.src.main.java.com.fueltrack.adlawren.adlawren_fueltrack.DisplayLogEntryController.java", "BodyUseAPI": ["android.text.Editable.toString()", "com.fueltrack.adlawren.adlawren_fueltrack.DisplayLogEntryDataStore.getInstance().updateOdometerReading(java.lang.Double)", "java.lang.Double.valueOf(editable.toString())"], "Fixed commit": "7b6aab331ccf53bd60751bf0b2e249326ab0c36c", "Url": "https://api.github.com/repos/adlawren/as1", "Date": "2016-01-27T01:30:22Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (editable.toString().equals(\"\")) { com.fueltrack.adlawren.adlawren_fueltrack.DisplayLogEntryDataStore.getInstance().updateFuelUnitCost(0.0); }else { com.fueltrack.adlawren.adlawren_fueltrack.DisplayLogEntryDataStore.getInstance().updateFuelUnitCost(java.lang.Double.valueOf(editable.toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5573/buggy-version/app.src.main.java.com.fueltrack.adlawren.adlawren_fueltrack.DisplayLogEntryController.java", "BodyUseAPI": ["com.fueltrack.adlawren.adlawren_fueltrack.DisplayLogEntryDataStore.getInstance().updateFuelUnitCost(java.lang.Double)", "android.text.Editable.toString()", "java.lang.Double.valueOf(editable.toString())"], "Fixed commit": "7b6aab331ccf53bd60751bf0b2e249326ab0c36c", "Url": "https://api.github.com/repos/adlawren/as1", "Date": "2016-01-27T01:30:22Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (editable.toString().equals(\"\")) { com.fueltrack.adlawren.adlawren_fueltrack.DisplayLogEntryDataStore.getInstance().updateFuelAmount(0.0); }else { com.fueltrack.adlawren.adlawren_fueltrack.DisplayLogEntryDataStore.getInstance().updateFuelAmount(java.lang.Double.valueOf(editable.toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5573/buggy-version/app.src.main.java.com.fueltrack.adlawren.adlawren_fueltrack.DisplayLogEntryController.java", "BodyUseAPI": ["android.text.Editable.toString()", "java.lang.Double.valueOf(editable.toString())", "com.fueltrack.adlawren.adlawren_fueltrack.DisplayLogEntryDataStore.getInstance().updateFuelAmount(java.lang.Double)"], "Fixed commit": "7b6aab331ccf53bd60751bf0b2e249326ab0c36c", "Url": "https://api.github.com/repos/adlawren/as1", "Date": "2016-01-27T01:30:22Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((client) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1078/buggy-version/src.main.java.org.elasticsearch.client.support.TransportClientSupport.java", "BodyUseAPI": [], "Fixed commit": "6b2d62a5b8b075df5844708147df268f7b5ed870", "Url": "https://api.github.com/repos/jprante/elasticsearch-transport-support", "Date": "2013-02-27T23:55:47Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.list(java.io.FilenameFilter)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (files != null) { java.util.Arrays.sort(files, java.lang.String.CASE_INSENSITIVE_ORDER); return files; }else { return new java.lang.String[]{ }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5218/buggy-version/modules.citrus-admin.src.main.java.com.consol.citrus.admin.util.FileHelperImpl.java", "BodyUseAPI": ["java.util.Arrays.sort(java.lang.String[],java.util.Comparator<java.lang.String>)"], "Fixed commit": "0e44985cac1601830be1fb417e95009cdb527e0a", "Url": "https://api.github.com/repos/christophd/citrus", "Date": "2013-09-25T22:11:31Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.che.ide.ext.runner.client.models.Environment.getId()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(org.eclipse.che.ide.ext.runner.client.util.EnvironmentIdValidator.isValid(environmentId))) { environmentId = com.google.gwt.http.client.URL.encode(environmentId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1356/buggy-version/plugin-runner.che-plugin-runner-ext-runner.src.main.java.org.eclipse.che.ide.ext.runner.client.tabs.templates.environment.EnvironmentWidget.java", "BodyUseAPI": ["com.google.gwt.http.client.URL.encode(java.lang.String)"], "Fixed commit": "22c0525ed95c5300fb266cef7c71ecb49eb13fd2", "Url": "https://api.github.com/repos/codenvy-legacy/che-plugins", "Date": "2015-06-24T13:33:41Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((currentLevelAppState.score.getNumBluePills()) % 100) == 0) { currentLevelAppState.reconstructArm(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1670/buggy-version/src.main.java.com.xeiam.proprioceptron.roboticarm.RoboticArm.java", "BodyUseAPI": ["com.xeiam.proprioceptron.roboticarm.RoboticArmLevelAppState.reconstructArm()"], "Fixed commit": "16a157d775a7e559aa789382095ecd5ea406adc7", "Url": "https://api.github.com/repos/timmolter/Proprioceptron", "Date": "2012-11-02T09:36:40Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) <= (Build.VERSION_CODES.LOLLIPOP)) { attachMethod.invoke(activity, appContext, activityThread, instrumentation, serviceToken, 0, application, intent, resolveInfo.activityInfo, title, parent, null, null, new android.content.res.Configuration(), null); }else if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.N)) { attachMethod.invoke(activity, appContext, activityThread, instrumentation, serviceToken, 0, application, intent, resolveInfo.activityInfo, title, parent, null, null, new android.content.res.Configuration(), null, null); }else { attachMethod.invoke(activity, appContext, activityThread, instrumentation, serviceToken, 0, application, intent, resolveInfo.activityInfo, title, parent, null, null, new android.content.res.Configuration(), null, null, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/118/buggy-version/app.src.main.java.com.kmarlow.custominstrumentation.ActivityLifecycleManager.java", "BodyUseAPI": [], "Fixed commit": "d47ef0f56db88d27a1509258a0f161a02e39ff01", "Url": "https://api.github.com/repos/kevinmmarlow/CustomInstrumentation", "Date": "2016-10-26T18:57:06Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.jena.sparql.core.TriplePath.asTriple()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (triple == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8484/buggy-version/hdt-jena.src.main.java.org.rdfhdt.hdtjena.solver.OptimizedCount.java", "BodyUseAPI": [], "Fixed commit": "9c28fd9cbcd8ab6cf873b265803aa043fa7133df", "Url": "https://api.github.com/repos/shawnsmith/hdt-java", "Date": "2016-11-02T17:57:00Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.action_logout)) { signOut(); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7924/buggy-version/app.src.main.java.com.weouts.program.andro.weouts.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3f2eba43c0a98d7171473896ab9682a2bfcddd1a", "Url": "https://api.github.com/repos/weouts/android", "Date": "2016-11-10T13:19:38Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value instanceof java.util.Collection) { int index = 0; for (java.lang.Object object : ((java.util.Collection<?>) (value))) { java.lang.String itemVariableName = ((variableName + (ru.runa.wfe.var.format.VariableFormatContainer.COMPONENT_QUALIFIER_START)) + index) + (ru.runa.wfe.var.format.VariableFormatContainer.COMPONENT_QUALIFIER_END); checkValue(itemVariableName, object, false); index++; } }else if (value.getClass().isArray()) { for (int i = 0; i < (java.lang.reflect.Array.getLength(value)); i++) { java.lang.String itemVariableName = ((variableName + (ru.runa.wfe.var.format.VariableFormatContainer.COMPONENT_QUALIFIER_START)) + i) + (ru.runa.wfe.var.format.VariableFormatContainer.COMPONENT_QUALIFIER_END); checkValue(itemVariableName, java.lang.reflect.Array.get(value, i), false); } }else if (value instanceof ru.runa.wfe.var.UserTypeMap) { for (java.util.Map.Entry<java.lang.String, java.lang.Object> entry : ((ru.runa.wfe.var.UserTypeMap) (value)).entrySet()) { checkValue(((variableName + (ru.runa.wfe.var.UserType.DELIM)) + (entry.getKey())), entry.getValue(), false); } }else if (value instanceof java.util.Map<?, ?>) { for (java.util.Map.Entry<java.lang.Object, java.lang.Object> entry : ((java.util.Map<java.lang.Object, java.lang.Object>) (value)).entrySet()) { checkValue(variableName, entry.getKey(), false); checkValue(variableName, entry.getValue(), false); } }else if (requireContainerType) { addError((\"Unexpected variable type: \" + (value.getClass()))); }else if ((value instanceof java.lang.String) && (((java.lang.String) (value)).isEmpty())) { getValidatorContext().addFieldError(variableName, getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1462/buggy-version/wfe-core.src.main.java.ru.runa.wfe.validation.impl.ContainerElementsRequiredValidator.java", "BodyUseAPI": ["ru.runa.wfe.validation.impl.ContainerElementsRequiredValidator.addError(java.lang.String)", "java.lang.Class<? extends java.lang.Object>.isArray()", "ru.runa.wfe.validation.impl.ContainerElementsRequiredValidator.checkValue(java.lang.String,java.lang.Object,boolean)", "java.lang.Object.getClass()", "java.lang.Object.getClass()", "java.lang.reflect.Array.get(java.lang.Object,int)", "java.lang.reflect.Array.getLength(java.lang.Object)"], "Fixed commit": "7cc05b1e116c5066497c5ed3fbed1043d161fc43", "Url": "https://api.github.com/repos/processtech/runawfe-server", "Date": "2017-03-14T11:09:11Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((module.getTotalPossibleMarks()) != 0.0) currentGainedWeightage = (currentPossibleWeightage * (module.getTotalGainedMarks())) / (module.getTotalPossibleMarks());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/694/buggy-version/app.src.main.java.com.cs442.team4.tahelper.student.StudentModulesFragment.java", "BodyUseAPI": ["com.cs442.team4.tahelper.student.TotalGrade.getTotalGainedMarks()", "com.cs442.team4.tahelper.student.TotalGrade.getTotalPossibleMarks()"], "Fixed commit": "3fb878c3a8afd86fbdbae48c099864ca285e53af", "Url": "https://api.github.com/repos/sowmyapa/ta_helper_android", "Date": "2016-12-09T23:16:39Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.twitter.whiskey.util.UniqueMultiMap.get(K)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (values.isEmpty()) map.remove(key);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/423/buggy-version/src.main.java.com.twitter.whiskey.util.UniqueMultiMap.java", "BodyUseAPI": [], "Fixed commit": "c2031e75d742c5a45348da7e7857dd8941eb823c", "Url": "https://api.github.com/repos/twitter/whiskey", "Date": "2015-11-10T01:28:58Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (pieceTileID == 170) { this.piece = null; }else { this.piece = createPieceByID(pieceTileID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2006/buggy-version/src.me.capstone.advancedbattle.tile.Tile.java", "BodyUseAPI": [], "Fixed commit": "35c21282bc8f3f8a38f0a3d34c4657fcbfb0e912", "Url": "https://api.github.com/repos/flyingcircle/AdvancedBattle", "Date": "2013-12-03T00:33:07Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.Integer>.get(ingredient.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (amount == null) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1135/buggy-version/src.main.java.com.trustwave.service.InventoryServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "5d63189594dfacd67832fd1aae58f0a07bc3f537", "Url": "https://api.github.com/repos/RockChalkJay/Barista-matic", "Date": "2016-11-14T03:18:18Z"},
{"Line": "=>858", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ExpressionConstants.JAVA_TYPE.equals(expressionType)) { return org.bonitasoft.studio.common.ExpressionConstants.JAVA_TYPE; }else if (ExpressionConstants.XPATH_TYPE.equals(expressionType)) { return org.bonitasoft.studio.common.ExpressionConstants.XPATH_TYPE; }else if (ExpressionConstants.URL_ATTRIBUTE_TYPE.equals(expressionType)) { return org.bonitasoft.studio.common.ExpressionConstants.URL_ATTRIBUTE_TYPE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8494/buggy-version/bundles.plugins.org.bonitasoft.studio.expression.editor.src.org.bonitasoft.studio.expression.editor.viewer.ExpressionViewer.java", "BodyUseAPI": ["ExpressionConstants.XPATH_TYPE.equals(java.lang.String)", "ExpressionConstants.URL_ATTRIBUTE_TYPE.equals(java.lang.String)"], "Fixed commit": "7409f22a8f3b82468a62ef8ecd14728a00b5c3f3", "Url": "https://api.github.com/repos/bonitasoft/bonita-studio", "Date": "2013-10-10T08:13:20Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bonitasoft.studio.model.expression.Operation.getRightOperand()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (actionExp == null) { actionExp = ExpressionFactory.eINSTANCE.createExpression(); if ((actionExpressionFilter) instanceof org.bonitasoft.studio.expression.editor.filter.AvailableExpressionTypeFilter) { if (!(((org.bonitasoft.studio.expression.editor.filter.AvailableExpressionTypeFilter) (actionExpressionFilter)).getContentTypes().contains(ExpressionConstants.CONSTANT_TYPE))) { if (!(((org.bonitasoft.studio.expression.editor.filter.AvailableExpressionTypeFilter) (actionExpressionFilter)).getContentTypes().isEmpty())) { actionExp.setType(((org.bonitasoft.studio.expression.editor.filter.AvailableExpressionTypeFilter) (actionExpressionFilter)).getContentTypes().iterator().next()); } } } if ((editingDomain) != null) { editingDomain.getCommandStack().execute(org.eclipse.emf.edit.command.SetCommand.create(editingDomain, action, ExpressionPackage.Literals.OPERATION__RIGHT_OPERAND, actionExp)); }else { action.setRightOperand(actionExp); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8494/buggy-version/bundles.plugins.org.bonitasoft.studio.expression.editor.src.org.bonitasoft.studio.expression.editor.operation.OperationViewer.java", "BodyUseAPI": [], "Fixed commit": "7409f22a8f3b82468a62ef8ecd14728a00b5c3f3", "Url": "https://api.github.com/repos/bonitasoft/bonita-studio", "Date": "2013-10-10T08:13:20Z"},
{"Line": "=>544", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.incallui.Call.getConnectTimeMillis()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (callStart > 0) { final long duration = (java.lang.System.currentTimeMillis()) - callStart; ui.setPrimaryCallElapsedTime(true, duration); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4471/buggy-version/InCallUI.src.com.android.incallui.CallCardPresenter.java", "BodyUseAPI": [], "Fixed commit": "c4a1ab0a731d28e5701a58e08a3eac0d6e0f1dc4", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-packages-apps-Dialer", "Date": "2017-01-05T20:13:15Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.ListView.getItemAtPosition(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (result == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/916/buggy-version/mobile.src.main.java.com.aidangrabe.studentapp.activities.ModuleResultsActivity.java", "BodyUseAPI": [], "Fixed commit": "9df60ea4add31dd4c5b80219f521aff6ae05a892", "Url": "https://api.github.com/repos/aidangrabe/student-wear-app", "Date": "2015-02-13T12:52:57Z"},
{"Line": "=>775", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (CanIblock()) { return true; }else { for (int j = 0; j <= 2; j++) { for (int i = 0; i <= ((knowsCard.size()) - 1); i++) { if ((knowsCard.get(i).targetPlayer.name.equals(\"widow\")) && ((hand[j].value) < (knowsCard.get(i).targetCard.value))) { java.lang.System.out.println((((((((this.name) + \" can raise his value of same suit if he swaps \") + (hand[j].name)) + \" with \") + (knowsCard.get(i).targetCard.name)) + \" To be the best random move and the highest suit is : \") + (highestSuit))); playerDecision.yourCard = hand[j]; playerDecision.widowCard = knowsCard.get(i).targetCard; return true; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7734/buggy-version/MAS_Thirtyone.src.mas_thirtyone.player.java", "BodyUseAPI": [], "Fixed commit": "39a88f28024380c79d31f2b5e181313f9eb9d929", "Url": "https://api.github.com/repos/HiradEmami/ThirtyoneCard", "Date": "2017-04-02T18:07:44Z"},
{"Line": "=>687", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (targetPlayer.getModelName().equals(Model.HUMANOID)) { targetPlayer.setSkin(username); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/431/buggy-version/src.main.java.com.mojang.minecraft.net.PacketHandler.java", "BodyUseAPI": ["com.mojang.minecraft.mob.HumanoidMob.setSkin(java.lang.String)"], "Fixed commit": "55986dd09561cd9356b65d6b9bb4f03129b0e47e", "Url": "https://api.github.com/repos/andrewphorn/ClassiCube-Client", "Date": "2014-11-10T20:04:58Z"},
{"Line": "=>837", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isUppercase && (!isEmpty)) { isUppercase = false; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3456/buggy-version/src.org.nschmidt.ldparteditor.composites.primitive.CompositePrimitive.java", "BodyUseAPI": [], "Fixed commit": "abae8dc251c3cca0dea48d3336925fa14ed55548", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2015-03-20T03:33:52Z"},
{"Line": "=>1361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((educationalLevel != null) && (!(educationalLevel.isEmpty()))) educatUseArrValue.set(0, new com.google.gwt.json.client.JSONNumber(java.lang.Integer.parseInt(educationalLevel)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6209/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.shelf.collection.tab.resource.add.AddResourceView.java", "BodyUseAPI": ["com.google.gwt.json.client.JSONArray.set(int,com.google.gwt.json.client.JSONNumber)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "988233054f80df83f0a52f7fe37182ee75347d3d", "Url": "https://api.github.com/repos/chandrasekharv/Gooru-Web", "Date": "2015-10-08T10:16:10Z"},
{"Line": "=>1357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((momentsOfLearning != null) && (!(momentsOfLearning.isEmpty()))) momentsOfLearningArrValue.set(0, new com.google.gwt.json.client.JSONNumber(java.lang.Integer.parseInt(momentsOfLearning)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6209/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.shelf.collection.tab.resource.add.AddResourceView.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "com.google.gwt.json.client.JSONArray.set(int,com.google.gwt.json.client.JSONNumber)"], "Fixed commit": "988233054f80df83f0a52f7fe37182ee75347d3d", "Url": "https://api.github.com/repos/chandrasekharv/Gooru-Web", "Date": "2015-10-08T10:16:10Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.localPeer.getChunky().hasAllChunks()) { sendRequest(m); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2247/buggy-version/src.main.hosts.ClientThread.java", "BodyUseAPI": [], "Fixed commit": "25ca054ece490bd7f64dbe3aff1b443c8b48705a", "Url": "https://api.github.com/repos/CompNetwork/P2P", "Date": "2017-11-15T03:38:31Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (placePoint != null) { _parseObject.put(edu.umn.kill9.places.model.Place.COLUMN_PLACEPOINT, new com.parse.ParseGeoPoint(placePoint.latitude, placePoint.longitude)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5546/buggy-version/FavoritePlaces.src.edu.umn.kill9.places.model.Place.java", "BodyUseAPI": ["edu.umn.kill9.places.model.Place.put(java.lang.String,com.parse.ParseGeoPoint)"], "Fixed commit": "125f8096ea61da75d58e2caf709e29628f879e17", "Url": "https://api.github.com/repos/drmaas/mobile", "Date": "2013-05-09T03:06:33Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((args[i]) != null) && ((args[i].getClass()) == (java.lang.Character.class))) args[i] = ((java.lang.Character) (args[i])).toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1180/buggy-version/src.main.java.org.wp.spring.php.PHPScriptUtils.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "f6bec607e3bc5e44bb509983e5dff417f30ca8b0", "Url": "https://api.github.com/repos/PaulWeb/quercusspring", "Date": "2013-08-23T03:42:39Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.github.nathannr.antilaby.main.AntiLaby.getInstance().getMetrics().isOptOut()) { mcStats = \"disabled\"; }else { mcStats = \"enabled\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4160/buggy-version/src.com.github.nathannr.antilaby.main.events.PlayerJoin.java", "BodyUseAPI": [], "Fixed commit": "9292285da92ebddaa6191e9ae24735be9ff0e6b7", "Url": "https://api.github.com/repos/NathanNr/AntiLaby", "Date": "2017-04-13T16:31:19Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.github.nathannr.antilaby.metrics.BStats.enabled) { bStats = \"enabled\"; }else { bStats = \"disabled\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4160/buggy-version/src.com.github.nathannr.antilaby.main.events.PlayerJoin.java", "BodyUseAPI": [], "Fixed commit": "9292285da92ebddaa6191e9ae24735be9ff0e6b7", "Url": "https://api.github.com/repos/NathanNr/AntiLaby", "Date": "2017-04-13T16:31:19Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((foundSeat == false) && (!(plane.checkOccupied(flightClass, i, ((aisles / 2) + 1))))) { foundSeat = true; plane.occupySeat(flightClass, i, ((aisles / 2) + 1)); java.lang.System.out.println(\"Seat assigned!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2151/buggy-version/src.SeatingCreator.java", "BodyUseAPI": ["Airplane.occupySeat(java.lang.String,int,int)"], "Fixed commit": "71d2d76cd6c41c9ed02c1affa451216b592ac61f", "Url": "https://api.github.com/repos/dsheng00/PlaneSeatsProject", "Date": "2016-12-23T05:33:00Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (it.jaschke.alexandria.util.Utilities.isNetworkAvailable(getActivity())) { android.content.Intent bookIntent = new android.content.Intent(getActivity(), it.jaschke.alexandria.services.BookService.class); bookIntent.putExtra(BookService.EAN, ean); bookIntent.setAction(BookService.FETCH_BOOK); getActivity().startService(bookIntent); this.restartLoader(); }else { android.widget.Toast.makeText(getActivity(), R.string.network_unavailable, Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2746/buggy-version/alexandria.app.src.main.java.it.jaschke.alexandria.AddBookFragment.java", "BodyUseAPI": [], "Fixed commit": "3355b25afb42fc3be165c8d2b484e73571470e31", "Url": "https://api.github.com/repos/frank-tan/Super-Duo", "Date": "2015-10-22T14:25:35Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mysqlStorage) != null) mysqlStorage.removePortaledPlayer(player.getUniqueId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/800/buggy-version/src.com.untamedears.PrisonPearl.managers.PrisonPortaledPlayerManager.java", "BodyUseAPI": [], "Fixed commit": "ae485f7b24c340dc71bca28edfad94fbc3f2967c", "Url": "https://api.github.com/repos/jjj5311/PrisonPearl", "Date": "2015-03-28T16:16:47Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mysqlStorage) != null) mysqlStorage.removePortaledPlayer(player.getUniqueId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/800/buggy-version/src.com.untamedears.PrisonPearl.managers.PrisonPortaledPlayerManager.java", "BodyUseAPI": [], "Fixed commit": "ae485f7b24c340dc71bca28edfad94fbc3f2967c", "Url": "https://api.github.com/repos/jjj5311/PrisonPearl", "Date": "2015-03-28T16:16:47Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mysqlStorage) != null) mysqlStorage.removePortaledPlayer(uuid);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/800/buggy-version/src.com.untamedears.PrisonPearl.managers.PrisonPortaledPlayerManager.java", "BodyUseAPI": [], "Fixed commit": "ae485f7b24c340dc71bca28edfad94fbc3f2967c", "Url": "https://api.github.com/repos/jjj5311/PrisonPearl", "Date": "2015-03-28T16:16:47Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((symbol.info().type()) == (FunctionInfo.Type.AGGREGATE)) { context.insideAggregation = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6108/buggy-version/sql.src.main.java.io.crate.analyze.validator.HavingSymbolValidator.java", "BodyUseAPI": [], "Fixed commit": "a2ac8be4d77b35a1e2da0c9790260b0e4ac9f81d", "Url": "https://api.github.com/repos/crate/crate", "Date": "2016-12-14T13:38:56Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(parent.isDisposed())) && (!(parent.getDisplay().isDisposed()))) { parent.getDisplay().timerExec(org.deidentifier.arx.gui.view.impl.explore.ViewFilter.SCALE_UPDATE_INTERVAL, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4251/buggy-version/src.gui.org.deidentifier.arx.gui.view.impl.explore.ViewFilter.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Composite.getDisplay()", "parent.getDisplay().timerExec(int,org.deidentifier.arx.gui.view.impl.explore.ViewFilter.3)"], "Fixed commit": "e462c0ce69aef2a5292a67c7aded9db331000962", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2015-02-04T09:35:00Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.andymel.timecollector.graphs.Graph<NODE_ID_TYPE, NODE_PAYLOAD_TYPE>.getAllNodesWIthId(NODE_ID_TYPE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((allNodesWithThisId == null) || ((allNodesWithThisId.size()) == 0)) { throw new java.lang.IllegalStateException(((\"Can't return payload for '\" + id) + \"'! No node found with this id!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7711/buggy-version/src.eu.andymel.timecollector.graphs.Graph.java", "BodyUseAPI": [], "Fixed commit": "bcac31d943461c0da5607736a2dc05b6c2e98897", "Url": "https://api.github.com/repos/andymel123/PathProtector", "Date": "2017-03-16T16:38:24Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.sqlType) == (java.sql.Types.ARRAY)) { return (DBHelper.postgreSQLTypeNameToJava.get(this.getArrayElementTypeName())) + \"[]\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4017/buggy-version/LinkFuture.src.main.java.LinkFuture.Core.DBHelper.Model.ColumnInfo.java", "BodyUseAPI": [], "Fixed commit": "ecc04317f9604b0ad9918b795f6c1a4b4854491a", "Url": "https://api.github.com/repos/cyokin/JAVA", "Date": "2016-08-31T15:00:49Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.plugins.java.api.JavaResourceLocator.findResourceByClassName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (resource != null) { insertIssue(rule, resource, line, longMessage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1730/buggy-version/src.main.java.org.sonar.plugins.findbugs.FindbugsSensor.java", "BodyUseAPI": ["org.sonar.plugins.findbugs.FindbugsSensor.insertIssue(org.sonar.api.rules.Rule,org.sonar.api.resources.Resource,int,java.lang.String)"], "Fixed commit": "7ed83dbb3725cbd8b668e4f1a5756bb7a0b85803", "Url": "https://api.github.com/repos/spotbugs/sonar-findbugs", "Date": "2015-03-11T15:52:11Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(academics.inArchive())) { setOnLongClickListener(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8178/buggy-version/app.src.main.java.com.sarmento.mitchell.gradesaver2.buttons.TermButton.java", "BodyUseAPI": [], "Fixed commit": "96307d492b29dd6863a23862c56d8283df574808", "Url": "https://api.github.com/repos/MitchellSarmento/GradeBook", "Date": "2017-01-18T22:17:22Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(resource.isEmpty())) { return (resource + \" \") + (getDefaultNumberPagination()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/656/buggy-version/demoiselle-crud.src.main.java.org.demoiselle.jee.crud.pagination.PaginationHelper.java", "BodyUseAPI": [], "Fixed commit": "bf3a8e59c8199876c77656600dc5e0fb7668d053", "Url": "https://api.github.com/repos/demoiselle/framework", "Date": "2017-02-24T13:58:31Z"},
{"Line": "=>807", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dealer.getPoints()) < (player.getPoints())) { winMain(); }else if (((player.hasBlackjack()) && (!(dealer.hasBlackjack()))) && (!(handHasSplit))) { winMain(); }else if (((!(player.hasBlackjack())) && (dealer.hasBlackjack())) && (!(handHasSplit))) { loseMain(); }else { pushMain(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6281/buggy-version/src.blackjack.GameBoard.java", "BodyUseAPI": ["blackjack.Player.hasBlackjack()", "blackjack.Player.hasBlackjack()", "blackjack.Player.hasBlackjack()", "blackjack.Player.hasBlackjack()"], "Fixed commit": "d3a59d82c4a3cd389477a4ee7240fd4100d57fad", "Url": "https://api.github.com/repos/jordanking/blackjack", "Date": "2014-04-28T17:25:37Z"},
{"Line": "=>557", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(rating.isEmpty())) { for (int i = 5; i >= (java.lang.Integer.parseInt(rating)); i--) { if (!(star.isEmpty())) { star += org.ednovo.gooru.client.mvp.gsearch.SearchAbstractView.COMMA_SEPARATOR; } star += i; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8789/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.gsearch.SearchAbstractView.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "41cbb6d2a8ab314053f0cfbfc797d398fc70a9f7", "Url": "https://api.github.com/repos/mitraj/Gooru-Web", "Date": "2015-04-22T14:44:00Z"},
{"Line": "=>477", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSubmittingKoans) { return ((file.getParentFile().getName()) + \"/\") + (file.getName()); }else { return ((\"edu/pdx/cs410J/\" + (userId)) + \"/\") + (file.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4495/buggy-version/grader.src.main.java.edu.pdx.cs410J.grader.Submit.java", "BodyUseAPI": [], "Fixed commit": "f752bb3768bfd61bc1ca3c5e39c8ac3965ac1300", "Url": "https://api.github.com/repos/DavidWhitlock/PortlandStateJava", "Date": "2015-07-04T21:10:50Z"},
{"Line": "=>582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id.lastIndexOf(\".\")) == (-1)) { id = id + \".czi\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6649/buggy-version/components.formats-gpl.src.loci.formats.in.ZeissCZIReader.java", "BodyUseAPI": [], "Fixed commit": "dfb7da24ba5771b3ea233ab61e052eba30e98ba5", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2017-08-04T15:07:21Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.onebusaway.android.util.EmbeddedSocialUtils.isSocialAppKeyDefined())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3020/buggy-version/onebusaway-android.src.main.java.org.onebusaway.android.util.EmbeddedSocialUtils.java", "BodyUseAPI": [], "Fixed commit": "2a6e6758ed81f9b152a0ad1c6d588826d2dd0e0e", "Url": "https://api.github.com/repos/acrown-msft/onebusaway-android", "Date": "2017-10-26T23:27:30Z"},
{"Line": "=>572", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.onebusaway.android.util.EmbeddedSocialUtils.isBuildVersionSupportedBySocial()) && (org.onebusaway.android.util.EmbeddedSocialUtils.isSocialAppKeyDefined())) { com.microsoft.embeddedsocial.sdk.EmbeddedSocial.init(this, R.raw.embedded_social_config, BuildConfig.EMBEDDED_SOCIAL_API_KEY); com.microsoft.embeddedsocial.sdk.EmbeddedSocial.setReportHandler(new org.onebusaway.android.report.ui.util.SocialReportHandler()); com.microsoft.embeddedsocial.sdk.EmbeddedSocial.setNavigationDrawerHandler(new org.onebusaway.android.ui.social.SocialNavigationDrawerHandler()); com.microsoft.embeddedsocial.sdk.EmbeddedSocial.setAppProfile(new org.onebusaway.android.ui.social.SocialAppProfile()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3020/buggy-version/onebusaway-android.src.main.java.org.onebusaway.android.app.Application.java", "BodyUseAPI": [], "Fixed commit": "2a6e6758ed81f9b152a0ad1c6d588826d2dd0e0e", "Url": "https://api.github.com/repos/acrown-msft/onebusaway-android", "Date": "2017-10-26T23:27:30Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.teremok.influence.model.player.PlayerManager.current()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (player instanceof com.teremok.influence.model.player.HumanPlayer) { ((com.teremok.influence.model.player.HumanPlayer) (player)).clearPowered(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/846/buggy-version/influence.src.com.teremok.influence.model.Match.java", "BodyUseAPI": [], "Fixed commit": "65ec25986b72eff77ded92202fb392e7c22856c2", "Url": "https://api.github.com/repos/teremokgames/influence", "Date": "2014-01-24T21:38:30Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getBlock(java.lang.Integer,java.lang.Integer,java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (b instanceof net.minecraftforge.fluids.BlockFluidBase) { if ((((net.minecraftforge.fluids.BlockFluidBase) (b)).getFilledPercentage(w, x, y, z)) == 1.0F) return com.amadornes.framez.api.movement.BlockMovementType.SEMI_MOVABLE; return com.amadornes.framez.api.movement.BlockMovementType.REPLACEABLE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7394/buggy-version/src.main.java.com.amadornes.framez.movement.handler.FluidHandler.java", "BodyUseAPI": [], "Fixed commit": "05ca1941d3e566a2db336db582fee071f6238cb5", "Url": "https://api.github.com/repos/amadornes/Framez", "Date": "2014-12-19T18:24:08Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rangestart != start) { values.add(rangestart); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4672/buggy-version/src.main.java.com.cronutils.model.time.generator.BetweenFieldValueGenerator.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.add(int)"], "Fixed commit": "d3cb14e1e5ed730acb1f9a98eebb086d8602cb48", "Url": "https://api.github.com/repos/kallem/cron-utils", "Date": "2016-03-05T02:55:37Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.hhu.propra16.coastal.tddt.CompilerInteraction.error(vk.core.api.JavaStringCompiler,java.util.Collection<vk.core.api.CompileError>,java.util.Collection<vk.core.api.CompileError>,de.hhu.propra16.coastal.tddt.Exercise,de.hhu.propra16.coastal.tddt.ITDDLabel)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (error == (ErrorType.compilerErrorTest)) { tatestterminal.setText((errorMessagesTest + (tatestterminal.getText()))); }else { taterminal.setText(((\"Alle Tests m\u00fcssen erf\u00fcllt werden\" + (\"\\n\" + \"\\n\")) + (taterminal.getText()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3360/buggy-version/src.main.java.de.hhu.propra16.coastal.tddt.CompilerInteraction.java", "BodyUseAPI": [], "Fixed commit": "21adc0a934713f5240ecc3d085ebb418fdaceea3", "Url": "https://api.github.com/repos/ProPra16/programmierpraktikum-abschlussprojekt-coastal", "Date": "2016-07-05T21:17:55Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((uploads.size()) > 0) requestParams.put(\"UPLOAD\", uploads.toArray(new tap.parameters.DALIUpload[uploads.size()]));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4234/buggy-version/src.tap.parameters.DALIUpload.java", "BodyUseAPI": ["java.util.ArrayList<tap.parameters.DALIUpload>.size()", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,tap.parameters.DALIUpload[])", "java.util.ArrayList<tap.parameters.DALIUpload>.toArray(tap.parameters.DALIUpload[])"], "Fixed commit": "fa7806a71c291c7ef539231e7e22a0ca642b2139", "Url": "https://api.github.com/repos/bourgesl/taplib", "Date": "2014-12-12T19:12:21Z"},
{"Line": "=>676", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((authorFilter.getLanguage()) != null) gaeQueryBuilder.addFilter(\"language\", authorFilter.getLanguage());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1438/buggy-version/src.main.java.com.pratilipi.data.DataAccessorGaeImpl.java", "BodyUseAPI": ["com.pratilipi.data.GaeQueryBuilder.addFilter(java.lang.String,authorFilter.getLanguage())", "com.pratilipi.common.util.AuthorFilter.getLanguage()"], "Fixed commit": "312ded9c3498466947c949ed1c88a576b98023c4", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-02-26T12:50:30Z"},
{"Line": "=>735", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.giswater.dao.MainDao.getResultset(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (rs == null) return vector;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6869/buggy-version/src.org.giswater.dao.MainDao.java", "BodyUseAPI": [], "Fixed commit": "1bb9c3dc1ddcef4e75869e40a68453ffb2e5cb1e", "Url": "https://api.github.com/repos/Giswater/giswater", "Date": "2016-11-15T11:07:12Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((plateau2.verifLignes()) == true) { plateau2.mode = Mode.ANAGRAMME; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4493/buggy-version/tetris.src.tetris.Tetraword.java", "BodyUseAPI": [], "Fixed commit": "a4d978712e5832e444135e86035ddd69f47a4010", "Url": "https://api.github.com/repos/alizeec/tetraworld", "Date": "2014-05-10T17:09:35Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == (length - 1)) { textDrawLeft = ((mSeekbarRect.right) + ((mRightCursorBG.getIntrinsicWidth()) / 2)) - textWidth; }else { textDrawLeft = ((mSeekbarRect.left) + (i * (mPartLength))) - (textWidth / 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5428/buggy-version/src.com.dolphin.seekbar.RangeSeekbar.java", "BodyUseAPI": [], "Fixed commit": "ebfd0717e5c89d5f365addf12d623f6f1417b98b", "Url": "https://api.github.com/repos/dolphinwang/RangeSeekbar", "Date": "2014-05-20T06:16:28Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLastKnownLocation) != null) { android.media.ExifInterface exif = new android.media.ExifInterface(fileName); exif.setAttribute(ExifInterface.TAG_GPS_LATITUDE, ((mLastKnownLocation.getLatitude()) + \"\")); exif.setAttribute(ExifInterface.TAG_GPS_LONGITUDE, ((mLastKnownLocation.getLongitude()) + \"\")); exif.saveAttributes(); android.util.Log.d(\"LOCATION - LAT: \", ((mLastKnownLocation.getLatitude()) + \"\")); android.util.Log.d(\"LOCATION - LONG: \", ((mLastKnownLocation.getLongitude()) + \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5198/buggy-version/Mobiquity.src.edu.challenge.mobiquity.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "7de43e27c759a49399ab1a706eef2f7e3ed8a616", "Url": "https://api.github.com/repos/amansharma1234/Code-Challenge---Mobiquity", "Date": "2014-12-12T22:47:26Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.resource.isSimpleKey()) { java.util.List<java.lang.String> arrayProps = this.resource.getArrayProps(); for (java.lang.String propName : this.resource.getPropertiesEndpoints()) { props.append(((this.head_route_prop.replace(\"{{prop_name}}\", propName)) + \"\\n\")); props.append(((this.get_route_prop.replace(\"{{prop_name}}\", propName)) + \"\\n\")); props.append(((this.put_route_prop.replace(\"{{prop_name}}\", propName)) + \"\\n\")); if (arrayProps.contains(propName)) props.append(((this.patch_route_prop.replace(\"{{prop_name}}\", propName)) + \"\\n\")); props.append(((this.delete_route_prop.replace(\"{{prop_name}}\", propName)) + \"\\n\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1559/buggy-version/src.main.java.autorest.generator.RouterBuilder.java", "BodyUseAPI": ["autorest.generator.Resource.getArrayProps()", "autorest.generator.Resource.getPropertiesEndpoints()"], "Fixed commit": "c1d9bea094b0db951e4a169a0d75f99ad9aede0d", "Url": "https://api.github.com/repos/AutoREST/rest-api-generator", "Date": "2017-06-08T15:53:29Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mc.getVideos().get(0).getMedias().get(0).getVideoPart().get(0).getStreams()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (streams == null) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2887/buggy-version/serenity-app.src.main.java.us.nineworlds.serenity.core.model.impl.SubtitleMediaContainer.java", "BodyUseAPI": [], "Fixed commit": "48a0d168989f23e24234cd378f2006d050db0d55", "Url": "https://api.github.com/repos/NineWorlds/serenity-android", "Date": "2014-02-10T02:28:04Z"},
{"Line": "=>589", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((eventIdList.size()) != 1) { eventIds = java.lang.String.join(\",\", java.util.Arrays.toString(eventIdList.toArray())); }else { eventIds = eventIdList.get(0).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3625/buggy-version/src.com.scribble.nbacb.repository.CollegeBasketBallOddsRepository.java", "BodyUseAPI": ["java.util.Arrays.toString(java.lang.Object[])", "java.util.List<java.lang.Integer>.toArray()", "java.util.List<java.lang.Integer>.get(int)", "java.lang.Integer.toString()", "java.lang.String.join(java.lang.String,java.lang.String)"], "Fixed commit": "f38345826a887468ded4036800a3ed4a75aa6872", "Url": "https://api.github.com/repos/cmouli84/CollegeBasketballOdds", "Date": "2016-04-04T04:53:34Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!everExecute) { throw new com.vip.saturn.job.console.exception.SaturnJobConsoleHttpException(HttpStatus.BAD_REQUEST.value(), com.vip.saturn.job.console.service.impl.RestApiServiceImpl.ALL_EXECUTORS_ARE_OFFLINE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7655/buggy-version/saturn-console.src.main.java.com.vip.saturn.job.console.service.impl.RestApiServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "2eddbb156fe972e535a109e2a31d120001133d13", "Url": "https://api.github.com/repos/vipshop/Saturn", "Date": "2017-08-09T01:33:26Z"},
{"Line": "=>644", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (endOfSpan <= 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1344/buggy-version/src.com.iskrembilen.quasseldroid.service.CoreConnService.java", "BodyUseAPI": [], "Fixed commit": "5f2556d6a701c2d45afb7152707b4aee489564b2", "Url": "https://api.github.com/repos/sandsmark/QuasselDroid", "Date": "2011-07-13T18:27:38Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((line.length()) > 0) { out.write((line + (server.basics.HttpMessage.enter))); }else { out.write(server.basics.HttpMessage.enter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4912/buggy-version/src.server.basics.HttpMessage.java", "BodyUseAPI": ["java.io.OutputStreamWriter.write(java.lang.String)"], "Fixed commit": "7eeb2314112ec78e689500404ce747903b52651f", "Url": "https://api.github.com/repos/igorravasi/Memo", "Date": "2015-06-08T12:36:42Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (changed) this.resetAnimation();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4240/buggy-version/fabbutton.src.main.java.mbanje.kurt.fabbutton.ProgressRingView.java", "BodyUseAPI": [], "Fixed commit": "8811c44c384cb5a81e3ef625323a3e9864041291", "Url": "https://api.github.com/repos/masc3d/FabButton", "Date": "2016-07-25T10:25:47Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["execute.getStatusLine().getStatusCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (statusCode != (org.apache.http.HttpStatus.SC_OK)) { throw new java.io.IOException((((\"Failed to connect to \" + feedUrl) + \". \") + (execute.getStatusLine().getReasonPhrase()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4411/buggy-version/nuget-server.src.jetbrains.buildServer.nuget.server.feed.reader.impl.UrlResolverImpl.java", "BodyUseAPI": [], "Fixed commit": "9b4796984c1003b17a4a9fda4072a7e6685c6a77", "Url": "https://api.github.com/repos/JetBrains/teamcity-nuget-support", "Date": "2013-01-03T11:12:46Z"},
{"Line": "=>492", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (variable == (starvationevasion.common.PolicyCard.EnumVariable.Z)) n = varZ;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6880/buggy-version/src.starvationevasion.common.PolicyCard.java", "BodyUseAPI": [], "Fixed commit": "5eb3b3deb902406929efdf4a54676c0d054e4c32", "Url": "https://api.github.com/repos/javierchavez/StarvationEvasion", "Date": "2015-12-08T06:12:01Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(systemSettingsController.getSiteHost().equals(request.getServerName()))) { fi.foyt.fni.persistence.model.illusion.IllusionEvent illusionEvent = illusionEventController.findIllusionEventByDomain(request.getServerName()); if (illusionEvent != null) { return handleExternalLogin(AuthSource.ILLUSION_INTERNAL); }else { navigationController.notFound(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6785/buggy-version/webapp.src.main.java.fi.foyt.fni.view.users.LoginBackingBean.java", "BodyUseAPI": ["fi.foyt.fni.illusion.IllusionEventController.findIllusionEventByDomain(request.getServerName())", "javax.servlet.http.HttpServletRequest.getServerName()"], "Fixed commit": "f40129038a2030294c54be1ee3a0f4eca33be249", "Url": "https://api.github.com/repos/foyt/fni", "Date": "2016-08-09T17:31:12Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((resultIntent != null) && ((resultIntent.getExtras()) != null)) android.util.Log.d(\"ConnectLogin\", resultIntent.getExtras().toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6759/buggy-version/app.src.main.java.mobilesystems.connect.LoginActivity.java", "BodyUseAPI": ["android.content.Intent.getExtras()", "resultIntent.getExtras().toString()", "android.util.Log.d(java.lang.String,resultIntent.getExtras().toString())"], "Fixed commit": "649e2b2f9debba8138c0b9461cbd4a9d84c7cb3b", "Url": "https://api.github.com/repos/nbingham1/Connect", "Date": "2014-12-02T03:38:31Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((movesAuth) != null) new mobilesystems.connect.utils.ServerAPI(this).execute(\"auth\", movesAuth.access_token);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6759/buggy-version/app.src.main.java.mobilesystems.connect.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "649e2b2f9debba8138c0b9461cbd4a9d84c7cb3b", "Url": "https://api.github.com/repos/nbingham1/Connect", "Date": "2014-12-02T03:38:31Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((data.length) != 4) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1596/buggy-version/src.main.java.ru.shutoff.caralarm.TrackView.java", "BodyUseAPI": [], "Fixed commit": "4378bfe78863140056166a541f0b7c5c8edcc245", "Url": "https://api.github.com/repos/shutoff/car-alarm", "Date": "2013-09-16T03:40:45Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((data.length) != 4) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1596/buggy-version/src.main.java.ru.shutoff.caralarm.TrackView.java", "BodyUseAPI": [], "Fixed commit": "4378bfe78863140056166a541f0b7c5c8edcc245", "Url": "https://api.github.com/repos/shutoff/car-alarm", "Date": "2013-09-16T03:40:45Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(contains(Element))) { dataSet.insert(Element); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7682/buggy-version/src.assignment2.DataSet.java", "BodyUseAPI": ["assignment2.SortedList<E>.insert(E)"], "Fixed commit": "8d38f6d81260979f80cda03178186cad0fc6ce87", "Url": "https://api.github.com/repos/TjarcoKerssens/AP2", "Date": "2014-10-07T19:44:36Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isNewSearch) == false) { searchedDiadiem.clear(); searchedDiadiem = temp; }else { searchedDiadiem.addAll(temp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5766/buggy-version/src.com.example.wego.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "bd24f38e619720c9bed9e767682b2600a86f61ac", "Url": "https://api.github.com/repos/vominhnhut/QLQTPM2013", "Date": "2013-11-21T15:26:38Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (t >= (check.length)) { check = grow(check, (t * 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8354/buggy-version/src.main.java.cn.yxffcode.easytookit.dic.DoubleArrayTrie.java", "BodyUseAPI": ["cn.yxffcode.easytookit.dic.DoubleArrayTrie.grow(int[],int)"], "Fixed commit": "27f226882f9cc6b2da36c16c2274266782b1816c", "Url": "https://api.github.com/repos/gaohanghbut/freetookit", "Date": "2015-12-29T10:55:39Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i >= max) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8354/buggy-version/src.main.java.cn.yxffcode.easytookit.algorithm.CharsequenceMatcher.java", "BodyUseAPI": [], "Fixed commit": "27f226882f9cc6b2da36c16c2274266782b1816c", "Url": "https://api.github.com/repos/gaohanghbut/freetookit", "Date": "2015-12-29T10:55:39Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.pm.PackageManager.getPackageInfo(mContext.getPackageName(),PackageManager.GET_PERMISSIONS)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((packageInfo == null) || ((packageInfo.requestedPermissions) == null)) { writer.println(\"No requested permission.\"); if (mIsAll) { writer.println(\"\"); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6160/buggy-version/app.src.main.java.org.shikato.infodumper.InfoDumperPlugin.java", "BodyUseAPI": [], "Fixed commit": "74062a9ed695c89a73fcafd4e67e7436be7bd791", "Url": "https://api.github.com/repos/shikato/info-dumper", "Date": "2015-05-28T15:28:28Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (grp.isExpanded()) { getTreeViewer().expandToLevel(grp, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/9154/buggy-version/com.isencia.passerelle.workbench.model.editor.ui.src.main.java.com.isencia.passerelle.workbench.model.editor.ui.views.ActorTreeViewerPage.java", "BodyUseAPI": ["getTreeViewer().expandToLevel(com.isencia.passerelle.editor.common.model.PaletteGroup,int)"], "Fixed commit": "eea7100e75160797816be06f6d6f2cd674507d3c", "Url": "https://api.github.com/repos/DawnScience/dawn-isenciaui", "Date": "2013-03-20T05:27:33Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dk.frv.enav.ins.EeINS.getSettings().getEnavSettings().isMsiFilter()) { msg = msiHandler.getFilteredMessageList().get(row); }else { msg = msiHandler.getMessageList().get(row); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/913/buggy-version/src.main.java.dk.frv.enav.ins.gui.msi.MsiTableCellRenderer.java", "BodyUseAPI": [], "Fixed commit": "28e6b08a6831a7dc016253ff38b661959ede8aa8", "Url": "https://api.github.com/repos/dma-graveyard/ee-INS", "Date": "2011-09-28T12:45:31Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["play.modules.facebook.FbGraph.getFacebookData(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((fbData != null) && (fbData.has(\"oauth_token\"))) { accessToken = fbData.get(\"oauth_token\").getAsString(); }else if ((fbData != null) && (fbData.has(\"code\"))) { play.libs.WS.HttpResponse res = play.libs.WS.url((((((((((play.modules.facebook.FbGraph.FB_GRAPH_URL) + \"oauth/access_token?\") + \"client_id=\") + (play.modules.facebook.FbGraph.getAppId(domain))) + \"&client_secret=\") + (play.modules.facebook.FbGraph.getAppSecret(domain))) + \"&redirect_uri=\") + \"&code=\") + (fbData.get(\"code\").getAsString()))).get(); if (((res.getJson()) != null) && ((res.getJson().getAsJsonObject().get(\"access_token\")) != null)) { accessToken = res.getJson().getAsJsonObject().get(\"access_token\").getAsString(); req.args.put(play.modules.facebook.FbGraph.FB_GRAPH_TOKEN, accessToken); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/924/buggy-version/src.play.modules.facebook.FbGraph.java", "BodyUseAPI": ["play.libs.WS.url((((((((((play.modules.facebook.FbGraph.FB_GRAPH_URL) + \"oauth/access_token?\") + \"client_id=\") + (play.modules.facebook.FbGraph.getAppId(domain))) + \"&client_secret=\") + (play.modules.facebook.FbGraph.getAppSecret(domain))) + \"&redirect_uri=\") + \"&code=\") + (fbData.get(\"code\").getAsString())))", "fbData.get(\"oauth_token\").getAsString()", "com.google.gson.JsonObject.get(java.lang.String)", "fbData.get(\"code\").getAsString()", "play.libs.WS.url((((((((((play.modules.facebook.FbGraph.FB_GRAPH_URL) + \"oauth/access_token?\") + \"client_id=\") + (play.modules.facebook.FbGraph.getAppId(domain))) + \"&client_secret=\") + (play.modules.facebook.FbGraph.getAppSecret(domain))) + \"&redirect_uri=\") + \"&code=\") + (fbData.get(\"code\").getAsString()))).get()", "com.google.gson.JsonObject.has(java.lang.String)", "com.google.gson.JsonObject.get(java.lang.String)"], "Fixed commit": "b95da64cd43436c87ee73ca1e4de8953cd724b81", "Url": "https://api.github.com/repos/RawIdeas/play-fbgraph", "Date": "2017-07-31T04:23:02Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mapFragment) == null) { mapFragment = new georgia.languagelandscape.fragments.MapFragment(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2495/buggy-version/app.src.main.java.georgia.languagelandscape.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "2adeaad0c1034f6b16a32f59962f738c044a7da5", "Url": "https://api.github.com/repos/FrankieYin/LLapp", "Date": "2017-04-26T11:18:30Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.javakontor.ds.apt.base.ElementInfos.getAnnotationInfos(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((annotationInfos.getStringValue(\"service\")) == null) { for (javax.lang.model.type.TypeMirror mirror : e.getInterfaces()) { interfaces.add(mirror.toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4273/buggy-version/org.javakontor.osgi.ds.apt.src.org.javakontor.ds.apt.OsgiAnnotationScanner.java", "BodyUseAPI": [], "Fixed commit": "f7416b58e724c161889621cf8a9d716c1de03159", "Url": "https://api.github.com/repos/javakontor/OSGi-Service-Component-Annotation-Processor", "Date": "2011-11-16T12:51:08Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.javakontor.ds.apt.base.ElementInfos.getAnnotationInfos(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((annotationInfos.getStringValue(\"service\")) == null) { for (javax.lang.model.type.TypeMirror mirror : e.getInterfaces()) { interfaces.add(mirror.toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4273/buggy-version/org.javakontor.osgi.ds.apt.src.org.javakontor.ds.apt.BndAnnotationScanner.java", "BodyUseAPI": [], "Fixed commit": "f7416b58e724c161889621cf8a9d716c1de03159", "Url": "https://api.github.com/repos/javakontor/OSGi-Service-Component-Annotation-Processor", "Date": "2011-11-16T12:51:08Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fpt.ruby.intent.detection.MovieIntentDetection.getTunedSent(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((tunedSent.indexOf(\"DTI\\t\")) == 0) { if (((tunedSent.contains(\"phim\")) || (tunedSent.contains(\"su\u1ea5t chi\u1ebfu\"))) || (tunedSent.contains(\"xu\u1ea5t chi\u1ebfu\"))) { return com.fpt.ruby.business.constants.IntentConstants.MOV_DATE; } if (tunedSent.contains(\" chi\u1ebfu \")) { for (java.lang.String w : happenWord) { if (tunedSent.contains(w)) { return com.fpt.ruby.business.constants.IntentConstants.MOV_DATE; } } } return com.fpt.ruby.business.constants.IntentConstants.CIN_DATE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6705/buggy-version/ruby-intent.src.main.java.com.fpt.ruby.intent.detection.MovieIntentDetection.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "2b6e9a84aaee10a0a477f2d55f8a1cd6fd3b762d", "Url": "https://api.github.com/repos/NguyenAnhDuc/new-ruby", "Date": "2014-11-14T09:11:59Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fpt.ruby.intent.detection.NonDiacriticMovieIntentDetection.getTunedSent(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((tunedSent.indexOf(\"DTI\\t\")) == 0) { if (((tunedSent.contains(\"phim\")) || (tunedSent.contains(\"suat chieu\"))) || (tunedSent.contains(\"xuat chieu\"))) { return com.fpt.ruby.business.constants.IntentConstants.MOV_DATE; } if (tunedSent.contains(\" chieu \")) { for (java.lang.String w : happenWord) { if (tunedSent.contains(w)) { return com.fpt.ruby.business.constants.IntentConstants.MOV_DATE; } } } return com.fpt.ruby.business.constants.IntentConstants.CIN_DATE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6705/buggy-version/ruby-intent.src.main.java.com.fpt.ruby.intent.detection.NonDiacriticMovieIntentDetection.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "2b6e9a84aaee10a0a477f2d55f8a1cd6fd3b762d", "Url": "https://api.github.com/repos/NguyenAnhDuc/new-ruby", "Date": "2014-11-14T09:11:59Z"},
{"Line": "=>517", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((member) == null) { findViewById(R.id.edit_game_state_button).setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/300/buggy-version/app.src.main.java.se.oort.diplicity.game.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "c07d2f39eb1c06c2316829ef63d25b08a5c0da79", "Url": "https://api.github.com/repos/zond/android-diplicity", "Date": "2017-01-06T20:26:03Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (member != null) { android.widget.TextView unread = new android.widget.TextView(retrofitActivity); unread.setLayoutParams(wrapContentParams); unread.setText(getResources().getString(R.string._unread, channel.NMessagesSince.NMessages)); tableRow.addView(unread); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/300/buggy-version/app.src.main.java.se.oort.diplicity.game.ChannelTable.java", "BodyUseAPI": [], "Fixed commit": "c07d2f39eb1c06c2316829ef63d25b08a5c0da79", "Url": "https://api.github.com/repos/zond/android-diplicity", "Date": "2017-01-06T20:26:03Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ancestors.isEmpty()) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3702/buggy-version/flow-support.src.main.java.org.jenkinsci.plugins.workflow.support.visualization.table.FlowGraphTable.java", "BodyUseAPI": [], "Fixed commit": "ef6bc381f821b401a20cd91cd600fa246e141e9e", "Url": "https://api.github.com/repos/jenkinsci/workflow-plugin", "Date": "2014-05-13T18:25:33Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.authentication.AccountUtils.getOwnCloudAccountByName(com.owncloud.android.ui.activity.FileActivity,upload.getAccountName())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (account != null) { accountNameTextView.setText(com.owncloud.android.utils.DisplayUtils.getAccountNameDisplayText(mParentActivity, account, account.name, upload.getAccountName())); }else { accountNameTextView.setText(upload.getAccountName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3251/buggy-version/src.com.owncloud.android.ui.adapter.ExpandableUploadListAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(com.owncloud.android.utils.DisplayUtils.getAccountNameDisplayText(mParentActivity, account, account.name, upload.getAccountName()))", "com.owncloud.android.utils.DisplayUtils.getAccountNameDisplayText(com.owncloud.android.ui.activity.FileActivity,android.accounts.Account,account.name,upload.getAccountName())"], "Fixed commit": "e6ba8a7e534e1093a722968df3346657329065d1", "Url": "https://api.github.com/repos/apicellaj/android", "Date": "2016-09-26T15:49:45Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.equals(TimestampType.TIMESTAMP)) { return ((java.lang.Long) (rawdata)) * 1000; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1606/buggy-version/integration.presto.src.main.java.org.apache.carbondata.presto.PrestoFilterUtil.java", "BodyUseAPI": [], "Fixed commit": "fccfdc6be7be70467c31297ef318581d575c0a87", "Url": "https://api.github.com/repos/geetikagupta16/incubator-carbondata", "Date": "2017-11-01T11:12:20Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((generalSettings) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5849/buggy-version/launcher.src.main.java.com.benny.openlauncher.util.LauncherSettings.java", "BodyUseAPI": [], "Fixed commit": "262736dcac764bd6d3078c0a019f705ff0d0d7ae", "Url": "https://api.github.com/repos/OpenLauncherTeam/openlauncher", "Date": "2016-12-19T13:19:27Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (DO_VALIDATION) validateMeasurements(reportString);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1769/buggy-version/Source.HisAppraiser.src.gov.niarl.hisAppraiser.integrityReport.HisReportValidator.java", "BodyUseAPI": [], "Fixed commit": "4065734e0cbf82a1e17389bdd045d4ff01964af2", "Url": "https://api.github.com/repos/OpenAttestation/OpenAttestation", "Date": "2014-03-26T02:41:37Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((((nonceInput == null) && (pcrSelectInput == null)) && (machineNameInput == null)) && (machineCertificate == null)) && (previousReportString == null)) DO_VALIDATION = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1769/buggy-version/Source.HisAppraiser.src.gov.niarl.hisAppraiser.integrityReport.HisReportValidator.java", "BodyUseAPI": [], "Fixed commit": "4065734e0cbf82a1e17389bdd045d4ff01964af2", "Url": "https://api.github.com/repos/OpenAttestation/OpenAttestation", "Date": "2014-03-26T02:41:37Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (place.isActive()) { place.emergencyExit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8123/buggy-version/piaf.petrinet.PetriNetEngine.java", "BodyUseAPI": ["piaf.petrinet.Place.emergencyExit()"], "Fixed commit": "83bd1359e19c0a78bd41fd1053dca9263fe28aea", "Url": "https://api.github.com/repos/titiwu/nxt-java-robot", "Date": "2012-06-25T20:20:54Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8788/buggy-version/app.src.main.java.no.skytte.popularmovies.MovieDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "ce78d0f6f57215c7115abecd3f77e2c267d683c7", "Url": "https://api.github.com/repos/herrskytte/udacity_1_popular_movies", "Date": "2016-03-14T07:44:01Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (returner > (theBigOne)) { return theBigOne; }else if (returner < 0) { return 0; }else { return returner; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/9189/buggy-version/app.src.main.java.com.jaks.alvarp.drawthing.DrawPixel.java", "BodyUseAPI": [], "Fixed commit": "758a5d0e01514937c8c215dd5ee3ba7ec4bd5e61", "Url": "https://api.github.com/repos/DasAlvarp/DrawThingsHackathon", "Date": "2014-10-26T14:46:08Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (returner > ((theBigOne) - (pixelRate))) { return (theBigOne) - (pixelRate); }else if (returner < 0) { return 0; }else { return returner; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/9189/buggy-version/app.src.main.java.com.jaks.alvarp.drawthing.DrawPixel.java", "BodyUseAPI": [], "Fixed commit": "758a5d0e01514937c8c215dd5ee3ba7ec4bd5e61", "Url": "https://api.github.com/repos/DasAlvarp/DrawThingsHackathon", "Date": "2014-10-26T14:46:08Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (javaExtensions) builder.add(\"javalib.cmja\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7288/buggy-version/ocamljava-maven-plugin.src.main.java.mandelbrot.ocamljava_maven_plugin.OcamlJavaCompileAbstractMojo.java", "BodyUseAPI": [], "Fixed commit": "12fc98a73bc7afe9cb99918b156e8e98dc474354", "Url": "https://api.github.com/repos/struktured/ocamljava-maven-plugin", "Date": "2014-06-28T03:35:58Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (edu.wmich.gic.finesse.gui.GUIManager.clicked)) { edu.wmich.gic.finesse.gui.GUIManager.clicked.releaseClick(); edu.wmich.gic.finesse.gui.GUIManager.clicked.getActionHandler().onAction(); edu.wmich.gic.finesse.gui.GUIManager.clicked = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3658/buggy-version/src.edu.wmich.gic.finesse.gui.GUIManager.java", "BodyUseAPI": [], "Fixed commit": "99dee35590b79c988619c4e63128cf8de5ac5e81", "Url": "https://api.github.com/repos/White0ut/Finesse", "Date": "2014-03-12T19:54:22Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userTest.toString()) == \"\") user.setLogin(login);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6129/buggy-version/mepa-front.src.main.java.fr.epita.sigl.mepa.front.controller.authentification.AuthController.java", "BodyUseAPI": [], "Fixed commit": "a15b25d164d7b9ddbadb0054db895e02c49410e1", "Url": "https://api.github.com/repos/sigl-mepa-2017/mepa", "Date": "2016-07-26T15:00:25Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (userTest != null) { modelMap.addAttribute(\"isNotEdited\", true); return \"/authentification/editUser\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6129/buggy-version/mepa-front.src.main.java.fr.epita.sigl.mepa.front.controller.authentification.AuthController.java", "BodyUseAPI": [], "Fixed commit": "a15b25d164d7b9ddbadb0054db895e02c49410e1", "Url": "https://api.github.com/repos/sigl-mepa-2017/mepa", "Date": "2016-07-26T15:00:25Z"},
{"Line": "=>745", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t != null) { return t.session; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5998/buggy-version/src.main.java.jcifs.smb.SmbFile.java", "BodyUseAPI": [], "Fixed commit": "b085f2f67f61b66e65994170ac01a5ea5c2e607e", "Url": "https://api.github.com/repos/AgNO3/jcifs-ng", "Date": "2016-07-08T15:51:52Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cr.language.toLowerCase().equals(\"xml\"))) clocResults.add(cr);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8440/buggy-version/src.org.andreschnabel.jprojectinspector.metrics.code.Cloc.java", "BodyUseAPI": ["java.util.List<org.andreschnabel.jprojectinspector.metrics.code.Cloc.ClocResult>.add(org.andreschnabel.jprojectinspector.metrics.code.Cloc.ClocResult)"], "Fixed commit": "19946bdf056aff49fedb3ad17e76be5e5308945a", "Url": "https://api.github.com/repos/0x17/JProjectInspector", "Date": "2013-04-05T14:15:24Z"},
{"Line": "=>564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (debugLogging) { org.apache.solr.update.UpdateLog.log.info((\"openRealtimeSearcher: maps=\" + (java.util.Arrays.toString(new java.lang.Object[]{ map, prevMap, prevMap2 })))); org.apache.solr.update.UpdateLog.log.info((\"openRealtimeSearcher: logs=\" + (java.util.Arrays.toString(new java.lang.Object[]{ tlog, prevMapLog, prevMapLog2 })))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5486/buggy-version/solr.core.src.java.org.apache.solr.update.UpdateLog.java", "BodyUseAPI": [], "Fixed commit": "a050aa07ec00fe0654acc56bd8f1fd36f0976b81", "Url": "https://api.github.com/repos/chatman/lucene-solr", "Date": "2016-02-17T13:55:57Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (debugLogging) { org.apache.solr.update.UpdateLog.log.info((\"openRealtimeSearcher: maps=\" + (java.util.Arrays.toString(new java.lang.Object[]{ map, prevMap, prevMap2 })))); org.apache.solr.update.UpdateLog.log.info((\"openRealtimeSearcher: logs=\" + (java.util.Arrays.toString(new java.lang.Object[]{ tlog, prevMapLog, prevMapLog2 })))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5486/buggy-version/solr.core.src.java.org.apache.solr.update.UpdateLog.java", "BodyUseAPI": [], "Fixed commit": "a050aa07ec00fe0654acc56bd8f1fd36f0976b81", "Url": "https://api.github.com/repos/chatman/lucene-solr", "Date": "2016-02-17T13:55:57Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (folderViews.isPrimaryModifiable()) { folderViews.setPrimaryView(v.getViewName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4236/buggy-version/src.main.java.com.cloudbees.hudson.plugins.folder.AbstractFolder.java", "BodyUseAPI": ["com.cloudbees.hudson.plugins.folder.views.AbstractFolderViewHolder.setPrimaryView(v.getViewName())"], "Fixed commit": "f3068bbc9ce417f7ae6e6351face1f74ebddda8b", "Url": "https://api.github.com/repos/jenkinsci/cloudbees-folder-plugin", "Date": "2016-10-25T18:11:00Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (can_run) { stack[i] = process_queue.get(0); process_queue.remove(0); (pages_fault)++; i++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7832/buggy-version/Main.java", "BodyUseAPI": [], "Fixed commit": "3ce8d01698d0637681fb24b117e042ac932d118c", "Url": "https://api.github.com/repos/luzejunior/MemorySchedulingSimulator", "Date": "2016-11-15T14:43:07Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (time.before(mc.cal)) { addBut.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2489/buggy-version/src.Methods.java", "BodyUseAPI": [], "Fixed commit": "12ab9657a5e4c57af4c07f2005cc4c8177ba9e0e", "Url": "https://api.github.com/repos/Ernestasi/MedicalCentre", "Date": "2017-05-01T11:00:42Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (time.before(mc.cal)) { addBut.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2489/buggy-version/src.Methods.java", "BodyUseAPI": [], "Fixed commit": "12ab9657a5e4c57af4c07f2005cc4c8177ba9e0e", "Url": "https://api.github.com/repos/Ernestasi/MedicalCentre", "Date": "2017-05-01T11:00:42Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) { _btnPending.setText(java.lang.String.format(\"%s (%d)\", getString(R.string.business_bookings_list_pending_header), _pendingBookings.size())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7676/buggy-version/BookMeUp.src.com.gling.bookmeup.business.BusinessBookingsFragment.java", "BodyUseAPI": [], "Fixed commit": "b367f99bf464908282b0db82e4b580834a482391", "Url": "https://api.github.com/repos/galfalkon/BookMeUp", "Date": "2014-10-26T21:13:05Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) { _btnApproved.setText(java.lang.String.format(\"%s (%d)\", getString(R.string.business_bookings_list_approved_header), _approvedBookings.size())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7676/buggy-version/BookMeUp.src.com.gling.bookmeup.business.BusinessBookingsFragment.java", "BodyUseAPI": [], "Fixed commit": "b367f99bf464908282b0db82e4b580834a482391", "Url": "https://api.github.com/repos/galfalkon/BookMeUp", "Date": "2014-10-26T21:13:05Z"},
{"Line": "=>500", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edu.cmu.mdnsim.global.ClusterConfig.DEBUG) { java.lang.System.out.println((\"[DEBUG]Master.sourceReport(): Source started sending data: \" + (com.ericsson.research.warp.util.JSON.toJSON(srcMsg)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1480/buggy-version/src.main.java.edu.cmu.mdnsim.server.Master.java", "BodyUseAPI": [], "Fixed commit": "dd80aa619e51c27b6b3deb060d0eebad08aff8a5", "Url": "https://api.github.com/repos/cmusv-sc/Practicum2014-Ericsson-Media", "Date": "2014-10-30T21:43:08Z"},
{"Line": "=>539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edu.cmu.mdnsim.global.ClusterConfig.DEBUG) { java.lang.System.out.println((\"[DEBUG]sinkReport(): Sink finished receiving data: \" + (com.ericsson.research.warp.util.JSON.toJSON(sinkMsg)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1480/buggy-version/src.main.java.edu.cmu.mdnsim.server.Master.java", "BodyUseAPI": [], "Fixed commit": "dd80aa619e51c27b6b3deb060d0eebad08aff8a5", "Url": "https://api.github.com/repos/cmusv-sc/Practicum2014-Ericsson-Media", "Date": "2014-10-30T21:43:08Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.pow(((java.lang.Math.pow(g.i().hero.heroMover.speedXPerSecond, 2)) + (java.lang.Math.pow(g.i().hero.heroMover.speedYPerSecond, 2))), 0.5)) > (java.lang.Float.parseFloat(value))) return true; else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1574/buggy-version/CS185TD.src.com.touchspin.td.Trigger.java", "BodyUseAPI": [], "Fixed commit": "90fcc15618064f048835831bf4e4803aabea96b8", "Url": "https://api.github.com/repos/adamsbriand/CS185", "Date": "2014-06-13T05:26:53Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.calrissian.restdoclet.util.SnippetUtils.indexOf(java.lang.String,char)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (end == (-1)) { comment.add(new org.calrissian.restdoclet.model.method.description.SnippetText(description.substring(0, description.length()))); description = description.substring(description.length()); }else { comment.add(new org.calrissian.restdoclet.model.method.description.SnippetText(description.substring(0, end))); description = description.substring(end); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1338/buggy-version/rest-doclet.src.main.java.org.calrissian.restdoclet.util.SnippetUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.util.List<org.calrissian.restdoclet.model.method.description.Snippet>.add(org.calrissian.restdoclet.model.method.description.SnippetText)", "java.lang.String.substring(int)"], "Fixed commit": "6d11391b28c8787ec727a3c3054fee118154cdba", "Url": "https://api.github.com/repos/e-government-ua/rest-doclet", "Date": "2016-02-08T20:16:32Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (s.endsWith(\"/\")) s = s.substring(0, ((s.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8493/buggy-version/app.src.main.java.me.ccrama.redditslide.util.GifUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "4c9d9bba099bc27957595dbbc7ee0e292625babe", "Url": "https://api.github.com/repos/Alexendoo/Slide", "Date": "2016-05-06T03:06:52Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bonaPortableMapping) != null) { fieldList = bonaPortableMapping; }else if ((bonaCustomMapping) != null) { fieldList = bonaCustomMapping; }else { if ((errorStrategy) != (de.jpaw.bonaparte.pojos.meta.FoldingStrategy.TRY_SUPERCLASS)) { delegateComposer.startObject(di, obj); obj.serializeSub(this); delegateComposer.terminateObject(di, obj); } return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1922/buggy-version/bonaparte-core.src.main.java.de.jpaw.bonaparte.core.FoldingComposer.java", "BodyUseAPI": [], "Fixed commit": "41f471d770de18b91d1bd875148bf4c9579e2d4a", "Url": "https://api.github.com/repos/jpaw/bonaparte-java", "Date": "2014-09-07T09:55:24Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (counter == 100) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6730/buggy-version/src.main.java.com.corundumstudio.socketio.parser.Encoder.java", "BodyUseAPI": [], "Fixed commit": "f84260e09aa1587625d8456c07b843b9decbef55", "Url": "https://api.github.com/repos/mrniko/netty-socketio", "Date": "2013-12-13T17:40:58Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mOnTextListener) != null) { mOnTextListener.onError(error); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7467/buggy-version/library.src.main.java.mobi.carton.csr.ContinuousSpeechRecognition.java", "BodyUseAPI": [], "Fixed commit": "658fa9df774aaedd72a36216e712a5ae9771109c", "Url": "https://api.github.com/repos/mobicarton/csr", "Date": "2016-03-05T21:49:03Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (keyspaceDir.isFile()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/581/buggy-version/priam.src.main.java.com.netflix.priam.backup.SnapshotBackup.java", "BodyUseAPI": [], "Fixed commit": "ca489e4badd3ea86f2a75bef1d8f61c4b4fb2165", "Url": "https://api.github.com/repos/sagarl/Priam", "Date": "2012-10-24T20:21:16Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (t.getServer().isConnected()) { scouter.client.net.ConnectionPool pool = t.getServer().getConnectionPool(); pool.put(t); }else { t.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7345/buggy-version/scouter.client.src.scouter.client.net.TcpProxy.java", "BodyUseAPI": ["scouter.client.net.TcpProxy.getServer()", "scouter.client.net.ConnectionPool.put(scouter.client.net.TcpProxy)", "scouter.client.server.Server.getConnectionPool()", "scouter.client.net.TcpProxy.close()"], "Fixed commit": "884828cf8b80e8646b60477aa277f1a5b7e1be53", "Url": "https://api.github.com/repos/scouter-project/scouter", "Date": "2016-05-23T08:55:05Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((toInfereIfNeeded.contains(\".\")) && (toInfereIfNeeded.endsWith(org.androidannotations.helper.ModelConstants.generationSuffix()))) { java.lang.String prevClass = toInfereIfNeeded.substring(0, toInfereIfNeeded.lastIndexOf(\".\")); if ((!(prevClass.contains(\".\"))) && (prevClass.endsWith(org.androidannotations.helper.ModelConstants.generationSuffix()))) { for (java.lang.String generatedClass : com.dspot.declex.helper.FilesCacheHelper.getInstance().getGeneratedClasses()) { if (generatedClass.endsWith((\".\" + prevClass))) { return type.replace(toInfereIfNeeded, ((generatedClass + \".\") + (toInfereIfNeeded.substring(((toInfereIfNeeded.lastIndexOf(\".\")) + 1))))); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1083/buggy-version/declex.src.com.dspot.declex.util.TypeUtils.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "0508572d5dbba59c1e347a943d97db11c5914fa1", "Url": "https://api.github.com/repos/smaugho/declex", "Date": "2017-04-29T11:55:44Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((typeElement == null) && (className.contains(\".\"))) { java.lang.String prevClass = className.substring(0, className.lastIndexOf(\".\")); if (prevClass.endsWith(org.androidannotations.helper.ModelConstants.generationSuffix())) { className = ((prevClass.substring(0, ((prevClass.length()) - 1))) + \".\") + (className.substring(((className.lastIndexOf(\".\")) + 1))); typeElement = environment.getProcessingEnvironment().getElementUtils().getTypeElement(className); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1083/buggy-version/declex.src.com.dspot.declex.util.TypeUtils.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.substring(int,int)"], "Fixed commit": "0508572d5dbba59c1e347a943d97db11c5914fa1", "Url": "https://api.github.com/repos/smaugho/declex", "Date": "2017-04-29T11:55:44Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Element.children()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((Tags.size()) != 0) { if (cur.isBlock()) { hasBlockParent = true; } for (i = 0; i < (Tags.size()); i++) { parseTag(Tags.get(i)); } if (hasBlockParent == true) { page.getHtmlBody().getDocument().insertString(page.getHtmlBody().getStyledDocument().getLength(), \"\\n\", getPageStyle()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5022/buggy-version/src.com.controller.PageController.java", "BodyUseAPI": ["org.jsoup.select.Elements.get(int)", "org.jsoup.select.Elements.size()", "com.controller.PageController.parseTag(Tags.get(i))"], "Fixed commit": "52da14b208c785459dc452b0e42f4ce1bc14a16c", "Url": "https://api.github.com/repos/huuson94/oop", "Date": "2015-05-28T21:52:43Z"},
{"Line": "=>784", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.Team5427.Networking.Server.isConnected()) { byte[] dictionary = new byte[]{ com.Team5427.Networking.ByteDictionary.TARGET_DATA }; byte[] horiz = com.Team5427.Networking.Interpreter.doubleToBytes(com.Team5427.VisionProcessing.Main.targets.get(0).getHorizontalAngle()); byte[] targetdist = com.Team5427.Networking.Interpreter.doubleToBytes(com.Team5427.VisionProcessing.Main.targets.get(0).getTargetDistance()); com.Team5427.Networking.Server.send(com.Team5427.Networking.Interpreter.merge(dictionary, horiz, targetdist)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2059/buggy-version/src.com.Team5427.VisionProcessing.Main.java", "BodyUseAPI": [], "Fixed commit": "18655696852e62d882f675830f1fea44349690bb", "Url": "https://api.github.com/repos/Team5427/2017-Vision-Processing", "Date": "2017-03-22T01:12:42Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((android.graphics.Color.blue(image.getPixel(((x.get(i)) + j), y.get(i)))) != 0) image.setPixel(((x.get(i)) + j), y.get(i), android.graphics.Color.rgb(255, 255, 255));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3790/buggy-version/app.src.main.java.vandyapps.com.qualityprinter.PictureAnalyzer.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.get(int)", "android.graphics.Bitmap.setPixel(int,java.lang.Integer,android.graphics.Color.rgb(255, 255, 255))", "java.util.ArrayList<java.lang.Integer>.get(int)"], "Fixed commit": "81de47a3d370faa04f1bd9e661b6ed54ae48aa3a", "Url": "https://api.github.com/repos/shurd/qualityprinter", "Date": "2015-07-06T22:42:01Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((android.graphics.Color.blue(image.getPixel(((x.get(i)) - j), ((y.get(i)) - j)))) != 0) image.setPixel(((x.get(i)) - j), ((y.get(i)) - j), android.graphics.Color.rgb(255, 255, 255));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3790/buggy-version/app.src.main.java.vandyapps.com.qualityprinter.PictureAnalyzer.java", "BodyUseAPI": ["android.graphics.Bitmap.setPixel(int,int,android.graphics.Color.rgb(255, 255, 255))", "java.util.ArrayList<java.lang.Integer>.get(int)", "java.util.ArrayList<java.lang.Integer>.get(int)"], "Fixed commit": "81de47a3d370faa04f1bd9e661b6ed54ae48aa3a", "Url": "https://api.github.com/repos/shurd/qualityprinter", "Date": "2015-07-06T22:42:01Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((android.graphics.Color.blue(image.getPixel(((x.get(i)) + j), ((y.get(i)) + j)))) != 0) image.setPixel(((x.get(i)) + j), ((y.get(i)) + j), android.graphics.Color.rgb(255, 255, 255));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3790/buggy-version/app.src.main.java.vandyapps.com.qualityprinter.PictureAnalyzer.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.get(int)", "java.util.ArrayList<java.lang.Integer>.get(int)", "android.graphics.Bitmap.setPixel(int,int,android.graphics.Color.rgb(255, 255, 255))"], "Fixed commit": "81de47a3d370faa04f1bd9e661b6ed54ae48aa3a", "Url": "https://api.github.com/repos/shurd/qualityprinter", "Date": "2015-07-06T22:42:01Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((android.graphics.Color.blue(image.getPixel(x.get(i), ((y.get(i)) - j)))) != 0) image.setPixel(x.get(i), ((y.get(i)) - j), android.graphics.Color.rgb(255, 255, 255));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3790/buggy-version/app.src.main.java.vandyapps.com.qualityprinter.PictureAnalyzer.java", "BodyUseAPI": ["android.graphics.Bitmap.setPixel(java.lang.Integer,int,android.graphics.Color.rgb(255, 255, 255))", "java.util.ArrayList<java.lang.Integer>.get(int)", "java.util.ArrayList<java.lang.Integer>.get(int)"], "Fixed commit": "81de47a3d370faa04f1bd9e661b6ed54ae48aa3a", "Url": "https://api.github.com/repos/shurd/qualityprinter", "Date": "2015-07-06T22:42:01Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((android.graphics.Color.blue(image.getPixel(x.get(i), ((y.get(i)) + j)))) != 0) image.setPixel(x.get(i), ((y.get(i)) + j), android.graphics.Color.rgb(255, 255, 255));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3790/buggy-version/app.src.main.java.vandyapps.com.qualityprinter.PictureAnalyzer.java", "BodyUseAPI": ["android.graphics.Bitmap.setPixel(java.lang.Integer,int,android.graphics.Color.rgb(255, 255, 255))", "java.util.ArrayList<java.lang.Integer>.get(int)", "java.util.ArrayList<java.lang.Integer>.get(int)"], "Fixed commit": "81de47a3d370faa04f1bd9e661b6ed54ae48aa3a", "Url": "https://api.github.com/repos/shurd/qualityprinter", "Date": "2015-07-06T22:42:01Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((android.graphics.Color.blue(image.getPixel(((x.get(i)) - j), y.get(i)))) != 0) image.setPixel(((x.get(i)) - j), y.get(i), android.graphics.Color.rgb(255, 255, 255));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3790/buggy-version/app.src.main.java.vandyapps.com.qualityprinter.PictureAnalyzer.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.get(int)", "java.util.ArrayList<java.lang.Integer>.get(int)", "android.graphics.Bitmap.setPixel(int,java.lang.Integer,android.graphics.Color.rgb(255, 255, 255))"], "Fixed commit": "81de47a3d370faa04f1bd9e661b6ed54ae48aa3a", "Url": "https://api.github.com/repos/shurd/qualityprinter", "Date": "2015-07-06T22:42:01Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((text == null) || (text.isEmpty())) { return new org.metaborg.core.syntax.ParseResult(text, null, resource, org.metaborg.util.iterators.Iterables2.<org.metaborg.core.messages.IMessage>singleton(new org.metaborg.core.messages.Message(\"The input is empty.\", org.metaborg.core.messages.MessageSeverity.NOTE, org.metaborg.core.messages.MessageType.PARSER, resource, null, null)), 0, language, null, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3177/buggy-version/org.metaborg.spoofax.core.src.main.java.org.metaborg.spoofax.core.syntax.JSGLRParseService.java", "BodyUseAPI": [], "Fixed commit": "17ff50fbf961e3276ef6d38c3af04c878235c7ba", "Url": "https://api.github.com/repos/metaborg/spoofax", "Date": "2016-03-08T15:06:43Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dps.domain.entity.Customer.getAddress()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (address == null) { address = new com.dps.domain.entity.Address(); cust.setAddress(address); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/70/buggy-version/dps-web-service.src.main.java.com.dps.web.service.controller.CustomerController.java", "BodyUseAPI": [], "Fixed commit": "1417ac202c96a784c9f23b829bd5dced2f85421b", "Url": "https://api.github.com/repos/ashanbhag12/dps", "Date": "2016-10-12T17:32:49Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["caesar.ast.ExpressionTree.getType()", "caesar.ast.ExpressionTree.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((lo != null) && (ro != null)) && ((lo.equals(\"Integer\")) && (ro.equals(\"Integer\")))) { return \"Integer\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6537/buggy-version/jcc.javasrc.caesar.ast.BinaryTree.java", "BodyUseAPI": [], "Fixed commit": "12c93b6a4e530f07833a8d53092f25b3c5f3652f", "Url": "https://api.github.com/repos/hohy/Caesar", "Date": "2011-12-12T21:37:36Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getActiveChannelListAsString().equals(MegaDBindingConstants.CHANNEL_INCOUNT)) { }else if (getActiveChannelListAsString().equals(MegaDBindingConstants.CHANNEL_CONTACT)) { if ((OnOff.name()) == \"ON\") { updateState(getActiveChannelListAsString(), OpenClosedType.CLOSED); }else if ((OnOff.name()) == \"OFF\") { updateState(getActiveChannelListAsString(), OpenClosedType.OPEN); } }else { try { updateState(getActiveChannelListAsString(), org.eclipse.smarthome.core.library.types.DecimalType.valueOf(getCommands[2])); } catch (java.lang.Exception ex) { logger.error(\"Error: value is not Decimal!!\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8292/buggy-version/org.openhab.binding.megad.src.main.java.org.openhab.binding.megad.handler.MegaDHandler.java", "BodyUseAPI": [], "Fixed commit": "2b149faac5dbba613956e4f5f5edf174600776b8", "Url": "https://api.github.com/repos/Pshatsillo/openhab2MegadBinding", "Date": "2017-03-30T10:06:53Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (module != null) { org.infernus.idea.checkstyle.util.IDEAUtilities.showError(module.getProject(), messageFormat.format(messageArgs)); }else { throw new org.infernus.idea.checkstyle.exception.CheckStylePluginException(messageFormat.format(messageArgs)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8016/buggy-version/src.main.java.org.infernus.idea.checkstyle.checker.CheckerFactory.java", "BodyUseAPI": ["java.lang.Module.getProject()", "org.infernus.idea.checkstyle.util.IDEAUtilities.showError(module.getProject(),java.lang.String)"], "Fixed commit": "5e97af376ed982fda0a17b0bba97f6e979f1ad52", "Url": "https://api.github.com/repos/jshiell/checkstyle-idea", "Date": "2013-09-18T17:50:33Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (doc == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2937/buggy-version/server.catgenome.src.main.java.com.epam.catgenome.entity.vcf.Pointer.java", "BodyUseAPI": [], "Fixed commit": "0c947a34d14619cde7f667f172f43e39280c4620", "Url": "https://api.github.com/repos/epam/NGB", "Date": "2017-09-05T16:57:51Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((turnIndex) != (-1)) { (turnIndex)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3653/buggy-version/src.View.GUI.CombatFrame.java", "BodyUseAPI": [], "Fixed commit": "b7af587b030d0cd5f12047875963de43e4db4b9c", "Url": "https://api.github.com/repos/h3dg3-Wytch/DADA", "Date": "2015-11-30T22:16:31Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.drill.exec.planner.sql.SchemaUtilites.findSchema(org.apache.calcite.schema.SchemaPlus,java.util.List<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (schema == null) { org.apache.drill.exec.planner.sql.SchemaUtilites.throwSchemaNotFoundException(defaultSchema, SchemaUtilites.SCHEMA_PATH_JOINER.join(schemaPathGivenInCmd)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6921/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.planner.sql.handlers.DescribeTableHandler.java", "BodyUseAPI": [], "Fixed commit": "7c47463e5637f293c0e13bd394d250c8beba2e71", "Url": "https://api.github.com/repos/vkorukanti/drill", "Date": "2015-05-29T15:57:40Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.drill.exec.planner.sql.SchemaUtilites.findSchema(org.apache.calcite.schema.SchemaPlus,java.util.List<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.drill.exec.planner.sql.SchemaUtilites.isRootSchema(schema)) { throw org.apache.drill.common.exceptions.UserException.validationError().message(\"No schema selected.\").build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6921/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.planner.sql.handlers.DescribeTableHandler.java", "BodyUseAPI": [], "Fixed commit": "7c47463e5637f293c0e13bd394d250c8beba2e71", "Url": "https://api.github.com/repos/vkorukanti/drill", "Date": "2015-05-29T15:57:40Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (item.getHasSubtypes()) { for (int meta = 0; meta < (item.getNumSubtypes()); meta++) { net.minecraft.client.Minecraft.getMinecraft().getRenderItem().getItemModelMesher().register(((net.minecraft.item.Item) (item)), meta, new net.minecraft.client.resources.model.ModelResourceLocation(item.getUnlocalizedName(new net.minecraft.item.ItemStack(((net.minecraft.item.Item) (item)), 1, meta)).substring(5), \"inventory\")); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4444/buggy-version/src.main.java.com.JasonILTG.ScienceMod.init.ScienceModItems.java", "BodyUseAPI": ["com.JasonILTG.ScienceMod.item.general.ItemScience.getNumSubtypes()", "item.getUnlocalizedName(new net.minecraft.item.ItemStack(((net.minecraft.item.Item) (item)), 1, meta)).substring(int)", "net.minecraft.client.Minecraft.getMinecraft().getRenderItem().getItemModelMesher().register(com.JasonILTG.ScienceMod.item.general.ItemScience,int,net.minecraft.client.resources.model.ModelResourceLocation)", "com.JasonILTG.ScienceMod.item.general.ItemScience.getUnlocalizedName(net.minecraft.item.ItemStack)"], "Fixed commit": "e51144423ec2ee79857a90904d53427bb57a2a95", "Url": "https://api.github.com/repos/JasonYe4273/Minecraft-Modding", "Date": "2015-12-19T17:58:55Z"},
{"Line": "=>700", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) == 5) return com.example.chessgameandroid.ChessBoard.isDangerous(loc, com.example.chessgameandroid.ChessBoard.isWhite(this));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1124/buggy-version/src.com.example.chessgameandroid.ChessBoard.java", "BodyUseAPI": [], "Fixed commit": "240561a89c61d6751cdd8fd32e42f7b9868844a8", "Url": "https://api.github.com/repos/Facade-Developer/ChessGameAndroid", "Date": "2014-07-22T21:17:23Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requestCode == 3) { java.util.List<com.example.aj.scavengersworld.Model.Clue> huntList = hunt.getClueList(); huntList.remove(mPosition); huntList.add(mPosition, clue); hunt.setClueList(huntList); }else { hunt.addClueToClueList(clue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6798/buggy-version/app.src.main.java.com.example.aj.scavengersworld.HuntCreateModify.java", "BodyUseAPI": [], "Fixed commit": "33849e9d478c5219c9c06f6b0fafa6e90dffad52", "Url": "https://api.github.com/repos/anirudh985/ScavengersWorld", "Date": "2016-11-10T05:50:48Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.text.StyledDocument.getText(((document.getEndPosition().getOffset()) - 2),int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(end.endsWith(\"\\n\"))) && (!(end.endsWith(\"\\r\")))) { com.welovecoding.netbeans.plugin.editorconfig.processor.operation.LOG.log(Level.INFO, \"Adding final newline \\\"{0}\\\"\", lineEnding); document.insertString(((document.getEndPosition().getOffset()) - 1), lineEnding, null); java.lang.String result = document.getText(((document.getEndPosition().getOffset()) - 10), 10); System.out.println((\"Result: \" + result)); com.welovecoding.netbeans.plugin.editorconfig.processor.operation.LOG.log(Level.INFO, \"Saving Document\"); cookie.saveDocument(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5014/buggy-version/src.main.java.com.welovecoding.netbeans.plugin.editorconfig.processor.operation.FinalNewLineOperation.java", "BodyUseAPI": [], "Fixed commit": "4f335b78886cbe4b35dcb68767886712db4e9d7e", "Url": "https://api.github.com/repos/welovecoding/editorconfig-netbeans", "Date": "2014-11-12T22:11:21Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bahmni.module.pacsintegration.services.OpenMRSService.getEncounter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (encounter.hasOrders()) { pacsIntegrationService.processEncounter(encounter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8812/buggy-version/pacs-integration-webapp.src.main.java.org.bahmni.module.pacsintegration.atomfeed.worker.EncounterFeedWorker.java", "BodyUseAPI": ["org.bahmni.module.pacsintegration.services.PacsIntegrationService.processEncounter(org.bahmni.module.pacsintegration.atomfeed.contract.encounter.OpenMRSEncounter)"], "Fixed commit": "96d9ea3d8750f3e3d89dc9a0d8446f9dd81a886f", "Url": "https://api.github.com/repos/Bahmni/pacs-integration", "Date": "2016-02-17T06:53:35Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player1.getInventory().getContents()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((contents.length) > (net.buycraft.plugin.bukkit.BukkitBuycraftPlatform.MAXIMUM_USABLE_INVENTORY_SIZE)) { contents = java.util.Arrays.copyOfRange(contents, 0, net.buycraft.plugin.bukkit.BukkitBuycraftPlatform.MAXIMUM_USABLE_INVENTORY_SIZE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2101/buggy-version/bukkit.src.main.java.net.buycraft.plugin.bukkit.BukkitBuycraftPlatform.java", "BodyUseAPI": ["java.util.Arrays.copyOfRange(org.bukkit.inventory.ItemStack[],int,int)"], "Fixed commit": "4647983f010f917ad6319a3a81004b0884b6ca0a", "Url": "https://api.github.com/repos/BuycraftPlugin/BuycraftX", "Date": "2016-07-15T10:39:59Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (WorkflowRequestStatus.DELETED.toString().equals(newState)) { workflowRequestDAO.updateStatusOfRequest(requestId, newState); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1953/buggy-version/components.workflow-mgt.org.wso2.carbon.identity.workflow.mgt.src.main.java.org.wso2.carbon.identity.workflow.mgt.WorkflowService.java", "BodyUseAPI": ["org.wso2.carbon.identity.workflow.mgt.dao.WorkflowRequestDAO.updateStatusOfRequest(java.lang.String,java.lang.String)"], "Fixed commit": "3d5232d1daf0e0ae743700805f2fa6d4f19c1bf6", "Url": "https://api.github.com/repos/mefarazath/carbon-identity", "Date": "2015-08-12T06:05:50Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (iRecord.isDirty()) com.orientechnologies.orient.core.record.ORecordInternal.unsetDirty(iRecord);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3466/buggy-version/server.src.main.java.com.orientechnologies.orient.server.network.protocol.binary.OBinaryNetworkProtocolAbstract.java", "BodyUseAPI": ["com.orientechnologies.orient.core.record.ORecordInternal.unsetDirty(com.orientechnologies.orient.core.record.ORecord)"], "Fixed commit": "fdb62b05c5499c377c9a76591bdfc74a3deb5bbb", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-08-19T21:44:32Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (adapter == (org.eclipse.core.resources.IProject.class)) { org.eclipse.core.resources.IResource resource = this.getResource(this.getInput()); if (resource instanceof org.eclipse.core.resources.IFile) { return resource.getProject(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6615/buggy-version/plugins.org.python.pydev.src.org.python.pydev.compare.PyMergeViewer.java", "BodyUseAPI": [], "Fixed commit": "9eabdf16cd03f7fdb744ff02c9a3f22f4ae09fd9", "Url": "https://api.github.com/repos/wesleybl/Pydev", "Date": "2014-12-08T21:06:03Z"},
{"Line": "=>538", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gDomain instanceof de.uni_koblenz.jgralab.grumlschema.domains.EnumDomain) { domain = createDomain(((de.uni_koblenz.jgralab.grumlschema.domains.EnumDomain) (gDomain))); }else if (gDomain instanceof de.uni_koblenz.jgralab.grumlschema.domains.MapDomain) { domain = createDomain(((de.uni_koblenz.jgralab.grumlschema.domains.MapDomain) (gDomain))); }else if (gDomain instanceof de.uni_koblenz.jgralab.grumlschema.domains.CollectionDomain) { domain = createDomain(((de.uni_koblenz.jgralab.grumlschema.domains.CollectionDomain) (gDomain))); }else if (gDomain instanceof de.uni_koblenz.jgralab.grumlschema.domains.RecordDomain) { if (rdNames.contains(qualifiedName)) { throw new java.lang.RuntimeException((\"Cyclic dependency in record domains: \" + (rdNames))); } rdNames.add(qualifiedName); domain = createDomain(((de.uni_koblenz.jgralab.grumlschema.domains.RecordDomain) (gDomain))); rdNames.remove(qualifiedName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6216/buggy-version/src.de.uni_koblenz.jgralab.utilities.tg2schemagraph.SchemaGraph2Schema.java", "BodyUseAPI": [], "Fixed commit": "d598fd6765a35723ee1775c2ad81a993fe40e517", "Url": "https://api.github.com/repos/jgralab/jgralab", "Date": "2012-07-09T09:07:03Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(userCommand.contains((((procrastinate.Parser.WHITESPACE) + keyword) + (procrastinate.Parser.WHITESPACE))))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1814/buggy-version/src.procrastinate.Parser.java", "BodyUseAPI": [], "Fixed commit": "a0efbc03b95c4f2413742a95ecb5587f8b7042b8", "Url": "https://api.github.com/repos/cs2103aug2015-w10-1j/main", "Date": "2015-11-03T05:56:37Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (item.getClass().isAnnotationPresent(us.jakeabel.index.serializer.api.IndexEntity.class)) { us.jakeabel.index.serializer.api.IndexEntity entityAnnotation = item.getClass().getAnnotation(us.jakeabel.index.serializer.api.IndexEntity.class); us.jakeabel.index.serializer.index.IndexableField docTitle = new us.jakeabel.index.serializer.index.StringField(\"_ENTITY_NAME_\", entityAnnotation.name(), org.apache.lucene.document.Field.Store.YES); doc.add(docTitle); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5088/buggy-version/src.main.java.us.jakeabel.index.serializer.index.BaseDocIndex.java", "BodyUseAPI": ["java.lang.Class<? extends us.jakeabel.index.serializer.entity.BaseEntity>.getAnnotation(java.lang.Class)", "E.getClass()"], "Fixed commit": "d36ca29104b59184bc1f0a3fc2f078a41de5c932", "Url": "https://api.github.com/repos/jakeabel/IndexSerializer", "Date": "2015-10-10T18:08:42Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (partida.getArticulo().getClaveIVA().equalsIgnoreCase(ivaTasaB4Clave)) { concepto.setValorUnitario(partida.getPrecioUnitario().divide(IVA_DIVISION, 4, java.math.BigDecimal.ROUND_HALF_UP)); }else { com.magnabyte.cfdi.portal.service.documento.impl.ComprobanteServiceImpl.logger.error(messageSource.getMessage(\"comprobante.error.iva\", new java.lang.Object[]{ partida.getArticulo().getId() }, null)); throw new com.magnabyte.cfdi.portal.model.exception.PortalException(messageSource.getMessage(\"comprobante.error.iva\", new java.lang.Object[]{ partida.getArticulo().getId() }, null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7617/buggy-version/portal-cfdi-api.src.main.java.com.magnabyte.cfdi.portal.service.documento.impl.ComprobanteServiceImpl.java", "BodyUseAPI": ["com.magnabyte.cfdi.portal.model.ticket.Ticket.Transaccion.Partida.getArticulo()", "partida.getArticulo().getId()", "com.magnabyte.cfdi.portal.model.cfdi.v32.Comprobante.Conceptos.Concepto.setValorUnitario(partida.getPrecioUnitario().divide(IVA_DIVISION, 4, java.math.BigDecimal.ROUND_HALF_UP))", "partida.getPrecioUnitario().divide(java.math.BigDecimal,int,int)", "org.springframework.context.MessageSource.getMessage(java.lang.String,java.lang.Object[],<nulltype>)", "com.magnabyte.cfdi.portal.model.ticket.Ticket.Transaccion.Partida.getArticulo()", "org.springframework.context.MessageSource.getMessage(java.lang.String,java.lang.Object[],<nulltype>)", "org.slf4j.Logger.error(messageSource.getMessage(\"comprobante.error.iva\", new java.lang.Object[]{ partida.getArticulo().getId() }, null))", "partida.getArticulo().getId()", "com.magnabyte.cfdi.portal.model.ticket.Ticket.Transaccion.Partida.getPrecioUnitario()"], "Fixed commit": "0db0fdfc43692c29d224ecb1121f2d45ff993021", "Url": "https://api.github.com/repos/sarcle/portal", "Date": "2014-03-26T01:00:31Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= (android.os.Build.VERSION_CODES.HONEYCOMB)) { builder.setIconAttribute(android.R.attr.alertDialogIcon); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/222/buggy-version/src.eu.alefzero.owncloud.ui.fragment.ConfirmationDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "e8852fa725ccd1adb25c7af1fd1ddf2429f67a8f", "Url": "https://api.github.com/repos/bartoszprzybylski/owncloud-android", "Date": "2012-07-30T07:46:24Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck.findExpressionBlockInForLoop(com.puppycrawl.tools.checkstyle.api.DetailAST)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (block == null) { result = (literalFor.getLineNo()) == (literalFor.getLastChild().getLineNo()); }else { result = (literalFor.getLineNo()) == (block.getLineNo()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2241/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getLineNo()"], "Fixed commit": "5c9b0140d0a7f4c92d38c55a10bb2834bd612de7", "Url": "https://api.github.com/repos/rnveach/checkstyle", "Date": "2015-10-09T00:29:57Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (title.isEmpty()) { me.shadorc.discordbot.utils.BotUtils.sendMessage(((me.shadorc.discordbot.utils.command.Emoji.GREY_EXCLAMATION) + \" You must specify a title.\"), context.getChannel()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7700/buggy-version/src.me.shadorc.discordbot.command.utils.LyricsCmd.java", "BodyUseAPI": [], "Fixed commit": "dd299b4df3d390dead6f9fc94d4f4b50525a65b7", "Url": "https://api.github.com/repos/Shadorc/Shadbot", "Date": "2017-10-09T20:03:51Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (artist.isEmpty()) { me.shadorc.discordbot.utils.BotUtils.sendMessage(((me.shadorc.discordbot.utils.command.Emoji.GREY_EXCLAMATION) + \" You must specify an artist.\"), context.getChannel()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7700/buggy-version/src.me.shadorc.discordbot.command.utils.LyricsCmd.java", "BodyUseAPI": [], "Fixed commit": "dd299b4df3d390dead6f9fc94d4f4b50525a65b7", "Url": "https://api.github.com/repos/Shadorc/Shadbot", "Date": "2017-10-09T20:03:51Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.UUID.fromString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(game.getGhost(ghostID))) { java.lang.String[] ghostPosition = new java.lang.String[]{ msgTokens[2], msgTokens[3], msgTokens[4] }; game.createGhostAvatar(ghostID, ghostPosition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8492/buggy-version/src.gameEngine.networking.FinalGameClient.java", "BodyUseAPI": ["FinalGame.FinalGame.createGhostAvatar(java.util.UUID,java.lang.String[])"], "Fixed commit": "1f05f4e991be6ae231eb4d91922e375d049750f6", "Url": "https://api.github.com/repos/PhilHawkins/FinalGame", "Date": "2015-04-21T15:53:09Z"},
{"Line": "=>719", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tick_duration > 0) { sig.plugin.TwosideKeeper.CustomDamage.addIframe(tick_duration, ((org.bukkit.entity.Player) (target))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6084/buggy-version/src.sig.plugin.TwosideKeeper.CustomDamage.java", "BodyUseAPI": ["sig.plugin.TwosideKeeper.CustomDamage.addIframe(int,org.bukkit.entity.LivingEntity)"], "Fixed commit": "0c149c9b4ad006b3741ceaecf5fcd7a03bf43ffe", "Url": "https://api.github.com/repos/sigonasr2/TwosideKeeper", "Date": "2016-08-23T10:55:17Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (hour < 10) final_time = ((\"0\" + (java.lang.Integer.toString(hour))) + \":\") + (res_time[1]); else final_time = ((java.lang.Integer.toString(hour)) + \":\") + (res_time[1]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5688/buggy-version/HomeCare.app.src.main.java.com.example.whjt2_000.homecare.DatabaseHelper.java", "BodyUseAPI": ["java.lang.Integer.toString(int)", "java.lang.Integer.toString(int)"], "Fixed commit": "b5e21b86c81b853adae7c4cee331386d0e152712", "Url": "https://api.github.com/repos/uwcse481h2016/HomeCare", "Date": "2016-03-17T18:42:07Z"},
{"Line": "=>578", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((files == null) || ((files.length) == 0)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6901/buggy-version/desktop.src.com.frostwire.gui.library.LibraryUtils.java", "BodyUseAPI": [], "Fixed commit": "4fb45650f762e73d4bda4f239fb6441fe3f71ba6", "Url": "https://api.github.com/repos/frostwire/frostwire", "Date": "2016-12-06T19:03:26Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (initializationRequired) { if (dataset != null) try { it.geosolutions.imageio.gdalframework.GDALUtilities.closeDataSet(dataset); } catch (java.lang.Throwable e) { if (it.geosolutions.imageio.gdalframework.GDALCommonIIOImageMetadata.LOGGER.isLoggable(java.util.logging.Level.FINEST)) it.geosolutions.imageio.gdalframework.GDALCommonIIOImageMetadata.LOGGER.log(java.util.logging.Level.FINEST, e.getLocalizedMessage(), e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3363/buggy-version/library.gdalframework.src.main.java.it.geosolutions.imageio.gdalframework.GDALCommonIIOImageMetadata.java", "BodyUseAPI": [], "Fixed commit": "f6e092e742af67071ab565fcbc228ac0c94aad30", "Url": "https://api.github.com/repos/geosolutions-it/imageio-ext", "Date": "2013-03-14T11:18:52Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.type.equals(org.societies.webapp.entity.NotificationQueueItem.TYPE_ACK_NACK)) { return null; }else { if ((((results) == null) || ((results.length) == 0)) || (null == (results[0]))) { if ((((this.options) != null) || ((this.options.length) > 0)) && ((this.options[0]) != null)) { return this.options[0]; }else { return \"\"; } } return results[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/262/buggy-version/platform-infrastructure.web-app.src.main.java.org.societies.webapp.entity.NotificationQueueItem.java", "BodyUseAPI": [], "Fixed commit": "14bf4441754b0146f0d6944b231f5462a0ffd029", "Url": "https://api.github.com/repos/societies/SOCIETIES-Platform", "Date": "2013-11-14T15:39:59Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((queue.size()) < 1) { java.lang.Thread.currentThread().setPriority(java.lang.Thread.NORM_PRIORITY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2044/buggy-version/hMarketThread.java", "BodyUseAPI": [], "Fixed commit": "e639f067813806f795f03dbeea2bb627788e3221", "Url": "https://api.github.com/repos/aristodemos/hihooi", "Date": "2016-02-08T20:34:21Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (response != null) { android.widget.TextView t = ((android.widget.TextView) (getActivity().findViewById(R.id.textView))); try { org.json.JSONObject jso = new org.json.JSONObject(response); java.lang.String msg = jso.getString(\"message\"); int code = jso.getInt(\"code\"); t.setText((((\"Message: \" + msg) + \" with code: \") + code)); } catch (org.json.JSONException e) { e.printStackTrace(); } }else { android.widget.TextView t = ((android.widget.TextView) (getActivity().findViewById(R.id.textView))); t.setText(\"No response\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8323/buggy-version/TomJerry.app.src.main.java.com.example.rikysamuel.tomjerry.fragmentStart.java", "BodyUseAPI": [], "Fixed commit": "5bf70cadcff8ac3e44c2a7942aecfe56b62c5411", "Url": "https://api.github.com/repos/Rikysamuel/IF3111-Tugas-1-Android", "Date": "2015-03-07T16:24:22Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.elasticsearch.index.fielddata.ordinals.OrdinalsBuilder.buildDocsWithValuesSet()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (docsWithValues != null) { ramBytesUsed += docsWithValues.ramBytesUsed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5403/buggy-version/src.main.java.org.elasticsearch.index.fielddata.plain.PackedArrayIndexFieldData.java", "BodyUseAPI": ["org.elasticsearch.index.fielddata.plain.FixedBitSet.ramBytesUsed()"], "Fixed commit": "ea1af11b8978fcc551f198e24fe21d52806993ef", "Url": "https://api.github.com/repos/elasticsearch/elasticsearch", "Date": "2014-11-02T02:29:00Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (end == (-1)) { end = lyrics.length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8617/buggy-version/app.src.main.java.com.church.psalm.view.adapter.RealmSearchAdapter.java", "BodyUseAPI": [], "Fixed commit": "92e33b2a903570efe531c66f95e7c627c6c5c26e", "Url": "https://api.github.com/repos/darrengyl/songsandhymnsoflife", "Date": "2016-05-02T05:45:36Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mFieldType.equals(StringUtils.STRING)) { return (\"\\\"\" + (mFieldDefault)) + \"\\\"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7706/buggy-version/src.main.java.com.rain.utils.android.robocop.model.ContentProviderTableFieldModel.java", "BodyUseAPI": [], "Fixed commit": "1e8c71f44e0a42042e52754ccfa7eb7451b3ecee", "Url": "https://api.github.com/repos/martynhaigh/RoboCoP", "Date": "2015-03-01T21:52:30Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (qual == null) { qual = \"w300\"; android.content.SharedPreferences.Editor editor = pref.edit(); editor.putString(\"quality\", qual).apply(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3265/buggy-version/app.src.main.java.com.example.yassine.mymdb.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "36104d8953cca5e02ef40be7d850a1a30194787f", "Url": "https://api.github.com/repos/cheqriyass/MyMdb", "Date": "2017-11-23T20:58:14Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(myIsAgentPermissionsUpdated.compareAndSet(false, true))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4974/buggy-version/src.jetbrains.buildServer.clouds.local.LocalCloudInstance.java", "BodyUseAPI": [], "Fixed commit": "915adeed177d15fc9b86d0ad0b1884a640f7bfea", "Url": "https://api.github.com/repos/JetBrains/teamcity-local-cloud", "Date": "2012-12-18T09:14:48Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.getFileName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (fileName == null) { throw new java.lang.IllegalArgumentException(\"Cannot parse filename from settings location. Please include the /elasticsearch.yml in the settings location.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1859/buggy-version/scheduler.src.main.java.org.apache.mesos.elasticsearch.scheduler.TaskInfoFactory.java", "BodyUseAPI": [], "Fixed commit": "3ceff2ac3445aaab4ead2222935ce5e36a285cdf", "Url": "https://api.github.com/repos/mesos/elasticsearch", "Date": "2016-02-15T11:22:47Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(javax.faces.context.FacesContext.getCurrentInstance().isPostback())) && (conversation.isTransient())) { conversation.begin(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3938/buggy-version/src.main.java.com.realdolmen.redotravel.controller.TripSelectorController.java", "BodyUseAPI": ["javax.enterprise.context.Conversation.begin()"], "Fixed commit": "eaee01feb8731042b24f8aa7d619f128ad0cc53f", "Url": "https://api.github.com/repos/zynne/redo-air", "Date": "2014-10-07T12:12:52Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.settings.wifi.AdvancedWifiSettings.findPreference(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (wifiAssistant != null) { getPreferenceScreen().removePreference(wifiAssistant); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7593/buggy-version/src.com.android.settings.wifi.AdvancedWifiSettings.java", "BodyUseAPI": ["getPreferenceScreen().removePreference(android.preference.SwitchPreference)"], "Fixed commit": "6a2b1a44d2ed5bc0b5025ec62a51662850499d71", "Url": "https://api.github.com/repos/XileForce/Onyx-Settings", "Date": "2014-08-18T20:00:11Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (0 == numberB) { throw new java.lang.Error(\"Division by zero\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7720/buggy-version/csb.1_Formula_solver.src.com.shpp.vbaranchuk.cs.Assignment1.java", "BodyUseAPI": [], "Fixed commit": "dab60734f30f42575eb8d41449536a4651272618", "Url": "https://api.github.com/repos/kuguarpwnz/shpp", "Date": "2016-06-21T11:01:45Z"},
{"Line": "=>713", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.currentCheckpointFile) != null) { utility.GeneralUtils.removeFile(this.currentCheckpointFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1314/buggy-version/Pregel.src.main.java.system.WorkerImpl.java", "BodyUseAPI": [], "Fixed commit": "90e1f8e7207ec7e047c810e3b9a01fae0a829c67", "Url": "https://api.github.com/repos/prakashchandrasekaran/Pregel", "Date": "2012-06-12T07:49:43Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.denevell.natch.gen.ServSingle.single(java.lang.String,java.lang.String,long,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((single.getStatus()) != 200) { return single; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5272/buggy-version/src.main.java.org.denevell.natch.gen.ServSingleWithPagination.java", "BodyUseAPI": [], "Fixed commit": "efe3e8997d9f80c1687b4ab5e10326a7f5f1d008", "Url": "https://api.github.com/repos/denevell/Natch-REST", "Date": "2014-12-28T01:06:20Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["doc.select(\"time[itemprop=duration]\").first()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (runTime == null) { com.example.work.moviequest.BackgroundOperations.jsonContent[i][2] = \"Runtime N/A\"; }else { com.example.work.moviequest.BackgroundOperations.jsonContent[i][2] = runTime.text(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1429/buggy-version/app.src.main.java.com.example.work.moviequest.BackgroundOperations.java", "BodyUseAPI": ["org.jsoup.nodes.Element.text()"], "Fixed commit": "fa0dfa867a7cea49d5b1d52d813a7c94d70ad69d", "Url": "https://api.github.com/repos/GKemi/MovieQuest", "Date": "2017-08-02T16:43:04Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (admin != null) { mAdminUri = admin.getString(\"resource_uri\"); mAdminFirstName = admin.getString(\"first_name\"); mAdminLastName = admin.getString(\"last_name\"); mAdminEmail = admin.optString(\"email\", null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2385/buggy-version/EnvSocialApp.src.com.envsocial.android.api.Location.java", "BodyUseAPI": [], "Fixed commit": "ee2e52a81582d74bdc69226041aab43911488f96", "Url": "https://api.github.com/repos/asorici/envsmth", "Date": "2013-01-16T15:04:32Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.whrl.aottracegen.armgen.insts.ArmInst.getLabel()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (label.isLocal()) { label.rename((regionPrefix + (label.getLabelNameOnly()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/317/buggy-version/eu.whrl.aottracegen.armgen.AssemblyProcessor.java", "BodyUseAPI": ["eu.whrl.aottracegen.armgen.insts.ArmLabelReference.rename((regionPrefix + (label.getLabelNameOnly())))", "eu.whrl.aottracegen.armgen.insts.ArmLabelReference.getLabelNameOnly()"], "Fixed commit": "49255dbff9ed061b05819a47cef1819cac866256", "Url": "https://api.github.com/repos/rubzo/aottracegen-plugin", "Date": "2013-12-12T16:51:55Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(java.util.Objects.equals(json, \"\"))) { bankModel = gson.fromJson(json, com.podimov.moneycalcmd.model.BankModel.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4500/buggy-version/app.src.main.java.com.podimov.moneycalcmd.MainActivity.java", "BodyUseAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Fixed commit": "b2c6710f3297319a94757128d9305c6d46a1f358", "Url": "https://api.github.com/repos/podimov/MoneyCalcMD", "Date": "2017-06-18T10:32:21Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((d.getIdentifier()) != null) { ne.add(d.getIdentifier()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6960/buggy-version/src.net.masterthought.dlanguage.utils.DUtil.java", "BodyUseAPI": ["net.masterthought.dlanguage.utils.DLanguageClassDeclaration.getIdentifier()", "java.util.List<com.intellij.psi.PsiNamedElement>.add(d.getIdentifier())"], "Fixed commit": "3631d93c735587b4b55434c9d372351761b0ddec", "Url": "https://api.github.com/repos/intellij-dlanguage/intellij-dlanguage", "Date": "2015-12-29T23:59:41Z"},
{"Line": "=>1053", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.exoplatform.calendar.service.Utils.getICalendarRecur(org.exoplatform.calendar.service.CalendarEvent)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (recur == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1426/buggy-version/calendar-service.src.main.java.org.exoplatform.calendar.service.Utils.java", "BodyUseAPI": [], "Fixed commit": "88ef2fa7ccf9b907b81ec6b66308dbc2450650cc", "Url": "https://api.github.com/repos/exoplatform/calendar", "Date": "2014-07-11T01:47:21Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (task.startDateEqualsEndDate()) { task.setEndDate(newStartDate); main.logic.UpdateHandler.googleCalendar.syncUpdateTaskEndDate(eventId, newStartDate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2005/buggy-version/src.main.logic.UpdateHandler.java", "BodyUseAPI": ["main.storage.Task.setEndDate(org.joda.time.LocalDate)"], "Fixed commit": "17974ebe272f06936aa80f09184a49377d29fe26", "Url": "https://api.github.com/repos/cs2103aug2014-T13-2J/main", "Date": "2014-10-31T14:05:57Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (task.startTimeEqualsEndTime()) { task.setEndTime(newStartTime); main.logic.UpdateHandler.googleCalendar.syncUpdateTaskEndTime(eventId, newStartTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2005/buggy-version/src.main.logic.UpdateHandler.java", "BodyUseAPI": ["main.storage.Task.setEndTime(org.joda.time.LocalTime)"], "Fixed commit": "17974ebe272f06936aa80f09184a49377d29fe26", "Url": "https://api.github.com/repos/cs2103aug2014-T13-2J/main", "Date": "2014-10-31T14:05:57Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (selected.hasThumbnail()) { ((android.widget.ImageView) (findViewById(R.id.owned_instrument_view_thumbnail_iv))).setImageBitmap(selected.getThumbnail()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2437/buggy-version/app.src.main.java.cmput301w16t08.scaling_pancake.activities.ViewInstrumentActivity.java", "BodyUseAPI": ["((android.widget.ImageView) (findViewById(R.id.owned_instrument_view_thumbnail_iv))).setImageBitmap(selected.getThumbnail())", "cmput301w16t08.scaling_pancake.models.Instrument.getThumbnail()"], "Fixed commit": "fe0559e463d7410ac33cef3bcef1de34ddd4b880", "Url": "https://api.github.com/repos/CMPUT301W16T08/scaling-pancake", "Date": "2016-04-03T18:38:42Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.htwberlin.f4.ai.ma.measurement.modules.AltitudeModule.getAltitude()", "de.htwberlin.f4.ai.ma.measurement.modules.DistanceModule.getDistance(calibrationData.isStairs())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (deltaZ > distance) { deltaZ = distance; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8310/buggy-version/app.src.main.java.de.htwberlin.f4.ai.ma.measurement.modules.variant_a.PositionModuleA.java", "BodyUseAPI": [], "Fixed commit": "12e9b909413770ea0ebcfd08451722b00b3b0775", "Url": "https://api.github.com/repos/OpenHistoricalDataMap/BVGDetection", "Date": "2017-09-24T14:28:18Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cfml.parsing.cfscript.CFExpression.Decompile(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (txt != null) { sb.append(txt.substring(1, ((txt.length()) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7441/buggy-version/cfml.parsing.src.main.java.cfml.parsing.cfscript.CFStringExpression.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "d3c33efa7838d186da96c0b42aad24ef34e2b134", "Url": "https://api.github.com/repos/denuno/cfparser", "Date": "2016-05-08T10:22:07Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((message) == null) { message = data; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7441/buggy-version/cfml.parsing.src.main.java.cfml.parsing.ParseMessage.java", "BodyUseAPI": [], "Fixed commit": "d3c33efa7838d186da96c0b42aad24ef34e2b134", "Url": "https://api.github.com/repos/denuno/cfparser", "Date": "2016-05-08T10:22:07Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.configuration.file.YamlConfiguration.getConfigurationSection(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (cs != null) { return new com.tidesofwaronline.Exodus.CustomItem.CustomItem(cs.getValues(true)); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3408/buggy-version/src.com.tidesofwaronline.Exodus.Config.PlayerConfig.java", "BodyUseAPI": ["org.bukkit.configuration.ConfigurationSection.getValues(boolean)"], "Fixed commit": "9d557e6dc90e35a2e3285eb36c25262d5fb758ad", "Url": "https://api.github.com/repos/TidesofWarOnline/Exodus", "Date": "2013-03-24T03:47:17Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ualberta.team17.datamanager.DataManager.readLocalData(android.content.Context,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (data != null) { com.google.gson.JsonElement tree = parser.parse(data); if (tree != null) { mUserContext.loadFromJson(tree); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/353/buggy-version/moqa.src.com.ualberta.team17.datamanager.DataManager.java", "BodyUseAPI": ["com.google.gson.JsonParser.parse(java.lang.String)"], "Fixed commit": "4b192212a7c355123249af1f52d92d4e7fc68baa", "Url": "https://api.github.com/repos/j-rewerts/Team17Project", "Date": "2014-11-06T19:35:10Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((thumbnailMode) && (maxValue < ((subHeight) / 12))) && (maxValueReal > ((subHeight) / 2))) { scaling = 0.5F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6196/buggy-version/ecgview.src.main.java.cc.liyongzhi.ecgview.ECGSubView.java", "BodyUseAPI": [], "Fixed commit": "3ff430bef023997861825a812f5e9014592db0f3", "Url": "https://api.github.com/repos/yzlee/electrocardiogram", "Date": "2016-09-03T06:14:04Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, double[]>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((resultInMap != null) && ((resultInMap.length) > 0)) return resultInMap;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3759/buggy-version/src.it.cloud.amazon.ec2.AmazonEC2.java", "BodyUseAPI": [], "Fixed commit": "740967cf67195e3983ebca828a4ff82b059b7099", "Url": "https://api.github.com/repos/rickdesantis/cloud-runner", "Date": "2015-05-21T14:59:24Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (xx < 0) { xx = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6515/buggy-version/src.gui.JixelScreen.java", "BodyUseAPI": [], "Fixed commit": "de2587610b1d288d6146549e83fd2dd0df707403", "Url": "https://api.github.com/repos/SebastienGllmt/Jixel", "Date": "2012-11-05T08:43:56Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (yy < 0) { yy = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6515/buggy-version/src.gui.JixelScreen.java", "BodyUseAPI": [], "Fixed commit": "de2587610b1d288d6146549e83fd2dd0df707403", "Url": "https://api.github.com/repos/SebastienGllmt/Jixel", "Date": "2012-11-05T08:43:56Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Lists.newArrayList(java.util.List<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((lore.size()) > 2) lore.set(2, ((((((org.bukkit.ChatColor.GOLD) + \"Cost: \") + (org.bukkit.ChatColor.AQUA)) + (cost)) + (org.bukkit.ChatColor.GOLD)) + \".\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3641/buggy-version/src.main.java.com.minegusta.GearUp.shop.ShopEnum.java", "BodyUseAPI": ["java.util.List<java.lang.String>.set(int,((((((org.bukkit.ChatColor.GOLD) + \"Cost: \") + (org.bukkit.ChatColor.AQUA)) + (cost)) + (org.bukkit.ChatColor.GOLD)) + \".\"))"], "Fixed commit": "0a8280cf6db3abb8563faf28657b17503bd07754", "Url": "https://api.github.com/repos/janie177/GearUp", "Date": "2014-06-14T17:20:28Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Lists.newArrayList(java.util.List<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((lore.size()) < 3) lore.add(((((((org.bukkit.ChatColor.GOLD) + \"Cost: \") + (org.bukkit.ChatColor.AQUA)) + (cost)) + (org.bukkit.ChatColor.GOLD)) + \".\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3641/buggy-version/src.main.java.com.minegusta.GearUp.shop.ShopEnum.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(((((((org.bukkit.ChatColor.GOLD) + \"Cost: \") + (org.bukkit.ChatColor.AQUA)) + (cost)) + (org.bukkit.ChatColor.GOLD)) + \".\"))"], "Fixed commit": "0a8280cf6db3abb8563faf28657b17503bd07754", "Url": "https://api.github.com/repos/janie177/GearUp", "Date": "2014-06-14T17:20:28Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(viewStack.isEmpty())) && ((currentView) != (viewStack.peek()))) { do { viewStack.pop(); } while ((currentView) != (viewStack.peek()) ); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7241/buggy-version/Sources.MVP4Vaadin.src.com.github.peholmst.mvp4vaadin.navigation.DefaultViewController.java", "BodyUseAPI": ["java.util.Stack<V>.pop()", "java.util.Stack<V>.peek()"], "Fixed commit": "a4a9a426d5c6ee79d35dfa93519666ddc8917d4b", "Url": "https://api.github.com/repos/peholmst/MVP4Vaadin", "Date": "2011-03-01T08:38:14Z"},
{"Line": "=>724", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasNext()) { T out = ((T) (beanHolder[0])); beanHolder[0] = null; return out; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2987/buggy-version/src.main.java.com.univocity.parsers.common.routine.AbstractRoutines.java", "BodyUseAPI": [], "Fixed commit": "5e563c94c0efc0a896f840b32cc990b1c07960d5", "Url": "https://api.github.com/repos/mosoft521/univocity-parsers", "Date": "2017-08-25T05:34:11Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.json.serialization.BaseConverter.checkBaseType(type)) { if (JSONObject.NULL.equals(obj)) return null; return type.cast(obj); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3133/buggy-version/src.org.json.serialization.BaseConverter.java", "BodyUseAPI": ["java.lang.Class<T>.cast(java.lang.Object)"], "Fixed commit": "312b6856321fec15bd7217b08268531b13919d32", "Url": "https://api.github.com/repos/XuPeiYao/JsonSerializationExtension", "Date": "2015-12-05T09:52:23Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wordpress.android.editor.MetadataUtils.AttributesWithClass.getAttribute(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(src)) { src = attrs.getAttribute(\"videopress_hidden_src\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5060/buggy-version/libs.editor.WordPressEditor.src.main.java.org.wordpress.android.editor.MetadataUtils.java", "BodyUseAPI": [], "Fixed commit": "c86a796d877281863f39c96bace338edc1f51358", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2017-12-19T10:35:07Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (yl == yu) { throw new org.uma.jmetal.util.JMetalException((\"The lower and upper bounds have the same value: \" + yl)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7094/buggy-version/jmetal-core.src.main.java.org.uma.jmetal.operator.impl.mutation.PolynomialMutation.java", "BodyUseAPI": [], "Fixed commit": "51bc7fa81daff3e0a6afc92e4d6574c3420daede", "Url": "https://api.github.com/repos/jMetal/jMetal", "Date": "2015-04-29T14:48:59Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (yl == yu) { throw new org.uma.jmetal.util.JMetalException((\"The lower and upper bounds have the same value: \" + yl)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7094/buggy-version/jmetal-core.src.main.java.org.uma.jmetal.operator.impl.mutation.IntegerPolynomialMutation.java", "BodyUseAPI": [], "Fixed commit": "51bc7fa81daff3e0a6afc92e4d6574c3420daede", "Url": "https://api.github.com/repos/jMetal/jMetal", "Date": "2015-04-29T14:48:59Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((issue.assignee) != null) { request.assignee = issue.assignee.login; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6721/buggy-version/app.src.main.java.com.github.pockethub.util.RequestUtils.java", "BodyUseAPI": [], "Fixed commit": "7cd43b8c3bdf3e36e1e9632f3eb63fbe93acf4ce", "Url": "https://api.github.com/repos/joaocsousa/PocketHub", "Date": "2015-10-10T14:43:45Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((issue.milestone) != null) { request.milestone = issue.milestone.number; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6721/buggy-version/app.src.main.java.com.github.pockethub.util.RequestUtils.java", "BodyUseAPI": [], "Fixed commit": "7cd43b8c3bdf3e36e1e9632f3eb63fbe93acf4ce", "Url": "https://api.github.com/repos/joaocsousa/PocketHub", "Date": "2015-10-10T14:43:45Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((issue.labels) != null) { nrLabels = issue.labels.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6721/buggy-version/app.src.main.java.com.github.pockethub.util.RequestUtils.java", "BodyUseAPI": ["issue.labels.size()"], "Fixed commit": "7cd43b8c3bdf3e36e1e9632f3eb63fbe93acf4ce", "Url": "https://api.github.com/repos/joaocsousa/PocketHub", "Date": "2015-10-10T14:43:45Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (move == (Move.DOUBLE)) { setActualAmountWagered(((actualAmountWagered) * 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1437/buggy-version/src.Engine.Game.java", "BodyUseAPI": [], "Fixed commit": "ab98273ac21c4d50c411f90d7c22109bb9bd9c42", "Url": "https://api.github.com/repos/aarya123/FlapJack", "Date": "2013-09-14T04:44:20Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((activityBook.getId()) == 1) android.util.Log.e(daniel.com.br.crud.UpdateOrDeleteActivity.UpdateBookLoader.class.getSimpleName(), \"Invalid id\"); else { new daniel.com.br.crud.UpdateOrDeleteActivity.DeleteBookLoader().execute(activityBook); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4651/buggy-version/app.src.main.java.daniel.com.br.crud.UpdateOrDeleteActivity.java", "BodyUseAPI": ["daniel.com.br.crud.UpdateOrDeleteActivity.DeleteBookLoader.execute(daniel.com.br.crud.model.Book)"], "Fixed commit": "bfc3fd32cc13322329ec1b6c40b443b971edbaab", "Url": "https://api.github.com/repos/DanielDDDL/crud_android", "Date": "2017-07-04T12:44:21Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.atomic.AtomicReference<org.apache.hc.core5.reactor.IOReactorStatus>.getAndSet(IOReactorStatus.SHUT_DOWN)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((previousStatus.compareTo(IOReactorStatus.ACTIVE)) == 0) { this.selector.wakeup(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8526/buggy-version/httpcore5.src.main.java.org.apache.hc.core5.reactor.IOReactorImpl.java", "BodyUseAPI": [], "Fixed commit": "43714ada233de6a7a82291d55e5df2fcc32b2ebb", "Url": "https://api.github.com/repos/bindul/httpcomponents-core", "Date": "2017-06-08T12:17:20Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.status.compareAndSet(IOReactorStatus.ACTIVE, IOReactorStatus.SHUTTING_DOWN)) { this.selector.wakeup(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8526/buggy-version/httpcore5.src.main.java.org.apache.hc.core5.reactor.IOReactorImpl.java", "BodyUseAPI": [], "Fixed commit": "43714ada233de6a7a82291d55e5df2fcc32b2ebb", "Url": "https://api.github.com/repos/bindul/httpcomponents-core", "Date": "2017-06-08T12:17:20Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seph.lang.compiler.SephObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (value.isActivatable()) { java.lang.invoke.MethodHandle activation = value.activationFor(arity(), keywords()); if ((messageKind) == \"message\") { fastPath = activation; }else { java.lang.invoke.MethodHandle one = java.lang.invoke.MethodHandles.insertArguments(seph.lang.compiler.SephCallSite.INSERT_ARGUMENTS_MH, 0, activation, 0); java.lang.invoke.MethodHandle two = one.asCollector(java.lang.Object[].class, type().parameterCount()); java.lang.invoke.MethodHandle three = two.asType(type().changeReturnType(java.lang.invoke.MethodHandle.class)); java.lang.invoke.MethodHandle four = java.lang.invoke.MethodHandles.dropArguments(java.lang.invoke.MethodHandles.dropArguments(seph.lang.compiler.SephCallSite.SET_TAIL_MH, 1, seph.lang.compiler.SephObject.class), 3, type().dropParameterTypes(0, 2).parameterArray()); java.lang.invoke.MethodHandle folded = java.lang.invoke.MethodHandles.foldArguments(four, three); fastPath = folded; } }else { fastPath = java.lang.invoke.MethodHandles.dropArguments(java.lang.invoke.MethodHandles.constant(seph.lang.compiler.SephObject.class, value), 0, type().parameterArray()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4703/buggy-version/src.main.seph.lang.compiler.SephCallSite.java", "BodyUseAPI": ["java.lang.invoke.MethodHandles.dropArguments(java.lang.invoke.MethodHandle,int,java.lang.Class<?>[])", "java.lang.invoke.MethodHandles.constant(java.lang.Class,seph.lang.compiler.SephObject)", "seph.lang.compiler.SephObject.activationFor(int,boolean)"], "Fixed commit": "fb920d4b03f1c53357e2fc09c5d1d9cf647bd38d", "Url": "https://api.github.com/repos/seph-lang/seph", "Date": "2011-05-25T06:21:31Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bar) == null) { bar = new supavit.geoipservice.view.ProgressBar(); submitBtn.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3158/buggy-version/src.supavit.geoipservice.view.Gui.java", "BodyUseAPI": [], "Fixed commit": "af104a391cd75f140c99146c3fd2dfc01550cfe7", "Url": "https://api.github.com/repos/b5510546671/GeoIPService", "Date": "2014-11-18T10:53:57Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((config) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4692/buggy-version/src.main.java.net.dmulloy2.ultimatearena.types.ArenaZone.java", "BodyUseAPI": [], "Fixed commit": "e1de8a1f5a53f2ed3db70e3dbeaa9b951d20dd29", "Url": "https://api.github.com/repos/MineSworn/UltimateArena", "Date": "2014-04-30T20:38:53Z"},
{"Line": "=>669", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.touge.restclient.ReSTClient.readStream(java.io.InputStream)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((errorMessage != null) && ((errorMessage.length) > 0)) { if ((connection.getContentEncoding()) != null) serverMessage = new java.lang.String(errorMessage, connection.getContentEncoding()); else serverMessage = new java.lang.String(errorMessage, \"UTF-8\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7788/buggy-version/org.touge.restclient.src.org.touge.restclient.ReSTClient.java", "BodyUseAPI": [], "Fixed commit": "85ee7b22ef62e07b6ea0046303a60522122479fa", "Url": "https://api.github.com/repos/kgilmer/touge", "Date": "2011-10-25T04:33:32Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mythicacraft.voteroulette.Voter.getUnclaimedRewardCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (unclaimedRewardsCount > 0) { com.mythicacraft.voteroulette.VoteRoulette.getAwardManager().administerAllUnclaimedAwards(voter, AwardType.REWARD); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5504/buggy-version/src.com.mythicacraft.voteroulette.listeners.LoginListener.java", "BodyUseAPI": [], "Fixed commit": "caaa0dec2faac73b68a828f0a1a32e76f0e3b852", "Url": "https://api.github.com/repos/ebiggz/VoteRoulette", "Date": "2015-05-16T22:57:50Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mythicacraft.voteroulette.Voter.getUnclaimedMilestoneCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (unclaimedMilestonesCount > 0) { com.mythicacraft.voteroulette.VoteRoulette.getAwardManager().administerAllUnclaimedAwards(voter, AwardType.MILESTONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5504/buggy-version/src.com.mythicacraft.voteroulette.listeners.LoginListener.java", "BodyUseAPI": [], "Fixed commit": "caaa0dec2faac73b68a828f0a1a32e76f0e3b852", "Url": "https://api.github.com/repos/ebiggz/VoteRoulette", "Date": "2015-05-16T22:57:50Z"},
{"Line": "=>782", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) <= (Build.VERSION_CODES.JELLY_BEAN_MR1)) { jp.co.recruit_lifestyle.android.floatingview.TrashView.AnimationHandler.clearClippedChildren(trashView.mRootView); jp.co.recruit_lifestyle.android.floatingview.TrashView.AnimationHandler.clearClippedChildren(trashView.mTrashIconRootView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7992/buggy-version/library.src.main.java.jp.co.recruit_lifestyle.android.floatingview.TrashView.java", "BodyUseAPI": [], "Fixed commit": "d8ea8a14da37e2b1287631affca625e39d505023", "Url": "https://api.github.com/repos/recruit-lifestyle/FloatingView", "Date": "2017-02-02T08:22:11Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdapter) != null) { mAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4058/buggy-version/app.src.main.java.app.studentorganizer.activities.SubjectActivity.java", "BodyUseAPI": [], "Fixed commit": "20be664b13000a0a8489a43fd316f5ffb0ba45a6", "Url": "https://api.github.com/repos/miriaminna/student-organizer-dima", "Date": "2015-12-10T08:06:29Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["workspace.getCommandPreferences().getCommandPreferencesJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (pref != null) { rdfNamespace = pref.optString(PublishRDFCommandPreferencesKeys.rdfNamespace.name()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3096/buggy-version/karma-commands.commands-publish-alignment-openrdf.src.main.java.edu.isi.karma.controller.command.worksheet.ExportCSVCommand.java", "BodyUseAPI": ["org.json.JSONObject.optString(PublishRDFCommandPreferencesKeys.rdfNamespace.name())"], "Fixed commit": "bcc7fec8eb7b12622bcdb75521a44a4d39452dde", "Url": "https://api.github.com/repos/shrikanthn/Web-Karma", "Date": "2014-05-30T19:33:18Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((meta.isInFields()) && (!(meta.isRemoveSourceField()))) { start = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4767/buggy-version/plugins.kettle-json-plugin.src.org.pentaho.di.trans.steps.jsoninput.JsonInput.java", "BodyUseAPI": [], "Fixed commit": "bfcd71301621f33d2c0ffb80908607bf2e2b9485", "Url": "https://api.github.com/repos/ArtsiomYurhevich/pentaho-kettle", "Date": "2016-05-19T15:11:21Z"},
{"Line": "=>656", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(sourceInfoPlist.isAbsolute())) && (!(sourceInfoPlist.exists()))) { sourceInfoPlist = new java.io.File(project.getBasedir(), sourceInfoPlist.getPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4759/buggy-version/src.main.java.sh.tak.appbundler.CreateApplicationBundleMojo.java", "BodyUseAPI": ["java.io.File.getPath()"], "Fixed commit": "6c147aa4a2dd194b0d117172d88186bdcbbff14f", "Url": "https://api.github.com/repos/CodeGerm/appbundle-maven-plugin", "Date": "2017-07-04T01:24:41Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((next.getParentFile()) == null) || ((next.getParentFile().getParentFile()) == null)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/775/buggy-version/src.org.opensourcephysics.tools.ExtensionsManager.java", "BodyUseAPI": [], "Fixed commit": "49ba2ff9fd7e29189b72f56f1ec19ca1c5566cac", "Url": "https://api.github.com/repos/OpenSourcePhysics/osp", "Date": "2013-12-22T18:52:24Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dir == null) return extDirs;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/775/buggy-version/src.org.opensourcephysics.tools.ExtensionsManager.java", "BodyUseAPI": [], "Fixed commit": "49ba2ff9fd7e29189b72f56f1ec19ca1c5566cac", "Url": "https://api.github.com/repos/OpenSourcePhysics/osp", "Date": "2013-12-22T18:52:24Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7595/buggy-version/app.src.main.java.com.breadwallet.presenter.fragments.FragmentSend.java", "BodyUseAPI": [], "Fixed commit": "67dada7c64a8e9521e70c3e5d1bb8768c5c633d0", "Url": "https://api.github.com/repos/breadwallet/breadwallet-android", "Date": "2017-03-24T18:27:06Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7595/buggy-version/app.src.main.java.com.breadwallet.presenter.fragments.FragmentSend.java", "BodyUseAPI": [], "Fixed commit": "67dada7c64a8e9521e70c3e5d1bb8768c5c633d0", "Url": "https://api.github.com/repos/breadwallet/breadwallet-android", "Date": "2017-03-24T18:27:06Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hopNum >= (numHops)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1760/buggy-version/src.main.java.edu.cmu.ml.rtw.pra.features.VectorPathTypeFactory.java", "BodyUseAPI": [], "Fixed commit": "d7df6416215b155b344d2a29917784ae2318eec8", "Url": "https://api.github.com/repos/matt-gardner/pra", "Date": "2014-09-23T16:10:25Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((save.ProfilCurrent.getInstance()) == null) { player.setNosCharge(1); }else { if (save.ProfilCurrent.getInstance().getCar().get(save.ProfilCurrent.getInstance().getChoixCar()).isImprovenitro()) { player.setNosCharge(1); }else { player.setNosCharge(0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5991/buggy-version/src.game.AbstractGameScreenState.java", "BodyUseAPI": [], "Fixed commit": "c2af6236254bb86f0a16aae7abf0083f0630edca", "Url": "https://api.github.com/repos/geenux/StartRacing", "Date": "2012-05-31T07:50:04Z"},
{"Line": "=>656", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lexer.token) == (JSONToken.COLON)) { throw new com.alibaba.fastjson.JSONException(\"syntax error, unexpect token ':'\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/906/buggy-version/src.main.java.com.alibaba.fastjson.parser.JavaBeanDeserializer.java", "BodyUseAPI": [], "Fixed commit": "4ba04471af6b3cbf8bcedef66772a8f1a9347b22", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-08-28T04:37:56Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.vj.android.calci.MainActivity.entryText) == \"\") { utility.setDisplayText(com.vj.android.calci.MainActivity.entryText, 0); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1398/buggy-version/app.src.main.java.com.vj.android.calci.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "48d8e519a19d7815b7f35c0d698dc1e27bd54409", "Url": "https://api.github.com/repos/vijay40/JCalculator", "Date": "2015-08-13T15:57:35Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (log) { val = java.lang.Math.log(val); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8261/buggy-version/src.interface.VizBin.src.lcsb.vizbin.service.DataSetFactory.java", "BodyUseAPI": [], "Fixed commit": "e0304029e927a383e9934ea2401553b4abf5167c", "Url": "https://api.github.com/repos/claczny/VizBin", "Date": "2014-12-09T16:29:44Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((params.length) == 0) || ((params[0]) == null)) || (params[0].isEmpty())) { throw new uk.org.dataforce.dfbnc.commands.CommandNotFoundException(\"No valid command given.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2946/buggy-version/src.uk.org.dataforce.dfbnc.commands.CommandManager.java", "BodyUseAPI": [], "Fixed commit": "bc511bdf9eb496feeb4d5184ccb149dce09a9015", "Url": "https://api.github.com/repos/csmith/DFBnc", "Date": "2011-09-10T13:18:16Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (folder.getCapability().getStorageIndex().equals(this.sharedfolder.getCapability().getStorageIndex())) { this.sharedfolder = folder; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2375/buggy-version/application.CSVlib.src.main.java.no.ntnu.item.csv.filemanager.CSVFileManager.java", "BodyUseAPI": [], "Fixed commit": "946a1e3610dbbd32ec75e35ccf0e40b04a407dbe", "Url": "https://api.github.com/repos/zerqent/cloud-storage-vault", "Date": "2011-05-01T13:39:10Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (extendedCompoundInfo.has(\"InChIKey\")) out[0] = extendedCompoundInfo.get(\"InChIKey\").toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1157/buggy-version/src.main.java.com.silicolife.textmining.processes.resources.dictionary.loaders.chemspider.ChemSpiderAPI.java", "BodyUseAPI": ["org.json.JSONObject.get(java.lang.String)", "extendedCompoundInfo.get(\"InChIKey\").toString()"], "Fixed commit": "ffb936721fb3aa7cc803c4e108228a4885f5f7b1", "Url": "https://api.github.com/repos/biotextmining/processes", "Date": "2017-10-09T17:30:08Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (extendedCompoundInfo.has(\"SMILES\")) out[2] = extendedCompoundInfo.get(\"SMILES\").toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1157/buggy-version/src.main.java.com.silicolife.textmining.processes.resources.dictionary.loaders.chemspider.ChemSpiderAPI.java", "BodyUseAPI": ["org.json.JSONObject.get(java.lang.String)", "extendedCompoundInfo.get(\"SMILES\").toString()"], "Fixed commit": "ffb936721fb3aa7cc803c4e108228a4885f5f7b1", "Url": "https://api.github.com/repos/biotextmining/processes", "Date": "2017-10-09T17:30:08Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (extendedCompoundInfo.has(\"InChIKey\")) out[1] = extendedCompoundInfo.get(\"InChIKey\").toString().toUpperCase();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1157/buggy-version/src.main.java.com.silicolife.textmining.processes.resources.dictionary.loaders.chemspider.ChemSpiderAPI.java", "BodyUseAPI": ["org.json.JSONObject.get(java.lang.String)", "extendedCompoundInfo.get(\"InChIKey\").toString().toUpperCase()", "extendedCompoundInfo.get(\"InChIKey\").toString()"], "Fixed commit": "ffb936721fb3aa7cc803c4e108228a4885f5f7b1", "Url": "https://api.github.com/repos/biotextmining/processes", "Date": "2017-10-09T17:30:08Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (extendedCompoundInfo.has(\"CommonName\")) out[3] = extendedCompoundInfo.get(\"CommonName\").toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1157/buggy-version/src.main.java.com.silicolife.textmining.processes.resources.dictionary.loaders.chemspider.ChemSpiderAPI.java", "BodyUseAPI": ["org.json.JSONObject.get(java.lang.String)", "extendedCompoundInfo.get(\"CommonName\").toString()"], "Fixed commit": "ffb936721fb3aa7cc803c4e108228a4885f5f7b1", "Url": "https://api.github.com/repos/biotextmining/processes", "Date": "2017-10-09T17:30:08Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((newCell.getValue().getArgument().type) == (Argument.Type.MATRIX)) { value = value.substring(1, ((value.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6591/buggy-version/src.main.java.org.datavyu.undoableedits.CellTO.java", "BodyUseAPI": [], "Fixed commit": "b53b3011b13816db0a446fff7368e4dfdd90d837", "Url": "https://api.github.com/repos/databrary/datavyu", "Date": "2014-05-20T17:38:42Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.google.common.base.Strings.isNullOrEmpty(ustrd))) { rmtInf.getUstrd().add(ustrd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3529/buggy-version/axelor-bank-payment.src.main.java.com.axelor.apps.bankpayment.service.bankorder.file.transfer.BankOrderFile00100103Service.java", "BodyUseAPI": ["rmtInf.getUstrd().add(java.lang.String)"], "Fixed commit": "dcbacc054800f70f4e1127339b77f3b13cebdbde", "Url": "https://api.github.com/repos/axelor/axelor-business-suite", "Date": "2017-04-07T00:38:00Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.google.common.base.Strings.isNullOrEmpty(ustrd))) { rmtInf.getUstrd().add(ustrd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3529/buggy-version/axelor-bank-payment.src.main.java.com.axelor.apps.bankpayment.service.bankorder.file.transfer.BankOrderFile00100102Service.java", "BodyUseAPI": ["rmtInf.getUstrd().add(java.lang.String)"], "Fixed commit": "dcbacc054800f70f4e1127339b77f3b13cebdbde", "Url": "https://api.github.com/repos/axelor/axelor-business-suite", "Date": "2017-04-07T00:38:00Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.co.deanwild.materialshowcaseview.MaterialShowcaseView.getMeasuredWidth()", "uk.co.deanwild.materialshowcaseview.MaterialShowcaseView.getMeasuredHeight()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((width <= 0) || (height <= 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4545/buggy-version/library.src.main.java.uk.co.deanwild.materialshowcaseview.MaterialShowcaseView.java", "BodyUseAPI": [], "Fixed commit": "346a7eb954b108db6e1071e314a00d008e1c6941", "Url": "https://api.github.com/repos/iambalu/MaterialShowcaseView", "Date": "2016-03-16T10:39:41Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (worldid == 0) { return getServer().getWorlds().get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/205/buggy-version/com.narrowtux.DropChest.DropChest.java", "BodyUseAPI": [], "Fixed commit": "113fce079ba25f290f1dfd2c5b6a249b09bdaadf", "Url": "https://api.github.com/repos/narrowtux/DropChest", "Date": "2011-02-15T08:44:53Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getKeyCode()) <= (java.awt.event.KeyEvent.KEY_LAST)) { keys[e.getKeyCode()] = true; mostRecentKey = e.getKeyCode(); if ((e.getKeyCode()) == (com.rokru.experiment_x.input.Keyboard.debug_key)) com.rokru.experiment_x.ExperimentX.debugMode((!(com.rokru.experiment_x.ExperimentX.debug))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2820/buggy-version/src.com.rokru.experiment_x.input.Keyboard.java", "BodyUseAPI": ["java.awt.event.KeyEvent.getKeyCode()", "java.awt.event.KeyEvent.getKeyCode()", "java.awt.event.KeyEvent.getKeyCode()"], "Fixed commit": "65928f02e22ce5ba3ddceef4eea8e4f94968409f", "Url": "https://api.github.com/repos/coolawesomeme/Experiment-X", "Date": "2014-07-30T20:48:17Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x != null) x.cor = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/946/buggy-version/Arvore.java", "BodyUseAPI": [], "Fixed commit": "7f12c67308524cca662b2b9f0c1e2cef5ae4c22e", "Url": "https://api.github.com/repos/jpwbernardi/Arvore-Rubro-negra", "Date": "2015-04-27T01:52:01Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (v != null) v.pai = u.pai;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/946/buggy-version/Arvore.java", "BodyUseAPI": [], "Fixed commit": "7f12c67308524cca662b2b9f0c1e2cef5ae4c22e", "Url": "https://api.github.com/repos/jpwbernardi/Arvore-Rubro-negra", "Date": "2015-04-27T01:52:01Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.geecko.QuickLyric.utils.DatabaseHelper.database) == null) || (!(com.geecko.QuickLyric.utils.DatabaseHelper.database.isOpen()))) com.geecko.QuickLyric.utils.DatabaseHelper.database = getReadableDatabase();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/802/buggy-version/QuickLyric.src.main.java.com.geecko.QuickLyric.utils.DatabaseHelper.java", "BodyUseAPI": [], "Fixed commit": "20bc8214f140fb5bb17b8108db424eb3361444f5", "Url": "https://api.github.com/repos/QuickLyric/QuickLyric", "Date": "2016-12-22T02:11:35Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((event.getLocation()) == null) || (event.getLocation().isEmpty())) addressRow.setVisibility(View.GONE); else addressRow.setVisibility(View.VISIBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8530/buggy-version/app.src.main.java.uiuc.mbr.ui.AddEventDialog.java", "BodyUseAPI": [], "Fixed commit": "7ef1cd4120d9c95d6f451865998026cc715a29ad", "Url": "https://api.github.com/repos/B1indfire/Mobile-Bus-Routing", "Date": "2016-04-05T20:56:07Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (save) uiuc.mbr.events.AddressBook.update(data, context);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8530/buggy-version/app.src.main.java.uiuc.mbr.ui.AddEventDialog.java", "BodyUseAPI": [], "Fixed commit": "7ef1cd4120d9c95d6f451865998026cc715a29ad", "Url": "https://api.github.com/repos/B1indfire/Mobile-Bus-Routing", "Date": "2016-04-05T20:56:07Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (save) data.address = newAddress;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8530/buggy-version/app.src.main.java.uiuc.mbr.ui.AddEventDialog.java", "BodyUseAPI": [], "Fixed commit": "7ef1cd4120d9c95d6f451865998026cc715a29ad", "Url": "https://api.github.com/repos/B1indfire/Mobile-Bus-Routing", "Date": "2016-04-05T20:56:07Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1870/buggy-version/src.org.aiwolf.client.lib.Content.java", "BodyUseAPI": [], "Fixed commit": "0380d2bd9662c8238e06651a0e25943de80cedd4", "Url": "https://api.github.com/repos/aiwolf/AIWolfCommon", "Date": "2017-08-09T05:36:36Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hbase.client.Result.getColumnLatestCell(byte[],byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (c == null) { return null; }else { return new java.lang.String(org.apache.hadoop.hbase.CellUtil.cloneValue(c)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1551/buggy-version/src.com.yyy.model.WordID.java", "BodyUseAPI": ["org.apache.hadoop.hbase.CellUtil.cloneValue(org.apache.hadoop.hbase.Cell)"], "Fixed commit": "f98c3d92e288e8db64e73b0a050bf52b7c2d1feb", "Url": "https://api.github.com/repos/waiPATHoyu/533WebDemo", "Date": "2017-03-31T20:53:31Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["simplegraph.SimpleGraph.getNeighborhood(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (nbr != null) { for (java.lang.Integer u : nbr) { localCopy.graph.deleteVertex(u); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3384/buggy-version/SimpleGraph.src.simplegraph.IndependentSet.java", "BodyUseAPI": [], "Fixed commit": "3cdd0a437bfe28accd1a45d40509257c1eef4800", "Url": "https://api.github.com/repos/somnath1077/Graph", "Date": "2014-10-19T10:34:04Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hue) == 1.0) h = 0.999998F;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8167/buggy-version/src.nodebox.client.ColorDialog.java", "BodyUseAPI": [], "Fixed commit": "7a471fe9db7294b51872cea787f6fe57c1e9fd23", "Url": "https://api.github.com/repos/nodebox/nodebox", "Date": "2011-03-16T12:46:51Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.h) == 1.0) h = 0.999998;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8167/buggy-version/src.nodebox.graphics.Color.java", "BodyUseAPI": [], "Fixed commit": "7a471fe9db7294b51872cea787f6fe57c1e9fd23", "Url": "https://api.github.com/repos/nodebox/nodebox", "Date": "2011-03-16T12:46:51Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((nodeConfig.getName()) != null) && ((nodeConfig.getValue()) != null)) { map.put(nodeConfig.getName(), nodeConfig.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3659/buggy-version/src.main.java.org.pinae.nala.xb.unmarshal.creator.MapCreator.java", "BodyUseAPI": ["org.pinae.nala.xb.node.NodeConfig.getName()", "org.pinae.nala.xb.node.NodeConfig.getValue()", "java.util.Map.put(nodeConfig.getName(),nodeConfig.getValue())"], "Fixed commit": "02494c37874af593a306078185b13115310de26c", "Url": "https://api.github.com/repos/PinaeOS/nala", "Date": "2017-12-18T16:08:30Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((request.getUserSecret()) == null) && ((request.getPublisherSecret()) == null)) throw new java.lang.IllegalArgumentException(\"User/Publisher secret is required.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1281/buggy-version/src.com.pratilipi.api.OAuthApi.java", "BodyUseAPI": [], "Fixed commit": "050b70bdbc6ca7f649a8ff1661ddccb771dbe6e5", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2014-12-12T10:08:41Z"},
{"Line": "=>470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["httpClient.newCall(profileRequest).execute()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((profileResponse.code()) != 200) { throw new javax.security.sasl.AuthenticationException(\"Profile exception\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5273/buggy-version/service.src.java.org.apache.hive.service.cli.thrift.ThriftCLIService.java", "BodyUseAPI": [], "Fixed commit": "0ff5a5b8f8165c280315ce6a678484b706a77ecb", "Url": "https://api.github.com/repos/hopshadoop/hive", "Date": "2017-06-12T12:42:53Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["webmon.utils.DatastoreUtils.getUser(java.lang.String)", "user.getMonitoredWebsites().indexOf(website.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((user.getMonitorWebsiteStart().get(websiteIndex)) instanceof java.lang.Integer) { websiteIndexInUser = user.getMonitorWebsiteStart().get(websiteIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/697/buggy-version/src.main.java.webmon.core.Websites.java", "BodyUseAPI": ["webmon.models.User.getMonitorWebsiteStart()", "user.getMonitorWebsiteStart().get(int)"], "Fixed commit": "69daa8e2dde8fbf12d3dfbb9b72268ad714e9d71", "Url": "https://api.github.com/repos/darshanmaiya/WebMon", "Date": "2016-03-14T03:48:44Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isUrlEncoded) { urlConn.setRequestProperty(\"Content-Type\", (\"application/x-www-form-urlencoded; charset=\" + encoding)); }else { urlConn.setRequestProperty(\"Content-Type\", (\"text/plain; charset=\" + encoding)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4185/buggy-version/app.src.main.java.com.zsx.util.Lib_Util_HttpURLRequest.java", "BodyUseAPI": [], "Fixed commit": "421d0aa93259836c9bfe009edc905547b681081d", "Url": "https://api.github.com/repos/z1986s8x11/androidLib", "Date": "2015-11-09T03:10:23Z"},
{"Line": "=>671", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.exbin.deltahex.swing.CodeArea.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(document.getFileSource().getFile().equals(file))) { org.exbin.deltahex.delta.FileDataSource fileSource = segmentsRepository.openFileSource(file); document.setFileSource(fileSource); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5439/buggy-version/modules.exbin-framework-deltahex.src.main.java.org.exbin.framework.deltahex.panel.HexPanel.java", "BodyUseAPI": ["org.exbin.deltahex.delta.SegmentsRepository.openFileSource(java.io.File)", "org.exbin.deltahex.delta.DeltaDocument.setFileSource(org.exbin.deltahex.delta.FileDataSource)"], "Fixed commit": "9f3eae6eebd7d5407e4b7bea365545e21e17622d", "Url": "https://api.github.com/repos/exbin/exbin-framework-java", "Date": "2017-01-03T00:30:37Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (cmd == null) { com.intellectualcrafters.plot.util.MainUtil.sendMessage(plr, C.DID_YOU_MEAN, \"/plot help\"); }else { com.intellectualcrafters.plot.util.MainUtil.sendMessage(plr, C.DID_YOU_MEAN, cmd.getUsage().replaceAll(\"{label}\", label)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2649/buggy-version/src.main.java.com.intellectualcrafters.plot.commands.MainCommand.java", "BodyUseAPI": ["com.plotsquared.general.commands.Command<com.intellectualcrafters.plot.object.PlotPlayer>.getUsage()", "com.intellectualcrafters.plot.util.MainUtil.sendMessage(com.intellectualcrafters.plot.object.PlotPlayer,C.DID_YOU_MEAN,cmd.getUsage().replaceAll(\"{label}\", label))", "cmd.getUsage().replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "4939f997dc29d7cd74c8f3ebe75fe08589809cd1", "Url": "https://api.github.com/repos/IntellectualSites/PlotSquared", "Date": "2015-07-27T18:25:21Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player == (TicTacToeGame.HUMAN_PLAYER)) { mHumanMediaPlayer.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2497/buggy-version/TicTacToe.src.main.java.edu.harding.tictactoe.AndroidTicTacToeActivity.java", "BodyUseAPI": [], "Fixed commit": "6e1d2fab982886ef4e5becfe26f04098f9c90541", "Url": "https://api.github.com/repos/savelascod/AndroidTicTacToe-Tutorial2", "Date": "2015-09-29T20:35:55Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connection) != null) connection.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1781/buggy-version/src.main.java.lab1.MysqlCarDAO.java", "BodyUseAPI": [], "Fixed commit": "396d12ec2f31f4ead3f27f8b547a9af44a9a53d0", "Url": "https://api.github.com/repos/pechenoha/javaee-lab_1-2", "Date": "2015-04-26T12:04:37Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pStatement) != null) pStatement.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1781/buggy-version/src.main.java.lab1.MysqlCarDAO.java", "BodyUseAPI": [], "Fixed commit": "396d12ec2f31f4ead3f27f8b547a9af44a9a53d0", "Url": "https://api.github.com/repos/pechenoha/javaee-lab_1-2", "Date": "2015-04-26T12:04:37Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (_index > 1) { total += (\"+\" + (com.sleroux.bank.evo.document.BudgetDocument.columnName((_index - 1)))) + (rowTotal + 4); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1045/buggy-version/src.main.java.com.sleroux.bank.evo.document.BudgetDocument.java", "BodyUseAPI": ["com.sleroux.bank.evo.document.BudgetDocument.columnName(int)"], "Fixed commit": "93b3a2cc3019180145b3a6b95817b9b3cd45cfe6", "Url": "https://api.github.com/repos/sylvainleroux/bank", "Date": "2016-07-28T19:07:09Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(player.worldObj.isRemote)) { if ((crops) == null) rebuildCropSet(); int totalCrops = getTotalCrops(HFApi.calendar.getDate(player.worldObj), player); if (totalCrops >= (required)) { player.addStat(achievement); increaseStage(player); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5828/buggy-version/src.main.java.joshie.harvest.quests.town.seeds.QuestShipping.java", "BodyUseAPI": ["joshie.harvest.quests.town.seeds.QuestShipping.increaseStage(net.minecraft.entity.player.EntityPlayer)", "joshie.harvest.quests.town.seeds.QuestShipping.getTotalCrops(HFApi.calendar.getDate(player.worldObj),net.minecraft.entity.player.EntityPlayer)", "HFApi.calendar.getDate(player.worldObj)", "net.minecraft.entity.player.EntityPlayer.addStat(net.minecraft.stats.Achievement)"], "Fixed commit": "c9e342b8454235415fa56bcb6dc548136c54f792", "Url": "https://api.github.com/repos/PenguinSquad/Harvest-Festival", "Date": "2017-03-15T12:38:08Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (g == null) { g = new com.yidumen.dao.entity.Goods(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6364/buggy-version/web.src.main.java.com.yidumen.web.view.controller.GoodsController.java", "BodyUseAPI": [], "Fixed commit": "74dbfb0742d218c78608d38bdbc813c9f54fa717", "Url": "https://api.github.com/repos/yidumen/site", "Date": "2014-09-25T07:45:19Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((tx >= 1) && (tx <= (width))) || ((ty >= 1) && (ty <= (height)))) { board[(ty - 1)][(tx - 1)] = counter; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1185/buggy-version/src.tp.pr2.logic.Board.java", "BodyUseAPI": [], "Fixed commit": "3495daf3c349978fffeed6343b5107b044bc2982", "Url": "https://api.github.com/repos/ferreiro/Complica4", "Date": "2015-01-07T19:05:00Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.jboss.tools.central.internal.dnd.LinuxURLTransfer.isLinuxGTK()) { transfers = new org.eclipse.swt.dnd.Transfer[]{ org.eclipse.swt.dnd.URLTransfer.getInstance(), org.jboss.tools.central.internal.dnd.LinuxURLTransfer.getInstance() }; }else { transfers = new org.eclipse.swt.dnd.Transfer[]{ org.eclipse.swt.dnd.URLTransfer.getInstance() }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5219/buggy-version/central.plugins.org.jboss.tools.central.src.org.jboss.tools.central.internal.dnd.JBossCentralDropTarget.java", "BodyUseAPI": [], "Fixed commit": "cc0ae8dd15cb61f659d94edec72b582e2cf4ec1d", "Url": "https://api.github.com/repos/snjeza/jbosstools-central", "Date": "2013-11-06T10:26:04Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((speciality.getImage()) != null) { com.df.blobstore.image.ImageAttributes imageAttributes = imageService.getImageAttributes(new com.df.blobstore.image.ImageKey(speciality.getImage())); if (imageAttributes != null) { speciality.getImageSet().addImage(speciality.getImage(), imageAttributes); } specialityDao.add(speciality, region); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6847/buggy-version/server.speciality.src.main.java.com.df.spec.locality.service.impl.SpecialityServiceImpl.java", "BodyUseAPI": ["com.df.spec.locality.model.Speciality.getImage()", "com.df.spec.locality.dao.SpecialityDao.add(com.df.spec.locality.model.Speciality,com.df.spec.locality.model.Region)", "com.df.blobstore.image.ImageService.getImageAttributes(com.df.blobstore.image.ImageKey)", "com.df.spec.locality.model.Speciality.getImageSet()", "com.df.spec.locality.model.Speciality.getImage()", "speciality.getImageSet().addImage(speciality.getImage(),com.df.blobstore.image.ImageAttributes)"], "Fixed commit": "389d41254c57ff68abc6e927c198350e0079d98b", "Url": "https://api.github.com/repos/zhilong0/cloudress", "Date": "2014-09-28T09:53:03Z"},
{"Line": "=>827", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value.equals(\"\\\"strictMode\\\"\")) { final java.lang.String strictMode = jsonReader.readString(OJSONReader.NEXT_IN_OBJECT); cls.setStrictMode(java.lang.Boolean.parseBoolean(strictMode)); }else if (value.equals(\"\\\"short-name\\\"\")) { final java.lang.String shortName = jsonReader.readString(OJSONReader.NEXT_IN_OBJECT); cls.setShortName(shortName); }else if (value.equals(\"\\\"super-class\\\"\")) { final java.lang.String classSuper = jsonReader.readString(OJSONReader.NEXT_IN_OBJECT); superClasses.put(cls, classSuper); }else if (value.equals(\"\\\"properties\\\"\")) { jsonReader.readNext(OJSONReader.BEGIN_COLLECTION); while ((jsonReader.lastChar()) != ']') { importProperty(cls); if ((jsonReader.lastChar()) == '}') jsonReader.readNext(OJSONReader.NEXT_IN_ARRAY); } jsonReader.readNext(OJSONReader.END_OBJECT); }else if (value.equals(\"\\\"cluster-selection\\\"\")) { cls.setClusterSelection(jsonReader.readString(OJSONReader.NEXT_IN_OBJECT)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3821/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.tool.ODatabaseImport.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "d352ffd4f50b64d23ec961f4ed6fde7ab0f67556", "Url": "https://api.github.com/repos/e-d/orientdb", "Date": "2014-12-07T00:08:52Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((openerView) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2917/buggy-version/app.src.main.java.kylekewley.garagedooropener.GarageOpenerClient.java", "BodyUseAPI": [], "Fixed commit": "76cc48b04febad1adc2ea85e3d78548ebff3c2ca", "Url": "https://api.github.com/repos/kylekewley/GarageDoorOpener", "Date": "2014-07-17T20:23:19Z"},
{"Line": "=>1474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alliander.osgp.dto.valueobjects.Certification.getCertificateUrl()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (adjustedUrl.startsWith(\"/\")) { adjustedUrl = adjustedUrl.substring(1, adjustedUrl.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8542/buggy-version/osgp-protocol-adapter-iec61850.src.main.java.com.alliander.osgp.adapter.protocol.iec61850.infra.networking.Iec61850DeviceService.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "7f8374291b36fda5665f90c9c1553e298750cc05", "Url": "https://api.github.com/repos/OSGP/Protocol-Adapter-IEC61850", "Date": "2016-04-21T07:28:51Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getSupportFragmentManager().findFragmentByTag(allanchen.com.ucla_events.HomeActivity.TAG_EVENT_LIST_FRAGMENT)) == null) { getSupportFragmentManager().beginTransaction().add(R.id.home_frame_layout, allanchen.com.ucla_events.EventListFragment.newInstance(EventListFragment.PARAM_VIEW_RECENTS, null), allanchen.com.ucla_events.HomeActivity.TAG_EVENT_LIST_FRAGMENT).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8963/buggy-version/app.src.main.java.allanchen.com.ucla_events.HomeActivity.java", "BodyUseAPI": ["getSupportFragmentManager().beginTransaction().add(R.id.home_frame_layout,allanchen.com.ucla_events.EventListFragment.newInstance(EventListFragment.PARAM_VIEW_RECENTS, null),java.lang.String)", "getSupportFragmentManager().beginTransaction().add(R.id.home_frame_layout, allanchen.com.ucla_events.EventListFragment.newInstance(EventListFragment.PARAM_VIEW_RECENTS, null), allanchen.com.ucla_events.HomeActivity.TAG_EVENT_LIST_FRAGMENT).commit()"], "Fixed commit": "360814d2a7dc62b080e6aaa2b385791215ce5fa8", "Url": "https://api.github.com/repos/allan-chen/bruin-events", "Date": "2016-08-25T06:11:10Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((curNodeConnector) != null) && (\"VALIDATION_REJECT\".equals(curNodeConnector.getName()))) { if (((node.getProcess()) != null) && (!(ComponentCategory.CATEGORY_4_DI.getName().equals(node.getProcess().getComponentsType())))) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3621/buggy-version/main.plugins.org.talend.designer.core.src.main.java.org.talend.designer.core.ui.action.ConnectionCreateAction.java", "BodyUseAPI": [], "Fixed commit": "5604e883cc2ae698d1b2f6184f4b81478cfbd970", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2017-04-17T06:28:19Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ySize <= 1) || (xSize <= 1)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3482/buggy-version/3DPlotter.src.munk.graph.plot.PlotUtil.java", "BodyUseAPI": [], "Fixed commit": "910cda836cd2133d56ff31cca6c87c070d2b9d95", "Url": "https://api.github.com/repos/Munken/3DPlotter", "Date": "2012-04-20T11:05:33Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((column) > newColumn) { (index)--; column = newColumn; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/336/buggy-version/commonmark.src.main.java.org.commonmark.internal.DocumentParser.java", "BodyUseAPI": [], "Fixed commit": "fdcc279b0f278d836e096ea6fb48e4e6ff898f65", "Url": "https://api.github.com/repos/atlassian/commonmark-java", "Date": "2016-02-18T15:29:57Z"},
{"Line": "=>543", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parameterValue.replace(\" \", \"+\").equalsIgnoreCase(value)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5675/buggy-version/hdiv-core.src.main.java.org.hdiv.util.HDIVUtil.java", "BodyUseAPI": [], "Fixed commit": "0f1ae2d1422cf8be9c722f5f8d811e1a92eee60c", "Url": "https://api.github.com/repos/hdiv/hdiv", "Date": "2017-11-13T16:37:59Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((weapon.owner) == null) { res.putInt(\"pawnId\", weapon.lateId); }else { res.putInt(\"pawnId\", weapon.owner.id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1654/buggy-version/src.nstuff.juggerfall.extension.view.ViewManager.java", "BodyUseAPI": ["com.smartfoxserver.v2.entities.data.ISFSObject.putInt(java.lang.String,weapon.lateId)", "com.smartfoxserver.v2.entities.data.ISFSObject.putInt(java.lang.String,weapon.owner.id)"], "Fixed commit": "19ca73c53e072b12e3d692704aeec6782c1184e8", "Url": "https://api.github.com/repos/JazzyJohn/fox-server-side", "Date": "2014-09-06T17:57:18Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (portraitView) { sharingUrl = ((android.widget.EditText) (findViewById(R.id.shareLink))); sharingUrl.setText(setUpSharingLink()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2468/buggy-version/app.src.main.java.nz.co.hawkefilms.womenofinfluence.ViewVideo.java", "BodyUseAPI": [], "Fixed commit": "e3acb0a92d178d15e2f0f926d404efabcc58297a", "Url": "https://api.github.com/repos/carl-halliburton/Women-of-Influence-App", "Date": "2016-11-09T01:15:39Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (alias == null) { alias = identifier; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8315/buggy-version/code.symbolTable.src.swp_compiler_ss13.fuc.symbolTable.SymbolTableImpl.java", "BodyUseAPI": [], "Fixed commit": "81bb49b2ce79d429116531395cfbeea9a7e8285b", "Url": "https://api.github.com/repos/swp-uebersetzerbau-ss13/fuc", "Date": "2013-05-21T10:44:44Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mage.game.Game.getPermanent(source.getSourceId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (sourcePermanent != null) { int zcc = game.getState().getZoneChangeCounter(sourcePermanent.getId()); if ((zcc == (source.getSourceObjectZoneChangeCounter())) || (zcc == ((source.getSourceObjectZoneChangeCounter()) + 1))) { mage.game.permanent.Permanent permanent = game.getPermanent(getTargetPointer().getFirst(game, source)); if (permanent != null) { return permanent.addAttachment(source.getSourceId(), game); }else { mage.players.Player player = game.getPlayer(getTargetPointer().getFirst(game, source)); if (player != null) { return player.addAttachment(source.getSourceId(), game); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8227/buggy-version/Mage.src.mage.abilities.effects.common.AttachEffect.java", "BodyUseAPI": ["game.getState().getZoneChangeCounter(sourcePermanent.getId())", "mage.game.permanent.Permanent.getId()"], "Fixed commit": "159e36eabe4b3c357ab33e0751004fdb26c733e2", "Url": "https://api.github.com/repos/Simown/mage", "Date": "2015-04-25T18:49:05Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.talend.commons.CommonsPlugin.isHeadless()) { org.talend.commons.exception.CommonExceptionHandler.process(ex); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8807/buggy-version/main.plugins.org.talend.common.ui.runtime.src.main.java.org.talend.commons.ui.runtime.exception.MessageBoxExceptionHandler.java", "BodyUseAPI": [], "Fixed commit": "adf8cf030b9bc7b0414184325584693c6af360a5", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2015-02-02T10:42:19Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((App.GAME.CURRENT_PLAYER.getScore()) == 0) { App.GAME.CURRENT_PLAYER.setScore(GameScreenConstants.DEFAULT_START_POINTS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7480/buggy-version/app.src.main.java.net.quachk.quachk.GameScreenActivity.java", "BodyUseAPI": [], "Fixed commit": "50f0a05ffeb43eef0f592879b6073668dbb757aa", "Url": "https://api.github.com/repos/wizhang/Quachk", "Date": "2017-11-21T02:37:49Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(cancel(true))) { if ((listener) != null) { listener.onCancelled(this); } listener = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6093/buggy-version/src.com.kkbox.toolkit.image.KKImageRequest.java", "BodyUseAPI": [], "Fixed commit": "d278df6455f8d3cc79b4e2cde54011dcf3e873c1", "Url": "https://api.github.com/repos/KKBOX/android_kktoolkit", "Date": "2014-10-31T09:03:49Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getServer().getOnlinePlayers().size()) > (getSpawnZahl())) { getServer().broadcastMessage(((getPrefix()) + \"Es sind zu viele Spieler online im vergleich zu dem Spawnpoints!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8268/buggy-version/src.de.lordvader.spawn.main.java", "BodyUseAPI": [], "Fixed commit": "8eaa6c3b4db77a64825775b252837b18d7b0702f", "Url": "https://api.github.com/repos/lordvaderde/SpawnPlugin", "Date": "2016-02-13T21:33:37Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sideLenght) < 0.0F) { if ((_cameraPosition.x) < ((center.x) - (sideLenght))) _cameraPosition.x = (center.x) - (sideLenght); if ((_cameraPosition.x) > ((center.x) + (sideLenght))) _cameraPosition.x = (center.x) + (sideLenght); if ((_cameraPosition.y) < ((center.y) - (sideLenght))) _cameraPosition.y = (center.y) - (sideLenght); if ((_cameraPosition.y) > ((center.y) + (sideLenght))) _cameraPosition.y = (center.y) + (sideLenght); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1605/buggy-version/Pebble.src.com.mangecailloux.pebble.camera.ortho.behavior.limiter.OrthoMoveSquareLimiter.java", "BodyUseAPI": [], "Fixed commit": "9dc9e7d36a371da0de0ffb74b372e658fe33efcf", "Url": "https://api.github.com/repos/cvayer/Pebble", "Date": "2013-02-21T13:08:55Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (contactList.isEmpty()) { java.lang.System.out.println((\"*** Contact List is empty, nothing to search for ***\" + \"\\n\")); }else { java.util.Scanner console = new java.util.Scanner(java.lang.System.in); java.lang.System.out.println(\"Please write a Contact's last name to search for: \"); java.lang.String lastName = console.nextLine(); for (Person person : contactList) { if (lastName.equals(person.getLastName())) { java.lang.System.out.println(person); helper++; } } if (helper == 0) { java.lang.System.out.println(\"***no contacts found***\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/9034/buggy-version/src.ContactList.java", "BodyUseAPI": [], "Fixed commit": "9b945df2bc1122201967cb2cb9c8e72e18432a90", "Url": "https://api.github.com/repos/minamelosh/QualitySoft", "Date": "2016-12-13T08:40:18Z"},
{"Line": "=>489", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (e != null) { st = xmlFactory.createPropertyType(); st.setId(getIDWithStandort(e.getId())); st.setName(e.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5279/buggy-version/src.main.java.de.hscoburg.evelin.secat.model.FragebogenModel.java", "BodyUseAPI": ["de.hscoburg.evelin.secat.dao.entity.Eigenschaft.getName()", "de.hscoburg.evelin.secat.exchange.dto.PropertyType.setId(java.lang.String)", "de.hscoburg.evelin.secat.model.FragebogenModel.getIDWithStandort(e.getId())", "de.hscoburg.evelin.secat.exchange.dto.PropertyType.setName(e.getName())", "de.hscoburg.evelin.secat.dao.entity.Eigenschaft.getId()"], "Fixed commit": "9c94e74996b3449f950182ce54902eb4a0f6d71d", "Url": "https://api.github.com/repos/hauntedhill/SE-CAT", "Date": "2014-08-04T14:06:27Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name.equals(com.brandongogetap.scoper.ScoperContext.SERVICE_NAME)) { return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4079/buggy-version/scoper.src.main.java.com.brandongogetap.scoper.ScoperContext.java", "BodyUseAPI": [], "Fixed commit": "f565ea69edda5c5b2ff875784b7de1d18db387d9", "Url": "https://api.github.com/repos/bgogetap/Scoper", "Date": "2016-07-10T03:35:44Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!var5) atr.bulletsleft -= atr.ammoPerShot;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/584/buggy-version/common.BL2.common.item.ItemGun.java", "BodyUseAPI": [], "Fixed commit": "77ffd42a5643d8f54141170a51bd4db4166b573e", "Url": "https://api.github.com/repos/lombax5832/BL2", "Date": "2013-04-13T03:29:39Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((net.minecraft.entity.player.EntityPlayer) (par3Entity)).capabilities.isCreativeMode) atr.bulletsleft = atr.clipsize;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/584/buggy-version/common.BL2.common.item.ItemGun.java", "BodyUseAPI": [], "Fixed commit": "77ffd42a5643d8f54141170a51bd4db4166b573e", "Url": "https://api.github.com/repos/lombax5832/BL2", "Date": "2013-04-13T03:29:39Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player.capabilities.isCreativeMode) { return \"Unlimited\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/584/buggy-version/common.BL2.client.render.ShieldGUIHandler.java", "BodyUseAPI": [], "Fixed commit": "77ffd42a5643d8f54141170a51bd4db4166b573e", "Url": "https://api.github.com/repos/lombax5832/BL2", "Date": "2013-04-13T03:29:39Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((response.data.id) <= 0) { response.data.id = generatedKeys.getInt(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/478/buggy-version/src.city.guide.controllers.PlaceController.java", "BodyUseAPI": [], "Fixed commit": "e8e5a18a94ca825d73795851cf048c3b9f700318", "Url": "https://api.github.com/repos/uclan-projects/city-guide", "Date": "2017-12-07T21:40:33Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tupleList.length()) <= 0) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4516/buggy-version/p2.Host.java", "BodyUseAPI": [], "Fixed commit": "32513e6febe0a3d90efe76dbcce43718fe115ead", "Url": "https://api.github.com/repos/Manny1995/Linda-Distributed-System-Intro-to-Cloud-Computing-", "Date": "2017-05-01T06:14:41Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((Monopoly.playersMoney[player]) <= 0) { Monopoly.hasMoney[player] = false; java.lang.System.out.printf(\"%s has bankrupt!\\n\\n\", Monopoly.playerNames[player]); int save = Monopoly.SaveMe(player); if ((save + (Monopoly.playersMoney[player])) > 0) { Monopoly.hasMoney[player] = true; Monopoly.playersMoney[player] += save; java.lang.System.out.printf(\"%s's properties have been sold to the bank. He recieves half their price!\", Monopoly.playerNames[player]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5913/buggy-version/Project_N12_Monopoly.src.Monopoly.java", "BodyUseAPI": ["java.io.PrintStream.printf(java.lang.String,java.lang.String)", "java.io.PrintStream.printf(java.lang.String,java.lang.String)", "Monopoly.SaveMe(int)"], "Fixed commit": "cab0f9f66b22295087faca1ec62fd4facd26e3c6", "Url": "https://api.github.com/repos/bkzb1zz/Monopoly", "Date": "2017-01-28T12:23:55Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (leftoverIcons == 0) { return columnCount; }else { if ((grid.get(\"rows\")) > row) { return columnCount; }else { return leftoverIcons; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7510/buggy-version/src.main.java.co.bugg.quickplay.gui.MainGui.java", "BodyUseAPI": [], "Fixed commit": "41f4a08093277927626b6d16deaf85e3ac31afd8", "Url": "https://api.github.com/repos/bugfroggy/QuickPlay", "Date": "2017-09-22T01:49:32Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((v <= 0.001) || (v >= 0.001)) { if ((v > (-10.0)) && (v < 10.0)) { return holder.m_normalFormat1.format(v); } if ((v > (-100.0)) && (v < 100.0)) { return holder.m_normalFormat2.format(v); } if ((v > (-1000.0)) && (v < 1000.0)) { return holder.m_normalFormat3.format(v); } if ((v > (-9999.5)) && (v < 9999.5)) { return java.lang.String.valueOf(java.lang.Math.round(v)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8335/buggy-version/src.main.java.org.optimizationBenchmarking.utils.text.numbers.TruncatedNumberAppender.java", "BodyUseAPI": ["java.text.DecimalFormat.format(double)", "java.lang.Math.round(double)", "java.text.DecimalFormat.format(double)", "java.lang.String.valueOf(long)", "java.text.DecimalFormat.format(double)"], "Fixed commit": "c2911ad94485f30757c7bc236b7a44ac33f545ac", "Url": "https://api.github.com/repos/optimizationBenchmarking/utils-base", "Date": "2016-06-19T06:20:09Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((s < 0) || (p < 0)) || (o < 0)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6144/buggy-version/hdt-jena.src.main.java.org.rdfhdt.hdtjena.HDTStatistics.java", "BodyUseAPI": [], "Fixed commit": "5ee8cc18318c82fcbe1aac2856d7032cb2675eab", "Url": "https://api.github.com/repos/rdfhdt/hdt-java", "Date": "2014-04-25T12:23:13Z"},
{"Line": "=>1379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sequenceConstraint.getSubjectURI().equals(sequenceConstraint.getObjectURI())) { throw new org.sbolstandard.core2.SBOLValidationException(\"sbol-11406\", sequenceConstraint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8220/buggy-version/core2.src.main.java.org.sbolstandard.core2.ComponentDefinition.java", "BodyUseAPI": [], "Fixed commit": "1e7d9d5638ff117d704353418b42d32279070f6d", "Url": "https://api.github.com/repos/SynBioDex/libSBOLj", "Date": "2016-03-10T23:09:59Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((\"\".equals(dto.getValue())) && ((dto.getOldValue()) == null)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6333/buggy-version/GAE.src.org.waterforpeople.mapping.app.gwt.server.surveyinstance.SurveyInstanceServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "5403966003208ba46291ecd7aebda6cc573f2604", "Url": "https://api.github.com/repos/akvo/akvo-flow", "Date": "2013-09-30T11:12:24Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.silpa.sdk.common.LanguageDetect.detectLanguage(text.split(\" \")[0]).get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (language == null) { return java.util.Collections.EMPTY_LIST; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1382/buggy-version/src.main.java.org.silpa.syllabifier.Syllabifier.java", "BodyUseAPI": [], "Fixed commit": "c54b4f14133c3b22c27026b7285129e67f1c6d2c", "Url": "https://api.github.com/repos/libindic/sdk-syllabifier", "Date": "2014-08-17T12:32:26Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (saved) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1910/buggy-version/src.jogl.classes.com.jogamp.opengl.util.GLPixelStorageModes.java", "BodyUseAPI": [], "Fixed commit": "b29f221c903aefdf99af8e8a8544b2223036454f", "Url": "https://api.github.com/repos/sgothel/jogl", "Date": "2013-03-09T02:41:16Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (activity != null) { android.content.Intent intent = new android.content.Intent(activity, fr.kayrnt.tindplayer.activity.FacebookLoginActivity.class); intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP); intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK); activity.startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7082/buggy-version/app.src.main.java.fr.kayrnt.tindplayer.utils.SessionManager.java", "BodyUseAPI": ["android.app.Activity.startActivity(android.content.Intent)"], "Fixed commit": "c015fea33de0ad7a4f3656da5a0d07d5d2f04b34", "Url": "https://api.github.com/repos/Kayrnt/TindPlayer", "Date": "2016-09-03T11:54:02Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["notificationMgtConfigBuilder.getModuleConfigurations(moduleName).getSubscriptions()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (subscriptionList != null) { for (org.wso2.carbon.identity.event.bean.Subscription subscription : subscriptionList) { if (subscription.getSubscriptionName().equals(eventName)) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1199/buggy-version/components.identity-event.org.wso2.carbon.identity.event.src.main.java.org.wso2.carbon.identity.event.handler.AbstractEventHandler.java", "BodyUseAPI": [], "Fixed commit": "cf81ce30548bfd0a754d53f9e5f993f515a09915", "Url": "https://api.github.com/repos/wso2/carbon-identity-framework", "Date": "2016-07-08T19:08:22Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mlString.isEmpty()) { return component; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6583/buggy-version/bennu-renderers.src.main.java.pt.ist.fenixWebFramework.rendererExtensions.MultiLanguageStringRenderer.java", "BodyUseAPI": [], "Fixed commit": "9137d9807352609ae3b9838e229598f72ff658d2", "Url": "https://api.github.com/repos/Luis-Cruz/bennu-renderers", "Date": "2014-06-12T21:38:03Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDefaultDrawable) { nich.work.aequorea.common.utils.ToastUtils.showShortToast(getString(R.string.photo_not_ready)); }else { java.lang.String url = imageUrls.get(position); nich.work.aequorea.common.utils.IntentUtils.openInNewPhotoActivity(this, url); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1839/buggy-version/app.src.main.java.nich.work.aequorea.ui.activities.ArticleActivity.java", "BodyUseAPI": [], "Fixed commit": "eb201368246789f7e61e180797eda200aefb6477", "Url": "https://api.github.com/repos/nichbar/Aequorea", "Date": "2017-11-22T13:41:40Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getDrawable()) instanceof com.zzhoujay.richtext.drawable.DrawableWrapper) { drawable = ((com.zzhoujay.richtext.drawable.DrawableWrapper) (getDrawable())).getDrawable(); isDefaultDrawable = drawable instanceof android.graphics.drawable.ColorDrawable; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1839/buggy-version/richtext.src.main.java.com.zzhoujay.richtext.spans.ClickableImageSpan.java", "BodyUseAPI": [], "Fixed commit": "eb201368246789f7e61e180797eda200aefb6477", "Url": "https://api.github.com/repos/nichbar/Aequorea", "Date": "2017-11-22T13:41:40Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["haja.pta.desktop.communication.IPhoneCommunicationManagement.getClient(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (client == null) { java.lang.System.out.println(((\"user \" + (args[0])) + \" not found\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2836/buggy-version/desktop.src.main.java.haja.pta.desktop.cli.commands.NotificationCliCommand.java", "BodyUseAPI": [], "Fixed commit": "01db21ac841e68e50b4be0f4e9689fddff050ca9", "Url": "https://api.github.com/repos/haja/pushToAndroid", "Date": "2013-01-25T00:16:31Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(path.isEmpty())) path.add(new org.lwjgl.util.vector.Vector2f(current.getPoint().x, current.getPoint().y));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1042/buggy-version/s0549296.Path.java", "BodyUseAPI": ["java.util.ArrayList<org.lwjgl.util.vector.Vector2f>.add(org.lwjgl.util.vector.Vector2f)"], "Fixed commit": "ab9f265babaf35a8d19f5c8af29317f1331422ac", "Url": "https://api.github.com/repos/VeronikaBe/AI_Autorennen", "Date": "2016-06-27T14:07:27Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.valueOf(m_vwQuantity.getText().toString())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (quantity > 50) { quantity = 50; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5416/buggy-version/src.com.group5.android.fd.activity.dialog.NumberPickerDialog.java", "BodyUseAPI": [], "Fixed commit": "4b2e44144d84232147f195736ae4f19ad6c4654c", "Url": "https://api.github.com/repos/Vernice238/DTUI_201105_Android", "Date": "2011-05-21T10:06:52Z"},
{"Line": "=>587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (headers == null) { httpHeaders = new com.google.api.client.http.HttpHeaders(); }else { httpHeaders = headers; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/405/buggy-version/src.main.java.com.joyent.manta.client.MantaClient.java", "BodyUseAPI": [], "Fixed commit": "cb41d4cca3a6faf3233e592ee5dbc4891ae10479", "Url": "https://api.github.com/repos/phillipross/java-manta", "Date": "2015-11-14T01:17:25Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((prefs.getString(com.mygdx.gettower.screens.PREF_AVATAR)) == \"player2.png\") { select_box.setSelected(\"Deska\"); }else if ((prefs.getString(com.mygdx.gettower.screens.PREF_AVATAR)) == \"tux.png\") { select_box.setSelected(\"Tux\"); }else { select_box.setSelected(\"Icy Tower\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8001/buggy-version/core.src.com.mygdx.gettower.screens.ChangeAvatarScreen.java", "BodyUseAPI": ["com.mygdx.gettower.screens.ChangeAvatarScreen.getString(com.mygdx.gettower.screens.PREF_AVATAR)"], "Fixed commit": "e9d934e426290b31bfabe34c2c81efdb6d2896bd", "Url": "https://api.github.com/repos/gajdzik/GetTowerGame", "Date": "2017-05-20T13:52:48Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controllers.Load.loadCampaign(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((campaign.getLevels()) != null) && (!(campaign.getLevels().isEmpty()))) { java.lang.System.out.println(campaign.getLevels().size()); if ((campaign.getLevels().get(0)) == null) { java.lang.System.out.println(\"ERROR: getWorld == null\"); return; } views.scenes.AdventureModeScene.setWorld(campaign.getLevels().get(0).getWorld()); views.grid.GridWorld.getInstance().setWorld(campaign.getLevels().get(0).getWorld()); }else { java.lang.System.out.println(\"ERROR: campaign.getLevel == null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3488/buggy-version/src.controllers.ButtonHandlers.java", "BodyUseAPI": ["campaign.getLevels().size()", "views.scenes.AdventureModeScene.setWorld(campaign.getLevels().get(0).getWorld())", "models.campaign.Campaign.getLevels()", "models.campaign.Campaign.getLevels()", "campaign.getLevels().get(int)", "campaign.getLevels().get(int)", "campaign.getLevels().get(0).getWorld()", "campaign.getLevels().get(int)", "views.grid.GridWorld.getInstance().setWorld(campaign.getLevels().get(0).getWorld())", "java.io.PrintStream.println(campaign.getLevels().size())", "models.campaign.Campaign.getLevels()", "models.campaign.Campaign.getLevels()", "campaign.getLevels().get(0).getWorld()"], "Fixed commit": "a32814170bb52e198ed9c1e2839f4f19d2365fd8", "Url": "https://api.github.com/repos/kapadiamush/Eve-s-Adventure", "Date": "2014-12-11T20:27:44Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controllers.Load.loadCampaign(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (campaign == null) { java.lang.System.out.println(\"campaign == null\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3488/buggy-version/src.controllers.ButtonHandlers.java", "BodyUseAPI": [], "Fixed commit": "a32814170bb52e198ed9c1e2839f4f19d2365fd8", "Url": "https://api.github.com/repos/kapadiamush/Eve-s-Adventure", "Date": "2014-12-11T20:27:44Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((views.scenes.NewCampaignScene.NewCampaignPane.instanceOfNewCampaignPane) == null) { views.scenes.NewCampaignScene.NewCampaignPane.instanceOfNewCampaignPane = new views.scenes.NewCampaignScene.NewCampaignPane(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3488/buggy-version/src.views.scenes.NewCampaignScene.java", "BodyUseAPI": [], "Fixed commit": "a32814170bb52e198ed9c1e2839f4f19d2365fd8", "Url": "https://api.github.com/repos/kapadiamush/Eve-s-Adventure", "Date": "2014-12-11T20:27:44Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.hof.university.app.data.DataConnector.readStringFromUrl(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (result == null) { return sharedPreferences.getString(strUrl, \"\"); }else if (!(result.isEmpty())) { sharedPreferences.edit().putLong((strUrl + (de.hof.university.app.data.DataConnector.TIME_APPEND)), new java.util.Date().getTime()).putString(strUrl, result).apply(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5232/buggy-version/app.src.main.java.de.hof.university.app.data.DataConnector.java", "BodyUseAPI": ["sharedPreferences.edit().putLong((strUrl + (de.hof.university.app.data.DataConnector.TIME_APPEND)), new java.util.Date().getTime()).putString(strUrl, result).apply()", "java.lang.String.isEmpty()", "sharedPreferences.edit().putLong((strUrl + (de.hof.university.app.data.DataConnector.TIME_APPEND)), new java.util.Date().getTime()).putString(java.lang.String,java.lang.String)"], "Fixed commit": "72cbd5ae8d284e20ba9a71ee5eb5a3976b95cfff", "Url": "https://api.github.com/repos/HochschuleHofStundenplanapp/AndroidStundenplanHof", "Date": "2016-11-14T13:59:08Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (resolveBaseFile == null) { return new java.io.File(new java.net.URL(pathStr).toURI()); }else { java.lang.String base = resolveBaseFile.toURI().toString(); if (!(base.endsWith(\"/\"))) { base += \"/\"; } return new java.io.File(new java.net.URL((base + pathStr)).toURI()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6817/buggy-version/src.main.java.io.github.lukehutch.fastclasspathscanner.classpath.ClasspathFinder.java", "BodyUseAPI": ["java.io.File.toURI()", "java.net.URI.toString()"], "Fixed commit": "1a8fe311a511c49c73fa6ec21eff6ef5df2c0589", "Url": "https://api.github.com/repos/classgraph/classgraph", "Date": "2016-07-12T14:42:15Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bingo.lang.xml.XmlElement.attributeValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (bingo.lang.Strings.isEmpty(name)) { name = clazzName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8594/buggy-version/core-lang.src.main.java.bingo.lang.plugin.PluginManager.java", "BodyUseAPI": [], "Fixed commit": "8824fb6e4bb65ebb1ee68c4b92a3fcaf2ce1e5b5", "Url": "https://api.github.com/repos/bingo-open-source/bingo-core", "Date": "2012-10-22T08:48:03Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((com.google.android.exoplayer.util.Util.SDK_INT) == 16) && (\"OMX.qcom.video.decoder.vc1\".equals(name))) && (\"ville\".equals(Util.DEVICE))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/39/buggy-version/library.src.main.java.com.google.android.exoplayer.MediaCodecUtil.java", "BodyUseAPI": [], "Fixed commit": "9fbe098d438bbb0d89824fb48a8b9f011674bb74", "Url": "https://api.github.com/repos/votruk/ExoPlayer", "Date": "2015-12-01T14:48:04Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.media.MediaMetadataRetriever.extractMetadata(MediaMetadataRetriever.METADATA_KEY_TITLE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (title == null) title = \"Unknown\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3298/buggy-version/app.src.main.java.com.vibz.vibz.DataTransferAsync.java", "BodyUseAPI": [], "Fixed commit": "f80c3c17bc9e064125a36f18e1a4d3a99ed0e032", "Url": "https://api.github.com/repos/clementf/vibz", "Date": "2015-12-15T16:24:04Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.media.MediaMetadataRetriever.extractMetadata(MediaMetadataRetriever.METADATA_KEY_ARTIST)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (artist == null) artist = \"<Unknown>\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3298/buggy-version/app.src.main.java.com.vibz.vibz.DataTransferAsync.java", "BodyUseAPI": [], "Fixed commit": "f80c3c17bc9e064125a36f18e1a4d3a99ed0e032", "Url": "https://api.github.com/repos/clementf/vibz", "Date": "2015-12-15T16:24:04Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.fred.feedex.utils.PrefUtils.getLong(PrefUtils.LAST_SCHEDULED_REFRESH,int)", "android.os.SystemClock.elapsedRealtime()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (elapsedRealTime < lastRefresh) { lastRefresh = 0; net.fred.feedex.utils.PrefUtils.putLong(PrefUtils.LAST_SCHEDULED_REFRESH, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6735/buggy-version/src.net.fred.feedex.receiver.ConnectionChangeReceiver.java", "BodyUseAPI": [], "Fixed commit": "2194e296ad80d2c0c2113995f5e59761b632121f", "Url": "https://api.github.com/repos/HoloAddict/FeedEx", "Date": "2014-09-26T19:43:57Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.SystemClock.elapsedRealtime()", "net.fred.feedex.utils.PrefUtils.getLong(PrefUtils.LAST_SCHEDULED_REFRESH,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (elapsedRealTime < lastRefresh) { lastRefresh = 0; net.fred.feedex.utils.PrefUtils.putLong(PrefUtils.LAST_SCHEDULED_REFRESH, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6735/buggy-version/src.net.fred.feedex.service.RefreshService.java", "BodyUseAPI": [], "Fixed commit": "2194e296ad80d2c0c2113995f5e59761b632121f", "Url": "https://api.github.com/repos/HoloAddict/FeedEx", "Date": "2014-09-26T19:43:57Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((ExpTimer.config.nextConfig) != null) && (ExpTimer.configs.containsKey(ExpTimer.config.nextConfig))) { plugin.startNewTask(ExpTimer.config.nextConfig, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5083/buggy-version/src.main.java.com.github.ucchyocean.et.ColorTeamingListener.java", "BodyUseAPI": [], "Fixed commit": "bbf15d42324c6a4bb7f3d9027ddc47758f7303b1", "Url": "https://api.github.com/repos/ucchyocean/ExpTimer", "Date": "2013-11-02T18:12:06Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((board[i]) == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7265/buggy-version/src.main.assignments.8puzzle.Board.java", "BodyUseAPI": [], "Fixed commit": "2da8774a4552d630a6ec81703a1b55271d7e9b9d", "Url": "https://api.github.com/repos/vojtoshik/coursera-algorithms", "Date": "2015-11-02T20:09:21Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nexty) < 0) (inty)--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4255/buggy-version/app.src.main.java.manuk.path.game.util.IntersectionFinder.java", "BodyUseAPI": [], "Fixed commit": "ef311357fbfe4b3a419a675a51399229195b3dca", "Url": "https://api.github.com/repos/mahhov/androidPath", "Date": "2017-07-01T17:07:26Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nextx) < 0) (intx)--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4255/buggy-version/app.src.main.java.manuk.path.game.util.IntersectionFinder.java", "BodyUseAPI": [], "Fixed commit": "ef311357fbfe4b3a419a675a51399229195b3dca", "Url": "https://api.github.com/repos/mahhov/androidPath", "Date": "2017-07-01T17:07:26Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (json.has(\"url\")) track.url = json.getString(\"url\").replaceFirst(\"https://\", \"http://\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8942/buggy-version/app.src.main.java.org.jikopster.vkasync.worker.Cloud.java", "BodyUseAPI": ["json.getString(\"url\").replaceFirst(java.lang.String,java.lang.String)", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "6e8c30caddf15e7ce673f3503f885fb0bfe8084b", "Url": "https://api.github.com/repos/Jikopster/vkasync.android", "Date": "2016-03-06T20:07:15Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((track.url) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8942/buggy-version/app.src.main.java.org.jikopster.vkasync.worker.Cloud.java", "BodyUseAPI": [], "Fixed commit": "6e8c30caddf15e7ce673f3503f885fb0bfe8084b", "Url": "https://api.github.com/repos/Jikopster/vkasync.android", "Date": "2016-03-06T20:07:15Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"[]\".equals(getResults(\"SELECT * FROM product WHERE productID = ?\", java.lang.String.valueOf(id)))) { return javax.ws.rs.core.Response.status(Response.Status.INTERNAL_SERVER_ERROR).entity(((\"505: Product \" + id) + \" does not exist.\")).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4071/buggy-version/src.java.CPD4414Assign3.ProductServlet.java", "BodyUseAPI": ["javax.ws.rs.core.Response.status(Response.Status.INTERNAL_SERVER_ERROR).entity(((\"505: Product \" + id) + \" does not exist.\")).build()", "javax.ws.rs.core.Response.status(Response.Status.INTERNAL_SERVER_ERROR).entity(java.lang.String)"], "Fixed commit": "ea51410b2406d26e88b049ab6750ed6d447a6445", "Url": "https://api.github.com/repos/mandiecohoon/CPD4414-Assign4", "Date": "2015-03-04T21:02:20Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (skillExecuted) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7028/buggy-version/app.src.main.java.games.runje.dicy.controller.AIController.java", "BodyUseAPI": [], "Fixed commit": "a850105d75776dfe6b7a3779a891a8d1a5162a20", "Url": "https://api.github.com/repos/Runje/Dicy", "Date": "2015-06-23T15:04:03Z"},
{"Line": "=>849", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.onosproject.model.based.configurable.nat.StateListenerNew.personalizedSerialization(java.lang.String,java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((parsed.getClass()) == (java.lang.Long.class)) { log.info(\"Trattato come long\"); ((com.fasterxml.jackson.databind.node.ObjectNode) (toRet)).put(fieldName, ((java.lang.Long) (parsed))); }else if (java.lang.Integer.class.isAssignableFrom(parsed.getClass())) { log.info(\"Trattato come int\"); ((com.fasterxml.jackson.databind.node.ObjectNode) (toRet)).put(fieldName, ((java.lang.Integer) (parsed))); }else if (java.lang.Double.class.isAssignableFrom(parsed.getClass())) { log.info(\"trattato come double\"); ((com.fasterxml.jackson.databind.node.ObjectNode) (toRet)).put(fieldName, ((java.lang.Double) (parsed))); }else { log.info(\"Trattato come string\"); ((com.fasterxml.jackson.databind.node.ObjectNode) (toRet)).put(fieldName, ((java.lang.String) (parsed))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/371/buggy-version/model-based-configurable-nat.src.main.java.org.onosproject.model.based.configurable.nat.StateListenerNew.java", "BodyUseAPI": ["java.lang.Object.getClass()", "java.lang.Class.isAssignableFrom(java.lang.Class<? extends java.lang.Object>)", "java.lang.Object.getClass()", "java.lang.Class.isAssignableFrom(java.lang.Class<? extends java.lang.Object>)"], "Fixed commit": "a4c5d9a1568ab5520f1bcdf855dc8b7a69c26377", "Url": "https://api.github.com/repos/netgroup-polito/onos-applications", "Date": "2017-05-15T10:34:15Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.swt.widgets.Text.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(fileName.trim().equals(\"\"))) { s_textDecryptTarget.setText(new java.io.File(fileName).getParent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3765/buggy-version/src.ataraxis.gui.content.AtaraxisDecryptGUI.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Text.setText(java.lang.String)", "java.io.File.getParent()"], "Fixed commit": "fa6d996f219ad2a2f82ec4fa6b5b81eff8d11d1b", "Url": "https://api.github.com/repos/jgraber/ataraxis", "Date": "2014-04-05T11:41:05Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (s == 0) { x = 0.0; y = 0.0; }else { x = x_integrator.integrate(10000, x_integrand, 0, s); y = y_integrator.integrate(10000, y_integrand, 0, s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3380/buggy-version/src.org.usfirst.frc.team1197.TorTrajectoryLib.spline_generator.CornuSpiral.java", "BodyUseAPI": [], "Fixed commit": "16578c93fe7f74ba47fb580c7def414744be3da4", "Url": "https://api.github.com/repos/FRC-Team-1197-Torbots/TorTrajectoryLib", "Date": "2017-02-05T04:43:15Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((world.getBlockMetadata(x, y, z)) < 8) && ((world.getBlock(x, (y - 1), z)) instanceof com.bluepowermod.blocks.worldgen.BlockCrop)) { world.setBlockToAir(x, y, z); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5739/buggy-version/src.main.java.com.bluepowermod.blocks.worldgen.BlockCrop.java", "BodyUseAPI": ["net.minecraft.world.World.setBlockToAir(int,int,int)"], "Fixed commit": "d5745331996cb0fe25ebb8294ec090c8d49dbc64", "Url": "https://api.github.com/repos/Qmunity/BluePower", "Date": "2014-11-05T12:20:21Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((world.getBlockMetadata(x, y, z)) == 8) && ((world.getBlockMetadata(x, (y - 1), z)) != 7)) { world.setBlockToAir(x, y, z); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5739/buggy-version/src.main.java.com.bluepowermod.blocks.worldgen.BlockCrop.java", "BodyUseAPI": ["net.minecraft.world.World.setBlockToAir(int,int,int)"], "Fixed commit": "d5745331996cb0fe25ebb8294ec090c8d49dbc64", "Url": "https://api.github.com/repos/Qmunity/BluePower", "Date": "2014-11-05T12:20:21Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getOwner()) != null) player.setLaborOwned(((player.getLaborOwned()) + 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2224/buggy-version/42_CDIO_03.src.field.LaborCamp.java", "BodyUseAPI": [], "Fixed commit": "29a56da3d0b338830ef0f74bf694126294f81827", "Url": "https://api.github.com/repos/LasseJensen213/42_CDIO_03", "Date": "2016-11-25T13:14:41Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getOwner()) != null) owner.setFleetsOwned(((owner.getFleetsOwned()) + 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2224/buggy-version/42_CDIO_03.src.field.Fleet.java", "BodyUseAPI": [], "Fixed commit": "29a56da3d0b338830ef0f74bf694126294f81827", "Url": "https://api.github.com/repos/LasseJensen213/42_CDIO_03", "Date": "2016-11-25T13:14:41Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (handleClickAppMenuItem(item, baseController)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4088/buggy-version/ports.android.src.main.java.com.ustadmobile.port.android.view.UstadBaseActivity.java", "BodyUseAPI": [], "Fixed commit": "3d389951f3d47c5b7f162dd2d0fd475ae53dbcb3", "Url": "https://api.github.com/repos/UstadMobile/UstadMobile", "Date": "2016-07-21T13:55:21Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getenv(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (shellInterpreter == null) { shellInterpreter = \"/bin/sh\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/948/buggy-version/src.main.java.fr.ens.transcriptome.eoulsan.steps.ShellStep.java", "BodyUseAPI": [], "Fixed commit": "0aed1e3452191f51a942552b7fd12964187d95d0", "Url": "https://api.github.com/repos/GenomicParisCentre/eoulsan", "Date": "2015-09-19T12:55:21Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (pair.getKey().equals(\"stockholm\")) { if ((description.contains(\"\\n\")) && (!(description.substring(java.lang.Math.max(((description.length()) - 4), 0)).contains(\"\\n\")))) { java.lang.String[] descriptionParts = description.split(\".\\n\"); try { java.lang.String address = descriptionParts[0]; description = descriptionParts[1]; feed.setCrimeAddress(address); } catch (java.lang.ArrayIndexOutOfBoundsException e) { e.printStackTrace(); } } }else if (pair.getKey().equals(\"skane\")) { if (description.contains(\",\")) { java.lang.String[] descriptionParts = description.split(\", \"); java.lang.String address = \"\"; for (int i = 0; i < (descriptionParts.length); i++) { if (i == 0) { description = descriptionParts[i]; }else { if ((i + 1) == (descriptionParts.length)) { address += descriptionParts[i]; }else { address += (descriptionParts[i]) + \", \"; } } } feed.setCrimeAddress(address); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2008/buggy-version/src.main.java.api.FeedDAO.java", "BodyUseAPI": ["java.lang.Object.equals(java.lang.String)", "java.util.Map.Entry.getKey()"], "Fixed commit": "75a1a4e876eeebb0d43247066a4b412f8176d9ff", "Url": "https://api.github.com/repos/marante/mashup-project-backend", "Date": "2016-10-27T16:22:43Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.everit.jira.timetracker.plugin.JiraTimetrackerPluginImpl.createProjects(com.atlassian.jira.user.ApplicationUser)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(projects.isEmpty())) { org.ofbiz.core.entity.EntityExpr projectExpr = new org.ofbiz.core.entity.EntityExpr(\"project\", org.ofbiz.core.entity.EntityOperator.IN, projects); exprList.add(projectExpr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6186/buggy-version/src.main.java.org.everit.jira.timetracker.plugin.JiraTimetrackerPluginImpl.java", "BodyUseAPI": [], "Fixed commit": "69adc13937e87f90c768c5f94e2fd1817a495801", "Url": "https://api.github.com/repos/everit-org/jira-timetracker-plugin", "Date": "2015-12-08T14:25:04Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((info.getComponent()) instanceof visnode.application.NetworkEditor)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/9109/buggy-version/src.main.java.visnode.application.ProcessTransferHandler.java", "BodyUseAPI": [], "Fixed commit": "aeec53bf0de32e2c663c4ff1b87468ccf08dc46e", "Url": "https://api.github.com/repos/VISNode/VISNode", "Date": "2017-10-19T00:50:14Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((localC == '\\'') || (localC == ')')) { isOperator = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/857/buggy-version/plugins.org.python.pydev.src.org.python.pydev.editor.actions.PyFormatStd.java", "BodyUseAPI": [], "Fixed commit": "e185b716029ca8580f63dea3170584e7d3474c93", "Url": "https://api.github.com/repos/aptana/Pydev", "Date": "2011-07-15T19:16:00Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args == null) || ((args.lockMutex) == null)) { return org.pkcs11.jacknji11.CKR.FUNCTION_FAILED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2639/buggy-version/src.main.java.org.pkcs11.jacknji11.jna.JNA_CK_C_INITIALIZE_ARGS.java", "BodyUseAPI": [], "Fixed commit": "903f64e23857b24918c02014acd07fca3a98d12c", "Url": "https://api.github.com/repos/netmackan/jacknji11", "Date": "2014-12-10T12:07:43Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args == null) || ((args.lockMutex) == null)) { return org.pkcs11.jacknji11.CKR.FUNCTION_FAILED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2639/buggy-version/src.main.java.org.pkcs11.jacknji11.jna.JNA_CK_C_INITIALIZE_ARGS.java", "BodyUseAPI": [], "Fixed commit": "903f64e23857b24918c02014acd07fca3a98d12c", "Url": "https://api.github.com/repos/netmackan/jacknji11", "Date": "2014-12-10T12:07:43Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args == null) || ((args.lockMutex) == null)) { return org.pkcs11.jacknji11.CKR.FUNCTION_FAILED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2639/buggy-version/src.main.java.org.pkcs11.jacknji11.jna.JNA_CK_C_INITIALIZE_ARGS.java", "BodyUseAPI": [], "Fixed commit": "903f64e23857b24918c02014acd07fca3a98d12c", "Url": "https://api.github.com/repos/netmackan/jacknji11", "Date": "2014-12-10T12:07:43Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args == null) || ((args.lockMutex) == null)) { return org.pkcs11.jacknji11.CKR.FUNCTION_FAILED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2639/buggy-version/src.main.java.org.pkcs11.jacknji11.jna.JNA_CK_C_INITIALIZE_ARGS.java", "BodyUseAPI": [], "Fixed commit": "903f64e23857b24918c02014acd07fca3a98d12c", "Url": "https://api.github.com/repos/netmackan/jacknji11", "Date": "2014-12-10T12:07:43Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((directory.getAbsolutePath().length()) > (importDTO.getBaseDirectory().length())) { return directory.getAbsolutePath().substring(((importDTO.getBaseDirectory().length()) + 1)); }else { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7665/buggy-version/yamj3-filescanner.src.main.java.com.moviejukebox.filescanner.model.Library.java", "BodyUseAPI": ["java.lang.String.substring(((importDTO.getBaseDirectory().length()) + 1))", "java.io.File.getAbsolutePath()", "importDTO.getBaseDirectory().length()", "com.moviejukebox.common.dto.ImportDTO.getBaseDirectory()"], "Fixed commit": "264c400c368bf6201a4e37e4578d0dc83281d8fe", "Url": "https://api.github.com/repos/YAMJ/yamj-v3", "Date": "2013-04-27T13:01:51Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.List<com.badlogic.gdx.assets.AssetDescriptor>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (assets != null) { for (com.badlogic.gdx.assets.AssetDescriptor asset : assets) com.suiton2d.assets.AssetManager.manager.unload(asset.fileName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5846/buggy-version/core.src.main.java.com.suiton2d.assets.AssetManager.java", "BodyUseAPI": [], "Fixed commit": "6251b7f2c00dd82ad332ccc668328cc7a140d3f6", "Url": "https://api.github.com/repos/jonbonazza/suiton", "Date": "2015-07-20T03:39:35Z"},
{"Line": "=>2264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((m.get(\"grants\")) != null) p.setGrantLogins(new java.util.HashSet<java.lang.String>(((java.util.List<java.lang.String>) (m.get(\"grants\")))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5451/buggy-version/araqne-logdb-client.src.main.java.org.araqne.logdb.client.LogDbClient.java", "BodyUseAPI": ["org.araqne.logdb.client.ProcedureInfo.setGrantLogins(java.util.HashSet<java.lang.String>)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "4939e0ec271984e7611066674ff5629be4b9bb67", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2016-02-21T11:19:31Z"},
{"Line": "=>2267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((m.get(\"grant_groups\")) != null) p.setGrantGroups(new java.util.HashSet<java.lang.String>(((java.util.List<java.lang.String>) (m.get(\"grant_groups\")))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5451/buggy-version/araqne-logdb-client.src.main.java.org.araqne.logdb.client.LogDbClient.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "org.araqne.logdb.client.ProcedureInfo.setGrantGroups(java.util.HashSet<java.lang.String>)"], "Fixed commit": "4939e0ec271984e7611066674ff5629be4b9bb67", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2016-02-21T11:19:31Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pl.zdunex25.tutorial.MainActivity.3.getSharedPreferences(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (settings.getBoolean(\"my_first_time\", true)) { checkNotification.setChecked(true); settings.edit().putBoolean(\"my_first_time\", false).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8844/buggy-version/app.src.main.java.pl.zdunex25.tutorial.MainActivity.java", "BodyUseAPI": ["settings.edit().putBoolean(java.lang.String,boolean)", "settings.edit().putBoolean(\"my_first_time\", false).commit()", "android.content.SharedPreferences.edit()"], "Fixed commit": "35724cd4b2f6721b467eff48bd5e620e3827ad01", "Url": "https://api.github.com/repos/zdunex25/miui_user_guide", "Date": "2016-02-27T21:17:58Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(builder.getSaveTitle()))) { checkBox.setText(builder.getSaveTitle()); }else { checkBox.setText(R.string.ch_title_save_nav_program); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7838/buggy-version/library.src.main.java.su.ias.utils.navigationutils.ChooseNavigatorAlertDialog.java", "BodyUseAPI": ["su.ias.utils.navigationutils.ChooseNavigatorAlertDialog.Builder.getSaveTitle()", "android.widget.CheckBox.setText(builder.getSaveTitle())"], "Fixed commit": "a320ff2f87e528f546860530da620a91eaaf0360", "Url": "https://api.github.com/repos/user32338/navigation-android", "Date": "2017-06-05T14:35:00Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(builder.getTitle()))) { alertBuilder.setTitle(builder.getTitle()); }else { alertBuilder.setTitle(R.string.tv_title_choose_nav_program); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7838/buggy-version/library.src.main.java.su.ias.utils.navigationutils.ChooseNavigatorAlertDialog.java", "BodyUseAPI": ["AlertDialog.Builder.setTitle(builder.getTitle())", "su.ias.utils.navigationutils.ChooseNavigatorAlertDialog.Builder.getTitle()"], "Fixed commit": "a320ff2f87e528f546860530da620a91eaaf0360", "Url": "https://api.github.com/repos/user32338/navigation-android", "Date": "2017-06-05T14:35:00Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isProjectValid()) { render(org.plantuml.idea.util.UIUtils.getSelectedSourceWithCaret(myProject)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3652/buggy-version/src.org.plantuml.idea.toolwindow.PlantUmlToolWindow.java", "BodyUseAPI": [], "Fixed commit": "52877d55db9751045c11b26f00bd9556146499fb", "Url": "https://api.github.com/repos/esteinberg/plantuml4idea", "Date": "2012-09-11T16:24:33Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isProjectValid()) { lazyRender(org.plantuml.idea.util.UIUtils.getSelectedSourceWithCaret(myProject)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3652/buggy-version/src.org.plantuml.idea.toolwindow.PlantUmlToolWindow.java", "BodyUseAPI": [], "Fixed commit": "52877d55db9751045c11b26f00bd9556146499fb", "Url": "https://api.github.com/repos/esteinberg/plantuml4idea", "Date": "2012-09-11T16:24:33Z"},
{"Line": "=>1107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stageId >= 0) { com.ociweb.pronghorn.stage.PronghornStage producer = gm.stageIdToStage[stageId]; producerName = com.ociweb.pronghorn.stage.scheduling.GraphManager.getNota(gm, producer, com.ociweb.pronghorn.stage.scheduling.GraphManager.STAGE_NAME, producer.getClass().getSimpleName()).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8322/buggy-version/src.main.java.com.ociweb.pronghorn.stage.scheduling.GraphManager.java", "BodyUseAPI": [], "Fixed commit": "00104877287721edc5f782579413288d87fc68da", "Url": "https://api.github.com/repos/oci-pronghorn/Pronghorn", "Date": "2016-01-07T23:01:50Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSupportFragmentManager().findFragmentById(R.id.fragment_container)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (temp != null) { transaction.remove(temp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6814/buggy-version/app.src.main.java.ru.mail.park.android_wikipedia.BaseActivity.java", "BodyUseAPI": ["android.support.v4.app.FragmentTransaction.remove(android.support.v4.app.Fragment)"], "Fixed commit": "3cd5d85fd00a58b2113da1f8735e7fd83825172a", "Url": "https://api.github.com/repos/neikila/Android_Wikipedia", "Date": "2015-12-09T00:50:13Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ultimateRecyclerView) != null) { ultimateRecyclerView.setAdapter(baseParseAdapter2); ultimateRecyclerView.setLayoutManager(new android.support.v7.widget.LinearLayoutManager(getActivity())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8920/buggy-version/babylogapp.src.main.java.com.rorlig.babyapp.ui.fragment.BaseInjectableListFragment.java", "BodyUseAPI": [], "Fixed commit": "61124cf1f45639c6fbcb8626cd06e04ded54c54f", "Url": "https://api.github.com/repos/rorlig/babylogger", "Date": "2015-09-23T02:00:52Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((cachedFrames.size()) == 1) && ((this.fta) != null)) { currentRecord = 0; this.fta.reset(this.cachedFrames.get(currentFrame)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2094/buggy-version/hyracks.hyracks-dataflow-std.src.main.java.org.apache.hyracks.dataflow.std.sjoin.CachedFrameWriter.java", "BodyUseAPI": [], "Fixed commit": "768ed09138344b4214d887a1e90223e64bdbf875", "Url": "https://api.github.com/repos/aseldawy/incubator-asterixdb-hyracks", "Date": "2016-02-14T21:02:27Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dr.evolution.tree.Tree.getNodeHeight(hostTree.getRoot())", "cophy.model.AbstractCophylogenyModel.getOriginHeight()", "dr.evolution.tree.Tree.getNodeHeight(guestTree.getRoot())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((guestRootHeight >= originHeight) || (hostRootHeight >= originHeight)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5717/buggy-version/src.cophy.model.AbstractCophylogenyLikelihood.java", "BodyUseAPI": [], "Fixed commit": "38d56bceee2baab32b74898c7129c26220f930c2", "Url": "https://api.github.com/repos/armanbilge/Cophy1", "Date": "2014-09-09T05:12:38Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tempMoveList.size()) == 0) { moveList = new java.lang.String[0]; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8056/buggy-version/ArimaaBot.src.utilities.GameParser.java", "BodyUseAPI": [], "Fixed commit": "a101f9a8e7875ff84b17a3a80f9a0d1545550234", "Url": "https://api.github.com/repos/vmohan7/Arimaa", "Date": "2014-03-12T06:06:48Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((node) == null) { namespace = org.buddycloud.channelserver.packetprocessor.iq.namespace.pubsub.JabberPubsub.NAMESPACE_URI; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/44/buggy-version/src.main.java.org.buddycloud.channelserver.packetprocessor.iq.namespace.pubsub.get.AffiliationsGet.java", "BodyUseAPI": [], "Fixed commit": "c01d42b089429e73fac5c57524ce9927535cfe63", "Url": "https://api.github.com/repos/ashward/buddycloud-server-java", "Date": "2013-01-17T15:10:19Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((endLocation) != null) { locations.add(endLocation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1819/buggy-version/src.main.java.net.nikr.eve.jeveasset.data.api.my.MyContract.java", "BodyUseAPI": [], "Fixed commit": "1d716a4a34b9b75079c565fc5a3af693bbfe3a42", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2017-10-25T12:01:27Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((startLocation) != null) { locations.add(startLocation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1819/buggy-version/src.main.java.net.nikr.eve.jeveasset.data.api.my.MyContract.java", "BodyUseAPI": [], "Fixed commit": "1d716a4a34b9b75079c565fc5a3af693bbfe3a42", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2017-10-25T12:01:27Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((contractItem.getContract().getStartLocationID()) != null) { locationId = contractItem.getContract().getStartLocationID(); }else { locationId = 0L; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1819/buggy-version/src.main.java.net.nikr.eve.jeveasset.data.api.raw.RawAsset.java", "BodyUseAPI": [], "Fixed commit": "1d716a4a34b9b75079c565fc5a3af693bbfe3a42", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2017-10-25T12:01:27Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((msg.what) == (Operations.SetDisconnected.getValue())) { serverDisconnected(); }else if ((msg.what) == (Operations.UpdatePlayers.getValue())) { if (((java.util.ArrayList<se2.groupa.feuern.model.Player>) (msg.obj)) != null) { updateServerPlayers(((java.util.ArrayList<se2.groupa.feuern.model.Player>) (msg.obj))); } }else if ((msg.what) == (Operations.MakeToast.getValue())) { if (((java.lang.String) (msg.obj)) != null) android.widget.Toast.makeText(getApplicationContext(), ((java.lang.String) (msg.obj)), Toast.LENGTH_SHORT).show(); }else if ((msg.what) == (Operations.StartGame.getValue())) { ShowGameActivity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3067/buggy-version/app.src.main.java.se2.groupa.feuern.ClientActivity.java", "BodyUseAPI": ["se2.groupa.feuern.ClientActivity.3.updateServerPlayers(((java.util.ArrayList<se2.groupa.feuern.model.Player>) (msg.obj)))", "android.widget.Toast.makeText(getApplicationContext(),((java.lang.String) (msg.obj)),Toast.LENGTH_SHORT)", "android.widget.Toast.makeText(getApplicationContext(), ((java.lang.String) (msg.obj)), Toast.LENGTH_SHORT).show()"], "Fixed commit": "1f75bf110cc01794afdbded47dd0afa548360ae6", "Url": "https://api.github.com/repos/true-gler/Feuern", "Date": "2015-04-24T13:55:06Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ast.getFirstChild().getType()) == (com.puppycrawl.tools.checkstyle.api.TokenTypes.RESOURCE_SPECIFICATION)) { lcurly = ast.getFirstChild().getNextSibling(); }else { lcurly = ast.getFirstChild(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6421/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getFirstChild()", "ast.getFirstChild().getNextSibling()", "com.puppycrawl.tools.checkstyle.api.DetailAST.getFirstChild()"], "Fixed commit": "226023c1dc368921f517df71d4be8df036ac3912", "Url": "https://api.github.com/repos/rnveach/checkstyle", "Date": "2017-01-30T20:29:10Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (nextToken == null) { nextToken = com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck.getNextToken(ast); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6421/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck.java", "BodyUseAPI": [], "Fixed commit": "226023c1dc368921f517df71d4be8df036ac3912", "Url": "https://api.github.com/repos/rnveach/checkstyle", "Date": "2017-01-30T20:29:10Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Main.debug) java.lang.System.out.println(java.lang.String.format(\"Connected on port: %d\", m_socket.getPort()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3735/buggy-version/src.VideoReceiver.java", "BodyUseAPI": [], "Fixed commit": "ec4ecd7285e3f5ba6f3ffd6326ed0a0c9e0c13e1", "Url": "https://api.github.com/repos/qhdwight/android-viewer", "Date": "2017-10-29T05:30:51Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.com.happhour.repository.UsuarioRepository.findOne(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (usuario != null) { settings.setUsuario(usuario); usuario.setSettings(settings); return usuarioRepository.save(usuario); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/203/buggy-version/src.main.java.br.com.happhour.service.UsuarioService.java", "BodyUseAPI": ["br.com.happhour.domain.Usuario.setSettings(br.com.happhour.domain.UsuarioSettings)", "br.com.happhour.repository.UsuarioRepository.save(br.com.happhour.domain.Usuario)", "br.com.happhour.domain.UsuarioSettings.setUsuario(br.com.happhour.domain.Usuario)"], "Fixed commit": "db624215ba475bcfe5166ff39f90b05d3bdf6088", "Url": "https://api.github.com/repos/marcioluis/happyend", "Date": "2017-06-28T19:48:45Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.imixs.workflow.ItemCollection.getItemValueInteger(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (iCount <= 0) { iCount = org.imixs.workflow.engine.adminp.JobHandlerRenameUser.DEFAULT_COUNT; adminp.replaceItemValue(\"numMaxCount\", iCount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2560/buggy-version/imixs-workflow-engine.src.main.java.org.imixs.workflow.engine.adminp.JobHandlerRenameUser.java", "BodyUseAPI": [], "Fixed commit": "e93f86c92207fc1a1e8f8bc667f7440ca42c15d6", "Url": "https://api.github.com/repos/imixs/imixs-workflow", "Date": "2017-05-20T16:35:29Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedList<BidBundle>.removeLast()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (bb == null) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5191/buggy-version/AgentOrange.java", "BodyUseAPI": [], "Fixed commit": "1cbdad9ccd2d59036eb3aaf1d280aa5e8fc1ddd3", "Url": "https://api.github.com/repos/cs404ers/agentorange", "Date": "2012-11-27T11:18:06Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Queue<BidBundle>.clone()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((temp.removeLast()) == null) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5191/buggy-version/AgentOrange.java", "BodyUseAPI": [], "Fixed commit": "1cbdad9ccd2d59036eb3aaf1d280aa5e8fc1ddd3", "Url": "https://api.github.com/repos/cs404ers/agentorange", "Date": "2012-11-27T11:18:06Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["logia.utility.readfile.XmlUtil.getListNode(java.lang.String,xml.getRoot())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((listCommand != null) && ((listCommand.getLength()) > 0)) { for (int i = 0; i < (listCommand.getLength()); i++) { org.w3c.dom.Node nodeCommand = listCommand.item(i); java.lang.String valueCommand = xml.getAttribute(nodeCommand, \"value\"); if ((java.lang.Integer.parseInt(valueCommand)) == idCommand) { this.readDataInstance(xml, ((org.w3c.dom.Element) (nodeCommand)), data, inputstream); break; } } }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4865/buggy-version/src.main.java.logia.io.parser.DataParser.java", "BodyUseAPI": ["org.w3c.dom.NodeList.getLength()", "org.w3c.dom.NodeList.item(int)"], "Fixed commit": "181391aa39d97e2c2bf9a5d1e255b8acf3e50a41", "Url": "https://api.github.com/repos/paulmai193/socket-io", "Date": "2015-06-10T10:02:54Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((charityItemInfo.getItemUUID()) == null) { charityItemInfo.setItemUUID(java.util.UUID.randomUUID().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6883/buggy-version/app.src.main.java.softwareengineering.assignment.sharify.SMAddPostActivity.java", "BodyUseAPI": ["softwareengineering.assignment.sharify.CharityItemInfo.setItemUUID(java.lang.String)"], "Fixed commit": "026604a1cfe80cdd69387af7ec2ea0e84275e402", "Url": "https://api.github.com/repos/hotdroid3/Sharify", "Date": "2017-06-18T09:29:37Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((table[i].length) > 1) { for (int j = 0; j < (table[i].length); j++) { tableString = tableString + (table[i][j]); } }else { tableString = table[i][0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5645/buggy-version/sayservice.it.src.main.java.sayservice.AnnotatedTTGenerator.java", "BodyUseAPI": [], "Fixed commit": "6d435ba772c9d2b1d0c2bb1c479662be7c57358d", "Url": "https://api.github.com/repos/nawaz2013/annotated.timetable", "Date": "2015-07-03T10:08:46Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((application.getUrl()) == null) { fr.fam.melodyexporter.config.MelodyConfig.LOGGER.error((\"Missing url for application : \" + (application.getName()))); throw new java.lang.IllegalStateException((\"Missing url for application : \" + (application.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5012/buggy-version/src.main.java.fr.fam.melodyexporter.config.MelodyConfig.java", "BodyUseAPI": ["fr.fam.melodyexporter.config.Application.getName()", "fr.fam.melodyexporter.config.Application.getName()", "org.apache.log4j.Logger.error((\"Missing url for application : \" + (application.getName())))"], "Fixed commit": "150bf2f5460a390b729507fda32f8542b74de0b5", "Url": "https://api.github.com/repos/thx8411/javamelody-prometheus-exporter", "Date": "2017-07-31T18:59:25Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bean.isVerified()) username.setText(((username.getText().toString()) + (getString(R.string.verified_user))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1015/buggy-version/src.org.qii.weiciyuan.ui.userinfo.UserInfoFragment.java", "BodyUseAPI": [], "Fixed commit": "54cf95c34ce2fedd605c4daca79d53ffce81acf6", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-09-05T16:09:01Z"},
{"Line": "=>1134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getSceneFlowManager().getCurrentActiveSuperNode().equals(supernode)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7965/buggy-version/src.de.dfki.vsm.editor.WorkSpace.java", "BodyUseAPI": [], "Fixed commit": "48b0b6daee3433ab38ae5ea551cdda5100b2da7b", "Url": "https://api.github.com/repos/SceneMaker/VisualSceneMaker", "Date": "2015-02-09T15:45:14Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.pandcorps.pandam.android.JetPansound.jetPlayer.loadJetFile(fileName))) { copyResourceToFile(); if (!(org.pandcorps.pandam.android.JetPansound.jetPlayer.loadJetFile(fileName))) { throw new org.pandcorps.pandam.android.Panception((\"Failed to load Jet file \" + (fileName))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7933/buggy-version/src.org.pandcorps.pandam.android.JetPansound.java", "BodyUseAPI": ["org.pandcorps.pandam.android.JetPlayer.loadJetFile(java.lang.String)"], "Fixed commit": "1eb97e702f20f78eec914c95652d08935a419378", "Url": "https://api.github.com/repos/pandcorps/pandam-android", "Date": "2015-09-07T20:59:33Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((edu.rosehulman.androidproject.activities.MainActivity) (getActivity())).getUsers()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dataset.getSeriesCount()) == (users.size())) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4341/buggy-version/app.src.main.java.edu.rosehulman.androidproject.fragments.GraphFragment.java", "BodyUseAPI": [], "Fixed commit": "06719f54ebc83fc631d1ccc71203aa9f62d743cf", "Url": "https://api.github.com/repos/apals/Caffeine-Competition", "Date": "2015-02-21T21:52:10Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.Color.getRed()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (red < 10) strRed = \"00\" + strRed; else if (red < 100) strRed = \"0\" + strRed;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4711/buggy-version/src.main.java.org.c02.iot.InternetButtonImpl.java", "BodyUseAPI": [], "Fixed commit": "a4f08577bdfb81f3efb2467f56b015dfa518f115", "Url": "https://api.github.com/repos/chsaria/InternetButton", "Date": "2017-02-04T13:06:07Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.Color.getBlue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (blue < 10) strBlue = \"00\" + strBlue; else if (blue < 100) strBlue = \"0\" + strBlue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4711/buggy-version/src.main.java.org.c02.iot.InternetButtonImpl.java", "BodyUseAPI": [], "Fixed commit": "a4f08577bdfb81f3efb2467f56b015dfa518f115", "Url": "https://api.github.com/repos/chsaria/InternetButton", "Date": "2017-02-04T13:06:07Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.Color.getGreen()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (green < 10) strGreen = \"00\" + strGreen; else if (green < 100) strGreen = \"0\" + strGreen;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4711/buggy-version/src.main.java.org.c02.iot.InternetButtonImpl.java", "BodyUseAPI": [], "Fixed commit": "a4f08577bdfb81f3efb2467f56b015dfa518f115", "Url": "https://api.github.com/repos/chsaria/InternetButton", "Date": "2017-02-04T13:06:07Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getDate(Constants.TRIP_DATEFIN)) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/662/buggy-version/app.src.main.java.com.gusycorp.travel.model.Trip.java", "BodyUseAPI": [], "Fixed commit": "4b06641f0c3497bfbaf170bcdd30f920da42a772", "Url": "https://api.github.com/repos/ahuearr/TravelApp_Android", "Date": "2015-06-14T10:28:29Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getDate(Constants.TRIP_DATEINI)) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/662/buggy-version/app.src.main.java.com.gusycorp.travel.model.Trip.java", "BodyUseAPI": [], "Fixed commit": "4b06641f0c3497bfbaf170bcdd30f920da42a772", "Url": "https://api.github.com/repos/ahuearr/TravelApp_Android", "Date": "2015-06-14T10:28:29Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (traces == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8609/buggy-version/org.dawnsci.plotting.tools.src.org.dawnsci.plotting.tools.profile.CrossProfileTool.java", "BodyUseAPI": [], "Fixed commit": "1c8c0296664a87557f632371572ed47eed98c068", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2015-02-20T16:59:10Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/512/buggy-version/components.src.main.java.ca.phon.ui.participant.ParticipantsTableModel.java", "BodyUseAPI": [], "Fixed commit": "ae2d19c3639b5be1a6878c6ce846955bd86e98a7", "Url": "https://api.github.com/repos/ghedlund/phon", "Date": "2014-09-29T12:11:25Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name.startsWith(\"_\")) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5774/buggy-version/sql.src.main.java.io.crate.metadata.TableIdent.java", "BodyUseAPI": [], "Fixed commit": "e843f9137712d3a99a555d1815c54f3ca45f3609", "Url": "https://api.github.com/repos/crate/crate", "Date": "2016-12-27T15:28:18Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["reflex.node.ReflexNode.evaluate(reflex.debug.IReflexDebugger,reflex.Scope)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (src.isNumber()) { retVal = new reflex.value.ReflexValue(src.asInt()); }else { java.lang.String strVal = src.toString(); if (strVal.equals(\"NULL\")) { retVal = new reflex.value.ReflexValue(0); }else { retVal = new reflex.value.ReflexValue(java.lang.Integer.valueOf((strVal.startsWith(\"'\") ? strVal.substring(1) : strVal))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6062/buggy-version/Libs.Reflex.src.main.java.reflex.function.CastNode.java", "BodyUseAPI": ["reflex.value.ReflexValue.toString()", "reflex.value.ReflexValue.asInt()"], "Fixed commit": "9c18edde3faa00105ee0b7b6ed863687c122086e", "Url": "https://api.github.com/repos/RapturePlatform/Rapture", "Date": "2016-07-07T19:22:01Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (algos.PathFinder.LOG.isDebugEnabled()) { algos.PathFinder.LOG.debug((((((\"[\" + (getSuperstep())) + \"] \") + (vertex.getId().get())) + \" is a target type '\") + (vertex.getValue().getType()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5366/buggy-version/src.main.java.algos.PathFinder.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug((((((\"[\" + (getSuperstep())) + \"] \") + (vertex.getId().get())) + \" is a target type '\") + (vertex.getValue().getType())))"], "Fixed commit": "028908dc718cee0e213f254d6be6903a5843714c", "Url": "https://api.github.com/repos/ianbuss/giraph-target-paths", "Date": "2014-04-08T10:49:42Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((defaultTypeArguments[i]) == null) || (defaultTypeArguments[i].equals(TypeFactory.TYPE_OF_OBJECT))) { hasUnresolvedTypes = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3440/buggy-version/core.src.main.java.ma.glasnost.orika.metadata.TypeUtil.java", "BodyUseAPI": [], "Fixed commit": "c28099c84db91e277a2f36983faa904a4b581e60", "Url": "https://api.github.com/repos/brabenetz/orika", "Date": "2015-08-08T19:02:17Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isAdded())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2599/buggy-version/app.src.main.java.com.stuart.hackatonproject.fragment.DetailReminderFragment.java", "BodyUseAPI": [], "Fixed commit": "233bc851e0f3747d0488f8ae5a5ab7b0099a7e12", "Url": "https://api.github.com/repos/noiz354/stuart-hackathon", "Date": "2017-10-18T06:53:43Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdapter) != null) { setListAdapter(null); mAdapter = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3299/buggy-version/src.nu.staldal.djdplayer.QueryBrowserActivity.java", "BodyUseAPI": [], "Fixed commit": "c9a7f022647a53dc79fa3f2a72f877edb8c3473b", "Url": "https://api.github.com/repos/mikaelstaldal/DJDPlayer", "Date": "2013-01-06T19:42:07Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ar.edu.ungs.persistence.dao.impl.autorizaciones.CoberturaDao.findById(ar.edu.ungs.persistence.entities.practica.CoberturaID)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (cobertura != null) return cobertura.getRequiereAutorizacion();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/9023/buggy-version/SiSaludSRL.src.main.java.ar.edu.ungs.business.services.impl.AutorizacionServiceImpl.java", "BodyUseAPI": ["ar.edu.ungs.persistence.entities.practica.Cobertura.getRequiereAutorizacion()"], "Fixed commit": "424e57d4cb31db686dec1b28a6dd57eb864825d1", "Url": "https://api.github.com/repos/alefherrera/sisalud", "Date": "2017-06-26T22:59:54Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kylc.torrent.io.BitTorrentFile.getInfo()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((info.lookup(\"name.utf-8\")) == null) label = \"name\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5491/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "c117bc6b09a2f29e9c5d8cb2b7a0c8c675219ef3", "Url": "https://api.github.com/repos/yepyao/bencode", "Date": "2014-09-08T14:58:45Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kylc.torrent.io.bencode.BencodeByteStringType.getString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((fileName.lastIndexOf(\".\")) > (-1)) newFileName = (\"\" + count) + (fileName.substring(fileName.lastIndexOf(\".\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5491/buggy-version/src.Main.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "c117bc6b09a2f29e9c5d8cb2b7a0c8c675219ef3", "Url": "https://api.github.com/repos/yepyao/bencode", "Date": "2014-09-08T14:58:45Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((com.kylc.torrent.io.bencode.BencodeDictionaryType) (file)).lookup(\"path.utf-8\")) == null) label = \"path\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5491/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "c117bc6b09a2f29e9c5d8cb2b7a0c8c675219ef3", "Url": "https://api.github.com/repos/yepyao/bencode", "Date": "2014-09-08T14:58:45Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mychamp.bll.FileManager.getInstance().isTop8There()) { mychamp.bll.GroupManager.getInstance().loadSavedTop8(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8670/buggy-version/src.mychamp.gui.controller.FinalsController.java", "BodyUseAPI": [], "Fixed commit": "c5af5ce39ad3d2e4e1fd4371419d1c8957facb4a", "Url": "https://api.github.com/repos/onero/MyChamp", "Date": "2017-01-12T12:22:39Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.xml.bind.JAXBElement.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(\"preserve\".equals(textObj.getSpace()))) { text = text.trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8550/buggy-version/src.main.java.org.wickedsource.docxstamper.util.RunUtil.java", "BodyUseAPI": [], "Fixed commit": "a1acf547494b75c84728461263298fe41475c558", "Url": "https://api.github.com/repos/thombergs/docx-stamper", "Date": "2016-09-29T20:44:27Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((floatingActionButton) != null) { floatingActionButton.setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { switch (v.getId()) { case R.id.fab : nestedScrollView.setSmoothScrollingEnabled(true); if (!(isScrollToBottom)) { if ((nestedScrollView) != null) nestedScrollView.fullScroll(View.FOCUS_DOWN); if ((appBarLayout) != null) appBarLayout.setExpanded(false, true); isScrollToBottom = true; }else { if ((nestedScrollView) != null) nestedScrollView.fullScroll(View.FOCUS_UP); if ((appBarLayout) != null) appBarLayout.setExpanded(true, true); isScrollToBottom = false; } break; default : break; } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2883/buggy-version/app.src.main.java.com.christian.activity.HomeDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "424c58cd2653fc98d9ac67bd5a10e5aafbb35c3a", "Url": "https://api.github.com/repos/lanhuaguizha/Christian", "Date": "2017-06-11T14:33:28Z"},
{"Line": "=>1104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(strJobColor.equals(\"background-color:red\"))) { if (fResDir.getAbsolutePath().startsWith(AutomationToolbox.src.ToolboxWindow._RunningDir().getAbsolutePath())) { if ((bErrors != null) && (bErrors == true)) strJobColor = \"background-color:red\"; }else strJobColor = (bErrors == null) ? \"\" : bErrors == true ? \"background-color:red\" : \"background-color:#00BB00\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2626/buggy-version/Java.AutomationToolbox.src.ToolboxHTTPServer.java", "BodyUseAPI": [], "Fixed commit": "ae7bf4b3b73bd3afd002d2f0b66838d4fbd31530", "Url": "https://api.github.com/repos/tskotz/Brickyard", "Date": "2015-06-19T04:38:50Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((index) < 0) || ((index) > ((originalItems.size()) - 1))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7977/buggy-version/src.main.java.org.mihalis.opal.imageSelector.ImageSelector.java", "BodyUseAPI": [], "Fixed commit": "9898d80fe3c24de10c8280b35aec61770f96d124", "Url": "https://api.github.com/repos/lcaron/opal", "Date": "2017-07-08T17:04:22Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((weightDetailBean.getPercentage()) == null) { weightDetailBean.setPercentage(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3025/buggy-version/PMP.src.main.java.com.verndale.pmp.service.WeightRecordingService.java", "BodyUseAPI": ["com.verndale.pmp.bean.WeightDetailBean.setPercentage(boolean)"], "Fixed commit": "77288fc47b2ab63fbdd932fd6db765d96fd5c0e7", "Url": "https://api.github.com/repos/gcalleja/verndale-java-app", "Date": "2015-04-10T15:26:54Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.autorefactor.refactoring.rules.ReplaceQualifiedNamesBySimpleNamesRefactoring.Names.getBestMatches(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(matches.get(0).isMember())) { return fullyQualifiedName.equals(matches.get(0).fullyQualifiedName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4957/buggy-version/plugin.src.main.java.org.autorefactor.refactoring.rules.ReplaceQualifiedNamesBySimpleNamesRefactoring.java", "BodyUseAPI": ["org.autorefactor.refactoring.rules.ReplaceQualifiedNamesBySimpleNamesRefactoring.QName.equals(org.autorefactor.refactoring.rules.ReplaceQualifiedNamesBySimpleNamesRefactoring.QName)", "java.util.List<org.autorefactor.refactoring.rules.ReplaceQualifiedNamesBySimpleNamesRefactoring.FQN>.get(int)"], "Fixed commit": "5ecfa7a0906cecc89e8eee33247535aabe5ab8a1", "Url": "https://api.github.com/repos/JnRouvignac/AutoRefactor", "Date": "2017-06-02T19:31:26Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loop instanceof wyil.lang.Code.ForAll) { environment = new wyil.transforms.LiveVariablesAnalysis.Env(environment); }else { environment = wyil.transforms.LiveVariablesAnalysis.EMPTY_ENV; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7968/buggy-version/src.wyil.transforms.LiveVariablesAnalysis.java", "BodyUseAPI": [], "Fixed commit": "dc2026f292491d115dfb9ad97684e46112470149", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-11-01T02:51:52Z"},
{"Line": "=>532", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((menu) != null) { android.view.MenuItem af = menu.findItem(R.id.add_friend); android.support.v4.view.MenuItemCompat.setShowAsAction(af, MenuItem.SHOW_AS_ACTION_NEVER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3660/buggy-version/app.src.main.java.im.tox.antox.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3b31d58376daf665479dc15862c0efe66e23175e", "Url": "https://api.github.com/repos/aBothe/Antox", "Date": "2014-05-18T13:23:02Z"},
{"Line": "=>542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((menu) != null) { android.view.MenuItem search = menu.findItem(R.id.search_friend); android.support.v4.view.MenuItemCompat.setShowAsAction(search, MenuItem.SHOW_AS_ACTION_NEVER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3660/buggy-version/app.src.main.java.im.tox.antox.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3b31d58376daf665479dc15862c0efe66e23175e", "Url": "https://api.github.com/repos/aBothe/Antox", "Date": "2014-05-18T13:23:02Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vidhrdw.konamiic.konamiicclog) != null) fprintf(vidhrdw.konamiic.konamiicclog, \"number=%d,sprite_bank=%d,sx=%d,sy=%d,attr=%d,xflip=%d,yflip=%d,color=%d\\n\", number, sprite_bank, sx, sy, attr, xflip, yflip, color);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1056/buggy-version/emulator.src.vidhrdw.konamiic.java", "BodyUseAPI": [], "Fixed commit": "61477eb0d8b857016ea905ac9327228bc9c6e25e", "Url": "https://api.github.com/repos/georgemoralis/arcadeflex036", "Date": "2014-07-30T21:50:05Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((this.departureTime) != null) && ((this.arrivalTime) != null)) { long diff = (this.departureTime.getTime()) - (this.arrivalTime.getTime()); if (diff > 0) { int minutes = ((int) (java.util.concurrent.TimeUnit.MINUTES.convert(diff, java.util.concurrent.TimeUnit.MILLISECONDS))); java.text.DecimalFormat df = new java.text.DecimalFormat(\"#.##\"); this.dwellTime = java.lang.Double.valueOf(df.format((((double) (minutes)) / 60))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8191/buggy-version/gtas-parent.gtas-commons.src.main.java.gov.gtas.model.DwellTime.java", "BodyUseAPI": [], "Fixed commit": "b884e3dbf5ccd7df36f01b7fe5eec98583c6ad62", "Url": "https://api.github.com/repos/US-CBP/GTAS", "Date": "2017-04-13T16:24:11Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (command.equals(\"publish\")) { receivePublishParams(req, resp); java.lang.String path = currentPath.replace('/', java.io.File.separatorChar); if (de.webfilesys.MetaInfManager.getInstance().isStagedPublication(path)) { de.webfilesys.MetaInfManager.getInstance().setStatus(path, fileName, MetaInfManager.STATUS_BLOG_PUBLISHED); java.lang.String accessCode = de.webfilesys.InvitationManager.getInstance().getInvitationCode(userid, path); if (accessCode != null) { de.webfilesys.InvitationManager.getInstance().notifySubscribers(accessCode); }else { org.apache.log4j.Logger.getLogger(getClass()).warn((((\"could not determine invitation code for subscription notification, uid=\" + userid) + \" docRoot=\") + path)); } } }else { de.webfilesys.servlet.BlogAppServlet.LOG.warn((((\"invalid command in call to BlogPostServlet: \" + command) + \", request: \") + requestPath)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8083/buggy-version/src.main.java.de.webfilesys.servlet.BlogAppServlet.java", "BodyUseAPI": ["org.apache.log4j.Logger.warn(java.lang.String)"], "Fixed commit": "0bc5d49c037efa1349e0fced3cac5f1cb00d3c71", "Url": "https://api.github.com/repos/fhoehnel/arcoiris", "Date": "2017-04-18T19:40:07Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.habzy.image.models.ViewParams.ShownStyle.Pick_Single) == (mParams.getShownStyle())) { mModelsList.get(mCurrentItem).isSeleted = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6002/buggy-version/source.src.com.habzy.image.viewpager.wrap.ViewPagerDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "ca61092a64f18a31280d7c2ee064794fe9683f81", "Url": "https://api.github.com/repos/habzy/GridImagePicker", "Date": "2014-10-22T09:51:17Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) != (com.github.dokky.gherkin.lexer.Lexer.STATE_TABLE)) { state = com.github.dokky.gherkin.lexer.Lexer.STATE_DEFAULT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6658/buggy-version/gherkin-parser.src.main.java.com.github.dokky.gherkin.lexer.Lexer.java", "BodyUseAPI": [], "Fixed commit": "ebacf80c3d1e081b755c84068f8bff3fdbe36122", "Url": "https://api.github.com/repos/dokky/jcuke", "Date": "2013-01-23T03:07:27Z"},
{"Line": "=>786", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.topsun.posclient.sales.core.SalesDataUtil.calculateCashierModelFactSumByMakeUp(cmList.get(i),java.math.BigDecimal,java.math.BigDecimal,java.util.List<com.topsun.posclient.datamodel.CashierModel>,partSales.getCashBackAmount())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((factCmAmount.compareTo(new java.math.BigDecimal(0))) == 0) { sum = new java.math.BigDecimal(0); sum = new java.math.BigDecimal(sum.intValue()); }else { sum = factAmountCount.subtract(addCmAmount); sum = new java.math.BigDecimal(sum.intValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2402/buggy-version/com.topsun.posclient.sales.core.src.com.topsun.posclient.sales.core.SalesDataUtil.java", "BodyUseAPI": [], "Fixed commit": "05db68a4df115bb32471473e9da6b9cd0389a43c", "Url": "https://api.github.com/repos/tandong8888/topsun", "Date": "2014-03-09T05:09:43Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rayoNode.getIpAddress()) == null) { rayoNode.setIpAddress(java.net.InetAddress.getByName(rayoNode.getHostname()).getHostAddress()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/707/buggy-version/rayo-gateway.src.main.java.com.rayo.gateway.DefaultGatewayStorageService.java", "BodyUseAPI": ["java.net.InetAddress.getByName(rayoNode.getHostname())", "java.net.InetAddress.getHostAddress()", "com.rayo.gateway.model.RayoNode.getHostname()", "com.rayo.gateway.model.RayoNode.setIpAddress(java.net.InetAddress.getByName(rayoNode.getHostname()).getHostAddress())"], "Fixed commit": "39d18429a6ee4f8d9cd2be0db9e454d6dc0b71b6", "Url": "https://api.github.com/repos/rayo/rayo-server", "Date": "2011-12-28T15:55:41Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.plushnikov.intellij.plugin.util.PsiAnnotationUtil.isAnnotatedWith(com.intellij.psi.PsiClass,java.lang.Class,java.lang.Class)", "com.intellij.psi.PsiModifierList.hasModifierProperty(PsiModifier.FINAL)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!isFinal) && classAnnotatedWithValue) { isFinal = de.plushnikov.intellij.plugin.util.PsiAnnotationUtil.isNotAnnotatedWith(psiField, lombok.experimental.NonFinal.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/430/buggy-version/lombok-plugin.src.main.java.de.plushnikov.intellij.plugin.processor.clazz.constructor.RequiredArgsConstructorProcessor.java", "BodyUseAPI": [], "Fixed commit": "ce2f29e81d98a2f779f0a3e63db1dbb385e1e506", "Url": "https://api.github.com/repos/mplushnikov/lombok-intellij-plugin", "Date": "2014-01-18T16:25:43Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arg.is(Tree.Kind.UNARY_MINUS)) { sign = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/9170/buggy-version/java-checks.src.main.java.org.sonar.java.checks.InvalidDateValuesCheck.java", "BodyUseAPI": [], "Fixed commit": "decdf609c7e0925c08409c204450874cb5a43986", "Url": "https://api.github.com/repos/benzonico/sonar-java", "Date": "2015-02-11T15:26:00Z"},
{"Line": "=>959", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isAugmented())) theSolver.activateSBP();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2761/buggy-version/minsolver.MinSolver.java", "BodyUseAPI": [], "Fixed commit": "328424e35af446db41d5a9adb83b944706ffd7d0", "Url": "https://api.github.com/repos/salmans/MinSolver", "Date": "2012-07-23T17:27:01Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xcompwiz.lookingglass.client.proxyworld.ProxyWorldManager.getProxyworld(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((proxyworld.provider.dimensionId) == (net.minecraft.client.Minecraft.getMinecraft().thePlayer.dimension)) proxyworld.removeWorldAccess(view.getRenderGlobal());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2652/buggy-version/src.main.java.com.xcompwiz.lookingglass.client.proxyworld.ProxyWorldManager.java", "BodyUseAPI": ["net.minecraft.client.multiplayer.WorldClient.removeWorldAccess(view.getRenderGlobal())"], "Fixed commit": "f8e09ea41e1c2dba8ce36a209b57281d26d8ca5f", "Url": "https://api.github.com/repos/Geforce132/LookingGlass", "Date": "2015-11-20T17:10:04Z"},
{"Line": "=>825", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cls.isOWLThing()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4129/buggy-version/components-core.src.main.java.org.dllearner.algorithms.celoe.CELOE.java", "BodyUseAPI": [], "Fixed commit": "052c0c6b5fbf9f7e90027cc5f328d5c0e0fbd048", "Url": "https://api.github.com/repos/SmartDataAnalytics/DL-Learner", "Date": "2015-02-19T14:34:07Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (builder.getUIContext().getProvider().isGUI()) { builder.add(password); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4485/buggy-version/src.main.java.com.sap.cloud.forge.ui.DeployCommand.java", "BodyUseAPI": ["org.jboss.forge.addon.ui.context.UIBuilder.add(org.jboss.forge.addon.ui.input.UIInput<java.lang.String>)"], "Fixed commit": "eca8911a349009a424eca347299a8df1369da056", "Url": "https://api.github.com/repos/ivannov/addon-saphcp", "Date": "2014-03-03T21:33:36Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(context.getUIContext().getProvider().isGUI())) { password = context.getPrompt().promptSecret(\"SAP HCP User Password: \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4485/buggy-version/src.main.java.com.sap.cloud.forge.ui.DeployCommand.java", "BodyUseAPI": ["org.jboss.forge.addon.ui.context.UIExecutionContext.getPrompt()", "context.getPrompt().promptSecret(java.lang.String)"], "Fixed commit": "eca8911a349009a424eca347299a8df1369da056", "Url": "https://api.github.com/repos/ivannov/addon-saphcp", "Date": "2014-03-03T21:33:36Z"},
{"Line": "=>583", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["adminClient.metadataMgmtOps.getRemoteMetadata(java.lang.Integer,MetadataStore.STORES_KEY)", "voldemort.utils.CmdUtils.valueOf(joptsimple.OptionSet,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (voldemort.VoldemortAdminTool.confirmMetadataUpdate(nodeId, adminClient, storesXML.getValue())) { voldemort.VoldemortAdminTool.executeSetMetadata(nodeId, adminClient, MetadataStore.STORES_KEY, mapper.writeStoreList(newStoreDefs)); if (nodeId >= 0) { java.lang.System.err.println(((\"WARNING: Metadata version update of stores goes to all servers, \" + \"although this set-metadata oprations only goes to node \") + nodeId)); } voldemort.VoldemortAdminTool.executeUpdateMetadataVersionsOnStores(adminClient, oldStoreDefs, newStoreDefs); }else { java.lang.System.out.println(\"New metadata has not been set\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1626/buggy-version/src.java.voldemort.VoldemortAdminTool.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "voldemort.VoldemortAdminTool.executeUpdateMetadataVersionsOnStores(voldemort.client.protocol.admin.AdminClient,java.util.List<voldemort.store.StoreDefinition>,java.util.List<voldemort.store.StoreDefinition>)", "voldemort.VoldemortAdminTool.executeSetMetadata(java.lang.Integer,voldemort.client.protocol.admin.AdminClient,MetadataStore.STORES_KEY,mapper.writeStoreList(newStoreDefs))"], "Fixed commit": "dbe8497e74d99b0d14bebe42af66b134987db39a", "Url": "https://api.github.com/repos/stotch/voldemort", "Date": "2014-02-11T01:35:15Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (checkItemImagesForItem_ID(input)) { data = getValueImageByteArrayFromItemImages(input); }else { try { data = getValueImageByteArray(\"no-image\"); } catch (java.lang.Exception e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1627/buggy-version/projects.nsort.src.cis234a.nsort.model.SqlUser_234a_t1.java", "BodyUseAPI": ["cis234a.nsort.model.SqlUser_234a_t1.getValueImageByteArrayFromItemImages(java.lang.String)"], "Fixed commit": "1466efe73545d960a3dad2cca75b2d561afc106f", "Url": "https://api.github.com/repos/cstultz/cis234", "Date": "2015-06-04T00:22:11Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(client.client.serverMsg.readLine().equals(\"created\"))) java.lang.System.out.println(\"Input error.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8740/buggy-version/project_2.src.client.client.java", "BodyUseAPI": [], "Fixed commit": "42a9c7df039e7751ca4957fbe26503ba274dc1ba", "Url": "https://api.github.com/repos/eHammarstrom/EIT060", "Date": "2016-02-24T19:08:31Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JComboBox<edu.wpi.cs.wpisuitetng.modules.planningpoker.model.DeckModel>.getSelectedItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (selectedDeck == null) { selectedDeck = edu.wpi.cs.wpisuitetng.modules.planningpoker.model.DeckModel.DEFAULT_DECK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4590/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetng.modules.planningpoker.view.main.DeckOptionsPanel.java", "BodyUseAPI": [], "Fixed commit": "98bae915fd9612ac274bcbf07f905590c7587bfa", "Url": "https://api.github.com/repos/dbeckwith/wpi-suite", "Date": "2014-04-22T19:28:07Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["htsjdk.samtools.reference.IndexedFastaSequenceFileHadoop.getBias(long,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lineNum == 0) lineNum = basesPerLine;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/972/buggy-version/src.java.htsjdk.samtools.reference.IndexedFastaSequenceFileHadoop.java", "BodyUseAPI": [], "Fixed commit": "061224538a1df4a65f736f798167caa214a4b852", "Url": "https://api.github.com/repos/NovelBioCloud/htsjdk", "Date": "2015-03-31T13:42:53Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.openlmis.core.model.StockMovementItem>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((firstItem.getMovementType()) == (StockMovementItem.MovementType.PHYSICAL_INVENTORY)) { rnrFormItem.setInitialAmount(firstItem.getStockOnHand()); }else { rnrFormItem.setInitialAmount(((firstItem.getStockOnHand()) - (firstItem.getMovementQuantity()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3382/buggy-version/app.src.main.java.org.openlmis.core.model.repository.RnrFormRepository.java", "BodyUseAPI": ["org.openlmis.core.model.RnrFormItem.setInitialAmount(firstItem.getStockOnHand())", "org.openlmis.core.model.RnrFormItem.setInitialAmount(((firstItem.getStockOnHand()) - (firstItem.getMovementQuantity())))", "org.openlmis.core.model.StockMovementItem.getMovementQuantity()", "org.openlmis.core.model.StockMovementItem.getStockOnHand()", "org.openlmis.core.model.StockMovementItem.getStockOnHand()"], "Fixed commit": "3d3bb6b806e6371332c6ea0889a7b3cd1dd070a5", "Url": "https://api.github.com/repos/SIGLUS/lmis-moz-mobile", "Date": "2015-11-13T06:00:18Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v7.widget.LinearLayoutManager.findViewByPosition(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (child != null) { mAdapter.coordinateChild(getActivity(), child); }else { com.door43.tools.reporting.Logger.w(\"ViewModeFragment.onCoordinateVisible\", (((((\"The RecylerView child was null at \" + i) + \" for \") + (mTargetTranslation.getId())) + \":\") + (mSourceTranslationId))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1410/buggy-version/app.src.main.java.com.door43.translationstudio.targettranslations.ViewModeFragment.java", "BodyUseAPI": ["com.door43.translationstudio.targettranslations.ViewModeAdapter.coordinateChild(getActivity(),android.view.View)"], "Fixed commit": "9c3bf797eb20f855a72375f8be97a5e02c619a5e", "Url": "https://api.github.com/repos/unfoldingWord-dev/ts-android", "Date": "2015-09-19T07:37:06Z"},
{"Line": "=>1123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (size < 101) { array = serialCallsArrayCache; }else { array = new java.lang.Runnable[size]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3414/buggy-version/CodenameOne.src.com.codename1.ui.Display.java", "BodyUseAPI": [], "Fixed commit": "fac05bc5cf91e94cf50064b2710557516e91de2b", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2015-04-09T07:04:16Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tokens.isEmpty()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2518/buggy-version/src.main.java.org.elasticsearch.index.analysis.url.URLTokenFilter.java", "BodyUseAPI": [], "Fixed commit": "9d775c74c8a2edca7d7f415f56336ff33c059ec7", "Url": "https://api.github.com/repos/jlinn/elasticsearch-analysis-url", "Date": "2016-05-21T05:49:50Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tmp.length()) > 0) { return config.getLoggerConfig(tmp).getLogger(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6327/buggy-version/src.main.java.com.plugram.logger.LoggerContext.java", "BodyUseAPI": ["com.plugram.logger.config.Configuration.getLoggerConfig(java.lang.String)", "config.getLoggerConfig(tmp).getLogger()"], "Fixed commit": "9a762574698159188e31858bec9af52af19f002a", "Url": "https://api.github.com/repos/tango238/Logger", "Date": "2012-10-12T14:20:03Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.cuni.mff.xrg.odcs.commons.app.scheduling.Schedule.getNextExecutionTimeInfo()", "cz.cuni.mff.xrg.odcs.commons.app.scheduling.Schedule.getNextExecutionTimeInfo()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((o1time == null) && (o2time == null)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3592/buggy-version/master.src.main.java.eu.unifiedviews.master.api.ScheduleResource.java", "BodyUseAPI": [], "Fixed commit": "936354b2c0f8c7d133f990cd350261102d5dc4cb", "Url": "https://api.github.com/repos/UnifiedViews/Core", "Date": "2014-11-27T11:52:56Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.cuni.mff.xrg.odcs.commons.app.scheduling.Schedule.getNextExecutionTimeInfo()", "cz.cuni.mff.xrg.odcs.commons.app.scheduling.Schedule.getNextExecutionTimeInfo()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((o1time == null) && (o2time != null)) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3592/buggy-version/master.src.main.java.eu.unifiedviews.master.api.ScheduleResource.java", "BodyUseAPI": [], "Fixed commit": "936354b2c0f8c7d133f990cd350261102d5dc4cb", "Url": "https://api.github.com/repos/UnifiedViews/Core", "Date": "2014-11-27T11:52:56Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.cuni.mff.xrg.odcs.commons.app.scheduling.Schedule.getNextExecutionTimeInfo()", "cz.cuni.mff.xrg.odcs.commons.app.scheduling.Schedule.getNextExecutionTimeInfo()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((o1time != null) && (o2time == null)) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3592/buggy-version/master.src.main.java.eu.unifiedviews.master.api.ScheduleResource.java", "BodyUseAPI": [], "Fixed commit": "936354b2c0f8c7d133f990cd350261102d5dc4cb", "Url": "https://api.github.com/repos/UnifiedViews/Core", "Date": "2014-11-27T11:52:56Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hyperic.hq.bizapp.shared.AuthzBoss.findSubjectByName(java.lang.Integer,user.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (checkUser != null) { java.lang.String msg = getText(\"exception.user.alreadyExists\"); this.addCustomActionErrorMessages(msg); log.error(((\"User name \" + (user.getName())) + \"Already exists\")); return INPUT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4182/buggy-version/hq-web.src.main.java.org.hyperic.hq.ui.action.admin.user.UserAdminPortalActionNG.java", "BodyUseAPI": [], "Fixed commit": "9441899827fd20bdb7efd181c53a7751701d29e3", "Url": "https://api.github.com/repos/hyperic/hq", "Date": "2015-06-24T09:34:35Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["inputPractice.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (practiceAmount.isEmpty()) { android.widget.Toast.makeText(getApplicationContext(), \"Please enter a number.\", Toast.LENGTH_SHORT).show(); }else { android.content.Intent intent = new android.content.Intent(this, voone.musicaltoolkit.CalendarActivity.class); intent.putExtra(EXTRA_PRACTICE, practiceAmount); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6460/buggy-version/app.src.main.java.voone.musicaltoolkit.HomeActivity.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,java.lang.String)"], "Fixed commit": "3b417c4ebadc03952442537f492978990b418a3b", "Url": "https://api.github.com/repos/123than/MusicalToolkit", "Date": "2017-05-17T06:20:22Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<csm117.diff.Edit>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((decisions[i]) == (csm117.localdocs.CompareChangeActivity.Choice.REJECT)) && (!(e.isInsert))) { j++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2313/buggy-version/app.src.main.java.csm117.localdocs.CompareChangeActivity.java", "BodyUseAPI": [], "Fixed commit": "e88f5839fb6e766bc1f7073b339fe65b4446eae1", "Url": "https://api.github.com/repos/tbrightbill/Local_Docs", "Date": "2016-03-01T23:42:57Z"},
{"Line": "=>533", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.optString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((userId != null) && (!(userId.isEmpty()))) { }else { userId = userJson.optString(\"id\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5801/buggy-version/app.src.main.java.ink.va.activities.Login.java", "BodyUseAPI": [], "Fixed commit": "e0c5a8d09dc4b3520f3079c49629192ae8d0810a", "Url": "https://api.github.com/repos/vladimirarevshatyan/Ink", "Date": "2016-10-30T14:55:59Z"},
{"Line": "=>2661", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bitcoinj.core.TransactionInput.getConnectedOutput()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (output.isMineOrWatched(this)) checkState(myUnspents.add(output));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6489/buggy-version/core.src.main.java.org.bitcoinj.core.Wallet.java", "BodyUseAPI": ["org.bitcoinj.core.Wallet.checkState(myUnspents.add(output))", "java.util.HashSet<org.bitcoinj.core.TransactionOutput>.add(org.bitcoinj.core.TransactionOutput)"], "Fixed commit": "1ca1d246df225863c5e2f32b5856e6d811191f64", "Url": "https://api.github.com/repos/schildbach/bitcoinj", "Date": "2016-03-05T00:04:22Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["arguments.getArgumentAsString(\"randomizenumber\").split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((rawArray.length) > 1) numberOfRobots = java.lang.Integer.parseInt(rawArray[simulator.getRandom().nextInt(rawArray.length)]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7075/buggy-version/JBotSim.src.simulation.robot.Robot.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "simulator.getRandom().nextInt(int)"], "Fixed commit": "a8a05f89fdaf1bf9dabfe3cfb53a033993fe2573", "Url": "https://api.github.com/repos/BioMachinesLab/jbotevolver", "Date": "2015-07-16T11:40:57Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.talend.components.salesforce.SalesforceConnectionProperties.LoginType.OAuth.equals(loginType.getValue())) && ((oauth2FlowType.getValue()) == null)) { oauth2FlowType.setValue(org.talend.components.salesforce.JWT_Flow); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6644/buggy-version/components.components-salesforce.components-salesforce-definition.src.main.java.org.talend.components.salesforce.SalesforceConnectionProperties.java", "BodyUseAPI": ["org.talend.daikon.properties.property.Property<org.talend.components.common.oauth.OAuth2FlowType>.setValue(org.talend.components.salesforce.JWT_Flow)"], "Fixed commit": "db48ecc006f437deedad333d36d643846db785a2", "Url": "https://api.github.com/repos/Talend/components", "Date": "2017-12-11T13:01:33Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.python.pydev.core.docutils.PyDocIterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (str.contains(\"(\")) { while (docIterator.hasNext()) { if (str.contains(\")\")) { j = (docIterator.getLastReturnedLine()) + 1; break; }else { str = docIterator.next(); } } }else if (org.python.pydev.shared_core.string.StringUtils.endsWith(str.trim(), '\\\\')) { while (docIterator.hasNext()) { if (!(org.python.pydev.shared_core.string.StringUtils.endsWith(str.trim(), '\\\\'))) { j = (docIterator.getLastReturnedLine()) + 1; break; } str = docIterator.next(); } }else { j++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3779/buggy-version/plugins.com.python.pydev.analysis.src.com.python.pydev.analysis.CtxInsensitiveImportComplProposal.java", "BodyUseAPI": ["org.python.pydev.shared_core.string.StringUtils.endsWith(java.lang.String,char)", "org.python.pydev.shared_core.string.StringUtils.endsWith(java.lang.String,char)", "java.lang.String.trim()", "java.lang.String.trim()", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "a09c86340a7e4a7935327bd7fabfce398c7aa3dd", "Url": "https://api.github.com/repos/fabioz/Pydev", "Date": "2016-12-28T15:54:08Z"},
{"Line": "=>1227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mskcc.cbio.oncokb.controller.TumorTypeBo.findTumorTypeByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (tumorTypeAll != null) { ret.add(tumorTypeAll); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1649/buggy-version/web.src.main.java.org.mskcc.cbio.oncokb.controller.VariantAnnotationXMLController.java", "BodyUseAPI": ["java.util.List<org.mskcc.cbio.oncokb.controller.TumorType>.add(org.mskcc.cbio.oncokb.controller.TumorType)"], "Fixed commit": "8aafedda399c4ab2da86f30607ef429ab9b650b3", "Url": "https://api.github.com/repos/zhx828/oncokb", "Date": "2015-07-22T21:10:20Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mn.equals(\"-\"))) { mn = mn.replaceAll(\"[^A-Za-z0-9\\\\s]+\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7877/buggy-version/opensrp-connector.src.main.java.org.opensrp.connector.openmrs.service.PatientService.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "604abfaede1096dee9a084a0362b7757a3ba9e05", "Url": "https://api.github.com/repos/OpenSRP/opensrp-server", "Date": "2017-05-22T12:18:08Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(fn.equals(\"-\"))) { fn = fn.replaceAll(\"[^A-Za-z0-9\\\\s]+\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7877/buggy-version/opensrp-connector.src.main.java.org.opensrp.connector.openmrs.service.PatientService.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "604abfaede1096dee9a084a0362b7757a3ba9e05", "Url": "https://api.github.com/repos/OpenSRP/opensrp-server", "Date": "2017-05-22T12:18:08Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ln.equals(\"-\"))) { ln = ln.replaceAll(\"[^A-Za-z0-9\\\\s]+\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7877/buggy-version/opensrp-connector.src.main.java.org.opensrp.connector.openmrs.service.PatientService.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "604abfaede1096dee9a084a0362b7757a3ba9e05", "Url": "https://api.github.com/repos/OpenSRP/opensrp-server", "Date": "2017-05-22T12:18:08Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i >= (com.shico.stats.charts.chartengine.ChartUtil.getColorScheme(ctx).length)) { res[i] = com.shico.stats.charts.chartengine.ChartUtil.getColorScheme(ctx)[(i % (com.shico.stats.charts.chartengine.ChartUtil.getColorScheme(ctx).length))]; }else { res[i] = com.shico.stats.charts.chartengine.ChartUtil.getColorScheme(ctx)[i]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3318/buggy-version/src.com.shico.stats.charts.chartengine.GroupedData.java", "BodyUseAPI": ["com.shico.stats.charts.chartengine.ChartUtil.getColorScheme(android.content.Context)", "com.shico.stats.charts.chartengine.ChartUtil.getColorScheme(android.content.Context)", "com.shico.stats.charts.chartengine.ChartUtil.getColorScheme(android.content.Context)"], "Fixed commit": "9fb4def713d60617ac8cc5e9cf18ec4ca83109bd", "Url": "https://api.github.com/repos/shirazconsult/stats-dandy", "Date": "2013-12-05T08:43:29Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.neo4j.kernel.IdType, org.neo4j.kernel.ha.HaIdGeneratorFactory.HaIdGenerator>.remove(org.neo4j.kernel.IdType)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (previous != null) previous.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6497/buggy-version/enterprise.ha.src.main.java.org.neo4j.kernel.ha.HaIdGeneratorFactory.java", "BodyUseAPI": ["org.neo4j.kernel.ha.HaIdGeneratorFactory.HaIdGenerator.close()"], "Fixed commit": "7e415915a67d50c6cfca4f60dbaebbcb8d468f73", "Url": "https://api.github.com/repos/AlexanderYastrebov/neo4j", "Date": "2012-11-30T01:32:34Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(t.isEmpty())) { tList.add(new org.sylfra.idea.plugins.revu.ui.forms.issue.IssueTag(t)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/807/buggy-version/src.main.java.org.sylfra.idea.plugins.revu.ui.forms.issue.IssueMainForm.java", "BodyUseAPI": ["java.util.List<org.sylfra.idea.plugins.revu.ui.forms.issue.IssueTag>.add(org.sylfra.idea.plugins.revu.ui.forms.issue.IssueTag)"], "Fixed commit": "fdd492573dac1eb5521adeccbe12572e179e0c22", "Url": "https://api.github.com/repos/magento-ecg/idea-plugin-revu", "Date": "2013-07-22T10:42:12Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(store.close())) { java.lang.System.out.println(\"Konnte verbindung NICHT trennen!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4225/buggy-version/src.de.simonlaux.Survey.ShowSurveyServlet.java", "BodyUseAPI": [], "Fixed commit": "4067bd1af63bbfba6579b20fe6e907bbff1a5d7a", "Url": "https://api.github.com/repos/Simon-Laux/tom-survey", "Date": "2016-04-29T07:04:31Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.org.sucu.tatupload.Settings.ArrayListLoader<java.lang.String>.loadList(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (params == null) { params = uk.org.sucu.tatupload.parse.Parameters.getDefaultList(parameter, context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8479/buggy-version/src.uk.org.sucu.tatupload.Settings.java", "BodyUseAPI": [], "Fixed commit": "16c5db22247763cae770bf05e4a2a4e8826e85b3", "Url": "https://api.github.com/repos/ACLay/TATupload", "Date": "2015-01-22T11:56:14Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.org.sucu.tatupload.Settings.ArrayListLoader<uk.org.sucu.tatupload.message.Text>.loadList(context.getString(R.string.pending_text_list_key))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (texts == null) { texts = new java.util.ArrayList<uk.org.sucu.tatupload.message.Text>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8479/buggy-version/src.uk.org.sucu.tatupload.Settings.java", "BodyUseAPI": [], "Fixed commit": "16c5db22247763cae770bf05e4a2a4e8826e85b3", "Url": "https://api.github.com/repos/ACLay/TATupload", "Date": "2015-01-22T11:56:14Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.org.sucu.tatupload.Settings.ArrayListLoader<uk.org.sucu.tatupload.message.Text>.loadList(context.getString(R.string.processed_text_list_key))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (texts == null) { texts = new java.util.ArrayList<uk.org.sucu.tatupload.message.Text>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8479/buggy-version/src.uk.org.sucu.tatupload.Settings.java", "BodyUseAPI": [], "Fixed commit": "16c5db22247763cae770bf05e4a2a4e8826e85b3", "Url": "https://api.github.com/repos/ACLay/TATupload", "Date": "2015-01-22T11:56:14Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((exprUnary.attrExpectedTyp()) instanceof de.peeeq.wurstscript.types.WurstTypeJassInt) { return de.peeeq.wurstscript.types.WurstTypeInt.instance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2286/buggy-version/de.peeeq.wurstscript.src.de.peeeq.wurstscript.attributes.AttrExprExpectedType.java", "BodyUseAPI": [], "Fixed commit": "688efaa71f91651d0c7bef0f2a075ca641afaf78", "Url": "https://api.github.com/repos/peq/WurstScript", "Date": "2012-11-13T19:59:12Z"},
{"Line": "=>1017", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.DUE_AMOUNT) == 0) { tf_arrius.setText(\"00.00\"); }else { calArrius(); calDate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1296/buggy-version/suneraInvestment_system.src.com.softidea.www.private_access.adminstrator.Admin_installmentManagment.java", "BodyUseAPI": [], "Fixed commit": "a9e98c73cd832cb5a8808f0c1da2ea26127a3d97", "Url": "https://api.github.com/repos/softidea/suneraInvestment", "Date": "2016-09-15T15:12:02Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.getConfig().exists(\"data.mysql\"))) { this.getConfig().set(\"data.mysql.host\", \"localhost\"); this.getConfig().set(\"data.mysql.port\", 3306); this.getConfig().set(\"data.mysql.username\", \"root\"); this.getConfig().set(\"data.mysql.database\", \"bungeepe\"); this.getConfig().set(\"data.mysql.password\", \"\"); edited = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4259/buggy-version/src.main.java.de.bluplayz.BungeePE.java", "BodyUseAPI": [], "Fixed commit": "c4d213202973f6b5d941e73c14b1d6d91516c28b", "Url": "https://api.github.com/repos/Bluplayz/BungeePE", "Date": "2017-10-07T17:21:53Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.getConfig().exists(\"language.console\"))) { this.getConfig().set(\"language.console\", \"de_DE\"); edited = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4259/buggy-version/src.main.java.de.bluplayz.BungeePE.java", "BodyUseAPI": [], "Fixed commit": "c4d213202973f6b5d941e73c14b1d6d91516c28b", "Url": "https://api.github.com/repos/Bluplayz/BungeePE", "Date": "2017-10-07T17:21:53Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.getConfig().exists(\"maxplayers\"))) { this.getConfig().set(\"maxplayers\", 200); edited = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4259/buggy-version/src.main.java.de.bluplayz.BungeePE.java", "BodyUseAPI": [], "Fixed commit": "c4d213202973f6b5d941e73c14b1d6d91516c28b", "Url": "https://api.github.com/repos/Bluplayz/BungeePE", "Date": "2017-10-07T17:21:53Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.getConfig().exists(\"data.netty.port\"))) { this.getConfig().set(\"data.netty.port\", 19132); edited = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4259/buggy-version/src.main.java.de.bluplayz.BungeePE.java", "BodyUseAPI": [], "Fixed commit": "c4d213202973f6b5d941e73c14b1d6d91516c28b", "Url": "https://api.github.com/repos/Bluplayz/BungeePE", "Date": "2017-10-07T17:21:53Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.getConfig().exists(\"server\"))) { this.getConfig().set(\"server.options.priorities\", new java.lang.String[]{ \"SilentLobby-1\", \"Lobby-1\" }); this.getConfig().set(\"server.Lobby-1.address\", \"localhost:19133\"); this.getConfig().set(\"server.Lobby-1.permission\", \"\"); this.getConfig().set(\"server.SilentLobby-1.address\", \"localhost:19140\"); this.getConfig().set(\"server.SilentLobby-1.permission\", \"bungeepe.silentlobby\"); edited = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4259/buggy-version/src.main.java.de.bluplayz.BungeePE.java", "BodyUseAPI": [], "Fixed commit": "c4d213202973f6b5d941e73c14b1d6d91516c28b", "Url": "https://api.github.com/repos/Bluplayz/BungeePE", "Date": "2017-10-07T17:21:53Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.getConfig().exists(\"server.options.priorities\"))) { this.getConfig().set(\"server.options.priorities\", new java.lang.String[]{ \"SilentLobby-1\", \"Lobby-1\" }); edited = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4259/buggy-version/src.main.java.de.bluplayz.BungeePE.java", "BodyUseAPI": [], "Fixed commit": "c4d213202973f6b5d941e73c14b1d6d91516c28b", "Url": "https://api.github.com/repos/Bluplayz/BungeePE", "Date": "2017-10-07T17:21:53Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.getConfig().exists(\"motd\"))) { this.getConfig().set(\"motd\", \"&cProxy made by &bBluplayz! :)\"); edited = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4259/buggy-version/src.main.java.de.bluplayz.BungeePE.java", "BodyUseAPI": [], "Fixed commit": "c4d213202973f6b5d941e73c14b1d6d91516c28b", "Url": "https://api.github.com/repos/Bluplayz/BungeePE", "Date": "2017-10-07T17:21:53Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.getConfig().exists(\"log_commands\"))) { this.getConfig().set(\"log_commands\", true); edited = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4259/buggy-version/src.main.java.de.bluplayz.BungeePE.java", "BodyUseAPI": [], "Fixed commit": "c4d213202973f6b5d941e73c14b1d6d91516c28b", "Url": "https://api.github.com/repos/Bluplayz/BungeePE", "Date": "2017-10-07T17:21:53Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.getConfig().exists(\"language.fallback\"))) { this.getConfig().set(\"language.fallback\", \"en_EN\"); edited = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4259/buggy-version/src.main.java.de.bluplayz.BungeePE.java", "BodyUseAPI": [], "Fixed commit": "c4d213202973f6b5d941e73c14b1d6d91516c28b", "Url": "https://api.github.com/repos/Bluplayz/BungeePE", "Date": "2017-10-07T17:21:53Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edited) { this.getConfig().save(); this.getConfig().reload(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4259/buggy-version/src.main.java.de.bluplayz.BungeePE.java", "BodyUseAPI": [], "Fixed commit": "c4d213202973f6b5d941e73c14b1d6d91516c28b", "Url": "https://api.github.com/repos/Bluplayz/BungeePE", "Date": "2017-10-07T17:21:53Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mod.isUpdateable()) { updateMod(mod, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3430/buggy-version/src.aohara.tinkertime.ModManager.java", "BodyUseAPI": ["aohara.tinkertime.ModManager.updateMod(aohara.tinkertime.models.Mod,boolean)"], "Fixed commit": "140f4bcd3fbbe8ab15a196fe8576789c759aa579", "Url": "https://api.github.com/repos/oharaandrew314/TinkerTime", "Date": "2015-05-01T02:41:41Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Long>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (uid == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2582/buggy-version/src.main.java.org.alessiodm.ringer.web.api.v1.auth.InMemoryAuthService.java", "BodyUseAPI": [], "Fixed commit": "e881258baea0529d906b9586047c462d8d680655", "Url": "https://api.github.com/repos/alessiodm/ringer", "Date": "2013-04-27T16:15:32Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (p != null) { if ((p.measure) != null) { try { str.add((\"\" + ((int) (p.measure.getAverage())))); str.add((\"\" + ((int) (p.measure.getMax())))); str.add((\"\" + ((int) (p.measure.getMin())))); str.add((\"\" + ((int) (p.measure.getStddev())))); data.add(new com.num.models.Row(p.getDst().getTagname(), str)); } catch (java.lang.Exception e) { e.printStackTrace(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2080/buggy-version/client.Ping.src.com.num.models.Measurement.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)", "p.getDst().getTagname()", "java.util.ArrayList<java.lang.String>.add(java.lang.String)", "p.measure.getStddev()", "com.num.models.Ping.getDst()", "p.measure.getMin()", "java.util.ArrayList<java.lang.String>.add(java.lang.String)", "p.measure.getMax()", "java.util.ArrayList<com.num.models.Row>.add(com.num.models.Row)", "java.util.ArrayList<java.lang.String>.add(java.lang.String)", "p.measure.getAverage()"], "Fixed commit": "d9ca08c58358877652e48007d91e4c890a033487", "Url": "https://api.github.com/repos/abhishekjain89/androidperformance", "Date": "2012-03-28T17:25:57Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fieldValues == null) { object = createInstance(parser, type); if (childContext == null) { childContext = parser.setContext(context, object, fieldName); } return ((T) (object)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3048/buggy-version/src.main.java.com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.java", "BodyUseAPI": [], "Fixed commit": "3c24a3419ea0307c1b278ab1436db13e08511f3c", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2013-07-26T17:21:28Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(once)) { r.setCamX(((-(GameManager.TS)) - 4)); once = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/995/buggy-version/StrozorEngine.src.com.strozor.game.Crea.java", "BodyUseAPI": [], "Fixed commit": "fadaaa23c34c5552222f7cf9c54492e28d15557e", "Url": "https://api.github.com/repos/ManuStrozor/Square-Monster", "Date": "2017-12-08T18:54:56Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (players == null) { size = 0; }else { size = players.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6293/buggy-version/app.src.main.java.samdev.de.projectcom.view.activities.PlayerActivity.java", "BodyUseAPI": ["java.util.List<samdev.de.projectcom.model.Player>.size()"], "Fixed commit": "62efd2797939d1d43223a5ee698706335187ea30", "Url": "https://api.github.com/repos/Sam-Development/ProjectCom", "Date": "2015-12-14T16:35:13Z"},
{"Line": "=>1503", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((qd.getSize()) == 0) { size = args.getFsCapacity(); }else { size = qd.getSize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5481/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.vnxunity.VNXUnityFileStorageDevice.java", "BodyUseAPI": ["com.emc.storageos.db.client.model.QuotaDirectory.getSize()"], "Fixed commit": "c99ad9d5df639b3058535bfef9e14ab7fe91e79b", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-05-23T08:36:19Z"},
{"Line": "=>1603", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((qd.getSize()) == 0) { size = args.getFsCapacity(); }else { size = qd.getSize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5481/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.vnxunity.VNXUnityFileStorageDevice.java", "BodyUseAPI": ["com.emc.storageos.db.client.model.QuotaDirectory.getSize()"], "Fixed commit": "c99ad9d5df639b3058535bfef9e14ab7fe91e79b", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-05-23T08:36:19Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/600/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "55785934d7c80edcd5166d3991a656495b583220", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-04-06T05:28:16Z"},
{"Line": "=>519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<?>.getResultingDescriptor()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (descriptor instanceof org.jetbrains.kotlin.descriptors.impl.SyntheticFieldDescriptor) { dispatchReceiverParameter = ((org.jetbrains.kotlin.descriptors.impl.SyntheticFieldDescriptor) (descriptor)).getDispatchReceiverParameterForBackend(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1317/buggy-version/compiler.backend.src.org.jetbrains.kotlin.codegen.StackValue.java", "BodyUseAPI": [], "Fixed commit": "874560df9d1edf198d4f22615d736eb83bce118e", "Url": "https://api.github.com/repos/dzharkov/kotlin", "Date": "2016-01-25T10:26:00Z"},
{"Line": "=>610", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTabLayout) != null) mTabLayout.setupWithViewPager(pager);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/9104/buggy-version/app.src.main.java.me.ccrama.redditslide.Activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7d2688a700f9af8223acb9c88e91becb879dc80f", "Url": "https://api.github.com/repos/Nxt3/Slide", "Date": "2016-03-06T00:55:36Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["project.getBuildscript().getConfigurations().findByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (configuration == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6230/buggy-version/plugins.gradle.tooling-extension-impl.src.org.jetbrains.plugins.gradle.tooling.builder.ModelBuildScriptClasspathBuilderImpl.java", "BodyUseAPI": [], "Fixed commit": "f9d754d45025588ccd1540bda9e01bb6338db5bc", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2014-05-14T11:05:55Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(isDetached())) && (isVisible())) { mSwipeRefreshLayout.setRefreshing(false); getView().findViewById(R.id.progressBar1).setVisibility(View.GONE); getView().findViewById(R.id.news_container).setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5357/buggy-version/UnivMobile.src.org.unpidf.univmobile.ui.fragments.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "b8cd3cdc7182b6c371eed9c0d40f5bf8b1373b89", "Url": "https://api.github.com/repos/univmobile/unm-android", "Date": "2015-09-15T10:00:00Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.InputStream.read()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (data == (FilterInputStreamCache.END_OF_STREAM)) { return FilterInputStreamCache.END_OF_STREAM; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/426/buggy-version/src.org.exist.util.io.AbstractFilterInputStreamCache.java", "BodyUseAPI": [], "Fixed commit": "f01ae9c9fe5fe438240242939685c5f6c8bbd483", "Url": "https://api.github.com/repos/jensopetersen/exist", "Date": "2015-06-11T11:33:45Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.exist.util.io.FilterInputStreamCache.read()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (data == (FileFilterInputStreamCache.END_OF_STREAM)) { return FilterInputStreamCache.END_OF_STREAM; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/426/buggy-version/src.org.exist.util.io.CachingFilterInputStream.java", "BodyUseAPI": [], "Fixed commit": "f01ae9c9fe5fe438240242939685c5f6c8bbd483", "Url": "https://api.github.com/repos/jensopetersen/exist", "Date": "2015-06-11T11:33:45Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((region.getCityById(obj.getId(), obj.getName(region.useEnglishNames()))) == null) { region.addCityToPreloadedList(((net.osmand.data.City) (obj))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5523/buggy-version/OsmAnd.src.net.osmand.plus.activities.search.SearchCityByNameActivity.java", "BodyUseAPI": ["net.osmand.plus.resources.RegionAddressRepository.addCityToPreloadedList(net.osmand.data.City)"], "Fixed commit": "962f111e057ee1cf33816d7be6de97b88f79cf4e", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2015-01-16T17:08:21Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tplPath.charAt(((tplPath.length()) - 1))) == '/') { tplPath = tplPath.substring(0, ((tplPath.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6446/buggy-version/amberjack-hod.src.main.java.com.hashvoid.amberjack.hod.resource.ResourceMethod.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "8cb393361b070b34136dae7bb10b9ca93f802c71", "Url": "https://api.github.com/repos/randondiesel/amberjack", "Date": "2017-02-11T17:53:11Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((startDate.compareTo(upperBound)) > 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8679/buggy-version/app.src.main.java.ca.antonious.habittracker.models.Habit.java", "BodyUseAPI": [], "Fixed commit": "dd455adf7032224c2a5ad38c738b49ca962e9c6c", "Url": "https://api.github.com/repos/gantonious/HabitTracker", "Date": "2016-09-16T05:14:07Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getDataSource().getRow(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (row == null) { getDataSource().ensureAvailability(start, end); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8896/buggy-version/vaadin-combobox-multiselect-addon.src.main.java.org.vaadin.addons.client.ComboBoxMultiselectConnector.java", "BodyUseAPI": [], "Fixed commit": "3bb93f26ae24c9edc19b11ef348def7dfb6c2af2", "Url": "https://api.github.com/repos/bonprix/vaadin-combobox-multiselect", "Date": "2017-10-18T22:11:37Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.jiangzuomeng.module.TravelItem>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((travelItem.media) != null) { uri = android.net.Uri.parse(travelItem.media); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6520/buggy-version/code.android.TravelMap.app.src.main.java.com.jiangzuomeng.travelmap.MainActivity.java", "BodyUseAPI": ["android.net.Uri.parse(travelItem.media)"], "Fixed commit": "61f85c9359d45d032a4557643d29cc3c965a37f3", "Url": "https://api.github.com/repos/ekuri/ManLvTu-android", "Date": "2015-11-27T08:07:04Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.os.Build.MODEL.contains(\"Nexus\")) { this.setShaderProgram(org.andengine.opengl.shader.PositionTextureCoordinatesShaderProgram.getInstance()); }else { this.setShaderProgram(Blur.RadialBlurShaderProgram.getInstance(stats.drunkness)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/498/buggy-version/src.fi.hackoid.Main.java", "BodyUseAPI": [], "Fixed commit": "aaaa19e338778af95e8ce9cb4dfdb611e40aa51d", "Url": "https://api.github.com/repos/Logima/hackoid", "Date": "2013-04-07T09:32:13Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.Ben12345rocks.VotingPlugin.Objects.Reward.getRandomRewards()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((rewards.size()) > 0) { java.lang.String reward = rewards.get((((int) (java.lang.Math.random())) * (rewards.size()))); if (reward.equalsIgnoreCase(\"\")) { user.giveReward(com.Ben12345rocks.VotingPlugin.Config.ConfigRewards.getInstance().getReward(reward)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4124/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Objects.Reward.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<java.lang.String>.size()"], "Fixed commit": "3fdebc47c34ab16829653275e747127ec1fbc57a", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-07-10T19:18:35Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((eShopVerwaltung.getArtikel(a.getNummer()).getBestand()) >= (a.getBestellteMenge())) { eShopVerwaltung.setBestand(a.getNummer(), neuerBestand, kunde); }else { java.lang.System.out.println(((\"Der Bestand des Artikels \" + (a.getName())) + \" ist geringer als die bestellte Mnege\")); java.lang.System.out.println(((\"Noch vorhandener Bestand: \" + (eShopVerwaltung.getArtikel(a.getNummer()).getBestand())) + \"Stueck !\")); java.lang.System.out.println((\"Die von Ihnen bestellte Menge: \" + (a.getBestellteMenge()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6109/buggy-version/src.eshop.local.ui.cui.eshopClientCUI.java", "BodyUseAPI": ["eshop.local.domain.EShopVerwaltung.getArtikel(a.getNummer())", "eshop.local.domain.EShopVerwaltung.setBestand(a.getNummer(),int,eshop.local.ui.cui.Kunde)", "eshop.local.ui.cui.Artikel.getName()", "eshop.local.ui.cui.Artikel.getNummer()", "java.io.PrintStream.println(((\"Noch vorhandener Bestand: \" + (eShopVerwaltung.getArtikel(a.getNummer()).getBestand())) + \"Stueck !\"))", "eShopVerwaltung.getArtikel(a.getNummer()).getBestand()", "java.io.PrintStream.println(((\"Der Bestand des Artikels \" + (a.getName())) + \" ist geringer als die bestellte Mnege\"))", "eshop.local.ui.cui.Artikel.getNummer()", "java.io.PrintStream.println((\"Die von Ihnen bestellte Menge: \" + (a.getBestellteMenge())))", "eshop.local.ui.cui.Artikel.getBestellteMenge()"], "Fixed commit": "72a11480839eeaaa7e6f242f036debaac4c2cfa7", "Url": "https://api.github.com/repos/ggritzan/Webshop_Prog2", "Date": "2013-05-14T14:00:48Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((componentOrDependency.getVersion()) == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/45/buggy-version/sustain.src.main.java.net.happyonroad.component.core.support.Dependency.java", "BodyUseAPI": [], "Fixed commit": "07f4b3d99d03d4ee6e7f69dd4e2557d9acc3a143", "Url": "https://api.github.com/repos/Kadvin/spring-component-framework", "Date": "2014-12-22T10:51:16Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mListeners) != null) { for (uk.co.deanwild.materialshowcaseview.IShowcaseListener listener : mListeners) { listener.onShowcaseDismissed(this); } mListeners.clear(); mListeners = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6913/buggy-version/library.src.main.java.uk.co.deanwild.materialshowcaseview.MaterialShowcaseView.java", "BodyUseAPI": [], "Fixed commit": "d34a3e06c226ee7d1236613e30e93d19aa234de1", "Url": "https://api.github.com/repos/deano2390/MaterialShowcaseView", "Date": "2015-08-18T10:59:09Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (usingBuiltInTemplate) { versionInfoSrc.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5838/buggy-version/msbuild-maven-plugin.src.main.java.uk.org.raje.maven.plugin.msbuild.VersionInfoMojo.java", "BodyUseAPI": [], "Fixed commit": "783e7c7dde4a46e3920c05213ac97be4864b0fdd", "Url": "https://api.github.com/repos/andi12/msbuild-maven-plugin", "Date": "2013-11-02T16:09:54Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timer) == null) { timer = new java.util.Timer(isDaemon); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1624/buggy-version/src.main.java.jfxtras.labs.animation.Timer.java", "BodyUseAPI": [], "Fixed commit": "83af1054bfcf54d50ed7eee354f9d465d827f2ac", "Url": "https://api.github.com/repos/JFXtras/jfxtras-labs", "Date": "2013-08-16T06:57:46Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timer) != null) { timer.cancel(); timer = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1624/buggy-version/src.main.java.jfxtras.labs.animation.Timer.java", "BodyUseAPI": [], "Fixed commit": "83af1054bfcf54d50ed7eee354f9d465d827f2ac", "Url": "https://api.github.com/repos/JFXtras/jfxtras-labs", "Date": "2013-08-16T06:57:46Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (webEngine.getDocument().getBaseURI().equals(\"about:blank\")) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5396/buggy-version/src.main.java.fetcher.model.Utils.java", "BodyUseAPI": [], "Fixed commit": "f7ca84ebcd349286c7fc649af77454453e92938d", "Url": "https://api.github.com/repos/arocketman/URL-pad", "Date": "2014-11-11T20:01:52Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((opcodeValue >= 0) && (opcodeValue < (opcodesByValue.length))) { return opcodesByValue[opcodeValue]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4094/buggy-version/dexlib2.src.main.java.org.jf.dexlib2.Opcodes.java", "BodyUseAPI": [], "Fixed commit": "d7cd52308e6120e6750c4f46d7357e8e5033619c", "Url": "https://api.github.com/repos/whydoubt/smali", "Date": "2013-11-27T01:34:52Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jf.dexlib2.dexbacked.instruction.DexBackedUnknownInstruction.readUbyte(org.jf.dexlib2.dexbacked.instruction.DexBackedUnknownInstruction)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (opcode == 0) { opcode = dexFile.readUshort(instructionStart); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4094/buggy-version/dexlib2.src.main.java.org.jf.dexlib2.dexbacked.instruction.DexBackedUnknownInstruction.java", "BodyUseAPI": [], "Fixed commit": "d7cd52308e6120e6750c4f46d7357e8e5033619c", "Url": "https://api.github.com/repos/whydoubt/smali", "Date": "2013-11-27T01:34:52Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.sqrt(((java.lang.Math.pow(((targetX) - (coordinates[0])), 2)) + (java.lang.Math.pow(((targetY) - (coordinates[1])), 2))))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (distance < (agent.getSpeed())) { agent.setCoordinates(targetX, targetY); }else { double[] movement = new double[]{ (((targetX) - (coordinates[0])) / distance) * (agent.getSpeed()), (((targetY) - (coordinates[1])) / distance) * (agent.getSpeed()) }; agent.setCoordinates(((coordinates[0]) + (movement[0])), ((coordinates[1]) + (movement[1]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2882/buggy-version/animalSimulation.src.animalsimulation.behavior.movement.BeeMovement.java", "BodyUseAPI": ["animalsimulation.model.base.Agent.setCoordinates(double,double)", "animalsimulation.model.base.Agent.getSpeed()", "animalsimulation.model.base.Agent.setCoordinates(animalsimulation.behavior.movement.BeeMovement,animalsimulation.behavior.movement.BeeMovement)", "animalsimulation.model.base.Agent.getSpeed()"], "Fixed commit": "f348d4898d668c4060277226ed493d95a61c49f4", "Url": "https://api.github.com/repos/HiradEmami/AnimalMAS", "Date": "2017-09-29T13:24:32Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["openTied.start.wp.getChord().getMP()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (startMp == null) { context.reportError(\"Tied can not be closed; start chord does not exist\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/385/buggy-version/musicxml-in.src.com.xenoage.zong.io.musicxml.in.util.OpenUnnumberedTieds.java", "BodyUseAPI": [], "Fixed commit": "b014dd559cd19d4bed2ac820eea68cf626bf30f5", "Url": "https://api.github.com/repos/Xenoage/Zong", "Date": "2016-12-29T08:35:00Z"},
{"Line": "=>703", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((locationManager) == null) { locationManager = new ca.cumulonimbus.pressurenetsdk.CbLocationManager(getApplicationContext()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2896/buggy-version/src.ca.cumulonimbus.pressurenetsdk.CbService.java", "BodyUseAPI": [], "Fixed commit": "7ba96f1dd47b39c5351fce0b3e1a31e96141a929", "Url": "https://api.github.com/repos/Cbsoftware/pressureNET-SDK", "Date": "2014-01-04T19:50:55Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bufferedWriter) == null) { org.jumpmind.metl.core.runtime.resource.IStreamable streamable = ((org.jumpmind.metl.core.runtime.resource.IStreamable) (getResourceReference())); if ((!(append)) && (streamable.supportsDelete())) { streamable.delete(relativePathAndFile); } log(LogLevel.INFO, java.lang.String.format(\"Writing text file to %s\", streamable.toString())); bufferedWriter = initializeWriter(streamable.getOutputStream(relativePathAndFile, mustExist)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/837/buggy-version/metl-core.src.main.java.org.jumpmind.metl.core.runtime.component.TextFileWriter.java", "BodyUseAPI": [], "Fixed commit": "f2bf65018d2f297902e44d2d33325fffaef487dd", "Url": "https://api.github.com/repos/JumpMind/metl", "Date": "2015-11-05T00:34:34Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.getTroubled()) { if ((this.getLastTroubledEvent()) == null) { org.openjena.atlas.logging.Log.warn(this, (\"Curatable object is troubled, but has no trouble event! Id: \" + (this.getId()))); }else { details = this.getLastTroubledEvent().toString(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3656/buggy-version/gemma-model.src.main.java.ubic.gemma.model.common.auditAndSecurity.curation.AbstractCuratableValueObject.java", "BodyUseAPI": [], "Fixed commit": "de2f5cdfa62b097ab4d8ed34f859560895d622c6", "Url": "https://api.github.com/repos/PavlidisLab/Gemma", "Date": "2017-03-20T20:26:52Z"},
{"Line": "=>1055", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSearchView) != null) { outState.putBoolean(com.owncloud.android.ui.activity.FileDisplayActivity.KEY_IS_SEARCH_OPEN, (!(mSearchView.isIconified()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6979/buggy-version/src.main.java.com.owncloud.android.ui.activity.FileDisplayActivity.java", "BodyUseAPI": [], "Fixed commit": "9a30673a57141ffd26cb4c2cb404529444abc225", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-23T10:00:13Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.griphyn.vdl.mapping.nodes.AbstractDataNode.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((st.isPrimitive()) || (st.isComposite())) { throw new k.rt.ExecutionException(this, ((\"invalid argument of type '\" + st) + \"' passed to readData: must be a string or a mapped type\")); }else { org.griphyn.vdl.mapping.PhysicalFormat pf = src.map(); if (pf instanceof org.griphyn.vdl.mapping.AbsFile) { org.griphyn.vdl.mapping.AbsFile af = ((org.griphyn.vdl.mapping.AbsFile) (pf)); if (!(af.getProtocol(\"file\").equals(\"file\"))) { throw new k.rt.ExecutionException(this, \"readData only supports local files\"); } readData(dest, af.getPath()); }else { throw new k.rt.ExecutionException(\"readData only supports reading from files\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8500/buggy-version/src.org.griphyn.vdl.karajan.lib.swiftscript.ReadData.java", "BodyUseAPI": [], "Fixed commit": "3b4c863f130331928e28b30083a86e7e78582070", "Url": "https://api.github.com/repos/swift-lang/swift-k", "Date": "2014-10-06T01:23:24Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getAbsolutePath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (location != null) backupLocation.setText(location);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6176/buggy-version/BabyGotBackup.src.edu.vtc.cis4150.BackupDialog.java", "BodyUseAPI": ["javax.swing.JTextField.setText(java.lang.String)"], "Fixed commit": "0b0ac9b5549ce7a1dea478e7048a5bd919e9fab7", "Url": "https://api.github.com/repos/chrisfarnsvt/SoftEngProj", "Date": "2014-11-17T18:22:53Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getAbsolutePath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (location != null) fileLocation.setText(location);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6176/buggy-version/BabyGotBackup.src.edu.vtc.cis4150.BackupDialog.java", "BodyUseAPI": ["javax.swing.JTextField.setText(java.lang.String)"], "Fixed commit": "0b0ac9b5549ce7a1dea478e7048a5bd919e9fab7", "Url": "https://api.github.com/repos/chrisfarnsvt/SoftEngProj", "Date": "2014-11-17T18:22:53Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ako.service.UserService.findByUserName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (userDetails.hasMfaActive()) { tokenHelper.checkAuthority(authToken, userDetails); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3369/buggy-version/src.main.java.com.ako.security.TokenAuthenticationFilter.java", "BodyUseAPI": ["com.ako.security.TokenHelper.checkAuthority(java.lang.String,com.ako.data.User)"], "Fixed commit": "876d8c6af634db526e5e9c6addbedd74a6432fe5", "Url": "https://api.github.com/repos/prashant-rathod/ako", "Date": "2017-11-22T04:10:53Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["develop.odata.fcm.endpoint.FcmRequest.getSendDate()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (sendDate == null) { develop.odata.fcm.endpoint.FcmResponse result = sendMsg(origin); unit.setDone(true); unit.setResult(result); origin.setSendDate(new java.util.Date()); repository.save(unit); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5736/buggy-version/src.main.java.develop.odata.fcm.service.FCMService.java", "BodyUseAPI": [], "Fixed commit": "5d65ba8d82c14ef4e94ad9b039c6a9be32bbe29f", "Url": "https://api.github.com/repos/robert0714/fcmJavaTest", "Date": "2017-12-25T10:20:58Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.robv.android.xposed.XposedHelpers.callMethod(param.args[1],java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (sha == null) { if ((isMyTheme(id)) && (param.args[1].getClass().getName().equals(getClassFor(\"DownloadedThemeHeader\")))) { param.setResult(null); } if (!(dir.exists())) { param.setResult(null); if (bg.nijel.xswiftkey.XSwiftkeyMod.myPrefs.getBoolean(XSwiftkeyActivity.KEY_DEBUG, false)) { android.util.Log.e(\"Xposed\", ((\"xswiftkey THEME ID [\" + id) + \"] exists in themelist.json but not found in themes folder!!! Remove its entry from themelist.\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6858/buggy-version/app.src.main.java.bg.nijel.xswiftkey.XSwiftkeyMod.java", "BodyUseAPI": [], "Fixed commit": "e444eeed6433e2b0d36c4ca8a1ada2f5278cce47", "Url": "https://api.github.com/repos/nijel8/XSwiftkey", "Date": "2016-03-06T06:41:50Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cytoscape.filter.internal.view.DragHandler<V>.getPrimaryView(javax.swing.JComponent)", "org.cytoscape.filter.internal.view.AbstractPanelController<?, V>.getPath(V,javax.swing.JComponent)", "org.cytoscape.filter.internal.view.AbstractPanelController<?, V>.getChild(V,java.util.List<java.lang.Integer>)", "java.awt.datatransfer.Transferable.getTransferData(PathDataFlavor.instance)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(controller.supportsDrop(parent, path, sourceView, targetPath, target))) || (isEquivalentLocation(path, targetPath, target))) { event.rejectDrop(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3544/buggy-version/filter2-impl.src.main.java.org.cytoscape.filter.internal.view.DragHandler.java", "BodyUseAPI": [], "Fixed commit": "42c56c25a1f6d788284f8b915d0ff87ca2052e04", "Url": "https://api.github.com/repos/cytoscape/cytoscape-impl", "Date": "2013-12-17T04:45:58Z"},
{"Line": "=>1093", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(element.getAttribute(\"testers\").isEmpty())) { if (element.getAttribute(\"testers\").contains(\",\")) { pack.addTesters(element.getAttribute(\"testers\").split(\",\")); }else { pack.addTesters(new java.lang.String[]{ element.getAttribute(\"testers\") }); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1690/buggy-version/src.com.atlauncher.data.Settings.java", "BodyUseAPI": ["org.w3c.dom.Element.getAttribute(java.lang.String)", "com.atlauncher.data.Pack.addTesters(java.lang.String[])", "com.atlauncher.data.Pack.addTesters(java.lang.String[])", "org.w3c.dom.Element.getAttribute(java.lang.String)", "org.w3c.dom.Element.getAttribute(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "a5d59030677b0fcb2c62c8244a0dfd10dbfbcd9e", "Url": "https://api.github.com/repos/RyanTheAllmighty/ATLauncher", "Date": "2013-11-17T06:32:39Z"},
{"Line": "=>1100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pack instanceof com.atlauncher.data.PrivatePack) { if (!(element.getAttribute(\"allowedplayers\").isEmpty())) { if (element.getAttribute(\"allowedplayers\").contains(\",\")) { ((com.atlauncher.data.PrivatePack) (pack)).addAllowedPlayers(element.getAttribute(\"testers\").split(\",\")); }else { ((com.atlauncher.data.PrivatePack) (pack)).addAllowedPlayers(new java.lang.String[]{ element.getAttribute(\"allowedplayers\") }); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1690/buggy-version/src.com.atlauncher.data.Settings.java", "BodyUseAPI": [], "Fixed commit": "a5d59030677b0fcb2c62c8244a0dfd10dbfbcd9e", "Url": "https://api.github.com/repos/RyanTheAllmighty/ATLauncher", "Date": "2013-11-17T06:32:39Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.thoughtworks.iamcoach.pos.dao.PromotionDao.getItemPromotionList(item.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((promotions.size()) == 0) { promotions.add(new com.thoughtworks.iamcoach.pos.domain.Promotion()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2979/buggy-version/src.main.java.com.thoughtworks.iamcoach.pos.service.ItemService.java", "BodyUseAPI": ["java.util.List<com.thoughtworks.iamcoach.pos.domain.Promotion>.add(com.thoughtworks.iamcoach.pos.domain.Promotion)"], "Fixed commit": "1a7f72abaef6f83c739015f1e3fdee6f252be01a", "Url": "https://api.github.com/repos/sighWang/pos-java-spring", "Date": "2014-11-07T07:58:54Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.struts.action.DynaActionForm.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.google.common.base.Strings.isNullOrEmpty(orientatorOID)) { org.apache.struts.action.ActionMessages errors = new org.apache.struts.action.ActionErrors(); errors.add(\"finalWorkInformationForm.unexistingTeacher\", new org.apache.struts.action.ActionMessage(\"finalWorkInformationForm.unexistingTeacher\")); saveErrors(request, errors); return mapping.getInputForward(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/283/buggy-version/src.main.java.net.sourceforge.fenixedu.presentationTier.Action.teacher.FinalWorkManagementAction.java", "BodyUseAPI": [], "Fixed commit": "a96ff6cffc3cdc8a465774ccfff39955c52b00e8", "Url": "https://api.github.com/repos/FenixEdu/fenix", "Date": "2014-09-01T09:58:33Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.runetooncraft.plugins.EasyMobArmory.SpawnerHandler.SpawnerHandler.SpawnerCache.containsKey(b.getLocation())) { inv = com.runetooncraft.plugins.EasyMobArmory.SpawnerHandler.SpawnerHandler.SpawnerCache.get(b.getLocation()).getInventory(); }else { inv.setContents(com.runetooncraft.plugins.EasyMobArmory.core.InventorySerializer.frombase64(com.runetooncraft.plugins.EasyMobArmory.SpawnerHandler.SpawnerHandler.Spawners.getString(((\"Spawners.\" + LocString) + \".Inventory\"))).getContents()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5043/buggy-version/EasyMobArmory.src.main.java.com.runetooncraft.plugins.EasyMobArmory.SpawnerHandler.SpawnerHandler.java", "BodyUseAPI": ["com.runetooncraft.plugins.EasyMobArmory.SpawnerHandler.SpawnerHandler.SpawnerCache.get(b.getLocation()).getInventory()", "java.util.HashMap<org.bukkit.Location, com.runetooncraft.plugins.EasyMobArmory.SpawnerHandler.SpawnerCache>.get(b.getLocation())", "org.bukkit.block.Block.getLocation()"], "Fixed commit": "c5bf2bcf46a0aba4d7f7ae453dfdc7fed6f4cc2b", "Url": "https://api.github.com/repos/Deery50/EasyMobArmory", "Date": "2013-08-14T20:12:56Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Deque<java.lang.Object>.getLast()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (element == (com.github.jcomparison.core.array.impl.DefaultArrayComparator.NULL_VALUE)) { element = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8986/buggy-version/core.src.main.java.com.github.jcomparison.core.array.impl.DefaultArrayComparator.java", "BodyUseAPI": [], "Fixed commit": "d9d35a937d811e12f47565349fe312a888b87435", "Url": "https://api.github.com/repos/mmirwaldt/jcomparison", "Date": "2017-06-21T22:20:42Z"},
{"Line": "=>697", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (times == 1) { return java.lang.String.valueOf(ch); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5161/buggy-version/src.main.java.com.sangupta.jerry.util.StringUtils.java", "BodyUseAPI": [], "Fixed commit": "265293bba90d8a4957e33e7f71a8db4a33086882", "Url": "https://api.github.com/repos/sangupta/jerry-core", "Date": "2014-11-11T09:59:48Z"},
{"Line": "=>693", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (times <= 0) { throw new java.lang.IllegalArgumentException(\"Length cannot be less than or equal to zero\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5161/buggy-version/src.main.java.com.sangupta.jerry.util.StringUtils.java", "BodyUseAPI": [], "Fixed commit": "265293bba90d8a4957e33e7f71a8db4a33086882", "Url": "https://api.github.com/repos/sangupta/jerry-core", "Date": "2014-11-11T09:59:48Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.list(java.io.FilenameFilter)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (walkbacks == null) { return new java.lang.String[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4707/buggy-version/kantega-debug-agent.src.main.java.no.kantega.debug.agent.WalkbackPrinter.java", "BodyUseAPI": [], "Fixed commit": "3aa963ff7f9620ad0a9892a7bde499308c966060", "Url": "https://api.github.com/repos/skarsaune/kantega.debug", "Date": "2015-11-29T18:50:14Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.pepsoft.worldpainter.Dimension.getBorder()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (border != (org.pepsoft.worldpainter.Dimension.Border.VOID)) { final java.util.Set<org.pepsoft.worldpainter.layers.Layer> minimumLayers = dimension.getMinimumLayers(); if (!(minimumLayers.isEmpty())) { org.pepsoft.worldpainter.Tile virtualTile = new org.pepsoft.worldpainter.Tile((chunkX >> 3), (chunkZ >> 3), dimension.getMaxHeight()) { @java.lang.Override public synchronized float getHeight(int x, int y) { return floor + (((noiseGenerator.getPerlinNoise(((((getX()) << (TILE_SIZE_BITS)) | x) / (MEDIUM_BLOBS)), ((((getY()) << (TILE_SIZE_BITS)) | y) / (MEDIUM_BLOBS)))) + 0.5F) * variation); } @java.lang.Override public synchronized int getWaterLevel(int x, int y) { return borderLevel; } private static final long serialVersionUID = 1L; }; for (org.pepsoft.worldpainter.layers.Layer layer : minimumLayers) { org.pepsoft.worldpainter.exporting.LayerExporter layerExporter = exporters.get(layer); if (layerExporter instanceof org.pepsoft.worldpainter.exporting.FirstPassLayerExporter) { ((org.pepsoft.worldpainter.exporting.FirstPassLayerExporter) (layerExporter)).render(dimension, virtualTile, result.chunk); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5584/buggy-version/WorldPainter.WPCore.src.main.java.org.pepsoft.worldpainter.exporting.BorderChunkFactory.java", "BodyUseAPI": [], "Fixed commit": "d46bceb1bd85d39cf75250f13a35e71feb90fd02", "Url": "https://api.github.com/repos/Captain-Chaos/WorldPainter", "Date": "2015-11-22T14:58:17Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((paused) == newPause) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2096/buggy-version/Controller.java", "BodyUseAPI": [], "Fixed commit": "0a7b481e6cd42d6e2c61b1a73d45873994763ee4", "Url": "https://api.github.com/repos/PTNobel/AntDefense", "Date": "2017-06-30T06:46:09Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pw.hwk.tutorial.data.TutorialManager.getManager().getConfigs().getCheckGameMode()) { event.getPlayer().setGameMode(GameMode.SURVIVAL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5794/buggy-version/src.main.java.pw.hwk.tutorial.TutorialListener.java", "BodyUseAPI": [], "Fixed commit": "802f50d5534fba7e9c4d4a6cd9de4b8ea77ec2ad", "Url": "https://api.github.com/repos/hawkfalcon/ServerTutorial", "Date": "2016-11-24T20:58:34Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_bc_arguments) == null) { throw new java.lang.Exception((\"null bc_arguments @ \" + (backend.Global.link()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1026/buggy-version/src.backend.Asm_line.java", "BodyUseAPI": [], "Fixed commit": "9e09a43bdd50407d99265e2c6d4f9c2185301ccc", "Url": "https://api.github.com/repos/longmpham/hc12Project", "Date": "2016-03-16T00:23:15Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stockpileTab) != null) { stockpileTab.updateStockpileDialog(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2225/buggy-version/src.main.java.net.nikr.eve.jeveasset.Program.java", "BodyUseAPI": [], "Fixed commit": "debcef70b4192a0f200e1c1b3b6b8e416e41a707", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2015-11-02T15:38:13Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((puzzleBoard) == null) { android.widget.Toast toast = android.widget.Toast.makeText(activity, \"Please Take a PIC first\", Toast.LENGTH_LONG); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5864/buggy-version/Puzzle8.app.src.main.java.com.google.engedu.puzzle8.PuzzleBoardView.java", "BodyUseAPI": [], "Fixed commit": "f065ba80672d12f987368da2b26e3d3a2a331a8e", "Url": "https://api.github.com/repos/NiharikaRay01/CS_with_Android", "Date": "2016-11-16T14:57:22Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((input.length) < 2) { java.lang.System.out.println(\"Incorrect format. Please input two integers seperated with a space (i.e. \\\"0 2\\\").\"); continue loops; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/432/buggy-version/src.edu.ucsb.cs56.projects.games.towers_of_hanoi.view.CmdLineHanoi.java", "BodyUseAPI": [], "Fixed commit": "f67419d7c0c29615bf5d3a9d065999b2c75a7dfa", "Url": "https://api.github.com/repos/ucsb-cs56-projects/cs56-games-towers-of-hanoi", "Date": "2016-02-23T03:14:05Z"},
{"Line": "=>2651", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((github.daneren2005.dsub.service.DownloadService.instance) != null) { github.daneren2005.dsub.domain.MusicDirectory.Entry entry = ((currentPlaying) != null) ? currentPlaying.getSong() : null; listener.onMetadataUpdate(entry, updateType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8368/buggy-version/app.src.main.java.github.daneren2005.dsub.service.DownloadService.java", "BodyUseAPI": [], "Fixed commit": "a1cdd590115bdcdd609c07cc18aee90b53c9a9c4", "Url": "https://api.github.com/repos/daneren2005/Subsonic", "Date": "2015-10-23T01:34:26Z"},
{"Line": "=>552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((field.getRegGroupType()) == (com.ibm.datapower.er.Analytics.ConditionField.REG_GROUP_TYPE.MATCH_ALL_RESULT)) && ((formula.condNodes.size()) > totalResults)) totalResults = formula.condNodes.size();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6270/buggy-version/framework.src.com.ibm.datapower.er.Analytics.AnalyticsProcessor.java", "BodyUseAPI": ["formula.condNodes.size()"], "Fixed commit": "f3ff4f716f87cbcfdca1f85d21a8bc1fa9a7b54e", "Url": "https://api.github.com/repos/ibm-datapower/ertool", "Date": "2016-02-17T01:31:41Z"},
{"Line": "=>599", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.util.ArrayList<android.support.v7.widget.RecyclerView.ViewHolder>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (j < (additions.size())) { additions.remove(j); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5988/buggy-version/animators.src.main.java.jp.wasabeef.recyclerview.animators.BaseItemAnimator.java", "BodyUseAPI": ["java.util.ArrayList<android.support.v7.widget.RecyclerView.ViewHolder>.remove(int)"], "Fixed commit": "4828da3f5d051ae021df330cd13a41a8ec479f7f", "Url": "https://api.github.com/repos/wasabeef/recyclerview-animators", "Date": "2016-01-22T06:44:56Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { new android.app.AlertDialog.Builder(getActivity()).setMessage(R.string.email_password_mismatch).setPositiveButton(R.string.okay, new android.content.DialogInterface.OnClickListener() { public void onClick(android.content.DialogInterface dialog, int button) { } }).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3747/buggy-version/src.org.adaptlab.chpir.android.participanttracker.LoginFragment.java", "BodyUseAPI": [], "Fixed commit": "391db16e54a1481da2b4194eb60bdbf98361b487", "Url": "https://api.github.com/repos/DukeMobileTech/ParticipantTracker", "Date": "2017-09-20T15:28:37Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cancelledFragments.asMap().containsKey(handle)) { org.apache.drill.exec.rpc.control.WorkEventBus.logger.debug(\"Fragment: {} was cancelled. Ignoring fragment handle\", handle); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6501/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.rpc.control.WorkEventBus.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,org.apache.drill.exec.proto.ExecProtos.FragmentHandle)"], "Fixed commit": "8a422326e15d8b5fff472ad6f0226d2976201e84", "Url": "https://api.github.com/repos/jacques-n/incubator-drill", "Date": "2014-10-20T02:58:55Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pivotal.gemfirexd.internal.engine.Misc.getMemStore()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((ms.isSnappyStore()) && (com.pivotal.gemfirexd.internal.engine.Misc.isSecurityEnabled())) { java.lang.String cbTable = com.pivotal.gemfirexd.internal.snappy.CallbackFactoryProvider.getStoreCallbacks().columnBatchTableName(td.getName()); com.pivotal.gemfirexd.internal.catalog.ExternalCatalog ec = ms.getExternalCatalog(); if ((ec == null) && (!(com.pivotal.gemfirexd.internal.engine.Misc.initialDDLReplayInProgress()))) { throw new java.lang.IllegalStateException(\"External catalog not initialized.\"); } if (((ec != null) && (ec.isColumnTable(td.getSchemaName(), td.getName(), true))) || ((com.pivotal.gemfirexd.internal.engine.Misc.getRegion(cbTable, false, true)) != null)) { com.pivotal.gemfirexd.internal.iapi.sql.dictionary.DataDictionary dd = activation.getLanguageConnectionContext().getDataDictionary(); com.pivotal.gemfirexd.internal.iapi.sql.dictionary.TableDescriptor ttd = dd.getTableDescriptor(cbTable, td.getSchemaDescriptor(), activation.getLanguageConnectionContext().getTransactionExecute()); doExecuteGrantRevoke(activation, grant, grantees, new com.pivotal.gemfirexd.internal.iapi.services.io.FormatableBitSet[0], null, false, ttd); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6136/buggy-version/gemfirexd.core.src.main.java.com.pivotal.gemfirexd.internal.impl.sql.execute.TablePrivilegeInfo.java", "BodyUseAPI": ["com.pivotal.gemfirexd.internal.engine.store.GemFireStore.getExternalCatalog()"], "Fixed commit": "d1a6d9276da2f582d0ebfb613c8fa4334297804a", "Url": "https://api.github.com/repos/SnappyDataInc/snappy-store", "Date": "2017-08-09T10:03:31Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((addRequests == null) || ((addRequests.size()) == 0)) { callback.onAddRequestsNotFound(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3824/buggy-version/library.src.main.java.support.im.data.source.AddRequestsRepository.java", "BodyUseAPI": [], "Fixed commit": "17b86712925618972d2a0158ca1d6baad25fdeb3", "Url": "https://api.github.com/repos/qijitech/support-im", "Date": "2016-04-28T15:53:21Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (commit && (holdsLock(tid, pid))) { p.setBeforeImage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6744/buggy-version/mysimpledb.src.java.simpledb.BufferPool.java", "BodyUseAPI": [], "Fixed commit": "c0ba829de977422ecb88a5c878f13fe5f563352c", "Url": "https://api.github.com/repos/ydhuang28/cosc460", "Date": "2014-12-12T10:20:42Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_total) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5103/buggy-version/portal-service.src.com.liferay.portal.kernel.interval.IntervalActionProcessor.java", "BodyUseAPI": [], "Fixed commit": "2d7f60e4a031ad9e583f83838aa4d85313fc20ec", "Url": "https://api.github.com/repos/Preston-Crary/liferay-portal", "Date": "2015-05-27T18:49:20Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mjr.extraplanets.Config.leadOreGeneration) net.minecraftforge.fml.common.registry.GameRegistry.addSmelting(new net.minecraft.item.ItemStack(com.mjr.extraplanets.blocks.ExtraPlanets_Blocks.oreLead, 1, 0), net.minecraftforge.oredict.OreDictionary.getOres(\"ingotLead\").get(0), 0.0F);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3348/buggy-version/src.main.java.com.mjr.extraplanets.recipes.ExtraPlanets_Recipes.java", "BodyUseAPI": [], "Fixed commit": "3770369ae67a961e28eb236129e842e0ff2fdf0d", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2017-04-07T09:57:09Z"},
{"Line": "=>709", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mjr.extraplanets.Config.leadOreGeneration) com.mjr.extraplanets.util.RegisterHelper.setHarvestLevel(com.mjr.extraplanets.blocks.ExtraPlanets_Blocks.oreLead, \"pickaxe\", 2, 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3348/buggy-version/src.main.java.com.mjr.extraplanets.blocks.ExtraPlanets_Blocks.java", "BodyUseAPI": [], "Fixed commit": "3770369ae67a961e28eb236129e842e0ff2fdf0d", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2017-04-07T09:57:09Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.cassandra.db.lifecycle.LogFile.removeUnfinishedLeftovers(<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (failure != null) org.apache.cassandra.db.lifecycle.LogTransaction.logger.error(\"Failed to remove unfinished transaction leftovers for log {}\", log, failure);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7894/buggy-version/src.java.org.apache.cassandra.db.lifecycle.LogTransaction.java", "BodyUseAPI": ["org.slf4j.Logger.error(java.lang.String,java.io.File,java.lang.Throwable)"], "Fixed commit": "ce0ec43a0c4a72fcf55fa7169957ff906ea5746e", "Url": "https://api.github.com/repos/stef1927/cassandra", "Date": "2015-09-10T13:38:07Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((door.getMainTile()) == null) door.selectMainTile();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1267/buggy-version/src.main.java.com.creativemd.littletiles.common.structure.PreviewTileAxis.java", "BodyUseAPI": ["com.creativemd.littletiles.common.structure.LittleDoor.selectMainTile()"], "Fixed commit": "136bcecbe18354c723a46576dc4805b49f803a51", "Url": "https://api.github.com/repos/CreativeMD/LittleTiles", "Date": "2017-01-13T18:01:29Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((door.getMainTile()) != null) door.axisVec.subVec(door.getMainTile().getAbsoluteCoordinates());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1267/buggy-version/src.main.java.com.creativemd.littletiles.common.structure.PreviewTileAxis.java", "BodyUseAPI": ["door.axisVec.subVec(door.getMainTile().getAbsoluteCoordinates())", "com.creativemd.littletiles.common.structure.LittleDoor.getMainTile()", "door.getMainTile().getAbsoluteCoordinates()"], "Fixed commit": "136bcecbe18354c723a46576dc4805b49f803a51", "Url": "https://api.github.com/repos/CreativeMD/LittleTiles", "Date": "2017-01-13T18:01:29Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["justifier.getSubRule().getInnerDeclarations(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (declarationMap.containsKey(declaration)) { map.put(declaration, justifier.getDeclarationValue(declaration)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2373/buggy-version/drools-provenance.src.main.java.org.drools.beliefs.provenance.ProvenanceBeliefSetImpl.java", "BodyUseAPI": ["org.drools.core.spi.Activation.getDeclarationValue(java.lang.String)", "java.util.Map.put(java.lang.String,justifier.getDeclarationValue(declaration))"], "Fixed commit": "086300baeed8ddd36e04191c6244d8b45b39ab6a", "Url": "https://api.github.com/repos/lanceleverich/drools-chance", "Date": "2015-06-30T01:22:08Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.badlogic.ashley.core.ComponentMapper<com.epifania.components.BridgeComponent>.get(com.badlogic.ashley.core.Entity)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(bridgeComponent.continuous)) bridgeSystem.nextTarget(bridgeComponent);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6539/buggy-version/core.src.com.epifania.systems.SwitchSystem.java", "BodyUseAPI": ["com.epifania.systems.BridgeSystem.nextTarget(com.epifania.components.BridgeComponent)"], "Fixed commit": "715bec4988588b0ea0f0869a2e7267681d7e4eb6", "Url": "https://api.github.com/repos/Juankz/Vals-Adventure-Game", "Date": "2017-04-15T00:22:15Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (markerType == (LocationMarker.MarkerType.NOTE)) { mapFragment.removeNoteMarkersNotIn(ids); }else { mapFragment.removePoiMarkersNotIn(ids); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/47/buggy-version/src.main.java.io.mapsquare.osmcontributor.ui.presenters.MapFragmentPresenter.java", "BodyUseAPI": [], "Fixed commit": "24a548e9c1bb005a53c12db15964fbfbf1048a30", "Url": "https://api.github.com/repos/jawg/osm-contributor", "Date": "2016-06-15T15:25:56Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tagIndex != (-1)) { filterTags.set(tagIndex, newTag); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/9202/buggy-version/Team9Project.src.com.indragie.cmput301as1.ExpenseClaimListController.java", "BodyUseAPI": ["java.util.List<com.indragie.cmput301as1.Tag>.set(int,com.indragie.cmput301as1.Tag)"], "Fixed commit": "4b3eeae1b9390b23e25ced118809b25a0ec9c2d8", "Url": "https://api.github.com/repos/CMPUT301W15T09/Team9Project", "Date": "2015-04-07T17:32:57Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tagIndex != (-1)) { filterTags.remove(tagIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/9202/buggy-version/Team9Project.src.com.indragie.cmput301as1.ExpenseClaimListController.java", "BodyUseAPI": ["java.util.List<com.indragie.cmput301as1.Tag>.remove(int)"], "Fixed commit": "4b3eeae1b9390b23e25ced118809b25a0ec9c2d8", "Url": "https://api.github.com/repos/CMPUT301W15T09/Team9Project", "Date": "2015-04-07T17:32:57Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ManageTagsActivity.TagMutation.getOldTag()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (claim.hasTag(tag)) { claim.setTag(claim.getTags().indexOf(tag), newTag); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/9202/buggy-version/Team9Project.src.com.indragie.cmput301as1.ExpenseClaimListController.java", "BodyUseAPI": ["claim.getTags().indexOf(com.indragie.cmput301as1.Tag)", "com.indragie.cmput301as1.ExpenseClaim.getTags()", "com.indragie.cmput301as1.ExpenseClaim.setTag(claim.getTags().indexOf(tag),com.indragie.cmput301as1.Tag)"], "Fixed commit": "4b3eeae1b9390b23e25ced118809b25a0ec9c2d8", "Url": "https://api.github.com/repos/CMPUT301W15T09/Team9Project", "Date": "2015-04-07T17:32:57Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (j == (ExperimentalC.times)) { java.lang.System.out.println(answer1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8278/buggy-version/ExperimentalC.java", "BodyUseAPI": [], "Fixed commit": "3ce2bdd058cf42eabef6fb5bd30ccf785cbcb3c7", "Url": "https://api.github.com/repos/TheOptimas/ClientServerProjectUNF", "Date": "2017-03-10T02:32:45Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((q.getLanguage()) != null) { this.language = q.getLanguage().ordinal(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2980/buggy-version/app.src.main.java.es.coru.andiag.myquotes.utils.db.QuoteDAO.java", "BodyUseAPI": [], "Fixed commit": "e330d79cbaa713dd13d913954fe3d0287f01ad43", "Url": "https://api.github.com/repos/AndIag/MyQuotes", "Date": "2016-02-11T15:21:08Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((response.getHeaders()) != null) && (response.getHeaders().containsKey(\"Location\"))) { resp.addHeader(\"Location\", response.getHeaders().get(\"Location\").get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2441/buggy-version/src.main.java.com.sonian.elasticsearch.http.jetty.JettyHttpServerRestChannel.java", "BodyUseAPI": ["javax.servlet.http.HttpServletResponse.addHeader(java.lang.String,response.getHeaders().get(\"Location\").get(0))", "response.getHeaders().get(java.lang.String)", "response.getHeaders().get(\"Location\").get(int)", "org.elasticsearch.rest.RestResponse.getHeaders()"], "Fixed commit": "f8e859002cd5baa88e644eb7668b22fd6d488aae", "Url": "https://api.github.com/repos/yuderbin/jetty-for-elasticsearch", "Date": "2015-10-13T12:50:51Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["valandur.webapi.servlet.ServletData.getRequestBody()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (json == null) return java.util.Optional.empty();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7732/buggy-version/src.main.java.valandur.webapi.servlet.ServletData.java", "BodyUseAPI": [], "Fixed commit": "0c60fda9f82bda41ca89328ebdb7d9eb2f433466", "Url": "https://api.github.com/repos/Valandur/Web-API", "Date": "2017-08-24T20:00:15Z"},
{"Line": "=>913", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (array instanceof java.util.List) { final int index = (array.size()) - 1; final java.util.List list = ((java.util.List) (array)); com.alibaba.fastjson.parser.DefaultJSONParser.ResolveTask task = getLastResolveTask(); task.setFieldDeserializer(new com.alibaba.fastjson.parser.deserializer.ListResolveFieldDeserializer(this, list, index)); task.setOwnerContext(context); setResolveStatus(com.alibaba.fastjson.parser.DefaultJSONParser.NONE); }else { com.alibaba.fastjson.parser.DefaultJSONParser.ResolveTask task = getLastResolveTask(); task.setFieldDeserializer(new com.alibaba.fastjson.parser.deserializer.CollectionResolveFieldDeserializer(this, array)); task.setOwnerContext(context); setResolveStatus(com.alibaba.fastjson.parser.DefaultJSONParser.NONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7581/buggy-version/src.main.java.com.alibaba.fastjson.parser.DefaultJSONParser.java", "BodyUseAPI": ["java.util.Collection.size()", "com.alibaba.fastjson.parser.DefaultJSONParser.ResolveTask.setFieldDeserializer(com.alibaba.fastjson.parser.deserializer.CollectionResolveFieldDeserializer)"], "Fixed commit": "316e79ba4f466aa80cda2b588b3fc17538115ab7", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2013-07-27T04:00:32Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file instanceof com.intellij.testFramework.LightVirtualFile) { fileType = ((com.intellij.testFramework.LightVirtualFile) (file)).getOriginalFile().getFileType(); }else { fileType = file.getFileType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/969/buggy-version/src.com.perl5.lang.mason.MasonPerlFileViewProviderFactory.java", "BodyUseAPI": ["com.intellij.openapi.vfs.VirtualFile.getFileType()"], "Fixed commit": "6dd30527c91bef0d769dd152474f944ee65c8ab3", "Url": "https://api.github.com/repos/Camelcade/Perl5-IDEA", "Date": "2016-01-07T09:39:25Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cmput301w16t01crimsonhorizons.parkinghelper.BidsForStall.bidResults.size()) == 0) { cmput301w16t01crimsonhorizons.parkinghelper.BidsForStall.stall.setStatus(\"Available\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/810/buggy-version/ParkingHelper.app.src.main.java.cmput301w16t01crimsonhorizons.parkinghelper.BidsForStall.java", "BodyUseAPI": [], "Fixed commit": "e6769c887a085aa4da3024663edeaa2935945764", "Url": "https://api.github.com/repos/CMPUT301W16T01/Crimson_Horizons", "Date": "2016-04-03T22:45:36Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lu.fisch.structorizer.elements.Instruction.getHiddenDeclarations()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (flock != null) { return flock.setSelected(_sel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6937/buggy-version/src.lu.fisch.structorizer.elements.Instruction.java", "BodyUseAPI": ["lu.fisch.structorizer.gui.SelectedSequence.setSelected(boolean)"], "Fixed commit": "2695823b675167a0e6b83cc60dd206eddc0bbeb4", "Url": "https://api.github.com/repos/fesch/Structorizer.Desktop", "Date": "2017-12-07T12:07:10Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (object == null) { out.writeNull(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3572/buggy-version/src.main.java.com.alibaba.fastjson.serializer.JSONAwareSerializer.java", "BodyUseAPI": [], "Fixed commit": "3a2c9322c1e149c929a0703ce8b28689a41355f4", "Url": "https://api.github.com/repos/JavaNaive/fastjson", "Date": "2017-07-13T05:23:30Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.antlr.runtime.Token.getInputStream()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (input != null) { srcName = input.getSourceName(); if (srcName != null) srcName = org.stringtemplate.v4.misc.Misc.getFileName(srcName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1061/buggy-version/src.org.stringtemplate.v4.misc.ErrorManager.java", "BodyUseAPI": ["org.antlr.runtime.CharStream.getSourceName()"], "Fixed commit": "7bff6cf014408927b1db4b92406996172f8442e5", "Url": "https://api.github.com/repos/sharwell/stringtemplate4", "Date": "2012-12-27T22:22:38Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mProgressDialog.isShowing()) { mProgressDialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8891/buggy-version/src.com.injoee.func.GameInstaller.java", "BodyUseAPI": ["android.app.ProgressDialog.dismiss()"], "Fixed commit": "77456206cffd67ba91563a01078a8cb732b07067", "Url": "https://api.github.com/repos/Joebrave/InjoeeAndroid", "Date": "2014-05-11T06:24:24Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (icon != null) { values.put(FeaturedGamesListProvider.ICON, icon); }else { values.put(FeaturedGamesListProvider.ICON, iconTemp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8891/buggy-version/src.com.injoee.ui.MainActivity.java", "BodyUseAPI": ["android.content.ContentValues.put(FeaturedGamesListProvider.ICON,java.lang.String)"], "Fixed commit": "77456206cffd67ba91563a01078a8cb732b07067", "Url": "https://api.github.com/repos/Joebrave/InjoeeAndroid", "Date": "2014-05-11T06:24:24Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (imageData == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8891/buggy-version/src.com.injoee.util.Utility.java", "BodyUseAPI": [], "Fixed commit": "77456206cffd67ba91563a01078a8cb732b07067", "Url": "https://api.github.com/repos/Joebrave/InjoeeAndroid", "Date": "2014-05-11T06:24:24Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.badlogic.gdx.controllers.Controllers.getControllers().size) > 0) ctrl = com.badlogic.gdx.controllers.Controllers.getControllers().first();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7795/buggy-version/gdx2d-demoDesktop.src.ch.hevs.gdx2d.demos.controllers.DemoControllers.java", "BodyUseAPI": [], "Fixed commit": "2443ba5da9b2803c66d2f3157997547d500ea603", "Url": "https://api.github.com/repos/hevs-isi/gdx2d", "Date": "2016-06-10T05:48:36Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mState) == (de.klimek.spacecurl.MainActivityPrototype.State.Running)) { mState = de.klimek.spacecurl.MainActivityPrototype.State.Paused; pauseGame(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1891/buggy-version/SpaceCurl.src.de.klimek.spacecurl.MainActivityPrototype.java", "BodyUseAPI": [], "Fixed commit": "85567971bbc9fd6c511f7b5aca3722fb0f22b54f", "Url": "https://api.github.com/repos/Tetr4/Spacecurl", "Date": "2014-02-11T19:52:13Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (id > 0) { task = taskService.getTask(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2558/buggy-version/task.src.main.java.com.appengine.task.task.WebTaskController.java", "BodyUseAPI": ["com.appengine.task.service.TaskService.getTask(long)"], "Fixed commit": "db2f37e51c7987602d082dd655215dc6786b7c98", "Url": "https://api.github.com/repos/sofn/app-engine", "Date": "2016-06-24T03:13:49Z"},
{"Line": "=>883", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.channels.ReadableByteChannel.read(java.nio.ByteBuffer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cnt == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1019/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.util.nio.GridNioServer.java", "BodyUseAPI": [], "Fixed commit": "2e68a87869bd9d854c3efbbb20a72aef7b44fd2a", "Url": "https://api.github.com/repos/apache/ignite", "Date": "2015-12-10T13:00:35Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (src != null) { final int j = src.lastIndexOf(';'); if (j > 0) { final int k = src.lastIndexOf('.'); if (((k >= 0) && (j > k)) && (k > (src.lastIndexOf('/')))) src = src.substring(0, j); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8871/buggy-version/src.main.java.org.zkoss.angular.AuInclude.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(char)", "java.lang.String.lastIndexOf(char)", "java.lang.String.lastIndexOf(char)", "java.lang.String.substring(int,int)"], "Fixed commit": "afb68795265d3caa9196b35ad17953efcecf9747", "Url": "https://api.github.com/repos/zkoss/zk-angular", "Date": "2014-08-07T02:24:38Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((line.indexOf('>')) > 0) { line = line.substring(spaceIdx, line.length()); javax.swing.tree.DefaultMutableTreeNode newNode = new javax.swing.tree.DefaultMutableTreeNode(line); node.add(newNode); node = newNode; }else { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5610/buggy-version/src.org.proofpad.TraceResult.java", "BodyUseAPI": [], "Fixed commit": "cb12adbbcea80549579e9bf0c142363eadb042bd", "Url": "https://api.github.com/repos/calebegg/proof-pad", "Date": "2012-04-16T21:30:20Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(cursor.getColumnIndex(MediaStore.Audio.Media.ALBUM))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (albumTitle != \"\") { android.database.Cursor artCursor = activity.getContentResolver().query(MediaStore.Audio.Albums.EXTERNAL_CONTENT_URI, new java.lang.String[]{ MediaStore.Audio.Albums.ALBUM, MediaStore.Audio.Albums.ALBUM_ART }, ((MediaStore.Audio.Albums.ALBUM) + \"=?\"), new java.lang.String[]{ albumTitle }, null); java.lang.String artPath = \"\"; if ((artCursor.moveToFirst()) && ((artCursor.getString(1)) != null)) { artPath = artCursor.getString(1); } song.setAlbumArt(artPath); artCursor.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5501/buggy-version/src.com.stanford.tutti.MusicLibraryLoaderThread.java", "BodyUseAPI": ["activity.getContentResolver().query(MediaStore.Audio.Albums.EXTERNAL_CONTENT_URI,java.lang.String[],((MediaStore.Audio.Albums.ALBUM) + \"=?\"),java.lang.String[],<nulltype>)"], "Fixed commit": "c184ef60c3bd84ea188e5ae346f6f2f24693f298", "Url": "https://api.github.com/repos/JayThomason/Tutti", "Date": "2014-04-28T11:06:29Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (block != null) for (java.lang.Object o : block.statements()) this._statements.add(new edu.rice.cs.caper.bayou.application.dom_driver.DOMStatement(((org.eclipse.jdt.core.dom.Statement) (o))).handleAML());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8734/buggy-version/src.main.java.edu.rice.cs.caper.bayou.application.dom_driver.DOMBlock.java", "BodyUseAPI": [], "Fixed commit": "843f98943d943144e4b8bfa4e57bf7939f694ddc", "Url": "https://api.github.com/repos/capergroup/bayou", "Date": "2017-10-17T22:59:45Z"},
{"Line": "=>1137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((imageOffsets.get(i)) - length) != (offsetDiff + 8)) { if (i == 0) { fixByteCounts = true; } imageOffsets.remove(i); imageLengths.remove(i); i--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5315/buggy-version/components.formats-gpl.src.loci.formats.in.NativeND2Reader.java", "BodyUseAPI": ["java.util.ArrayList<int[]>.remove(int)", "java.util.ArrayList<java.lang.Long>.remove(int)"], "Fixed commit": "857a07d95259dbbc53cd0a877999ca825134325e", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2017-08-27T00:00:56Z"},
{"Line": "=>697", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((lastImage.position) + (lastImage.length)) >= (in.length())) { in.seek(((lastImage.position) + 16)); }else { in.seek(((lastImage.position) + (lastImage.length))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5315/buggy-version/components.formats-gpl.src.loci.formats.in.NativeND2Reader.java", "BodyUseAPI": ["loci.formats.in.NativeND2Reader.seek(long)", "loci.formats.in.NativeND2Reader.seek(long)"], "Fixed commit": "857a07d95259dbbc53cd0a877999ca825134325e", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2017-08-27T00:00:56Z"},
{"Line": "=>493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(morphium.getARHelper().getIdField(o).getType().equals(de.caluga.morphium.driver.bson.MorphiumId.class))) && ((morphium.getId(o)) == null)) { if (morphium.getARHelper().getIdField(o).getType().equals(java.lang.String.class)) { try { morphium.getARHelper().getIdField(o).set(o, new de.caluga.morphium.driver.bson.MorphiumId()); } catch (java.lang.IllegalAccessException e) { throw new java.lang.RuntimeException(\"Could not sett id-string\", e); } }else { throw new java.lang.IllegalArgumentException(\"Cannot automatically set non -MongoId IDs\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/931/buggy-version/src.de.caluga.morphium.writer.MorphiumWriterImpl.java", "BodyUseAPI": ["de.caluga.morphium.writer.Morphium.getARHelper()", "morphium.getARHelper().getIdField(o).set(java.lang.Object,de.caluga.morphium.driver.bson.MorphiumId)", "morphium.getARHelper().getIdField(java.lang.Object)", "de.caluga.morphium.writer.Morphium.getARHelper()", "morphium.getARHelper().getIdField(o).getType().equals(java.lang.Class)", "morphium.getARHelper().getIdField(o).getType()", "morphium.getARHelper().getIdField(java.lang.Object)"], "Fixed commit": "48179be488fe26a332e894a48154c51ff178f49c", "Url": "https://api.github.com/repos/sboesebeck/morphium", "Date": "2017-04-13T14:39:09Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.caluga.morphium.AnnotationAndReflectionHelper.getAnnotationFromHierarchy(java.lang.Class<?>,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((cacheSettings.timeout()) != (-1)) { time = cacheSettings.timeout(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/931/buggy-version/src.de.caluga.morphium.cache.CacheHousekeeper.java", "BodyUseAPI": ["de.caluga.morphium.annotations.caching.Cache.timeout()"], "Fixed commit": "48179be488fe26a332e894a48154c51ff178f49c", "Url": "https://api.github.com/repos/sboesebeck/morphium", "Date": "2017-04-13T14:39:09Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["builder.build()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (unnestSymbols.isEmpty()) { return source; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/563/buggy-version/presto-main.src.main.java.com.facebook.presto.sql.planner.optimizations.PruneUnreferencedOutputs.java", "BodyUseAPI": [], "Fixed commit": "643102296b38050495f5f61f9d5766ab67e420d6", "Url": "https://api.github.com/repos/facebook/presto", "Date": "2014-10-13T18:56:45Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == (BACK_TO_MAP)) { setResult(BACK_TO_MAP); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3389/buggy-version/app.src.main.java.de.ifgi.igiapp.igi_app.StoryElementActivity.java", "BodyUseAPI": [], "Fixed commit": "c9f1730915fbc8deb5db1f59e7eee8f126a7f10a", "Url": "https://api.github.com/repos/froehr/IGI-app", "Date": "2015-02-02T12:48:34Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isButtonEnabled(nextPage)) { setValue(((currentPage) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7824/buggy-version/zanata-war.src.main.java.org.zanata.webtrans.client.ui.Pager.java", "BodyUseAPI": [], "Fixed commit": "ce224e3f9345c1812f6a239499d274971bd1eea1", "Url": "https://api.github.com/repos/zanata/zanata-server", "Date": "2013-07-15T04:43:33Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isButtonEnabled(firstPage)) { setValue(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7824/buggy-version/zanata-war.src.main.java.org.zanata.webtrans.client.ui.Pager.java", "BodyUseAPI": [], "Fixed commit": "ce224e3f9345c1812f6a239499d274971bd1eea1", "Url": "https://api.github.com/repos/zanata/zanata-server", "Date": "2013-07-15T04:43:33Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isButtonEnabled(lastPage)) { setValue(pageCount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7824/buggy-version/zanata-war.src.main.java.org.zanata.webtrans.client.ui.Pager.java", "BodyUseAPI": [], "Fixed commit": "ce224e3f9345c1812f6a239499d274971bd1eea1", "Url": "https://api.github.com/repos/zanata/zanata-server", "Date": "2013-07-15T04:43:33Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isButtonEnabled(prevPage)) { setValue(((currentPage) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7824/buggy-version/zanata-war.src.main.java.org.zanata.webtrans.client.ui.Pager.java", "BodyUseAPI": [], "Fixed commit": "ce224e3f9345c1812f6a239499d274971bd1eea1", "Url": "https://api.github.com/repos/zanata/zanata-server", "Date": "2013-07-15T04:43:33Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(StatusType.DONE.equals(videoData.getStatus()))) { if (StatusType.TEMP_DONE.equals(videoData.getStatus())) { videoData.setStatus(StatusType.DONE); } updateScannedMetaData(videoData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1678/buggy-version/yamj3-core.src.main.java.org.yamj.core.database.service.MetadataStorageService.java", "BodyUseAPI": ["org.yamj.core.database.service.VideoData.getStatus()", "StatusType.TEMP_DONE.equals(videoData.getStatus())", "org.yamj.core.database.service.VideoData.setStatus(StatusType.DONE)", "org.yamj.core.database.service.MetadataStorageService.updateScannedMetaData(org.yamj.core.database.service.VideoData)"], "Fixed commit": "f88a924a4f48bbe861f61e0523ad3e5ace79f62a", "Url": "https://api.github.com/repos/YAMJ/yamj-v3", "Date": "2015-08-18T16:29:02Z"},
{"Line": "=>582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.axis2.context.ConfigurationContext.createMessageContext()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((tenantInMsgCtx.getProperty(CarbonConstants.TENANT_IN_ONLY_MESSAGE)) != null) && (java.lang.Boolean.TRUE.equals(tenantInMsgCtx.getProperty(CarbonConstants.TENANT_IN_ONLY_MESSAGE)))) { mainInMsgContext.getOperationContext().removeProperty(Constants.RESPONSE_WRITTEN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8538/buggy-version/core.org.wso2.carbon.core.src.main.java.org.wso2.carbon.core.multitenancy.MultitenantMessageReceiver.java", "BodyUseAPI": [], "Fixed commit": "1e05b99a9d8d5479ec2cddb0c73a24e9ebdce9a9", "Url": "https://api.github.com/repos/thusithathilina/carbon-kernel", "Date": "2017-04-05T15:49:20Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (value == null) { value = f.get(null); defaultValues.put(name, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/330/buggy-version/src.main.java.tterrag.core.common.config.ConfigProcessor.java", "BodyUseAPI": [], "Fixed commit": "3e818d98c7bb2a9f17e4f3c503804b08f8cce52d", "Url": "https://api.github.com/repos/tterrag1098/ttCore", "Date": "2015-04-22T19:32:15Z"},
{"Line": "=>557", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((rawStats) != null) && ((rawStats.length()) > 80)) { core.Logger.log(Logger.TAG_BUGREPORT_PARSER, \"Could not find \\\"Statistics\\\" data in this bugreport\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4248/buggy-version/src.supportive.preanalyzers.logsparser.BugrepParser.java", "BodyUseAPI": [], "Fixed commit": "3d9d305e74d38bbff85cbf5b9eeab8d30b5eb4e5", "Url": "https://api.github.com/repos/cesarcardinali/SAT", "Date": "2015-11-16T11:48:51Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((files.endsWith(\".txt\")) && (files.contains(\"bugreport\"))) { if ((listOfFiles[i].length()) > 5000000) { if (path.equals(\".\")) file_report = files; else file_report = ((path) + \"/\") + files; break; }else { core.Logger.log(Logger.TAG_BUGREPORT_PARSER, \"Bugreport file too short\"); return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4248/buggy-version/src.supportive.preanalyzers.logsparser.BugrepParser.java", "BodyUseAPI": [], "Fixed commit": "3d9d305e74d38bbff85cbf5b9eeab8d30b5eb4e5", "Url": "https://api.github.com/repos/cesarcardinali/SAT", "Date": "2015-11-16T11:48:51Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((file.length()) == 0L) { journal.preallocateEntireJournalDataFile(file); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2999/buggy-version/activemq-kahadb-store.src.main.java.org.apache.activemq.store.kahadb.disk.journal.DataFileAppender.java", "BodyUseAPI": ["org.apache.activemq.store.kahadb.disk.journal.Journal.preallocateEntireJournalDataFile(org.apache.activemq.util.RecoverableRandomAccessFile)"], "Fixed commit": "4a821186a4c8e7296637438fee932365d73b936e", "Url": "https://api.github.com/repos/jgenender/activemq", "Date": "2015-04-20T15:01:50Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSupportFragmentManager().findFragmentByTag(DisplayTripFragment.TAG)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (listFrag == null) { listFrag = com.pld.velociraptor.view.fragment.DisplayTripFragment.newInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4428/buggy-version/app.src.main.java.com.pld.velociraptor.view.activity.VelociraptorActivity.java", "BodyUseAPI": [], "Fixed commit": "a40b67f35651b3d8634ea641e6f21afc93925b75", "Url": "https://api.github.com/repos/SmartPld/velociraptor-client", "Date": "2016-04-28T09:31:41Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((audioMosquito) != null) audioMosquito.pause();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1522/buggy-version/MosquitoSimulator.src.main.java.edu.cth.mosquito.main.MosquitoSimulator.java", "BodyUseAPI": [], "Fixed commit": "7a769c2d70b450fecb633b4bc7c33ddf1690d573", "Url": "https://api.github.com/repos/alex95sandberg/TDA367-Projekt", "Date": "2015-05-25T10:50:31Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.umd.cs.psl.database.Database.getAtom(edu.umd.cs.psl.model.predicate.Predicate,edu.umd.cs.psl.model.argument.UniqueID,edu.umd.cs.psl.model.argument.GroundTerm)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (atom instanceof edu.umd.cs.psl.model.atom.RandomVariableAtom) { for (int m = 0; m < numMeans; m++) { edu.umd.cs.psl.model.argument.UniqueID meanID = data.getUniqueID(m); edu.umd.cs.psl.model.atom.GroundAtom hasMeanAtom = data.getAtom(hasMean, imageID, pixelID, meanID); numer += (hasMeanAtom.getValue()) * (means[m]); denom += hasMeanAtom.getValue(); } ((edu.umd.cs.psl.model.atom.RandomVariableAtom) (atom)).setValue((numer / denom)); ((edu.umd.cs.psl.model.atom.RandomVariableAtom) (atom)).commitToDB(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7340/buggy-version/src.main.java.edu.umd.cs.linqs.vision.ImagePatchUtils.java", "BodyUseAPI": [], "Fixed commit": "4cbad1883ef98adf34ebbc714d46dac1f8d84237", "Url": "https://api.github.com/repos/berty38/pslWikipedia", "Date": "2013-05-27T00:48:15Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(transitVehicles.getVehicles().containsKey(vehicleId))) { throw new java.lang.RuntimeException(((\"Vehicle id\" + vehicleId) + \" is not a transit vehicle id.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/580/buggy-version/playgrounds.agarwalamit.src.main.java.playground.agarwalamit.berlin.berlinBVG09.BerlinTransitVehicleTypeIdentifier.java", "BodyUseAPI": [], "Fixed commit": "6f597d0a3bc6c238ac11e89ab9aab7e92aa77085", "Url": "https://api.github.com/repos/matsim-org/matsim", "Date": "2017-06-12T06:57:56Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityDamageEvent.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (leashTarget instanceof de.Keyle.MyPet.listeners.Ageable) { extendedInfo.setBoolean(\"Baby\", (!(((de.Keyle.MyPet.listeners.Ageable) (leashTarget)).isAdult()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/510/buggy-version/src.Java.de.Keyle.MyPet.listeners.MyPetEntityListener.java", "BodyUseAPI": [], "Fixed commit": "4d18e2c3de037d5868c883b6fa493dbfdf52a016", "Url": "https://api.github.com/repos/xXLupoXx/MyPet", "Date": "2012-12-18T20:07:03Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5425/buggy-version/components.formats-common.src.loci.common.Location.java", "BodyUseAPI": [], "Fixed commit": "4f9c961743b5a3eae64c8316fedf4a648cc660e6", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2014-04-21T03:50:10Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((username) != null) { return new java.lang.String(username); }else return username;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7328/buggy-version/src.main.java.nObjectModel.Account.java", "BodyUseAPI": [], "Fixed commit": "76e8cf0b3d6e4fc7847113eb78c6b226610f03d4", "Url": "https://api.github.com/repos/wenjiechew/FreshdriveGUI", "Date": "2016-11-24T15:57:01Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (currentPoint != null) { path.lineTo(currentPoint[Coordinate.X], currentPoint[Coordinate.Y]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3481/buggy-version/src.java.com.github.ruleant.getback_gps.lib.Coordinates.java", "BodyUseAPI": ["android.graphics.Path.lineTo(long,long)"], "Fixed commit": "7510ea0f443c0b031dcc2afcd61ce98e4794b0d3", "Url": "https://api.github.com/repos/ruleant/getback_gps", "Date": "2014-08-27T19:39:30Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nodesUnderTheComp.size()) != 0) { comp.setzC((ySum / (nodesUnderThecomp.size()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3523/buggy-version/calePWA.src.calePWA.FIndNodes.java", "BodyUseAPI": [], "Fixed commit": "e195b4f6824ae62f71d55a2ba85d20adab51988c", "Url": "https://api.github.com/repos/prasad3p/calcePWA", "Date": "2016-12-15T02:41:14Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.smi.travel.datalayer.entity.TransferJob.getPlace()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (Place != null) { if (Other != null) { open = \"(\"; close = \")\"; } java.lang.String PlaceTemp = \"\"; java.lang.String[] placetemp = Place.replaceAll(\"OTHERS\", \"\").split(\"\\\\|\\\\|\"); for (int i = 0; i < (placetemp.length); i++) { PlaceTemp += (\",'\" + (placetemp[i])) + \"'\"; } if (!(\"\".equalsIgnoreCase(PlaceTemp.substring(1)))) { getJobDetailQuery += (((\" and \" + open) + \" DB.place.place in (\") + (PlaceTemp.substring(1).replaceAll(\" '\", \"'\").replaceAll(\"' \", \"'\").replaceAll(\",''\", \"\"))) + \")\"; checkplace = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6691/buggy-version/src.java.com.smi.travel.datalayer.view.dao.impl.TransferJobReportImpl.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "1ccad990d97ec211a9073ed0f437d8cecaec030b", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2016-06-06T11:13:31Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["path.get(0).toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((path.size()) == 1) && (key.equals(\"this\"))) { return parent.model; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8113/buggy-version/handlebars.src.main.java.com.github.jknack.handlebars.Context.java", "BodyUseAPI": [], "Fixed commit": "b904d2e0cd0f8d640c6f5c177ed28861a8d79ff4", "Url": "https://api.github.com/repos/mumprod/handlebars.java", "Date": "2016-01-25T18:08:58Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { if (twoPane) { ft.replace(R.id.step_detail_container, new com.onval.bakingapp.view.StepDetailFragment()).replace(R.id.frame_detail_container, com.onval.bakingapp.view.DetailFragment.newInstance(steps, restoredItemPosition)).commit(); }else { ft.replace(R.id.step_detail_container, new com.onval.bakingapp.view.StepDetailFragment()).commit(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5160/buggy-version/app.src.main.java.com.onval.bakingapp.view.StepDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "9ad9a17bb153f420622603869c0997e475c4eddc", "Url": "https://api.github.com/repos/onVal/Udacity-BakingApp", "Date": "2017-10-17T12:56:04Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { getSupportFragmentManager().beginTransaction().replace(R.id.detail_container, com.onval.bakingapp.view.DetailFragment.newInstance(steps, position)).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5160/buggy-version/app.src.main.java.com.onval.bakingapp.view.DetailActivity.java", "BodyUseAPI": [], "Fixed commit": "9ad9a17bb153f420622603869c0997e475c4eddc", "Url": "https://api.github.com/repos/onVal/Udacity-BakingApp", "Date": "2017-10-17T12:56:04Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getRehearsalFor()) != null) { event.setRehearsalFor(getEventById(e.getRehearsalFor())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7521/buggy-version/Hibernate.src.main.java.team_f.database_wrapper.facade.EventFacade.java", "BodyUseAPI": ["team_f.domain.entities.EventDuty.setRehearsalFor(team_f.domain.entities.EventDuty)", "team_f.database_wrapper.facade.EventDutyEntity.getRehearsalFor()", "team_f.database_wrapper.facade.EventFacade.getEventById(e.getRehearsalFor())"], "Fixed commit": "ae46291070034063d1a0e813194ebb4231a3dd73", "Url": "https://api.github.com/repos/Nepomuk1999/ConcertMaster", "Date": "2017-04-28T13:00:25Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (imgDir.exists()) { for (java.io.File f : imgDir.listFiles()) { if (f.isFile()) { mImages.add(f); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4524/buggy-version/app.src.main.java.com.hsfl.speakshot.ui.HistoryFragment.java", "BodyUseAPI": ["java.io.File.listFiles()"], "Fixed commit": "b599c418bb8e41c6c55e260bdb11ae1e17dd677b", "Url": "https://api.github.com/repos/lefty89/speakshot", "Date": "2017-08-25T12:06:38Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((s.length()) == 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3205/buggy-version/src.leetcode.LongestSubstringwithoutReapeatCharacter.java", "BodyUseAPI": [], "Fixed commit": "ac70f10ba976a979881f666795611e5ac703baa5", "Url": "https://api.github.com/repos/gaohannk/Leetcode", "Date": "2016-10-08T20:45:50Z"},
{"Line": "=>607", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((fd.getChildren().size()) > 0) { hci.gnomex.controller.GetRequestDownloadList.recurseAddChildren(fdNode, fd, isFlowCellDirectory, sess); }else { fdNode.setAttribute(\"viewURL\", fd.getViewURL(hci.gnomex.controller.GetRequestDownloadList.viewType)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3617/buggy-version/src.hci.gnomex.controller.GetRequestDownloadList.java", "BodyUseAPI": ["org.jdom.Element.setAttribute(java.lang.String,fd.getViewURL(hci.gnomex.controller.GetRequestDownloadList.viewType))", "hci.gnomex.utility.FileDescriptor.getViewURL(java.lang.String)", "hci.gnomex.controller.GetRequestDownloadList.recurseAddChildren(org.jdom.Element,hci.gnomex.utility.FileDescriptor,boolean,org.hibernate.Session)"], "Fixed commit": "b3343fb34168d44b1e45520f2ee81cd37c202934", "Url": "https://api.github.com/repos/hci-gnomex/gnomex", "Date": "2016-06-12T18:39:56Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((child.getParent()) instanceof org.jboss.errai.ui.shared.TemplateWidget) { child = child.getParent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/404/buggy-version/errai-ui.src.main.java.org.jboss.errai.ui.shared.TemplateWidget.java", "BodyUseAPI": [], "Fixed commit": "325b5ebe8ae60a7c1cb13f6c428204daada5cf89", "Url": "https://api.github.com/repos/mbarkley/errai", "Date": "2016-02-23T18:22:46Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (decorable.getType().isAssignableTo(com.google.gwt.dom.client.Element.class)) { instance = org.jboss.errai.codegen.util.Stmt.invokeStatic(org.jboss.errai.common.client.ui.ElementWrapperWidget.class, \"getWidget\", instance); }else if (decorable.getType().isAssignableTo(org.jboss.errai.common.client.api.IsElement.class)) { instance = org.jboss.errai.codegen.util.Stmt.invokeStatic(org.jboss.errai.common.client.ui.ElementWrapperWidget.class, \"getWidget\", org.jboss.errai.codegen.util.Stmt.nestedCall(instance).invoke(\"getElement\")); }else if ((org.jboss.errai.ui.rebind.RebindUtil.isNativeJsType(decorable.getType())) || (org.jboss.errai.ui.rebind.RebindUtil.isElementalIface(decorable.getType()))) { if (decorable.getType().isAssignableTo(org.jboss.errai.common.client.ui.HasValue.class)) { final org.jboss.errai.codegen.meta.MetaClass valueType = decorable.getType().getMethod(\"getValue\", new java.lang.Class[0]).getReturnType(); instance = org.jboss.errai.codegen.util.Stmt.invokeStatic(org.jboss.errai.common.client.ui.ElementWrapperWidget.class, \"getWidget\", org.jboss.errai.codegen.util.Stmt.invokeStatic(org.jboss.errai.ui.shared.TemplateUtil.class, \"asElement\", instance), loadLiteral(valueType)); }else { instance = org.jboss.errai.codegen.util.Stmt.invokeStatic(org.jboss.errai.common.client.ui.ElementWrapperWidget.class, \"getWidget\", org.jboss.errai.codegen.util.Stmt.invokeStatic(org.jboss.errai.ui.shared.TemplateUtil.class, \"asElement\", instance)); } }else if (!(decorable.getType().isAssignableTo(com.google.gwt.user.client.ui.Widget.class))) { throw new org.jboss.errai.codegen.exception.GenerationException(((((\"Unable to use [\" + name) + \"] in class [\") + (decorable.getDecorableDeclaringType())) + \"] as a @DataField. The field must be a Widget or a DOM element as either a JavaScriptObject, native @JsType, or IsElement.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/404/buggy-version/errai-ui.src.main.java.org.jboss.errai.ui.rebind.DataFieldCodeDecorator.java", "BodyUseAPI": ["org.jboss.errai.ioc.rebind.ioc.injector.api.Decorable.getType()", "decorable.getType().isAssignableTo(java.lang.Class)", "org.jboss.errai.ioc.rebind.ioc.injector.api.Decorable.getDecorableDeclaringType()", "decorable.getType().getMethod(\"getValue\", new java.lang.Class[0]).getReturnType()", "org.jboss.errai.ioc.rebind.ioc.injector.api.Decorable.getType()", "org.jboss.errai.ioc.rebind.ioc.injector.api.Decorable.getType()", "decorable.getType().isAssignableTo(java.lang.Class)", "decorable.getType().getMethod(java.lang.String,java.lang.Class[])", "org.jboss.errai.ioc.rebind.ioc.injector.api.Decorable.getType()", "org.jboss.errai.ui.rebind.RebindUtil.isElementalIface(decorable.getType())", "org.jboss.errai.ioc.rebind.ioc.injector.api.Decorable.getType()", "decorable.getType().isAssignableTo(java.lang.Class)", "org.jboss.errai.ui.rebind.RebindUtil.isNativeJsType(decorable.getType())", "org.jboss.errai.ioc.rebind.ioc.injector.api.Decorable.getType()"], "Fixed commit": "325b5ebe8ae60a7c1cb13f6c428204daada5cf89", "Url": "https://api.github.com/repos/mbarkley/errai", "Date": "2016-02-23T18:22:46Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dir.exists())) dir.mkdirs();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4206/buggy-version/src.fr.inria.soctrace.lib.utils.src.fr.inria.soctrace.lib.utils.Configuration.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "63ecfdb012efd518d53368ba43200637d301c14f", "Url": "https://api.github.com/repos/soctrace-inria/framesoc", "Date": "2015-06-03T07:10:58Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (taskId == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/9251/buggy-version/camunda-bpm-camel-common.src.main.java.org.camunda.bpm.camel.component.externaltasks.TaskProcessor.java", "BodyUseAPI": [], "Fixed commit": "f5b4481022432d187e63cada47ca8e50e4d9c814", "Url": "https://api.github.com/repos/camunda/camunda-bpm-camel", "Date": "2017-11-27T13:48:35Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(completeTask)) { return; }else if (((out != null) && ((out.getBody()) != null)) && ((out.getBody()) instanceof java.lang.String)) { final java.lang.String errorCode = out.getBody(java.lang.String.class); if (task == null) { org.camunda.bpm.camel.component.externaltasks.TaskProcessor.logger.warning(((((\"Should complete the external task with BPM error '\" + errorCode) + \"' but the task seems to be already processed - will do nothing! Camnda external task id: '\") + taskId) + \"'\")); return; } if (errorCode.equals(org.camunda.bpm.camel.component.CamundaBpmConstants.EXCHANGE_RESPONSE_IGNORE)) { return; } org.camunda.bpm.camel.common.CamundaUtils.retryIfOptimisticLockingException(new java.util.concurrent.Callable<java.lang.Void>() { @java.lang.Override public java.lang.Void call() { externalTaskService.handleBpmnError(task.getId(), task.getWorkerId(), errorCode); return null; } }); }else { if (task == null) { org.camunda.bpm.camel.component.externaltasks.TaskProcessor.logger.warning((((\"Should complete the external task but the task seems to be \" + \"already processed - will do nothing! Camnda external task id: '\") + taskId) + \"'\")); return; } final java.util.Map<java.lang.String, java.lang.Object> variablesToBeSet; if (((out != null) && ((out.getBody()) != null)) && ((out.getBody()) instanceof java.util.Map)) { variablesToBeSet = out.getBody(java.util.Map.class); }else { variablesToBeSet = null; } org.camunda.bpm.camel.common.CamundaUtils.retryIfOptimisticLockingException(new java.util.concurrent.Callable<java.lang.Void>() { @java.lang.Override public java.lang.Void call() { if (variablesToBeSet != null) { externalTaskService.complete(task.getId(), task.getWorkerId(), variablesToBeSet); }else { externalTaskService.complete(task.getId(), task.getWorkerId()); } return null; } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/9251/buggy-version/camunda-bpm-camel-common.src.main.java.org.camunda.bpm.camel.component.externaltasks.TaskProcessor.java", "BodyUseAPI": [], "Fixed commit": "f5b4481022432d187e63cada47ca8e50e4d9c814", "Url": "https://api.github.com/repos/camunda/camunda-bpm-camel", "Date": "2017-11-27T13:48:35Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == null) { result = com.alibaba.dubbo.rpc.cluster.merger.MergerFactory.mergerCache.get(returnType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7786/buggy-version/dubbo-cluster.src.main.java.com.alibaba.dubbo.rpc.cluster.merger.MergerFactory.java", "BodyUseAPI": [], "Fixed commit": "952ba8426e6d7b22a732fe87f2b677847aeb5a97", "Url": "https://api.github.com/repos/ian4hu/dubbox", "Date": "2016-08-26T01:08:55Z"},
{"Line": "=>622", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == (maxLocals)) { r = r + \" | \"; }else if (i != 0) { r = r + \", \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2465/buggy-version/src.wyjvm.util.TypeAnalysis.java", "BodyUseAPI": [], "Fixed commit": "eacded136737fbc0019d3aafc450aa5e3798ea20", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2012-04-11T06:13:12Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((code.type) instanceof wyjvm.lang.JvmType.Array) { int dims = java.lang.Math.max(1, code.dims); for (int i = 0; i != dims; ++i) { checkIsSubtype(JvmTypes.T_INT, store.top(), index, orig); store = store.pop(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2465/buggy-version/src.wyjvm.util.TypeAnalysis.java", "BodyUseAPI": ["java.lang.Math.max(int,code.dims)"], "Fixed commit": "eacded136737fbc0019d3aafc450aa5e3798ea20", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2012-04-11T06:13:12Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gradePanelWidget) != null) { gradePanelWidget.getElement().getStyle().setDisplay(Display.NONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/9192/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.gsearch.util.GooruGradesView.java", "BodyUseAPI": [], "Fixed commit": "8fbd6d68305130524e92ef99e678b4bdcf67e9ca", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-07-30T09:20:40Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gradePanelWidget) != null) { gradePanelWidget.getElement().getStyle().setDisplay(Display.NONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/9192/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.gsearch.util.GooruGradesView.java", "BodyUseAPI": [], "Fixed commit": "8fbd6d68305130524e92ef99e678b4bdcf67e9ca", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-07-30T09:20:40Z"},
{"Line": "=>482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (targetDir.exists()) { for (java.io.File file : targetDir.listFiles()) { file.delete(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1614/buggy-version/onebusaway-nyc-admin-webapp.src.main.java.org.onebusaway.nyc.webapp.actions.admin.bundles.ManageBundlesAction.java", "BodyUseAPI": ["java.io.File.listFiles()"], "Fixed commit": "e71d09d6d07d27382aa28bc3af92575b57c6beb7", "Url": "https://api.github.com/repos/camsys/onebusaway-nyc", "Date": "2015-06-01T10:28:28Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (targetDir.exists()) { for (java.io.File file : targetDir.listFiles()) { file.delete(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1614/buggy-version/onebusaway-nyc-admin-webapp.src.main.java.org.onebusaway.nyc.webapp.actions.admin.bundles.ManageBundlesAction.java", "BodyUseAPI": ["java.io.File.listFiles()"], "Fixed commit": "e71d09d6d07d27382aa28bc3af92575b57c6beb7", "Url": "https://api.github.com/repos/camsys/onebusaway-nyc", "Date": "2015-06-01T10:28:28Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.impetus.kundera.graph.Node) (nodeStateContext)).isDirty()) { recursivelyPerformOperation(nodeStateContext, OPERATION.PERSIST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3313/buggy-version/src.kundera-core.src.main.java.com.impetus.kundera.lifecycle.states.ManagedState.java", "BodyUseAPI": [], "Fixed commit": "4bce6141e234730ea7f6c0184aa561b6110786ec", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2013-12-12T06:44:16Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.eclipse.jetty.http.HttpHeader.HOST) == (header.getHeader())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3456/buggy-version/jetty-client.src.main.java.org.eclipse.jetty.client.HttpClient.java", "BodyUseAPI": [], "Fixed commit": "b3c1accab922cc70cee687234a4a2e212e066c79", "Url": "https://api.github.com/repos/eclipse/jetty.project", "Date": "2012-10-30T21:37:25Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pName.equals(\"set\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8023/buggy-version/src.main.java.com.bodastage.boda_ericssoncnaiparser.BodaCNAIParser.java", "BodyUseAPI": [], "Fixed commit": "8eb9a7dc20fbc21a7e10477ff29ae7ee60a2a044", "Url": "https://api.github.com/repos/bodastage/boda-ericssoncnaiparser", "Date": "2017-01-22T07:03:33Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (paramValuePair[0].equals(\"set\")) { java.lang.System.out.println(line); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8023/buggy-version/src.main.java.com.bodastage.boda_ericssoncnaiparser.BodaCNAIParser.java", "BodyUseAPI": [], "Fixed commit": "8eb9a7dc20fbc21a7e10477ff29ae7ee60a2a044", "Url": "https://api.github.com/repos/bodastage/boda-ericssoncnaiparser", "Date": "2017-01-22T07:03:33Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jetbrains.lang.dart.util.DartNormalFormalParameter.getSimpleFormalParameter()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (simpleFormalParameter != null) { final com.intellij.psi.PsiElement defaultFormalNamedParameter = com.intellij.psi.util.PsiTreeUtil.getParentOfType(simpleFormalParameter, com.jetbrains.lang.dart.util.DartDefaultFormalNamedParameter.class); if (defaultFormalNamedParameter != null) { result.append(defaultFormalNamedParameter.getText()); }else { final com.jetbrains.lang.dart.util.DartType type = simpleFormalParameter.getType(); if (type != null) { result.append(com.jetbrains.lang.dart.util.DartPresentableUtil.buildTypeText(com.intellij.psi.util.PsiTreeUtil.getParentOfType(parameter, com.jetbrains.lang.dart.util.DartComponent.class), type, specialization)); result.append(com.jetbrains.lang.dart.util.DartPresentableUtil.SPACE); } result.append(simpleFormalParameter.getComponentName().getText()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3738/buggy-version/Dart.src.com.jetbrains.lang.dart.util.DartPresentableUtil.java", "BodyUseAPI": ["com.intellij.psi.util.PsiTreeUtil.getParentOfType(com.jetbrains.lang.dart.util.DartSimpleFormalParameter,java.lang.Class)", "simpleFormalParameter.getComponentName().getText()", "com.jetbrains.lang.dart.util.DartSimpleFormalParameter.getType()", "com.jetbrains.lang.dart.util.DartSimpleFormalParameter.getComponentName()", "java.lang.StringBuilder.append(simpleFormalParameter.getComponentName().getText())"], "Fixed commit": "8d945352dfcf622bebaab378550566327d93971b", "Url": "https://api.github.com/repos/JetBrains/intellij-plugins", "Date": "2015-02-13T17:46:47Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (id != null) { handleNaturalIdPreSaveNotifications(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2673/buggy-version/hibernate-core.src.main.java.org.hibernate.action.internal.AbstractEntityInsertAction.java", "BodyUseAPI": [], "Fixed commit": "213ce0d0607ea57fd5d704948a05be678f76cb58", "Url": "https://api.github.com/repos/nshestakov/hibernate-orm", "Date": "2012-05-09T14:42:39Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEarlyInsert()) { getSession().getPersistenceContext().getNaturalIdHelper().manageLocalNaturalIdCrossReference(getPersister(), id, state, null, CachedNaturalIdValueSource.INSERT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2673/buggy-version/hibernate-core.src.main.java.org.hibernate.action.internal.AbstractEntityInsertAction.java", "BodyUseAPI": [], "Fixed commit": "213ce0d0607ea57fd5d704948a05be678f76cb58", "Url": "https://api.github.com/repos/nshestakov/hibernate-orm", "Date": "2012-05-09T14:42:39Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.invoke(wuPATHn.me.spidermaster.biz.provider.IProvider,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (o == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6812/buggy-version/src.main.java.wuPATHn.me.spidermaster.biz.agent.provider.ProviderScanner.java", "BodyUseAPI": [], "Fixed commit": "5e7ea76b50eb9ab16fdcbd028c266a3b753a4e5d", "Url": "https://api.github.com/repos/PATHoshenke/SpiderMaster", "Date": "2017-08-08T03:23:07Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vswitches) != null) { for (org.cloudbus.cloudsim.sdn.VSwitch vswitch : vswitches) { vswitch.incrementNumPacketsTransferred(1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4164/buggy-version/modules.cloudsim.src.main.java.org.cloudbus.cloudsim.sdn.Channel.java", "BodyUseAPI": [], "Fixed commit": "9b6bd771a4ac4f37c46ba707840c4d7431a81cb4", "Url": "https://api.github.com/repos/niteshdudhey/cloudsim", "Date": "2017-03-12T17:30:40Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getPassword().equals(loginPassword)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/795/buggy-version/src.main.java.com.xList.Model.User.java", "BodyUseAPI": [], "Fixed commit": "41996f858c35e8538924726c483f26e800205f57", "Url": "https://api.github.com/repos/Forfend/xList", "Date": "2017-08-07T09:15:08Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userName) != null) { CheckersClient007.ClientController.connection.disconnect(endProcess); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5877/buggy-version/007Checkers.src.CheckersClient007.ClientController.java", "BodyUseAPI": [], "Fixed commit": "540ae87909ecf30a7435c4b300ebb046139443eb", "Url": "https://api.github.com/repos/UndependableAids/OperationCheckers007_v2", "Date": "2014-11-20T18:37:17Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.Run.getExecution()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (flowExecution == null) { throw new java.lang.Exception(\"Upstream flow execution is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1917/buggy-version/src.main.java.org.jenkinsci.plugins.ewm.steps.ExwsAllocateExecution.java", "BodyUseAPI": [], "Fixed commit": "81e95d8d2806e31f79a7d338bcba874dca52753e", "Url": "https://api.github.com/repos/alexsomai/external-workspace-manager-plugin", "Date": "2016-06-06T15:45:01Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jenkinsci.plugins.ewm.steps.ExwsAllocateExecution.findAction(flowExecution.getCurrentHeads())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (exwsAllocateAction == null) { java.lang.String message = java.lang.String.format(\"The Jenkins job '%s' does not have registered any 'External Workspace Allocate' action\", upstreamName); throw new hudson.AbortException(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1917/buggy-version/src.main.java.org.jenkinsci.plugins.ewm.steps.ExwsAllocateExecution.java", "BodyUseAPI": [], "Fixed commit": "81e95d8d2806e31f79a7d338bcba874dca52753e", "Url": "https://api.github.com/repos/alexsomai/external-workspace-manager-plugin", "Date": "2016-06-06T15:45:01Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cpw.mods.fml.common.Loader.isModLoaded(\"ThaumicTinkerer\")) { jump = flaxbeard.thaumicexploration.integration.TTIntegration.getAscentLevel(((net.minecraft.entity.player.EntityPlayer) (event.entity))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5770/buggy-version/src.main.java.flaxbeard.thaumicexploration.event.TXBootsEventHandler.java", "BodyUseAPI": [], "Fixed commit": "2633126de2b77ede2e8529f52a84d05d7e012d51", "Url": "https://api.github.com/repos/nekosune/Thaumic_Exploration", "Date": "2014-07-28T00:35:22Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.cc.signalinfo.BuildConfig.DEBUG)) { com.google.ads.AdView ad = ((com.google.ads.AdView) (findViewById(R.id.adView))); ad.loadAd(new com.google.ads.AdRequest()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3516/buggy-version/src.com.cc.signalinfo.activities.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "da84130685174c72c0680ad87e7dd3b861017cf6", "Url": "https://api.github.com/repos/tushroy/SignalInfo", "Date": "2014-01-14T03:41:30Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(isCCW(spaceBoundaryPointList))) { java.util.Collections.reverse(spaceBoundaryPointList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1505/buggy-version/src.org.bimserver.osm.serializer.OsmSerializer.java", "BodyUseAPI": ["java.util.Collections.reverse(java.util.List<org.bimserver.osm.serializer.OsmPoint>)"], "Fixed commit": "0b3e697b4852507983aef484169ca8854ae70725", "Url": "https://api.github.com/repos/BIMDataHub/BIMServerOsmSerializer", "Date": "2015-09-12T03:47:48Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(data_item.getString(TblChats.LABEL).equals(chat.getString(TblChats.LABEL)))) { data_item.put(TblChats.LABEL, chat.getString(TblChats.LABEL)); refresh_chat = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1111/buggy-version/app.src.main.java.com.llp.lunchkaki.models.User.java", "BodyUseAPI": ["org.json.JSONObject.put(TblChats.LABEL,chat.getString(TblChats.LABEL))", "org.json.JSONObject.getString(TblChats.LABEL)"], "Fixed commit": "af2f8bc33906a2fe689bd8763ea76ac6ea5ecd7f", "Url": "https://api.github.com/repos/brianfwz/lkk", "Date": "2016-05-12T10:26:24Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(data_item.getString(TblChats.LABEL).equals(chat.getString(TblChats.LABEL)))) { data_item.put(TblChats.LABEL, chat.getString(TblChats.LABEL)); refresh_chat = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1111/buggy-version/app.src.main.java.com.llp.lunchkaki.models.User.java", "BodyUseAPI": ["org.json.JSONObject.put(TblChats.LABEL,chat.getString(TblChats.LABEL))", "org.json.JSONObject.getString(TblChats.LABEL)"], "Fixed commit": "af2f8bc33906a2fe689bd8763ea76ac6ea5ecd7f", "Url": "https://api.github.com/repos/brianfwz/lkk", "Date": "2016-05-12T10:26:24Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newLabelMap.containsKey(currentLabel)) { this.labeledPixels[x][y] = newLabelMap.get(currentLabel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3811/buggy-version/src.de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.ff.Sequential.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, java.lang.Integer>.get(int)"], "Fixed commit": "38f15f90cebb088c372fa486a353944094d580db", "Url": "https://api.github.com/repos/Mrk15s/IP_Uebung_2", "Date": "2015-11-07T16:29:44Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tag.tagName.isEmpty())) tags.add(models.Tags.findByTagName(tag.tagName));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6512/buggy-version/app.models.Tags.java", "BodyUseAPI": ["java.util.List<models.Tags>.add(models.Tags)", "models.Tags.findByTagName(java.lang.String)"], "Fixed commit": "832a2937ce8fe5347549cdf845f4abf20dba9f53", "Url": "https://api.github.com/repos/ozaki25/youScene", "Date": "2014-12-20T14:43:24Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userId) != null) { sendConnectToNewUser(context, endpointProfile); userRegistrationRequestSent = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1508/buggy-version/server.operations.src.main.java.org.kaaproject.kaa.server.operations.service.akka.actors.core.EndpointActorMessageProcessor.java", "BodyUseAPI": [], "Fixed commit": "3bf15ea66a29c4ee75d002b7c31a6924df052be4", "Url": "https://api.github.com/repos/kaaproject/kaa", "Date": "2014-12-17T13:00:03Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (knowsSpell) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8393/buggy-version/core.src.thepaperpilot.order.Components.FighterComponent.java", "BodyUseAPI": [], "Fixed commit": "4cbad94fdca5c69b6e394559a5985bfb790a96ba", "Url": "https://api.github.com/repos/thepaperpilot/fourth-order", "Date": "2016-04-10T23:18:22Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((candidates.size()) == 0) || ((references.size()) == 0)) { throw new java.lang.IllegalStateException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/255/buggy-version/src.nlp.project.Evaluator.java", "BodyUseAPI": [], "Fixed commit": "bab5a9ff390ed7677009b1e834c70c1261b5f1ec", "Url": "https://api.github.com/repos/yuqinlear/MT2013", "Date": "2013-11-30T05:26:31Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((references.size()) > 1) { for (java.util.List<java.lang.String> reference : references) { int newDistance = java.lang.Math.abs(((reference.size()) - candidateLength)); if (distance > newDistance) { distance = newDistance; closestRefLength = reference.size(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/255/buggy-version/src.nlp.project.Evaluator.java", "BodyUseAPI": [], "Fixed commit": "bab5a9ff390ed7677009b1e834c70c1261b5f1ec", "Url": "https://api.github.com/repos/yuqinlear/MT2013", "Date": "2013-11-30T05:26:31Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasNoConsumers()) { return Ack.HALT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/331/buggy-version/src.main.java.com.orctom.rmq.Queue.java", "BodyUseAPI": [], "Fixed commit": "c9136e8767d1b3b6747eca5f83ad8bbebef6c039", "Url": "https://api.github.com/repos/orctom/rmq", "Date": "2017-01-05T11:58:22Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mono.mono.MonoPackageManager.getApiPackageName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (platformPackage != null) { java.lang.Throwable t = null; try { apiInfo = context.getPackageManager().getApplicationInfo(platformPackage, 0); } catch (mono.android e) { } if (apiInfo == null) { try { apiInfo = context.getPackageManager().getApplicationInfo(\"Xamarin.Android.Platform\", 0); } catch (mono.android e) { t = e; } } if (apiInfo == null) throw new java.lang.RuntimeException(((\"Unable to find application \" + platformPackage) + \" or Xamarin.Android.Platform!\"), t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3752/buggy-version/LanguageKing.LanguageKing.Android.obj.Debug.android.src.mono.MonoRuntimeProvider.java", "BodyUseAPI": ["context.getPackageManager().getApplicationInfo(java.lang.String,int)"], "Fixed commit": "e785d4c352c800ee42fd800394a32f09ac6ad379", "Url": "https://api.github.com/repos/cserje/LanguageApp", "Date": "2017-05-06T15:29:04Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((current()) < 0) current = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2370/buggy-version/src.main.java.org.geepawhill.contentment.Player.java", "BodyUseAPI": [], "Fixed commit": "ec625d44e1d17b5d9f8cfbdd26d816f1b310e686", "Url": "https://api.github.com/repos/GeePawHill/contentment", "Date": "2016-12-26T21:48:42Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrentTheme) == null) { mCurrentTheme = com.stevenbyle.android.materialthemes.controller.theme.MaterialTheme.THEME_TEAL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/942/buggy-version/MaterialThemesMadeEasy.app.src.main.java.com.stevenbyle.android.materialthemes.controller.home.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "6c8c11143a7f3c2b950ed43873460b8045fc89c0", "Url": "https://api.github.com/repos/StevenByle/Android-Material-Themes-Demo", "Date": "2015-12-16T19:34:02Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.ohmage.conditionevaluator.DataPoint.PromptType.photo.toString().equals(_promptType)) { promptType = org.ohmage.conditionevaluator.DataPoint.PromptType.photo; }else if (org.ohmage.conditionevaluator.DataPoint.PromptType.video.toString().equals(_promptType)) { promptType = org.ohmage.conditionevaluator.DataPoint.PromptType.video; }else { throw new java.lang.IllegalArgumentException((\"Prompt type does not exist: \" + _promptType)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4574/buggy-version/src.org.ohmage.conditionevaluator.DataPoint.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "d05503898ed49294918fcc1fa5afdcdac40c2429", "Url": "https://api.github.com/repos/cens/ohmagePhone", "Date": "2012-06-28T00:46:18Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles(java.io.FileFilter)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (collectionFolders != null) { for (java.io.File collectionFolder : collectionFolders) { java.io.File[] indexFolders = collectionFolder.listFiles(directory); for (java.io.File indexFolder : indexFolders) { java.io.File finalFolder = getFinalIndexPath(collectionFolder.getName(), indexFolder.getName(), deliveryKey, deliveryVersion); if (!(finalFolder.getParentFile().exists())) { finalFolder.getParentFile().mkdirs(); } indexFolder.renameTo(finalFolder); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8202/buggy-version/database.app.core.importer.ImportTask.java", "BodyUseAPI": [], "Fixed commit": "c7e1f62bbe4d58e1e318c2c8f945a9c18d9ff7d4", "Url": "https://api.github.com/repos/comsysto/jumbodb", "Date": "2013-02-21T10:27:17Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap.get(PodcastConstants.OBJ)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (pod != null) { podcastDb.open(); podcastDb.unsubscribeFromPodcast(pod.getUrl()); podcastDb.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8447/buggy-version/Podcast_Listener.src.edu.android.podcast_listener.MyCastsActivity.java", "BodyUseAPI": ["edu.android.podcast_listener.db.Podcast.getUrl()", "edu.android.podcast_listener.db.PodcastDAO.unsubscribeFromPodcast(pod.getUrl())"], "Fixed commit": "02931c55391067faebad7d2662c1755a7d662d23", "Url": "https://api.github.com/repos/DFried10/droid-podcast-player", "Date": "2013-03-26T02:49:33Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((location) == null) statusText.setText(getString(R.string.main_noloc)); else if ((filter_radius) < 10.1) statusText.setText(java.lang.String.format(getString(R.string.main_found), stations.size(), filter_radius)); else statusText.setText(java.lang.String.format(getString(R.string.main_foundall), stations.size()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5544/buggy-version/app.src.main.java.com.gerisoft.bikesharefinder.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1a01a47b436b77d508aca92fbf634c6a98519e91", "Url": "https://api.github.com/repos/Gerinych/Bike_Share_Finder", "Date": "2015-08-12T23:24:50Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((location) == null) dispStations.add(s); else if (((s.getDistance(location)) <= (filter_radius)) || ((filter_radius) >= 10.1)) dispStations.add(s);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5544/buggy-version/app.src.main.java.com.gerisoft.bikesharefinder.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1a01a47b436b77d508aca92fbf634c6a98519e91", "Url": "https://api.github.com/repos/Gerinych/Bike_Share_Finder", "Date": "2015-08-12T23:24:50Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.location.LocationManager.getLastKnownLocation(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (tmp != null) { location = new com.google.android.gms.maps.model.LatLng(tmp.getLatitude(), tmp.getLongitude()); android.util.Log.i(\"Location stuff\", java.lang.String.format(\"Provider set to %s, last known location = %f %f\", provider, location.latitude, location.longitude)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5544/buggy-version/app.src.main.java.com.gerisoft.bikesharefinder.MainActivity.java", "BodyUseAPI": ["android.location.Location.getLongitude()", "android.location.Location.getLatitude()"], "Fixed commit": "1a01a47b436b77d508aca92fbf634c6a98519e91", "Url": "https://api.github.com/repos/Gerinych/Bike_Share_Finder", "Date": "2015-08-12T23:24:50Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_world) == null) return new io.github.jevaengine.math.Vector3F();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5666/buggy-version/src.main.java.io.github.jevaengine.world.scene.camera.ControlledCamera.java", "BodyUseAPI": [], "Fixed commit": "87203047b32fba8c5290858d684654d404c4a3c2", "Url": "https://api.github.com/repos/JeremyWildsmith/jevaengine", "Date": "2017-02-15T08:00:03Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((current) == null) || ((directory) == null)) { return \"zzNullzz\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6126/buggy-version/MineTweaker3-API.src.main.java.minetweaker.runtime.providers.ScriptIteratorDirectory.java", "BodyUseAPI": [], "Fixed commit": "85b5d675ab01d09692563d922943747218a749dd", "Url": "https://api.github.com/repos/CraftTweaker/CraftTweaker", "Date": "2016-12-08T17:15:37Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tsuru2d.engine.lua.ExposeToLua.name()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (methodName.equals(\"\")) { methodName = mJavaMethod.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2988/buggy-version/core.src.com.tsuru2d.engine.lua.ExposedJavaMethod.java", "BodyUseAPI": [], "Fixed commit": "e1de41a941d1ebe8e3c8fc90cb6f84a8579c5edb", "Url": "https://api.github.com/repos/Tsuru2D/Tsuru2D-engine", "Date": "2015-10-31T21:31:12Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (m instanceof Nanorobot) { image.setFitHeight(((cellHeight) * 2)); image.setFitWidth(((cellWidth) * 2)); image.setX((((m.x()) * (cellWidth)) - (0.5 * (cellWidth)))); image.setY((((m.y()) * (cellHeight)) - (0.5 * (cellHeight)))); }else { image.setFitHeight(((cellHeight) * 1.25)); image.setFitWidth(((cellWidth) * 1.25)); image.setX((((m.x()) * (cellWidth)) - (0.125 * (cellWidth)))); image.setY((((m.y()) * (cellHeight)) - (0.125 * (cellHeight)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6008/buggy-version/src.GameMap.java", "BodyUseAPI": ["MapElement.x()", "MapElement.x()", "javafx.scene.image.ImageView.setX((((m.x()) * (cellWidth)) - (0.5 * (cellWidth))))", "javafx.scene.image.ImageView.setY((((m.y()) * (cellHeight)) - (0.5 * (cellHeight))))", "MapElement.y()", "javafx.scene.image.ImageView.setX((((m.x()) * (cellWidth)) - (0.125 * (cellWidth))))", "javafx.scene.image.ImageView.setY((((m.y()) * (cellHeight)) - (0.125 * (cellHeight))))", "MapElement.y()"], "Fixed commit": "a525c7f54c726f61d8f2c0f1e3d85d8f17b2b1d0", "Url": "https://api.github.com/repos/austinhua/Software-Design-and-Implementation", "Date": "2016-02-10T18:27:03Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.egov.dashboard.config.DashboardProperties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(kibanaURL)) { model.addAttribute(\"kibanaurl\", kibanaURL.replaceAll(\"<city_name>\", org.egov.infra.utils.EgovThreadLocals.getCityName())); return \"kibana-dashboard\"; }else return \"redirect:error/404\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1438/buggy-version/egov.egov-dashboardweb.src.main.java.org.egov.dashboard.web.controller.DashboardHomeController.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,org.egov.infra.utils.EgovThreadLocals.getCityName())", "org.springframework.ui.Model.addAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "ea407f753f9999ed4a51203fb9bc747ac4d66aed", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2015-11-26T06:08:31Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(finalWindow)) { tabbedPane.setSelectedComponent(panel3); next.setText(\"Save and continue\"); }else { tabbedPane.setSelectedComponent(panel1); panel5.setVisible(false); next.setText(\"Save and continue\"); back.setText(\"Back\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1756/buggy-version/FFXInterface.src.FrameContent.java", "BodyUseAPI": [], "Fixed commit": "7c948c53f9e3942a34fc3b544bb0333d2abf383f", "Url": "https://api.github.com/repos/Uibme11/JavaSwingApp", "Date": "2016-02-03T19:48:34Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (eventMapReverse.containsKey(\"off\")) { return eventMapReverse.get(\"off\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/9047/buggy-version/app.src.li.klass.fhem.domain.EnOceanDevice.java", "BodyUseAPI": ["li.klass.fhem.domain.EnOceanDevice.get(java.lang.String)"], "Fixed commit": "f4309368e80f3c868bf42754fbe11e6d3937014d", "Url": "https://api.github.com/repos/klassm/andFHEM", "Date": "2012-12-16T14:19:46Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (eventMapReverse.containsKey(\"on\")) { return eventMapReverse.get(\"on\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/9047/buggy-version/app.src.li.klass.fhem.domain.EnOceanDevice.java", "BodyUseAPI": ["li.klass.fhem.domain.EnOceanDevice.get(java.lang.String)"], "Fixed commit": "f4309368e80f3c868bf42754fbe11e6d3937014d", "Url": "https://api.github.com/repos/klassm/andFHEM", "Date": "2012-12-16T14:19:46Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (minDiscoveryTime != (java.lang.Long.MAX_VALUE)) { latestDiscovery = minDiscoveryTime; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4969/buggy-version/src.ch.epfl.p2pmapreduce.networkCore.JxtaMessageListener.java", "BodyUseAPI": [], "Fixed commit": "f15f50c56573255f61cc3f624bc3f04e48109ead", "Url": "https://api.github.com/repos/MGrin/p2p-mapreduce", "Date": "2014-05-18T17:17:05Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(message)) response.getOutputStream().write(message.getBytes());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2339/buggy-version/src.main.java.mvc.ErrorView.java", "BodyUseAPI": ["java.lang.String.getBytes()", "response.getOutputStream().write(byte[])"], "Fixed commit": "7363617daaf33224d41157288f125d33dcb79b82", "Url": "https://api.github.com/repos/kulyadredd/AndroidServer", "Date": "2014-04-04T00:27:20Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["drawing.asWidget().getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (parent == (this)) { orphan(drawing.asWidget()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4951/buggy-version/src.main.java.org.vaadin.gwtgraphics.client.AbstractDrawingContainer.java", "BodyUseAPI": [], "Fixed commit": "e53e23b62615d5d493db4a7d234069ecf999f3b8", "Url": "https://api.github.com/repos/tilioteo/vmaps", "Date": "2016-04-07T15:20:12Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gwt.user.client.ui.Widget.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (parent == (this)) { orphan(child); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4951/buggy-version/src.main.java.org.vaadin.gwtgraphics.client.AbstractDrawingContainer.java", "BodyUseAPI": [], "Fixed commit": "e53e23b62615d5d493db4a7d234069ecf999f3b8", "Url": "https://api.github.com/repos/tilioteo/vmaps", "Date": "2016-04-07T15:20:12Z"},
{"Line": "=>463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["au.com.vaadinutils.dao.JpaBaseDao<E, java.lang.Long>.findById(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (entity != null) { au.com.vaadinutils.dao.EntityManagerProvider.remove(entity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6356/buggy-version/src.main.java.au.com.vaadinutils.crud.ChildCrudView.java", "BodyUseAPI": ["au.com.vaadinutils.dao.EntityManagerProvider.remove(E)"], "Fixed commit": "60a3bcfa8ae579f9f6509487cbbcd269e2d0c7a2", "Url": "https://api.github.com/repos/rlsutton1/VaadinUtils", "Date": "2016-07-14T02:19:07Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((word.length()) < (ch.unibe.scg.team3.localDatabase.WordlistHandler.SMALL_WORD)) { word = (getFirstLetterFromInputToLowerCase(word)) + (ch.unibe.scg.team3.localDatabase.WordlistHandler.SHORT_WORD_TABLE_SUFFIX); }else { word = (getFirstLetterFromInputToLowerCase(word)) + (ch.unibe.scg.team3.localDatabase.WordlistHandler.LONG_WORD_TABLE_SUFFIX); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2887/buggy-version/WordFinder.src.ch.unibe.scg.team3.localDatabase.WordlistHandler.java", "BodyUseAPI": ["ch.unibe.scg.team3.localDatabase.WordlistHandler.getFirstLetterFromInputToLowerCase(java.lang.String)", "ch.unibe.scg.team3.localDatabase.WordlistHandler.getFirstLetterFromInputToLowerCase(java.lang.String)"], "Fixed commit": "07c7bcc901a6bbd85f01554b0baee818a6a16fc1", "Url": "https://api.github.com/repos/ese-unibe-ch/ese2013-team3", "Date": "2013-11-07T10:47:58Z"},
{"Line": "=>828", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultKlass == null) { resultKlass = jetbrick.template.parser.TypedKlassUtils.getMethodReturnTypedKlass(method); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2166/buggy-version/src.main.java.jetbrick.template.parser.JetTemplateCodeVisitor.java", "BodyUseAPI": [], "Fixed commit": "be7cdd3b4e04c3f3cd8415a9f17eb53c261d6cf1", "Url": "https://api.github.com/repos/subchen/jetbrick-template", "Date": "2014-06-02T11:58:52Z"},
{"Line": "=>823", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((\"get\".equals(method.getName())) && ((member.getDeclaringClass()) == (java.util.Map.class))) { if ((typedKlass.getTypeArgs().length) >= 2) { resultKlass = typedKlass.getTypeArgs()[1]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2166/buggy-version/src.main.java.jetbrick.template.parser.JetTemplateCodeVisitor.java", "BodyUseAPI": [], "Fixed commit": "be7cdd3b4e04c3f3cd8415a9f17eb53c261d6cf1", "Url": "https://api.github.com/repos/subchen/jetbrick-template", "Date": "2014-06-02T11:58:52Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tot > length) { return generateSong(length, firstPitch, conversionTable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6424/buggy-version/src.NMarkov.java", "BodyUseAPI": ["NMarkov.generateSong(double,int,java.util.List<java.lang.Float>)"], "Fixed commit": "e2e168cf3a47b672d91a9214d7168d606289cd04", "Url": "https://api.github.com/repos/Zapray/Automatisk-musik-komposition", "Date": "2015-03-03T10:18:05Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mytorrent.p2p.P2PProtocol.Message.getHitMessage()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((hm.getResult()) == (mytorrent.p2p.P2PProtocol.Result.HIT)) { mytorrent.p2p.FileHash.Entry newEntry = mytorrent.peer.IndexServer.remoteFileHash.new mytorrent.peer.Entry(hm.getHitPeerID(), hm.getFilename()); mytorrent.peer.IndexServer.remoteFileHash.addEntry(newEntry); mytorrent.p2p.PeerAddress toAddPeerHash = new mytorrent.p2p.PeerAddress(hm.getHitPeerID(), hm.getHitPeerHost(), hm.getHitPeerISPort(), hm.getHitPeerFSPort()); mytorrent.peer.IndexServer.peerHash.addValue(hm.getHitPeerID(), toAddPeerHash); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4893/buggy-version/src.main.java.mytorrent.peer.IndexServer.java", "BodyUseAPI": ["mytorrent.p2p.P2PProtocol.HitMessage.getFilename()", "mytorrent.p2p.P2PProtocol.HitMessage.getHitPeerID()", "mytorrent.p2p.P2PProtocol.HitMessage.getHitPeerID()", "mytorrent.p2p.P2PProtocol.HitMessage.getHitPeerISPort()", "mytorrent.p2p.P2PProtocol.HitMessage.getHitPeerID()", "mytorrent.p2p.P2PProtocol.HitMessage.getHitPeerFSPort()", "mytorrent.p2p.PeerHash.addValue(hm.getHitPeerID(),mytorrent.p2p.PeerAddress)", "mytorrent.p2p.P2PProtocol.HitMessage.getHitPeerHost()"], "Fixed commit": "38f59530c1bfd55c26eb528e3231feb6e3367d08", "Url": "https://api.github.com/repos/bfeng/myTorrent", "Date": "2012-10-13T19:41:12Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (RuleUtil.Translated.equals(((de.tub.tfs.henshin.tgg.TEdge) (ruleEdgeRHS)).getMarkerType())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/177/buggy-version/de.tub.tfs.henshin.tgg.editor.src.de.tub.tfs.henshin.tggeditor.util.EdgeUtil.java", "BodyUseAPI": [], "Fixed commit": "e579a31277c773f830c9c28d8be6e51a0f2113c6", "Url": "https://api.github.com/repos/de-tu-berlin-tfs/Henshin-Editor", "Date": "2013-05-23T11:38:20Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cPlayer.getCurrentChunk().isDirectlyOwnedBy(cPlayer))) { Language.CHUNK_NOT_OWNED.bad(cPlayer); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2284/buggy-version/src.main.java.com.dumptruckman.chunky.command.CommandChunkyPermission.java", "BodyUseAPI": ["Language.CHUNK_NOT_OWNED.bad(com.dumptruckman.chunky.command.ChunkyPlayer)"], "Fixed commit": "2164f46f9732e5a67239011ebf6cc189f9b0f09f", "Url": "https://api.github.com/repos/ChunkyDev/Chunky", "Date": "2011-09-15T01:39:42Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.massivecraft.factions.cmd.CmdShowPerms.argAsBestFPlayerMatch(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (you == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/293/buggy-version/src.com.massivecraft.factions.cmd.CmdShowPerms.java", "BodyUseAPI": [], "Fixed commit": "24f954c6d7f0da5c000e345b7fea5ad187d42fb2", "Url": "https://api.github.com/repos/MineSworn/SwornNations", "Date": "2013-07-01T18:37:45Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((power.signum()) < 0) { return org.eclipse.imp.pdb.facts.impl.primitive.BigDecimalValue.newReal(java.math.BigDecimal.ONE.divide(value.pow(power.negate().intValue()), value.precision(), java.math.RoundingMode.HALF_EVEN)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4971/buggy-version/src.org.eclipse.imp.pdb.facts.impl.primitive.BigDecimalValue.java", "BodyUseAPI": ["power.negate().intValue()", "org.eclipse.imp.pdb.facts.impl.primitive.BigDecimalValue.newReal(java.math.BigDecimal)", "java.math.BigDecimal.pow(power.negate().intValue())", "java.math.BigDecimal.divide(java.math.BigDecimal,int,java.math.RoundingMode)", "org.eclipse.imp.pdb.facts.IInteger.negate()"], "Fixed commit": "5d6bf03c18a5f77e1dc52b3060c0f3be845bc346", "Url": "https://api.github.com/repos/cwi-swat/pdb.values", "Date": "2014-11-10T12:08:14Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((values.length) > 0) num = (values[0]) - (values[((values.length) - 1)]); else num = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3605/buggy-version/DietTracker.src.me.ci.WeightTracker.java", "BodyUseAPI": [], "Fixed commit": "3097b96884609d0c81b188782f0044d4b70c3c01", "Url": "https://api.github.com/repos/TheDudeFromCI/DietTracker", "Date": "2015-01-18T03:40:13Z"},
{"Line": "=>1740", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (size == 0) { bf.append(\"N/A\", StyledStringBuffer.MONOSPACED); }else if (((type_class == (ISymbols.TypeClass.integer)) || (type_class == (ISymbols.TypeClass.real))) || (type_class == (ISymbols.TypeClass.complex))) { bf.append(toNumberString(10, type_class, data, offs, size, big_endian, null, null), StyledStringBuffer.MONOSPACED); }else { bf.append(\"0x\", StyledStringBuffer.MONOSPACED); bf.append(toNumberString(16, type_class, data, offs, size, big_endian, null, null), StyledStringBuffer.MONOSPACED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2577/buggy-version/plugins.org.eclipse.tcf.debug.ui.src.org.eclipse.tcf.internal.debug.ui.model.TCFNodeExpression.java", "BodyUseAPI": ["org.eclipse.tcf.internal.debug.ui.model.TCFNodeExpression.toNumberString(int,ISymbols.TypeClass,byte[],int,int,boolean,<nulltype>,<nulltype>)", "org.eclipse.tcf.internal.debug.ui.model.StyledStringBuffer.append(java.lang.String,StyledStringBuffer.MONOSPACED)", "org.eclipse.tcf.internal.debug.ui.model.TCFNodeExpression.toNumberString(int,ISymbols.TypeClass,byte[],int,int,boolean,<nulltype>,<nulltype>)", "org.eclipse.tcf.internal.debug.ui.model.StyledStringBuffer.append(java.lang.String,StyledStringBuffer.MONOSPACED)"], "Fixed commit": "64d6d4fdaf51414d009ebc5d123363163f41ead0", "Url": "https://api.github.com/repos/eclipse/tcf", "Date": "2017-06-14T18:14:19Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (vBuffer == null) { throw new java.lang.IllegalArgumentException(\"A mesh should at least contain a Position buffer\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1983/buggy-version/jme3-core.src.main.java.com.jme3.collision.bih.BIHTree.java", "BodyUseAPI": [], "Fixed commit": "c7606ccff2527acc1b6495a87bc742646c030e07", "Url": "https://api.github.com/repos/Hec-P/jmonkeyengine", "Date": "2015-07-12T18:43:54Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.activemq.command.Message.getOriginalDestination()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (origDest != null) { org.apache.activemq.util.ByteSequence origDestBytes = marshaller.marshal(origDest); origDestBytes.compact(); coreMessage.putBytesProperty(org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.AMQ_MSG_ORIG_DESTINATION, origDestBytes.data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/619/buggy-version/artemis-protocols.artemis-openwire-protocol.src.main.java.org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.java", "BodyUseAPI": ["org.apache.activemq.wireformat.WireFormat.marshal(org.apache.activemq.command.ActiveMQDestination)"], "Fixed commit": "0465ac532d553b3172a7628b539658d7bc4e017f", "Url": "https://api.github.com/repos/apache/activemq-artemis", "Date": "2016-02-18T12:52:32Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!failedConstraint) { solution.setObjective((i++), evaluate(dimension, solution)); }else { solution.setObjective((i++), IFitnessDimension.CONSTRAINT_VIOLATED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1298/buggy-version/plugins.at.ac.tuwien.big.moea.src.at.ac.tuwien.big.moea.search.fitness.MultiDimensionalFitnessFunction.java", "BodyUseAPI": [], "Fixed commit": "f1ace8dbae1087f1fd93a9bd25576befafc9f8ca", "Url": "https://api.github.com/repos/martin-fleck/momot", "Date": "2016-08-11T20:01:31Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Parser.peekNextToken()", "Parser.peekNextToken()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((peek1 == null) || (peek2 == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/823/buggy-version/CSC512Parser.src.Parser.java", "BodyUseAPI": [], "Fixed commit": "18000daafef804268d452b4070a8ad98e8bfa900", "Url": "https://api.github.com/repos/shaowns/CSC512Projects", "Date": "2016-09-26T22:46:24Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mChatClient) != null) { mChatClient.tearDown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5842/buggy-version/app.src.main.java.ru.mit.au.spb.olga.catendar.ChatConnection.java", "BodyUseAPI": [], "Fixed commit": "0d496ea5c1946108c56dfd85cf6dae8179e2e378", "Url": "https://api.github.com/repos/olga24912/Catendar", "Date": "2015-12-16T16:55:18Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<org.telegram.messenger.MessageObject>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((popup != 0) && ((messageObject.messageOwner.to_id.channel_id) != 0)) && (!(messageObject.isMegagroup()))) { popup = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3886/buggy-version/TMessagesProj.src.main.java.org.telegram.messenger.NotificationsController.java", "BodyUseAPI": [], "Fixed commit": "f563fbbb0518f81c9055368d4f913915e7066a38", "Url": "https://api.github.com/repos/alexsh/Telegram", "Date": "2016-05-25T23:27:33Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (currQueue != null) { addTracks(currQueue); }else { android.widget.Toast.makeText(getActivity(), \"Music Queue is Currently Empty\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7310/buggy-version/app.src.main.java.com.example.lucasrosario.extensionchord.ViewQueueFragment.java", "BodyUseAPI": ["com.example.lucasrosario.extensionchord.ViewQueueFragment.addTracks(com.example.lucasrosario.extensionchord.ParseMusicQueue)"], "Fixed commit": "b9a15cedbc560498bf04461e54e59c2636e238fb", "Url": "https://api.github.com/repos/rosario-luke/ExtensionChord", "Date": "2015-04-16T00:52:47Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currQueue.getTrackList()) == null) || (currQueue.getTrackList().isEmpty())) { android.widget.Toast.makeText(getActivity(), \"Music Queue is Currently Empty\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7310/buggy-version/app.src.main.java.com.example.lucasrosario.extensionchord.ViewQueueFragment.java", "BodyUseAPI": [], "Fixed commit": "b9a15cedbc560498bf04461e54e59c2636e238fb", "Url": "https://api.github.com/repos/rosario-luke/ExtensionChord", "Date": "2015-04-16T00:52:47Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.sejda.sambox.pdmodel.PDPage, org.sejda.impl.sambox.SplitDownTheMiddleTask.Offsets>.get(org.sejda.sambox.pdmodel.PDPage)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (offsets == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8558/buggy-version/sejda-sambox.src.main.java.org.sejda.impl.sambox.SplitDownTheMiddleTask.java", "BodyUseAPI": [], "Fixed commit": "2655fc22a021cb31f87f84e514992a9d41deeb42", "Url": "https://api.github.com/repos/torakiki/sejda", "Date": "2016-11-22T12:41:42Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index < 0) || (index > ((size()) - 1))) { throw new java.lang.IndexOutOfBoundsException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8270/buggy-version/SHAD.src.ru.yandex.shad.belova.java.problem1.MyLinkedList.java", "BodyUseAPI": [], "Fixed commit": "fa04dd6f3ffb8bca8bd40a5f2c9334aed58bf485", "Url": "https://api.github.com/repos/jhilary/Java", "Date": "2013-09-29T14:05:21Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index < 0) || (index > ((size()) - 1))) { throw new java.lang.IndexOutOfBoundsException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8270/buggy-version/SHAD.src.ru.yandex.shad.belova.java.problem1.MyLinkedList.java", "BodyUseAPI": [], "Fixed commit": "fa04dd6f3ffb8bca8bd40a5f2c9334aed58bf485", "Url": "https://api.github.com/repos/jhilary/Java", "Date": "2013-09-29T14:05:21Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flyVector > 8.0) { flyVector = 8.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8029/buggy-version/PistonJump.src.syam.PistonJump.Listener.BlockListener.java", "BodyUseAPI": [], "Fixed commit": "4278c7e6bcae4d79d71c29e54bd195dbcbed6c67", "Url": "https://api.github.com/repos/syamn/PistonJump", "Date": "2012-08-05T09:43:04Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((scheduleInfo.getDateExceptions()) != null) { for (java.lang.String dateException : scheduleInfo.getDateExceptions()) { try { java.text.DateFormat formatter = new java.text.SimpleDateFormat(ScheduleInfo.FULL_DAY_FORMAT); java.util.Date date = formatter.parse(dateException); } catch (java.lang.Exception e) { throw APIException.badRequests.schduleInfoInvalid(ScheduleInfo.DATE_EXCEPTIONS); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3843/buggy-version/vipr-portal.StorageAPI.src.java.com.emc.sa.api.ScheduledEventService.java", "BodyUseAPI": ["com.emc.sa.api.ScheduleInfo.getDateExceptions()"], "Fixed commit": "c73ea6f10e9152ff7845a29e6876aede6fd3dffe", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-07-26T14:46:24Z"},
{"Line": "=>657", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (continuePlaying) { if (concreteGameType.isThereActualGameType(\"Durchmars\")) { if (activePlayerWhoTookCards != (activePlayerList.get(lastPlayerWithConcreteGameType))) { didPlayerNotTakeCardInDurchmarsGame = true; if ((concreteGameType.getGameTypeList().size()) == 1) { evaluateGame(activePlayerWhoTookCards); continuePlaying = false; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8853/buggy-version/UltiCardGame.src.ulti.UltiGame.java", "BodyUseAPI": [], "Fixed commit": "5ca7319eee1e311df7136b6b001a3d16952fa608", "Url": "https://api.github.com/repos/enepeti/szoftarch-ulti", "Date": "2015-11-29T17:58:21Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.xtext.xbase.jvmmodel.ILogicalContainerProvider.getLogicalContainer(createExtensionInfo.getCreateExpression())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((cacheMethod.getDeclaringType()) instanceof org.eclipse.xtext.common.types.JvmGenericType) { org.eclipse.xtext.common.types.JvmTypeReference superClass = ((org.eclipse.xtext.common.types.JvmGenericType) (cacheMethod.getDeclaringType())).getExtendedClass(); if (superClass != null) { appendable.declareVariable(superClass.getType(), \"super\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7226/buggy-version/plugins.org.eclipse.xtext.xtend2.src.org.eclipse.xtext.xtend2.jvmmodel.CacheMethodCompileStrategy.java", "BodyUseAPI": ["org.eclipse.xtext.common.types.JvmOperation.getDeclaringType()", "((org.eclipse.xtext.common.types.JvmGenericType) (cacheMethod.getDeclaringType())).getExtendedClass()"], "Fixed commit": "18688f4e549bfb98c30aeceb5b9bfc663f781664", "Url": "https://api.github.com/repos/knutwannheden/xtext", "Date": "2011-11-07T08:14:26Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(db.isOpen())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3749/buggy-version/datakit.src.main.java.org.md2k.datakit.Logger.DatabaseTable_Data.java", "BodyUseAPI": [], "Fixed commit": "a536e6116597596fceeea30e046eb74723542193", "Url": "https://api.github.com/repos/MD2Korg/mCerebrum-DataKit", "Date": "2015-09-16T08:10:28Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bergerkiller.bukkit.common.collections.BlockMap<com.bergerkiller.bukkit.tc.signactions.spawner.SpawnSign>.put(event.getBlock(),com.bergerkiller.bukkit.tc.signactions.spawner.SpawnSign)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (oldSign != null) { oldSign.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2329/buggy-version/src.main.java.com.bergerkiller.bukkit.tc.signactions.SignActionSpawn.java", "BodyUseAPI": ["com.bergerkiller.bukkit.tc.signactions.spawner.SpawnSign.stop()"], "Fixed commit": "70b706fc853c0b9356193ac1aaea721d03971b1e", "Url": "https://api.github.com/repos/bergerhealer/TrainCarts", "Date": "2017-11-27T21:48:12Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.starbase.starteam.Item.getModifiedTime()", "repo.getView().getCreatedTime()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((asOfTime.getDoubleValue()) < (viewCreateTime.getDoubleValue())) asOfTime = viewCreateTime;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5538/buggy-version/src.java.com.aap.gitst.Utils.java", "BodyUseAPI": [], "Fixed commit": "d656a80db5710f258e395bafd1379611f8634798", "Url": "https://api.github.com/repos/warrenfalk/git-st", "Date": "2013-03-01T21:21:49Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Game.world.isInBoarders(c)) { neighbors[i] = Game.world.getField(c).getResource().fromResourceToDouble(); }else { neighbors[i] = Resource.none.fromResourceToDouble(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/9207/buggy-version/src.Game.java", "BodyUseAPI": ["Game.world.getField(c).getResource().fromResourceToDouble()", "World.getField(Coordinate)", "Game.world.getField(c).getResource()"], "Fixed commit": "7f1e2d4b2aa0be29bfa2124c77716a26cb495129", "Url": "https://api.github.com/repos/wicket1001/EvAi", "Date": "2017-10-25T21:01:02Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["butti.javalibs.config.Settings.getSetting(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (pluginName != null) { configuration.setSelectedPluginName(pluginName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7975/buggy-version/Simulation.src.ch.zhaw.simulation.app.SimulationSettingsSaver.java", "BodyUseAPI": ["ch.zhaw.simulation.model.simulation.SimulationConfiguration.setSelectedPluginName(java.lang.String)"], "Fixed commit": "712ebb3c1af28b1baa9c8b6c5edbddb3217d7293", "Url": "https://api.github.com/repos/andreasb242/Simulation", "Date": "2012-03-27T09:02:54Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(d.get(\"json\"),java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((task.getTaskType()) == (logic.Search.TASK)) { hitList.add(gson.fromJson(d.get(\"json\"), logic.Task.class)); }else if ((task.getTaskType()) == (logic.Search.DEADLINETASK)) { hitList.add(gson.fromJson(d.get(\"json\"), logic.DeadlineTask.class)); }else if ((task.getTaskType()) == (logic.Search.EVENT)) { hitList.add(gson.fromJson(d.get(\"json\"), logic.Event.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7041/buggy-version/logic.Search.java", "BodyUseAPI": ["logic.Task.getTaskType()", "logic.Task.getTaskType()"], "Fixed commit": "3fb8b2e490525396057b87fbba746d784fbe805b", "Url": "https://api.github.com/repos/CS2103-Aug2015-w15-4j/main", "Date": "2015-10-30T06:39:14Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ba.unsa.etf.si.app.Inventura.Kontroleri.KlasaArtikalaKontroler.nadjiIme(naziv)) == null) { javax.swing.JOptionPane.showMessageDialog(null, \"Trazena klasa artikla ne postoji u bazi!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3473/buggy-version/Projekat.src.main.java.ba.unsa.etf.si.app.Inventura.GUI.BrisanjeKlaseArtikalGUI.java", "BodyUseAPI": [], "Fixed commit": "68b78266c209feabdddafc5369d5643f92d73808", "Url": "https://api.github.com/repos/SoftverInzenjeringETFSA/Si2015Tim4", "Date": "2016-05-18T11:28:30Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isDestroyed())) finish();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8916/buggy-version/app.src.main.java.com.breadwallet.presenter.activities.IntroRecoverWordsActivity.java", "BodyUseAPI": [], "Fixed commit": "1a93023e3a2a6050bbe684c5c6fb0c79d6a650dc", "Url": "https://api.github.com/repos/breadwallet/breadwallet-android", "Date": "2017-04-20T17:24:41Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isDestroyed())) finish();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8916/buggy-version/app.src.main.java.com.breadwallet.presenter.activities.RestoreActivity.java", "BodyUseAPI": [], "Fixed commit": "1a93023e3a2a6050bbe684c5c6fb0c79d6a650dc", "Url": "https://api.github.com/repos/breadwallet/breadwallet-android", "Date": "2017-04-20T17:24:41Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.content.ContextCompat.checkSelfPermission(org.fossasia.phimpme.base.BaseActivity,android.Manifest.permission.WRITE_EXTERNAL_STORAGE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (checkStoragePermission == (android.content.pm.PackageManager.PERMISSION_GRANTED)) presentShowcaseSequence();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8948/buggy-version/app.src.main.java.org.fossasia.phimpme.base.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "0b7f2ee9258dd6f2229bef029c7447a54a44ac0b", "Url": "https://api.github.com/repos/sridharjajoo/phimpme-android", "Date": "2017-09-29T14:14:25Z"},
{"Line": "=>483", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<com.sun.jdi.Field, com.sun.jdi.Value>.get(com.sun.jdi.Field)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (childVarValue != null) { microbat.model.variable.FieldVar var = new microbat.model.variable.FieldVar(field.isStatic(), field.name(), childVarValue.type().toString()); appendVarVal(val, var, childVarValue, level, thread, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8905/buggy-version/microbat.src.main.microbat.codeanalysis.runtime.variable.VariableValueExtractor.java", "BodyUseAPI": ["com.sun.jdi.Value.type()", "com.sun.jdi.Type.toString()", "microbat.codeanalysis.runtime.variable.VariableValueExtractor.appendVarVal(microbat.model.value.ReferenceValue,microbat.model.variable.FieldVar,com.sun.jdi.Value,int,com.sun.jdi.ThreadReference,boolean)"], "Fixed commit": "4a7bb7dab56535fceb30168e44e9e8f0945274eb", "Url": "https://api.github.com/repos/sunjun-group/Ziyuan", "Date": "2016-02-04T05:41:08Z"},
{"Line": "=>979", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dir == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4623/buggy-version/hoya-core.src.main.java.org.apache.hadoop.hoya.tools.HoyaUtils.java", "BodyUseAPI": [], "Fixed commit": "b65c3c3dfd205518bf34c3a6d9b8bdd58a11e418", "Url": "https://api.github.com/repos/hortonworks/hoya", "Date": "2013-10-21T16:07:09Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useChainId) { atomChainId = atomChain.getId(); seqResChainId = seqRes.getId(); }else { atomChainId = atomChain.getName(); seqResChainId = seqRes.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5759/buggy-version/biojava-structure.src.main.java.org.biojava.nbio.structure.io.SeqRes2AtomAligner.java", "BodyUseAPI": [], "Fixed commit": "2abd1e1d728e887d8c5a889cb97b23d82e712682", "Url": "https://api.github.com/repos/josemduarte/biojava", "Date": "2016-05-10T05:15:44Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.ceil(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (roundedPrice > 0) { int[] pricesGenerate = new int[PRICE_LIMIT]; java.lang.String stringBuilder = \"\"; for (int i = 0; i < (pricesGenerate.length); i++) { pricesGenerate[i] = 0; if (i == roundedPrice) { (pricesGenerate[i])++; } stringBuilder = (stringBuilder + (new java.text.DecimalFormat(\"0.#\").format(pricesGenerate[i]))) + \"_\"; } addUsage(product, stringBuilder.substring(0, ((stringBuilder.length()) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2489/buggy-version/app.src.main.java.com.akitektuo.smartlist.database.DatabaseHelper.java", "BodyUseAPI": [], "Fixed commit": "7edc99916304ce3604c11e36593c1e62ce82192e", "Url": "https://api.github.com/repos/Akitektuo/SmartList", "Date": "2017-12-08T16:24:23Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (token.regionMatches(0, \"#\", 0, 1)) return graphics.WavefrontObjLoader.TokenType.COMMENT;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6456/buggy-version/src.graphics.WavefrontObjLoader.java", "BodyUseAPI": [], "Fixed commit": "9e7634d1fd0ffbb97d3c6d8bcde8608fa86a3725", "Url": "https://api.github.com/repos/ChrisLundquist/CS143-Project", "Date": "2011-04-13T07:00:46Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (field == null) { resolver.remove(annotation.value()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8505/buggy-version/core.src.main.java.com.strategicgains.hyperexpress.annotation.AnnotationTokenBinder.java", "BodyUseAPI": [], "Fixed commit": "68a55e839ce03dbb22bc488fcaaf8407023084e9", "Url": "https://api.github.com/repos/RestExpress/HyperExpress", "Date": "2017-10-12T23:51:51Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type.isEnum()) { return com.google.api.codegen.util.TypedValue.create(getTypeName(type), \"%s.forNumber(0)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/562/buggy-version/src.main.java.com.google.api.codegen.transformer.java.JavaModelTypeNameConverter.java", "BodyUseAPI": ["com.google.api.codegen.transformer.java.JavaModelTypeNameConverter.getTypeName(com.google.api.tools.framework.model.TypeRef)", "com.google.api.codegen.util.TypedValue.create(com.google.api.codegen.util.TypeName,java.lang.String)"], "Fixed commit": "2b5db3ad853b9d86ecaa3e0d87a9f958c7eb3d0f", "Url": "https://api.github.com/repos/garrettjonesgoogle/toolkit", "Date": "2016-08-22T18:45:56Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(rawGroups.get(gid).getMemberList().contains(gid))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1480/buggy-version/src.main.java.com.org.shark.graphtoolkits.applications.MergeGroups.java", "BodyUseAPI": [], "Fixed commit": "e6cbb3a8b4454e66a0af22bc04d66fdfff1dca96", "Url": "https://api.github.com/repos/shaoyx/GraphToolkits", "Date": "2015-10-10T11:27:30Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isYearless()) { return org.fenixedu.bennu.core.i18n.BundleUtil.getString(org.fenixedu.ulisboa.specifications.domain.curricularPeriod.rule.transition.MODULE_BUNDLE, (\"label.\" + (this.getClass().getSimpleName())), getCredits().toString()); }else { final int yearMin = getYearMinFinal(); final int yearMax = getYearMaxFinal(); if (yearMin == yearMax) { return org.fenixedu.bennu.core.i18n.BundleUtil.getString(org.fenixedu.ulisboa.specifications.domain.curricularPeriod.rule.transition.MODULE_BUNDLE, ((\"label.\" + (this.getClass().getSimpleName())) + \".year\"), getCredits().toString(), java.lang.String.valueOf(yearMin)); }else { return org.fenixedu.bennu.core.i18n.BundleUtil.getString(org.fenixedu.ulisboa.specifications.domain.curricularPeriod.rule.transition.MODULE_BUNDLE, ((\"label.\" + (this.getClass().getSimpleName())) + \".years\"), getCredits().toString(), java.lang.String.valueOf(yearMin), java.lang.String.valueOf(yearMax)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/9027/buggy-version/src.main.java.org.fenixedu.ulisboa.specifications.domain.curricularPeriod.rule.transition.ApprovedCredits.java", "BodyUseAPI": [], "Fixed commit": "c8629adf10270ec2f8fe682552f392da78cb61c4", "Url": "https://api.github.com/repos/qub-it/fenixedu-ulisboa-specifications", "Date": "2016-10-25T14:14:37Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shellSelection.isSelected()) && ((shell) != null)) { shell.play(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6485/buggy-version/CS5405.project.source.Application.java", "BodyUseAPI": [], "Fixed commit": "2810dd56ded7e55afadc51953fba1fa77511e179", "Url": "https://api.github.com/repos/arlininger/java_gui_class", "Date": "2014-11-14T00:12:02Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(projectNames.contains(oldName))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6099/buggy-version/vulcan-core.source.main.java.net.sourceforge.vulcan.spring.jdbc.JdbcBuildOutcomeStore.java", "BodyUseAPI": [], "Fixed commit": "f8671851b947d1ca76d0342dcd2d86832eb9b0d8", "Url": "https://api.github.com/repos/chriseldredge/vulcan", "Date": "2011-01-04T17:15:58Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item.getLargeImageUrl()) == null) { return com.google.common.collect.ImmutableList.of(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4238/buggy-version/src.main.java.org.atlasapi.remotesite.amazonunbox.AmazonUnboxContentExtractor.java", "BodyUseAPI": [], "Fixed commit": "ffc261124a727a6bc93b27dc83535304872ed1d6", "Url": "https://api.github.com/repos/atlasapi/atlas", "Date": "2017-04-12T17:02:34Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_bundleClassLoader) == null) { return super.hashCode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2132/buggy-version/pax-web-jsp.src.main.java.org.ops4j.pax.web.jsp.internal.JasperClassLoader.java", "BodyUseAPI": [], "Fixed commit": "50428bb37d818f37648bf894875a4c2fdada699c", "Url": "https://api.github.com/repos/ops4j/org.ops4j.pax.web", "Date": "2012-11-15T10:01:27Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((textInfo[2]) == null) || ((textInfo[3]) == null)) { android.widget.Toast.makeText(getBaseContext(), \"Please Enter All the Necessary Information\", Toast.LENGTH_SHORT).show(); }else { android.widget.EditText messageText = ((android.widget.EditText) (findViewById(R.id.messageText))); textInfo[4] = messageText.getText().toString(); android.telephony.SmsManager smsManager = android.telephony.SmsManager.getDefault(); textInfo[0] = rand.nextInt(); if (isNow) { smsManager.sendTextMessage(((java.lang.String) (textInfo[1])), null, messageText.getText().toString(), null, null); android.widget.Toast.makeText(getBaseContext(), \"Sending text now...\", Toast.LENGTH_SHORT).show(); isNow = false; textInfo[6] = \"true\"; textInfo[7] = 0; }else { android.content.Intent textIntent = new android.content.Intent(this, com.gauthamcity12.textscheduler.WakeLocker.class); int counter = 0; textInfo[7] = infoCal.getTimeInMillis(); for (java.lang.Object s : textInfo) { if (counter == 0) { textIntent.putExtra((\"Text Info: \" + counter), java.lang.String.valueOf(((int) (s)))); }else if (counter == 7) { textIntent.putExtra((\"Text Info: \" + counter), java.lang.String.valueOf(((long) (s)))); }else { textIntent.putExtra((\"Text Info: \" + counter), ((java.lang.String) (s))); } counter++; } android.app.PendingIntent pendingText = android.app.PendingIntent.getBroadcast(this, ((int) (textInfo[0])), textIntent, 0); android.app.AlarmManager alarmManager = ((android.app.AlarmManager) (getSystemService(com.gauthamcity12.textscheduler.ALARM_SERVICE))); alarmManager.set(alarmManager.RTC_WAKEUP, infoCal.getTimeInMillis(), pendingText); android.widget.Toast.makeText(getBaseContext(), \"Text has been scheduled\", Toast.LENGTH_SHORT).show(); } android.content.ContentValues values = new android.content.ContentValues(); values.put(TextInfoStore.KEY_ID, ((int) (textInfo[0]))); values.put(TextInfoStore.KEY_PHONE, ((java.lang.String) (textInfo[1]))); values.put(TextInfoStore.KEY_DATE, ((java.lang.String) (textInfo[2]))); values.put(TextInfoStore.KEY_TIME, ((java.lang.String) (textInfo[3]))); values.put(TextInfoStore.KEY_CONTENT, ((java.lang.String) (textInfo[4]))); values.put(TextInfoStore.KEY_CONTACT, ((java.lang.String) (textInfo[5]))); values.put(TextInfoStore.KEY_SENTSTATUS, ((java.lang.String) (textInfo[6]))); values.put(TextInfoStore.KEY_TIMESTAMP, ((long) (textInfo[7]))); long newRowId = com.gauthamcity12.textscheduler.MainActivity.db.insert(TextInfoStore.TABLE_NAME, null, values); saveMap(((int) (textInfo[0])), newRowId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/170/buggy-version/app.src.main.java.com.gauthamcity12.textscheduler.MainActivity.java", "BodyUseAPI": ["android.content.ContentValues.put(TextInfoStore.KEY_ID,java.lang.Object)", "android.telephony.SmsManager.sendTextMessage(java.lang.Object,<nulltype>,messageText.getText().toString(),<nulltype>,<nulltype>)", "com.gauthamcity12.textscheduler.MainActivity.saveMap(java.lang.Object,long)", "android.content.ContentValues.put(TextInfoStore.KEY_CONTENT,java.lang.Object)", "android.content.ContentValues.put(TextInfoStore.KEY_SENTSTATUS,java.lang.Object)", "android.content.ContentValues.put(TextInfoStore.KEY_TIMESTAMP,java.lang.Object)", "android.content.ContentValues.put(TextInfoStore.KEY_DATE,java.lang.Object)", "android.content.ContentValues.put(TextInfoStore.KEY_CONTACT,java.lang.Object)", "android.app.PendingIntent.getBroadcast(com.gauthamcity12.textscheduler.MainActivity,java.lang.Object,android.content.Intent,int)", "android.content.ContentValues.put(TextInfoStore.KEY_PHONE,java.lang.Object)", "android.content.ContentValues.put(TextInfoStore.KEY_TIME,java.lang.Object)"], "Fixed commit": "941cd19b92dcfe2da239a38af00e16d3459bbc13", "Url": "https://api.github.com/repos/gauthamcity12/TextScheduler", "Date": "2015-08-04T04:31:12Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["1.getContext()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (context == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8139/buggy-version/app.src.main.java.com.paulvarry.intra42.bottomSheet.BottomSheetTopicInfoDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "e50c9c03ccfde46a73c7fd4a1fef1f6ebdd9a7cf", "Url": "https://api.github.com/repos/pvarry/intra42", "Date": "2017-07-12T15:59:09Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["1.getContext()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (context != null) android.widget.Toast.makeText(context, ((\"Failed: \" + (t.getMessage())) + \"\\nDon\\'t forget to refresh\"), Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8139/buggy-version/app.src.main.java.com.paulvarry.intra42.bottomSheet.BottomSheetTopicInfoDialogFragment.java", "BodyUseAPI": ["android.widget.Toast.makeText(context, ((\"Failed: \" + (t.getMessage())) + \"\\nDon\\'t forget to refresh\"), Toast.LENGTH_SHORT).show()", "android.widget.Toast.makeText(android.content.Context,java.lang.String,Toast.LENGTH_SHORT)"], "Fixed commit": "e50c9c03ccfde46a73c7fd4a1fef1f6ebdd9a7cf", "Url": "https://api.github.com/repos/pvarry/intra42", "Date": "2017-07-12T15:59:09Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (latest == null) { haveric.recipeManager.Updater.query(null); latest = haveric.recipeManager.Updater.latestVersion; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3895/buggy-version/src.haveric.recipeManager.Updater.java", "BodyUseAPI": [], "Fixed commit": "cc0e32028d22e128c2bc888dc571362766aff28d", "Url": "https://api.github.com/repos/haveric/RecipeManager2", "Date": "2014-10-20T04:04:18Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((width) <= (coverSize)) { x = android.graphics.Bitmap.createBitmap(thumb, 0, 0, width, coverSize); }else { x = android.graphics.Bitmap.createBitmap(thumb, 0, 0, coverSize, coverSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2112/buggy-version/app.src.main.java.com.lwm.app.adapter.AlbumCoversAdapter.java", "BodyUseAPI": [], "Fixed commit": "6f46c4496f6664fadc443b413d239ec59e42190b", "Url": "https://api.github.com/repos/s0nerik/LWM", "Date": "2014-11-21T03:57:50Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (net.pms.util.StringUtil.hasValue(tagInfo.year)) { if ((tagInfo.year.length()) > 4) { result.updateString(\"YEAR\", tagInfo.year.substring(0, 4)); }else { result.updateString(\"YEAR\", tagInfo.year); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7508/buggy-version/src.main.java.net.pms.database.TableMusicBrainzReleases.java", "BodyUseAPI": ["tagInfo.year.substring(int,int)", "java.sql.ResultSet.updateString(java.lang.String,tagInfo.year.substring(0, 4))", "java.sql.ResultSet.updateString(java.lang.String,tagInfo.year)", "tagInfo.year.length()"], "Fixed commit": "bbfbc69e81118e189839bf2f1b25a5dec9fbc9d8", "Url": "https://api.github.com/repos/UniversalMediaServer/UniversalMediaServer", "Date": "2016-12-18T06:28:01Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_configuration) != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4845/buggy-version/portal-impl.src.com.liferay.portal.freemarker.FreeMarkerEngineImpl.java", "BodyUseAPI": [], "Fixed commit": "d4d186f70d138ff34c8cb768833c7ee827cf2828", "Url": "https://api.github.com/repos/achaparro/liferay-portal", "Date": "2011-09-30T09:52:50Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_velocityEngine) != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4845/buggy-version/portal-impl.src.com.liferay.portal.velocity.VelocityEngineImpl.java", "BodyUseAPI": [], "Fixed commit": "d4d186f70d138ff34c8cb768833c7ee827cf2828", "Url": "https://api.github.com/repos/achaparro/liferay-portal", "Date": "2011-09-30T09:52:50Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.currentTimeMillis()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((curTime - 2000) > (lastStep)) { spm[((spmIndex) % (dk.aau.sw802f15.tempoplayer.StepCounter.StepCounterService.SPM_AVG_SIZE))] = 0; Initializers._activity.setSPMText(getSpm()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2059/buggy-version/app.src.main.java.dk.aau.sw802f15.tempoplayer.StepCounter.StepCounterService.java", "BodyUseAPI": [], "Fixed commit": "277a2f2af00b40958ae50bd895e05e7bca5762b5", "Url": "https://api.github.com/repos/SW802F15/SourceCode", "Date": "2015-03-26T09:56:50Z"},
{"Line": "=>2139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.drizzle.jdbc.ValueObject.getTimestamp(java.util.Calendar)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (result == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/9038/buggy-version/src.main.java.org.drizzle.jdbc.DrizzleResultSet.java", "BodyUseAPI": [], "Fixed commit": "f4507e8f06e586b7055dd0f7404562825cd125dd", "Url": "https://api.github.com/repos/krummas/DrizzleJDBC", "Date": "2012-04-27T11:58:38Z"},
{"Line": "=>2166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.drizzle.jdbc.ValueObject.getTimestamp(java.util.Calendar)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (result == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/9038/buggy-version/src.main.java.org.drizzle.jdbc.DrizzleResultSet.java", "BodyUseAPI": [], "Fixed commit": "f4507e8f06e586b7055dd0f7404562825cd125dd", "Url": "https://api.github.com/repos/krummas/DrizzleJDBC", "Date": "2012-04-27T11:58:38Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((child.getParent()) instanceof org.jboss.errai.ui.shared.TemplateWidget) { child = child.getParent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3968/buggy-version/errai-ui.src.main.java.org.jboss.errai.ui.shared.TemplateWidget.java", "BodyUseAPI": [], "Fixed commit": "7e588acccbf7057b53571e08e4174dbf8e9c0970", "Url": "https://api.github.com/repos/mbarkley/errai", "Date": "2016-02-23T18:22:46Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (decorable.getType().isAssignableTo(com.google.gwt.dom.client.Element.class)) { instance = org.jboss.errai.codegen.util.Stmt.invokeStatic(org.jboss.errai.common.client.ui.ElementWrapperWidget.class, \"getWidget\", instance); }else if (decorable.getType().isAssignableTo(org.jboss.errai.common.client.api.IsElement.class)) { instance = org.jboss.errai.codegen.util.Stmt.invokeStatic(org.jboss.errai.common.client.ui.ElementWrapperWidget.class, \"getWidget\", org.jboss.errai.codegen.util.Stmt.nestedCall(instance).invoke(\"getElement\")); }else if ((org.jboss.errai.ui.rebind.RebindUtil.isNativeJsType(decorable.getType())) || (org.jboss.errai.ui.rebind.RebindUtil.isElementalIface(decorable.getType()))) { if (decorable.getType().isAssignableTo(org.jboss.errai.common.client.ui.HasValue.class)) { final org.jboss.errai.codegen.meta.MetaClass valueType = decorable.getType().getMethod(\"getValue\", new java.lang.Class[0]).getReturnType(); instance = org.jboss.errai.codegen.util.Stmt.invokeStatic(org.jboss.errai.common.client.ui.ElementWrapperWidget.class, \"getWidget\", org.jboss.errai.codegen.util.Stmt.invokeStatic(org.jboss.errai.ui.shared.TemplateUtil.class, \"asElement\", instance), loadLiteral(valueType)); }else { instance = org.jboss.errai.codegen.util.Stmt.invokeStatic(org.jboss.errai.common.client.ui.ElementWrapperWidget.class, \"getWidget\", org.jboss.errai.codegen.util.Stmt.invokeStatic(org.jboss.errai.ui.shared.TemplateUtil.class, \"asElement\", instance)); } }else if (!(decorable.getType().isAssignableTo(com.google.gwt.user.client.ui.Widget.class))) { throw new org.jboss.errai.codegen.exception.GenerationException(((((\"Unable to use [\" + name) + \"] in class [\") + (decorable.getDecorableDeclaringType())) + \"] as a @DataField. The field must be a Widget or a DOM element as either a JavaScriptObject, native @JsType, or IsElement.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3968/buggy-version/errai-ui.src.main.java.org.jboss.errai.ui.rebind.DataFieldCodeDecorator.java", "BodyUseAPI": ["org.jboss.errai.ioc.rebind.ioc.injector.api.Decorable.getType()", "org.jboss.errai.ui.rebind.RebindUtil.isElementalIface(decorable.getType())", "decorable.getType().getMethod(\"getValue\", new java.lang.Class[0]).getReturnType()", "decorable.getType().isAssignableTo(java.lang.Class)", "org.jboss.errai.ioc.rebind.ioc.injector.api.Decorable.getType()", "decorable.getType().getMethod(java.lang.String,java.lang.Class[])", "org.jboss.errai.ioc.rebind.ioc.injector.api.Decorable.getType()", "decorable.getType().isAssignableTo(java.lang.Class)", "decorable.getType().isAssignableTo(java.lang.Class)", "org.jboss.errai.ioc.rebind.ioc.injector.api.Decorable.getDecorableDeclaringType()", "org.jboss.errai.ui.rebind.RebindUtil.isNativeJsType(decorable.getType())", "org.jboss.errai.ioc.rebind.ioc.injector.api.Decorable.getType()", "org.jboss.errai.ioc.rebind.ioc.injector.api.Decorable.getType()", "org.jboss.errai.ioc.rebind.ioc.injector.api.Decorable.getType()"], "Fixed commit": "7e588acccbf7057b53571e08e4174dbf8e9c0970", "Url": "https://api.github.com/repos/mbarkley/errai", "Date": "2016-02-23T18:22:46Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.collections.CollectionUtils.isNotEmpty(solrInputDocuments)) { org.apache.solr.client.solrj.SolrClient solrClient = new org.apache.solr.client.solrj.impl.HttpSolrClient((((getSolrUrl()) + \"/\") + coreName)); try { solrClient.add(solrInputDocuments); solrClient.commit(); commitCount = solrInputDocuments.size(); } catch (org.apache.solr.client.solrj.SolrServerException e) { logger.error(e.getMessage()); } catch (java.io.IOException e) { logger.error(e.getMessage()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3961/buggy-version/src.main.java.org.kuali.ole.solr.OleDsSolrClient.java", "BodyUseAPI": ["org.apache.solr.client.solrj.SolrClient.add(java.util.List<org.apache.solr.common.SolrInputDocument>)", "java.util.List<org.apache.solr.common.SolrInputDocument>.size()"], "Fixed commit": "6a4094d90b36fe5cb05f9543b62022dadd1dad6b", "Url": "https://api.github.com/repos/SenthilOle/ole-ds", "Date": "2016-04-13T14:53:05Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (vdbName == null) { throw new org.teiid.core.TeiidRuntimeException(ODataPlugin.Util.gs(ODataPlugin.Event.TEIID16008)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3599/buggy-version/odata.src.main.java.org.teiid.odata.TeiidProducerProvider.java", "BodyUseAPI": [], "Fixed commit": "d9ca0b73ccde3c669aa536b5b16d71ab5674e436", "Url": "https://api.github.com/repos/teiid/teiid", "Date": "2015-03-20T15:06:37Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index1 >= 0) { image = image.substring(0, index1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/865/buggy-version/src.main.java.com.lifeix.football.common.util.ImageUploadUtil.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "323df24affbcb1bb21a2bd8d8a9d81c41cdc852d", "Url": "https://api.github.com/repos/pintimes/lifeix-football-common", "Date": "2016-10-27T13:17:08Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (value == null) { value = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3836/buggy-version/repository-generator.src.main.java.coderepository.util.FileReplacer.java", "BodyUseAPI": [], "Fixed commit": "532c7ccf58de166b90fc5dbd3b04a823636673c6", "Url": "https://api.github.com/repos/dgouvea/code-template-repository", "Date": "2016-10-27T12:59:39Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (user != null) { teymi15.kassistant.model.Recipe recipe = RecipeService.createRecipe(name, description, instructions, ingredients, pic, user); displayRecipe(session, model, recipe); displayLoggedInUser(session, model); }else throw new java.util.concurrent.TimeoutException(\"Session Expired\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8150/buggy-version/src.main.java.teymi15.kassistant.control.RecipeController.java", "BodyUseAPI": ["teymi15.kassistant.control.RecipeServiceImp.createRecipe(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],byte[],teymi15.kassistant.model.User)"], "Fixed commit": "089e7e4c743c0de0d159ac9522993097006aa038", "Url": "https://api.github.com/repos/mimiqkz/kassistant", "Date": "2017-11-15T17:19:08Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (res == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2689/buggy-version/src.main.java.org.roda.rodain.core.AppProperties.java", "BodyUseAPI": [], "Fixed commit": "2a05fcbd11bcbbb6eb9efa2a65cd43adc17b3d74", "Url": "https://api.github.com/repos/keeps/roda-in", "Date": "2016-04-06T15:46:16Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (input != (-1)) { processMove(input, 'p'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1472/buggy-version/src.TicTacToeAI.java", "BodyUseAPI": ["TicTacToeAI.processMove(int,char)"], "Fixed commit": "b0ca23ac96bf886ecac1bf0fd577e262c4dc57f3", "Url": "https://api.github.com/repos/HanzehogeschoolSICT/Project-Othello", "Date": "2017-04-04T10:55:47Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (input != (-1)) { processMove(input, 'p'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1472/buggy-version/src.OrthelloAI.java", "BodyUseAPI": ["OrthelloAI.processMove(int,char)"], "Fixed commit": "b0ca23ac96bf886ecac1bf0fd577e262c4dc57f3", "Url": "https://api.github.com/repos/HanzehogeschoolSICT/Project-Othello", "Date": "2017-04-04T10:55:47Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getView()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5178/buggy-version/app.src.main.java.us.dangeru.launcher.fragments.UnitedWebFragment.java", "BodyUseAPI": [], "Fixed commit": "4f191287b871b03afe23860df695e28344fce244", "Url": "https://api.github.com/repos/nilesr/United4", "Date": "2017-08-23T02:07:48Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.getRequestable().getNextApprover(this.getAppreguser())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (app != null) { freedays.domain.RegularUser r = app.getRegularUser(); java.lang.System.out.println((\"aaaa\" + r)); return r; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6973/buggy-version/Sts.freeday.src.main.java.freedays.domain.Request.java", "BodyUseAPI": ["freedays.domain.ApplicationRegularUser.getRegularUser()"], "Fixed commit": "01739eeabe4a5e97167cc903ec9c09aad2a295a9", "Url": "https://api.github.com/repos/fmacicasan/FreeDaysIntern", "Date": "2011-12-08T15:11:35Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mLikeNum.getTag()) == \"1\") { int like = (java.lang.Integer.parseInt(mLikeNum.getText().toString())) - 1; mLikeNum.setText(java.lang.String.valueOf(like)); mLikeButton.setImageResource(R.mipmap.like_outline_icon); mLikeNum.setTag(\"0\"); }else { int like = (java.lang.Integer.parseInt(mLikeNum.getText().toString())) + 1; mLikeNum.setText(java.lang.String.valueOf(like)); mLikeButton.setImageResource(R.mipmap.like_icon); mLikeNum.setTag(\"1\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/48/buggy-version/app.src.main.java.io.angelhack.verd.ReviewViewHolder.java", "BodyUseAPI": ["java.lang.Integer.parseInt(mLikeNum.getText().toString())", "android.widget.TextView.setTag(java.lang.String)", "java.lang.Integer.parseInt(mLikeNum.getText().toString())", "android.widget.TextView.setText(java.lang.String)", "mLikeNum.getText().toString()", "android.widget.TextView.getText()", "mLikeNum.getText().toString()", "android.widget.TextView.getText()", "android.widget.TextView.setText(java.lang.String)", "android.widget.TextView.setTag(java.lang.String)"], "Fixed commit": "4d79435bebd84c6102365df7ebebaa2723595674", "Url": "https://api.github.com/repos/chdryra/AngelHack", "Date": "2017-07-16T10:41:14Z"},
{"Line": "=>534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rethrow == null) { rethrow = result.error; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4315/buggy-version/resolver.src.main.java.org.apache.felix.resolver.Candidates.java", "BodyUseAPI": [], "Fixed commit": "6b561eccdd6de3b3650bf3dbf1cf5ff22e8adaeb", "Url": "https://api.github.com/repos/gnodet/felix", "Date": "2015-07-07T11:40:28Z"},
{"Line": "=>2317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { cam = biz.bokhorst.xprivacy.PrivacyService.mAm.getClass(); am = biz.bokhorst.xprivacy.PrivacyService.mAm; }else { cam = java.lang.Class.forName(\"com.android.server.am.ActivityManagerService\"); am = cam.getMethod(\"self\").invoke(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7222/buggy-version/src.biz.bokhorst.xprivacy.PrivacyService.java", "BodyUseAPI": [], "Fixed commit": "b8074d9e9d66ecf557b178b4454957e49e89d95a", "Url": "https://api.github.com/repos/M66B/XPrivacy", "Date": "2015-02-15T12:37:52Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1770/buggy-version/Mario.src.main.java.com.mario.extension.ExtensionConfigReader.java", "BodyUseAPI": [], "Fixed commit": "9425696f531da55018867f286d7d0f04d3ee8f5a", "Url": "https://api.github.com/repos/bachden/mario3", "Date": "2017-05-06T02:26:22Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDistinctId) == distinctId) { return; }else { mUnseenSurveys.clear(); mUnseenNotifications.clear(); mVariants = new org.json.JSONArray(); mDistinctId = distinctId; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5674/buggy-version/src.main.java.com.mixpanel.android.mpmetrics.DecideMessages.java", "BodyUseAPI": [], "Fixed commit": "1fd00eb2e6c7215b35765e2edb0c1245c465c7f5", "Url": "https://api.github.com/repos/jtmcmc/mixpanel-android", "Date": "2016-01-22T02:39:16Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isRecreated)) { googleMap.animateCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(new com.google.android.gms.maps.model.LatLng(52.015379, 6.025979), 10)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/9206/buggy-version/app.src.main.java.nl.rsdt.japp.jotial.maps.MapManager.java", "BodyUseAPI": [], "Fixed commit": "cedbd99c8b08e531422d26eb3aeaeb1b93890108", "Url": "https://api.github.com/repos/RSDT/Japp16", "Date": "2016-09-21T16:18:00Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(connected)) { java.lang.System.out.println(\"Not connected to server\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3823/buggy-version/src.main.java.edu.pdx.cs410.Connection.java", "BodyUseAPI": [], "Fixed commit": "c49cc0cab29ea1d5d326e1a64e80465eb8d2ff52", "Url": "https://api.github.com/repos/konstantin-psu/FTPanda", "Date": "2015-07-27T04:32:13Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value.getNodeType()) != (org.w3c.dom.Node.ELEMENT_NODE)) { throw new de.timroes.axmlrpc.XMLRPCException(\"An array can only contain value tags.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5809/buggy-version/src.de.timroes.axmlrpc.serializer.ArraySerializer.java", "BodyUseAPI": [], "Fixed commit": "641ddd9bb21e685f8411e64a480d18bf00ce8408", "Url": "https://api.github.com/repos/gturri/aXMLRPC", "Date": "2011-11-26T23:56:51Z"},
{"Line": "=>763", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.oracle.truffle.llvm.parser.model.symbols.instructions.Call.getCallTarget()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (callTarget instanceof com.oracle.truffle.llvm.parser.model.functions.FunctionParameter) { return ((com.oracle.truffle.llvm.parser.model.functions.FunctionDefinition) (callTarget)).getType(); }else if (callTarget instanceof com.oracle.truffle.llvm.parser.model.symbols.instructions.CallInstruction) { com.oracle.truffle.llvm.runtime.types.Type targetType = ((com.oracle.truffle.llvm.parser.model.symbols.instructions.CallInstruction) (callTarget)).getType(); targetType = ((com.oracle.truffle.llvm.runtime.types.PointerType) (targetType)).getPointeeType(); if (targetType instanceof com.oracle.truffle.llvm.runtime.types.FunctionType) { return ((com.oracle.truffle.llvm.runtime.types.FunctionType) (targetType)); }else { throw new java.lang.AssertionError((\"unexpected target type: \" + (targetType.getClass().getName()))); } }else if (callTarget instanceof com.oracle.truffle.llvm.runtime.types.symbols.ValueSymbol) { com.oracle.truffle.llvm.runtime.types.Type targetType; if (callTarget instanceof com.oracle.truffle.llvm.parser.model.symbols.instructions.LoadInstruction) { targetType = ((com.oracle.truffle.llvm.parser.model.symbols.instructions.LoadInstruction) (callTarget)).getSource().getType(); }else { targetType = callTarget.getType(); } while (targetType instanceof com.oracle.truffle.llvm.runtime.types.PointerType) { targetType = ((com.oracle.truffle.llvm.runtime.types.PointerType) (targetType)).getPointeeType(); } if (targetType instanceof com.oracle.truffle.llvm.runtime.types.FunctionType) { return ((com.oracle.truffle.llvm.runtime.types.FunctionType) (targetType)); }else { throw new java.lang.AssertionError((\"unexpected target type: \" + (targetType.getClass().getName()))); } }else if (callTarget instanceof com.oracle.truffle.llvm.parser.model.symbols.constants.Constant) { com.oracle.truffle.llvm.runtime.types.Type targetType = callTarget.getType(); targetType = ((com.oracle.truffle.llvm.runtime.types.PointerType) (targetType)).getPointeeType(); if (targetType instanceof com.oracle.truffle.llvm.runtime.types.FunctionType) { return ((com.oracle.truffle.llvm.runtime.types.FunctionType) (targetType)); }else { throw new java.lang.AssertionError((\"unexpected target type: \" + (targetType.getClass().getName()))); } }else { throw new java.lang.AssertionError((\"unexpected target type: \" + (callTarget.getClass().getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3499/buggy-version/projects.at.pointhi.irbuilder.irwriter.src.at.pointhi.irbuilder.irwriter.visitors.instruction.IRWriterInstructionVisitor.java", "BodyUseAPI": ["callTarget.getClass().getName()", "com.oracle.truffle.llvm.runtime.types.symbols.Symbol.getType()", "com.oracle.truffle.llvm.runtime.types.symbols.Symbol.getClass()", "com.oracle.truffle.llvm.runtime.types.symbols.Symbol.getType()"], "Fixed commit": "46c71a120f3882a353a2d08f91508d0e39460846", "Url": "https://api.github.com/repos/pointhi/java-llvm-ir-builder", "Date": "2017-03-21T10:41:55Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((fieldResId) == null) || ((fieldWidgetResId) == null)) { getReflectionFields(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6947/buggy-version/preference-v7.src.main.java.com.takisoft.fix.support.v7.preference.PreferenceGroupAdapter.java", "BodyUseAPI": [], "Fixed commit": "a68bc0606cd35e872c50a5b2eb2644078e5eb483", "Url": "https://api.github.com/repos/Gericop/Android-Support-Preference-V7-Fix", "Date": "2016-07-20T21:07:16Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!firstInChain) && (fieldName.endsWith(\"()\"))) { com.orientechnologies.orient.core.sql.method.OSQLMethod method = com.orientechnologies.orient.core.sql.OSQLEngine.getInstance().getMethod(fieldName.substring(0, ((fieldName.length()) - 2))); if (method != null) { value = method.execute(value, currentRecord, iContext, value, new java.lang.Object[]{ }); executedMethod = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6835/buggy-version/core.src.main.java.com.orientechnologies.orient.core.record.impl.ODocumentHelper.java", "BodyUseAPI": ["com.orientechnologies.orient.core.sql.OSQLEngine.getInstance().getMethod(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "cd6c38f81fb38446b07bccc22d73b6d30b9bc2b2", "Url": "https://api.github.com/repos/refdiff-data/orientdb", "Date": "2015-07-07T08:12:18Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!executedMethod) { value = com.orientechnologies.orient.core.record.impl.ODocumentHelper.evaluateFunction(value, fieldName, iContext); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6835/buggy-version/core.src.main.java.com.orientechnologies.orient.core.record.impl.ODocumentHelper.java", "BodyUseAPI": [], "Fixed commit": "cd6c38f81fb38446b07bccc22d73b6d30b9bc2b2", "Url": "https://api.github.com/repos/refdiff-data/orientdb", "Date": "2015-07-07T08:12:18Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value.equalsIgnoreCase(\"Scooby Doo\")) java.lang.System.out.println();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2427/buggy-version/src.main.java.com.home.heap.MainClass.java", "BodyUseAPI": [], "Fixed commit": "a44278c15de05820b2193c88b24028b8224f5c2d", "Url": "https://api.github.com/repos/ragnar-lothbrok/tally", "Date": "2015-08-07T02:37:26Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (me.prettyprint.cassandra.connection.HThriftClient.log.isDebugEnabled()) me.prettyprint.cassandra.connection.HThriftClient.log.debug(\"keyspace reseting from {} to {}\", keyspaceName, keyspaceNameArg);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/9260/buggy-version/core.src.main.java.me.prettyprint.cassandra.connection.HThriftClient.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "6068b5b3a06b4fd45092d1b3b9bcd2427c4055ef", "Url": "https://api.github.com/repos/rantav/hector", "Date": "2011-03-03T02:51:14Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((specialItem.getName()) != null) && (!(specialItem.getName().isEmpty()))) { meta.setDisplayName(((org.bukkit.ChatColor.RESET) + (org.bukkit.ChatColor.translateAlternateColorCodes('&', specialItem.getName())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1561/buggy-version/src.main.java.de.themoep.specialitems.ItemManager.java", "BodyUseAPI": ["de.themoep.specialitems.SpecialItem.getName()", "org.bukkit.inventory.meta.ItemMeta.setDisplayName(((org.bukkit.ChatColor.RESET) + (org.bukkit.ChatColor.translateAlternateColorCodes('&', specialItem.getName()))))", "org.bukkit.ChatColor.translateAlternateColorCodes(char,specialItem.getName())"], "Fixed commit": "3376f9d7fe907fcdb7ced75cec6d412d7295379b", "Url": "https://api.github.com/repos/Phoenix616/SpecialItems", "Date": "2016-07-06T18:16:07Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((defined_suffix == null) || (defined_suffix.equals(\"\"))) { defined_suffix = \"@\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8685/buggy-version/cps.src.main.java.org.jenkinsci.plugins.workflow.cps.CpsScmFlowDefinition.java", "BodyUseAPI": [], "Fixed commit": "b6dbc5bf3dec81c11673c7807e07e43f00509e11", "Url": "https://api.github.com/repos/jglick/pipeline-plugin", "Date": "2015-05-01T18:47:54Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (smooth) p.smooth();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3314/buggy-version/src.net.nexttext.renderer.PGraphicsTextPageRenderer.java", "BodyUseAPI": [], "Fixed commit": "a527f5cf4497c5af4f62995a772f786e9e233764", "Url": "https://api.github.com/repos/prisonerjohn/NextText", "Date": "2009-01-13T18:57:24Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasMaximum) { if (!hitMaximum) { hitMaximum = version.equals(maximumVersion); }else { if (minimumVersion.equals(version)) { return false; } if (version.equals(currentVersion)) { return true; } } }else { if (minimumVersion.equals(version)) { return false; } if (version.equals(currentVersion)) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8072/buggy-version/src.main.java.org.dasein.cloud.vcloud.vCloudMethod.java", "BodyUseAPI": [], "Fixed commit": "4ee708476b84d8e3042350d74dab62cdc31a0a96", "Url": "https://api.github.com/repos/greese/dasein-cloud-vcloud", "Date": "2013-02-11T15:29:15Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.mobile.util.ImageUtils.getSize(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (size == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2831/buggy-version/src.com.github.mobile.util.ImageUtils.java", "BodyUseAPI": [], "Fixed commit": "edd2a8875d7c3e5a27d7d70df0ec43a7ded68f9e", "Url": "https://api.github.com/repos/maniac103/gh4a", "Date": "2014-08-15T13:19:55Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id < 0) || (id >= (engine.gameData.MobData.countKillStats.size()))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7672/buggy-version/src.engine.gameData.MobData.java", "BodyUseAPI": [], "Fixed commit": "1d3c9bc687f70cff0ae046e38399edea44c25ebd", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2017-09-19T12:41:01Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFirst) { isFirst = false; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/217/buggy-version/fleet.core.src.main.java.eu.widgetlabs.fleet.core.utility.Sets.java", "BodyUseAPI": [], "Fixed commit": "b7737c8bf03895ee7f1ea6168cbe1da6fc10fd4c", "Url": "https://api.github.com/repos/Widgetlabs/fleet", "Date": "2015-02-02T10:01:40Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (encoding.startsWith(\"=\")) { encoding = encoding.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7001/buggy-version/src.de.catma.document.source.SourceDocumentHandler.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "9dd2f256229af3de626e615f394e8d431149dac5", "Url": "https://api.github.com/repos/mpetris/catma-core", "Date": "2014-01-22T20:00:15Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mProduct) == null) { android.support.design.widget.Snackbar.make(getView(), \"Error occurred fetching product details. Try again later\", Snackbar.LENGTH_LONG).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7617/buggy-version/app.src.main.java.com.mtesitoo.fragment.ProductDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "89eb6124202b0ddb10adc5a2fa1de8e4e7d10378", "Url": "https://api.github.com/repos/projectwife/mtesitoo-android", "Date": "2017-04-24T20:23:45Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (validationCheck()) { android.util.Log.e(\"msg\", \"success\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4347/buggy-version/app.src.main.java.com.paaltao.activity.SignUpActivity.java", "BodyUseAPI": [], "Fixed commit": "749076d82532cf224b1d9e170be01165de2c349d", "Url": "https://api.github.com/repos/arindamrockz/Paaltao", "Date": "2015-02-15T12:34:44Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yukthitech.automation.AutomationReserveNodeHandler.newValidation(beanNode.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (validator != null) { return validator; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3966/buggy-version/yukthi-automation.src.main.java.com.yukthitech.automation.AutomationReserveNodeHandler.java", "BodyUseAPI": [], "Fixed commit": "0e3adc1c24ddd91df6ed633e6dd93dac09528e6e", "Url": "https://api.github.com/repos/yukthitech/utils", "Date": "2017-03-02T01:05:35Z"},
{"Line": "=>471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((v instanceof org.openehealth.ipf.gazelle.validation.core.Composite) && (v.getClass().getName().endsWith(\".TS\"))) { org.openehealth.ipf.gazelle.validation.core.Composite ts = ((org.openehealth.ipf.gazelle.validation.core.Composite) (v)); return org.openehealth.ipf.gazelle.validation.core.GazelleProfileRule.isEmpty(ts.getComponent(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1149/buggy-version/commons.core.src.main.java.org.openehealth.ipf.gazelle.validation.core.GazelleProfileRule.java", "BodyUseAPI": [], "Fixed commit": "281880df7b35bfc14c421ad0a7d884744ee25f9e", "Url": "https://api.github.com/repos/oehf/ipf-gazelle", "Date": "2015-03-12T16:36:02Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((input.length) == 0) return java.util.Collections.<T>emptySet();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1149/buggy-version/commons.core.src.main.java.org.openehealth.ipf.gazelle.validation.core.GazelleProfileRule.java", "BodyUseAPI": [], "Fixed commit": "281880df7b35bfc14c421ad0a7d884744ee25f9e", "Url": "https://api.github.com/repos/oehf/ipf-gazelle", "Date": "2015-03-12T16:36:02Z"},
{"Line": "=>451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((input.length) == 1) return org.openehealth.ipf.gazelle.validation.core.GazelleProfileRule.isEmpty(input[0]) ? java.util.Collections.<T>emptySet() : java.util.Collections.singleton(input[0]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1149/buggy-version/commons.core.src.main.java.org.openehealth.ipf.gazelle.validation.core.GazelleProfileRule.java", "BodyUseAPI": ["java.util.Collections.singleton(T)", "org.openehealth.ipf.gazelle.validation.core.GazelleProfileRule.isEmpty(T)"], "Fixed commit": "281880df7b35bfc14c421ad0a7d884744ee25f9e", "Url": "https://api.github.com/repos/oehf/ipf-gazelle", "Date": "2015-03-12T16:36:02Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getReadableDatabase().query(DataTable.TABLE_ITEM_NAME,<nulltype>,<nulltype>,<nulltype>,<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (c.getString(3).equals(date)) list.add(new hai.tran.mywallet.object.Item(c.getInt(0), itemType, c.getString(2), c.getString(3), c.getLong(4), c.getInt(5)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5349/buggy-version/app.src.main.java.hai.tran.mywallet.data.DataSQLLite.java", "BodyUseAPI": ["android.database.Cursor.getInt(int)", "android.database.Cursor.getString(int)", "java.util.ArrayList<hai.tran.mywallet.object.Item>.add(hai.tran.mywallet.object.Item)", "android.database.Cursor.getString(int)", "android.database.Cursor.getInt(int)", "android.database.Cursor.getLong(int)"], "Fixed commit": "eb9bcb83595b9c178ce755f70728fcdb2ba7437c", "Url": "https://api.github.com/repos/honghai78/My-Wallet", "Date": "2016-06-21T03:52:00Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dialect) == (org.overture.ast.lex.Dialect.VDM_RT)) { sb.append(\"\\n<booleanAttribute key=\\\"vdm_launch_config_enable_realtime_logging\\\" value=\\\"true\\\"/>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1854/buggy-version/examplesutil.src.main.java.org.overture.tools.examplesutil.VdmReadme.java", "BodyUseAPI": [], "Fixed commit": "f8792851da4b6b73dc43196480ef91959a25ce4c", "Url": "https://api.github.com/repos/overturetool/example-packager", "Date": "2013-03-21T16:58:06Z"},
{"Line": "=>563", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.jitsi.jirecon.MediaType, org.jitsi.jirecon.Recorder>.get(ssrc.getKey())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (recorder != null) { org.jitsi.jirecon.Synchronizer synchronizer = recorder.getSynchronizer(); synchronizer.setEndpoint(ssrc.getValue(), endpointId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8525/buggy-version/src.org.jitsi.jirecon.StreamRecorderManager.java", "BodyUseAPI": ["org.jitsi.jirecon.Recorder.getSynchronizer()"], "Fixed commit": "cac22949574e221251290faaf13c7752c091b6ee", "Url": "https://api.github.com/repos/jitsi/jirecon", "Date": "2015-02-08T17:38:58Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((wrappedNode.getImplements()) != null) { for (com.github.javaparser.ast.type.ClassOrInterfaceType implementedType : wrappedNode.getImplements()) { me.tomassetti.symbolsolver.model.resolution.SymbolReference<me.tomassetti.symbolsolver.javaparsermodel.declarations.TypeDeclaration> implementedDeclRef = solveType(implementedType.getName(), typeSolver); if (!(implementedDeclRef.isSolved())) { throw new me.tomassetti.symbolsolver.javaparsermodel.UnsolvedSymbolException(implementedType.getName()); } ancestors.add(new me.tomassetti.symbolsolver.model.typesystem.ReferenceTypeUsageImpl(implementedDeclRef.getCorrespondingDeclaration(), typeSolver)); ancestors.addAll(implementedDeclRef.getCorrespondingDeclaration().getAllAncestors()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3266/buggy-version/java-symbol-solver-core.src.main.java.me.tomassetti.symbolsolver.javaparsermodel.declarations.JavaParserEnumDeclaration.java", "BodyUseAPI": ["com.github.javaparser.ast.body.EnumDeclaration.getImplements()"], "Fixed commit": "31433fc385c0fea7ead68e4c853807752e061565", "Url": "https://api.github.com/repos/gs0510/java-symbol-solver", "Date": "2016-09-29T15:28:14Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.storymakers.apps.trailguide.model.TGPost.getCreatedAt()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (d == null) { return \"Sometime\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3674/buggy-version/TrailGuide.src.com.storymakers.apps.trailguide.model.TGPost.java", "BodyUseAPI": [], "Fixed commit": "0139824a93d6f80ee91f734de60160c50ed70cac", "Url": "https://api.github.com/repos/story-makers/AndroidProject", "Date": "2014-10-26T20:32:58Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((orderRepresentationList != null) && ((orderRepresentationList.size()) != 0)) { return orderRepresentationList; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6888/buggy-version/src.com.online.lakeshoremarket.activity.CustomerActivity.java", "BodyUseAPI": [], "Fixed commit": "35c93b1ccde151492123cfe493ad27672d62caad", "Url": "https://api.github.com/repos/elliottpost/lakeshoremarket", "Date": "2015-12-08T07:02:17Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (k == 1) k = 2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/675/buggy-version/MergeRuns.java", "BodyUseAPI": [], "Fixed commit": "cb0c2742aefebb25484b7c3b690dca75bfaede3b", "Url": "https://api.github.com/repos/srad015/kway-sort", "Date": "2016-08-14T21:30:38Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((key.charAt(0)) >= 'A') && ((key.charAt(0)) <= 'Z')) processKey(key);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1373/buggy-version/HangmanWorld.java", "BodyUseAPI": ["HangmanWorld.processKey(java.lang.String)"], "Fixed commit": "25963337ed5ba6c8e3464bd5b3bb590e362d64cd", "Url": "https://api.github.com/repos/ForEachMasterRace/HangMan", "Date": "2017-03-30T01:01:23Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diff.equals(\"INSTANT DEATH\")) { revealWholeMan(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1373/buggy-version/Man.java", "BodyUseAPI": [], "Fixed commit": "25963337ed5ba6c8e3464bd5b3bb590e362d64cd", "Url": "https://api.github.com/repos/ForEachMasterRace/HangMan", "Date": "2017-03-30T01:01:23Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (pool != null) { try { redis.clients.jedis.Jedis resource = com.dushantsw.integration.cache.CacheStorage.getPool().getResource(); resource.close(); isConnected = true; } catch (redis.clients.jedis.exceptions.JedisConnectionException ex) { java.lang.System.out.println(\"No connection to redis\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4901/buggy-version/src.main.java.com.dushantsw.integration.cache.CacheStorage.java", "BodyUseAPI": [], "Fixed commit": "571d9ea979cd718470d435db203900f9652a29a7", "Url": "https://api.github.com/repos/dushantSW/MusicAPI", "Date": "2017-05-26T06:58:53Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.technobells.rohit.movieexplorer.MainActivityFragment.favoriteState) { favoriteMenuItem.setIcon(R.drawable.ic_favorite_white_24dp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1831/buggy-version/app.src.main.java.com.technobells.rohit.movieexplorer.MainActivityFragment.java", "BodyUseAPI": [], "Fixed commit": "a7fcd6f09c3dda657f58e3e799124f608a07720c", "Url": "https://api.github.com/repos/rohitpal440/MovieExplorer", "Date": "2016-01-09T14:25:42Z"},
{"Line": "=>1230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (printafter) { java.lang.System.out.println((\"After: \" + (setting.getValue()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7327/buggy-version/metl-core.src.main.java.org.jumpmind.metl.core.persist.AbstractConfigurationService.java", "BodyUseAPI": [], "Fixed commit": "aeda1e0594aaf9d701af378ef01f95817a1c20e1", "Url": "https://api.github.com/repos/JumpMind/metl", "Date": "2016-06-19T13:39:06Z"},
{"Line": "=>1225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((setting.getValue()) != null) && (setting.getValue().contains(\"cc7bd445-2222-42fa-b6c0-eb9a0ceb4926\"))) { java.lang.System.out.println((\"Before: \" + (setting.getValue()))); printafter = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7327/buggy-version/metl-core.src.main.java.org.jumpmind.metl.core.persist.AbstractConfigurationService.java", "BodyUseAPI": ["java.io.PrintStream.println((\"Before: \" + (setting.getValue())))", "org.jumpmind.metl.core.model.Setting.getValue()"], "Fixed commit": "aeda1e0594aaf9d701af378ef01f95817a1c20e1", "Url": "https://api.github.com/repos/JumpMind/metl", "Date": "2016-06-19T13:39:06Z"},
{"Line": "=>607", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.example.android.Bella.MainActivity.hardware)) { tts.speak(\"Please, connect to hardware first.\", TextToSpeech.QUEUE_FLUSH, null); }else { command(1011); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2816/buggy-version/app.src.main.java.com.example.android.Bella.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "eec794e2d44608b99ec14a5bf78129fc3557e6fe", "Url": "https://api.github.com/repos/NullPointersInc/Bella-Android", "Date": "2017-04-30T03:52:54Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(tag.getFirstArg())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (matcher.find()) { final java.lang.String typeParamName = matcher.group(1).trim(); if (!(typeParamNames.contains(typeParamName))) { log(tag.getLineNo(), tag.getColumnNo(), com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck.UNUSED_TAG, JavadocTagInfo.PARAM.getText(), (((com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck.OPEN_ANGLE_BRACKET) + typeParamName) + (com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck.CLOSE_ANGLE_BRACKET))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6800/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck.java", "BodyUseAPI": ["java.util.regex.Matcher.group(int)", "java.lang.String.trim()"], "Fixed commit": "87d2bf30668b4e02637a459a64c60cd6466b18ca", "Url": "https://api.github.com/repos/Vladlis/checkstyle", "Date": "2015-09-12T15:20:20Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(email.equals(currentUser.getEmail()))) { if ((uService.getUserByEmail(email)) != null) { result.put(\"status\", (-2)); return result; } currentUser.setEmail(email); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8438/buggy-version/src.com.xinyiread.controller.UserController.java", "BodyUseAPI": ["com.xinyiread.service.UserService.getUserByEmail(java.lang.String)", "com.xinyiread.model.User.setEmail(java.lang.String)"], "Fixed commit": "497ef2bc6ea4ac33871e9edc92d06863d8ff8c5d", "Url": "https://api.github.com/repos/StevenSongHC/XinYiRead", "Date": "2015-08-30T09:26:02Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["GroupUtil.GroupsProjection.getTitle(android.database.Cursor)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(title))) { title = title.trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3727/buggy-version/src.com.android.contacts.group.GroupNameEditDialogFragment.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "3ba72351ae5bc808f86826e6d35bc6baee712d91", "Url": "https://api.github.com/repos/aosp-mirror/platform_packages_apps_contacts", "Date": "2017-10-02T22:45:32Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.contacts.group.GroupNameEditDialogFragment.getGroupName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(name))) { name = name.trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3727/buggy-version/src.com.android.contacts.group.GroupNameEditDialogFragment.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "3ba72351ae5bc808f86826e6d35bc6baee712d91", "Url": "https://api.github.com/repos/aosp-mirror/platform_packages_apps_contacts", "Date": "2017-10-02T22:45:32Z"},
{"Line": "=>648", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!update_request) { populateData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6490/buggy-version/src.com.gzlabs.gzroster.gui.MainWindow.java", "BodyUseAPI": [], "Fixed commit": "040a3a5392f103029411695c33b882d368afb097", "Url": "https://api.github.com/repos/poctob/GZRoster", "Date": "2013-06-22T12:33:41Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((pay != null) && (!(\"\".equals(pay)))) { detail.setPayCustomer(new java.math.BigDecimal(df.parse(pay).toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/753/buggy-version/src.java.com.smi.travel.controller.RefundAirlineController.java", "BodyUseAPI": ["java.lang.Number.toString()", "java.text.DecimalFormat.parse(java.lang.String)", "com.smi.travel.datalayer.entity.RefundAirticketDetail.setPayCustomer(java.math.BigDecimal)"], "Fixed commit": "edcfd48cc16fcde87c312e910d9aaa96c23f4e5e", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-08-18T06:44:30Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((profit != null) && (!(\"\".equals(profit)))) { detail.setProfit(new java.math.BigDecimal(df.parse(profit).toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/753/buggy-version/src.java.com.smi.travel.controller.RefundAirlineController.java", "BodyUseAPI": ["java.text.DecimalFormat.parse(java.lang.String)", "com.smi.travel.datalayer.entity.RefundAirticketDetail.setProfit(java.math.BigDecimal)", "java.lang.Number.toString()"], "Fixed commit": "edcfd48cc16fcde87c312e910d9aaa96c23f4e5e", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-08-18T06:44:30Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((airCom != null) && (!(\"\".equals(airCom)))) { detail.setAirComission(new java.math.BigDecimal(df.parse(airCom).toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/753/buggy-version/src.java.com.smi.travel.controller.RefundAirlineController.java", "BodyUseAPI": ["java.lang.Number.toString()", "java.text.DecimalFormat.parse(java.lang.String)", "com.smi.travel.datalayer.entity.RefundAirticketDetail.setAirComission(java.math.BigDecimal)"], "Fixed commit": "edcfd48cc16fcde87c312e910d9aaa96c23f4e5e", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-08-18T06:44:30Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((receive != null) && (!(\"\".equals(receive)))) { detail.setReceiveAirline(new java.math.BigDecimal(df.parse(receive).toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/753/buggy-version/src.java.com.smi.travel.controller.RefundAirlineController.java", "BodyUseAPI": ["java.lang.Number.toString()", "com.smi.travel.datalayer.entity.RefundAirticketDetail.setReceiveAirline(java.math.BigDecimal)", "java.text.DecimalFormat.parse(java.lang.String)"], "Fixed commit": "edcfd48cc16fcde87c312e910d9aaa96c23f4e5e", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-08-18T06:44:30Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((agentCom != null) && (!(\"\".equals(agentCom)))) { detail.setAgentComission(new java.math.BigDecimal(df.parse(agentCom).toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/753/buggy-version/src.java.com.smi.travel.controller.RefundAirlineController.java", "BodyUseAPI": ["java.text.DecimalFormat.parse(java.lang.String)", "java.lang.Number.toString()", "com.smi.travel.datalayer.entity.RefundAirticketDetail.setAgentComission(java.math.BigDecimal)"], "Fixed commit": "edcfd48cc16fcde87c312e910d9aaa96c23f4e5e", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-08-18T06:44:30Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((++(ticksSinceSync)) % 20) * 2) == 0) { worldObj.addBlockEvent(xCoord, yCoord, zCoord, this.worldObj.getBlock(xCoord, yCoord, zCoord), 1, numPlayersUsing); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8434/buggy-version/src.main.java.com.timthebrick.tinystorage.tileentity.implementations.TileEntityBookCase.java", "BodyUseAPI": [], "Fixed commit": "45d8fe50d2f6ac5356b9c84e297541f63924dc48", "Url": "https://api.github.com/repos/SmithsGaming/Tiny-Storage", "Date": "2015-06-24T13:35:30Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Vertex.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (incidentEdges.equals(incidentHeadData.incidentEdges)) { it.remove(); }else { incidentHeadData.incidentEdges.remove(incidentEdge); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1125/buggy-version/src.Discur.java", "BodyUseAPI": ["java.util.List<Edge>.remove(Edge)"], "Fixed commit": "0c7591f5e9b94a232179442ea7b169d25da6a196", "Url": "https://api.github.com/repos/Mesoptier/dbl-algorithms", "Date": "2016-05-25T11:27:37Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Vertex.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (incidentEdges.equals(incidentTailData.incidentEdges)) { it.remove(); }else { incidentTailData.incidentEdges.remove(incidentEdge); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1125/buggy-version/src.Discur.java", "BodyUseAPI": ["java.util.List<Edge>.remove(Edge)"], "Fixed commit": "0c7591f5e9b94a232179442ea7b169d25da6a196", "Url": "https://api.github.com/repos/Mesoptier/dbl-algorithms", "Date": "2016-05-25T11:27:37Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((word.length()) >= 1) { java.lang.String root = word.substring(0, ((word.length()) - 1)); if ((haiku.SyllableCounter.DICTIONARY.containsKey(root)) && (word.endsWith(\"s\"))) { return haiku.SyllableCounter.DICTIONARY.get(root); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7847/buggy-version/Haiku.src.haiku.SyllableCounter.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)", "java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "3df73697a8ecacb86dd3223c0e74275d4d17a9a7", "Url": "https://api.github.com/repos/wvinesett/HaikuFinder", "Date": "2015-03-15T19:28:46Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((toolbar.getMenu().findItem(R.id.save_later)) != null) { toolbar.getMenu().findItem(R.id.save_later).setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4005/buggy-version/app.src.main.java.com.mikhail.sportsnewshistoryrecords.LeaguesActivity.java", "BodyUseAPI": ["android.support.v7.widget.Toolbar.getMenu()", "toolbar.getMenu().findItem(R.id.save_later)", "toolbar.getMenu().findItem(R.id.save_later).setVisible(boolean)"], "Fixed commit": "d8a5af4db529188c86cb53e02ef8230e19bc126e", "Url": "https://api.github.com/repos/noisie74/SportsNewsHistoryRecords", "Date": "2016-05-10T01:11:42Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((x < 0) || (y < 0)) { java.lang.System.out.println((((\"PlayerVisibilityMap.isVisible invalid index \" + x) + \"/\") + y)); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8341/buggy-version/core.src.main.java.io.ilikeorangutans.ancol.game.vision.PlayerVisibilityMap.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "8df2d4d844ec200a9ecb2be2e7d384f6eee1ba34", "Url": "https://api.github.com/repos/ilikeorangutans/ancol", "Date": "2015-03-25T16:56:32Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (t > (mImageView.getHeight())) { mBuyView.offsetTopAndBottom((t - (mBuyView.getTop()))); }else { int offset = (mImageView.getBottom()) - (mBuyView.getTop()); mBuyView.offsetTopAndBottom(offset); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1661/buggy-version/src.com.twocity.purchaselayoutdemo.PurchaseActivity.java", "BodyUseAPI": ["android.view.View.offsetTopAndBottom((t - (mBuyView.getTop())))", "android.widget.ImageView.getBottom()"], "Fixed commit": "1c454593125791e0a937cb1a87f8cde77ffd1ad0", "Url": "https://api.github.com/repos/twocity/PurchaseLayout", "Date": "2013-06-26T03:46:44Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((version) != (OFVersion.OF_10)) { org.deltaproject.channelagent.dummy.OFHelloElem.Builder heb = factory.buildHelloElemVersionbitmap(); java.util.List<org.deltaproject.channelagent.dummy.OFHelloElem> list = new java.util.ArrayList<org.deltaproject.channelagent.dummy.OFHelloElem>(); list.add(heb.build()); fab.setElements(list); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8959/buggy-version/agents.channel.src.main.java.org.deltaproject.channelagent.dummy.DummyController.java", "BodyUseAPI": [], "Fixed commit": "3338d1ea81ab7aee0b39b74ed1bdea74f1544c9c", "Url": "https://api.github.com/repos/OpenNetworkingFoundation/DELTA", "Date": "2017-09-15T04:56:22Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bean.getStatuses().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((msg.getUser()) != null) { holder.username.setText(msg.getUser().getScreen_name()); java.lang.String image_url = msg.getUser().getProfile_image_url(); if (!(android.text.TextUtils.isEmpty(image_url))) { commander.downloadAvatar(holder.avatar, msg.getUser().getProfile_image_url(), position, listView); } }else { holder.username.setVisibility(View.INVISIBLE); holder.avatar.setVisibility(View.INVISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8450/buggy-version/src.org.qii.weiciyuan.ui.userinfo.StatusesListAdapter.java", "BodyUseAPI": ["org.qii.weiciyuan.bean.MessageBean.getUser()", "org.qii.weiciyuan.bean.MessageBean.getUser()", "org.qii.weiciyuan.ui.Abstract.ICommander.downloadAvatar(android.widget.ImageView,msg.getUser().getProfile_image_url(),int,android.widget.ListView)", "android.widget.TextView.setText(msg.getUser().getScreen_name())", "msg.getUser().getScreen_name()", "org.qii.weiciyuan.bean.MessageBean.getUser()", "msg.getUser().getProfile_image_url()", "msg.getUser().getProfile_image_url()"], "Fixed commit": "36d7464a1cf5495010d99bea3f0c1c490d24b0b6", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-08-22T12:24:55Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (rangeDatatypeUri != null) { editConfiguration.addValidator(new edu.cornell.mannlib.vitro.webapp.edit.n3editing.configuration.validators.DefaultDataPropertyFormValidator(rangeDatatypeUri, vreq)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8541/buggy-version/webapp.src.edu.cornell.mannlib.vitro.webapp.edit.n3editing.configuration.generators.DefaultDataPropertyFormGenerator.java", "BodyUseAPI": ["edu.cornell.mannlib.vitro.webapp.edit.n3editing.VTwo.EditConfigurationVTwo.addValidator(edu.cornell.mannlib.vitro.webapp.edit.n3editing.configuration.validators.DefaultDataPropertyFormValidator)"], "Fixed commit": "d8aaecd4fd320c439630cc3b7e45d96e21867edb", "Url": "https://api.github.com/repos/vivo-project/Vitro", "Date": "2015-04-08T20:15:59Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getCookies()) != null) { for (final javax.servlet.http.Cookie cookie : request.getCookies()) { if (cookie.getName().equals(sessionName)) { result = true; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1613/buggy-version/src.main.java.com.ctlok.web.session.StatelessSessionFilter.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getCookies()"], "Fixed commit": "531e4dcea5fee431214733a5e2deeca78cb648a9", "Url": "https://api.github.com/repos/lawrence0819/java-stateless-http-session", "Date": "2014-02-05T07:15:12Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (configKeyPath.isRootPath()) { return storeRoot; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4622/buggy-version/gobblin-config-management.gobblin-config-client.src.main.java.gobblin.config.client.ConfigClientUtils.java", "BodyUseAPI": [], "Fixed commit": "29d8920e0920e1b20006e9c07cceae5679e86362", "Url": "https://api.github.com/repos/apache/incubator-gobblin", "Date": "2016-03-10T01:18:13Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lombok.eclipse.EclipseNode.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((field.modifiers) & (org.eclipse.jdt.internal.compiler.classfmt.ClassFileConstants.AccTransient)) != 0) { errorNode.addError(\"'lazy' is not supported on transient fields.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/132/buggy-version/src.core.lombok.eclipse.handlers.HandleGetter.java", "BodyUseAPI": [], "Fixed commit": "cf82dcfb8057637255ce223671a8d727fe0a073a", "Url": "https://api.github.com/repos/mebigfatguy/lombok", "Date": "2016-12-05T22:41:38Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lombok.javac.JavacNode.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((fieldDecl.mods.flags) & (com.sun.tools.javac.code.Flags.TRANSIENT)) != 0) { source.addError(\"'lazy' is not supported on transient fields.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/132/buggy-version/src.core.lombok.javac.handlers.HandleGetter.java", "BodyUseAPI": [], "Fixed commit": "cf82dcfb8057637255ce223671a8d727fe0a073a", "Url": "https://api.github.com/repos/mebigfatguy/lombok", "Date": "2016-12-05T22:41:38Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.yawlfoundation.yawl.editor.ui.net.utilities.YAWLFlowRelation.getSourceTask()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((sourceTask.getJoinDecorator()) != null) { org.yawlfoundation.yawl.editor.ui.net.utilities.NetCellUtilities.adjustPortLocation(targetPoint, sourceTask.getJoinDecorator().getCardinalPosition()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2830/buggy-version/source.org.yawlfoundation.yawl.editor.ui.net.utilities.NetCellUtilities.java", "BodyUseAPI": ["org.yawlfoundation.yawl.editor.ui.net.utilities.YAWLTask.getJoinDecorator()", "sourceTask.getJoinDecorator().getCardinalPosition()", "org.yawlfoundation.yawl.editor.ui.net.utilities.NetCellUtilities.adjustPortLocation(java.awt.geom.Point2D.Double,sourceTask.getJoinDecorator().getCardinalPosition())"], "Fixed commit": "50db55d92216ea42b6e1b0b1e644f733fa65e689", "Url": "https://api.github.com/repos/yawlfoundation/editor", "Date": "2016-05-17T07:52:48Z"},
{"Line": "=>472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.yawlfoundation.yawl.editor.ui.net.utilities.YAWLFlowRelation.getSourceTask()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((sourceTask.getSplitDecorator()) != null) { org.yawlfoundation.yawl.editor.ui.net.utilities.NetCellUtilities.adjustPortLocation(sourcePoint, sourceTask.getSplitDecorator().getCardinalPosition()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2830/buggy-version/source.org.yawlfoundation.yawl.editor.ui.net.utilities.NetCellUtilities.java", "BodyUseAPI": ["org.yawlfoundation.yawl.editor.ui.net.utilities.NetCellUtilities.adjustPortLocation(java.awt.geom.Point2D.Double,sourceTask.getSplitDecorator().getCardinalPosition())", "sourceTask.getSplitDecorator().getCardinalPosition()", "org.yawlfoundation.yawl.editor.ui.net.utilities.YAWLTask.getSplitDecorator()"], "Fixed commit": "50db55d92216ea42b6e1b0b1e644f733fa65e689", "Url": "https://api.github.com/repos/yawlfoundation/editor", "Date": "2016-05-17T07:52:48Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSeasoning()) != null) { for (int i = 0; i < (getSeasoning().size()); i++) str += (getSeasoning().get(i).getItem()) + \"\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2645/buggy-version/app.src.main.java.com.logobuico.johnathan.subwaysandwichscrambler.Sandwich.java", "BodyUseAPI": [], "Fixed commit": "6ea5b65d73f2916c42bfeb1b56d239f95202ea51", "Url": "https://api.github.com/repos/ITASJHall/SubwaySandwichScrambler", "Date": "2015-04-02T00:45:47Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getDressing()) != null) { for (int i = 0; i < (getDressing().size()); i++) str += (getDressing().get(i).getItem()) + \"\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2645/buggy-version/app.src.main.java.com.logobuico.johnathan.subwaysandwichscrambler.Sandwich.java", "BodyUseAPI": [], "Fixed commit": "6ea5b65d73f2916c42bfeb1b56d239f95202ea51", "Url": "https://api.github.com/repos/ITASJHall/SubwaySandwichScrambler", "Date": "2015-04-02T00:45:47Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (manager != null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1820/buggy-version/components.entities.api.src.main.java.org.phenotips.entities.internal.AbstractPrimaryEntityGroup.java", "BodyUseAPI": [], "Fixed commit": "5186d85888d9cf5d92b5f2683841f22f3fb5f6a0", "Url": "https://api.github.com/repos/phenotips/phenotips", "Date": "2016-09-15T23:56:55Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((m_labelingCol.getStringValue()) != null) { org.knime.knip.base.node.NodeTools.autoColumnSelection(inSpecs[0], m_labelingCol, org.knime.knip.base.data.labeling.LabelingValue.class, this.getClass()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6515/buggy-version/org.knime.knip.base.src.org.knime.knip.base.nodes.view.segmentoverlay.SegmentOverlayNodeModel.java", "BodyUseAPI": ["org.knime.knip.base.node.NodeTools.autoColumnSelection(inSpecs[0],org.knime.core.node.defaultnodesettings.SettingsModelString,java.lang.Class,java.lang.Class<? extends org.knime.knip.base.nodes.view.segmentoverlay.SegmentOverlayNodeModel>)"], "Fixed commit": "4b3e056083c0571f8720c41c3541b7fc138d13df", "Url": "https://api.github.com/repos/knime-ip/knip", "Date": "2013-10-24T14:59:05Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((m_imgCol.getStringValue()) != null) { imgColIdx = inData[0].getDataTableSpec().findColumnIndex(m_imgCol.getStringValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6515/buggy-version/org.knime.knip.base.src.org.knime.knip.base.nodes.view.segmentoverlay.SegmentOverlayNodeModel.java", "BodyUseAPI": ["inData[0].getDataTableSpec().findColumnIndex(m_imgCol.getStringValue())", "org.knime.core.node.defaultnodesettings.SettingsModelString.getStringValue()"], "Fixed commit": "4b3e056083c0571f8720c41c3541b7fc138d13df", "Url": "https://api.github.com/repos/knime-ip/knip", "Date": "2013-10-24T14:59:05Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((m_labelingCol.getStringValue()) != null) { labelingColIdx = org.knime.knip.base.node.NodeTools.autoColumnSelection(inData[0].getDataTableSpec(), m_labelingCol, org.knime.knip.base.data.labeling.LabelingValue.class, this.getClass()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6515/buggy-version/org.knime.knip.base.src.org.knime.knip.base.nodes.view.segmentoverlay.SegmentOverlayNodeModel.java", "BodyUseAPI": ["org.knime.knip.base.node.NodeTools.autoColumnSelection(inData[0].getDataTableSpec(),org.knime.core.node.defaultnodesettings.SettingsModelString,java.lang.Class,java.lang.Class<? extends org.knime.knip.base.nodes.view.segmentoverlay.SegmentOverlayNodeModel>)"], "Fixed commit": "4b3e056083c0571f8720c41c3541b7fc138d13df", "Url": "https://api.github.com/repos/knime-ip/knip", "Date": "2013-10-24T14:59:05Z"},
{"Line": "=>588", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((target) == null) return prevdir;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7334/buggy-version/GameOfBombs1.1.1.src.characterCollection.AI.java", "BodyUseAPI": [], "Fixed commit": "913b18f3d726c8b530648bd4ab356f114796d0c1", "Url": "https://api.github.com/repos/YunchuWang/GameOfBombs", "Date": "2016-09-22T16:25:32Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nschmidt.ldparteditor.data.VM25RectangleSnap.getLoop(org.nschmidt.ldparteditor.data.Vertex,java.util.TreeSet<org.nschmidt.ldparteditor.data.Vertex>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (loop != null) { result[0] = new org.nschmidt.ldparteditor.data.Vertex(minDistance, java.math.BigDecimal.ZERO, java.math.BigDecimal.ZERO); result[1] = loop[0]; result[2] = loop[1]; result[3] = loop[2]; result[4] = loop[3]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8013/buggy-version/src.org.nschmidt.ldparteditor.data.VM25RectangleSnap.java", "BodyUseAPI": [], "Fixed commit": "56266ed58c6a765f54902cff4c939a2adc69121d", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-05-08T19:09:45Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (courseList != null) { return courseList.getCourses(); }else { return new java.util.ArrayList<fi.helsinki.cs.tmc.core.domain.Course>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4175/buggy-version/plugin-core.src.main.java.fi.helsinki.cs.tmc.core.storage.CourseStorage.java", "BodyUseAPI": ["fi.helsinki.cs.tmc.core.storage.formats.CoursesFileFormat.getCourses()"], "Fixed commit": "88888819003a0ef0cb49317ebc4a87c2dd3de801", "Url": "https://api.github.com/repos/tmc-eclipse/tmc-eclipse", "Date": "2014-06-24T12:34:47Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.currentTimeMillis()", "((com.bergerkiller.bukkit.tc.controller.MinecartMember) (this.tracker)).getGroup()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((group.lastSync) == (java.lang.Long.MIN_VALUE)) || ((time - (group.lastSync)) > (com.bergerkiller.bukkit.tc.controller.MinecartMemberTrackerEntry.MIN_SYNC_INTERVAL))) { group.lastSync = time; syncAll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7444/buggy-version/src.com.bergerkiller.bukkit.tc.controller.MinecartMemberTrackerEntry.java", "BodyUseAPI": [], "Fixed commit": "dd42e3205b7af7c54bab18c979f7cd1d23d356ea", "Url": "https://api.github.com/repos/bergerkiller/TrainCarts", "Date": "2012-09-23T11:09:38Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gameController) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2223/buggy-version/app.src.main.java.org.secuso.privacyfriendlysudoku.ui.view.SudokuFieldLayout.java", "BodyUseAPI": [], "Fixed commit": "7e3f4f28ba4223a81e6255ce3d8317022c208ee1", "Url": "https://api.github.com/repos/SecUSo/privacy-friendly-sudoku", "Date": "2016-03-29T16:37:25Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (messagesReceived && (message1 != null)) { getUser().save(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2076/buggy-version/app.src.main.java.com.bizfit.bizfit.chat.Conversation.java", "BodyUseAPI": [], "Fixed commit": "310a998d16e0f3e584e261e80e60de9487a9e6d8", "Url": "https://api.github.com/repos/nyyppa/BizFit", "Date": "2017-01-18T12:48:29Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(fullURL.startsWith(CoreConstants.WEBDAV_SERVLET_URI))) { fullURL = CoreConstants.WEBDAV_SERVLET_URI.concat(fullURL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5282/buggy-version/src.java.com.idega.jackrabbit.bean.JackrabbitRepositoryItem.java", "BodyUseAPI": ["CoreConstants.WEBDAV_SERVLET_URI.concat(java.lang.String)"], "Fixed commit": "b11739ab90c11e64eda97aed5d200b8e17bdb6a0", "Url": "https://api.github.com/repos/idega/com.idega.jackrabbit", "Date": "2014-08-26T12:20:10Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(fullURL.startsWith(\"http\"))) { java.lang.String server = com.idega.idegaweb.IWMainApplication.getDefaultIWMainApplication().getSettings().getProperty(IWConstants.SERVER_URL_PROPERTY_NAME); if (server == null) { getLogger().warning(\"Unknown server\"); }else { if ((server.endsWith(CoreConstants.SLASH)) && (fullURL.startsWith(CoreConstants.SLASH))) { fullURL = fullURL.substring(1); } fullURL = server.concat(fullURL); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5282/buggy-version/src.java.com.idega.jackrabbit.bean.JackrabbitRepositoryItem.java", "BodyUseAPI": ["java.lang.String.startsWith(CoreConstants.SLASH)", "java.lang.String.substring(int)"], "Fixed commit": "b11739ab90c11e64eda97aed5d200b8e17bdb6a0", "Url": "https://api.github.com/repos/idega/com.idega.jackrabbit", "Date": "2014-08-26T12:20:10Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fibArray.size()) > 1) { fibArray.remove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6988/buggy-version/app.src.main.java.xyz.baotran.scrumpolling.MainActivity.java", "BodyUseAPI": ["xyz.baotran.scrumpolling.Fibonacci.remove()"], "Fixed commit": "355e60e65fd15729a1d5a6217460268f48c64ac7", "Url": "https://api.github.com/repos/btran12/ScrumPolling", "Date": "2016-10-26T01:46:11Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.size()) == 1) { tail = 1; }else { tail = fibArray.get(((size()) - 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6988/buggy-version/app.src.main.java.xyz.baotran.scrumpolling.Fibonacci.java", "BodyUseAPI": [], "Fixed commit": "355e60e65fd15729a1d5a6217460268f48c64ac7", "Url": "https://api.github.com/repos/btran12/ScrumPolling", "Date": "2016-10-26T01:46:11Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.lessvoid.nifty.render.NiftyImage.getColor()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (c == null) { c = whiteColor; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6239/buggy-version/nifty-core.src.main.java.de.lessvoid.nifty.render.NiftyRenderEngineImpl.java", "BodyUseAPI": [], "Fixed commit": "7692d5ec8ec97d15f9f6d9a3df67ff58702fbd04", "Url": "https://api.github.com/repos/Genhis/nifty-gui", "Date": "2015-09-30T20:22:55Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.geosolutions.android.map.mbtiles.MbTilesRenderer.tileLatLonBounds(int,int,byte,Tile.TILE_SIZE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((((-180) > (tb[0])) || ((tb[0]) > 180)) || ((-90) > (tb[1]))) || ((tb[1]) > 90)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6885/buggy-version/map.src.it.geosolutions.android.map.mbtiles.MbTilesRenderer.java", "BodyUseAPI": [], "Fixed commit": "2e12cb376503f46585f3d60e4f3f483469e9812c", "Url": "https://api.github.com/repos/geosolutions-it/MapStoreMobile", "Date": "2014-08-27T08:57:02Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((matrix[i][0]) == '1') max = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2683/buggy-version/LeetCode.src.leetcode.Q221_MaximalSquare.java", "BodyUseAPI": [], "Fixed commit": "ae0e3c0a104ea89607ecc8f1f6520dbdacb9157f", "Url": "https://api.github.com/repos/shawnsong/LeetCode", "Date": "2016-04-20T02:53:11Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((matrix[0][i]) == '1') max = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2683/buggy-version/LeetCode.src.leetcode.Q221_MaximalSquare.java", "BodyUseAPI": [], "Fixed commit": "ae0e3c0a104ea89607ecc8f1f6520dbdacb9157f", "Url": "https://api.github.com/repos/shawnsong/LeetCode", "Date": "2016-04-20T02:53:11Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ft.invoke()) { if (!(completedMessage.isEmpty())) sendMessage(channel, (\"Completed Matches:\" + completedMessage)); sendMessage(channel, (\"Upcoming Matches:\" + upcomingMessage)); ft.executedSuccessfully(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1934/buggy-version/src.SaveyBot.java", "BodyUseAPI": ["SaveyBot.FloodTimer.executedSuccessfully()"], "Fixed commit": "b32f6cbcfd700166062baada113e7fca997fcb53", "Url": "https://api.github.com/repos/Always8bit/MeleeBot", "Date": "2015-10-06T05:37:18Z"},
{"Line": "=>473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityDamageEvent.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (entity instanceof org.bukkit.entity.LivingEntity) { if (com.projectkorra.projectkorra.util.TempArmor.hasTempArmor(((org.bukkit.entity.LivingEntity) (entity)))) { event.setDamage(DamageModifier.ARMOR, 0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1710/buggy-version/src.com.projectkorra.projectkorra.PKListener.java", "BodyUseAPI": [], "Fixed commit": "842d39697c0b59bcd453a74a9015945c20607759", "Url": "https://api.github.com/repos/PhanaticD/ProjectKorra", "Date": "2017-08-06T21:16:09Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nestingMode == 0) { return offset - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5963/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.src.com.redhat.ceylon.eclipse.code.complete.ParameterContextValidator.java", "BodyUseAPI": [], "Fixed commit": "4ac903186efe29affa7aefdbbf87b8de72035d9c", "Url": "https://api.github.com/repos/ceylon/ceylon-ide-eclipse", "Date": "2014-02-09T00:31:34Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offset > 0) && ((document.getChar(offset)) == ' ')) { offset++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5963/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.src.com.redhat.ceylon.eclipse.code.complete.InvocationCompletionProposal.java", "BodyUseAPI": [], "Fixed commit": "4ac903186efe29affa7aefdbbf87b8de72035d9c", "Url": "https://api.github.com/repos/ceylon/ceylon-ide-eclipse", "Date": "2014-02-09T00:31:34Z"},
{"Line": "=>723", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.EnvVars.expand(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(org.apache.commons.lang.StringUtils.isEmpty(codeSigningIdentity))) { packageCommandLine.add(\"--no-strict\"); packageCommandLine.add(codeSigningIdentity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6713/buggy-version/src.main.java.au.com.rayh.XCodeBuilder.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "38a3e7df3353b71ebea68bfb6260bc4faf2ee7c5", "Url": "https://api.github.com/repos/xujialiang/xcode-plugin", "Date": "2015-02-03T10:28:25Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["chunkSystem.getConfiguration().getContentProvider()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (contentProvider != null) { contentProvider.remove(target); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/116/buggy-version/src.de.myreality.chunx.caching.CachedChunkHandler.java", "BodyUseAPI": ["de.myreality.chunx.ContentProvider.remove(de.myreality.chunx.ChunkTarget)"], "Fixed commit": "a5b4cde3fd1e75072cb3fee0df6f45cd5254d667", "Url": "https://api.github.com/repos/MyRealityCoding/chunx", "Date": "2013-10-03T14:18:58Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.myreality.chunx.ChunkConfiguration.getContentProvider()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (contentProvider != null) { targets.addAll(contentProvider.getContent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/116/buggy-version/src.de.myreality.chunx.caching.CachedChunkHandler.java", "BodyUseAPI": ["java.util.List<de.myreality.chunx.ChunkTarget>.addAll(contentProvider.getContent())", "de.myreality.chunx.ContentProvider.getContent()"], "Fixed commit": "a5b4cde3fd1e75072cb3fee0df6f45cd5254d667", "Url": "https://api.github.com/repos/MyRealityCoding/chunx", "Date": "2013-10-03T14:18:58Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.myreality.chunx.ChunkConfiguration.getContentProvider()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (contentProvider != null) { for (de.myreality.chunx.ChunkTarget target : targets) { contentProvider.remove(target); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/116/buggy-version/src.de.myreality.chunx.caching.CachedChunkHandler.java", "BodyUseAPI": ["de.myreality.chunx.ContentProvider.remove(de.myreality.chunx.ChunkTarget)"], "Fixed commit": "a5b4cde3fd1e75072cb3fee0df6f45cd5254d667", "Url": "https://api.github.com/repos/MyRealityCoding/chunx", "Date": "2013-10-03T14:18:58Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((seq - (edgeLength)) > 0) && ((store[(seq - (edgeLength))]) >= 0)) { union(seq, (seq - (edgeLength))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/420/buggy-version/src.main.java.Percolation.java", "BodyUseAPI": ["Percolation.union(int,int)"], "Fixed commit": "490882e47c9467960a3706a64a6773c111e943dd", "Url": "https://api.github.com/repos/tiden0614/coursera_algorithm", "Date": "2014-10-20T10:14:46Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((seq + (edgeLength)) <= (size)) && ((store[(seq + (edgeLength))]) >= 0)) { union(seq, (seq + (edgeLength))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/420/buggy-version/src.main.java.Percolation.java", "BodyUseAPI": ["Percolation.union(int,int)"], "Fixed commit": "490882e47c9467960a3706a64a6773c111e943dd", "Url": "https://api.github.com/repos/tiden0614/coursera_algorithm", "Date": "2014-10-20T10:14:46Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.usfirst.frc.team4859.robot.RobotMap.pMode) == true) { org.usfirst.frc.team4859.robot.subsystems.Chassis.chassisDrive.arcadeDrive((y / 1.5), (twist / 1.25)); edu.wpi.first.wpilibj.smartdashboard.SmartDashboard.putString(\"ROBOT MODE\", \"Slow\"); }else { org.usfirst.frc.team4859.robot.subsystems.Chassis.chassisDrive.arcadeDrive(y, twist); edu.wpi.first.wpilibj.smartdashboard.SmartDashboard.putString(\"ROBOT MODE\", \"Normal\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1523/buggy-version/src.org.usfirst.frc.team4859.robot.subsystems.Chassis.java", "BodyUseAPI": [], "Fixed commit": "ce6964a27716deba8aa35e3a74715ac3fd6bb1c3", "Url": "https://api.github.com/repos/byronrobotics/Main-2015", "Date": "2015-02-17T00:30:29Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (commit) { connection.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5317/buggy-version/src.server.dataAccess.DataAccess.java", "BodyUseAPI": [], "Fixed commit": "82452c4251edc773b2c9e6117923a1ccf4c521a5", "Url": "https://api.github.com/repos/mouseas/RecordIndexer", "Date": "2012-10-27T01:21:24Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((avgImg) != null) { if (avgImg.isVisible()) { avgImgDisplay = new fntd.display.FNTDdisplay(avgImg, outer.ft, outer.options); avgImgDisplay.show(); avgImg.getWindow().toFront(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8819/buggy-version/src.main.java.fntd.workflow.ProcessDialog.java", "BodyUseAPI": [], "Fixed commit": "f09c366ea8ee437a4d97282a3ef41c01d296b0ac", "Url": "https://api.github.com/repos/FNTD/Java-library", "Date": "2017-06-19T13:53:25Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((argsArr.length) == 1) || ((argsArr.length) == 0)) { throw new seedu.address.logic.parser.exceptions.ParseException(java.lang.String.format(seedu.address.logic.parser.MESSAGE_INVALID_COMMAND_FORMAT, SocialCommand.MESSAGE_USAGE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8285/buggy-version/src.main.java.seedu.address.logic.parser.SocialCommandParser.java", "BodyUseAPI": [], "Fixed commit": "949265512f2fc34b71248cb7f7b0c2845f87320c", "Url": "https://api.github.com/repos/tbhbhbh/AddressBook", "Date": "2017-10-31T21:18:01Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dbl_appdevelopment.group2.todomaster.controller.CalendarService.1.findDoables(java.util.List<com.dbl_appdevelopment.group2.todomaster.model.Task>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((doables.size()) > 0) { showNotification(doables, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3925/buggy-version/TodoMaster.app.src.main.java.com.dbl_appdevelopment.group2.todomaster.controller.CalendarService.java", "BodyUseAPI": ["com.dbl_appdevelopment.group2.todomaster.controller.CalendarService.1.showNotification(java.util.List<com.dbl_appdevelopment.group2.todomaster.model.Task>,boolean)"], "Fixed commit": "65610dcbb0358422afc738298057a29610cfb2dd", "Url": "https://api.github.com/repos/Luttik/dbl_app_development_group02", "Date": "2017-04-11T15:35:02Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((salesGood) != null) { price = salesGood.getPrice(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8274/buggy-version/webcash-domain.src.main.java.com.siriusif.model.Sale.java", "BodyUseAPI": [], "Fixed commit": "b2996acb20a12227c631f3909e26297b8a5768aa", "Url": "https://api.github.com/repos/crc83/WebCash", "Date": "2013-03-06T23:12:50Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (returnParent) { return parent; }else { return omElement; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4463/buggy-version/modules.kernel.src.org.apache.axis2.transport.http.MultipartFormDataFormatter.java", "BodyUseAPI": [], "Fixed commit": "5736896bacaf3b507d1d143502f3a27b7456dbaf", "Url": "https://api.github.com/repos/wso2/wso2-axis2", "Date": "2015-12-23T06:51:54Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (remove) lowerData(block);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2302/buggy-version/src.main.java.com.sk89q.craftbook.mech.Snow.java", "BodyUseAPI": [], "Fixed commit": "84a1ec1c9300fc459b26a1e92ae5fd9d9ecd8c5d", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2014-01-18T04:29:26Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((eflag.length) == 0) { return \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/58/buggy-version/src.main.java.net.spy.memcached.collection.Element.java", "BodyUseAPI": [], "Fixed commit": "c20db30f5beeb2c039b484553bcf198a52970e17", "Url": "https://api.github.com/repos/naver/arcus-java-client", "Date": "2015-08-26T03:18:33Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((eflag) == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/58/buggy-version/src.main.java.net.spy.memcached.collection.Element.java", "BodyUseAPI": [], "Fixed commit": "c20db30f5beeb2c039b484553bcf198a52970e17", "Url": "https://api.github.com/repos/naver/arcus-java-client", "Date": "2015-08-26T03:18:33Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getBillingAddress()) != null) { billingAddress = request.getBillingAddress(); }else { billingAddress = new business.models.ContactData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4385/buggy-version/src.main.java.business.services.RequestFormService.java", "BodyUseAPI": ["business.representation.RequestRepresentation.getBillingAddress()"], "Fixed commit": "0811224a34ab1b58d2b6d3428b386b19213cbec5", "Url": "https://api.github.com/repos/thehyve/dntp-portal", "Date": "2015-07-14T22:00:58Z"},
{"Line": "=>899", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (gson)) gson = new com.google.gson.Gson();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6073/buggy-version/src.com.theeyetribe.client.GazeManager.java", "BodyUseAPI": [], "Fixed commit": "548400b833e614bca566d9c27a0a5163eeee46f4", "Url": "https://api.github.com/repos/EyeTribe/tet-java-client", "Date": "2015-03-23T07:55:53Z"},
{"Line": "=>1632", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((null != (apiManager)) && (apiManager.isConnected())) apiManager.requestHeartbeat();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6073/buggy-version/src.com.theeyetribe.client.GazeManager.java", "BodyUseAPI": ["com.theeyetribe.client.GazeApiManager.requestHeartbeat()"], "Fixed commit": "548400b833e614bca566d9c27a0a5163eeee46f4", "Url": "https://api.github.com/repos/EyeTribe/tet-java-client", "Date": "2015-03-23T07:55:53Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hbase.regionserver.ResultScanner.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(result.isEmpty())) { for (org.apache.hadoop.hbase.KeyValue kv : result.raw()) { results.add(kv); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3191/buggy-version/sandbox.prototype.hbase-scanner.src.main.java.org.apache.hadoop.hbase.regionserver.HBaseClientScanner.java", "BodyUseAPI": ["org.apache.hadoop.hbase.regionserver.Result.raw()"], "Fixed commit": "6213f59b884db517049c39617692cbe76db620c8", "Url": "https://api.github.com/repos/XingCloud/incubator-drill", "Date": "2013-09-04T08:49:06Z"},
{"Line": "=>733", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((sectorSplit.length) > 2) { sectorName = \"\"; for (int i = 1; i < ((sectorSplit.length) - 1); i++) { sectorName += (sectorSplit[i]) + \"-\"; } sectorName += sectorSplit[((sectorSplit.length) - 1)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1601/buggy-version/src.main.java.org.sandbag.programs.EUTLDBImporter.java", "BodyUseAPI": [], "Fixed commit": "f03d8d4deba1ed79555a7429b000f0eab735e314", "Url": "https://api.github.com/repos/sandbag-climate/eutldb", "Date": "2016-04-12T10:21:26Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.parser.JSONScanner.charAt((((bp) + 20) + millisLen))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (timeZoneFlag == 'Z') { timzeZoneLength = 1; if ((calendar.getTimeZone().getRawOffset()) != 0) { java.lang.String[] timeZoneIDs = java.util.TimeZone.getAvailableIDs(0); if ((timeZoneIDs.length) > 0) { java.util.TimeZone timeZone = java.util.TimeZone.getTimeZone(timeZoneIDs[0]); calendar.setTimeZone(timeZone); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8262/buggy-version/src.main.java.com.alibaba.fastjson.parser.JSONScanner.java", "BodyUseAPI": [], "Fixed commit": "e53047afcdc93a6a3e6a6f97cdbfff8df529cb6a", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2015-01-13T09:40:17Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentCourse) == null) { javax.swing.JOptionPane.showMessageDialog(this, \"Please select a course.\", \"Error\", javax.swing.JOptionPane.ERROR_MESSAGE); }else { int result = javax.swing.JOptionPane.showConfirmDialog(this, \"Are you sure you want to delete this course?\", \"Confirm Delete\", javax.swing.JOptionPane.YES_NO_OPTION); if (result == (javax.swing.JOptionPane.YES_OPTION)) { if ((currentCourse.getQuizs().size()) > 0) { javax.swing.JOptionPane.showMessageDialog(this, \"You cannot delete a course with quizzes attached to it.\", \"Error\", javax.swing.JOptionPane.ERROR_MESSAGE); }else { currentUser.deleteCourse(currentCourse.getCourseName()); } refreshContent(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8870/buggy-version/Quiz.src.CourseQuiz.java", "BodyUseAPI": [], "Fixed commit": "795252ece89dfc6f5e786b4c3b7f92ac91bf9071", "Url": "https://api.github.com/repos/coen275/Quiz", "Date": "2017-03-23T01:26:27Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((opacityModifyRGB_) != modify) { org.cocos2d.nodes.ccColor3B oldColor = this.color_; opacityModifyRGB_ = modify; setColor(oldColor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2928/buggy-version/cocos2d-android.src.org.cocos2d.nodes.CCSprite.java", "BodyUseAPI": [], "Fixed commit": "be31cc0dffc8a134d3712d4c0688bd32e516b214", "Url": "https://api.github.com/repos/apexknowledge/cocos2d", "Date": "2011-04-20T21:50:39Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.Ben12345rocks.VotingPlugin.Config.Config.getInstance().getDebugEnabled()) { com.Ben12345rocks.VotingPlugin.Objects.User.plugin.getLogger().info((((((\"Checking world: \" + worldName) + \", reard: \") + reward) + \", votesite: \") + (voteSite.getSiteName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1046/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Objects.User.java", "BodyUseAPI": [], "Fixed commit": "6eea5e943d7d4c166c931fb385339a672a4092bf", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-05-05T01:14:36Z"},
{"Line": "=>577", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.Ben12345rocks.VotingPlugin.Config.Config.getInstance().getDebugEnabled()) { com.Ben12345rocks.VotingPlugin.Objects.User.plugin.getLogger().info(\"Giving reward...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1046/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Objects.User.java", "BodyUseAPI": [], "Fixed commit": "6eea5e943d7d4c166c931fb385339a672a4092bf", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-05-05T01:14:36Z"},
{"Line": "=>1768", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["yml.getRoot().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (obj instanceof java.lang.Long) seed = ((java.lang.Long) (obj)); else if (obj instanceof java.lang.Integer) seed = ((java.lang.Integer) (obj)).longValue();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3497/buggy-version/src.com.bekvon.bukkit.residence.Residence.java", "BodyUseAPI": [], "Fixed commit": "fc185886ca9d1d3480d9960ca39a6c0548cd2731", "Url": "https://api.github.com/repos/bekvon/Residence", "Date": "2011-09-24T22:24:29Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isChecked) ((android.widget.TextView) (getActionBar().getCustomView().findViewById(fakeR.getId(\"id\", \"actionbar_title_textview\")))).setText(((((maxImageCount) - (maxImages)) + 1) + \" foto's\")); else ((android.widget.TextView) (getActionBar().getCustomView().findViewById(fakeR.getId(\"id\", \"actionbar_title_textview\")))).setText(((((maxImageCount) - (maxImages)) - 1) + \" foto's\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6146/buggy-version/src.android.Library.src.MultiImageChooserActivity.java", "BodyUseAPI": [], "Fixed commit": "415cb732330f1e765006ff8814d3facbfcd672a9", "Url": "https://api.github.com/repos/ratkop/-cordova-imagePickerEx", "Date": "2015-01-20T10:10:09Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event instanceof org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent) { assert last == null; aggregateEvent = ((org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent) (event)); }else if (last == null) { aggregateEvent = org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent.getAggregatedEvent(event, eventCountOnCreation); }else { assert last instanceof org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent; org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent aggregateLastEvent = ((org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent) (last)); aggregateEvent = org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent.appendOneEditEvent(aggregateLastEvent, event, eventCountOnCreation, toNewDuration); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2941/buggy-version/org.eclipse.mylyn.context.core.src.org.eclipse.mylyn.internal.context.core.DegreeOfInterest.java", "BodyUseAPI": ["org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent.appendOneEditEvent(org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent,org.eclipse.mylyn.monitor.core.InteractionEvent,int,boolean)", "org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent.getAggregatedEvent(org.eclipse.mylyn.monitor.core.InteractionEvent,int)"], "Fixed commit": "7cbc6187e3970b165bb33a09f3b3da9a3c7f8077", "Url": "https://api.github.com/repos/conachang/mylyn.context", "Date": "2015-05-28T07:39:07Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((model.isVisibility()) == null) entity.setVisibility(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4049/buggy-version/hmis-survey-api.src.main.java.com.servinglynk.hmis.warehouse.service.converter.QuestionConverterv2.java", "BodyUseAPI": [], "Fixed commit": "af301e497baf065233a4b307327705600b8e4052", "Url": "https://api.github.com/repos/hserv/coordinated-entry", "Date": "2017-12-21T03:13:25Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((model.isVisibility()) != null) entity.setVisibility(model.isVisibility());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4049/buggy-version/hmis-survey-api.src.main.java.com.servinglynk.hmis.warehouse.service.converter.QuestionConverterv2.java", "BodyUseAPI": ["com.servinglynk.hmis.warehouse.core.model.Questionv2.isVisibility()", "com.servinglynk.hmis.warehouse.model.QuestionEntity.setVisibility(model.isVisibility())"], "Fixed commit": "af301e497baf065233a4b307327705600b8e4052", "Url": "https://api.github.com/repos/hserv/coordinated-entry", "Date": "2017-12-21T03:13:25Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pauldeschacht.pdf2txtpos.PDFWordPositionStripper.getWordPositions()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((words.size()) == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5492/buggy-version/pdf2txtpos.src.main.java.com.pauldeschacht.pdf2txtpos.PDF2TxtPos.java", "BodyUseAPI": [], "Fixed commit": "142759270fb8e5af4164143cc500e535b84909fd", "Url": "https://api.github.com/repos/pauldeschacht/pdf2txtpos", "Date": "2015-07-31T07:39:34Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((_fileSize) % (_pieceSize)) != 0) { (_numPieces)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6101/buggy-version/peerProcess.java", "BodyUseAPI": [], "Fixed commit": "f0f83b1a4c41b8cfa76a303594c3ddc6a7cbd812", "Url": "https://api.github.com/repos/jasontowens/P2PJavaImplementation", "Date": "2016-12-07T22:56:14Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s.equals(\"\")) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/725/buggy-version/src.gui.SettingsPanel.java", "BodyUseAPI": [], "Fixed commit": "111f856dd2bf9949d586f9820cc4631a1bde0b22", "Url": "https://api.github.com/repos/Qwe1rty/Event-Planner", "Date": "2016-04-14T03:15:48Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((messages.size()) > 0) throw new java.lang.RuntimeException(\"Kafka State is invalid, the previous transaction didn't flush\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3261/buggy-version/src.main.java.com.github.quintona.KafkaState.java", "BodyUseAPI": [], "Fixed commit": "39033eb905203177be6c1f9c25206d2961ae1588", "Url": "https://api.github.com/repos/quintona/trident-kafka-push", "Date": "2013-05-11T03:02:25Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((!(new loci.common.Location(directoryRoot).exists())) || (!(loci.formats.FormatHandler.checkSuffix(directoryRoot, ResourceNamer.FAKE_EXT)))) { this.directoryRoot = new loci.common.Location((directoryRoot + (loci.formats.ResourceNamer.FAKE_EXT))); }else { this.directoryRoot = new loci.common.Location(directoryRoot); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1761/buggy-version/components.scifio.src.loci.formats.tools.FakeImage.java", "BodyUseAPI": [], "Fixed commit": "17ec9d41291629820e872b3ddcef63dc1c07ef4c", "Url": "https://api.github.com/repos/bpindelski/bioformats", "Date": "2013-06-28T15:13:26Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,new com.google.gson.reflect.TypeToken<java.util.List<com.ai.paas.cpaas.be.srv.manage.model.mesos.ServiceDO>>() {}.getType())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == serviceDOs) { com.ai.paas.cpaas.be.srv.service.impl.MesosServiceImpl.logger.warn(\"MesosService.getServices serviceDOs is null\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2832/buggy-version/src.main.java.com.ai.paas.cpaas.be.srv.service.impl.MesosServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "59ad3aeaf67e5af7f367651194ef17c616d0c831", "Url": "https://api.github.com/repos/AIPaaS/platform-application-mgmt-service", "Date": "2016-03-19T07:09:53Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentEventIndex) < (events.size())) { return events.get(((currentEventIndex)++)); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6737/buggy-version/EventList.java", "BodyUseAPI": ["java.util.ArrayList<Event>.get(int)"], "Fixed commit": "2f9d9bd57e2dd31b1c92f464e432358f4a68902c", "Url": "https://api.github.com/repos/brobohn/APLSIP", "Date": "2015-12-06T22:13:15Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.habittracker2017.Habit.getLastEvent()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (checkNull != null) { if (android.text.format.DateUtils.isToday(checkNull.getDate().getTime())) { android.widget.Toast.makeText(getBaseContext(), \"You have already done this habit today!\", Toast.LENGTH_LONG).show(); }else { android.content.Intent intent = new android.content.Intent(getBaseContext(), com.example.habittracker2017.CreateEventActivity.class); intent.putExtra(\"Habit\", position); getBaseContext().startActivity(intent); } }else { android.content.Intent intent = new android.content.Intent(getBaseContext(), com.example.habittracker2017.CreateEventActivity.class); intent.putExtra(\"Habit\", position); getBaseContext().startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4145/buggy-version/app.src.main.java.com.example.habittracker2017.EditHabitActivity.java", "BodyUseAPI": ["com.example.habittracker2017.HabitEvent.getDate()", "checkNull.getDate().getTime()", "android.text.format.DateUtils.isToday(checkNull.getDate().getTime())"], "Fixed commit": "1657cc96b7f429c925466e8b6fd37e609afd2ffa", "Url": "https://api.github.com/repos/CMPUT301F17T16/HabitTracker2017", "Date": "2017-12-04T03:19:02Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (value == null) { this.fields.add(new org.audit4j.core.dto.Field(name, null, null)); }else { this.fields.add(new org.audit4j.core.dto.Field(name, value.toString(), value.getClass().getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6374/buggy-version/src.main.java.org.audit4j.core.dto.AuditEvent.java", "BodyUseAPI": ["java.util.List<org.audit4j.core.dto.Field>.add(org.audit4j.core.dto.Field)", "java.lang.Object.toString()", "java.lang.Object.getClass()", "java.lang.Class<? extends java.lang.Object>.getName()"], "Fixed commit": "ac00ed4c66b8ffcb2fa87e55f90c7841a8e338ac", "Url": "https://api.github.com/repos/audit4j/audit4j-core", "Date": "2014-08-26T05:31:17Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRotation) >= 2) { section = 2 - section; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5901/buggy-version/src.com.gregmcnew.android.pax.IntroActivity.java", "BodyUseAPI": [], "Fixed commit": "d2cbf305e50335a551dc0ba86c21faee8388867b", "Url": "https://api.github.com/repos/gmcnew/pax", "Date": "2011-07-16T05:29:14Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bothApproved) { result = left.getExamDateYearMonthDay().compareTo(right.getExamDateYearMonthDay()); if (result != 0) { return result; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5381/buggy-version/src.main.java.org.fenixedu.ulisboa.specifications.domain.evaluation.EvaluationComparator.java", "BodyUseAPI": [], "Fixed commit": "7885b5f17cd40e34012d7069d1e0d164ea2aedbe", "Url": "https://api.github.com/repos/qub-it/fenixedu-ulisboa-specifications", "Date": "2016-01-19T15:25:21Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result != 0) { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5381/buggy-version/src.main.java.org.fenixedu.ulisboa.specifications.domain.evaluation.EvaluationComparator.java", "BodyUseAPI": [], "Fixed commit": "7885b5f17cd40e34012d7069d1e0d164ea2aedbe", "Url": "https://api.github.com/repos/qub-it/fenixedu-ulisboa-specifications", "Date": "2016-01-19T15:25:21Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((me.game.pack.Player.instance) == null) me.game.pack.Player.instance = me.game.pack.Frame.getInstance(); else if ((me.game.pack.Player.instance) != (me.game.pack.Frame.getInstance())) { me.game.pack.Player.instance = me.game.pack.Frame.getInstance(); me.game.pack.Player.activePlayers = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4468/buggy-version/Blockinvaders.src.me.game.pack.Player.java", "BodyUseAPI": [], "Fixed commit": "fdd7ac280c94ace51567f030c36401a4aa0fbd23", "Url": "https://api.github.com/repos/Totenfluch/Blockinvanders", "Date": "2016-05-01T20:06:46Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles(se.lu.bos.scanner.BasicReportFileFilter)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((files == null) || ((files.length) == 0)) { se.lu.bos.scanner.ReportFileScannerBean.log.warn(((\"Specified report directory '\" + (reportsFolder)) + \"' is empty or does not exist.\")); return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6199/buggy-version/src.main.java.se.lu.bos.scanner.ReportFileScannerBean.java", "BodyUseAPI": [], "Fixed commit": "b675a63e8058d05395159d4860998819ecc5c5b7", "Url": "https://api.github.com/repos/eriklupander/bosparser", "Date": "2014-12-04T23:11:41Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (curNode == null) { return curElement; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6650/buggy-version/src.PolyGlot.ThesaurusManager.java", "BodyUseAPI": [], "Fixed commit": "fcca388e233526a9dec9a63933c57522524bc344", "Url": "https://api.github.com/repos/DraqueT/PolyGlot", "Date": "2014-10-01T21:20:23Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.getIntent().getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (mBundle != null) { mMapFileName = mBundle.getString(\"mapFileName\"); }else { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7451/buggy-version/src.org.servalproject.maps.MapActivity.java", "BodyUseAPI": ["android.os.Bundle.getString(java.lang.String)"], "Fixed commit": "c75c68628918dabfe3dfc20238e27102c528be90", "Url": "https://api.github.com/repos/servalproject/ServalMaps", "Date": "2012-05-31T04:50:38Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seqTreeProperties.SeqTreePropController.deepNewickIteration(boolean,deepPair.getValue().getKinder().get(key[0]),seqTreeProperties.SeqPropertyNode)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((!lastFlag) && ((newPropNode.getNodeHash().size()) > 1)) { setConcatNewickNode(newPropNode.getValue(), newPropNode.getCounter()); }else if ((!lastFlag) && ((newPropNode.getNodeHash().size()) < 1)) { removeLeadingParenthesisNewick(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3267/buggy-version/src.main.java.seqTreeProperties.SeqTreePropController.java", "BodyUseAPI": ["seqTreeProperties.SeqTreePropController.setConcatNewickNode(newPropNode.getValue(),newPropNode.getCounter())", "seqTreeProperties.SeqPropertyNode.getNodeHash()", "seqTreeProperties.SeqPropertyNode.getValue()", "seqTreeProperties.SeqPropertyNode.getCounter()", "newPropNode.getNodeHash().size()"], "Fixed commit": "02d3f88c6b011e3a47ce2f9bf9ac1c339ccb2f44", "Url": "https://api.github.com/repos/spinfo/stringsnstructures", "Date": "2015-09-03T08:19:36Z"},
{"Line": "=>460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seqTreeProperties.SeqTreePropController.deepNewickIteration(boolean,deepPair.getValue().getKinder().get(key[0]),seqTreeProperties.SeqPropertyNode)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((!lastFlag) && ((newPropNode.getNodeHash().size()) > 1)) { currPropNode.addNode(newPropNode.getValue(), newPropNode); }else { currPropNode = newPropNode; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3267/buggy-version/src.main.java.seqTreeProperties.SeqTreePropController.java", "BodyUseAPI": ["seqTreeProperties.SeqPropertyNode.addNode(newPropNode.getValue(),seqTreeProperties.SeqPropertyNode)", "seqTreeProperties.SeqPropertyNode.getValue()"], "Fixed commit": "02d3f88c6b011e3a47ce2f9bf9ac1c339ccb2f44", "Url": "https://api.github.com/repos/spinfo/stringsnstructures", "Date": "2015-09-03T08:19:36Z"},
{"Line": "=>1264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((wrapper.getValue(i)) == null) { sb.append(\"<null>\"); }else { sb.append(new java.lang.String(wrapper.getValue(i).array(), java.nio.charset.StandardCharsets.UTF_8)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3821/buggy-version/driver-core.src.main.java.com.datastax.driver.core.BoundStatement.java", "BodyUseAPI": ["com.datastax.driver.core.BoundStatement.DataWrapper.getValue(int)", "wrapper.getValue(i).array()", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "c524176e449d762ded2f7ec1f90023a9e17eb1bc", "Url": "https://api.github.com/repos/wselwood/java-driver", "Date": "2015-01-20T11:20:12Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((wordlength > 0) && (i > 0)) && ((i % wordlength) == 0)) ret.append(' ');", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4538/buggy-version/src.main.java.org.tal.redstonechips.util.BitSetUtils.java", "BodyUseAPI": [], "Fixed commit": "344eb49732b04e95338f1313450f11ec55a63d36", "Url": "https://api.github.com/repos/eisental/RedstoneChips", "Date": "2011-04-16T22:08:36Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (chunksLoaded) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4538/buggy-version/src.main.java.org.tal.redstonechips.circuit.Circuit.java", "BodyUseAPI": [], "Fixed commit": "344eb49732b04e95338f1313450f11ec55a63d36", "Url": "https://api.github.com/repos/eisental/RedstoneChips", "Date": "2011-04-16T22:08:36Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["commons.spring.HttpServletRequest.getContentLength()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (len == 0) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6685/buggy-version/java.howto.src.main.java.commons.spring.LoggerFilter.java", "BodyUseAPI": [], "Fixed commit": "252fae0004d731a74f064835f55e620104fb7a58", "Url": "https://api.github.com/repos/zzyongx/c-gist", "Date": "2016-07-15T07:47:59Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["commons.spring.ServletRequest.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (userId == null) userId = \"-\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6685/buggy-version/java.howto.src.main.java.commons.spring.LoggerFilter.java", "BodyUseAPI": [], "Fixed commit": "252fae0004d731a74f064835f55e620104fb7a58", "Url": "https://api.github.com/repos/zzyongx/c-gist", "Date": "2016-07-15T07:47:59Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pool) != null) { pool.shutdownNow(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/378/buggy-version/osc-router.src.main.java.com.netthreads.network.osc.router.service.MIDIRouter.java", "BodyUseAPI": [], "Fixed commit": "88c689492f4849dbd63ba76f3ea17f6d0b735115", "Url": "https://api.github.com/repos/alistairrutherford/osc-tools", "Date": "2014-05-24T10:24:02Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(footprint.hasDescendants())) { com.epam.reportportal.listeners.ReportPortalListenerContext.setRunningNowItemId(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1892/buggy-version/src.main.java.com.epam.reportportal.spock.SpockReporter.java", "BodyUseAPI": [], "Fixed commit": "f7456b2815d70dc8d357a5760100b884ec099be0", "Url": "https://api.github.com/repos/reportportal/agent-java-spock", "Date": "2016-10-25T12:36:10Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((uri.getQuery()) != null) { queryString = uri.getQuery(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2880/buggy-version/src.main.java.load.SignAWSv4.java", "BodyUseAPI": ["java.net.URL.getQuery()"], "Fixed commit": "21db09bfa6aa6882438f48622be6adb7b3be7859", "Url": "https://api.github.com/repos/Qoopi/IoT_Auto_Test", "Date": "2017-03-28T15:22:39Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((backend) == null) { backend = new com.onyx.android.sample.data.GObject(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4513/buggy-version/app.src.main.java.com.onyx.android.sample.device.DeviceConfig.java", "BodyUseAPI": [], "Fixed commit": "f81dd8cb43b41e58e4a2aaf7dac10695d4d06cb6", "Url": "https://api.github.com/repos/onyx-intl/OnyxAndroidSample", "Date": "2017-01-22T08:15:37Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (data != null) { android.net.Uri uri = data.getData(); try { java.lang.String path = it.unipi.dm.mpsolve.android.FileUtils.getPath(this, uri); it.unipi.dm.mpsolve.android.ApplicationData.startLoadingMessage(this, \"Solving\", \"MPSolve is working, please wait...\"); solver.solvePolynomialFile(this, path); } catch (java.net.URISyntaxException e) { android.widget.Toast.makeText(this, \"Cannot open the selected file\", Toast.LENGTH_SHORT).show(); e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3841/buggy-version/src.it.unipi.dm.mpsolve.android.MainActivity.java", "BodyUseAPI": ["android.content.Intent.getData()"], "Fixed commit": "873eae5df1b53ecb5809f984cbbd110d38a0e7c3", "Url": "https://api.github.com/repos/robol/MPSolveForAndroid", "Date": "2014-01-18T22:44:34Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.AsyncPlayerChatEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.github.ucchyocean.ct.ColorTeaming.getPlayerColor(player).equals(\"\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/308/buggy-version/src.main.java.com.github.ucchyocean.ct.listener.PlayerChatListener.java", "BodyUseAPI": [], "Fixed commit": "2fe10e0bce11849b463b80426d6d4964e5bc2572", "Url": "https://api.github.com/repos/ucchyocean/ColorTeaming", "Date": "2013-04-22T16:59:44Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<android.app.Activity, com.bluelinelabs.conductor.internal.LifecycleHandler>.get(android.app.Activity)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (lifecycleHandler == null) { lifecycleHandler = ((com.bluelinelabs.conductor.internal.LifecycleHandler) (activity.getFragmentManager().findFragmentByTag(com.bluelinelabs.conductor.internal.LifecycleHandler.FRAGMENT_TAG))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5994/buggy-version/conductor.src.main.java.com.bluelinelabs.conductor.internal.LifecycleHandler.java", "BodyUseAPI": [], "Fixed commit": "e64fe1c61027db77a788c7a9abeaecac166a11ff", "Url": "https://api.github.com/repos/The0ldM0nk/Conductor", "Date": "2017-05-24T08:01:36Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recPrimaryAlts) != null) { for (org.antlr.v4.analysis.LeftRecursiveRuleAltInfo altInfo : recPrimaryAlts) { if ((altInfo.altLabel) != null) { labels.add(new org.antlr.v4.runtime.misc.Triple<java.lang.Integer, org.antlr.v4.tool.ast.AltAST, java.lang.String>(altInfo.altNum, altInfo.originalAltAST, altInfo.altLabel)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4602/buggy-version/tool.src.org.antlr.v4.tool.LeftRecursiveRule.java", "BodyUseAPI": [], "Fixed commit": "9ca6bf9bd3a86f8bc494a6493ef89ca2856f83fa", "Url": "https://api.github.com/repos/Distrotech/antlr4", "Date": "2013-12-20T00:35:37Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recOpAlts) != null) { for (int i = 0; i < (recOpAlts.size()); i++) { org.antlr.v4.analysis.LeftRecursiveRuleAltInfo altInfo = recOpAlts.getElement(i); if ((altInfo.altLabel) != null) { labels.add(new org.antlr.v4.runtime.misc.Triple<java.lang.Integer, org.antlr.v4.tool.ast.AltAST, java.lang.String>(altInfo.altNum, altInfo.originalAltAST, altInfo.altLabel)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4602/buggy-version/tool.src.org.antlr.v4.tool.LeftRecursiveRule.java", "BodyUseAPI": [], "Fixed commit": "9ca6bf9bd3a86f8bc494a6493ef89ca2856f83fa", "Url": "https://api.github.com/repos/Distrotech/antlr4", "Date": "2013-12-20T00:35:37Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (test) { isRepeat = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5629/buggy-version/Java.LeetCode.src.LeetCode.SumBy3_15.java", "BodyUseAPI": [], "Fixed commit": "983b670072f369a6145707f72ebdbf9435ed4018", "Url": "https://api.github.com/repos/originalix/algorithm", "Date": "2017-10-10T23:02:57Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((worldObj) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5585/buggy-version/src.vswe.stevesfactory.blocks.TileEntitySignUpdater.java", "BodyUseAPI": [], "Fixed commit": "cec8338d91ef6a7c144e330eb2810fe495f978ed", "Url": "https://api.github.com/repos/Vswe/ModJam3", "Date": "2014-03-03T22:52:58Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (result != null) { if ((result.size()) == 1) { selectdPhrase = result.get(0); }else if ((result.size()) > 1) { java.util.Random r = new java.util.Random(); int randomNumber = (r.nextInt(((result.size()) - 1))) + 1; selectdPhrase = result.get(randomNumber); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2167/buggy-version/app.src.main.java.com.android.slangify.ui.activities.CreateChallengeActivity.java", "BodyUseAPI": ["java.util.ArrayList<com.android.slangify.repository.models.PhraseModel>.get(int)", "java.util.ArrayList<com.android.slangify.repository.models.PhraseModel>.size()", "java.util.Random.nextInt(((result.size()) - 1))", "java.util.ArrayList<com.android.slangify.repository.models.PhraseModel>.get(int)", "java.util.ArrayList<com.android.slangify.repository.models.PhraseModel>.size()", "java.util.ArrayList<com.android.slangify.repository.models.PhraseModel>.size()"], "Fixed commit": "f1b618886dbe32a491e654d1287950b156de5ba9", "Url": "https://api.github.com/repos/limormek/Slangify", "Date": "2017-03-10T07:36:00Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getLocalizedMessage()) != null) { dao.setMessage(e.getLocalizedMessage().replace(\"\\n\", \"<br />\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7863/buggy-version/admin.src.main.java.edu.unc.lib.dl.ui.MetsSubmitByPidController.java", "BodyUseAPI": ["edu.unc.lib.dl.util.MetsSubmitByPidDAO.setMessage(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.Exception.getLocalizedMessage()"], "Fixed commit": "3eb11d5ea132835ad4180ef17256c3609206cd97", "Url": "https://api.github.com/repos/UNC-Libraries/Carolina-Digital-Repository", "Date": "2012-07-30T18:32:52Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.philvarner.clamavj.ClamScan.scan(java.io.FileInputStream)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (ScanResult.Status.ERROR.equals(result.getStatus())) { throw new edu.unc.lib.dl.ingest.aip.AIPException((\"Virus checks are producing errors: \" + (result.getException().getLocalizedMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7863/buggy-version/persistence.src.main.java.edu.unc.lib.dl.ingest.aip.VirusScanFilter.java", "BodyUseAPI": ["result.getException().getLocalizedMessage()", "com.philvarner.clamavj.ScanResult.getException()"], "Fixed commit": "3eb11d5ea132835ad4180ef17256c3609206cd97", "Url": "https://api.github.com/repos/UNC-Libraries/Carolina-Digital-Repository", "Date": "2012-07-30T18:32:52Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stage.gpxFile) != null) { ((net.osmand.plus.sherpafy.TourViewActivity) (getSherlockActivity())).startStage(stage); }else { android.widget.Toast.makeText(app, R.string.gpx_files_not_found, Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3608/buggy-version/OsmAnd.src.net.osmand.plus.sherpafy.SherpafyStageFragment.java", "BodyUseAPI": ["((net.osmand.plus.sherpafy.TourViewActivity) (getSherlockActivity())).startStage(net.osmand.plus.sherpafy.TourInformation.StageInformation)"], "Fixed commit": "04410eed3c1e9cdb73334aaea9c41fafc99f03da", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2014-09-05T10:31:09Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.util.ArrayList<seedu.task.model.task.Task>>.get(((savedList.size()) - 1))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((restoredList.size()) != 0) savedList.remove(((savedList.size()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7935/buggy-version/src.main.java.seedu.task.model.task.UniqueMarkedTaskList.java", "BodyUseAPI": [], "Fixed commit": "cf35a21a71051804430bc0d7fd0ec4741b869d1e", "Url": "https://api.github.com/repos/CS2103AUG2016-T17-C1/main", "Date": "2016-11-02T17:46:41Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (size == 0) { final org.apache.tinkerpop.gremlin.process.traversal.Step parentStep = traversal.getParent().asStep(); if (!(parentStep instanceof org.apache.tinkerpop.gremlin.process.traversal.step.util.EmptyStep)) { final org.apache.tinkerpop.gremlin.process.traversal.Traversal.Admin parentTraversal = parentStep.getTraversal(); org.apache.tinkerpop.gremlin.process.traversal.util.TraversalHelper.replaceStep(parentStep, new org.apache.tinkerpop.gremlin.process.traversal.step.sideEffect.IdentityStep(parentTraversal), parentTraversal); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5106/buggy-version/gremlin-core.src.main.java.org.apache.tinkerpop.gremlin.process.traversal.strategy.optimization.RangeByIsCountStrategy.java", "BodyUseAPI": [], "Fixed commit": "568ba08419774d990069bdc3be674bddf32ec4d5", "Url": "https://api.github.com/repos/artem-aliev/tinkerpop", "Date": "2017-09-13T21:08:07Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.korosoft.jenkins.plugin.rtp.AbstractBuild<?, ?>.getResult()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (res == null) { throw new java.lang.IllegalStateException(\"abstractBuild.getResult() is null!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/832/buggy-version/src.main.java.org.korosoft.jenkins.plugin.rtp.RichTextPortlet.java", "BodyUseAPI": [], "Fixed commit": "9b3570386cf60bf3833628588454d856e2bc90c1", "Url": "https://api.github.com/repos/jenkinsci/rich-text-publisher-plugin", "Date": "2017-02-08T09:35:32Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (j == null) { throw new java.lang.IllegalStateException(\"Jenkins.getInstance() is null!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/832/buggy-version/src.main.java.org.korosoft.jenkins.plugin.rtp.RichTextPortlet.java", "BodyUseAPI": [], "Fixed commit": "9b3570386cf60bf3833628588454d856e2bc90c1", "Url": "https://api.github.com/repos/jenkinsci/rich-text-publisher-plugin", "Date": "2017-02-08T09:35:32Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getItem(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (item == null) { throw new java.lang.IllegalStateException(\"Jenkins.getInstance().getItem(jobName) is null!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/832/buggy-version/src.main.java.org.korosoft.jenkins.plugin.rtp.RichTextPortlet.java", "BodyUseAPI": [], "Fixed commit": "9b3570386cf60bf3833628588454d856e2bc90c1", "Url": "https://api.github.com/repos/jenkinsci/rich-text-publisher-plugin", "Date": "2017-02-08T09:35:32Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (j == null) { throw new java.lang.IllegalStateException(\"Jenkins.getInstance() is null!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/832/buggy-version/src.main.java.org.korosoft.jenkins.plugin.rtp.RichTextPortlet.java", "BodyUseAPI": [], "Fixed commit": "9b3570386cf60bf3833628588454d856e2bc90c1", "Url": "https://api.github.com/repos/jenkinsci/rich-text-publisher-plugin", "Date": "2017-02-08T09:35:32Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.catrobat.catroid.ProjectManager.getInstance().getCurrentProject().isCastProject()) { screenshotWidth = 1280; screenshotHeight = 720; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4600/buggy-version/catroid.src.org.catrobat.catroid.stage.StageListener.java", "BodyUseAPI": [], "Fixed commit": "2bcd72483dccf2fd6241afe339ee2e6f2b66834f", "Url": "https://api.github.com/repos/catroid-chromecast/Catroid", "Date": "2015-08-26T13:56:19Z"},
{"Line": "=>742", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((destroyed.get()) || ((broadcasterCache) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4567/buggy-version/modules.cpr.src.main.java.org.atmosphere.cpr.DefaultBroadcaster.java", "BodyUseAPI": [], "Fixed commit": "eb8da108ac722d80b57733ef9a8e0501bb0549c2", "Url": "https://api.github.com/repos/Atmosphere/atmosphere", "Date": "2011-12-07T13:28:00Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(selectedSpeaker.getPhoto()))) { if (isNetworkConnected()) { com.squareup.picasso.Picasso.with(this).load(android.net.Uri.parse(selectedSpeaker.getPhoto())).into(((android.widget.ImageView) (findViewById(R.id.speaker_image))), new com.squareup.picasso.Callback() { @java.lang.Override public void onSuccess() { progressBar.setVisibility(View.GONE); } @java.lang.Override public void onError() { progressBar.setVisibility(View.GONE); } }); }else progressBar.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4257/buggy-version/android.app.src.main.java.org.fossasia.openevent.activities.SpeakerDetailsActivity.java", "BodyUseAPI": ["android.net.Uri.parse(selectedSpeaker.getPhoto())", "com.squareup.picasso.Picasso.with(this).load(android.net.Uri.parse(selectedSpeaker.getPhoto())).into(((android.widget.ImageView) (findViewById(R.id.speaker_image))),com.squareup.picasso.Callback)", "org.fossasia.openevent.data.Speaker.getPhoto()", "com.squareup.picasso.Picasso.with(this).load(android.net.Uri.parse(selectedSpeaker.getPhoto()))"], "Fixed commit": "973d8a2e151f262815f7f41009b66f1bebad539c", "Url": "https://api.github.com/repos/brainbreaker/open-event-android", "Date": "2017-01-21T15:59:36Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((soundHost) != null) soundHost.addChannel(name, java.lang.String.format(\"stargate/milkyway/milkyway_%s.ogg\", file), position, volume, age);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7412/buggy-version/src.main.java.pcl.lc.tileentity.TileEntityStargateBase.java", "BodyUseAPI": [], "Fixed commit": "01982197290c3f91ffb4d9d978956e010f13f8f2", "Url": "https://api.github.com/repos/PC-Logix/LanteaCraft", "Date": "2014-06-04T03:02:29Z"},
{"Line": "=>519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(prefix))) { fieldPrefix = java.lang.String.format(\"%s.%s\", prefix, fieldPrefix); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4933/buggy-version/app.src.main.java.com.xfrocks.api.androiddemo.common.Api.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "198944818534d5cd0c9dddeb4376aeb11de72231", "Url": "https://api.github.com/repos/xfrocks/bdApi_Android", "Date": "2017-02-24T07:18:29Z"},
{"Line": "=>437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JComboBox<java.lang.String>.getSelectedItem()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (func.equals(\"Product\")) { btnChangeButton.setText(\"Change Product\"); }else if (func.equals(\"Screen\")) { btnChangeButton.setText(\"Change Screen\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/340/buggy-version/src.io.github.davidg95.JTill.jtillserver.ButtonOptionDialog.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "1adeb0324e86fae2a9b5980578c8a3647f7039ed", "Url": "https://api.github.com/repos/davidg95/JTillServer", "Date": "2017-10-02T16:07:46Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.lang.model.element.Element.getAnnotation(java.lang.Class)", "javax.lang.model.element.Element.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((optional != null) && (nonOptional != null)) { this.processingEnv.getMessager().printMessage(javax.tools.Diagnostic.Kind.WARNING, \"Optional and non optional annotations on the same parameter.\", attribute); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4870/buggy-version/apt.src.main.java.com.bloatit.framework.webprocessor.annotations.generator.ParamContainerProcessor.java", "BodyUseAPI": [], "Fixed commit": "7ebe1a35efd2a47fca76ab830e71c364551acc64", "Url": "https://api.github.com/repos/BloatIt/bloatit", "Date": "2011-06-13T11:28:09Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(uuid)) { uuid = host.getUuid(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/9172/buggy-version/code.iaas.agent-server.src.main.java.io.cattle.platform.agent.server.ping.dao.impl.PingDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "eb5c31dcf23bd08c05bfdae7c95986e9721da8ea", "Url": "https://api.github.com/repos/cjellick/cattle", "Date": "2015-02-18T02:32:46Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tracks.isEmpty()) { mTopTracksCard.setVisibility(View.GONE); }else { int counter = 0; for (de.umass.lastfm.Track track : tracks) { if (counter < 5) { counter++; addTopTrackLink(track, mTopTracksContainer); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8532/buggy-version/app.src.main.java.com.anescobar.musicale.view.fragments.AboutArtistFragment.java", "BodyUseAPI": [], "Fixed commit": "8480ffe6fa734f60598994fe217bf84248c3e57b", "Url": "https://api.github.com/repos/anescobar1991/Musicale", "Date": "2015-03-05T04:59:51Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (inner != null) { return new com.microsoft.azure.management.compute.implementation.DiskImpl(inner.name(), inner, this.manager()); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2981/buggy-version/azure-mgmt-compute.src.main.java.com.microsoft.azure.management.compute.implementation.DisksImpl.java", "BodyUseAPI": ["com.microsoft.azure.management.compute.implementation.DiskInner.name()"], "Fixed commit": "f3f6ae48bf715d01e617ef390ef19944fd8d6563", "Url": "https://api.github.com/repos/anudeepsharma/azure-sdk-for-java", "Date": "2017-04-12T23:06:27Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.ceil(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (bytesTransferred == 0) { bytesTransferred = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6617/buggy-version/src.cws.core.transfer.Transfer.java", "BodyUseAPI": [], "Fixed commit": "6bf4ccc115d23492309ec143a4aff71bb9d5c692", "Url": "https://api.github.com/repos/malawski/cloudworkflowsimulator", "Date": "2011-11-03T18:30:20Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(timeToLive)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1178/buggy-version/dataprep-backend-common.src.main.java.org.talend.dataprep.cache.file.FileSystemContentCache.java", "BodyUseAPI": [], "Fixed commit": "9dbe040aabbdaebd7dec7268f72cbb8cc947d3a2", "Url": "https://api.github.com/repos/Talend/data-prep", "Date": "2016-09-16T15:26:14Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((updateNum) % 5000) == 1) com.elex.bigdata.llda.mahout.model.LabeledTopicModel.log.info(((termIndex + \":\") + count));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1158/buggy-version/src.main.java.com.elex.bigdata.llda.mahout.model.LabeledTopicModel.java", "BodyUseAPI": [], "Fixed commit": "1e00f344c8a7a52dda78071d788ed27928d77eff", "Url": "https://api.github.com/repos/elex-bigdata/lldaMahout", "Date": "2014-08-20T09:35:03Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (points.isEmpty()) { canvas.drawColor(getResources().getColor(R.color.rose)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6943/buggy-version/app.src.main.java.com.uw.hcde.fizzlab.trace.ui.drawing.DrawingView.java", "BodyUseAPI": [], "Fixed commit": "eab5045605ab723033be0ca50c2f222a652f6d59", "Url": "https://api.github.com/repos/ProjectTrace/Trace", "Date": "2015-02-10T06:21:33Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (middleExpression != null) { if (!(middleExpression.getType().equals(new com.miracle.astree.node.MiracleASTreeTypename(\"boolean\")))) { throw new com.miracle.exceptions.MiracleExceptionJudgeExpression(middleExpression.getType().toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3611/buggy-version/src.com.miracle.astree.node.statement.iteration.MiracleASTreeFor.java", "BodyUseAPI": [], "Fixed commit": "ac98b9e2ce2400b6e56e4b531d1d7fec2d73f1e4", "Url": "https://api.github.com/repos/Kipsora/x86-64-Java-Miracle-Compiler", "Date": "2017-03-28T13:12:00Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (props != null) { if (props.hasKey(\"initialMessageCount\")) { builder.setInitialMessageCount(props.getInt(\"initialMessageCount\")); } if (props.hasKey(\"synchronizationStrategy\")) { builder.setSynchronizationStrategy(TwilioIPMessagingClient.SynchronizationStrategy.valueOf(props.getString(\"synchronizationStrategy\"))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4401/buggy-version/android.src.main.java.com.bradbumbalough.RCTTwilioIPMessaging.RCTTwilioIPMessagingClient.java", "BodyUseAPI": ["TwilioIPMessagingClient.SynchronizationStrategy.valueOf(props.getString(\"synchronizationStrategy\"))", "com.facebook.react.bridge.ReadableMap.hasKey(java.lang.String)", "TwilioIPMessagingClient.Properties.Builder.setSynchronizationStrategy(TwilioIPMessagingClient.SynchronizationStrategy.valueOf(props.getString(\"synchronizationStrategy\")))", "TwilioIPMessagingClient.Properties.Builder.setInitialMessageCount(props.getInt(\"initialMessageCount\"))", "com.facebook.react.bridge.ReadableMap.getInt(java.lang.String)", "com.facebook.react.bridge.ReadableMap.getString(java.lang.String)", "com.facebook.react.bridge.ReadableMap.hasKey(java.lang.String)"], "Fixed commit": "8447025554ba1d3ffba8f2a8fa7425f441190aee", "Url": "https://api.github.com/repos/ccm-innovation/react-native-twilio-ip-messaging", "Date": "2016-07-05T16:26:06Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bookModelAdapter) != null) { bookModelAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2022/buggy-version/LNReader.src.com.erakk.lnreader.activity.DisplayLightNovelDetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "df348bf5cff160a37abd719b34d5415b2eac8d69", "Url": "https://api.github.com/repos/calvinaquino/LNReader-Android", "Date": "2012-11-28T01:29:27Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adapter) != null) adapter.notifyDataSetChanged();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2022/buggy-version/LNReader.src.com.erakk.lnreader.activity.DisplayTeaserListActivity.java", "BodyUseAPI": [], "Fixed commit": "df348bf5cff160a37abd719b34d5415b2eac8d69", "Url": "https://api.github.com/repos/calvinaquino/LNReader-Android", "Date": "2012-11-28T01:29:27Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adapter) != null) adapter.notifyDataSetChanged();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2022/buggy-version/LNReader.src.com.erakk.lnreader.activity.DisplayLightNovelListActivity.java", "BodyUseAPI": [], "Fixed commit": "df348bf5cff160a37abd719b34d5415b2eac8d69", "Url": "https://api.github.com/repos/calvinaquino/LNReader-Android", "Date": "2012-11-28T01:29:27Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(s.getCoordinates())) { eu.transkribus.core.model.builder.tei.TrpTeiStringBuilder.logger.error((\"Coordinates are empty on shape with ID = \" + (s.getId()))); zoneStr = \"<zone points=''\"; }else { zoneStr = (\"<zone points='\" + (getValidZonePointsString(s.getCoordinates()))) + \"'\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/245/buggy-version/src.main.java.eu.transkribus.core.model.builder.tei.TrpTeiStringBuilder.java", "BodyUseAPI": ["eu.transkribus.core.model.builder.tei.TrpTeiStringBuilder.getValidZonePointsString(s.getCoordinates())", "org.slf4j.Logger.error((\"Coordinates are empty on shape with ID = \" + (s.getId())))", "eu.transkribus.core.model.beans.pagecontent_trp.ITrpShapeType.getCoordinates()", "eu.transkribus.core.model.beans.pagecontent_trp.ITrpShapeType.getId()"], "Fixed commit": "34136fa3d44178ece03a366788f52f6020408c4c", "Url": "https://api.github.com/repos/Transkribus/TranskribusCore", "Date": "2017-08-08T07:37:22Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(coordsStr)) { eu.transkribus.core.model.builder.tei.TrpTeiStringBuilder.logger.error(\"A coords String is empty!\"); return \"0,0 0,0 0,0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/245/buggy-version/src.main.java.eu.transkribus.core.model.builder.tei.TrpTeiStringBuilder.java", "BodyUseAPI": [], "Fixed commit": "34136fa3d44178ece03a366788f52f6020408c4c", "Url": "https://api.github.com/repos/Transkribus/TranskribusCore", "Date": "2017-08-08T07:37:22Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.chen.guo.util.fetcher.AnalyzeDataSet.get_capMap()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (capMap.isEmpty()) return new double[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3110/buggy-version/play-app.app.com.chen.guo.views.ViewUtil.java", "BodyUseAPI": [], "Fixed commit": "fc74c3b08103f14c87d26dd71e03cb27e1b648dd", "Url": "https://api.github.com/repos/enjoyear/X", "Date": "2017-01-19T00:59:33Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["m_postList.get(i).getPostIndex()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (index.endsWith(\"\u697c\")) index = index.substring(0, ((index.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2781/buggy-version/src.com.athena.asm.Adapter.PostListAdapter.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "16edd6f19bf41a38b2b723e9561b2892ca064c47", "Url": "https://api.github.com/repos/zfdang/asm-android-client-for-newsmth", "Date": "2013-12-11T06:45:00Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(table.isDisposed())) table.dispose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3294/buggy-version/src.gui.org.deidentifier.arx.gui.view.impl.common.ComponentDataTable.java", "BodyUseAPI": ["org.eclipse.nebula.widgets.nattable.NatTable.dispose()"], "Fixed commit": "508ce40795c4eb061a26f51d6a96a021c78aba78", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-08-05T18:37:49Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((!(isTaskRoot())) && (getIntent().hasCategory(Intent.CATEGORY_LAUNCHER))) && ((getIntent().getAction()) != null)) && (getIntent().getAction().equals(Intent.ACTION_MAIN))) { finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4071/buggy-version/app.src.main.java.com.randomappsinc.foodbutton.Activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8ca9684ea18739405ee05859ea617c11ff5e3413", "Url": "https://api.github.com/repos/Gear61/Food-Button", "Date": "2016-05-19T00:29:26Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (collection.getName().startsWith(\".\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8738/buggy-version/src.main.java.com.zf.service.DataProviderService.java", "BodyUseAPI": [], "Fixed commit": "136a562125a92b70261a22230a29d9534742a5ae", "Url": "https://api.github.com/repos/zhangfei19841004/zmock", "Date": "2017-11-28T14:50:09Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.wilson.world.manager.CharManager.getInstance().hasStatus(SkilledStatus.NAME)) { point = point * 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3433/buggy-version/src.main.java.org.wilson.world.manager.ExpManager.java", "BodyUseAPI": [], "Fixed commit": "0145c0c46a91f47a123d157b379f773a8003735c", "Url": "https://api.github.com/repos/liumiaowilson/world", "Date": "2016-07-25T05:31:06Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (status != null) { activities = controllers.SQLCommander.queryActivities(refIndex, Activity.ID, orientationStr, numItems, direction, status); }else { activities = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8801/buggy-version/app.controllers.ActivityController.java", "BodyUseAPI": ["controllers.SQLCommander.queryActivities(java.lang.String,Activity.ID,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer)"], "Fixed commit": "0e153f0b2a71776abcd9340e04f82a2092f38988", "Url": "https://api.github.com/repos/genxium/PlayHongKongResort", "Date": "2014-10-18T19:32:42Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.persistence.Query.getResultList()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((users.size()) == 0) { u = users.get(0); }else { for (fi.pss.cleanbeach.data.User us : users) { if ((us.getOid()) == null) { u = us; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6875/buggy-version/src.main.java.fi.pss.cleanbeach.services.AuthenticationService.java", "BodyUseAPI": ["java.util.List<fi.pss.cleanbeach.data.User>.get(int)"], "Fixed commit": "0dad9366f0296694ef99bb40c3fb7d1c260bf7e1", "Url": "https://api.github.com/repos/tmattsso/CleanBeach", "Date": "2014-05-02T06:33:16Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (files != null) { for (java.io.File file : files) { myImageAdapter.add(file.getAbsolutePath()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7417/buggy-version/app.src.main.java.com.motivator.cs446.motivator.GalleryFragment.java", "BodyUseAPI": [], "Fixed commit": "1581b7db156a30a2dd9cffa331cb4674e0358099", "Url": "https://api.github.com/repos/PatrickYe/Motivator", "Date": "2015-03-30T16:34:46Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPet) == null) { switchActionBar(2); mKeyboard.type('5'); return false; }else if (mPet.isDead()) { switchActionBar(2); mKeyboard.type('6'); return false; }else if ((mPet.getHealthFloat()) <= 0.6F) { switchActionBar(2); mKeyboard.type('4'); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/9063/buggy-version/src.rotations.HunterSolver.java", "BodyUseAPI": [], "Fixed commit": "8d1efa8dc054e7711d688f3bde7fab1f5a4ad95f", "Url": "https://api.github.com/repos/TheCruxDev/BetterBotProfiles", "Date": "2017-09-24T14:14:08Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((facesEntityModel1.getMaterial()) != null) && ((facesEntityModel2.getMaterial()) == null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6761/buggy-version/src.net.drewke.tdme.engine.subsystems.object.ModelUtilitiesInternal.java", "BodyUseAPI": [], "Fixed commit": "47617f33b0bd3fd394b6daf05ca2d8444b3f7e4b", "Url": "https://api.github.com/repos/andreasdr/tdme", "Date": "2017-02-04T17:51:50Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((facesEntityModel1.getMaterial()) != null) && ((facesEntityModel2.getMaterial()) != null)) && ((facesEntityModel1.getMaterial().getId().equals(facesEntityModel2.getMaterial().getId())) == false)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6761/buggy-version/src.net.drewke.tdme.engine.subsystems.object.ModelUtilitiesInternal.java", "BodyUseAPI": [], "Fixed commit": "47617f33b0bd3fd394b6daf05ca2d8444b3f7e4b", "Url": "https://api.github.com/repos/andreasdr/tdme", "Date": "2017-02-04T17:51:50Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ivorius.reccomplex.utils.PresetRegistry<T>.defaultID()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(presetRegistry.has(defaultPreset))) throw new java.lang.IllegalStateException(java.lang.String.format(\"Default preset named '%s' not found!\", defaultPreset));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3929/buggy-version/src.main.java.ivorius.reccomplex.utils.presets.PresettedObject.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String)"], "Fixed commit": "74d9489a7d1fdd5de4a7b6e0079a5ac112aa141a", "Url": "https://api.github.com/repos/Ivorforce/RecurrentComplex", "Date": "2016-09-26T16:31:11Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value.startsWith(\"SO:\")) { filters.add(processFilter(\"so.accession\", value, true, false)); }else { filters.add(processFilter(\"so.name\", value, true, false)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/185/buggy-version/hpg-bigdata-core.src.main.java.org.opencb.hpg.bigdata.core.lib.VariantParseQuery.java", "BodyUseAPI": ["org.opencb.hpg.bigdata.core.lib.VariantParseQuery.processFilter(java.lang.String,java.lang.String,boolean,boolean)", "org.opencb.hpg.bigdata.core.lib.VariantParseQuery.add(processFilter(\"so.accession\", value, true, false))", "org.opencb.hpg.bigdata.core.lib.VariantParseQuery.add(processFilter(\"so.name\", value, true, false))", "org.opencb.hpg.bigdata.core.lib.VariantParseQuery.processFilter(java.lang.String,java.lang.String,boolean,boolean)"], "Fixed commit": "e9f059f32d245ce2fb56ddea43075dfaf1486908", "Url": "https://api.github.com/repos/opencb/hpg-bigdata", "Date": "2016-10-12T14:40:14Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((boardState[row][col]) == (-1)) { return new int[]{ row, col }; }else { io.notifyInvalidCell(); return getMove(boardState); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3699/buggy-version/src.HumanPlayer.java", "BodyUseAPI": ["HumanPlayer.getMove(int[][])"], "Fixed commit": "cf75a4f78372afd7425bbb250864409cd005eb9e", "Url": "https://api.github.com/repos/robertjlooby/JavaTicTacToe", "Date": "2013-07-17T19:34:46Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(sp.isEmpty())) { if ((sp.segments.get(0).getType()) == (org.luolamies.jgcgen.path.Path.SType.SEAM)) { sp.segments.remove(0); } if (!(sp.isEmpty())) subpaths.add(sp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/84/buggy-version/src.org.luolamies.jgcgen.path.Path.java", "BodyUseAPI": ["org.luolamies.jgcgen.path.Path.Segment.getType()", "java.util.List<org.luolamies.jgcgen.path.Path.Segment>.remove(int)", "org.luolamies.jgcgen.path.Path.isEmpty()", "java.util.List<org.luolamies.jgcgen.path.Path>.add(org.luolamies.jgcgen.path.Path)", "java.util.List<org.luolamies.jgcgen.path.Path.Segment>.get(int)"], "Fixed commit": "5184e07f32a531466a02ca011738af1f51ccc6fb", "Url": "https://api.github.com/repos/callaa/JGCGen", "Date": "2011-06-04T09:44:27Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((point) == null) throw new java.lang.NullPointerException(((type) + \" segment has no point!\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/84/buggy-version/src.org.luolamies.jgcgen.path.Path.java", "BodyUseAPI": [], "Fixed commit": "5184e07f32a531466a02ca011738af1f51ccc6fb", "Url": "https://api.github.com/repos/callaa/JGCGen", "Date": "2011-06-04T09:44:27Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((page.posts) != null) { page.posts.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7/buggy-version/src.main.java.com.willshex.blogwt.client.page.page.EditPagePage.java", "BodyUseAPI": ["page.posts.clear()"], "Fixed commit": "244d05daf4b2337bf6853b543dd55c60f64ff24b", "Url": "https://api.github.com/repos/billy1380/blogwt", "Date": "2015-07-08T11:37:13Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.crtb.measure.data.ResultDao.getMeasureResult()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (measureResult != null) { org.ksoap2.serialization.SoapObject message = com.crtb.measure.service.SoapMessageFactory.createMessage(\"getTestResultData\", resultDao.getMeasureResult()); try { com.crtb.measure.service.CrtbWebService.send(message, new com.crtb.measure.service.MsgResponseHandler(handler), com.crtb.measure.service.CrtbWebService.TRAFFIC_SERVICE_URI_POST); } catch (java.lang.Exception e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4354/buggy-version/src.com.crtb.measure.service.CrtbWebService.java", "BodyUseAPI": [], "Fixed commit": "217103af08e31cd301795bec11f2b2565b9f0ffa", "Url": "https://api.github.com/repos/dev-kit/measure", "Date": "2013-12-07T15:06:36Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (alpha < 0) { g.translate(((getHeight()) * sin), 0); }else { g.translate(0, ((getWidth()) * sin)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5690/buggy-version/src.main.java.eu.digitisation.image.Bimage.java", "BodyUseAPI": [], "Fixed commit": "31d8e3118b3a4d17a9c8707fdb4146a30bbad4e3", "Url": "https://api.github.com/repos/impactcentre/ocrevalUAtion", "Date": "2014-01-22T10:48:00Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) != (org.maximachess.jdrone.UciProcess.State.STOP)) { setState(org.maximachess.jdrone.UciProcess.State.THINKING); writeln(client.getGame().toUciString()); writeln((((((((\"go wtime \" + (client.getGame().getWhiteTime())) + \" btime \") + (client.getGame().getBlackTime())) + \" winc \") + (client.getGame().getWhiteInc())) + \" binc \") + (client.getGame().getBlackInc()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3012/buggy-version/src.main.java.org.maximachess.jdrone.UciProcess.java", "BodyUseAPI": [], "Fixed commit": "e503c107211e65a058136f426c31bcd8d9345ff1", "Url": "https://api.github.com/repos/hof/jdrone", "Date": "2015-06-16T23:27:28Z"},
{"Line": "=>846", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["opendap.bes.BES.getClient()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (oc == null) { java.lang.String msg = (((((\"FAILED to retrieve a valid OPeNDAPClient instance! \" + \"BES Prefix: \") + (getPrefix())) + \" BES NickName: \") + (getNickName())) + \" BES Host: \") + (getHost()); log.error(\"besTransaction() - {}\", msg); throw new java.io.IOException(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/843/buggy-version/src.opendap.bes.BES.java", "BodyUseAPI": [], "Fixed commit": "47f3a86339c09e44ad0d30b1a681653197a5f4b3", "Url": "https://api.github.com/repos/OPENDAP/olfs", "Date": "2015-09-12T00:08:33Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Global.SYSTEM_NAME.contains(Global.WINDOWS_SYSTEM)) { tf = ((javax.swing.JTextField) (((javax.swing.JPanel) (((javax.swing.JPanel) (((javax.swing.JPanel) (getComponent(2))).getComponent(2))).getComponent(2))).getComponent(1))); }else if (Global.SYSTEM_NAME.contains(Global.LINUX_SYSTEM)) { tf = ((javax.swing.JTextField) (((javax.swing.JPanel) (((javax.swing.JPanel) (getComponent(3))).getComponent(0))).getComponent(1))); }else { tf = ((javax.swing.JTextField) (((javax.swing.JPanel) (((javax.swing.JPanel) (getComponent(3))).getComponent(0))).getComponent(1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5343/buggy-version/red.com.xl.display.dialog.JFileChooserExt.java", "BodyUseAPI": [], "Fixed commit": "a91678e5a8010256e1f7b1ab071bec265775607e", "Url": "https://api.github.com/repos/REDetector/RED", "Date": "2015-03-17T12:55:54Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (imageKey2 != null) { imageKey = imageKey2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5875/buggy-version/no.hal.jex.collection.src.program.GameGridPane.java", "BodyUseAPI": [], "Fixed commit": "86a766419ead0294fa74f76814e5822e3dac0e35", "Url": "https://api.github.com/repos/hallvard/jexercise", "Date": "2014-03-28T11:04:27Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSourceProvider()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6653/buggy-version/library.src.main.java.com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider.java", "BodyUseAPI": [], "Fixed commit": "b64f9c4b91162191fd5928f4993c778f7196cec9", "Url": "https://api.github.com/repos/fightyz/LocationManager", "Date": "2017-09-28T14:11:20Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.api.component.ResourcePerspectives.as(java.lang.Class,org.sonar.api.batch.fs.InputFile)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (issuable == null) { org.sonar.plugins.ndepend.NDependSensor.LOG.debug((((((\"Ignoring NDepend issue on file without issuable \" + file) + \" line \") + line) + \" for rule \") + ruleKey)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3700/buggy-version/src.main.java.org.sonar.plugins.ndepend.NDependSensor.java", "BodyUseAPI": [], "Fixed commit": "a46a89e06bff5ca01c4f18b9e2f1c2acc3e16341", "Url": "https://api.github.com/repos/SonarQubeCommunity/sonar-ndepend", "Date": "2015-05-13T09:44:36Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((model.get(org.sagebionetworks.web.client.widget.entity.AttachmentsViewImpl.TOOLTIP_TEXT_KEY)) == null) { return html; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/9259/buggy-version/src.main.java.org.sagebionetworks.web.client.widget.entity.AttachmentsViewImpl.java", "BodyUseAPI": [], "Fixed commit": "9aeeb81870868af691e0902c645ea448c6c1358e", "Url": "https://api.github.com/repos/bkng/SynapseWebClient", "Date": "2012-09-26T22:35:39Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getType()) == (org.mozilla.javascript.Token.COMMA)) { jscover.instrument.ParenthesizedExpression parenthesizedExpression = new jscover.instrument.ParenthesizedExpression(); parenthesizedExpression.setExpression(node); arguments.add(parenthesizedExpression); }else arguments.add(node);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6459/buggy-version/src.main.java.jscover.instrument.BranchInstrumentor.java", "BodyUseAPI": ["jscover.instrument.ParenthesizedExpression.setExpression(jscover.instrument.AstNode)", "java.util.List<jscover.instrument.AstNode>.add(jscover.instrument.AstNode)"], "Fixed commit": "e05b2ca05cc666479b9b7a03132d2d0d9360b9aa", "Url": "https://api.github.com/repos/tntim96/JSCover", "Date": "2013-01-31T02:30:57Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInit)) { wybren_erik.hanzespel.model.InventoryModel.getInstance().addProduct(new wybren_erik.hanzespel.model.Product(wybren_erik.hanzespel.ProductEnum.ZOUT, 3)); wybren_erik.hanzespel.model.InventoryModel.getInstance().addProduct(new wybren_erik.hanzespel.model.Product(wybren_erik.hanzespel.ProductEnum.STOKVIS, 3)); wybren_erik.hanzespel.model.InventoryModel.getInstance().addProduct(new wybren_erik.hanzespel.model.Product(wybren_erik.hanzespel.ProductEnum.BONT, 3)); isInit = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3112/buggy-version/app.src.main.java.wybren_erik.hanzespel.fragments.HandelFragment.java", "BodyUseAPI": [], "Fixed commit": "d15c060b19b378f8f298f8c38ae260788dd042d2", "Url": "https://api.github.com/repos/wybrenoppedijk/Hanzespel", "Date": "2017-05-21T21:38:49Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dataList.size()) > 0) { scheduleDate.setText(dataList.get(0).get(\"date\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4080/buggy-version/app.src.main.java.com.example.adrian.leagueplayers.activity.GetScheduleTask.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "android.widget.TextView.setText(java.lang.String)", "java.util.ArrayList<java.util.Map<java.lang.String, java.lang.String>>.get(int)"], "Fixed commit": "05f05659128b252246f6aeb07670bb0d1af9196a", "Url": "https://api.github.com/repos/adrobins79/Starting5", "Date": "2015-01-24T21:49:15Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (post.getStory().isCompleted()) { getContext().startActivity(com.storymakers.apps.trailguide.FullscreenPhotoViewActivity.getIntentForFullscreenPhotoActivity(getContext(), post)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/9246/buggy-version/TrailGuide.src.com.storymakers.apps.trailguide.adapters.StoryPostAdapter.java", "BodyUseAPI": ["com.storymakers.apps.trailguide.FullscreenPhotoViewActivity.getIntentForFullscreenPhotoActivity(getContext(),com.storymakers.apps.trailguide.model.TGPost)", "getContext().startActivity(com.storymakers.apps.trailguide.FullscreenPhotoViewActivity.getIntentForFullscreenPhotoActivity(getContext(), post))"], "Fixed commit": "46ea74af048569e63aa5781a00d908565f2d8179", "Url": "https://api.github.com/repos/story-makers/AndroidProject", "Date": "2014-10-23T07:13:55Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tag.getType()) == (render.Tag.SWORD)) { Data.InfoManager.SWORDEQUIP[Data.InfoManager.SELECTED_SLOT] = ((render.InventoryTag) (tag)).getRarity(); }else if ((tag.getType()) == (render.Tag.SHIELD)) { Data.InfoManager.ARMOREQUIP[Data.InfoManager.SELECTED_SLOT] = ((render.InventoryTag) (tag)).getRarity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1140/buggy-version/src.base.ShopScreen.java", "BodyUseAPI": ["render.Tag.getType()"], "Fixed commit": "65f783527477b9df8b0b0a8f11c3804daac63dcd", "Url": "https://api.github.com/repos/5730289021-NN/KnightofPuzzle", "Date": "2015-11-28T13:03:05Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.firstinspires.ftc.teamcode.PositionDiagnostics.get_cryptobox_column()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (pictograph != (-1)) { telemetry.addData(\"Pictograph Visible!\", pictograph); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4263/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.PositionDiagnostics.java", "BodyUseAPI": ["org.firstinspires.ftc.teamcode.PositionDiagnostics.addData(java.lang.String,int)"], "Fixed commit": "14e629767fe035653d27d440b8491d702e16c582", "Url": "https://api.github.com/repos/tobortechftc/swerve", "Date": "2017-11-11T03:55:34Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Enumeration<java.net.URL>.nextElement()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (\"zip\".equals(url.getProtocol())) { url = new java.net.URL(url.toExternalForm().replace(\"zip:/\", \"jar:file:/\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4122/buggy-version/annotation-detector.src.main.java.eu.infomas.annotation.AnnotationDetector.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.net.URL.toExternalForm()"], "Fixed commit": "167a444a58008f344ef51f1da2f252c4919209c9", "Url": "https://api.github.com/repos/rmuller/infomas-asl", "Date": "2015-10-16T09:46:53Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((p) != null) p.destroy();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8510/buggy-version/robofast.src.com.robofast.gui.Gui.java", "BodyUseAPI": [], "Fixed commit": "2e5af51249f77f0752142ed61378b043bfe561eb", "Url": "https://api.github.com/repos/ilaverix/robofast", "Date": "2017-04-28T22:29:37Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((guess) == null) { android.content.Context context = getApplicationContext(); java.lang.CharSequence text = \"You need to make a guest first!\"; int duration = android.widget.Toast.LENGTH_SHORT; android.widget.Toast toast = android.widget.Toast.makeText(context, text, duration); toast.show(); }else { showAnswer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8257/buggy-version/app.src.main.java.mobiledev.unb.ca.pinpoint.Map.java", "BodyUseAPI": [], "Fixed commit": "e4090085b35b4f1c5f4e48751c8096548ea8fe73", "Url": "https://api.github.com/repos/tritania/Pinpoint", "Date": "2016-04-03T22:29:35Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEqualProjects(headerLayout)) { ProjectView.c.setOnChronometerTickListener(new android.widget.Chronometer.OnChronometerTickListener() { @java.lang.Override public void onChronometerTick(android.widget.Chronometer chronometer) { if (fontys.fhict.delta.sam.library.ExpandableLayoutItem.isClosed) { ((android.widget.TextView) (ll2.findViewById(R.id.header_timer_text))).setText(chronometer.getText()); ((android.widget.TextView) (ll2.findViewById(R.id.header_timer_text))).setVisibility(fontys.fhict.delta.sam.library.VISIBLE); fontys.fhict.delta.sam.library.ExpandableLayoutItem.lastKnownBase = chronometer.getBase(); } } }); ProjectView.c.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1830/buggy-version/Version4.app.src.main.java.fontys.fhict.delta.sam.library.ExpandableLayoutItem.java", "BodyUseAPI": [], "Fixed commit": "49d18f7d9274cab909564fce1bcda54f08b56671", "Url": "https://api.github.com/repos/DeltaSAM/Android", "Date": "2015-11-28T15:11:06Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o instanceof com.impetus.kundera.query.KunderaQuery.FilterClause) { com.impetus.kundera.query.KunderaQuery.FilterClause filterClause = ((com.impetus.kundera.query.KunderaQuery.FilterClause) (o)); if ((!(idColumn.equals(filterClause.getProperty()))) || (opsNotAllowed.contains(filterClause.getCondition()))) { result = false; break; } result = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/808/buggy-version/kundera-cassandra.src.main.java.com.impetus.client.cassandra.query.CassQuery.java", "BodyUseAPI": [], "Fixed commit": "30481172d35501e313ba889d58d42d2ac0634bd3", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2013-09-20T11:23:11Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((el.username.compareTo(username)) == 0) && ((el.password.compareTo(SHAchecksumpassword(password))) == 0)) { for (src.Logged log : logged_user) { if (((log.dev.dev_id.compareTo(dev_id)) == 0) && ((log.dev.username.compareTo(username)) == 0)) { return \"ALREADY_LOGGED\"; } } java.lang.String sha = SHAchecksumpassword(new java.lang.Integer(new java.util.Random().nextInt()).toString()); logged_user.add(new src.Logged(new src.Device(username, dev_id), sha)); return sha.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2457/buggy-version/src.UserManagerImpl.java", "BodyUseAPI": ["java.util.ArrayList<src.Logged>.add(src.Logged)", "log.dev.username.compareTo(java.lang.String)"], "Fixed commit": "841c2e48dc569252ee1dff565e8eac612842166c", "Url": "https://api.github.com/repos/m4mbr3/dropbox-like-corba", "Date": "2013-10-02T16:27:02Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (outCol < 0) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5350/buggy-version/Simplex.java", "BodyUseAPI": [], "Fixed commit": "c118177b9149e07af948a27f714b9d906fc75236", "Url": "https://api.github.com/repos/imzer0/lin-opt", "Date": "2016-03-15T13:28:16Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((showingWidgetProgress) > 0) scaleScroll.setCurrentState(lastZoom);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5491/buggy-version/src.pneumaticCraft.client.gui.GuiProgrammer.java", "BodyUseAPI": [], "Fixed commit": "15f8aa3c3e75d56615bb3035bf1d5e9a35f1e853", "Url": "https://api.github.com/repos/MineMaarten/PneumaticCraft", "Date": "2015-11-03T11:13:17Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (target instanceof ws.prova.kernel2.ProvaListPtr) { targetObject = ((ws.prova.kernel2.ProvaListPtr) (target)).getAssignedWithOffset(); }else targetObject = target;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/683/buggy-version/src.main.java.ws.prova.reference2.ProvaVariablePtrImpl.java", "BodyUseAPI": [], "Fixed commit": "f07c8bda9e240779981a3b53befa2dabab27da70", "Url": "https://api.github.com/repos/maltoe/prova", "Date": "2012-04-04T08:31:34Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((subExecutionEntity.getSubProcessInstance()) != null) { deleteProcessInstanceCascade(subExecutionEntity.getSubProcessInstance(), deleteReason, deleteHistory); if (getEventDispatcher().isEnabled()) { org.flowable.bpmn.model.FlowElement callActivityElement = subExecutionEntity.getCurrentFlowElement(); getEventDispatcher().dispatchEvent(org.flowable.engine.delegate.event.impl.FlowableEventBuilder.createActivityCancelledEvent(callActivityElement.getId(), callActivityElement.getName(), subExecutionEntity.getId(), subExecutionEntity.getProcessInstanceId(), subExecutionEntity.getProcessDefinitionId(), \"callActivity\", deleteReason)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/192/buggy-version/modules.flowable-engine.src.main.java.org.flowable.engine.impl.persistence.entity.ExecutionEntityManagerImpl.java", "BodyUseAPI": ["org.flowable.engine.impl.persistence.entity.ExecutionEntity.getCurrentFlowElement()", "org.flowable.engine.impl.persistence.entity.ExecutionEntity.getProcessDefinitionId()", "org.flowable.engine.delegate.event.impl.FlowableEventBuilder.createActivityCancelledEvent(callActivityElement.getId(),callActivityElement.getName(),subExecutionEntity.getId(),subExecutionEntity.getProcessInstanceId(),subExecutionEntity.getProcessDefinitionId(),java.lang.String,java.lang.String)", "org.flowable.engine.impl.persistence.entity.ExecutionEntity.getId()", "getEventDispatcher().dispatchEvent(org.flowable.engine.delegate.event.impl.FlowableEventBuilder.createActivityCancelledEvent(callActivityElement.getId(), callActivityElement.getName(), subExecutionEntity.getId(), subExecutionEntity.getProcessInstanceId(), subExecutionEntity.getProcessDefinitionId(), \"callActivity\", deleteReason))", "org.flowable.engine.impl.persistence.entity.ExecutionEntityManagerImpl.deleteProcessInstanceCascade(subExecutionEntity.getSubProcessInstance(),java.lang.String,boolean)", "org.flowable.engine.impl.persistence.entity.ExecutionEntity.getSubProcessInstance()", "org.flowable.engine.impl.persistence.entity.ExecutionEntity.getProcessInstanceId()"], "Fixed commit": "5e49e43212d27c39ff3bc6dadb7f3c2dc19a2163", "Url": "https://api.github.com/repos/flowable/flowable-engine", "Date": "2017-06-13T16:14:38Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.powertac.samplebroker.MarketManagerService.computeLimitPrice(int,double)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (limitPrice == null) limitPrice = meanMarketPrice;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5319/buggy-version/sample-broker.src.main.java.org.powertac.samplebroker.MarketManagerService.java", "BodyUseAPI": [], "Fixed commit": "49bddad55ce8964b5c3c681f7d3a5abb88142b44", "Url": "https://api.github.com/repos/ttblue/powertac-server", "Date": "2014-12-08T20:23:16Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((act != null) && ((act.getActionBar()) != null)) { act.getActionBar().setDisplayHomeAsUpEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/773/buggy-version/FileManager.src.org.openintents.filemanager.compatibility.HomeIconHelper.java", "BodyUseAPI": ["android.app.Activity.getActionBar()", "act.getActionBar().setDisplayHomeAsUpEnabled(boolean)"], "Fixed commit": "56acca9e2bc44f316740085a0beae13745423f6d", "Url": "https://api.github.com/repos/openintents/filemanager", "Date": "2012-11-10T11:26:43Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (word.meaning.startsWith(word.name)) { word.meaning = word.meaning.substring(((word.name.length()) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7662/buggy-version/src.main.java.org.wilson.world.manager.WordManager.java", "BodyUseAPI": ["word.meaning.substring(((word.name.length()) + 1))", "word.name.length()"], "Fixed commit": "585007c7d619f3edb2ae83f03a3bf1669b71ac78", "Url": "https://api.github.com/repos/liumiaowilson/world", "Date": "2016-08-21T05:40:30Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index < 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3086/buggy-version/idp-mpass-monitor-impl.src.main.java.fi.okm.mpass.shibboleth.monitor.BaseSequenceStepResolver.java", "BodyUseAPI": [], "Fixed commit": "6365bf3f15349b5ba4db40fd0627c84860eb7770", "Url": "https://api.github.com/repos/Digipalvelutehdas/MPASSid-proxy", "Date": "2016-10-19T10:30:00Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (orcidWorks != null) { for (org.orcid.jaxb.model.message.OrcidWork work : orcidWorks.getOrcidWork()) { worksMap.put(work.getPutCode(), work); workIds.add(work.getPutCode()); } request.getSession().setAttribute(org.orcid.frontend.web.controllers.WorkspaceController.WORKS_MAP, worksMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8600/buggy-version/orcid-web.src.main.java.org.orcid.frontend.web.controllers.WorkspaceController.java", "BodyUseAPI": ["org.orcid.jaxb.model.message.OrcidWorks.getOrcidWork()"], "Fixed commit": "2976e6e07891b05317b1d27825793298280a6903", "Url": "https://api.github.com/repos/ORCID/ORCID-Source", "Date": "2013-06-04T16:25:54Z"},
{"Line": "=>660", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.equals(authorId, api.getSelfInfo().getId())) message.setAuthor(api.getSelfInfo()); else message.setAuthor(((net.dv8tion.jda.core.entities.PrivateChannel) (chan)).getUser());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/9285/buggy-version/src.main.java.net.dv8tion.jda.core.entities.EntityBuilder.java", "BodyUseAPI": ["net.dv8tion.jda.core.entities.MessageImpl.setAuthor(api.getSelfInfo())", "net.dv8tion.jda.core.entities.JDAImpl.getSelfInfo()"], "Fixed commit": "f618bdd88f32447c750564a3289a5e3fde6de071", "Url": "https://api.github.com/repos/MinnDevelopment/JDA", "Date": "2016-10-22T22:00:33Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ail.semantics.AILAgent.selectPlan(java.util.Iterator<ail.syntax.ApplicablePlan>,ail.syntax.Intention)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((p.getPrefix().size()) == 0) { if (i.hdE().referstoGoal()) { ail.syntax.Goal g = ((ail.syntax.Goal) (i.hdE().getContent())); ail.syntax.Goal gcloned = g.clone(); gcloned.apply(i.hdU()); i.dropP(p.getN()); if ((!(i.hdE().referstoGoal())) || (((ail.syntax.Goal) (i.hdE().getContent())) != g)) { a.removeGoal(gcloned); } }else { i.dropP(p.getN()); } }else { i.dropP(p.getN()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/215/buggy-version/src.classes.ail.semantics.operationalrules.ApplyApplicablePlans.java", "BodyUseAPI": ["ail.syntax.ApplicablePlan.getN()", "ail.syntax.ApplicablePlan.getN()", "ail.syntax.ApplicablePlan.getN()", "ail.syntax.Intention.dropP(p.getN())", "ail.syntax.Intention.dropP(p.getN())", "ail.syntax.Intention.dropP(p.getN())"], "Fixed commit": "23c4531489a2d09c95fb7e3d379efd00f890b535", "Url": "https://api.github.com/repos/VerifiableAutonomy/mcapl", "Date": "2015-07-13T13:36:33Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["my.simple.keykeeper.GetImportPasswords.findViewById(R.id.get_import_button_ok_text)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (saveText != null) { saveText.setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View view) { saveButtonClicked(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8565/buggy-version/src.my.simple.keykeeper.GetImportPasswords.java", "BodyUseAPI": ["android.widget.TextView.setOnClickListener(android.view.View.OnClickListener)"], "Fixed commit": "6b144325bc2a52ea8e2a0ce1b80369d98a31161d", "Url": "https://api.github.com/repos/g-alexander/mykeykeeper", "Date": "2014-11-13T04:26:21Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["my.simple.keykeeper.GetImportPasswords.findViewById(R.id.get_import_button_cancel_text)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (cancelText != null) { cancelText.setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View view) { cancelButtonClicked(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8565/buggy-version/src.my.simple.keykeeper.GetImportPasswords.java", "BodyUseAPI": ["android.widget.TextView.setOnClickListener(android.view.View.OnClickListener)"], "Fixed commit": "6b144325bc2a52ea8e2a0ce1b80369d98a31161d", "Url": "https://api.github.com/repos/g-alexander/mykeykeeper", "Date": "2014-11-13T04:26:21Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["my.simple.keykeeper.FileDialog.findViewById(R.id.file_name_ok_text)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (selectText != null) { selectText.setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View view) { onSelect(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8565/buggy-version/src.my.simple.keykeeper.FileDialog.java", "BodyUseAPI": ["my.simple.keykeeper.TextView.setOnClickListener(android.view.View.OnClickListener)"], "Fixed commit": "6b144325bc2a52ea8e2a0ce1b80369d98a31161d", "Url": "https://api.github.com/repos/g-alexander/mykeykeeper", "Date": "2014-11-13T04:26:21Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(defaultPathFile.exists())) defaultPathFile.mkdirs();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6018/buggy-version/gui.UI.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "f11c4dd83426b8fe160686e5a3d6308a558c5f5f", "Url": "https://api.github.com/repos/zylo117/PixelPower", "Date": "2017-10-27T10:06:19Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((electricityProduction) > (dailyUsage)) return (((electricityProduction) - (dailyUsage)) * (numberOfDays)) * (feedInTariff);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5079/buggy-version/SolarPowerCalc.src.com.qut.spc.calculations.ROICalculator.java", "BodyUseAPI": [], "Fixed commit": "9ffdae280d1e8120f80ae893db1f9ed361596569", "Url": "https://api.github.com/repos/alansoto/orange", "Date": "2012-10-11T07:29:45Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((electricityProduction) < (dailyUsage)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5079/buggy-version/SolarPowerCalc.src.com.qut.spc.calculations.ROICalculator.java", "BodyUseAPI": [], "Fixed commit": "9ffdae280d1e8120f80ae893db1f9ed361596569", "Url": "https://api.github.com/repos/alansoto/orange", "Date": "2012-10-11T07:29:45Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(buildDirectory.exists())) { getLog().warn(((\"Directory \" + (buildDirectory)) + \" does not exist, ignoring\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5386/buggy-version/src.main.java.com.yamanyar.mvn.plugin.RestrictMojo.java", "BodyUseAPI": [], "Fixed commit": "286197f08d118caea09c791a64633ea7dc832693", "Url": "https://api.github.com/repos/relgames/restrict-maven-plugin", "Date": "2014-02-25T13:24:15Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isMenuNull())) { mGo.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4514/buggy-version/smash-ranks-android.app.src.main.java.com.garpr.android.fragments.PlayersFragment.java", "BodyUseAPI": [], "Fixed commit": "607ef8193153750e4736e4bce372b47fa07149e2", "Url": "https://api.github.com/repos/TheTurok/smash-ranks-android", "Date": "2015-01-01T06:55:01Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isWaiting)) { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/491/buggy-version/main.src.main.java.is.vidarottosson.glass.gallery.MenuActivity.java", "BodyUseAPI": [], "Fixed commit": "99173aed9ce0411ae7e90dbb163b59d8f9724ef0", "Url": "https://api.github.com/repos/Viddi/Glass-Gallery", "Date": "2014-02-22T22:28:43Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mMovieModel) != null) && ((mMovieModel.getNameRU()) != null)) mToolbar.setTitle(mMovieModel.getNameRU());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1340/buggy-version/app.src.main.java.kode.kinopoisk.savin.letmemovie.activity.MovieActivity.java", "BodyUseAPI": ["android.support.v7.widget.Toolbar.setTitle(mMovieModel.getNameRU())", "kode.kinopoisk.savin.letmemovie.data.models.movies.movie.IMovie.getNameRU()"], "Fixed commit": "3ccffed5b9ccc144dde9737a441e48983fa0d1a2", "Url": "https://api.github.com/repos/ilyasavin/Let-me-Movie", "Date": "2016-10-20T10:50:07Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentIdentifier == null) { if ((input.get(i)) == '%') { currentVariable = new net.mms_projects.irc.channel_bots.pbl.language_entities.Variable(); entityStart = i; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4725/buggy-version/src.net.mms_projects.irc.channel_bots.pbl.Parser.java", "BodyUseAPI": [], "Fixed commit": "1b222e6b288f6b206bf05480c293d3b543eb3773", "Url": "https://api.github.com/repos/MMS-Projects/channel-bots", "Date": "2012-12-04T20:14:16Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JFileChooser.showSaveDialog(<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (returnVal == (javax.swing.JFileChooser.APPROVE_OPTION)) { jasperReport = net.sf.jasperreports.engine.JasperCompileManager.compileReport(de.utils.ResourceService.getInstance().getRessourceJRMXL(\"TipicoGesamtUebersicht.jrxml\")); jasperPrint = net.sf.jasperreports.engine.JasperFillManager.fillReport(jasperReport, parameter, ds); net.sf.jasperreports.engine.JasperExportManager.exportReportToPdfFile(jasperPrint, fc.getSelectedFile().getAbsolutePath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8944/buggy-version/FootballApp.src.main.java.de.printing.TipicoPrintService.java", "BodyUseAPI": [], "Fixed commit": "8782819d063516213bb27b31c60b9611932ff223", "Url": "https://api.github.com/repos/frankfx/football", "Date": "2016-05-15T06:59:42Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index >= 0) { result[index] = data[i]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8955/buggy-version/src.main.java.project.emulator.framework.api.config.symbol.SymbolTable.java", "BodyUseAPI": [], "Fixed commit": "720090a382f8285930565161af144002411bd6bf", "Url": "https://api.github.com/repos/DongyuZhao/csirac", "Date": "2016-01-25T09:20:09Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < (result.length)) { result[i] = data[i]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8955/buggy-version/src.main.java.project.emulator.framework.api.config.symbol.SymbolTable.java", "BodyUseAPI": [], "Fixed commit": "720090a382f8285930565161af144002411bd6bf", "Url": "https://api.github.com/repos/DongyuZhao/csirac", "Date": "2016-01-25T09:20:09Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.util.EnumFacing.getHorizontalIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (horizontalIndex < 0) { horizontalIndex = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8549/buggy-version/common.net.teamio.taam.conveyors.ConveyorUtil.java", "BodyUseAPI": [], "Fixed commit": "fab1c700988f9cb07a992c7a6fb1e8c111bfd606", "Url": "https://api.github.com/repos/Team-IO/taam", "Date": "2016-07-28T20:54:45Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rule == null) { veriflow.VeriFlow.log.info(\"Empty rule\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3691/buggy-version/src.main.java.veriflow.VeriFlow.java", "BodyUseAPI": [], "Fixed commit": "59ce6a7801bd0a25b565af14155ffde06e42572e", "Url": "https://api.github.com/repos/Bootscat/floodlight", "Date": "2017-09-15T19:35:11Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (s.contains(\"{\")) { s = s.substring(s.indexOf(\"{\"), ((s.lastIndexOf(\"}\")) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/9059/buggy-version/SmartHome.src.com.gdgl.util.UiUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "6505b4c3527302b8e2f7248ca538fb4fb00c8673", "Url": "https://api.github.com/repos/cuiyiming007/SmartHome", "Date": "2015-03-10T03:07:11Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.gdgl.network.NetworkConnectivity.networkStatus) == (com.gdgl.network.NetworkConnectivity.LAN)) { com.gdgl.manager.CGIManager.getInstance().GetAllRoomInfo(); }else if ((com.gdgl.network.NetworkConnectivity.networkStatus) == (com.gdgl.network.NetworkConnectivity.INTERNET)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/9059/buggy-version/SmartHome.src.com.gdgl.activity.RegionsFragment.java", "BodyUseAPI": [], "Fixed commit": "6505b4c3527302b8e2f7248ca538fb4fb00c8673", "Url": "https://api.github.com/repos/cuiyiming007/SmartHome", "Date": "2015-03-10T03:07:11Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.zigvine.android.widget.GraphDialog.canScrollToFuture) { x.addLast(null); y.addLast(null); yrange.addLast(null); (curPos)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7295/buggy-version/src.com.zigvine.android.widget.GraphDialog.java", "BodyUseAPI": [], "Fixed commit": "64d990e24e1fa99d3ceee596e770d5834f3f6526", "Url": "https://api.github.com/repos/tangye1234/ZVCloud", "Date": "2013-04-16T14:39:05Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.tailers.remove(tail)) { final int endingMessageId = this.messageQueue.size(); this.endingMessageIds.put(tail, endingMessageId); return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1681/buggy-version/splitlog-core.src.main.java.com.github.triceo.splitlog.DefaultLogWatch.java", "BodyUseAPI": ["java.util.Map<com.github.triceo.splitlog.LogTailer, java.lang.Integer>.put(com.github.triceo.splitlog.LogTailer,int)"], "Fixed commit": "bd0950759a464ebb3ba4b25aeeec43caab3149b6", "Url": "https://api.github.com/repos/triceo/splitlog", "Date": "2014-02-27T14:45:50Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (enosphorous.chateau_romani.common.Reference.FORCE_DEBUG) { java.lang.System.out.println(\"[CHATEAU ROMANI] Item 'Bottled Fire' added as loot successfully.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8511/buggy-version/enosphorous.chateau_romani.handlers.LootHandler.java", "BodyUseAPI": [], "Fixed commit": "94aa150fa07c31be334cf9bbc313911245067138", "Url": "https://api.github.com/repos/Enosphorous/chateau_romani", "Date": "2013-09-11T22:48:42Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (game.soundEnabled) { com.plearning.game.BaseScene.music = m; com.plearning.game.BaseScene.music.setLooping(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/967/buggy-version/codigoFuente.PlearningGame.core.src.com.plearning.game.BaseScene.java", "BodyUseAPI": [], "Fixed commit": "ef9f54fbdb8550993a001fb078d81ca09ec605c2", "Url": "https://api.github.com/repos/elihu/p-learning", "Date": "2015-09-07T10:39:28Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (game.soundEnabled) { com.plearning.game.BaseScene.music.play(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/967/buggy-version/codigoFuente.PlearningGame.core.src.com.plearning.game.BaseScene.java", "BodyUseAPI": [], "Fixed commit": "ef9f54fbdb8550993a001fb078d81ca09ec605c2", "Url": "https://api.github.com/repos/elihu/p-learning", "Date": "2015-09-07T10:39:28Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (game.soundEnabled) { com.plearning.game.BaseScene.music.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/967/buggy-version/codigoFuente.PlearningGame.core.src.com.plearning.game.BaseScene.java", "BodyUseAPI": [], "Fixed commit": "ef9f54fbdb8550993a001fb078d81ca09ec605c2", "Url": "https://api.github.com/repos/elihu/p-learning", "Date": "2015-09-07T10:39:28Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((allRecorders) < (com.fionera.wechatdemo.extra.PullToLoadActivity.lineSize)) { listView.removeHeaderView(header); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4988/buggy-version/app.src.main.java.com.fionera.wechatdemo.extra.PullToLoadActivity.java", "BodyUseAPI": [], "Fixed commit": "c7c1f020eb2b57b6ba8e7ff1350d4a642bb06d61", "Url": "https://api.github.com/repos/FioneraGH/AndroidDemo", "Date": "2015-07-26T11:44:09Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((items.size()) < (com.fionera.wechatdemo.extra.PullToLoadActivity.lineSize)) { return items.size(); }else { return count; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4988/buggy-version/app.src.main.java.com.fionera.wechatdemo.extra.PullToLoadActivity.java", "BodyUseAPI": ["java.util.ArrayList<com.fionera.wechatdemo.bean.ChatMsgEntry>.size()"], "Fixed commit": "c7c1f020eb2b57b6ba8e7ff1350d4a642bb06d61", "Url": "https://api.github.com/repos/FioneraGH/AndroidDemo", "Date": "2015-07-26T11:44:09Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cube.storm.ui.lib.factory.ViewFactory.getModelForView(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (superClass == null) { try { return com.cube.storm.ui.quiz.view.Quiz.valueOf(viewName).getModelClass(); } catch (java.lang.IllegalArgumentException ignore) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1240/buggy-version/src.main.java.com.cube.storm.ui.quiz.lib.factory.QuizViewFactory.java", "BodyUseAPI": [], "Fixed commit": "740a7001fecbc53b3614ad1f89432900e76af428", "Url": "https://api.github.com/repos/3sidedcube/Android-LightningQuiz", "Date": "2015-01-23T15:31:33Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cube.storm.ui.lib.factory.ViewFactory.getHolderForView(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (superClass == null) { try { return com.cube.storm.ui.quiz.view.Quiz.valueOf(viewName).getHolderClass(); } catch (java.lang.IllegalArgumentException ignore) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1240/buggy-version/src.main.java.com.cube.storm.ui.quiz.lib.factory.QuizViewFactory.java", "BodyUseAPI": [], "Fixed commit": "740a7001fecbc53b3614ad1f89432900e76af428", "Url": "https://api.github.com/repos/3sidedcube/Android-LightningQuiz", "Date": "2015-01-23T15:31:33Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.InetAddress.getHostAddress()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (HOSTNAME.equals(\"127.0.0.1\")) { HOSTNAME = \"localhost\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8547/buggy-version/src.introsde.endpoint.WeatherPublisher.java", "BodyUseAPI": [], "Fixed commit": "6b58812f54d23e5cff90bc660a4159192760995d", "Url": "https://api.github.com/repos/unitn-introsde2017-final-project/final-WeatherAdapter", "Date": "2017-01-25T21:13:13Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.String.valueOf(java.lang.System.getenv(\"PORT\"))) != \"null\") { PORT = java.lang.String.valueOf(java.lang.System.getenv(\"PORT\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8547/buggy-version/src.introsde.endpoint.WeatherPublisher.java", "BodyUseAPI": [], "Fixed commit": "6b58812f54d23e5cff90bc660a4159192760995d", "Url": "https://api.github.com/repos/unitn-introsde2017-final-project/final-WeatherAdapter", "Date": "2017-01-25T21:13:13Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((updateUserInfo.getDisplayName()) != null) && (!(updateUserInfo.getDisplayName().isEmpty()))) { user.setDisplayName(updateUserInfo.getDisplayName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8508/buggy-version/DailyCookApp.src.main.java.com.vn.dailycookapp.restmodel.model.UpdateProfileModel.java", "BodyUseAPI": ["com.vn.dailycookapp.cache.user.CompactUserInfo.setDisplayName(updateUserInfo.getDisplayName())", "com.vn.dailycookapp.entity.request.UpdateUserInfo.getDisplayName()"], "Fixed commit": "21fe4b38e8861fe02d87d04abc29a50bd3652549", "Url": "https://api.github.com/repos/duyetpt/dailycook_restructe", "Date": "2015-11-25T13:39:10Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((updateUserInfo.getAvatarUrl()) != null) { user.setAvatarUrl(updateUserInfo.getAvatarUrl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8508/buggy-version/DailyCookApp.src.main.java.com.vn.dailycookapp.restmodel.model.UpdateProfileModel.java", "BodyUseAPI": ["com.vn.dailycookapp.cache.user.CompactUserInfo.setAvatarUrl(updateUserInfo.getAvatarUrl())", "com.vn.dailycookapp.entity.request.UpdateUserInfo.getAvatarUrl()"], "Fixed commit": "21fe4b38e8861fe02d87d04abc29a50bd3652549", "Url": "https://api.github.com/repos/duyetpt/dailycook_restructe", "Date": "2015-11-25T13:39:10Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (getIntent().hasExtra(com.tasteofuganda.app.RecipeActivity.INTENT_SAVED_STATE_RECIPE_SELECTED_ID_KEY)) { android.util.Log.d(com.tasteofuganda.app.RecipeActivity.TAG, (((\"intent has extra \" + (com.tasteofuganda.app.RecipeActivity.INTENT_SAVED_STATE_RECIPE_SELECTED_ID_KEY)) + \", value is \") + (getIntent().getLongExtra(com.tasteofuganda.app.RecipeActivity.INTENT_SAVED_STATE_RECIPE_SELECTED_ID_KEY, 0)))); mSelectedId = getIntent().getLongExtra(com.tasteofuganda.app.RecipeActivity.INTENT_SAVED_STATE_RECIPE_SELECTED_ID_KEY, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2610/buggy-version/app.src.main.java.com.tasteofuganda.app.RecipeActivity.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,(((\"intent has extra \" + (com.tasteofuganda.app.RecipeActivity.INTENT_SAVED_STATE_RECIPE_SELECTED_ID_KEY)) + \", value is \") + (getIntent().getLongExtra(com.tasteofuganda.app.RecipeActivity.INTENT_SAVED_STATE_RECIPE_SELECTED_ID_KEY, 0))))", "getIntent().getLongExtra(java.lang.String,int)", "getIntent().getLongExtra(java.lang.String,int)"], "Fixed commit": "acc4965470670239c35e747c5cdbd10328a519fa", "Url": "https://api.github.com/repos/atimothee/taste-of-ug", "Date": "2015-01-03T18:09:02Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(cursor.getColumnIndex(Schema.Stop.PREDICTIONS))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(android.text.TextUtils.isEmpty(segmentString))) { com.google.gson.Gson gson = new com.google.gson.Gson(); java.lang.reflect.Type nestedListType = new com.google.gson.reflect.TypeToken<java.util.List<edu.mit.mitmobile2.shuttles.model.MITShuttlePrediction>>() {}.getType(); java.util.List<edu.mit.mitmobile2.shuttles.model.MITShuttlePrediction> predictions = gson.fromJson(segmentString, nestedListType); setPredictions(predictions); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2776/buggy-version/app.src.main.java.edu.mit.mitmobile2.shuttles.model.MITShuttleStopWrapper.java", "BodyUseAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)"], "Fixed commit": "da000d0018f7d4ed8c919ff7209525e4a2b7d439", "Url": "https://api.github.com/repos/MIT-Mobile/MIT-Mobile-for-Android", "Date": "2015-03-12T18:12:23Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((key) != null) && ((value) != null)) { put(value(value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/835/buggy-version/OC1.src.x.json.JsonMapParser.java", "BodyUseAPI": [], "Fixed commit": "c2d39a0def2b7609136666a735f272358e42b518", "Url": "https://api.github.com/repos/curtcox/OysterCracker", "Date": "2015-10-06T22:56:35Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((s != null) && (s.toLowerCase().startsWith(\"#nexus\"))) { s = check.readLine(); if ((s.toLowerCase().startsWith(\"begin taxa\")) || (s.toLowerCase().startsWith(\"begin data\"))) { throw new java.io.IOException(\"Input is either a DATA or TAXA Nexus file type, please convert to Newick format. For help see: www.cs.hmc.edu/~hadas/jane/fileformats.html\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1663/buggy-version/Jane.src.edu.hmc.jane.io.NexusFileReader.java", "BodyUseAPI": [], "Fixed commit": "0be97cdfe3e7801ea0fbf4bbc705fc0eaa7b6e85", "Url": "https://api.github.com/repos/chenpekker/Jane", "Date": "2016-05-19T16:44:13Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (method == \"GET\") throw new java.lang.UnsupportedOperationException(\"Can't add data to get request\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2271/buggy-version/Dyanote.src.main.java.com.dyanote.android.utils.NetworkUtils.java", "BodyUseAPI": [], "Fixed commit": "f7e116f29d7f5bfee3cf94af9c6156f2f3efb774", "Url": "https://api.github.com/repos/MatteoNardi/android-dyanote", "Date": "2014-01-16T09:35:48Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (xx > (p2.x)) xx = p2.x;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5618/buggy-version/src.AkimaSpline.java", "BodyUseAPI": [], "Fixed commit": "3fd4d2d5a543abb4f2c7ed3305b51a40e7b239ad", "Url": "https://api.github.com/repos/apexuser/L7", "Date": "2016-06-03T05:41:18Z"},
{"Line": "=>1098", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(collectionsUtil.isEmployee(receiptHeaderToBeCancelled.getCreatedBy()))) { org.egov.infra.admin.master.entity.Department dept = departmentService.getDepartmentByName(collectionsUtil.getDepartmentForWorkFlow()); final org.egov.pims.commons.Designation desgn = designationService.getDesignationByName(collectionsUtil.getDesignationForThirdPartyUser()); position = collectionsUtil.getPositionByDeptDesgAndBoundary(dept, desgn, receiptHeaderToBeCancelled.getReceiptMisc().getBoundary()); }else { position = collectionsUtil.getPositionOfUser(receiptHeaderToBeCancelled.getCreatedBy()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7999/buggy-version/egov.egov-collection.src.main.java.org.egov.collection.service.ReceiptHeaderService.java", "BodyUseAPI": ["org.egov.collection.entity.ReceiptHeader.getCreatedBy()", "org.egov.infra.admin.master.service.DepartmentService.getDepartmentByName(collectionsUtil.getDepartmentForWorkFlow())", "org.egov.collection.entity.ReceiptHeader.getReceiptMisc()", "org.egov.collection.utils.CollectionsUtil.getPositionOfUser(receiptHeaderToBeCancelled.getCreatedBy())", "org.egov.eis.service.DesignationService.getDesignationByName(collectionsUtil.getDesignationForThirdPartyUser())", "org.egov.collection.utils.CollectionsUtil.getDesignationForThirdPartyUser()", "org.egov.collection.utils.CollectionsUtil.getPositionByDeptDesgAndBoundary(org.egov.infra.admin.master.entity.Department,org.egov.pims.commons.Designation,receiptHeaderToBeCancelled.getReceiptMisc().getBoundary())", "org.egov.collection.utils.CollectionsUtil.getDepartmentForWorkFlow()", "receiptHeaderToBeCancelled.getReceiptMisc().getBoundary()"], "Fixed commit": "e47324e9e7a72266e134e6da6fd226dcfd8d4dde", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2015-08-18T18:03:33Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((osdFinalizeVouchersResponse.getSizeInBytes()) > newFileSizeMax) { newFileSizeMax = osdFinalizeVouchersResponse.getSizeInBytes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1899/buggy-version/java.servers.src.org.xtreemfs.mrc.operations.ClearVouchersOperation.java", "BodyUseAPI": ["org.xtreemfs.pbrpc.generatedinterfaces.GlobalTypes.OSDFinalizeVouchersResponse.getSizeInBytes()"], "Fixed commit": "e53dc78ebff2a1688bcdf2798d443ba7521020a0", "Url": "https://api.github.com/repos/leusonmario/xtreemfs", "Date": "2015-08-15T19:54:29Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.IOException.getMessage()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (message == null) { org.jetbrains.android.maven.AndroidFacetImporterBase.LOG.error(e); }else { org.jetbrains.android.util.AndroidUtils.reportImportErrorToEventLog((\"I/O error: \" + message), genModuleName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8753/buggy-version/plugins.android.src.org.jetbrains.android.maven.AndroidFacetImporterBase.java", "BodyUseAPI": ["org.jetbrains.android.util.AndroidUtils.reportImportErrorToEventLog(java.lang.String,java.lang.String)"], "Fixed commit": "2b609c9c7258e83d66e6e4ddc3930b53d373e8e2", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2013-06-04T18:09:55Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (object == null) { java.lang.System.err.println(\"Create with null object\"); return cc.alcina.framework.servlet.sync.FlatDeltaPersisterResult.FlatDeltaPersisterResultType.UNMATCHED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7360/buggy-version/framework.servlet.src.cc.alcina.framework.servlet.sync.LocalDomainLocatablePersister.java", "BodyUseAPI": [], "Fixed commit": "7669097efe200e186d81af3d99d7cbc59d532edd", "Url": "https://api.github.com/repos/nevella/alcina", "Date": "2015-12-04T00:22:20Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (imgFile == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2279/buggy-version/app.src.main.java.dev.learn.movies.app.popular_movies.utils.URIBuilderUtils.java", "BodyUseAPI": [], "Fixed commit": "c4a926a0e709f97fe3884af295b359fd799bf8b4", "Url": "https://api.github.com/repos/scaffeinate/Inflix", "Date": "2017-12-24T18:16:03Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mediaFile.getThumbnailFilePath()) != null) { java.io.File f2 = new java.io.File(mediaFile.getThumbnailFilePath()); if (f2.exists()) { android.util.Log.d(\"INDEX\", (\"DELETING STORY MEDIA THUMBNAIL \" + (f2.getName()))); f2.delete(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8481/buggy-version/lib.src.main.java.scal.io.liger.model.InstanceIndexItem.java", "BodyUseAPI": ["scal.io.liger.model.MediaFile.getThumbnailFilePath()"], "Fixed commit": "7e14ea125d09a45a7f615b220684614affe64675", "Url": "https://api.github.com/repos/StoryMaker/storypath", "Date": "2015-08-08T03:54:43Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (co.rishe.graphql.GraphQuery.isPermittedType(listClass)) s += (\" \" + (field.getName())) + (formatFilters(getFilters(listClass))); else s += ((((\" \" + (field.getName())) + (formatFilters(getFilters(listClass)))) + \" { \") + (generateQueryOf(listClass))) + \" } \";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/9002/buggy-version/graphql-client.src.main.java.co.rishe.graphql.GraphQuery.java", "BodyUseAPI": ["co.rishe.graphql.GraphQuery.formatFilters(java.util.HashMap<java.lang.String, java.lang.Object>)", "co.rishe.graphql.GraphQuery.getFilters(java.lang.Class<?>)", "co.rishe.graphql.GraphQuery.generateQueryOf(java.lang.Class<?>)", "co.rishe.graphql.GraphQuery.getFilters(java.lang.Class<?>)", "co.rishe.graphql.GraphQuery.formatFilters(java.util.HashMap<java.lang.String, java.lang.Object>)"], "Fixed commit": "f1146c1812c9cff862e21a9eca14e1de4aadd4b4", "Url": "https://api.github.com/repos/k3rn3l-p4n1c/Paranoid-Android", "Date": "2016-12-18T16:15:34Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (contentTypeFirstPart.equals(\"*/*\")) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8048/buggy-version/JAppWeb.src.main.java.japp.web.dispatcher.http.HttpDispatcherHelper.java", "BodyUseAPI": [], "Fixed commit": "9ff70c8ed1bf6c5e202ae11c93a909aae20f7ad7", "Url": "https://api.github.com/repos/daviarimateia93/JApp", "Date": "2017-02-28T16:26:24Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (program == null) { this.setSpeed(this.getSpeed().setX(Constants.plantSpeed)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5242/buggy-version/src.jumpingalien.model.gameobject.Plant.java", "BodyUseAPI": [], "Fixed commit": "dc978ebd802d2e658a56c20140a117ef8b9a2208", "Url": "https://api.github.com/repos/mennovf/ogp", "Date": "2015-05-21T13:43:28Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.holodeckb2b.common.util.Utils.isNullOrEmpty(pl.getContentLocation())) log.debug(((\"No payload location provided for payload [\" + (pl.getPayloadURI())) + \"]\")); else { final java.io.File plFile = new java.io.File(pl.getContentLocation()); if ((plFile.exists()) && (plFile.delete())) { log.debug((\"Removed payload data file \" + (pl.getContentLocation()))); ((org.holodeckb2b.ebms3.persistency.entities.Payload) (pl)).setContentLocation(null); }else if (plFile.exists()) log.error(((\"Could not remove payload data file \" + (pl.getContentLocation())) + \". Remove manually\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6597/buggy-version/modules.holodeckb2b-core.src.main.java.org.holodeckb2b.ebms3.workers.PurgeOldMessagesWorker.java", "BodyUseAPI": ["org.holodeckb2b.interfaces.messagemodel.IPayload.getContentLocation()", "org.holodeckb2b.ebms3.workers.PurgeOldMessagesWorker.debug((\"Removed payload data file \" + (pl.getContentLocation())))", "org.holodeckb2b.interfaces.messagemodel.IPayload.getContentLocation()", "org.holodeckb2b.ebms3.workers.PurgeOldMessagesWorker.debug(((\"No payload location provided for payload [\" + (pl.getPayloadURI())) + \"]\"))", "org.holodeckb2b.interfaces.messagemodel.IPayload.getPayloadURI()", "org.holodeckb2b.interfaces.messagemodel.IPayload.getContentLocation()", "org.holodeckb2b.ebms3.workers.PurgeOldMessagesWorker.error(((\"Could not remove payload data file \" + (pl.getContentLocation())) + \". Remove manually\"))"], "Fixed commit": "48958ae8f0674e1b439ef1dfd496eb137a25aa92", "Url": "https://api.github.com/repos/MockerTim/Holodeck-B2B", "Date": "2017-04-09T17:44:29Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((urls != null) && ((urls.length) > 0)) && (!(urls[0].isEmpty()))) { java.lang.String urlDisplay = urls[0]; try { java.io.InputStream in = new java.net.URL(urlDisplay).openStream(); bookCover = android.graphics.BitmapFactory.decodeStream(in); } catch (java.lang.Exception e) { android.util.Log.e(\"Error\", e.getMessage()); e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3844/buggy-version/alexandria.src.main.java.it.jaschke.alexandria.services.DownloadImage.java", "BodyUseAPI": [], "Fixed commit": "081005d3b947b65235ad498cfdaa22030539cbdc", "Url": "https://api.github.com/repos/bl1b/Super-Duo", "Date": "2015-09-26T20:31:49Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.sdsmdg.harjot.MusicDNA.VisualizerView.bmp) != null) canvas.drawBitmap(com.sdsmdg.harjot.MusicDNA.VisualizerView.bmp, 0, 0, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1326/buggy-version/app.src.main.java.com.sdsmdg.harjot.MusicDNA.VisualizerView.java", "BodyUseAPI": [], "Fixed commit": "d97ae5f8034ee1b5e74340c2db01d01bd4519d9f", "Url": "https://api.github.com/repos/harjot-oberai/MusicDNA", "Date": "2016-12-28T15:26:25Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(parent.isDisposed())) && (!(parent.getDisplay().isDisposed()))) { parent.getDisplay().timerExec(org.deidentifier.arx.gui.view.impl.explore.ViewFilter.SCALE_UPDATE_INTERVAL, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4510/buggy-version/src.gui.org.deidentifier.arx.gui.view.impl.explore.ViewFilter.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Composite.getDisplay()", "parent.getDisplay().timerExec(int,org.deidentifier.arx.gui.view.impl.explore.ViewFilter.3)"], "Fixed commit": "caca3a60bf5700f5ff4c8282c3396c74def32f67", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2015-02-04T09:43:45Z"},
{"Line": "=>696", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.tokenautocomplete.TokenCompleteTextView.hasFocus())) { com.tokenautocomplete.TokenCompleteTextView.requestFocus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/128/buggy-version/library.src.main.java.com.tokenautocomplete.TokenCompleteTextView.java", "BodyUseAPI": [], "Fixed commit": "4af57d5d66fd18bbaecfc7d549c187dda96d8c92", "Url": "https://api.github.com/repos/alexcustos/TokenAutoComplete", "Date": "2017-08-15T17:19:31Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tags.contains(models.Tag.findByTitle(title)))) tags.add(models.Tag.findByTitle(title));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6953/buggy-version/app.models.Tag.java", "BodyUseAPI": ["java.util.List<models.Tag>.add(models.Tag)", "models.Tag.findByTitle(java.lang.String)"], "Fixed commit": "3a2caa7492fcbf36b8a5713252bf137a181b0f5f", "Url": "https://api.github.com/repos/werme/DAT076", "Date": "2013-09-29T16:32:22Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMultiMapFileTileSource) != null) mMultiMapFileTileSource.open();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7549/buggy-version/app.src.main.java.mobi.maptrek.maps.maptrek.MapTrekTileSource.java", "BodyUseAPI": [], "Fixed commit": "e79061499eb786a1e571ab45f9851af9de93d837", "Url": "https://api.github.com/repos/andreynovikov/trekarta", "Date": "2017-10-12T12:33:59Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((vOldUser.getNickname()) == null) || (!(vOldUser.getNickname().equals(pUser.getNickname())))) { vChange = true; vAttrMap.put(Constants.ldap_ddbPerson_Nickname, pUser.getNickname()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5953/buggy-version/src.main.java.de.fiz.ddb.aas.auxiliaryoperations.ThreadUserUpdate.java", "BodyUseAPI": ["javax.naming.directory.Attributes.put(Constants.ldap_ddbPerson_Nickname,pUser.getNickname())", "de.fiz.ddb.aas.administration.User.getNickname()"], "Fixed commit": "cf67a52782e401efaccdf210caeed7f6aabfb6f4", "Url": "https://api.github.com/repos/Deutsche-Digitale-Bibliothek/aas-LDAP4DDB", "Date": "2013-06-27T07:09:25Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!softBreak) { body.append(\"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5235/buggy-version/src.main.java.com.dumbster.smtp.transport.SmtpMessage.java", "BodyUseAPI": [], "Fixed commit": "dd83100a86cb2a53183db32c9bb512ca5ef46afd", "Url": "https://api.github.com/repos/saksham/hulaki", "Date": "2015-01-05T14:24:36Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((pattern.contains(\"H\")) || (pattern.contains(\"K\")))) { builder.parseDefaulting(java.time.temporal.ChronoField.HOUR_OF_DAY, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/760/buggy-version/src.tareas.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "e28b29c6b008267a0f4bb47c7c10140e38607093", "Url": "https://api.github.com/repos/cs2103aug2014-W09-3j/main", "Date": "2014-10-29T19:35:40Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.openelis.manager.AnalysisManagerProxy.anReleasedId.equals(analysisDO.getStatusId())) && ((analysisDO.getReleasedDate()) == null)) analysisDO.setReleasedDate(getCurrentDatetime(Datetime.YEAR, Datetime.MINUTE));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2313/buggy-version/ejb.src.org.openelis.manager.AnalysisManagerProxy.java", "BodyUseAPI": ["org.openelis.domain.AnalysisViewDO.setReleasedDate(org.openelis.gwt.common.Datetime)"], "Fixed commit": "1f710cc8df7cbaf5716fb1b7d5fde0aea002d4ee", "Url": "https://api.github.com/repos/mbielicke/OpenELIS-Iowa", "Date": "2011-03-28T14:39:32Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tree) != null) { java.lang.String[] arrayTree = new java.lang.String[tree.size()]; int i = 0; for (java.lang.String s : tree) arrayTree[i] = s; savedInstanceState.putStringArray(org.droidupnp.view.ContentDirectoryFragment.STATE_TREE, arrayTree); savedInstanceState.putString(org.droidupnp.view.ContentDirectoryFragment.STATE_CURRENT, currentID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/457/buggy-version/src.org.droidupnp.view.ContentDirectoryFragment.java", "BodyUseAPI": [], "Fixed commit": "91c67d78f222377447c42e7e406149188293880c", "Url": "https://api.github.com/repos/trishika/DroidUPnP", "Date": "2013-03-31T00:38:01Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (pageAndTitle[0].endsWith(\"/\")) { pageurl = pageAndTitle[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7898/buggy-version/common.common-core.src.main.java.dk.netarkivet.common.webinterface.SiteSection.java", "BodyUseAPI": [], "Fixed commit": "e5d71529f2d2d344ad2f91b35c77ca0d06711b36", "Url": "https://api.github.com/repos/netarchivesuite/netarchivesuite", "Date": "2017-05-05T16:30:45Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (soundings.isEmpty()) { pt.lsts.neptus.util.GuiUtils.infoMessage(getConsole(), pt.lsts.neptus.i18n.I18n.text(\"Export Bathymetry\"), pt.lsts.neptus.i18n.I18n.text(\"No soundings to export!\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4773/buggy-version/plugins-dev.s57.pt.lsts.neptus.plugins.s57.S57SoundingsExporter.java", "BodyUseAPI": [], "Fixed commit": "b336747152f3404cc90777446f8be183c88efcf1", "Url": "https://api.github.com/repos/LSTS/neptus", "Date": "2017-02-13T17:40:33Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((recentMediaNextPage.getPagination()) != null) { recentMediaNextPage = instagram.getRecentMediaNextPage(recentMediaNextPage.getPagination()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/997/buggy-version/src.edu.usc.tcors.TcorsInstagramScraper.java", "BodyUseAPI": ["org.jinstagram.entity.users.feed.MediaFeed.getPagination()", "org.jinstagram.Instagram.getRecentMediaNextPage(recentMediaNextPage.getPagination())"], "Fixed commit": "120217ca4773e4c18c45af009881188d09e98c1d", "Url": "https://api.github.com/repos/karhai/TcorsMiner", "Date": "2015-09-02T20:43:18Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((teams.size()) == 1) { teams.clear(); sidePanel.updateSidePanel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/766/buggy-version/src.MainProgram.Rescue.java", "BodyUseAPI": ["java.util.ArrayList<MainProgram.Team>.clear()"], "Fixed commit": "c970250790fac7e3934eeeab9ef8bc11e4be0b8a", "Url": "https://api.github.com/repos/nalane/FinalProject", "Date": "2014-04-24T02:58:52Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jenkinsci.plugins.serviceFabric.Shell.perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (status == false) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/98/buggy-version/src.main.java.org.jenkinsci.plugins.serviceFabric.ServiceFabricPublisher.java", "BodyUseAPI": [], "Fixed commit": "3e6a379f65f6773178d6b3ead2b7cf3fa4527c4d", "Url": "https://api.github.com/repos/jenkinsci/service-fabric-plugin", "Date": "2017-12-08T10:07:48Z"},
{"Line": "=>616", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (res == null) { com.nascenia.biyeta.utils.Utils.ShowAlert(this, \"Check Internet Connection\"); }else { try { org.json.JSONObject jsonObject = new org.json.JSONObject(res); android.util.Log.i(\"post\", (res + \" data\")); parse_data(res); } catch (org.json.JSONException e) { e.printStackTrace(); com.nascenia.biyeta.utils.Utils.ShowAlert(this, \"Check Internet Connection\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3587/buggy-version/app.src.main.java.com.nascenia.biyeta.activity.Search_Filter.java", "BodyUseAPI": ["android.util.Log.i(java.lang.String,java.lang.String)", "com.nascenia.biyeta.activity.Search_Filter.Get_Data.parse_data(java.lang.String)"], "Fixed commit": "2dc4e1b39e87020cc5f6f8da65b018b37aa196c9", "Url": "https://api.github.com/repos/Ovi-nascenia/b-ye", "Date": "2017-04-03T07:07:16Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.nascenia.biyeta.utils.Utils.isOnline(this)) new com.nascenia.biyeta.activity.Search_Filter.Get_Data().execute(); else com.nascenia.biyeta.utils.Utils.ShowAlert(this, \"Check Internet Connection\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3587/buggy-version/app.src.main.java.com.nascenia.biyeta.activity.Search_Filter.java", "BodyUseAPI": [], "Fixed commit": "2dc4e1b39e87020cc5f6f8da65b018b37aa196c9", "Url": "https://api.github.com/repos/Ovi-nascenia/b-ye", "Date": "2017-04-03T07:07:16Z"},
{"Line": "=>497", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.nascenia.biyeta.utils.Utils.isOnline(this)) new com.nascenia.biyeta.activity.Search_Filter.GetResult().execute(); else android.widget.Toast.makeText(this, \"Check Internet Connection\", Toast.LENGTH_LONG).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3587/buggy-version/app.src.main.java.com.nascenia.biyeta.activity.Search_Filter.java", "BodyUseAPI": [], "Fixed commit": "2dc4e1b39e87020cc5f6f8da65b018b37aa196c9", "Url": "https://api.github.com/repos/Ovi-nascenia/b-ye", "Date": "2017-04-03T07:07:16Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.ContentResolver.query(PulseContract.Issue.CONTENT_URI,<nulltype>,PulseContract.Issue.Constraints.BY_UNRESOLVED_STATUS,java.lang.String[],((((com.codesmore.codesmore.model.pojo.Issue.TABLE_NAME) + \".\") + (PulseContract.Issue.Columns.UPVOTES)) + \" DESC\"))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (cursor != null) { while (cursor.moveToNext()) { android.content.ContentValues values = issueConverter.convert(cursor); com.codesmore.codesmore.model.pojo.Issue issue = issueConverter.convert(values); issues.add(issue); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2929/buggy-version/app.src.main.java.com.codesmore.codesmore.integration.db.LocalDataWrapper.java", "BodyUseAPI": ["android.database.Cursor.moveToNext()", "com.codesmore.codesmore.integration.converter.Converter<com.codesmore.codesmore.model.pojo.Issue>.convert(android.database.Cursor)"], "Fixed commit": "bd0bcc8265583066cc6554cea8b7f74c2a633c9c", "Url": "https://api.github.com/repos/gabrielmarcos2001/googlehackathon", "Date": "2015-11-11T00:58:59Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) instanceof vn.asiantech.internship.ui.login.LoginActivity) { ((vn.asiantech.internship.ui.login.LoginActivity) (getActivity())).replaceFragment(vn.asiantech.internship.ui.login.InfoFragment.getInstance(), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3760/buggy-version/app.src.at-hiepphan.java.vn.asiantech.internship.ui.login.LoginFragment.java", "BodyUseAPI": [], "Fixed commit": "927575de39b7c7e8570f64215b7d143603509f07", "Url": "https://api.github.com/repos/akaj-team/intern-17k3", "Date": "2017-11-30T04:56:42Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((lastName) == null) && (firstName.isEmpty())) { return false; }else if ((firstName.isEmpty()) && (lastName.isEmpty())) { return false; }else { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6309/buggy-version/src.main.java.de.naju.adebar.model.newsletter.Subscriber.java", "BodyUseAPI": ["java.lang.String.isEmpty()"], "Fixed commit": "156958a0320d990a81792891ec3410fc0a1d97fe", "Url": "https://api.github.com/repos/NAJU-Sachsen/NAJU-Adebar", "Date": "2017-01-23T13:07:02Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name.equals(net.wandroid.mythology.bait.Bait.BAIT_GARLIC)) { return net.wandroid.mythology.bait.Bait.generateGarlic(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6346/buggy-version/src.net.wandroid.mythology.bait.Bait.java", "BodyUseAPI": [], "Fixed commit": "2ccbcd2fb1d767993300c9b580e285831ce2db0f", "Url": "https://api.github.com/repos/zabbat/myth", "Date": "2013-12-30T01:20:28Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name.equals(net.wandroid.mythology.bait.Bait.BAIT_BOTTLE_OF_WATER)) { return net.wandroid.mythology.bait.Bait.generateBottleOfWater(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6346/buggy-version/src.net.wandroid.mythology.bait.Bait.java", "BodyUseAPI": [], "Fixed commit": "2ccbcd2fb1d767993300c9b580e285831ce2db0f", "Url": "https://api.github.com/repos/zabbat/myth", "Date": "2013-12-30T01:20:28Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasSelfInDesc()) { description = replaceWithConstOld(description); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/615/buggy-version/src.main.java.uk.ac.manchester.cs.jfact.kernel.Concept.java", "BodyUseAPI": [], "Fixed commit": "63bf45c69b9997314d2a7f3a8b9ed29c956ddfcf", "Url": "https://api.github.com/repos/owlcs/jfact", "Date": "2014-06-18T21:42:57Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.teamlapen.vampirism.entity.EntityList.createEntityByName(REFERENCE.ENTITY.DRACULA_NAME,de.teamlapen.vampirism.entity.EntityDracula)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (drac == null) { de.teamlapen.vampirism.entity.Logger.w(null, \"Failed to create a new Dracula entity on death.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1014/buggy-version/src.main.java.de.teamlapen.vampirism.entity.EntityDracula.java", "BodyUseAPI": [], "Fixed commit": "0ed76ab1596ebf0932563d4e3a5b629fa90a559b", "Url": "https://api.github.com/repos/TeamLapen/Vampirism", "Date": "2015-10-27T20:28:25Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getTileEntity(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (tile != null) tile.markAsSpawner();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1014/buggy-version/src.main.java.de.teamlapen.vampirism.item.ItemTent.java", "BodyUseAPI": ["de.teamlapen.vampirism.tileEntity.TileEntityTent.markAsSpawner()"], "Fixed commit": "0ed76ab1596ebf0932563d4e3a5b629fa90a559b", "Url": "https://api.github.com/repos/TeamLapen/Vampirism", "Date": "2015-10-27T20:28:25Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index < 0) || (index >= (icons.length))) { index = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1014/buggy-version/src.main.java.de.teamlapen.vampirism.item.ItemBloodBottle.java", "BodyUseAPI": [], "Fixed commit": "0ed76ab1596ebf0932563d4e3a5b629fa90a559b", "Url": "https://api.github.com/repos/TeamLapen/Vampirism", "Date": "2015-10-27T20:28:25Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eyeseetea.malariacare.database.utils.Session.getSurveyByModule(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (survey.hasMainScore()) { float average = survey.getMainScore(); org.eyeseetea.malariacare.views.CustomTextView item = ((org.eyeseetea.malariacare.views.CustomTextView) (llLayout.findViewById(R.id.feedback_total_score))); item.setText(java.lang.String.format(\"%.1f%%\", average)); int colorId = org.eyeseetea.malariacare.layout.utils.LayoutUtils.trafficColor(average); item.setTextColor(getResources().getColor(colorId)); }else { org.eyeseetea.malariacare.views.CustomTextView item = ((org.eyeseetea.malariacare.views.CustomTextView) (llLayout.findViewById(R.id.feedback_total_score))); item.setText(java.lang.String.format(\"NaN\")); float average = 0; int colorId = org.eyeseetea.malariacare.layout.utils.LayoutUtils.trafficColor(average); item.setTextColor(getResources().getColor(colorId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1128/buggy-version/app.src.main.java.org.eyeseetea.malariacare.fragments.FeedbackFragment.java", "BodyUseAPI": ["org.eyeseetea.malariacare.database.model.Survey.getMainScore()"], "Fixed commit": "b8463724d7620a0ad7ae5232bdf0d209afed25ba", "Url": "https://api.github.com/repos/EyeSeeTea/malariapp", "Date": "2016-06-03T19:12:10Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (originalReport == null) { return createScNotFoundErrorResponse(ErrorCodes.ENTRY_NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2078/buggy-version/rest.src.main.java.eu.europa.ec.fisheries.uvms.reporting.rest.resources.ReportingResource.java", "BodyUseAPI": [], "Fixed commit": "0579bf127d91f6fc2f5a88e701e8677c30e63f0b", "Url": "https://api.github.com/repos/UnionVMS/UVMS-ReportingModule-APP", "Date": "2017-09-11T13:04:24Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.obridge.dao.TypeDao.getTypeList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((types.size()) == 0) { org.obridge.generators.EntityObjectGenerator.generateEntityObject(packageName, outputDir, \"Dummy\", new java.util.ArrayList<>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/9106/buggy-version/obridge-main.src.main.java.org.obridge.generators.EntityObjectGenerator.java", "BodyUseAPI": [], "Fixed commit": "5d54decb6d2046528d8b0bf9371e43659b4a1ba5", "Url": "https://api.github.com/repos/karsany/obridge", "Date": "2017-07-18T20:49:54Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(((matches[adj.v2()]) == (-1)) && ((adj.v2()) != wRoot))) { lineage = adj; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1557/buggy-version/Blossom.java", "BodyUseAPI": [], "Fixed commit": "614c0b8c8dae3705fd6b8505eef7ff63e8b1863e", "Url": "https://api.github.com/repos/jgoodman94/java-graph-analysis", "Date": "2016-01-04T10:18:29Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(((matches[adj.v2()]) == (-1)) && ((adj.v2()) != vRoot))) { lineage = adj; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1557/buggy-version/Blossom.java", "BodyUseAPI": [], "Fixed commit": "614c0b8c8dae3705fd6b8505eef7ff63e8b1863e", "Url": "https://api.github.com/repos/jgoodman94/java-graph-analysis", "Date": "2016-01-04T10:18:29Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lineage == null) { java.lang.System.out.println(\"NULL LINEAGE!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1557/buggy-version/Blossom.java", "BodyUseAPI": [], "Fixed commit": "614c0b8c8dae3705fd6b8505eef7ff63e8b1863e", "Url": "https://api.github.com/repos/jgoodman94/java-graph-analysis", "Date": "2016-01-04T10:18:29Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(values.contains(newValue))) { values.add(newValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7254/buggy-version/user.src.main.java.org.tessell.model.dsl.WhenIsAddBinder.java", "BodyUseAPI": ["java.util.List<V>.add(V)"], "Fixed commit": "140d7bf5a491700666a1ffdbefaa686f9c7e9627", "Url": "https://api.github.com/repos/stephenh/tessell", "Date": "2012-09-21T19:01:35Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(values.get().contains(newValue))) { values.add(newValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7254/buggy-version/user.src.main.java.org.tessell.model.dsl.WhenIsAddBinder.java", "BodyUseAPI": ["org.tessell.model.properties.ListProperty<V>.add(V)"], "Fixed commit": "140d7bf5a491700666a1ffdbefaa686f9c7e9627", "Url": "https://api.github.com/repos/stephenh/tessell", "Date": "2012-09-21T19:01:35Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (deleteScanFileOnSuccess) { cleanupInputScanFile(inputScanFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2240/buggy-version/Scan_File_Processor_Importer.src_main.org.yeastrc.spectral_storage.scan_file_processor.main.ProcessUploadedScanFileDir.java", "BodyUseAPI": [], "Fixed commit": "79286d412edfb9837417c59f4f49c77a9343ab69", "Url": "https://api.github.com/repos/yeastrc/Spectral_Storage_Service", "Date": "2017-11-26T16:19:57Z"},
{"Line": "=>994", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eu.cloudtm.wpm.logService.LogServiceAnalyzer.DEBUG) { eu.cloudtm.wpm.logService.LogServiceAnalyzer.log.debug((\"Result: \" + (result.getValue()))); eu.cloudtm.wpm.logService.LogServiceAnalyzer.log.debug(\" \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3333/buggy-version/src.eu.cloudtm.wpm.logService.LogServiceAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "3ee4b34d4f8158dcab9e8315d7f19eb55691ebec", "Url": "https://api.github.com/repos/cloudtm/wpm", "Date": "2013-06-27T10:38:32Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (img == null) throw new java.lang.Exception((((g.toString()) + \"\\n\") + (rtoscan.toString())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/343/buggy-version/src.AMBILIGHT_OPTIONS.Color_Calculator.java", "BodyUseAPI": [], "Fixed commit": "b67cf8b259e4b61c02232ddde08bc86b7d806405", "Url": "https://api.github.com/repos/uplukaszp/Ambilight", "Date": "2017-02-11T12:16:57Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((!(android.text.TextUtils.isEmpty(username))) && (!(android.text.TextUtils.isEmpty(password)))) && (!(android.text.TextUtils.isEmpty(apiRoot)))) { this.twitter = new winterwell.jtwitter.Twitter(username, password); this.twitter.setAPIRootUrl(apiRoot); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3362/buggy-version/Yamba.src.com.marakana.yamba.YambaApplication.java", "BodyUseAPI": ["winterwell.jtwitter.Twitter.setAPIRootUrl(java.lang.String)"], "Fixed commit": "b5bd28fa0920bdc257098a737d0f5e13fc859ee8", "Url": "https://api.github.com/repos/mailat/bootcamp-2012-06-18", "Date": "2012-06-21T08:17:22Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((com.marakana.yamba.YambaApplication) (getApplication())).getPrefs().getString(\"username\", null)) == null) { startActivity(new android.content.Intent(this, com.marakana.yamba.PrefsActivity.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3362/buggy-version/Yamba.src.com.marakana.yamba.StatusActivity.java", "BodyUseAPI": [], "Fixed commit": "b5bd28fa0920bdc257098a737d0f5e13fc859ee8", "Url": "https://api.github.com/repos/mailat/bootcamp-2012-06-18", "Date": "2012-06-21T08:17:22Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(((com.marakana.yamba.YambaApplication) (getApplication())).isServiceRunning())) startService(new android.content.Intent(this, com.marakana.yamba.UpdaterService.class));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3362/buggy-version/Yamba.src.com.marakana.yamba.StatusActivity.java", "BodyUseAPI": [], "Fixed commit": "b5bd28fa0920bdc257098a737d0f5e13fc859ee8", "Url": "https://api.github.com/repos/mailat/bootcamp-2012-06-18", "Date": "2012-06-21T08:17:22Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((yamba.getTwitter()) != null) timeline = yamba.getTwitter().getFriendsTimeline();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3362/buggy-version/Yamba.src.com.marakana.yamba.UpdaterService.java", "BodyUseAPI": ["yamba.getTwitter().getFriendsTimeline()", "com.marakana.yamba.YambaApplication.getTwitter()"], "Fixed commit": "b5bd28fa0920bdc257098a737d0f5e13fc859ee8", "Url": "https://api.github.com/repos/mailat/bootcamp-2012-06-18", "Date": "2012-06-21T08:17:22Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInEditMode())) { view.setVisibility(View.INVISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8419/buggy-version/library.src.main.java.com.github.rubensousa.stackview.StackView.java", "BodyUseAPI": [], "Fixed commit": "64b265311d3136d266cf6584ededbdb7d5f531cd", "Url": "https://api.github.com/repos/rubensousa/StackView", "Date": "2016-07-14T21:01:56Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInEditMode())) { android.support.v4.view.ViewCompat.animate(view).scaleX(((1 - (stackPosition * 0.05F)) < 0.0F ? 0.05F : 1 - (stackPosition * 0.05F))).translationZ(((((mSize) - 1) - stackPosition) * 10)).translationY((stackPosition * (mSpacing))).setDuration(com.github.rubensousa.stackview.StackView.ANIMATION_DURATION); }else { android.support.v4.view.ViewCompat.setScaleX(view, ((1 - (stackPosition * 0.05F)) < 0.0F ? 0.05F : 1 - (stackPosition * 0.05F))); android.support.v4.view.ViewCompat.setTranslationZ(view, ((((mSize) - 1) - stackPosition) * 10)); android.support.v4.view.ViewCompat.setTranslationY(view, (stackPosition * (mSpacing))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8419/buggy-version/library.src.main.java.com.github.rubensousa.stackview.StackView.java", "BodyUseAPI": [], "Fixed commit": "64b265311d3136d266cf6584ededbdb7d5f531cd", "Url": "https://api.github.com/repos/rubensousa/StackView", "Date": "2016-07-14T21:01:56Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position >= (mThreadListAdapter.getCount())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6671/buggy-version/hipda.src.main.java.net.jejer.hipda.ui.ThreadListFragment.java", "BodyUseAPI": [], "Fixed commit": "77d9c01c9b4dec9db77fcfc7e071b47aa3fc6aa1", "Url": "https://api.github.com/repos/GreenSkinMonster/hipda", "Date": "2015-11-23T02:53:55Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((suspiciousNode.getOrder()) == 144) { java.lang.System.currentTimeMillis(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7317/buggy-version/microbat.src.evaluation.microbat.evaluation.SimulatedMicroBat.java", "BodyUseAPI": [], "Fixed commit": "63becd2a41417d74ed14592261b2f56499f72f8b", "Url": "https://api.github.com/repos/sunjun-group/Ziyuan", "Date": "2016-04-11T14:03:11Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imageFileUri) != null) { org.qii.weiciyuan.ui.send.Intent i = new org.qii.weiciyuan.ui.send.Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE); i.putExtra(android.provider.MediaStore.EXTRA_OUTPUT, imageFileUri); startActivityForResult(i, org.qii.weiciyuan.ui.send.WriteWeiboActivity.CAMERA_RESULT); }else { org.qii.weiciyuan.ui.send.Toast.makeText(this, getString(R.string.cant_insert_album), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/9098/buggy-version/src.org.qii.weiciyuan.ui.send.WriteWeiboActivity.java", "BodyUseAPI": [], "Fixed commit": "ac2194550c44e0f9d2d678a992eb4a88be638b8b", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2013-01-03T10:38:32Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((temp.length) >= 2) { command = java.lang.String.format(\"title %s subtitle {text:\\\"%s\\\"}\", player.getName(), org.bitbucket.ucchy.fnafim.Utility.replaceColorCode(temp[1])); org.bukkit.Bukkit.dispatchCommand(sender, command); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6704/buggy-version/src.main.java.org.bitbucket.ucchy.fnafim.TitleDisplayComponent.java", "BodyUseAPI": ["org.bitbucket.ucchy.fnafim.Utility.replaceColorCode(java.lang.String)", "java.lang.String.format(java.lang.String,player.getName(),org.bitbucket.ucchy.fnafim.Utility.replaceColorCode(temp[1]))"], "Fixed commit": "36f0b34bf480a2183e1708eaed041538f583e224", "Url": "https://api.github.com/repos/ucchyocean/Five-Nights-at-Freddy-s-in-Minecraft", "Date": "2015-06-07T15:48:25Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tryEnd(en))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2189/buggy-version/src.Intelligence.AStar.java", "BodyUseAPI": [], "Fixed commit": "f0b3d2cee40ce9ce53add9c1c55e5ff0eaa86855", "Url": "https://api.github.com/repos/aapman55/WI3620TU-GROUP2", "Date": "2014-01-16T18:06:48Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (trans.isEmpty()) trans = this.notFound(key, originPro.getProperty(key));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7380/buggy-version/src.main.java.github.intellij.i10n.translator.PropertiesTranslator.java", "BodyUseAPI": [], "Fixed commit": "b975417ddedeb7097271bb75468a504eca0cd2b6", "Url": "https://api.github.com/repos/Intellij-i10n/Translator", "Date": "2017-04-01T13:29:14Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (item instanceof java.lang.CharSequence) { return item.toString(); }else if (item instanceof java.util.List) { return convertList(((java.util.List<?>) (item))); }else if (item instanceof java.util.Set) { return convertSet(((java.util.Set<?>) (item))); }else if (item instanceof java.util.Map) { return encoderReg.mapEncoder().convert(((java.util.Map<?, ?>) (item))); }else { return encoderReg.objectEncoder().convert(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4638/buggy-version/src.main.java.com.hashvoid.jsonmapper.encode.ArrayEncoder.java", "BodyUseAPI": ["java.lang.Object.toString()", "encoderReg.objectEncoder().convert(java.lang.Object)"], "Fixed commit": "366f68579ccc56652ddad37dd4756fc7fefa5689", "Url": "https://api.github.com/repos/randondiesel/jsonmapper", "Date": "2017-05-04T16:07:51Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (item instanceof java.lang.CharSequence) { return item.toString(); }else if (item instanceof java.util.List) { return encoderReg.arrayEncoder().convertList(((java.util.List<?>) (item))); }else if (item instanceof java.util.Set) { return encoderReg.arrayEncoder().convertSet(((java.util.Set<?>) (item))); }else if (item.getClass().isArray()) { return encoderReg.arrayEncoder().convertArray(((java.lang.Object[]) (item))); }else if (item instanceof java.util.Map) { return encoderReg.mapEncoder().convert(((java.util.Map<?, ?>) (item))); }else { return encoderReg.objectEncoder().convert(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4638/buggy-version/src.main.java.com.hashvoid.jsonmapper.encode.MapEncoder.java", "BodyUseAPI": ["java.lang.Object.getClass()", "java.lang.Class<? extends java.lang.Object>.isArray()", "java.lang.Object.toString()", "encoderReg.objectEncoder().convert(java.lang.Object)"], "Fixed commit": "366f68579ccc56652ddad37dd4756fc7fefa5689", "Url": "https://api.github.com/repos/randondiesel/jsonmapper", "Date": "2017-05-04T16:07:51Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fr.opensagres.xdocreport.document.docx.preprocessor.sax.MergefieldBufferedRegion.MERGEFORMAT.startsWith(mergeformat)) { fieldName = fieldName.substring(0, mergeFormatIndex).trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2352/buggy-version/document.fr.opensagres.xdocreport.document.docx.src.main.java.fr.opensagres.xdocreport.document.docx.preprocessor.sax.MergefieldBufferedRegion.java", "BodyUseAPI": [], "Fixed commit": "22cc96ffe1a2eb61c6234a0fcf63f7c2e3a16bd2", "Url": "https://api.github.com/repos/Rizen59/xdocreport", "Date": "2015-06-19T00:19:08Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (projectRulePath != null) { useProjectRule = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6918/buggy-version/src.main.java.hudson.plugins.logparser.LogParserPublisher.java", "BodyUseAPI": [], "Fixed commit": "de29b8ad605c0bd96c7f3c24c8eee6dcf4217e99", "Url": "https://api.github.com/repos/vaskrist/log-parser-plugin", "Date": "2015-09-28T19:26:19Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parsingRulesPath != null) { useProjectRule = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6918/buggy-version/src.main.java.hudson.plugins.logparser.LogParserPublisher.java", "BodyUseAPI": [], "Fixed commit": "de29b8ad605c0bd96c7f3c24c8eee6dcf4217e99", "Url": "https://api.github.com/repos/vaskrist/log-parser-plugin", "Date": "2015-09-28T19:26:19Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((java.lang.System.getProperty(\"log.allow.overwrite\")) != null) { overwrite_bkp = java.lang.System.getProperty(\"log.allow.overwrite\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6405/buggy-version/src.dr.app.beast.BeastMain.java", "BodyUseAPI": [], "Fixed commit": "b09742f0fee639a8303c356a71deb17c6eee79ee", "Url": "https://api.github.com/repos/adamallo/beast-mcmc", "Date": "2016-12-14T19:49:29Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(android.support.v4.view.ViewCompat.canScrollVertically(view, ((int) (mScrollThreshold))))) || (!(android.support.v4.view.ViewCompat.canScrollVertically(view, (-((int) (mScrollThreshold))))))) { if (!(mIsShowing)) { onShow(); mIsShowing = true; } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7055/buggy-version/src.main.java.app.ctrlyati.android.lazyquickreturn.listener.SimpleQuickReturnListener.java", "BodyUseAPI": [], "Fixed commit": "17364af7b0e5741575a8a2a440cdb8021481dafd", "Url": "https://api.github.com/repos/ctrlyati/android-lazyquickreturn", "Date": "2015-05-15T07:32:14Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.serverConnection) != null) { this.serverConnection.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6241/buggy-version/src.main.java.dungeon.ui.Client.java", "BodyUseAPI": [], "Fixed commit": "bec46b97ab3cdbe29838da442a0d079a2292e941", "Url": "https://api.github.com/repos/CQQL/dungeon-game", "Date": "2013-07-11T22:25:12Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((m.label) != null) jsonItems.add(new org.openml.webapplication.models.JsonItem(\"label\", m.label));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7353/buggy-version/Java.OpenmlWebapplication.src.org.openml.webapplication.io.Output.java", "BodyUseAPI": ["java.util.ArrayList<org.openml.webapplication.models.JsonItem>.add(org.openml.webapplication.models.JsonItem)"], "Fixed commit": "fe19daf4deebf95f3b460f83767f0c3b18a43809", "Url": "https://api.github.com/repos/openml/OpenML", "Date": "2014-03-26T03:19:54Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.noorganization.shoppinglist.model.ModelManager.getProductById(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (productToDelete == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4948/buggy-version/app.src.main.java.org.noorganization.shoppinglist.presenter.ProductPresenter.java", "BodyUseAPI": [], "Fixed commit": "918e7ee3ab99c058e05699f8fbcd782c8d6014ad", "Url": "https://api.github.com/repos/daMihe/Einkaufsliste", "Date": "2015-03-15T21:27:49Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.noorganization.shoppinglist.model.ModelManager.getProductById(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (productToEdit == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4948/buggy-version/app.src.main.java.org.noorganization.shoppinglist.presenter.ProductPresenter.java", "BodyUseAPI": [], "Fixed commit": "918e7ee3ab99c058e05699f8fbcd782c8d6014ad", "Url": "https://api.github.com/repos/daMihe/Einkaufsliste", "Date": "2015-03-15T21:27:49Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.noorganization.shoppinglist.model.ModelManager.getProductById(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (neededProduct == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4948/buggy-version/app.src.main.java.org.noorganization.shoppinglist.presenter.ProductPresenter.java", "BodyUseAPI": [], "Fixed commit": "918e7ee3ab99c058e05699f8fbcd782c8d6014ad", "Url": "https://api.github.com/repos/daMihe/Einkaufsliste", "Date": "2015-03-15T21:27:49Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jsondemo) { res.setStatus(HttpServletResponse.SC_OK); res.setContentType(\"application/json; charset=UTF-8\"); return \"{\\\"demoSite\\\":true}\"; }else if (jsonreq) { res.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR); res.setContentType(\"application/json; charset=UTF-8\"); return \"{\\\"error\\\":true}\"; }else if (dberror) { res.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR); return \"db error\"; }else { res.setStatus(HttpServletResponse.SC_MOVED_TEMPORARILY); res.setHeader(\"Location\", contextPath); return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5838/buggy-version/src.main.java.net.afnf.blog.web.GlobalControllerExceptionHandler.java", "BodyUseAPI": [], "Fixed commit": "45d1b096305f6cd5ba46d3436af68b3120289a03", "Url": "https://api.github.com/repos/af-not-found/blog-java2", "Date": "2015-05-23T11:32:04Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getTags().isEmpty())) { builder.append(\" Tags: \"); getTags().forEach(builder::append); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1624/buggy-version/src.main.java.seedu.address.model.person.ReadOnlyPerson.java", "BodyUseAPI": [], "Fixed commit": "3634dc10236382020fe66a8fbeb12d2d6b9f3083", "Url": "https://api.github.com/repos/EskayYew/main", "Date": "2017-11-11T17:30:26Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(\"\".equals(getEmail().value))) { builder.append(\" Email: \").append(getEmail()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1624/buggy-version/src.main.java.seedu.address.model.person.ReadOnlyPerson.java", "BodyUseAPI": [], "Fixed commit": "3634dc10236382020fe66a8fbeb12d2d6b9f3083", "Url": "https://api.github.com/repos/EskayYew/main", "Date": "2017-11-11T17:30:26Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.motechproject.server.svc.RegistrarBean.getEncounters(org.openmrs.Patient,MotechConstants.ENCOUNTER_TYPE_PATIENTREGVISIT,patient.getBirthdate())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((encounters == null) || (encounters.isEmpty())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/9218/buggy-version/motech-server-core.src.main.java.org.motechproject.server.service.impl.RegistrationRequirement.java", "BodyUseAPI": [], "Fixed commit": "86d9d64fee1c3c14b05e0f834843083ba301506e", "Url": "https://api.github.com/repos/motech/MOTECH-Ghana", "Date": "2011-06-02T05:57:12Z"},
{"Line": "=>1071", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((so.getProduct().getWarrantyExpire()) != null) { docForm.setWarrantyExpire(sdf.format(so.getProduct().getWarrantyExpire())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4949/buggy-version/src.main.java.com.twobytes.repair.controller.ServiceOrderController.java", "BodyUseAPI": ["so.getProduct().getWarrantyExpire()", "com.twobytes.model.ServiceOrder.getProduct()", "com.twobytes.repair.form.ServiceOrderDocForm.setWarrantyExpire(java.lang.String)", "java.text.SimpleDateFormat.format(so.getProduct().getWarrantyExpire())"], "Fixed commit": "b149e5199a23b41e5fcee372cad7e8457dc0aec4", "Url": "https://api.github.com/repos/zeazon/Computer-service-center", "Date": "2011-11-02T11:04:00Z"},
{"Line": "=>1068", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((so.getProduct().getWarrantyDate()) != null) { docForm.setWarrantyDate(sdf.format(so.getProduct().getWarrantyDate())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4949/buggy-version/src.main.java.com.twobytes.repair.controller.ServiceOrderController.java", "BodyUseAPI": ["java.text.SimpleDateFormat.format(so.getProduct().getWarrantyDate())", "com.twobytes.model.ServiceOrder.getProduct()", "com.twobytes.repair.form.ServiceOrderDocForm.setWarrantyDate(java.lang.String)", "so.getProduct().getWarrantyDate()"], "Fixed commit": "b149e5199a23b41e5fcee372cad7e8457dc0aec4", "Url": "https://api.github.com/repos/zeazon/Computer-service-center", "Date": "2011-11-02T11:04:00Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((c1 == null) ^ (c2 == null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3502/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.util.ui.colourpicker.ColourPickerUtil.java", "BodyUseAPI": [], "Fixed commit": "d690da3296166075598259273dd2dcf41dc77439", "Url": "https://api.github.com/repos/snoopycrimecop/openmicroscopy", "Date": "2017-06-30T09:33:31Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.openmicroscopy.shoola.util.CommonsLangUtils.isNotEmpty(model.getLUT())) fireChangeEvent(PaintPotUI.LUT_PROPERTY); else fireChangeEvent(PaintPotUI.COLOUR_CHANGED_PROPERTY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3502/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.util.ui.colourpicker.RGBControl.java", "BodyUseAPI": [], "Fixed commit": "d690da3296166075598259273dd2dcf41dc77439", "Url": "https://api.github.com/repos/snoopycrimecop/openmicroscopy", "Date": "2017-06-30T09:33:31Z"},
{"Line": "=>1859", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(label.isEmpty())) JavaTacticalRenderer.Modifier2.AddIntegralAreaModifier(tg, label, JavaTacticalRenderer.Modifier2.aboveMiddle, 0, pt0, pt1, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5627/buggy-version/core.JavaLineArray.src.main.java.JavaTacticalRenderer.Modifier2.java", "BodyUseAPI": ["JavaTacticalRenderer.Modifier2.AddIntegralAreaModifier(JavaTacticalRenderer.TGLight,java.lang.String,int,int,JavaLineArray.POINT2,JavaLineArray.POINT2,boolean)"], "Fixed commit": "2d0cd430eb3c880345305a5e57a3d235b8cb339b", "Url": "https://api.github.com/repos/missioncommand/mil-sym-java", "Date": "2016-06-14T22:24:50Z"},
{"Line": "=>1826", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((label.isEmpty()) && (last.equalsIgnoreCase(eny))) last = label;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5627/buggy-version/core.JavaLineArray.src.main.java.JavaTacticalRenderer.Modifier2.java", "BodyUseAPI": [], "Fixed commit": "2d0cd430eb3c880345305a5e57a3d235b8cb339b", "Url": "https://api.github.com/repos/missioncommand/mil-sym-java", "Date": "2016-06-14T22:24:50Z"},
{"Line": "=>1864", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(eny.isEmpty())) JavaTacticalRenderer.Modifier2.AddIntegralAreaModifier(tg, eny, JavaTacticalRenderer.Modifier2.aboveMiddle, 0, pt0, pt1, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5627/buggy-version/core.JavaLineArray.src.main.java.JavaTacticalRenderer.Modifier2.java", "BodyUseAPI": ["JavaTacticalRenderer.Modifier2.AddIntegralAreaModifier(JavaTacticalRenderer.TGLight,java.lang.String,int,int,JavaLineArray.POINT2,JavaLineArray.POINT2,boolean)"], "Fixed commit": "2d0cd430eb3c880345305a5e57a3d235b8cb339b", "Url": "https://api.github.com/repos/missioncommand/mil-sym-java", "Date": "2016-06-14T22:24:50Z"},
{"Line": "=>1852", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((label.isEmpty()) && (last.equalsIgnoreCase(eny))) last = label;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5627/buggy-version/core.JavaLineArray.src.main.java.JavaTacticalRenderer.Modifier2.java", "BodyUseAPI": [], "Fixed commit": "2d0cd430eb3c880345305a5e57a3d235b8cb339b", "Url": "https://api.github.com/repos/missioncommand/mil-sym-java", "Date": "2016-06-14T22:24:50Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (table.isEditing()) { table.getCellEditor().stopCellEditing(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2656/buggy-version/RequirementsManagement.src.edu.wpi.cs.wpisuitetng.modules.requirementsmanagement.gui.ListRequirementsPanel.java", "BodyUseAPI": ["javax.swing.table.TableCellEditor.stopCellEditing()", "javax.swing.JTable.getCellEditor()"], "Fixed commit": "8d2cfc5dbfef359fd488bf5c4ced9357a0e207d1", "Url": "https://api.github.com/repos/alexhenning/wpi-suite-tng", "Date": "2013-04-05T01:34:34Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (clz.getSimpleName().equals(applicationName)) { return ((jazmin.core.app.Application) (clz.newInstance())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/289/buggy-version/JazminServer.src.jazmin.core.app.ApplicationLoader.java", "BodyUseAPI": ["java.lang.Class<?>.newInstance()"], "Fixed commit": "161813a7725fda159d671b643397f1e50b2a8462", "Url": "https://api.github.com/repos/guooscar/JazminServer", "Date": "2016-06-11T07:18:31Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (clz.isAssignableFrom(jazmin.core.app.Application.class)) { return ((jazmin.core.app.Application) (clz.newInstance())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/289/buggy-version/JazminServer.src.jazmin.core.app.ApplicationLoader.java", "BodyUseAPI": ["java.lang.Class<?>.newInstance()"], "Fixed commit": "161813a7725fda159d671b643397f1e50b2a8462", "Url": "https://api.github.com/repos/guooscar/JazminServer", "Date": "2016-06-11T07:18:31Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (runs) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5903/buggy-version/src.main.java.com.mugarov.qancellor.control.StatusWatcher.java", "BodyUseAPI": [], "Fixed commit": "554be610cbffd728c1ce9f6d5a48c97840a81fda", "Url": "https://api.github.com/repos/MarkUgarov/Qancellor", "Date": "2016-06-10T10:04:18Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (touchPointWidth < dp4) { touchPointWidth = dp4; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2978/buggy-version/connectpattern.src.main.java.com.bcgdv.asia.lib.connectpattern.ConnectPatternView.java", "BodyUseAPI": [], "Fixed commit": "ffa00846948dacfe1eff396d5b04a339fc9e348e", "Url": "https://api.github.com/repos/BCGDV-ASIA/android-widget-connectpattern", "Date": "2017-02-14T00:43:36Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dataSnapshot.child(\"groups\").child(name).getValue(com.google.firebase.database.GenericTypeIndicator<java.util.HashMap<java.lang.String, java.lang.String>>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (groupMembers != null) { for (java.lang.String member : groupMembers.values()) { com.google.firebase.database.GenericTypeIndicator<java.util.HashMap<java.lang.String, java.lang.String>> t2 = new com.google.firebase.database.GenericTypeIndicator<java.util.HashMap<java.lang.String, java.lang.String>>() {}; java.util.HashMap<java.lang.String, java.lang.String> userGroups = dataSnapshot.child(\"users\").child(member).child(\"groups\").getValue(t2); while (userGroups.values().remove(name)); db.child(\"users\").child(member).child(\"groups\").setValue(userGroups); } db.child(\"groups\").child(name).removeValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/372/buggy-version/Implementation.Tempo.app.src.main.java.com.tempo.Presenter.DatabaseAccess.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.values()"], "Fixed commit": "e73f33a88448cfa3e510da51864e278c5e85354d", "Url": "https://api.github.com/repos/yengkerng/Tempo", "Date": "2017-03-13T23:33:44Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MAX_ITERATIONS) > 0) n_phase1_iterations_left = ((int) ((phase1_ratio) * (MAX_ITERATIONS)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4232/buggy-version/src.ai.mcts.naivemcts.TwoPhaseNaiveMCTS.java", "BodyUseAPI": [], "Fixed commit": "2d35f702782612ec8f8b2da8f9afb75e32f2353d", "Url": "https://api.github.com/repos/santiontanon/microrts", "Date": "2015-05-12T02:57:12Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MAX_TIME) > 0) n_phase1_milliseconds_left = ((int) ((phase1_ratio) * (MAX_TIME)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4232/buggy-version/src.ai.mcts.naivemcts.TwoPhaseNaiveMCTS.java", "BodyUseAPI": [], "Fixed commit": "2d35f702782612ec8f8b2da8f9afb75e32f2353d", "Url": "https://api.github.com/repos/santiontanon/microrts", "Date": "2015-05-12T02:57:12Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.giambi.DatePickerDialogFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (b != null) { hiddeSecondDate = b.getBoolean(\"hiddeSecondDate\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3274/buggy-version/src.com.example.giambi.DatePickerDialogFragment.java", "BodyUseAPI": ["android.os.Bundle.getBoolean(java.lang.String)"], "Fixed commit": "8308019fe34abd1e6c9c7f5a80d8d92459fb5dad", "Url": "https://api.github.com/repos/gallonp/GiambiAndroid", "Date": "2014-04-02T22:56:30Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((skills.size()) > (index)) { next = skills.get(index); }else { sender.send(new in.jaaga.learning.api.ChatItem(in.jaaga.learning.bots.skillbot.StringUtil.allLevelsComplete(), in.jaaga.learning.api.ChatItem.NO_RESPONSE)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8356/buggy-version/app.src.main.java.in.jaaga.learning.bots.skillbot.Mission.java", "BodyUseAPI": ["java.util.ArrayList<in.jaaga.learning.bots.skillbot.Skill>.get(int)"], "Fixed commit": "0ce7b25627f760993939c5b4f3059d8649f840e9", "Url": "https://api.github.com/repos/jaagameister/learning", "Date": "2016-12-19T11:02:51Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mission.getPrompt()) != null) { sender.send(mission.getPrompt()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8356/buggy-version/app.src.main.java.in.jaaga.learning.bots.skillbot.MathBot.java", "BodyUseAPI": ["in.jaaga.learning.bots.skillbot.Mission.getPrompt()", "in.jaaga.learning.bots.skillbot.MathBot.send(mission.getPrompt())"], "Fixed commit": "0ce7b25627f760993939c5b4f3059d8649f840e9", "Url": "https://api.github.com/repos/jaagameister/learning", "Date": "2016-12-19T11:02:51Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((owner) != null) { playerSet.remove(owner); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/283/buggy-version/com.blevinstein.xade.City.java", "BodyUseAPI": [], "Fixed commit": "7ee51a3314ef5453cc99447bb6bfd9b0f5226f14", "Url": "https://api.github.com/repos/blevinstein/GameAI", "Date": "2014-10-27T02:59:10Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.time.Instant.class.equals(type)) { value = java.time.Instant.parse(fieldValue); }else if (java.math.BigDecimal.class.equals(type)) { value = new java.math.BigDecimal(java.lang.Double.parseDouble(fieldValue)); }else { value = fieldValue.replaceAll(\"&amp\", \"&\").replaceAll(\"&semi\", \";\").replaceAll(\"&eq\", \"=\").replaceAll(\"&lt\", \"<\").replaceAll(\"&gt\", \">\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1618/buggy-version/src.main.java.no.java.moosehead.eventstore.utils.ClassSerializer.java", "BodyUseAPI": ["java.lang.Class.equals(java.lang.Class<?>)"], "Fixed commit": "152a05ec6175eaa1e49424871378cee811328623", "Url": "https://api.github.com/repos/javaBin/moosehead", "Date": "2015-07-12T09:02:23Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.alan.utils.PreferenceUtil.getInt(Const.COIN_SIZE, 2000)) < (com.example.alan.beans.Const.COIN_TAKE_TIP)) { android.widget.Toast.makeText(this, \"\u91d1\u5e01\u4e0d\u8db3\", Toast.LENGTH_LONG).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6984/buggy-version/app.src.main.java.com.example.alan.myapplication.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8ef3b96274f8ecb53988b61a272451a2f4f67c92", "Url": "https://api.github.com/repos/foxalan/Noc", "Date": "2017-12-07T00:27:44Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["repositoryContainer.getCurationRepository().findOne(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (curation != null) { response = org.springframework.http.ResponseEntity.ok(curation.getHaplotypeFrequencyData().toSwaggerObject()); }else { response = new org.springframework.http.ResponseEntity(org.springframework.http.HttpStatus.NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/500/buggy-version/src.main.java.org.nmdp.hfcus.controller.HFCurationApiController.java", "BodyUseAPI": ["org.springframework.http.ResponseEntity.ok(curation.getHaplotypeFrequencyData().toSwaggerObject())", "curation.getHaplotypeFrequencyData().toSwaggerObject()", "org.nmdp.hfcus.model.HFCuration.getHaplotypeFrequencyData()"], "Fixed commit": "d96cd48dbf9c18c0f09322411e4aef8e1591b73d", "Url": "https://api.github.com/repos/sauter/service-haplotype-frequency-curation", "Date": "2017-11-13T11:31:23Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.uwm.myapplication.backend.OfyService.ofy().load().type(com.example.uwm.myapplication.backend.models.ProfileModel.class).filter(\"regId\", profile.getRegId()).first().now()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (profRec != null) com.example.uwm.myapplication.backend.OfyService.ofy().delete().entity(profRec);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4212/buggy-version/backend.src.main.java.com.example.uwm.myapplication.backend.ServerBase.java", "BodyUseAPI": ["com.example.uwm.myapplication.backend.OfyService.ofy().delete().entity(com.example.uwm.myapplication.backend.models.ProfileModel)"], "Fixed commit": "ba0875ae923e2207e365327998ceab79388c5af2", "Url": "https://api.github.com/repos/Phunkenstein/votair", "Date": "2016-04-18T15:25:36Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (userEmail == null) { userDevice = userInfoService.findUserDeviceByUuid(uuid); userEmail = userDevice.getUserEmail(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5824/buggy-version/webapp.src.main.java.com.artigile.howismyphonedoing.server.service.WebAppMessageReceiver.java", "BodyUseAPI": [], "Fixed commit": "2cdcf8351d352628662021f7b75d443f0bc19595", "Url": "https://api.github.com/repos/ioanbsu/hosismyphonedoing", "Date": "2013-07-17T01:53:23Z"},
{"Line": "=>511", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((io.evercam.androidapp.dto.AppData.defaultUser) != null) { java.lang.String modelName = java.lang.String.valueOf(input); java.lang.String message = ((\"This is a camera: \" + (device.toString())) + \" \\n\\nCamera model name: \") + modelName; io.evercam.androidapp.feedback.IntercomSendMessageTask.launch(context, AppData.defaultUser.getUsername(), message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4821/buggy-version/evercamPlay.src.main.java.io.evercam.androidapp.custom.CustomedDialog.java", "BodyUseAPI": [], "Fixed commit": "8bfd1238757390a28059c58313886e50c75f9ffc", "Url": "https://api.github.com/repos/evercam/evercam-android", "Date": "2015-12-14T11:03:01Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((zahlenwoerter.Zahlenwort.getDigitAt(x, 1)) != 0) { if ((zahlenwoerter.Zahlenwort.getDigitAt(x, 10)) == 0) { ret += \" \"; }else { ret += \"-\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6770/buggy-version/zahlenwoerter.ZahlenwortEnglisch.java", "BodyUseAPI": ["zahlenwoerter.Zahlenwort.getDigitAt(zahlenwoerter.ZahlenwortEnglisch,int)"], "Fixed commit": "32291f63f38eaa5d606d248ba4686379b124290c", "Url": "https://api.github.com/repos/CedricHanebaum/JavaHa09", "Date": "2013-12-09T07:45:53Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (channel.equals(\"##Ocelotworks\")) { (com.unacceptableuse.unacceptablebot.UnacceptableBot.messageCount)++; if ((com.unacceptableuse.unacceptablebot.UnacceptableBot.messageCount) > 100) { com.unacceptableuse.unacceptablebot.UnacceptableBot.updateTopic(); (com.unacceptableuse.unacceptablebot.UnacceptableBot.currentTopic)++; com.unacceptableuse.unacceptablebot.UnacceptableBot.messageCount = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5978/buggy-version/src.com.unacceptableuse.unacceptablebot.UnacceptableBot.java", "BodyUseAPI": [], "Fixed commit": "18f310085678a3ada656f90ef26300ee1e0a9ed1", "Url": "https://api.github.com/repos/Ocelotworks/UnacceptableBOT2", "Date": "2015-01-29T17:38:11Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.linagora.linshare.core.domain.entities.MimeType.getExtensions()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (extension.equals(\".jpg\")) { dto.addExtensions(\"jpeg\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6215/buggy-version/src.main.java.org.linagora.linshare.core.facade.webservice.uploadrequest.impl.UploadRequestUrlFacadeImpl.java", "BodyUseAPI": [], "Fixed commit": "2bec38c90e9f293d0d4ec08e3ac61db0a8675f42", "Url": "https://api.github.com/repos/linagora/linshare-core", "Date": "2015-08-27T12:55:15Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wira.pmgt.client.ui.period.save.PeriodSaveView.getPeriod()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (period.overlaps(dto)) { isValid = false; issues.addError(((\"This period overlaps period '\" + (dto.getDescription())) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7426/buggy-version/src.com.wira.pmgt.client.ui.period.save.PeriodSaveView.java", "BodyUseAPI": ["com.wira.pmgt.shared.model.program.PeriodDTO.getDescription()", "com.wira.pmgt.client.ui.component.IssuesPanel.addError(((\"This period overlaps period '\" + (dto.getDescription())) + \"'\"))"], "Fixed commit": "4c6b5963b98f9237208fdb99458902e4b5b2f20b", "Url": "https://api.github.com/repos/duggankimani/IConserv", "Date": "2014-08-04T13:35:16Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((error.networkResponse) != null) { response.append((\"Response code: \" + (error.networkResponse.statusCode))); }else { response.append(\"Server is unreachable.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6948/buggy-version/android_client.ChitChat.app.src.main.java.com.moc.chitchat.UserResponseValidator.java", "BodyUseAPI": ["java.lang.StringBuilder.append((\"Response code: \" + (error.networkResponse.statusCode)))"], "Fixed commit": "b0f8795e0503553803182ded0f38e680331b8ea5", "Url": "https://api.github.com/repos/MonarchsofCoding/chitchat", "Date": "2017-02-11T16:42:43Z"},
{"Line": "=>527", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.ui.IWorkbenchPage.findViewReference(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((partRef.isFastView()) || ((org.eclipse.ui.IWorkbenchPage.STATE_MINIMIZED) == (page.getPartState(partRef)))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/50/buggy-version/org.eclipse.debug.ui.ui.org.eclipse.debug.internal.ui.views.ViewContextService.java", "BodyUseAPI": [], "Fixed commit": "6da59e331257660033419e866d0217adece57191", "Url": "https://api.github.com/repos/eclipse/eclipse.platform.debug", "Date": "2014-10-08T10:16:37Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == roundingMode) { roundingMode = java.math.RoundingMode.HALF_UP; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6916/buggy-version/hutool-core.src.main.java.com.PATHoleilu.hutool.util.NumberUtil.java", "BodyUseAPI": [], "Fixed commit": "37818763a3ebafcdef9a4e371ae42e10d261ffb9", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2017-12-03T08:55:23Z"},
{"Line": "=>481", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (scale < 0) { scale = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6916/buggy-version/hutool-core.src.main.java.com.PATHoleilu.hutool.util.NumberUtil.java", "BodyUseAPI": [], "Fixed commit": "37818763a3ebafcdef9a4e371ae42e10d261ffb9", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2017-12-03T08:55:23Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getThread().hasBeenRunningAtLeastOnce())) initializeGameObjects();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6270/buggy-version/GameLib.src.de.jgroehl.api.AbstractGamePanel.java", "BodyUseAPI": [], "Fixed commit": "c935d0115d4ca00a54532d77ac1957d9f075d3d1", "Url": "https://api.github.com/repos/Asteromania/Asteromania", "Date": "2014-11-10T18:57:48Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.outputStream) != null) { final java.io.OutputStream outputStream = this.outputStream; updateWriter(outputStream, encoding); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8383/buggy-version/src.main.java.org.jboss.logmanager.handlers.OutputStreamHandler.java", "BodyUseAPI": [], "Fixed commit": "5e2e6b18a70d7e90abc668923b718b8463a43d48", "Url": "https://api.github.com/repos/jamezp/jboss-logmanager", "Date": "2013-08-09T09:27:45Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Integer.class) == (StudentGui.tblData.getModel().getValueAt(StudentGui.tblData.convertRowIndexToModel(i), j).getClass())) write.write(((int) (StudentGui.tblData.getModel().getValueAt(StudentGui.tblData.convertRowIndexToModel(i), j)))); else if ((java.lang.Double.class) == (StudentGui.tblData.getModel().getValueAt(StudentGui.tblData.convertRowIndexToModel(i), j).getClass())) write.write(java.lang.Double.toString(((double) (StudentGui.tblData.getModel().getValueAt(StudentGui.tblData.convertRowIndexToModel(i), j))))); else write.write(((java.lang.String) (StudentGui.tblData.getModel().getValueAt(StudentGui.tblData.convertRowIndexToModel(i), j))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7038/buggy-version/FileMenuHandler.java", "BodyUseAPI": ["java.io.FileWriter.write(((java.lang.String) (StudentGui.tblData.getModel().getValueAt(StudentGui.tblData.convertRowIndexToModel(i), j))))", "StudentGui.tblData.getModel().getValueAt(StudentGui.tblData.convertRowIndexToModel(i), j).getClass()", "StudentGui.tblData.getModel().getValueAt(StudentGui.tblData.convertRowIndexToModel(i),int)", "StudentGui.tblData.convertRowIndexToModel(int)", "java.io.FileWriter.write(((int) (StudentGui.tblData.getModel().getValueAt(StudentGui.tblData.convertRowIndexToModel(i), j))))", "StudentGui.tblData.getModel().getValueAt(StudentGui.tblData.convertRowIndexToModel(i),int)", "StudentGui.tblData.getModel().getValueAt(StudentGui.tblData.convertRowIndexToModel(i),int)", "java.io.FileWriter.write(java.lang.String)", "StudentGui.tblData.convertRowIndexToModel(int)", "StudentGui.tblData.convertRowIndexToModel(int)", "StudentGui.tblData.getModel().getValueAt(StudentGui.tblData.convertRowIndexToModel(i),int)", "StudentGui.tblData.convertRowIndexToModel(int)", "java.lang.Double.toString(((double) (StudentGui.tblData.getModel().getValueAt(StudentGui.tblData.convertRowIndexToModel(i), j))))"], "Fixed commit": "d5eceb190d78808fc296774a44c27e3a52b0ad1c", "Url": "https://api.github.com/repos/craynaar/StudentGUI", "Date": "2016-05-12T20:50:18Z"},
{"Line": "=>615", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (all.equals(\"\")) return \"No found CRN's\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8050/buggy-version/cucumber.implementation.StudentCourseManager.java", "BodyUseAPI": [], "Fixed commit": "2644d0eb5a71ab449e4835748e71a19c141e4226", "Url": "https://api.github.com/repos/nfs13a/16F_SE_Prereq_suppository", "Date": "2016-10-14T18:02:27Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (osDescription.startsWith(\"Ubuntu\")) return org.jclouds.compute.domain.OsFamily.LINUX;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5180/buggy-version/sandbox-apis.virtualbox.src.main.java.org.jclouds.virtualbox.functions.IMachineToImage.java", "BodyUseAPI": [], "Fixed commit": "53b652cafe1df193d67d3ecccc6bc3e0185fd955", "Url": "https://api.github.com/repos/mattstep/jclouds", "Date": "2011-10-21T21:47:43Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cc.isotopestudio.cscraft.element.GameItems.getExitItem().equals(event.getItem())) { room.exit(player); player.sendMessage(cc.isotopestudio.cscraft.util.S.toPrefixGreen(\"\ufffd\u02f3\ufffd\ufffd\ufffd\ufffd\ufffd\")); }else if (cc.isotopestudio.cscraft.element.GameItems.getTeam1Item().equals(event.getItem())) { if (room.getTeamAplayer().contains(player)) { player.sendMessage((((cc.isotopestudio.cscraft.util.S.toPrefixRed(\"\ufffd\ufffd\ufffd\u047e\ufffd\ufffd\ufffd\")) + (cc.isotopestudio.cscraft.room.Room.TEAMANAME)) + (cc.isotopestudio.cscraft.util.S.toRed(\"\ufffd\ufffd\")))); }else { if ((room.getTeamAplayer().size()) >= ((room.getReqPlayerNum()) / 2)) { player.sendMessage((((cc.isotopestudio.cscraft.CScraft.prefix) + (cc.isotopestudio.cscraft.room.Room.TEAMANAME)) + (cc.isotopestudio.cscraft.util.S.toRed(\"\ufffd\ufffd\ufffd\ufffd\u0531\")))); return; } room.getTeamBplayer().remove(player); room.getTeamAplayer().add(player); room.getPlayerClassMap().remove(player); player.getEquipment().setHelmet(cc.isotopestudio.cscraft.element.GameItems.getRedTeamCap()); room.sendAllPlayersMsg(((((cc.isotopestudio.cscraft.CScraft.prefix) + (player.getDisplayName())) + (cc.isotopestudio.cscraft.util.S.toGreen(\" \ufffd\ufffd\ufffd\ufffd\"))) + (cc.isotopestudio.cscraft.room.Room.TEAMANAME))); } }else if (cc.isotopestudio.cscraft.element.GameItems.getTeam2Item().equals(event.getItem())) { if (room.getTeamBplayer().contains(player)) { player.sendMessage((((cc.isotopestudio.cscraft.util.S.toPrefixRed(\"\ufffd\ufffd\ufffd\u047e\ufffd\ufffd\ufffd\")) + (cc.isotopestudio.cscraft.room.Room.TEAMBNAME)) + (cc.isotopestudio.cscraft.util.S.toRed(\"\ufffd\ufffd\")))); }else { if ((room.getTeamBplayer().size()) >= ((room.getReqPlayerNum()) / 2)) { player.sendMessage((((cc.isotopestudio.cscraft.CScraft.prefix) + (cc.isotopestudio.cscraft.room.Room.TEAMBNAME)) + (cc.isotopestudio.cscraft.util.S.toRed(\"\ufffd\ufffd\ufffd\ufffd\u0531\")))); return; } room.getTeamAplayer().remove(player); room.getTeamBplayer().add(player); room.getPlayerClassMap().remove(player); player.getEquipment().setHelmet(cc.isotopestudio.cscraft.element.GameItems.getBlueTeamCap()); room.sendAllPlayersMsg(((((cc.isotopestudio.cscraft.CScraft.prefix) + (player.getDisplayName())) + (cc.isotopestudio.cscraft.util.S.toGreen(\" \ufffd\ufffd\ufffd\ufffd\"))) + (cc.isotopestudio.cscraft.room.Room.TEAMBNAME))); } }else if (cc.isotopestudio.cscraft.element.GameItems.getClassItem().equals(event.getItem())) { if (!(room instanceof cc.isotopestudio.cscraft.room.InfectRoom)) { new cc.isotopestudio.cscraft.gui.ClassGUI(room, player, (room.getTeamAplayer().contains(player) ? room.getTeamAclass() : room.getTeamBclass())).open(player); } }else if (cc.isotopestudio.cscraft.element.GameItems.getHumanClassItem().equals(event.getItem())) { if (room instanceof cc.isotopestudio.cscraft.room.InfectRoom) new cc.isotopestudio.cscraft.gui.ClassGUI(room, player, room.getTeamBclass()).open(player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4641/buggy-version/src.cc.isotopestudio.cscraft.players.listener.GUIItemListener.java", "BodyUseAPI": ["cc.isotopestudio.cscraft.element.GameItems.getTeam1Item().equals(event.getItem())", "cc.isotopestudio.cscraft.element.GameItems.getTeam2Item().equals(event.getItem())", "cc.isotopestudio.cscraft.element.GameItems.getClassItem().equals(event.getItem())", "org.bukkit.event.player.PlayerInteractEvent.getItem()", "org.bukkit.event.player.PlayerInteractEvent.getItem()", "org.bukkit.event.player.PlayerInteractEvent.getItem()", "cc.isotopestudio.cscraft.element.GameItems.getHumanClassItem().equals(event.getItem())", "org.bukkit.event.player.PlayerInteractEvent.getItem()"], "Fixed commit": "341c280790256171c081af52a5d0a1881e52baa0", "Url": "https://api.github.com/repos/ISOTOPE-Studio/CScraft", "Date": "2017-03-08T15:55:52Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cc.isotopestudio.cscraft.element.GameItems.getInfoItem().equals(event.getItem())) { event.setCancelled(true); new cc.isotopestudio.cscraft.gui.InfoGUI(room, player).open(player); }else if (cc.isotopestudio.cscraft.element.GameItems.getAntigenClassItem().equals(event.getItem())) { if (room instanceof cc.isotopestudio.cscraft.room.InfectRoom) new cc.isotopestudio.cscraft.gui.ClassGUI(room, player, ((cc.isotopestudio.cscraft.room.InfectRoom) (room)).getTeamAntigenClass()).open(player); }else if (cc.isotopestudio.cscraft.element.GameItems.getZombieClassItem().equals(event.getItem())) { if (room instanceof cc.isotopestudio.cscraft.room.InfectRoom) new cc.isotopestudio.cscraft.gui.ClassGUI(room, player, room.getTeamAclass()).open(player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4641/buggy-version/src.cc.isotopestudio.cscraft.players.listener.GUIItemListener.java", "BodyUseAPI": ["cc.isotopestudio.cscraft.element.GameItems.getZombieClassItem().equals(event.getItem())", "org.bukkit.event.player.PlayerInteractEvent.getItem()", "org.bukkit.event.player.PlayerInteractEvent.setCancelled(boolean)", "cc.isotopestudio.cscraft.element.GameItems.getAntigenClassItem().equals(event.getItem())", "org.bukkit.event.player.PlayerInteractEvent.getItem()"], "Fixed commit": "341c280790256171c081af52a5d0a1881e52baa0", "Url": "https://api.github.com/repos/ISOTOPE-Studio/CScraft", "Date": "2017-03-08T15:55:52Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (issueDetails.show()) { handleOkAction(bugTrackerProvider, issueDetails); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/922/buggy-version/src.main.java.com.smartbear.ready.plugin.jira.actions.CreateNewBugAction.java", "BodyUseAPI": ["com.smartbear.ready.plugin.jira.actions.CreateNewBugAction.handleOkAction(com.smartbear.ready.plugin.jira.impl.JiraProvider,com.eviware.x.form.XFormDialog)"], "Fixed commit": "7b516cb500f5d4ba7ecab4b60b4a3246b018f57b", "Url": "https://api.github.com/repos/SmartBear/ready-jira-plugin", "Date": "2016-08-05T14:43:13Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (issueDetails.show()) { handleOkAction(bugTrackerProvider, issueDetails); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/922/buggy-version/src.main.java.com.smartbear.ready.plugin.jira.actions.CreateNewBugAction.java", "BodyUseAPI": ["com.smartbear.ready.plugin.jira.actions.CreateNewBugAction.handleOkAction(com.smartbear.ready.plugin.jira.impl.JiraProvider,com.eviware.x.form.XFormDialog)"], "Fixed commit": "7b516cb500f5d4ba7ecab4b60b4a3246b018f57b", "Url": "https://api.github.com/repos/SmartBear/ready-jira-plugin", "Date": "2016-08-05T14:43:13Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.maxTotal) > 0) { this.dataSourceOra.setMaxPoolSize(this.maxTotal); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8767/buggy-version/src.main.java.de.cimt.talendcomp.connectionpool.BasicConnectionPool.java", "BodyUseAPI": [], "Fixed commit": "5ce0652d19542048d20001cc7ac570adae4521b0", "Url": "https://api.github.com/repos/jlolling/talendcomp_tDatabaseConnectionPool", "Date": "2016-11-23T21:09:28Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.location.equalsIgnoreCase(\"altpapiercontainer\")) == false) { this.location = \"Buecherregal\"; if (this.condition.equalsIgnoreCase(\"neu\")) { this.condition = \"gebraucht\"; }else if (this.condition.equalsIgnoreCase(\"gebraucht\")) { this.condition = \"ausgesondert\"; this.location = \"Altpapiercontainer\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/978/buggy-version/Semester_2.src.vorfuehrAufgabe1.Book.java", "BodyUseAPI": [], "Fixed commit": "ed3b4304468ce39c36ab66d0646a562d94a486ca", "Url": "https://api.github.com/repos/arvid-b/Semester_2", "Date": "2016-03-31T04:16:11Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ownedField.isOwned()) { java.lang.System.out.println((((ownedField + \" is currently owned by \") + (ownedField.getOwner())) + \".\")); try { java.lang.System.out.println(((((((\"The rent is \" + (ownedField.getRent())) + \". \") + (currentPlayer.getPlayerName())) + \"'s balance is now \") + (currentPlayer.getPlayerAccount().getBalance())) + \".\")); java.lang.System.out.println((((((((((ownedField.getOwner().getPlayerName()) + \" recieved \") + (ownedField.getRent())) + \" from \") + (currentPlayer.getPlayerName())) + \". \") + (ownedField.getOwner().getPlayerName())) + \"'s balance is now \") + (ownedField.getOwner().getPlayerAccount().getBalance()))); } catch (java.lang.IllegalArgumentException ex) { java.lang.System.out.println(((((((\"The rent is \" + (ownedField.getRent(currentPlayer.getDiceCup()))) + \". \") + (currentPlayer.getPlayerName())) + \"'s balance is now \") + (currentPlayer.getPlayerAccount().getBalance())) + \".\")); } }else { java.lang.System.out.println((((((ownedField + \" is not owned by anyone, however you cannot afford this field (Current Balance: \") + (currentPlayer.getPlayerAccount().getBalance())) + \" | Field Price: \") + (ownedField.getPrice())) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5108/buggy-version/src.models.GameLogic.java", "BodyUseAPI": ["ownedField.getOwner().getPlayerName()", "ownedField.getOwner().getPlayerAccount()", "fields.Ownable.getPrice()", "java.io.PrintStream.println((((((ownedField + \" is not owned by anyone, however you cannot afford this field (Current Balance: \") + (currentPlayer.getPlayerAccount().getBalance())) + \" | Field Price: \") + (ownedField.getPrice())) + \")\"))", "fields.Ownable.getRent()", "fields.Ownable.getOwner()", "java.io.PrintStream.println(((((((\"The rent is \" + (ownedField.getRent())) + \". \") + (currentPlayer.getPlayerName())) + \"'s balance is now \") + (currentPlayer.getPlayerAccount().getBalance())) + \".\"))", "java.io.PrintStream.println((((ownedField + \" is currently owned by \") + (ownedField.getOwner())) + \".\"))", "java.io.PrintStream.println((((((((((ownedField.getOwner().getPlayerName()) + \" recieved \") + (ownedField.getRent())) + \" from \") + (currentPlayer.getPlayerName())) + \". \") + (ownedField.getOwner().getPlayerName())) + \"'s balance is now \") + (ownedField.getOwner().getPlayerAccount().getBalance())))", "fields.Ownable.getOwner()", "fields.Ownable.getRent(currentPlayer.getDiceCup())", "fields.Ownable.getRent()", "java.io.PrintStream.println(((((((\"The rent is \" + (ownedField.getRent(currentPlayer.getDiceCup()))) + \". \") + (currentPlayer.getPlayerName())) + \"'s balance is now \") + (currentPlayer.getPlayerAccount().getBalance())) + \".\"))", "fields.Ownable.getOwner()", "fields.Ownable.getOwner()", "ownedField.getOwner().getPlayerName()", "ownedField.getOwner().getPlayerAccount().getBalance()"], "Fixed commit": "f4b5a9d2e1c7e2144cbb04ebfc03f2f4adf7e4a1", "Url": "https://api.github.com/repos/hold11/CDIO_del3", "Date": "2016-11-27T20:03:54Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tile.isEmpty())) neighbor = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/383/buggy-version/src.com.tallbluehat.Game.java", "BodyUseAPI": [], "Fixed commit": "44aca030949cb2edabdf609177be850f8db07dd1", "Url": "https://api.github.com/repos/DevinKott/WordsWithFriends2", "Date": "2017-01-23T15:51:52Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) > 0) { metadataPath = args[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5277/buggy-version/geoprism-server.src.main.java.net.geoprism.GeoprismPatcher.java", "BodyUseAPI": [], "Fixed commit": "505a21b30a6f0df301d3ef2b224d6d15abc12e00", "Url": "https://api.github.com/repos/terraframe/geoprism", "Date": "2016-11-08T17:26:11Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (metadataPath == null) { metadataPath = com.runwaysdk.constants.DeployProperties.getDeployBin(); fMetadataPath = new java.io.File(metadataPath, \"metadata\"); }else { fMetadataPath = new java.io.File(metadataPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5277/buggy-version/geoprism-server.src.main.java.net.geoprism.GeoprismPatcher.java", "BodyUseAPI": [], "Fixed commit": "505a21b30a6f0df301d3ef2b224d6d15abc12e00", "Url": "https://api.github.com/repos/terraframe/geoprism", "Date": "2016-11-08T17:26:11Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (changePrice < 0) { priceTextView.setTextColor(Color.BLUE); priceChangeTextView.setTextColor(Color.BLUE); percentChangeTextView.setTextColor(Color.BLUE); }else { priceTextView.setTextColor(Color.BLACK); priceChangeTextView.setTextColor(Color.BLACK); percentChangeTextView.setTextColor(Color.BLACK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2930/buggy-version/app.src.main.java.com.shimnssso.mycointong.ListViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "1ae44e29817901421a2c04e15dfa3bb6dd86c0e8", "Url": "https://api.github.com/repos/mechurak/MyCoinTong", "Date": "2017-06-29T17:51:19Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (map == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6771/buggy-version/mvvm2.src.main.java.com.arialyy.frame.util.show.L.java", "BodyUseAPI": [], "Fixed commit": "c39f9e33386a933622b73b774fab90439a8b36c2", "Url": "https://api.github.com/repos/AriaLyy/MVVM", "Date": "2016-04-07T07:18:22Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mLocationUpdated) { distance = ((int) (getDistanceSinceLastUpdate(busStop.getLongitude(), busStop.getLatitude()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2324/buggy-version/app.src.main.java.com.apptech.android.bushero.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1891d8dd55f3cd72af06896d206e334f75fd36c4", "Url": "https://api.github.com/repos/alexmcbride/bushero", "Date": "2016-04-02T20:20:24Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((persistentEntity) == null) { persistentEntity = mappingContext.getPersistentEntity(this.getFullName()); if ((persistentEntity) == null) { org.grails.datastore.mapping.model.MappingContext concreteMappingContext = getApplication().getMappingContext(); if ((concreteMappingContext.getClass()) == (org.grails.datastore.mapping.keyvalue.mapping.config.KeyValueMappingContext.class)) { persistentEntity = concreteMappingContext.addPersistentEntity(getClazz()); }else { throw new org.grails.core.exceptions.GrailsConfigurationException(((\"Could not retrieve the respective entity for domain \" + (this.getName())) + \" in the mapping context API\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7714/buggy-version/grails-core.src.main.groovy.org.grails.core.DefaultGrailsDomainClass.java", "BodyUseAPI": [], "Fixed commit": "7e00092f57c86e60652ddda7a46fced63fa72159", "Url": "https://api.github.com/repos/wwjiang007/grails-core", "Date": "2017-05-29T13:03:50Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pointer != (-1)) { fearGl.glEnableVertexAttribArray(pointer); fearGl.glVertexAttribPointer(pointer, size, DataType.GL_FLOAT, true, stride, offset); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1891/buggy-version/fearless-render-core.src.main.java.se.fearlessgames.fear.ShaderProgram.java", "BodyUseAPI": ["se.fearlessgames.fear.gl.FearGl.glVertexAttribPointer(int,int,DataType.GL_FLOAT,boolean,int,int)", "se.fearlessgames.fear.gl.FearGl.glEnableVertexAttribArray(int)"], "Fixed commit": "56d6a056b8eead5b1df24c4b1a1f98aa969032d2", "Url": "https://api.github.com/repos/thehiflyer/fearless-render", "Date": "2012-03-29T22:01:08Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentBookmark.getTagString()) != null) currentBookmark.setTagString((((currentBookmark.getTagString()) + \" \") + body)); else currentBookmark.setTagString(body);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/389/buggy-version/src.com.deliciousdroid.xml.SaxFeedParser.java", "BodyUseAPI": ["com.deliciousdroid.providers.BookmarkContent.Bookmark.getTagString()", "com.deliciousdroid.providers.BookmarkContent.Bookmark.setTagString(java.lang.String)", "com.deliciousdroid.providers.BookmarkContent.Bookmark.setTagString((((currentBookmark.getTagString()) + \" \") + body))"], "Fixed commit": "b974a5f06d3f9a012be6a83dae19bb36d3886449", "Url": "https://api.github.com/repos/maxpower47/DeliciousDroid", "Date": "2012-07-06T13:10:01Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((body != null) && (!(body.equals(\"\")))) currentBookmark.setTime(com.deliciousdroid.util.DateParser.parseTime(body.trim()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/389/buggy-version/src.com.deliciousdroid.xml.SaxFeedParser.java", "BodyUseAPI": ["com.deliciousdroid.util.DateParser.parseTime(java.lang.String)", "java.lang.String.trim()", "com.deliciousdroid.providers.BookmarkContent.Bookmark.setTime(com.deliciousdroid.util.DateParser.parseTime(body.trim()))"], "Fixed commit": "b974a5f06d3f9a012be6a83dae19bb36d3886449", "Url": "https://api.github.com/repos/maxpower47/DeliciousDroid", "Date": "2012-07-06T13:10:01Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getBody()) != null) { float deltaTime = 1 / (300.0F - ((getBodySpeed()) * 28)); animator.update(deltaTime); if ((getBodySpeed()) < 0.2F) { com.badlogic.gdx.graphics.g2d.TextureRegion stillFrame = animator.getStillFrame(); if (stillFrame != null) { sprite.setRegion(stillFrame); }else { sprite.setRegion(animator.getFrame()); } }else { sprite.setRegion(animator.getFrame()); } }else { com.badlogic.gdx.graphics.g2d.TextureRegion stillFrame = animator.getStillFrame(); if (stillFrame != null) { sprite.setRegion(stillFrame); }else { sprite.setRegion(animator.getFrame()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4669/buggy-version/core.src.edu.chalmers.zombie.adapter.Entity.java", "BodyUseAPI": [], "Fixed commit": "4631d09bce4dfe9b287a9d30c531352e3a820661", "Url": "https://api.github.com/repos/PuzzelIT/zombieweek", "Date": "2015-05-24T17:14:52Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (beginPosition == (accByte - 1)) { if (length > 1) { startIndex = i + 1; } beginHalf = true; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8578/buggy-version/src.main.thecodinglog.string.StringHelper.java", "BodyUseAPI": [], "Fixed commit": "28214062d507a30f6aeb6ec1b42be4cd558ccac4", "Url": "https://api.github.com/repos/thecodinglog/stringHelper", "Date": "2017-07-31T04:37:41Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((kcDataObject.getUpdateUser()) != null) { kcDataObject.setUpdateUser(org.apache.commons.lang3.StringUtils.substring(kcDataObject.getUpdateUser(), 0, KcDataObject.UPDATE_USER_LENGTH)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/964/buggy-version/coeus-code.src.main.java.org.kuali.coeus.sys.impl.model.KcDataObjectServiceImpl.java", "BodyUseAPI": ["org.kuali.coeus.sys.framework.model.KcDataObject.setUpdateUser(org.apache.commons.lang3.StringUtils.substring(kcDataObject.getUpdateUser(), 0, KcDataObject.UPDATE_USER_LENGTH))", "org.apache.commons.lang3.StringUtils.substring(kcDataObject.getUpdateUser(),int,KcDataObject.UPDATE_USER_LENGTH)", "org.kuali.coeus.sys.framework.model.KcDataObject.getUpdateUser()"], "Fixed commit": "fd2fccc25f318e06d9b0eadc3d6d2f25816c7b61", "Url": "https://api.github.com/repos/anithapolus/kc", "Date": "2014-07-31T04:12:14Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.voltdb.TraceTool.starts)) { java.lang.System.out.println(\"Monitor is started\"); org.voltdb.TraceTool.starts = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1688/buggy-version/src.frontend.org.voltdb.TraceTool.java", "BodyUseAPI": [], "Fixed commit": "759fa796e123b7e1729595c58b1bf101b9cf11ab", "Url": "https://api.github.com/repos/sensssz/voltdb", "Date": "2016-05-05T21:15:05Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cryptomator.filesystem.ReadableFile.read(java.nio.ByteBuffer)", "org.cryptomator.filesystem.ReadableFile.read(java.nio.ByteBuffer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((bytesRead1 == sampleSize) && (bytesRead2 == sampleSize)) { beginOfFile1.flip(); beginOfFile2.flip(); return beginOfFile1.equals(beginOfFile2); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7260/buggy-version/main.filesystem-crypto.src.main.java.org.cryptomator.filesystem.crypto.ConflictResolver.java", "BodyUseAPI": [], "Fixed commit": "505b6542c77326a68c0e27904df784cb083b4298", "Url": "https://api.github.com/repos/cryptomator/cryptomator", "Date": "2016-08-14T12:30:48Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getInt(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((trackIds.size()) <= trackIndex) trackIndex = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2367/buggy-version/app.src.main.java.com.flhs.ScheduleActivity.java", "BodyUseAPI": [], "Fixed commit": "ef8011dadd93e02b4afb9a99bdd2bea4c404960e", "Url": "https://api.github.com/repos/DrewGregory/AndroidFLHSApp", "Date": "2017-07-18T21:13:07Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shareActionProvider) != null) { shareActionProvider.setShareIntent(shareIntent); }else { android.util.Log.d(it.jaschke.alexandria.BookDetail.LOG_TAG, \"Share Action Provider is null?\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/495/buggy-version/alexandria.app.src.main.java.it.jaschke.alexandria.BookDetail.java", "BodyUseAPI": [], "Fixed commit": "fbb19df0a55dc55c2f5b1ca1154121086e621f63", "Url": "https://api.github.com/repos/maddom73/udacity-super-duo", "Date": "2015-10-15T05:37:47Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(origModelElemTypeRef.isModifiable())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/692/buggy-version/Types.Kleisli.edu.toronto.cs.se.modelepedia.kleisli.src-gen.edu.toronto.cs.se.modelepedia.kleisli.impl.KleisliModelRelImpl.java", "BodyUseAPI": [], "Fixed commit": "03a5ee35e604fae3487714c5ecacf2b4fca6bccc", "Url": "https://api.github.com/repos/adisandro/MMINT", "Date": "2014-06-11T20:41:32Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"UIQuickAddTask\".equals(this.getId())) defaultTime = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/274/buggy-version/calendar-webapp.src.main.java.org.exoplatform.calendar.webui.popup.UIQuickAddEvent.java", "BodyUseAPI": [], "Fixed commit": "8a8d0fcbb73beb41594de894d282b1f3190d3c4f", "Url": "https://api.github.com/repos/exodev/calendar", "Date": "2013-07-02T04:38:56Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.bajnarola.game.MainClass.debugPlay) && (((debugPlayTiles)--) <= 0)) newTile = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6105/buggy-version/org.bajnarola.game.model.Board.java", "BodyUseAPI": [], "Fixed commit": "a3c3d591a86fdeb121abbe3847786546d8540877", "Url": "https://api.github.com/repos/ffgames/bajnarola", "Date": "2015-11-10T16:18:24Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (element.containsKey(\"default\")) this.original = ((java.lang.Integer) (element.get(\"default\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3371/buggy-version/src.main.java.com.af.synapse.elements.SCheckBox.java", "BodyUseAPI": [], "Fixed commit": "11bee9c21054b7460ba157ff570f64bc6a615f23", "Url": "https://api.github.com/repos/AndreiLux/Synapse", "Date": "2013-12-02T20:40:49Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((original) != (java.lang.Integer.MIN_VALUE)) { lastCheck = (original) != 0; checkBox.setChecked(lastCheck); valueCheck(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3371/buggy-version/src.main.java.com.af.synapse.elements.SCheckBox.java", "BodyUseAPI": [], "Fixed commit": "11bee9c21054b7460ba157ff570f64bc6a615f23", "Url": "https://api.github.com/repos/AndreiLux/Synapse", "Date": "2013-12-02T20:40:49Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.ID) == 0) { story.createNewStory(title, descript, author); }else { story.modifyStory(title, descript, author); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1822/buggy-version/src.cs.ualberta.ca.beargitandroid.controller.StoryController.java", "BodyUseAPI": [], "Fixed commit": "2d03f98d87892d461530bd4b8186b9259f554975", "Url": "https://api.github.com/repos/CMPUT301F13T09/BearGitAndroid", "Date": "2013-12-03T00:09:07Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getLong(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id != 0) { TitleText.setText(((java.lang.String) (sct.getStory().get(\"title\")))); AuthorText.setText(((java.lang.String) (sct.getStory().get(\"author\")))); DescripText.setText(((java.lang.String) (sct.getStory().get(\"description\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1822/buggy-version/src.cs.ualberta.ca.beargitandroid.View.CreateStory.java", "BodyUseAPI": [], "Fixed commit": "2d03f98d87892d461530bd4b8186b9259f554975", "Url": "https://api.github.com/repos/CMPUT301F13T09/BearGitAndroid", "Date": "2013-12-03T00:09:07Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(pages.isEmpty())) { pages.get(getCurrentPage()).onCreateOptionsMenu(menu); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7373/buggy-version/src.com.dedaulus.cinematty.activities.MovieActivity.java", "BodyUseAPI": ["java.util.List<com.dedaulus.cinematty.activities.Pages.SliderPage>.get(int)", "pages.get(getCurrentPage()).onCreateOptionsMenu(com.actionbarsherlock.view.Menu)"], "Fixed commit": "a4acabadb34ed48ab2aa972cfac213f27e280249", "Url": "https://api.github.com/repos/Dedaulus/Cinematty", "Date": "2012-05-08T11:18:05Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(pages.isEmpty())) { pages.get(getCurrentPage()).onCreateOptionsMenu(menu); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7373/buggy-version/src.com.dedaulus.cinematty.activities.CinemaActivity.java", "BodyUseAPI": ["pages.get(getCurrentPage()).onCreateOptionsMenu(com.actionbarsherlock.view.Menu)", "java.util.List<com.dedaulus.cinematty.activities.Pages.SliderPage>.get(int)"], "Fixed commit": "a4acabadb34ed48ab2aa972cfac213f27e280249", "Url": "https://api.github.com/repos/Dedaulus/Cinematty", "Date": "2012-05-08T11:18:05Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (session.getLoading().getValue()) { session.setLoading(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7340/buggy-version/app.src.main.java.org.mozilla.focus.session.SessionCallbackProxy.java", "BodyUseAPI": ["org.mozilla.focus.session.Session.setLoading(boolean)"], "Fixed commit": "198ac5c2818a742b8e10d1a6e1b2e0738b3081f7", "Url": "https://api.github.com/repos/layely/focus-android", "Date": "2017-10-21T05:29:14Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openflexo.foundation.fml.FlexoProperty<T>.getGetControlGraph()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (getControlGraph != null) { try { org.openflexo.foundation.fml.rt.RunTimeEvaluationContext localEvaluationContext = new org.openflexo.foundation.fml.rt.FlexoConceptInstance.FlexoConceptInstanceImpl.LocalRunTimeEvaluationContext(); T returnedValue = null; try { getControlGraph.execute(localEvaluationContext); } catch (org.openflexo.foundation.fml.rt.ReturnException e) { returnedValue = ((T) (e.getReturnedValue())); } return returnedValue; } catch (org.openflexo.foundation.FlexoException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5148/buggy-version/flexo-foundation.src.main.java.org.openflexo.foundation.fml.rt.FlexoConceptInstance.java", "BodyUseAPI": ["org.openflexo.foundation.fml.controlgraph.FMLControlGraph.execute(org.openflexo.foundation.fml.rt.RunTimeEvaluationContext)"], "Fixed commit": "3bb4edcbe528d60e50a2a6f600ba2019c716b5a5", "Url": "https://api.github.com/repos/openflexo-team/openflexo-core", "Date": "2016-07-05T06:41:14Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Currency.getInstance(event.getCurrency().getCode())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (currency != null) { symbol.setText(currency.getSymbol(java.util.Locale.getDefault())); amount.setText(event.getCurrency().format(event.getAmount().longValue())); }else { amount.setText(java.lang.String.valueOf(event.getAmount().longValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/9094/buggy-version/sample.src.main.java.com.github.devnied.emvnfccard.adapter.EventAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "java.util.Currency.getSymbol(java.util.Locale)"], "Fixed commit": "a8ba56f41d961b8c7f2167b07ef243ab149850ac", "Url": "https://api.github.com/repos/devnied/EMV-NFC-Paycard-Enrollment", "Date": "2014-04-20T21:25:21Z"},
{"Line": "=>1930", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((!(brewingSalts.isEmpty())) && (i > (-1))) && (i < (brewingSalts.size()))) this.brewingSalts.remove(i);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3481/buggy-version/src.ca.strangebrew.Recipe.java", "BodyUseAPI": ["java.util.List<ca.strangebrew.Salt>.remove(int)"], "Fixed commit": "9f336fa72da7e7f909dcba0f204a4dc3dbd78943", "Url": "https://api.github.com/repos/drewavis/StrangeBrew", "Date": "2013-01-23T22:28:45Z"},
{"Line": "=>2683", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((me.ccrama.redditslide.UserSubscriptions.modOf) != null) && (!(UserSubscriptions.modOf.isEmpty()))) { android.content.Intent inte = new android.content.Intent(this, me.ccrama.redditslide.Activities.ModQueue.class); this.startActivity(inte); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1832/buggy-version/app.src.main.java.me.ccrama.redditslide.Activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "53bbcf607d6bf54eef627c1974b0737b41603b96", "Url": "https://api.github.com/repos/Nxt3/Slide", "Date": "2016-04-15T22:41:20Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((progressPhotoAdapter.getItemCount()) == 0) { progressPhotos.add(photo); progressPhotoAdapter.notifyDataSetChanged(); }else { progressPhotos.add(0, photo); progressPhotoAdapter.notifyItemInserted(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7563/buggy-version/app.src.main.java.com.example.kaveon14.workoutbuddy.Fragments.MainFragments.ProgressPhotosFragment.java", "BodyUseAPI": ["com.example.kaveon14.workoutbuddy.Fragments.MainFragments.ProgressPhotosFragment.ProgressPhotoAdapter.notifyItemInserted(int)", "com.example.kaveon14.workoutbuddy.Fragments.MainFragments.ProgressPhotosFragment.ProgressPhotoAdapter.notifyDataSetChanged()"], "Fixed commit": "3864512af1705c69c230e44ada945f3842b2c357", "Url": "https://api.github.com/repos/kaveon14/WorkoutBuddy-App", "Date": "2017-08-16T03:50:51Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!viewed) { java.lang.String.format(\"Clear ViewedHistory of %s ( %s )\", getFullDisplayTitle(), viewedHistory.toSerializationString()); fullResetViewedHistory(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5160/buggy-version/src.main.de.jClipCorn.database.databaseElement.CCMovie.java", "BodyUseAPI": [], "Fixed commit": "b178362b39bdde5b5da0401bf979432cca116c90", "Url": "https://api.github.com/repos/Mikescher/jClipCorn", "Date": "2016-08-19T21:07:47Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastUtterBar2) >= 1) { lastUtterBar2 = 1; }else if ((lastUtterBar2) < 0) { lastUtterBar2 = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7572/buggy-version/src.TandemTable.sections.mainSection.MainSection.java", "BodyUseAPI": [], "Fixed commit": "d9afa4bc3138463db3cb14785fc783000342e37e", "Url": "https://api.github.com/repos/vialab/TandemTable", "Date": "2015-05-21T18:40:52Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastUtterBar1) >= 1) { lastUtterBar1 = 1; }else if ((lastUtterBar1) < 0) { lastUtterBar1 = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7572/buggy-version/src.TandemTable.sections.mainSection.MainSection.java", "BodyUseAPI": [], "Fixed commit": "d9afa4bc3138463db3cb14785fc783000342e37e", "Url": "https://api.github.com/repos/vialab/TandemTable", "Date": "2015-05-21T18:40:52Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mekanism.common.EnergyNetwork.get(net.minecraft.tileentity.TileEntity)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((handler.getPowerReceiver(side.getOpposite()).powerRequest()) * (Mekanism.FROM_BC)) > 0) { if ((handler instanceof buildcraft.api.power.IPowerEmitter) && (((buildcraft.api.power.IPowerEmitter) (handler)).canEmitPowerFrom(side.getOpposite()))) { continue; } toReturn.add(acceptor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7897/buggy-version/common.mekanism.common.EnergyNetwork.java", "BodyUseAPI": ["buildcraft.api.power.IPowerReceptor.canEmitPowerFrom(side.getOpposite())", "net.minecraftforge.common.ForgeDirection.getOpposite()"], "Fixed commit": "b51e4dfd9ff0f0dc7fb0bf8f5f71256988ab9d3b", "Url": "https://api.github.com/repos/aidancbrady/Mekanism", "Date": "2014-01-26T18:53:22Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mImageUrl.length()) == 0) { mImageUrl = \"empty_pic\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/720/buggy-version/app.src.main.java.org.disciplestoday.disciplestoday.ArticleDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "ea3c8cb5c87ead5d691e8150b88b0aa99ee13259", "Url": "https://api.github.com/repos/neiljaywarner/CapstoneProject", "Date": "2017-07-23T21:53:35Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["afc.ant.modular.ModuleUtil.getPath(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (path != null) { propHelper.setNewProperty(\"\", outputProperty, path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8755/buggy-version/src.java.afc.ant.modular.GetModulePath.java", "BodyUseAPI": ["org.apache.tools.ant.PropertyHelper.setNewProperty(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "ab3dd58e00945b97ea5ef16b86c04ff364dd1412", "Url": "https://api.github.com/repos/dzidzitop/ant_modular", "Date": "2013-09-21T16:58:15Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mp) != null) { mp.stop(); mp.release(); mp = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5721/buggy-version/app.src.main.java.com.example.youngki.memory_project.repetitionTraining.java", "BodyUseAPI": [], "Fixed commit": "f67288d1eac51de89dd85e9a684b0397f07bca9a", "Url": "https://api.github.com/repos/MemoryGroup/442repo", "Date": "2016-11-10T16:46:38Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mp) != null) { mp.stop(); mp.release(); mp = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5721/buggy-version/app.src.main.java.com.example.youngki.memory_project.repetitionTraining.java", "BodyUseAPI": [], "Fixed commit": "f67288d1eac51de89dd85e9a684b0397f07bca9a", "Url": "https://api.github.com/repos/MemoryGroup/442repo", "Date": "2016-11-10T16:46:38Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((smallest) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7264/buggy-version/src.lab3.SortedLinkedListSet.java", "BodyUseAPI": [], "Fixed commit": "1c55fee55d84c4161382c73525b772b90c225294", "Url": "https://api.github.com/repos/AlexanderSopov/datastruktur", "Date": "2016-02-24T21:56:07Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((smallest) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7264/buggy-version/src.lab3.SortedLinkedListSet.java", "BodyUseAPI": [], "Fixed commit": "1c55fee55d84c4161382c73525b772b90c225294", "Url": "https://api.github.com/repos/AlexanderSopov/datastruktur", "Date": "2016-02-24T21:56:07Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((smallest.getNext()) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7264/buggy-version/src.lab3.SortedLinkedListSet.java", "BodyUseAPI": [], "Fixed commit": "1c55fee55d84c4161382c73525b772b90c225294", "Url": "https://api.github.com/repos/AlexanderSopov/datastruktur", "Date": "2016-02-24T21:56:07Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["items.get(position).getImageURL()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((imageURL == null) || ((imageURL.length()) == 0)) { holder.bookImage.setImageResource(R.drawable.image_not_found); }else { com.squareup.picasso.Picasso.with(activity).load(items.get(position).getImageURL()).fit().error(activity.getResources().getDrawable(R.drawable.image_not_found)).into(holder.bookImage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/916/buggy-version/app.src.main.java.com.example.utkarshtiwari.booklisting.adapters.RecyclerViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "92c9384ddced261a4828ae42e359d660c7b157e5", "Url": "https://api.github.com/repos/iamutkarshtiwari/Shelf", "Date": "2017-10-15T07:22:56Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isLoginUseable) == true) { isLoginUseable = false; new org.wmt.MainActivity.AsyncLoginTask().execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4778/buggy-version/src.org.wmt.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "932ab520ff10c73a766594606ceefe264df8a183", "Url": "https://api.github.com/repos/WheresMyTeacher/WheresMyTeacher", "Date": "2014-05-22T11:06:12Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iTide == (-1)) return 0.0F;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1614/buggy-version/src.pt.up.fe.dceg.neptus.util.bathymetry.TidePredictionFinder.java", "BodyUseAPI": [], "Fixed commit": "bf405b946dab21d00eadf2ddc73cb40ba870a6a5", "Url": "https://api.github.com/repos/LSTS/neptus", "Date": "2013-05-15T23:28:48Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPlaying) editor.apply();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4756/buggy-version/QuickLyric.src.main.java.com.geecko.QuickLyric.broadcastReceiver.MusicBroadcastReceiver.java", "BodyUseAPI": [], "Fixed commit": "9397621d704cf0e6c325caf1d2758273b6e98f63", "Url": "https://api.github.com/repos/QuickLyric/QuickLyric", "Date": "2015-05-11T04:28:26Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (track.equals(sharedPref.getString(\"track\", \"\"))) android.support.v4.app.NotificationManagerCompat.from(context).cancel(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4756/buggy-version/QuickLyric.src.main.java.com.geecko.QuickLyric.broadcastReceiver.MusicBroadcastReceiver.java", "BodyUseAPI": [], "Fixed commit": "9397621d704cf0e6c325caf1d2758273b6e98f63", "Url": "https://api.github.com/repos/QuickLyric/QuickLyric", "Date": "2015-05-11T04:28:26Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((genericAsyncTask) != null) if (!((genericAsyncTask.getStatus()) == (AsyncTask.Status.FINISHED))) genericAsyncTask.cancel(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8023/buggy-version/app.src.main.java.com.androidbelieve.drawerwithswipetabs.AdActivity.java", "BodyUseAPI": [], "Fixed commit": "dbf0fcbaa6397cb0a67405b09d86bd246052d31d", "Url": "https://api.github.com/repos/rng123/DrawerWithSwipeTabs", "Date": "2016-11-16T19:31:06Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getAd) != null) if (!((getAd.getStatus()) == (AsyncTask.Status.FINISHED))) getAd.cancel(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8023/buggy-version/app.src.main.java.com.androidbelieve.drawerwithswipetabs.AdActivity.java", "BodyUseAPI": [], "Fixed commit": "dbf0fcbaa6397cb0a67405b09d86bd246052d31d", "Url": "https://api.github.com/repos/rng123/DrawerWithSwipeTabs", "Date": "2016-11-16T19:31:06Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= 8) { syncResult.delayUntil = e.getBackoff(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8034/buggy-version/src.com.pindroid.syncadapter.BookmarkSyncAdapter.java", "BodyUseAPI": [], "Fixed commit": "ac1b4122f5502e3c730646da5d09ee581db6012b", "Url": "https://api.github.com/repos/maxpower47/PinDroid", "Date": "2012-03-22T13:12:08Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (writer != null) { writer.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5970/buggy-version/src.main.com.google.code.tvrenamer.controller.XMLPersistence.java", "BodyUseAPI": ["java.io.BufferedWriter.close()"], "Fixed commit": "6d5f7889c3ecda53d13798067f898cc251f329b4", "Url": "https://api.github.com/repos/tvrenamer/tvrenamer", "Date": "2011-06-26T04:42:32Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (install) { getUpdate().install(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/511/buggy-version/src.me.sirfaizdat.prison.core.Updater.java", "BodyUseAPI": [], "Fixed commit": "30862053389ec5b2783f5d9d8d37491af79c4398", "Url": "https://api.github.com/repos/faizaand/Prison", "Date": "2017-02-15T19:40:19Z"},
{"Line": "=>680", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Camera.Parameters.getSupportedFocusModes()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (modes.contains(Camera.Parameters.FOCUS_MODE_CONTINUOUS_PICTURE)) { params.setFocusMode(Camera.Parameters.FOCUS_MODE_CONTINUOUS_PICTURE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5977/buggy-version/camerakit.src.main.api16.com.flurgle.camerakit.Camera1.java", "BodyUseAPI": [], "Fixed commit": "35e632f4dbfd1f1e5cf19746e0d4d689bfff1dc2", "Url": "https://api.github.com/repos/dsrees/CameraKit-Android", "Date": "2017-09-14T16:19:04Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(kitchenOrderDetailsViewModel.isCategory())) { kitchenDao.updateKitchenOrderDetailsViewStatus(kitchenOrderDetailsViewModel.getId(), kitchenOrderDetailsViewModel.getStatus(), kitchenOrderDetailsViewModel.getUnAvailableCount()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2501/buggy-version/hsb.app.src.main.java.com.archide.hsb.service.impl.KitchenServiceImpl.java", "BodyUseAPI": ["com.archide.hsb.view.model.KitchenOrderDetailsViewModel.getStatus()", "com.archide.hsb.view.model.KitchenOrderDetailsViewModel.getUnAvailableCount()", "com.archide.hsb.view.model.KitchenOrderDetailsViewModel.getId()", "com.archide.hsb.dao.KitchenDao.updateKitchenOrderDetailsViewStatus(kitchenOrderDetailsViewModel.getId(),kitchenOrderDetailsViewModel.getStatus(),kitchenOrderDetailsViewModel.getUnAvailableCount())"], "Fixed commit": "38466ff0da902dc7722187a820a3609190bf7475", "Url": "https://api.github.com/repos/snithishkumar/hsb-android", "Date": "2016-12-22T07:25:54Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (conn != null) { conn.disconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7760/buggy-version/app.src.main.java.com.art2cat.dev.moonlightnote.Utils.ImageLoader.NetCacheUtils.java", "BodyUseAPI": ["java.net.HttpURLConnection.disconnect()"], "Fixed commit": "0c7db8fba6a57ce7e896da071338497b5853736e", "Url": "https://api.github.com/repos/Art2Cat/MoonlightNote", "Date": "2016-09-20T09:31:17Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (support != null) { if (!(support.isEmpty())) { java.lang.System.out.println(\"SUPPORT:\"); for (java.lang.String supp : support) { java.lang.System.out.println((\" \" + supp)); } }else { java.lang.System.out.println((\"No SUPPORT for \" + (props.toString()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4164/buggy-version/jkind.src.jkind.writers.ConsoleWriter.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.isEmpty()"], "Fixed commit": "c6eca0634fb69a59dc7c7094621532451855c4ec", "Url": "https://api.github.com/repos/elaghs/jkind", "Date": "2015-11-26T05:20:03Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cons > high) high = cons;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2062/buggy-version/src.game.GameLogic.java", "BodyUseAPI": [], "Fixed commit": "cea583093d97d9d475cecbc43c06db43c500819b", "Url": "https://api.github.com/repos/rasmusgreve/yahtzee", "Date": "2014-03-25T13:14:13Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (previousError < (error)) { java.lang.System.out.println(java.lang.String.format(\"Error is getting bigger (%f -> %f): adjusted learningRate (%f -> %f)\", previousError, error, learningConstant, ((learningConstant) * 0.5))); learningConstant *= 0.5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3637/buggy-version/src.rnn.Network.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.lang.String.format(java.lang.String,double,double,double,double)"], "Fixed commit": "ae854cffee1ddf155cf5068fbb8c93337c706307", "Url": "https://api.github.com/repos/wybrandvdmeer/neural-network", "Date": "2017-10-20T14:40:06Z"},
{"Line": "=>1460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (foo[i].exists()) { s3.NewJFrame.jTextArea1.append(((\"\\n\" + new_object_name) + \" already exists on this machine.\")); }else { s3.NewJFrame.jTextArea1.append((\"\\n\" + (get.get(d[i].getText(), cred.access_key, cred.getSecret_key(), cred.getBucket(), cred.getEndpoint(), ((Destination + (slash)) + new_object_name))))); s3.NewJFrame.jTextArea1.setCaretPosition(s3.NewJFrame.jTextArea1.getSelectionEnd()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3147/buggy-version/src.s3.NewJFrame.java", "BodyUseAPI": ["javax.swing.JRadioButton.getText()", "javax.swing.JTextArea.append((\"\\n\" + (get.get(d[i].getText(), cred.access_key, cred.getSecret_key(), cred.getBucket(), cred.getEndpoint(), ((Destination + (slash)) + new_object_name)))))", "s3.Get.get(java.lang.String,cred.access_key,cred.getSecret_key(),cred.getBucket(),cred.getEndpoint(),java.lang.String)"], "Fixed commit": "189e07460a4f8c3d580d88a82a202318915242a3", "Url": "https://api.github.com/repos/rusher81572/s3", "Date": "2013-12-05T19:28:07Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (data != null) { mActivity.get().addReceivedData(data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/263/buggy-version/UsbSerialConsole.app.src.main.java.jp.co.sugnakys.usbserialconsole.MainActivity.java", "BodyUseAPI": ["jp.co.sugnakys.usbserialconsole.MainActivity.addReceivedData(java.lang.String)"], "Fixed commit": "7196c8d468f6601e908a267e3dc13fb19227fff0", "Url": "https://api.github.com/repos/sugnakys/UsbSerialConsole", "Date": "2016-08-31T15:01:13Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((ui.getTotalScore()) >= 60) { testResult = \"Passed\"; }else { testResult = \"Failed\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2861/buggy-version/src.javaExam.JFrameSummary.java", "BodyUseAPI": [], "Fixed commit": "71f62c1683a727ba110ba154f2bc86b014c02320", "Url": "https://api.github.com/repos/DistilledMeat/java_exam", "Date": "2017-03-21T16:30:15Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((masker) != null) { masker.newFrame(headerData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4670/buggy-version/core.src.main.java.io.undertow.websockets.core.StreamSourceFrameChannel.java", "BodyUseAPI": [], "Fixed commit": "98f392308b695f75dd0fefaba3b1964543d13b5a", "Url": "https://api.github.com/repos/mwringe/undertow", "Date": "2014-11-27T00:12:32Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (start.isSameSquare(destination)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6086/buggy-version/chess.controller.ChessHelp.java", "BodyUseAPI": [], "Fixed commit": "00c88dc41731ae98b87d90210997467d2efaa294", "Url": "https://api.github.com/repos/stevemasta34/MyChess", "Date": "2014-06-03T20:52:20Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null != (footerView)) && (position == ((getItemCount()) - 1))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5298/buggy-version/bootstrap.src.main.java.com.daweibayu.bootstrap.DBSHeaderListAdapter.java", "BodyUseAPI": [], "Fixed commit": "015f03c7d5e6ceb4587d34f4b7a9c37b34af507b", "Url": "https://api.github.com/repos/daweibayu/bootstrap", "Date": "2016-06-24T06:55:11Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (headerView)) { if (0 == position) { return; }else { truePosition = position - 1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5298/buggy-version/bootstrap.src.main.java.com.daweibayu.bootstrap.DBSHeaderListAdapter.java", "BodyUseAPI": [], "Fixed commit": "015f03c7d5e6ceb4587d34f4b7a9c37b34af507b", "Url": "https://api.github.com/repos/daweibayu/bootstrap", "Date": "2016-06-24T06:55:11Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null != (footerView)) && (position == ((getItemCount()) - 1))) { return -2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5298/buggy-version/bootstrap.src.main.java.com.daweibayu.bootstrap.DBSHeaderListAdapter.java", "BodyUseAPI": [], "Fixed commit": "015f03c7d5e6ceb4587d34f4b7a9c37b34af507b", "Url": "https://api.github.com/repos/daweibayu/bootstrap", "Date": "2016-06-24T06:55:11Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((railo.runtime.tag.TagUtil.LOWER_CASE) == caseType) name = railo.commons.lang.StringUtil.toLowerCase(name); else if ((railo.runtime.tag.TagUtil.UPPER_CASE) == caseType) name = railo.commons.lang.StringUtil.toUpperCase(name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2625/buggy-version/railo-java.railo-core.src.railo.runtime.tag.TagUtil.java", "BodyUseAPI": [], "Fixed commit": "b588d7ca13be517aa9d7dd3db68027158a534783", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2012-04-12T08:56:02Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.igeek.service.impl.QualityCollectionMapper.getQualityCollection(spCollect.getUserCode(),spCollect.getUserId(),java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (java.util.Objects.isNull(qualityCollection)) { productCollectVo.setCount(0); }else { productCollectVo.setCount(qualityCollection.getCount()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5666/buggy-version/src.main.java.org.igeek.service.impl.IQualityCollectServiceImpl.java", "BodyUseAPI": ["org.igeek.service.impl.ProductCollectVo.setCount(qualityCollection.getCount())", "org.igeek.service.impl.QualityCollection.getCount()"], "Fixed commit": "ea2fb6dd3ad466ee9358fabf8241db8fb3be3639", "Url": "https://api.github.com/repos/gygesM/yellowChicken", "Date": "2017-07-09T09:13:26Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((hotspot_name.equals(null)) || (hotspot_psk.equals(null))) { android.util.Log.i(Constants.Tag, \"hotspot name or psk is null\"); return; }else if ((setWifiApEnabled) != null) { android.util.Log.i(Constants.Tag, \"We've alreayd have a hotspot in place\"); return; }else { netconfig.SSID = java.lang.String.format(\"\\\"%s\\\"\", hotspot_name); netconfig.preSharedKey = java.lang.String.format(\"\\\"%s\\\"\", hotspot_psk); netID = wifiManager.addNetwork(netconfig); wifiManager.disconnect(); wifiManager.enableNetwork(netID, true); wifiManager.reconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4770/buggy-version/app.src.main.java.app.wiplay.connection.WiPlayHotSpot.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.String)"], "Fixed commit": "957844b619946834fd9d590dc5d028235da60d35", "Url": "https://api.github.com/repos/puran157/WiPlay", "Date": "2016-01-01T06:49:48Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.gentics.cr.rest.xml.XmlContentRepository.FACETS_LIST_KEY.equals(entry)) && (bValue instanceof java.util.Map<?, ?>)) { value = new org.json.JSONObject(((java.util.Map<?, ?>) (bValue))).toString(); }else if (bValue instanceof java.util.Map<?, ?>) { java.util.Map<?, ?> map = ((java.util.Map<?, ?>) (bValue)); for (java.util.Map.Entry<?, ?> e : map.entrySet()) { java.lang.String key = e.getKey().toString(); java.lang.Object mValue = e.getValue(); if (mValue instanceof java.lang.String[]) { java.lang.String[] arr = ((java.lang.String[]) (mValue)); for (java.lang.String s : arr) { org.w3c.dom.Element elem = doc.createElement(key); org.w3c.dom.Text text = doc.createCDATASection(s); elem.appendChild(text); attrElement.appendChild(elem); } return; }else { org.w3c.dom.Element elem = doc.createElement(key); org.w3c.dom.Text text = doc.createCDATASection(mValue.toString()); elem.appendChild(text); attrElement.appendChild(elem); return; } } }else { value = bValue.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5463/buggy-version/contentconnector-core.src.main.java.com.gentics.cr.rest.xml.XmlContentRepository.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "1d2689503aabfc75eb0ef78b51778b354e62fc7b", "Url": "https://api.github.com/repos/elbird/contentconnector", "Date": "2015-10-27T14:24:43Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(action.eIsProxy())) { result.add(org.eclipse.xtext.resource.EObjectDescription.create(converter.toQualifiedName(action.getName()), action)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2173/buggy-version/org.lunifera.ecview.dsl.src.org.lunifera.ecview.dsl.scope.ViewActionReferenceScope.java", "BodyUseAPI": ["java.util.List<org.eclipse.xtext.resource.IEObjectDescription>.add(org.eclipse.xtext.resource.EObjectDescription.create(converter.toQualifiedName(action.getName()), action))", "org.lunifera.ecview.semantic.uisemantics.UxAction.getName()", "org.eclipse.xtext.resource.EObjectDescription.create(converter.toQualifiedName(action.getName()),org.lunifera.ecview.semantic.uisemantics.UxAction)", "org.eclipse.xtext.naming.IQualifiedNameConverter.toQualifiedName(action.getName())"], "Fixed commit": "bfd666ad0d0ea09dfdb806a667b62c46c9e13151", "Url": "https://api.github.com/repos/lunifera/lunifera-ecview-addons", "Date": "2015-03-19T11:39:36Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (newTree != null) { return newTree; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6427/buggy-version/app.src.main.java.com.example.jonny.myfirstapp.Node.java", "BodyUseAPI": [], "Fixed commit": "d41b7065bb3aa0a0ff4383b821c2285ce3907611", "Url": "https://api.github.com/repos/jranks123/diss", "Date": "2015-07-16T15:00:18Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (newTree != null) { return newTree; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6427/buggy-version/app.src.main.java.com.example.jonny.myfirstapp.Node.java", "BodyUseAPI": [], "Fixed commit": "d41b7065bb3aa0a0ff4383b821c2285ce3907611", "Url": "https://api.github.com/repos/jranks123/diss", "Date": "2015-07-16T15:00:18Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (user.isNew()) { java.lang.Number newKey = insertUser.executeAndReturnKey(parameterSource); user.setId(newKey.intValue()); }else { namedParameterJdbcTemplate.update((\"UPDATE users SET name=:name, email=:email, password=:password, \" + \"registered=:registered, enabled=:enabled, calories_per_day=:caloriesPerDay WHERE id=:id\"), parameterSource); namedParameterJdbcTemplate.update(\"DELETE FROM user_roles WHERE user_id = :user_id\", new org.springframework.jdbc.core.namedparam.MapSqlParameterSource(\"user_id\", user.getId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8614/buggy-version/src.main.java.ru.javawebinar.topjava.repository.jdbc.JdbcUserRepositoryImpl.java", "BodyUseAPI": ["ru.javawebinar.topjava.model.User.getId()", "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.update(java.lang.String,org.springframework.jdbc.core.namedparam.MapSqlParameterSource)", "ru.javawebinar.topjava.model.User.setId(int)"], "Fixed commit": "cfdba46f4cbfa647f78b6312d1f0a79f50287ec5", "Url": "https://api.github.com/repos/explegg/topjava", "Date": "2017-08-30T11:43:41Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_resultsTab) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/538/buggy-version/src-gwt.org.opencms.ade.galleries.client.ui.CmsGalleryDialog.java", "BodyUseAPI": [], "Fixed commit": "e41c28af8f65b2d010e9d5bba7d95b82a5a402ab", "Url": "https://api.github.com/repos/alkacon/opencms-core", "Date": "2012-12-11T15:40:31Z"},
{"Line": "=>479", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(conf.isIncludeFiles())) { data.setStartTab(GalleryTabId.cms_tab_vfstree); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/538/buggy-version/src.org.opencms.ade.galleries.CmsGalleryService.java", "BodyUseAPI": [], "Fixed commit": "e41c28af8f65b2d010e9d5bba7d95b82a5a402ab", "Url": "https://api.github.com/repos/alkacon/opencms-core", "Date": "2012-12-11T15:40:31Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getActivity().getSupportMediaController()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((controller != null) && ((controller.getMetadata()) != null)) { java.lang.String currentPlaying = controller.getMetadata().getDescription().getMediaId(); java.lang.String itemMusicId = com.example.android.uamp.utils.MediaIDHelper.extractMusicIDFromMediaID(item.getDescription().getMediaId()); if ((!(android.text.TextUtils.equals(currentPlaying, itemMusicId))) || ((controller.getPlaybackState().getState()) != (android.support.v4.media.session.PlaybackStateCompat.STATE_PLAYING))) { controller.getTransportControls().skipToQueueItem(item.getQueueId()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2520/buggy-version/mobile.src.main.java.com.example.android.uamp.ui.tv.TvPlaybackFragment.java", "BodyUseAPI": ["android.support.v4.media.session.MediaControllerCompat.getPlaybackState()", "controller.getPlaybackState().getState()", "android.support.v4.media.session.MediaControllerCompat.getTransportControls()", "controller.getMetadata().getDescription()", "android.support.v4.media.session.MediaControllerCompat.getMetadata()", "controller.getMetadata().getDescription().getMediaId()", "controller.getTransportControls().skipToQueueItem(item.getQueueId())"], "Fixed commit": "19c444ebcad798f72d5fb90ac7a87f970ab24e05", "Url": "https://api.github.com/repos/2050utopia/android-UniversalMusicPlayer", "Date": "2016-07-15T21:35:55Z"},
{"Line": "=>572", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (noBackup) { refreshParam.setNoBackup(java.lang.Boolean.TRUE.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8908/buggy-version/exportLibraries.xtremio.src.main.java.com.emc.storageos.xtremio.restapi.XtremIOV2Client.java", "BodyUseAPI": [], "Fixed commit": "4de64021591c8360fcd09145bac9ad9e8f60c711", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-03-23T01:09:34Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((module1.getSources().size()) != (module2.getSources().size())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1107/buggy-version/netbeans-gradle-plugin.src.main.java.org.netbeans.gradle.project.java.nodes.JavaDependenciesNode.java", "BodyUseAPI": [], "Fixed commit": "13978ce5cbb013d26ef3821d6cb20f8088abdf32", "Url": "https://api.github.com/repos/kelemen/netbeans-gradle-project", "Date": "2014-02-09T20:00:00Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.ndatasource.rdbms.RDBMSDataSourceReader.loadConfig(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((rdbmsConfiguration.getUsername()) != null) { connection = java.sql.DriverManager.getConnection(rdbmsConfiguration.getUrl(), rdbmsConfiguration.getUsername(), rdbmsConfiguration.getPassword()); }else { connection = java.sql.DriverManager.getConnection(rdbmsConfiguration.getUrl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3263/buggy-version/core.org.wso2.carbon.ndatasource.rdbms.src.main.java.org.wso2.carbon.ndatasource.rdbms.RDBMSDataSourceReader.java", "BodyUseAPI": ["org.wso2.carbon.ndatasource.rdbms.RDBMSConfiguration.getUrl()", "org.wso2.carbon.ndatasource.rdbms.RDBMSConfiguration.getUsername()", "org.wso2.carbon.ndatasource.rdbms.RDBMSConfiguration.getUrl()", "org.wso2.carbon.ndatasource.rdbms.RDBMSConfiguration.getPassword()", "java.sql.DriverManager.getConnection(rdbmsConfiguration.getUrl(),rdbmsConfiguration.getUsername(),rdbmsConfiguration.getPassword())", "java.sql.DriverManager.getConnection(rdbmsConfiguration.getUrl())"], "Fixed commit": "29ccff65e24e51e14fd074d607d60960134a07f6", "Url": "https://api.github.com/repos/madhawa-gunasekara/carbon4-kernel", "Date": "2015-09-29T18:34:45Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (connection != null) { try { connection.close(); } catch (java.sql.SQLException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3263/buggy-version/core.org.wso2.carbon.ndatasource.rdbms.src.main.java.org.wso2.carbon.ndatasource.rdbms.RDBMSDataSourceReader.java", "BodyUseAPI": ["java.sql.Connection.close()"], "Fixed commit": "29ccff65e24e51e14fd074d607d60960134a07f6", "Url": "https://api.github.com/repos/madhawa-gunasekara/carbon4-kernel", "Date": "2015-09-29T18:34:45Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((playerName) == null) || (playerName.equalsIgnoreCase(\"null\"))) { playerName = com.Ben12345rocks.AdvancedCore.Util.Misc.PlayerUtils.getInstance().getPlayerName(uuid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/108/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Objects.User.java", "BodyUseAPI": [], "Fixed commit": "67ef66d0bf5ca2a24a628f5064e274772022f5ae", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2016-12-04T00:43:28Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(possibleDuplicate.isVoided())) { if (((org.openmrs.util.OpenmrsUtil.nullSafeEqualsIgnoreCase(possibleDuplicate.getGivenName(), personName.getGivenName())) && (org.openmrs.util.OpenmrsUtil.nullSafeEqualsIgnoreCase(possibleDuplicate.getMiddleName(), personName.getMiddleName()))) && (org.openmrs.util.OpenmrsUtil.nullSafeEqualsIgnoreCase(possibleDuplicate.getFamilyName(), personName.getFamilyName()))) { errors.reject(\"Patient.duplicateName\", new java.lang.Object[]{ personName.getFullName() }, ((personName.getFullName()) + \" is a duplicate name for the same patient\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7729/buggy-version/omod.src.main.java.org.openmrs.web.controller.patient.ShortPatientFormValidator.java", "BodyUseAPI": ["org.openmrs.util.OpenmrsUtil.nullSafeEqualsIgnoreCase(possibleDuplicate.getMiddleName(),personName.getMiddleName())", "org.openmrs.util.OpenmrsUtil.nullSafeEqualsIgnoreCase(possibleDuplicate.getFamilyName(),personName.getFamilyName())", "org.openmrs.PersonName.getFamilyName()", "org.openmrs.PersonName.getMiddleName()", "org.openmrs.PersonName.getGivenName()", "org.openmrs.util.OpenmrsUtil.nullSafeEqualsIgnoreCase(possibleDuplicate.getGivenName(),personName.getGivenName())"], "Fixed commit": "f5599f344aef18cabe9c808e10cdbd1e970d53b3", "Url": "https://api.github.com/repos/rasanjanap/openmrs-module-legacyui", "Date": "2016-01-23T19:55:10Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) < 2) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/9051/buggy-version/src.com.stellaris.ScriptFile.java", "BodyUseAPI": [], "Fixed commit": "f40bd1c6e781c40f09c9912dc723d8ab9f61491a", "Url": "https://api.github.com/repos/WayOfModding/StellarisIDE", "Date": "2016-06-16T16:27:45Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((logMediator.getLogSeparator()) != null) { logSeparatorText.setText(logMediator.getLogSeparator()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5389/buggy-version/esb.org.wso2.developerstudio.eclipse.gmf.esb.diagram.src.org.wso2.developerstudio.eclipse.gmf.esb.diagram.custom.configure.ui.ConfigureLogMediatorDialog.java", "BodyUseAPI": ["org.wso2.developerstudio.eclipse.gmf.esb.LogMediator.getLogSeparator()", "org.eclipse.swt.widgets.Text.setText(logMediator.getLogSeparator())"], "Fixed commit": "0a03401607f97768dd47d04fb37267589ee0a2d6", "Url": "https://api.github.com/repos/kaviththiranga/developer-studio", "Date": "2014-05-08T04:51:52Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.orbotix.DualStackDiscoveryAgent.getInstance().isDiscovering())) { try { com.orbotix.DualStackDiscoveryAgent.getInstance().startDiscovery(this); } catch (com.orbotix.common.DiscoveryException e) { android.util.Log.e(\"Sphero\", e.getMessage()); e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3339/buggy-version/app.src.main.java.com.sphero.bigandroidbbq_sphero.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "cbe5623f1bb0fe892eef1120dab273700275ae2c", "Url": "https://api.github.com/repos/PaulTR/BigAndroidBBQSpheroSample", "Date": "2015-10-08T00:45:30Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p.slashing) { (p.s)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5766/buggy-version/megaman.src.Board.java", "BodyUseAPI": [], "Fixed commit": "6ecba2a2be0c0ce5073ae1d253ca9dc9b6c31309", "Url": "https://api.github.com/repos/rdeepak2002/Megaman", "Date": "2014-06-23T00:12:28Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.s) >= 4) { p.still = p.a2.getImage(); v = 420; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5766/buggy-version/megaman.src.Board.java", "BodyUseAPI": ["p.a2.getImage()"], "Fixed commit": "6ecba2a2be0c0ce5073ae1d253ca9dc9b6c31309", "Url": "https://api.github.com/repos/rdeepak2002/Megaman", "Date": "2014-06-23T00:12:28Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((portal) && (!(reachss))) { javax.swing.ImageIcon ssp = new javax.swing.ImageIcon(\"/home/deepak/IdeaProjects/Megaman/megaman/src/ichigobgs.jpg\"); img = ssp.getImage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5766/buggy-version/megaman.src.Board.java", "BodyUseAPI": [], "Fixed commit": "6ecba2a2be0c0ce5073ae1d253ca9dc9b6c31309", "Url": "https://api.github.com/repos/rdeepak2002/Megaman", "Date": "2014-06-23T00:12:28Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.s) >= 1) { p.still = p.a1.getImage(); v = 370; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5766/buggy-version/megaman.src.Board.java", "BodyUseAPI": ["p.a1.getImage()"], "Fixed commit": "6ecba2a2be0c0ce5073ae1d253ca9dc9b6c31309", "Url": "https://api.github.com/repos/rdeepak2002/Megaman", "Date": "2014-06-23T00:12:28Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.s) >= 19) { p.still = p.a3.getImage(); v = 455; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5766/buggy-version/megaman.src.Board.java", "BodyUseAPI": ["p.a3.getImage()"], "Fixed commit": "6ecba2a2be0c0ce5073ae1d253ca9dc9b6c31309", "Url": "https://api.github.com/repos/rdeepak2002/Megaman", "Date": "2014-06-23T00:12:28Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (sumOfAllProductValues == 0.0) { java.util.Arrays.fill(productDistributions[productIndex], 0.0); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8543/buggy-version/de.bund.bfr.knime.oasq.src.de.bund.bfr.knime.oasq.ScenarioSetup.java", "BodyUseAPI": [], "Fixed commit": "4fb12171b196f2e4f6f0b36f84334af1db342fcb", "Url": "https://api.github.com/repos/thoens/Other", "Date": "2014-04-17T10:49:35Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isNotBlank(this.query)) { this.query = modifyIfGarbledByTomcat(this.query); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6655/buggy-version/src.main.java.marubinotto.piggydb.ui.page.partial.AbstractFragments.java", "BodyUseAPI": ["marubinotto.piggydb.ui.page.partial.AbstractFragments.modifyIfGarbledByTomcat(java.lang.String)"], "Fixed commit": "87afe5e294e6331c5dbf673e487437a05c2e1327", "Url": "https://api.github.com/repos/marubinotto/Piggydb", "Date": "2013-05-25T07:11:23Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((res.length) == 3) { studyId = res[0]; treeId = res[1]; gitSha = res[2]; }else if ((res.length) == 2) { studyId = res[0]; treeId = res[1]; }else { studyId = res[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2495/buggy-version/src.main.java.opentree.GeneralUtils.java", "BodyUseAPI": [], "Fixed commit": "7304ff70c370be110ac65f8ad00eca31d518d6f4", "Url": "https://api.github.com/repos/OpenTreeOfLife/treemachine", "Date": "2014-09-16T12:08:13Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (target != null) { net.minecraft.client.renderer.GlStateManager.enableAlpha(); net.minecraft.client.renderer.GlStateManager.enableBlend(); net.minecraft.client.renderer.GlStateManager.enableNormalize(); if (!(target instanceof net.minecraft.entity.item.EntityFallingBlock)) { mc.getRenderManager().doRenderEntity(target, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F, false); }else { net.minecraft.entity.item.EntityFallingBlock blockEntity = ((net.minecraft.entity.item.EntityFallingBlock) (target)); net.minecraft.block.state.IBlockState state = blockEntity.getBlock(); net.minecraft.block.Block block = state.getBlock(); if (block.hasTileEntity(state)) { if ((state.getRenderType()) == (net.minecraft.util.EnumBlockRenderType.MODEL)) { mc.getRenderManager().doRenderEntity(target, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F, false); } net.minecraft.tileentity.TileEntity tile = player.world.getTileEntity(theArrow.getHit().getBlockPos()); if (tile != null) { if (TileEntityRendererDispatcher.instance.renderers.containsKey(tile.getClass())) { TileEntityRendererDispatcher.instance.render(tile, (-0.5), 0.0, (-0.5), event.getPartialTicks()); } } }else { mc.getRenderManager().doRenderEntity(target, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F, false); } } if (!(target instanceof net.minecraft.entity.item.EntityFallingBlock)) { net.minecraft.util.math.Vec3d[] path = theArrow.getPath(); net.minecraft.util.math.RayTraceResult actHitCoords = target.getEntityBoundingBox().grow(0.30000001192092896).calculateIntercept(path[((path.length) - 1)], theArrow.getPositionVector()); net.minecraft.client.renderer.GlStateManager.translate((-((target.posX) - (actHitCoords.hitVec.x))), (-((target.posY) - (actHitCoords.hitVec.y))), (-((target.posZ) - (actHitCoords.hitVec.z)))); }else { net.minecraft.util.math.BlockPos pos = hit.getBlockPos(); net.minecraft.client.renderer.GlStateManager.translate((-0.5), 0, (-0.5)); net.minecraft.client.renderer.GlStateManager.translate((-((pos.getX()) - (hit.hitVec.x))), (-((pos.getY()) - (hit.hitVec.y))), (-((pos.getZ()) - (hit.hitVec.z)))); } mc.getRenderManager().doRenderEntity(fakeArrow, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7330/buggy-version/src.main.java.com.wesserboy.overlays.renderers.BowAimHelp.java", "BodyUseAPI": ["mc.getRenderManager().doRenderEntity(net.minecraft.entity.Entity,float,float,float,float,float,boolean)", "net.minecraft.client.renderer.GlStateManager.translate((-((target.posX) - (actHitCoords.hitVec.x))),(-((target.posY) - (actHitCoords.hitVec.y))),(-((target.posZ) - (actHitCoords.hitVec.z))))", "mc.getRenderManager().doRenderEntity(net.minecraft.entity.Entity,float,float,float,float,float,boolean)", "target.getEntityBoundingBox().grow(double)", "target.getEntityBoundingBox().grow(0.30000001192092896).calculateIntercept(path[((path.length) - 1)],theArrow.getPositionVector())", "mc.getRenderManager().doRenderEntity(net.minecraft.entity.Entity,float,float,float,float,float,boolean)", "net.minecraft.entity.Entity.getEntityBoundingBox()"], "Fixed commit": "da6b01583e85e011dc950f10e3f98258852f4f5a", "Url": "https://api.github.com/repos/wesserboy/Overlays-MC-", "Date": "2017-09-06T22:28:00Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((responseObject instanceof java.lang.String) || (org.inigma.shared.tools.ClassUtil.instanceOf(responseObject, \"org.bson.types.ObjectId\"))) { responseObject = ('\"' + (responseObject.toString().replaceAll(\"\\\"\", \"\\\\\\\"\"))) + '\"'; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/619/buggy-version/inigma-web.src.main.java.org.inigma.shared.webapp.RestService.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "af10348809d3ba7e1c9a15dd46bcaadc0483b5a2", "Url": "https://api.github.com/repos/sepatel/inigma-shared", "Date": "2014-04-25T15:01:47Z"},
{"Line": "=>598", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activity.isFinishing()) == false) { dialog.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1742/buggy-version/src.com.avoscloud.chat.util.Utils.java", "BodyUseAPI": [], "Fixed commit": "41c91e0ab7dbe7ea30abf9d3ea65855aa1693bb1", "Url": "https://api.github.com/repos/leancloud/leanchat", "Date": "2014-10-22T03:36:12Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.totschnig.myexpenses.util.LicenceHandler.HAS_EXTENDED) { java.lang.String pro = getString(R.string.dialog_contrib_extended_gain_access); java.lang.CharSequence extendedList = org.totschnig.myexpenses.util.Utils.getContribFeatureLabelsAsFormattedList(ctx, feature, LicenceHandler.LicenceStatus.EXTENDED); message = android.text.TextUtils.concat(message, linefeed, pro, linefeed, extendedList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/9054/buggy-version/myExpenses.src.main.java.org.totschnig.myexpenses.dialog.ContribDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "fc271524a858caef181ab7855afa93a04c7007a3", "Url": "https://api.github.com/repos/mtotschnig/MyExpenses", "Date": "2017-02-28T22:14:02Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jbei.ice.lib.dao.hibernate.EntryDAO.getByRecordId(data.getRecordId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (linked == null) linked = saveTransferred(data);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/671/buggy-version/src.main.java.org.jbei.ice.lib.entry.EntryCreator.java", "BodyUseAPI": [], "Fixed commit": "9af74e20ed6a3a517be2111c1eeefe1234cb3492", "Url": "https://api.github.com/repos/JBEI/ice", "Date": "2015-02-25T20:59:28Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fci) != null) { for (int i = 0; i < ((fci.length) / 4); i++) { int pid = ((255 & (fci[((i * 4) + 0)])) << 8) | (255 & (fci[((i * 4) + 1)])); lostPackets.add(pid); for (int j = 0; j < 8; j++) if (0 != ((fci[((i * 4) + 2)]) & (1 << j))) lostPackets.add(((((pid + 1) + 8) + j) % (1 << 16))); for (int j = 0; j < 8; j++) if (0 != ((fci[((i * 4) + 3)]) & (1 << j))) lostPackets.add((((pid + 1) + j) % (1 << 16))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2222/buggy-version/src.org.jitsi.impl.neomedia.rtcp.NACKPacket.java", "BodyUseAPI": [], "Fixed commit": "5e048a09d55f6b38d8a67058422cdeb7c5bc2aae", "Url": "https://api.github.com/repos/jitsi/libjitsi", "Date": "2015-04-27T15:00:46Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.exists()) { file.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8937/buggy-version/app.src.main.java.com.zsx.util.Lib_Util_File.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "0b697ab8813a2a37363b9a5aa32318a2509b6624", "Url": "https://api.github.com/repos/z1986s8x11/androidLib", "Date": "2015-09-22T09:27:16Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((client.NettyClient.gameServClient) != null) { client.NettyClient.gameServClient.destroy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6733/buggy-version/src.client.NettyClient.java", "BodyUseAPI": [], "Fixed commit": "3088acca9f0b43f9e949fe8ad56d9ce239386599", "Url": "https://api.github.com/repos/bloodrizer/NamelessEngine", "Date": "2011-10-20T14:11:28Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pathOperator instanceof org.jsfr.json.path.ArrayIndex) { int index = ((org.jsfr.json.path.ArrayIndex) (pathOperator)).getArrayIndex(); if (((lowerBound) == null) && ((upperBound) == null)) { return true; }else if ((lowerBound) == null) { return index < (upperBound); }else if ((upperBound) == null) { return index >= (lowerBound); }else { return ((lowerBound) <= index) && (index < (upperBound)); } }else { throw new java.lang.IllegalStateException((\"unexpected path operator: \" + pathOperator)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8395/buggy-version/jsurfer-simple.src.main.java.org.jsfr.json.path.ArraySlicing.java", "BodyUseAPI": [], "Fixed commit": "0a170ccf30da09522a22b19ea5f8a6ea6e99a400", "Url": "https://api.github.com/repos/jsurfer/JsonSurfer", "Date": "2015-07-22T15:30:46Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((rs.getString(\"latlng\")) != null) consult.setLatlng(rs.getString(\"latlng\").replace(\"(\", \"\").replace(\")\", \"\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6482/buggy-version/Consultancy.src.com.consultancy.consultant.DAO.ConsultancyDAO.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "com.consultancy.consultant.model.ConsultancyModel.setLatlng(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)"], "Fixed commit": "94ee3c3ec9321a8424b34441e88e3522e1d0144c", "Url": "https://api.github.com/repos/dpshkhnl/consultancy", "Date": "2016-12-27T15:18:41Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pt.lsts.imc.IMCMessage.getUnitsOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((nb != null) && (!(\"enumerated\".equalsIgnoreCase(unit.toLowerCase())))) && (!(\"bitmask\".equalsIgnoreCase(unit.toLowerCase())))) return nb; else return \"\" + (m.getString(msgNames.get(columnIndex), false));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7288/buggy-version/src.pt.lsts.neptus.util.llf.IndexedLogTableModel.java", "BodyUseAPI": [], "Fixed commit": "416fbbfa896e556ca7035319d596bc0634e27342", "Url": "https://api.github.com/repos/LSTS/neptus", "Date": "2014-09-16T15:24:48Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tachyon.client.WritableBlockChannel.write(java.nio.ByteBuffer)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (r > 0) { mWritten.addAndGet(r); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7170/buggy-version/core.src.main.java.tachyon.client.CountingWritableBlockChannel.java", "BodyUseAPI": ["java.util.concurrent.atomic.AtomicLong.addAndGet(int)"], "Fixed commit": "7ab3e632d19ae4a941ebfe8cb5baf624e6af513d", "Url": "https://api.github.com/repos/dcapwell/tachyon", "Date": "2014-09-11T03:46:38Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["willigrossBubble.Function.deepCopy()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (copy.getExpression().trim().equals(\"x\")) { copy.setExpression(\"-x\"); copy.setExpressionRounded(\"-x\"); }else { boolean endsWithX = false; if (copy.getExpression().endsWith(\"x\")) endsWithX = true; final java.lang.String[] splitX = copy.getExpression().split(\"x\"); final java.lang.String[] splitXRounded = copy.getExpressionRounded().split(\"x\"); copy.setExpression(splitX[0]); copy.setExpressionRounded(splitXRounded[0]); for (int i = 1; i < (splitX.length); i++) { copy.setExpression((((copy.getExpression()) + \"(-x)\") + (splitX[i]))); copy.setExpressionRounded((((copy.getExpressionRounded()) + \"(-x)\") + (splitXRounded[i]))); } if (endsWithX) { copy.setExpression(((copy.getExpression()) + \"(-x)\")); copy.setExpressionRounded(((copy.getExpressionRounded()) + \"(-x)\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4216/buggy-version/Mathe.src.main.java.willigrossBubble.Function.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "willigrossBubble.Function.setExpression(java.lang.String)", "willigrossBubble.Function.getExpression()", "willigrossBubble.Function.setExpressionRounded(java.lang.String)", "willigrossBubble.Function.setExpression(java.lang.String)", "willigrossBubble.Function.getExpressionRounded()", "willigrossBubble.Function.setExpression(java.lang.String)", "willigrossBubble.Function.getExpressionRounded()", "willigrossBubble.Function.getExpressionRounded()", "willigrossBubble.Function.setExpression(java.lang.String)", "willigrossBubble.Function.getExpression()", "java.lang.String.endsWith(java.lang.String)", "willigrossBubble.Function.getExpression()", "willigrossBubble.Function.setExpressionRounded(java.lang.String)", "willigrossBubble.Function.setExpressionRounded(java.lang.String)", "willigrossBubble.Function.getExpression()", "willigrossBubble.Function.setExpressionRounded(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "2602f86ba5bde74703e86b9de9f45864e617a138", "Url": "https://api.github.com/repos/WilliGross/MathFunctions", "Date": "2016-09-26T18:54:08Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFirebaseAdapter) != null) { mFirebaseAdapter.cleanup(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/143/buggy-version/app.src.main.java.com.example.guest.iamhere.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e5b2eacbe6e2b650c0c12a40d406b329f0e07c5f", "Url": "https://api.github.com/repos/Atticus29/swarmReporter", "Date": "2017-06-28T19:03:54Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((parts[3].length()) > 0) { outputs.addAll(java.util.Arrays.asList(parts[3].split(\";\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/9132/buggy-version/Java.PathwayQuery.src.main.java.no.uib.model.Reaction.java", "BodyUseAPI": [], "Fixed commit": "6983d5f87f4eb5a7dd3651821bc976f1698003cf", "Url": "https://api.github.com/repos/bramburger/PathwayStructure", "Date": "2017-08-17T11:25:01Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((parts[1].length()) > 0) { catalysts.addAll(java.util.Arrays.asList(parts[1].split(\";\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/9132/buggy-version/Java.PathwayQuery.src.main.java.no.uib.model.Reaction.java", "BodyUseAPI": [], "Fixed commit": "6983d5f87f4eb5a7dd3651821bc976f1698003cf", "Url": "https://api.github.com/repos/bramburger/PathwayStructure", "Date": "2017-08-17T11:25:01Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((parts[2].length()) > 0) { inputs.addAll(java.util.Arrays.asList(parts[2].split(\";\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/9132/buggy-version/Java.PathwayQuery.src.main.java.no.uib.model.Reaction.java", "BodyUseAPI": [], "Fixed commit": "6983d5f87f4eb5a7dd3651821bc976f1698003cf", "Url": "https://api.github.com/repos/bramburger/PathwayStructure", "Date": "2017-08-17T11:25:01Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((parts[4].length()) > 0) { regulators.addAll(java.util.Arrays.asList(parts[4].split(\";\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/9132/buggy-version/Java.PathwayQuery.src.main.java.no.uib.model.Reaction.java", "BodyUseAPI": [], "Fixed commit": "6983d5f87f4eb5a7dd3651821bc976f1698003cf", "Url": "https://api.github.com/repos/bramburger/PathwayStructure", "Date": "2017-08-17T11:25:01Z"},
{"Line": "=>618", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (codeSystem != null) { result = ((ApplicationConstants.CODE_SYSTEM_MAP.get(codeSystem)) == null) ? false : true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2454/buggy-version/src.main.java.org.sitenv.service.ccda.smartscorecard.util.ApplicationUtil.java", "BodyUseAPI": ["ApplicationConstants.CODE_SYSTEM_MAP.get(java.lang.String)"], "Fixed commit": "b1c60ed13b8ba666afd93ef42d3d20746784316e", "Url": "https://api.github.com/repos/siteadmin/ccda-scorecard", "Date": "2017-03-22T22:25:38Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { navigate(nmct.jaspernielsmichielhein.watchfriends.view.HomeFragment.newInstance(), \"homeFragment\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5763/buggy-version/WatchFriends.app.src.main.java.nmct.jaspernielsmichielhein.watchfriends.view.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "4b6236d2fadbacbb6845f414d583120b6ae318d5", "Url": "https://api.github.com/repos/WatchFriends/Android", "Date": "2017-01-26T15:10:09Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["constantAssignments.get(con).getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (t instanceof de.tla2b.analysis.AbstractHasFollowers) { ((de.tla2b.analysis.AbstractHasFollowers) (t)).addFollower(con); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/485/buggy-version/src.main.java.de.tla2b.analysis.TypeChecker.java", "BodyUseAPI": [], "Fixed commit": "5d4d87b10fc79a5f887062ccdc8720b854b8b21e", "Url": "https://api.github.com/repos/hhu-stups/tla2bAST", "Date": "2014-05-10T12:26:13Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jazmin.server.file.FileClient.upload(java.lang.String,java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (realFileId == null) { throw new java.lang.IllegalStateException((\"upload failed \" + file)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7174/buggy-version/JazminServer.src.jazmin.driver.file.FileServerDriver.java", "BodyUseAPI": [], "Fixed commit": "63187b4cd848ac8338ab4a7db0870c4531865e0b", "Url": "https://api.github.com/repos/guooscar/JazminServer", "Date": "2016-05-22T15:11:06Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((te.getBlockType()) instanceof net.darkhax.bookshelf.block.BlockBasicChest) this.bindTexture(((net.darkhax.bookshelf.block.BlockBasicChest) (te.getBlockType())).getSingleTexture());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8653/buggy-version/src.main.java.net.darkhax.bookshelf.client.render.RenderBasicChest.java", "BodyUseAPI": ["net.darkhax.bookshelf.client.render.RenderBasicChest.bindTexture(((net.darkhax.bookshelf.block.BlockBasicChest) (te.getBlockType())).getSingleTexture())", "net.darkhax.bookshelf.tileentity.TileEntityBasicChest.getBlockType()", "((net.darkhax.bookshelf.block.BlockBasicChest) (te.getBlockType())).getSingleTexture()"], "Fixed commit": "6dd03f894b8e8c94e9168ed756a7568a1c4ef881", "Url": "https://api.github.com/repos/Darkhax-Minecraft/Bookshelf", "Date": "2016-11-27T19:47:44Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((te.getBlockType()) instanceof net.darkhax.bookshelf.block.BlockBasicChest) this.bindTexture(((net.darkhax.bookshelf.block.BlockBasicChest) (te.getBlockType())).getDoubleTexture());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8653/buggy-version/src.main.java.net.darkhax.bookshelf.client.render.RenderBasicChest.java", "BodyUseAPI": ["net.darkhax.bookshelf.tileentity.TileEntityBasicChest.getBlockType()", "net.darkhax.bookshelf.client.render.RenderBasicChest.bindTexture(((net.darkhax.bookshelf.block.BlockBasicChest) (te.getBlockType())).getDoubleTexture())", "((net.darkhax.bookshelf.block.BlockBasicChest) (te.getBlockType())).getDoubleTexture()"], "Fixed commit": "6dd03f894b8e8c94e9168ed756a7568a1c4ef881", "Url": "https://api.github.com/repos/Darkhax-Minecraft/Bookshelf", "Date": "2016-11-27T19:47:44Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (textureType == 1) { buildcraft.additionalpipes.textures.Textures.actionIconProvider.registerIcons(iconRegister); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7570/buggy-version/additionalpipes.textures.Textures.java", "BodyUseAPI": [], "Fixed commit": "e584dc48a690e44485df0ad891fb1b356a145c6c", "Url": "https://api.github.com/repos/tcooc/AdditionalPipesBC", "Date": "2013-11-02T00:27:49Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["username_et.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (username.equals(\"\")) { username_et.setError(\"Username cannot be empty.\"); }else if (username.contains(\" \")) { username_et.setError(\"Username cannot include empty space.\"); }else if (email.equals(\"\")) { email_et.setError(\"Email cannot be empty.\"); }else if (!(email.contains(\"@\"))) { email_et.setError(\"Email must include \\\"@\\\"\"); }else { java.lang.Thread thread = userController.new com.example.yunita.tradiogc.login.GetUserLoginThread(username); thread.start(); synchronized(thread) { try { thread.wait(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } if ((com.example.yunita.tradiogc.login.LoginActivity.USERLOGIN) != null) { android.widget.Toast toast = android.widget.Toast.makeText(mContext, \"This username already exists.\", Toast.LENGTH_SHORT); toast.show(); }else { try { com.example.yunita.tradiogc.user.User newUser = new com.example.yunita.tradiogc.user.User(); newUser.setUsername(username); newUser.setLocation(location.toUpperCase()); newUser.setEmail(email.toLowerCase()); newUser.setPhone(phone); newUser.setInventory(new com.example.yunita.tradiogc.inventory.Inventory()); com.example.yunita.tradiogc.login.LoginActivity.USERLOGIN = new com.example.yunita.tradiogc.user.User(); com.example.yunita.tradiogc.login.LoginActivity.USERLOGIN.setUsername(username); com.example.yunita.tradiogc.login.LoginActivity.USERLOGIN.setLocation(location.toUpperCase()); com.example.yunita.tradiogc.login.LoginActivity.USERLOGIN.setEmail(email.toLowerCase()); com.example.yunita.tradiogc.login.LoginActivity.USERLOGIN.setPhone(phone); com.example.yunita.tradiogc.login.LoginActivity.USERLOGIN.setInventory(new com.example.yunita.tradiogc.inventory.Inventory()); java.lang.Thread thread2 = loginController.new com.example.yunita.tradiogc.login.SignUpThread(newUser); thread2.start(); synchronized(thread2) { try { thread2.wait(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } } android.widget.Toast toast = android.widget.Toast.makeText(mContext, \"User account has been created\", Toast.LENGTH_SHORT); toast.show(); goToMain(); } catch (java.lang.Exception e) { e.printStackTrace(); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8076/buggy-version/TradioGC.app.src.main.java.com.example.yunita.tradiogc.login.LoginActivity.java", "BodyUseAPI": ["com.example.yunita.tradiogc.user.User.setUsername(java.lang.String)", "java.lang.String.contains(java.lang.String)", "com.example.yunita.tradiogc.user.User.setUsername(java.lang.String)"], "Fixed commit": "340ad4e126a19acef0408f805d6d3c6bd661faf4", "Url": "https://api.github.com/repos/CMPUT301F15T09/Cloud9", "Date": "2015-11-16T06:48:53Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<com.twillekes.portfolio.Picture>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((pic.getMetadata().getIsDiscarded()) != null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7374/buggy-version/src.com.twillekes.portfolio.Portfolio.java", "BodyUseAPI": [], "Fixed commit": "24c9d9faa9f51dc2de5bf70e99df084b6678f097", "Url": "https://api.github.com/repos/twillekes/PageMaker", "Date": "2012-04-23T03:24:59Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mapping.getTargetFiles(gendir.getAbsolutePath(), source.getPath()).iterator().next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(absoluteTarget.exists())) { getLog().debug((className + \" is a bridge. Don't add it to the pack file\")); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5832/buggy-version/maven-plugin.src.main.java.org.stjs.maven.AbstractSTJSMojo.java", "BodyUseAPI": [], "Fixed commit": "ac8fcdb55964cb93267a3a80ec7e1316ab0bbbe2", "Url": "https://api.github.com/repos/st-js/st-js", "Date": "2013-09-01T08:20:52Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (anItem == null) { return java.awt.Color.WHITE; }else if (anItem instanceof lisong_mechlab.model.item.Internal) { return lisong_mechlab.view.StyleManager.COLOR_BG_INTERNAL; }else if (anItem instanceof lisong_mechlab.model.item.Ammunition) { switch (((lisong_mechlab.model.item.Ammunition) (anItem)).getWeaponHardpointType()) { case AMS : return lisong_mechlab.view.StyleManager.COLOR_BG_AMS_AMMO; case BALLISTIC : return lisong_mechlab.view.StyleManager.COLOR_BG_BALLISTIC_AMMO; case MISSILE : return lisong_mechlab.view.StyleManager.COLOR_BG_MISSILE_AMMO; default : break; } }else if (anItem instanceof lisong_mechlab.model.item.HeatSink) { return lisong_mechlab.view.StyleManager.COLOR_BG_HS; }else if (anItem instanceof lisong_mechlab.model.item.Engine) { return lisong_mechlab.view.StyleManager.COLOR_BG_ENGINE; }else if (anItem.getName().equals(\"TAG\")) { return lisong_mechlab.view.StyleManager.COLOR_BG_ENERGY_ALT; }else if ((anItem instanceof lisong_mechlab.model.item.Weapon) || (anItem == (lisong_mechlab.model.item.ItemDB.ECM))) { return lisong_mechlab.view.StyleManager.getBgColorFor(anItem.getHardpointType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5804/buggy-version/src.lisong_mechlab.view.StyleManager.java", "BodyUseAPI": ["lisong_mechlab.model.item.Item.getHardpointType()", "lisong_mechlab.view.StyleManager.getBgColorFor(anItem.getHardpointType())", "anItem.getName().equals(java.lang.String)", "lisong_mechlab.model.item.Item.getName()"], "Fixed commit": "396ae629e5dea2313ec0b2f793862aa6560b8e6d", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2013-09-06T17:20:23Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (anItem == null) { return java.awt.Color.BLACK; }else if (anItem instanceof lisong_mechlab.model.item.Internal) { return java.awt.Color.GRAY.darker(); }else if (anItem instanceof lisong_mechlab.model.item.Ammunition) { switch (((lisong_mechlab.model.item.Ammunition) (anItem)).getWeaponHardpointType()) { case AMS : return java.awt.Color.BLACK; case BALLISTIC : return java.awt.Color.BLACK; case MISSILE : return java.awt.Color.BLACK; default : break; } }else if (anItem instanceof lisong_mechlab.model.item.HeatSink) { return java.awt.Color.BLACK; }else if (anItem instanceof lisong_mechlab.model.item.Engine) { return java.awt.Color.WHITE; }else if (anItem.getName().contains(\"TAG\")) { return java.awt.Color.WHITE; }else if ((anItem instanceof lisong_mechlab.model.item.Weapon) || (anItem == (lisong_mechlab.model.item.ItemDB.ECM))) { return lisong_mechlab.view.StyleManager.getFgColorFor(anItem.getHardpointType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5804/buggy-version/src.lisong_mechlab.view.StyleManager.java", "BodyUseAPI": ["lisong_mechlab.view.StyleManager.getFgColorFor(anItem.getHardpointType())", "lisong_mechlab.model.item.Item.getName()", "lisong_mechlab.model.item.Item.getHardpointType()", "anItem.getName().contains(java.lang.String)"], "Fixed commit": "396ae629e5dea2313ec0b2f793862aa6560b8e6d", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2013-09-06T17:20:23Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getStringSet(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((set != null) && (!(set.isEmpty()))) { return new java.util.HashSet<>(set); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4450/buggy-version/hipayfullservice-android.hipayfullservice.src.main.java.com.hipay.fullservice.core.utils.PaymentCardTokenDatabase.java", "BodyUseAPI": [], "Fixed commit": "f3d1b232fc8cf3db6decefeee308ade8e1fe5182", "Url": "https://api.github.com/repos/hipay/hipay-fullservice-sdk-android", "Date": "2017-01-11T16:46:37Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getStringSet(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((set != null) && (!(set.isEmpty()))) { return new java.util.HashSet<>(set); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4450/buggy-version/hipayfullservice-android.hipayfullservice.src.main.java.com.hipay.fullservice.core.utils.PaymentCardTokenDatabase.java", "BodyUseAPI": [], "Fixed commit": "f3d1b232fc8cf3db6decefeee308ade8e1fe5182", "Url": "https://api.github.com/repos/hipay/hipay-fullservice-sdk-android", "Date": "2017-01-11T16:46:37Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.fileName.endsWith(\".svg\")) return \"image/svg+xml\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4746/buggy-version/src.main.java.marubinotto.piggydb.model.entity.RawFragment.java", "BodyUseAPI": [], "Fixed commit": "0c3da20981437e8e01e5e6f2ca49f478be0b322f", "Url": "https://api.github.com/repos/marubinotto/Piggydb", "Date": "2012-06-28T13:26:28Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.tudelft.bw4t.client.gui.listeners.MessageSenderActionListener.findReceiver(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"all\".equals(receiver)) { receiver = \"allother\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8820/buggy-version/bw4t.bw4t-client.src.main.java.nl.tudelft.bw4t.client.gui.listeners.MessageSenderActionListener.java", "BodyUseAPI": [], "Fixed commit": "e990c851ee5ba87a0414b6635662c9220ea7d335", "Url": "https://api.github.com/repos/eishub/BW4T", "Date": "2014-09-08T10:05:56Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cn.fh.security.servlet.PageProtectionFilter.logger.isDebugEnabled()) { cn.fh.security.servlet.PageProtectionFilter.logger.debug(\"credential = {} \", isLoggedIn); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5691/buggy-version/src.main.java.cn.fh.security.servlet.PageProtectionFilter.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,boolean)"], "Fixed commit": "52bccb2c8e1c41f81b7a9ef3c7d6ec4db03628af", "Url": "https://api.github.com/repos/wanghongfei/web-security", "Date": "2015-10-21T09:44:07Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.wso2.carbon.gateway.httploadbalancer.algorithm.simple.StrictClientIPHashing.log.isDebugEnabled()) { org.wso2.carbon.gateway.httploadbalancer.algorithm.simple.StrictClientIPHashing.log.info((((\"host : \" + hostAndPort) + \" name :\") + (endpoint.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4337/buggy-version/carbon-gw-lb.components.org.wso2.carbon.gateway.httploadbalancer.src.main.java.org.wso2.carbon.gateway.httploadbalancer.algorithm.simple.StrictClientIPHashing.java", "BodyUseAPI": ["org.slf4j.Logger.info((((\"host : \" + hostAndPort) + \" name :\") + (endpoint.getName())))"], "Fixed commit": "b0aa3ad9940b49fe99381b2a4732910293fd8240", "Url": "https://api.github.com/repos/Venkat2811/product-http-load-balancer", "Date": "2016-06-22T08:13:11Z"},
{"Line": "=>479", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getDatabaseType()) == (com.oltpbenchmark.types.DatabaseType.ORACLE)) { java.sql.PreparedStatement text_seq = this.conn.prepareStatement(\"select text_seq.nextval from dual\"); text_seq.execute(); text_seq.close(); java.sql.PreparedStatement revision_seq = this.conn.prepareStatement(\"select revision_seq.nextval from dual\"); revision_seq.execute(); revision_seq.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/83/buggy-version/src.com.oltpbenchmark.benchmarks.wikipedia.WikipediaLoader.java", "BodyUseAPI": [], "Fixed commit": "18cb57cd707b30555a01ea47295319f73a28f7fa", "Url": "https://api.github.com/repos/bonii/oltpbench", "Date": "2014-12-03T10:21:58Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rapidoid.db.DB.getIfExists(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (entity == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/566/buggy-version/rapidoid-app.src.main.java.org.rapidoid.app.AppPageGeneric.java", "BodyUseAPI": [], "Fixed commit": "2e4f5dfa218bc6fb30cf88b17f05fd2bcf1c647b", "Url": "https://api.github.com/repos/rapidoid/rapidoid", "Date": "2014-12-20T20:04:57Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lib) == null) lib = new org.kyupi.graph.Library();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2689/buggy-version/src.org.kyupi.apps.App.java", "BodyUseAPI": [], "Fixed commit": "826d13cb8d36596623180d7d6d03f5e0dbef59ba", "Url": "https://api.github.com/repos/s-holst/kyupi", "Date": "2016-02-09T13:24:43Z"},
{"Line": "=>588", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == (IntersectType.ALT)) { return genotypes; }else if (commonAlleleAcrossAllSamples(var.getAlternateAlleles(), org.broadinstitute.variant.variantcontext.GenotypesContext.create(genotypes), null)) { return genotypes; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7708/buggy-version/src.main.java.vtc.tools.setoperator.SetOperator.java", "BodyUseAPI": [], "Fixed commit": "e804bebc65761c52c969632c1ad9f482caf55f1e", "Url": "https://api.github.com/repos/mebbert/VariantToolChest", "Date": "2014-09-29T21:15:44Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["at.becast.youploader.gui.FrmMain.getCmbAccount().getSelectedItem()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (acc != null) { pm.save(acc.getValue()); pm.load(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2937/buggy-version/src.main.java.at.becast.youploader.youtube.playlists.PlaylistUpdater.java", "BodyUseAPI": ["at.becast.youploader.account.AccountType.getValue()", "at.becast.youploader.youtube.playlists.PlaylistManager.save(acc.getValue())"], "Fixed commit": "18ef386df0182325193d7045ea4c16efd103b257", "Url": "https://api.github.com/repos/becast/YouPloader", "Date": "2016-10-26T16:39:33Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (sspeed != null) { at.becast.youploader.gui.FrmMain.speed = java.lang.Integer.parseInt(sspeed); }else { at.becast.youploader.gui.FrmMain.speed = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2937/buggy-version/src.main.java.at.becast.youploader.gui.FrmMain.java", "BodyUseAPI": [], "Fixed commit": "18ef386df0182325193d7045ea4c16efd103b257", "Url": "https://api.github.com/repos/becast/YouPloader", "Date": "2016-10-26T16:39:33Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Main.net) != null) Main.net.quit();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7472/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "a30e1828d1874dd2a0835fd89897f6c53c8861d1", "Url": "https://api.github.com/repos/thechessguy/stupidChess", "Date": "2016-12-01T12:24:38Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((m_op) instanceof net.imglib2.ops.img.BufferedOperation) { final net.imglib2.ops.buffer.BufferFactory<net.imglib2.RandomAccessibleInterval<V>> bufferFactory = ((net.imglib2.ops.img.BufferedOperation<net.imglib2.RandomAccessibleInterval<V>>) (m_op)).bufferFactory(); ((net.imglib2.ops.img.BufferedOperation<net.imglib2.RandomAccessibleInterval<V>>) (m_op)).setBufferFactory(new net.imglib2.ops.buffer.BufferFactory<net.imglib2.RandomAccessibleInterval<V>>() { @java.lang.Override public net.imglib2.RandomAccessibleInterval<V> instantiate() { return net.imglib2.ops.operation.subset.views.SubsetViews.iterableSubsetView(bufferFactory.instantiate(), m_outIntervals[0]); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/746/buggy-version/imglib2.ops.src.main.java.net.imglib2.ops.operation.randomaccessibleinterval.unary.IterateUnaryOperation.java", "BodyUseAPI": [], "Fixed commit": "05ab8d5396c2a2dc4d1ee1b2a4d7a5a521182a22", "Url": "https://api.github.com/repos/imagej/imglib", "Date": "2012-11-03T16:53:47Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((setCurrentGraphInThreadLocal()) != null) { if ((getLabel()) == null) return ((((((((com.tinkerpop.blueprints.util.StringFactory.E) + (com.tinkerpop.blueprints.util.StringFactory.L_BRACKET)) + (getId())) + (com.tinkerpop.blueprints.util.StringFactory.R_BRACKET)) + (com.tinkerpop.blueprints.util.StringFactory.L_BRACKET)) + (getVertex(Direction.OUT).getId())) + (com.tinkerpop.blueprints.util.StringFactory.ARROW)) + (getVertex(Direction.IN).getId())) + (com.tinkerpop.blueprints.util.StringFactory.R_BRACKET); return com.tinkerpop.blueprints.util.StringFactory.edgeString(this); }else return ((com.tinkerpop.blueprints.util.StringFactory.E) + (com.tinkerpop.blueprints.util.StringFactory.L_BRACKET)) + (getId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3097/buggy-version/graphdb.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientEdge.java", "BodyUseAPI": [], "Fixed commit": "17f9ddd5fd7c123b4bfbe7ba97309a138dd03cbd", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-11-07T09:23:20Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (target.visible()) followUpActions.add(actionFactory.createUseWithSpecificItemAction(item, target));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/252/buggy-version/AndroidFree.src.main.java.com.chewielouie.textadventure.action.UseWith.java", "BodyUseAPI": ["java.util.List<com.chewielouie.textadventure.action.Action>.add(actionFactory.createUseWithSpecificItemAction(item, target))", "com.chewielouie.textadventure.action.ActionFactory.createUseWithSpecificItemAction(com.chewielouie.textadventure.item.Item,com.chewielouie.textadventure.item.Item)"], "Fixed commit": "66a2763241232f4c0c24161dc3119a15625aedc4", "Url": "https://api.github.com/repos/julianchurchill/text-adventure", "Date": "2013-10-13T20:45:21Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.getActivity().findViewById(R.id.questionListView)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (qList != null) { qList.invalidate(); qList.setAdapter(new com.ualberta.team17.view.ListFragment.QuestionListAdapter(this.getActivity(), R.id.questionListView, mIR.getCurrentResults())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1171/buggy-version/moqa.src.com.ualberta.team17.view.ListFragment.java", "BodyUseAPI": ["android.widget.ListView.setAdapter(com.ualberta.team17.view.ListFragment.QuestionListAdapter)", "android.widget.ListView.invalidate()"], "Fixed commit": "5cf6c0ace4ecf1bc1d783cf54986939819399f38", "Url": "https://api.github.com/repos/j-rewerts/Team17Project", "Date": "2014-11-19T23:41:22Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rosuda.JRI.RVector.getNames()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (names == null) { return new com.cwoodson.pigaddons.rpig.rtypes.RList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/9042/buggy-version/src.main.java.com.cwoodson.pigaddons.rpig.rutils.RJriConnector.java", "BodyUseAPI": [], "Fixed commit": "ddde4b34a4b78ee9d017269531324820f3d5fdbe", "Url": "https://api.github.com/repos/cd-wood/pigaddons", "Date": "2013-06-13T21:06:56Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.teavm.model.util.ProgramReader.basicBlockAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (block == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5290/buggy-version/teavm-core.src.main.java.org.teavm.model.util.ListingBuilder.java", "BodyUseAPI": [], "Fixed commit": "8cd134bc901a721d0695e820c21a80e8f47a609a", "Url": "https://api.github.com/repos/konsoletyper/teavm", "Date": "2015-08-01T09:57:43Z"},
{"Line": "=>680", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.teavm.model.ValueType.getKind()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sourceKind == (org.teavm.model.PrimitiveType.BOOLEAN)) { switch (targetKind) { case BOOLEAN : case BYTE : case SHORT : case INTEGER : case CHARACTER : return pe.var(value.getVariable(), type); default : throw new org.teavm.model.emit.EmitException((((\"Can't convert \" + (this.type)) + \" to \") + type)); } }else if (targetKind == (org.teavm.model.PrimitiveType.BOOLEAN)) { switch (sourceKind) { case BOOLEAN : case BYTE : case SHORT : case INTEGER : case CHARACTER : return pe.var(value.getVariable(), type); default : throw new org.teavm.model.emit.EmitException((((\"Can't convert \" + (this.type)) + \" to \") + type)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5290/buggy-version/teavm-core.src.main.java.org.teavm.model.emit.ValueEmitter.java", "BodyUseAPI": [], "Fixed commit": "8cd134bc901a721d0695e820c21a80e8f47a609a", "Url": "https://api.github.com/repos/konsoletyper/teavm", "Date": "2015-08-01T09:57:43Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (failed == (servers.size())) { java.lang.System.out.println(\"Was not handled.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/182/buggy-version/src.client.Client.java", "BodyUseAPI": [], "Fixed commit": "54c8441f1ffcb70eb4dc41d542e034f231d12e85", "Url": "https://api.github.com/repos/scobb/360P_4", "Date": "2015-03-26T12:19:17Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getWhitespaceFollowedNode(com.puppycrawl.tools.checkstyle.api.DetailAST)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((whitespaceFollowedAst.getNextSibling()) == null) || ((whitespaceFollowedAst.getNextSibling().getType()) != (com.puppycrawl.tools.checkstyle.api.TokenTypes.ANNOTATIONS))) { final int whitespaceColumnNo = com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getPositionAfter(whitespaceFollowedAst); final int whitespaceLineNo = whitespaceFollowedAst.getLineNo(); if (hasTrailingWhitespace(ast, whitespaceColumnNo, whitespaceLineNo)) { log(whitespaceLineNo, whitespaceColumnNo, com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.MSG_KEY, whitespaceFollowedAst.getText()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/9087/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getPositionAfter(com.puppycrawl.tools.checkstyle.api.DetailAST)", "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.log(int,int,java.lang.String,whitespaceFollowedAst.getText())", "com.puppycrawl.tools.checkstyle.api.DetailAST.getLineNo()", "com.puppycrawl.tools.checkstyle.api.DetailAST.getText()"], "Fixed commit": "5ec208b7572ed3c750dafcb7067b4c54856f5090", "Url": "https://api.github.com/repos/sergileon/checkstyle", "Date": "2017-09-05T11:43:02Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opennms.web.rest.AssetRecordResource.getAssetRecord(org.opennms.netmgt.model.OnmsNode)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((assetRecord.getGeolocation()) == null) { assetRecord.setGeolocation(new org.opennms.netmgt.model.OnmsGeolocation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3402/buggy-version/opennms-webapp.src.main.java.org.opennms.web.rest.AssetRecordResource.java", "BodyUseAPI": ["org.opennms.netmgt.model.OnmsAssetRecord.setGeolocation(org.opennms.netmgt.model.OnmsGeolocation)"], "Fixed commit": "4520413431d94462f3fa952418bb172d73750e08", "Url": "https://api.github.com/repos/OpenNMS/opennms", "Date": "2015-04-04T01:45:23Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opennms.netmgt.dao.api.NodeDao.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((node.getAssetRecord().getGeolocation()) == null) { node.getAssetRecord().setGeolocation(new org.opennms.netmgt.model.OnmsGeolocation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3402/buggy-version/opennms-webapp.src.main.java.org.opennms.web.rest.NodeRestService.java", "BodyUseAPI": ["org.opennms.netmgt.model.OnmsNode.getAssetRecord()", "node.getAssetRecord().setGeolocation(org.opennms.netmgt.model.OnmsGeolocation)"], "Fixed commit": "4520413431d94462f3fa952418bb172d73750e08", "Url": "https://api.github.com/repos/OpenNMS/opennms", "Date": "2015-04-04T01:45:23Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.CMPUT301W15T02.teamtoapp.Model.Claim.getDestinations()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((destStringTuple.size()) != 0) { allDest += destStringTuple.get(i).destination; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3567/buggy-version/TeamToApp.src.com.CMPUT301W15T02.teamtoapp.Adapters.ClaimantClaimListAdapter.java", "BodyUseAPI": ["java.util.ArrayList<com.CMPUT301W15T02.teamtoapp.Model.StringTuple>.get(int)"], "Fixed commit": "33a71241ce1776d61c02496891f034390d0017bc", "Url": "https://api.github.com/repos/CMPUT301W15T02/TeamTo", "Date": "2015-03-14T23:21:12Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(pause)) pauseGame();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/624/buggy-version/app.src.main.java.it.unina.is2project.sensorgames.pong.GamePong.java", "BodyUseAPI": [], "Fixed commit": "0289a5cc87f1212a7e8947952e578a0c652014d0", "Url": "https://api.github.com/repos/Androidiani/Sensor-Ball", "Date": "2015-04-14T13:06:02Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (MovieModuleManager.MOVIE_SETTINGS.getMovieSubtitleScrapers().contains(scraper.getId())) { model.addCheck(scraper); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/73/buggy-version/src.main.java.org.tinymediamanager.ui.movies.dialogs.MovieSubtitleChooserDialog.java", "BodyUseAPI": [], "Fixed commit": "0d743f02c415192dff02d8ae6eef172168f3129b", "Url": "https://api.github.com/repos/tinyMediaManager/tinyMediaManager", "Date": "2016-05-02T11:41:32Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((alertDialog) != null) { alertDialog.cancel(); this.onCreate(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8750/buggy-version/GoogleMapProject.src.il.ac.shenkar.cadan.LoadingActivity.java", "BodyUseAPI": [], "Fixed commit": "35aaa535a6c0152aae551007c2f99b08e5924997", "Url": "https://api.github.com/repos/cojalvo/CampusInProject", "Date": "2013-11-11T12:55:12Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mDanmakuPool.waitIfNeed()) { currentTime = android.os.SystemClock.elapsedRealtime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6395/buggy-version/library.src.main.java.org.zhgeaits.zgdanmaku.controller.ZGDanmakuDispatcher.java", "BodyUseAPI": [], "Fixed commit": "9450672d2e7d593637b9087545b4842f7247855f", "Url": "https://api.github.com/repos/zhgeaits/ZGDanmaku", "Date": "2016-08-03T10:34:32Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(Protocol.SPLIT)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((inputArray.length) >= 2) { java.lang.String message = (\"Player \" + (inputArray[1])) + \" joined the room\"; view.print(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8041/buggy-version/client.Client.java", "BodyUseAPI": [], "Fixed commit": "045fe9a187ea16d9e8956ccc8e9ddff195a84512", "Url": "https://api.github.com/repos/JJK96/qwirkle-25", "Date": "2016-01-20T14:35:15Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (omelet.driver.DriverManager.getBrowserConf().getDataSource().equals(DataSource.XmlSuiteData.toString())) { if ((omelet.driver.DriverManager.getDriver()) != null) { cleanupDriver(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2197/buggy-version/omelet-core.src.main.java.omelet.driver.DriverInitialization.java", "BodyUseAPI": [], "Fixed commit": "0c488bf83fe811cb5867a1eccf028b45f1d5a3ef", "Url": "https://api.github.com/repos/springernature/omelet", "Date": "2015-10-13T15:48:39Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (commentEnd == (-1)) { commentEnd = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7661/buggy-version/pandaTVBarrage.src.crawler.MessageHandler.java", "BodyUseAPI": [], "Fixed commit": "ac9a4b80e4c266fc955884cbbf2632bb4bc51938", "Url": "https://api.github.com/repos/Albert-Chan/HG", "Date": "2016-08-26T19:02:24Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.docdoku.core.configuration.ConfigSpec.filterConfigSpec(com.docdoku.server.products.PartMaster)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (partIteration != null) { checkCyclicAssembly(workspaceId, root, partIteration.getComponents(), ci, locale); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8072/buggy-version/docdoku-server.docdoku-server-ejb.src.main.java.com.docdoku.server.products.ProductBaselineManagerBean.java", "BodyUseAPI": ["com.docdoku.server.products.ProductBaselineManagerBean.checkCyclicAssembly(java.lang.String,com.docdoku.server.products.PartMaster,partIteration.getComponents(),com.docdoku.core.configuration.ConfigSpec,java.util.Locale)", "com.docdoku.server.products.PartIteration.getComponents()"], "Fixed commit": "15790938b3bf6fb95b0768dbc4dbca246408c557", "Url": "https://api.github.com/repos/docdoku/docdoku-plm", "Date": "2015-03-12T15:09:21Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((paths) != null) { paths.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7672/buggy-version/app.src.main.java.com.mapath.android.gridpic.activitys.PicGridViewMultiSelectWithCameraActivity.java", "BodyUseAPI": [], "Fixed commit": "e2d670c593a8ac7d295f6fddffffaad71fea3019", "Url": "https://api.github.com/repos/squallzhou/picgrid", "Date": "2015-10-17T15:42:19Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!rowIsUnique) { materializedRow[materializedPLIs.length] = uniqueValueCount; updateMap(map, rowCount, new it.unimi.dsi.fastutil.ints.IntArrayList(materializedRow)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8476/buggy-version/algorithm_helper.src.main.java.de.metanome.algorithm_helper.data_structures.PositionListIndex.java", "BodyUseAPI": [], "Fixed commit": "7d62064c99c4230a5ab31085ab86c64ced38d32f", "Url": "https://api.github.com/repos/jakob-zwiener/Metanome-Data-Structures", "Date": "2015-07-07T09:53:31Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (duration != null) { plugin.getServer().getScheduler().scheduleSyncDelayedTask(plugin, new net.aufdemrand.denizen.commands.core.SwitchCommandRunnable<org.bukkit.Location>(interactLocation) { @java.lang.Override public void run(org.bukkit.Location interactLocation) { if (interactLocation != null) { if ((interactLocation.getBlock().getType()) == (org.bukkit.Material.LEVER)) { org.bukkit.World theWorld = interactLocation.getWorld(); net.minecraft.server.Block.LEVER.interact(((org.bukkit.craftbukkit.CraftWorld) (theWorld)).getHandle(), interactLocation.getBlockX(), interactLocation.getBlockY(), interactLocation.getBlockZ(), null); return; }else if ((interactLocation.getBlock().getType()) == (org.bukkit.Material.STONE_BUTTON)) { org.bukkit.World theWorld = interactLocation.getWorld(); net.minecraft.server.Block.STONE_BUTTON.interact(((org.bukkit.craftbukkit.CraftWorld) (theWorld)).getHandle(), interactLocation.getBlockX(), interactLocation.getBlockY(), interactLocation.getBlockZ(), null); return; }else if ((interactLocation.getBlock().getType()) == (org.bukkit.Material.STONE_PLATE)) { org.bukkit.World theWorld = interactLocation.getWorld(); net.minecraft.server.Block.STONE_PLATE.interact(((org.bukkit.craftbukkit.CraftWorld) (theWorld)).getHandle(), interactLocation.getBlockX(), interactLocation.getBlockY(), interactLocation.getBlockZ(), null); return; }else if ((interactLocation.getBlock().getType()) == (org.bukkit.Material.WOOD_PLATE)) { org.bukkit.World theWorld = interactLocation.getWorld(); net.minecraft.server.Block.WOOD_PLATE.interact(((org.bukkit.craftbukkit.CraftWorld) (theWorld)).getHandle(), interactLocation.getBlockX(), interactLocation.getBlockY(), interactLocation.getBlockZ(), null); return; }else { if (plugin.debugMode) plugin.getLogger().log(java.util.logging.Level.INFO, ((\"...unusable block at this location! Found \" + (interactLocation.getBlock().getType().name())) + \".\")); } } } }, (duration * 20)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6463/buggy-version/src.main.java.net.aufdemrand.denizen.commands.core.SwitchCommand.java", "BodyUseAPI": ["plugin.getServer().getScheduler().scheduleSyncDelayedTask(net.aufdemrand.denizen.commands.core.SwitchCommand,net.aufdemrand.denizen.commands.core.SwitchCommandRunnable<org.bukkit.Location>,int)"], "Fixed commit": "cb9e58b5e3967d1ee89e314426de4bb45427677c", "Url": "https://api.github.com/repos/aufdemrand/Denizen", "Date": "2012-08-02T11:29:23Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.EditText.getText()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((!(text.toString().contains(\".\"))) && (btn == (dot))) || (btn != (dot))) { display.setText(text.append(btn.getText())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7943/buggy-version/app.src.main.java.layout.CalcAdvancedFragment.java", "BodyUseAPI": ["android.widget.EditText.setText(text.append(btn.getText()))", "android.text.Editable.append(btn.getText())", "android.widget.Button.getText()"], "Fixed commit": "259af33f43561c168bdd15723d21c61e5a7a4518", "Url": "https://api.github.com/repos/Quisy/CalculatorAndroid", "Date": "2016-04-10T20:45:04Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.EditText.getText()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((!(text.toString().contains(\".\"))) && (btn == (dot))) || (btn != (dot))) { display.setText(text.append(btn.getText())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7943/buggy-version/app.src.main.java.layout.CalcSimpleFragment.java", "BodyUseAPI": ["android.widget.EditText.setText(text.append(btn.getText()))", "android.text.Editable.append(btn.getText())", "android.widget.Button.getText()"], "Fixed commit": "259af33f43561c168bdd15723d21c61e5a7a4518", "Url": "https://api.github.com/repos/Quisy/CalculatorAndroid", "Date": "2016-04-10T20:45:04Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (geometry instanceof com.vividsolutions.jts.geom.MultiLineString) { org.geotools.gml3.simple.MultiLineStringEncoder multiLineString = new org.geotools.gml3.simple.MultiLineStringEncoder(encoder, gmlPrefix, true); multiLineString.encode(((com.vividsolutions.jts.geom.MultiLineString) (geometry)), atts, handler); }else if (geometry instanceof com.vividsolutions.jts.geom.MultiPoint) { org.geotools.gml3.simple.MultiPointEncoder multiPoint = new org.geotools.gml3.simple.MultiPointEncoder(encoder, gmlPrefix); multiPoint.encode(((com.vividsolutions.jts.geom.MultiPoint) (geometry)), atts, handler); }else if (geometry instanceof com.vividsolutions.jts.geom.MultiPolygon) { org.geotools.gml3.simple.MultiPolygonEncoder multiPolygon = new org.geotools.gml3.simple.MultiPolygonEncoder(encoder, gmlPrefix); multiPolygon.encode(((com.vividsolutions.jts.geom.MultiPolygon) (geometry)), atts, handler); }else if (geometry instanceof com.vividsolutions.jts.geom.LinearRing) { org.geotools.gml3.simple.LinearRingEncoder linearRing = new org.geotools.gml3.simple.LinearRingEncoder(encoder, gmlPrefix); linearRing.encode(((com.vividsolutions.jts.geom.LinearRing) (geometry)), atts, handler); }else if ((((geometry instanceof org.geotools.geometry.jts.CircularString) || (geometry instanceof org.geotools.geometry.jts.CompoundCurve)) || (geometry instanceof org.geotools.geometry.jts.CircularRing)) || (geometry instanceof org.geotools.geometry.jts.CompoundRing)) { org.geotools.gml3.simple.CurveEncoder curve = new org.geotools.gml3.simple.CurveEncoder(encoder, gmlPrefix); curve.encode(((com.vividsolutions.jts.geom.LineString) (geometry)), atts, handler); }else { throw new java.lang.Exception((\"Unsupported geometry \" + (geometry.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8690/buggy-version/modules.extension.xsd.xsd-gml3.src.main.java.org.geotools.gml3.simple.GenericGeometryEncoder.java", "BodyUseAPI": ["com.vividsolutions.jts.geom.Geometry.toString()"], "Fixed commit": "96640760b97d11e2b5c588e6c8ffcdec22954fe3", "Url": "https://api.github.com/repos/rishg/geotools", "Date": "2015-12-08T20:40:09Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["scouter.client.stack.utils.ResourceUtils.selectFileDialog(org.eclipse.swt.widgets.Composite,java.lang.String,java.lang.String[],java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (fileName != null) { scouter.client.stack.base.PreferenceManager.get().setCurrentParserConfig(fileName); displayContent(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3713/buggy-version/scouter.client.src.scouter.client.stack.base.MainProcessor.java", "BodyUseAPI": ["scouter.client.stack.base.PreferenceManager.get().setCurrentParserConfig(java.lang.String)"], "Fixed commit": "37b91b03f004d6fe62a59ac8a66f83b7ee96e3f6", "Url": "https://api.github.com/repos/scouter-project/scouter", "Date": "2015-08-22T03:47:45Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((text.length()) > 1) throw new org.javia.arity.SyntaxException(); else if ((text.length()) == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4593/buggy-version/src.com.android2.calculator3.Logic.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "89b8275282504965650c90d39a000cdbfe5ffdb0", "Url": "https://api.github.com/repos/Xlythe/android_packages_apps_Calculator", "Date": "2013-01-30T21:27:15Z"},
{"Line": "=>809", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dima.model.businesslogic.datamodel.Message.getPort()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(port.isSampling())) && (!(port.isQueuing()))) { port = msg.getPairedMsg().getPort(); if ((!(port.isSampling())) && (!(port.isQueuing()))) { dima.model.businesslogic.ICDConverter.log.warn(\"%%% Strange!\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/199/buggy-version/src.main.java.dima.model.businesslogic.ICDConverter.java", "BodyUseAPI": [], "Fixed commit": "b314579974e07de2853b982138ddb3eaaed79a61", "Url": "https://api.github.com/repos/yind07/afdxTool", "Date": "2017-12-29T10:42:50Z"},
{"Line": "=>3003", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (values == null) { values = new java.util.ArrayList<java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/367/buggy-version/DNA.src.dna.export.Exporter.java", "BodyUseAPI": [], "Fixed commit": "d6fe3e422e569aefe17a3b4708357e84f47fb409", "Url": "https://api.github.com/repos/leifeld/dna", "Date": "2017-02-19T18:41:50Z"},
{"Line": "=>1393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.lang.String>.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((statementType.getVariables().get(key)) == null) { throw new java.lang.NullPointerException(((\"'\" + key) + \"' is not a statement-level variable and cannot be excluded.\")); }else if ((statementType.getVariables().get(key).equals(\"boolean\")) || (statementType.getVariables().get(key).equals(\"integer\"))) { string = java.lang.String.valueOf(s.getValues().get(key)); }else { string = ((java.lang.String) (s.getValues().get(key))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/367/buggy-version/DNA.src.dna.export.Exporter.java", "BodyUseAPI": ["statementType.getVariables().get(key).equals(java.lang.String)", "statementType.getVariables().get(java.lang.String)", "s.getValues().get(java.lang.String)", "statementType.getVariables().get(java.lang.String)", "dna.dataStructures.StatementType.getVariables()", "dna.dataStructures.StatementType.getVariables()", "statementType.getVariables().get(key).equals(java.lang.String)", "java.lang.String.valueOf(s.getValues().get(key))", "s.getValues().get(java.lang.String)"], "Fixed commit": "d6fe3e422e569aefe17a3b4708357e84f47fb409", "Url": "https://api.github.com/repos/leifeld/dna", "Date": "2017-02-19T18:41:50Z"},
{"Line": "=>623", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["opendap.viewers.ViewersServlet.getWebStartApplicationsForDataset(org.jdom.Document)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (jwsHandlers.isEmpty()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/804/buggy-version/src.opendap.viewers.ViewersServlet.java", "BodyUseAPI": [], "Fixed commit": "8a902d37758256467066e2b37c3fd83c7fe010a4", "Url": "https://api.github.com/repos/OPENDAP/olfs", "Date": "2015-04-07T17:09:12Z"},
{"Line": "=>648", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["opendap.viewers.ViewersServlet.getWebServicesForDataset(java.lang.String,org.jdom.Document)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (webServicesForDataset.isEmpty()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/804/buggy-version/src.opendap.viewers.ViewersServlet.java", "BodyUseAPI": [], "Fixed commit": "8a902d37758256467066e2b37c3fd83c7fe010a4", "Url": "https://api.github.com/repos/OPENDAP/olfs", "Date": "2015-04-07T17:09:12Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.currentState.getStateType()) != (cz.tzima.partialsshot.controller.messages.StateType.DEFAULT)) { this.currentState = new cz.tzima.partialsshot.controller.messages.StateMessageDefault(); this.points.clear(); reportStateChange(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8736/buggy-version/PartialSShot.src.cz.tzima.partialsshot.controller.Controller.java", "BodyUseAPI": [], "Fixed commit": "6f7cc5043b92e382de6c45f0df20fc4af151faf1", "Url": "https://api.github.com/repos/tzima/PartialSShot", "Date": "2014-11-19T22:46:03Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (userdata == null) userdata = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6838/buggy-version/src.main.java.org.openbaton.drivers.openstack4j.OpenStack4JDriver.java", "BodyUseAPI": [], "Fixed commit": "220d388dfa5abd02b2922184001a54d8c2d2a815", "Url": "https://api.github.com/repos/openbaton/openstack4j-plugin", "Date": "2017-05-10T09:44:38Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["annotationNode.getAst().get(com.sun.tools.javac.tree.JCTree.JCMethodInvocation)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (methodCallNode == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3939/buggy-version/src.core.lombok.javac.handlers.HandleExtensionMethod.java", "BodyUseAPI": [], "Fixed commit": "d15d7228723ae5fa99036105c4df951ca9e40f1a", "Url": "https://api.github.com/repos/janmaterne/lombok", "Date": "2012-10-29T21:21:15Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cd.getType().val) != (DataType._type.PROTOBUF)) { code.append(((((((((\"\\t\\t\" + (cd.getType().javaType())) + \" col\") + (cd.getName())) + \"=(\") + (cd.getType().javaType())) + \")tuple.getColumn(\\\"\") + (cd.getName())) + \"\\\");\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7042/buggy-version/yamcs-core.src.main.java.org.yamcs.yarch.streamsql.Expression.java", "BodyUseAPI": ["org.yamcs.yarch.ColumnDefinition.getName()", "org.yamcs.yarch.ColumnDefinition.getName()", "cd.getType().javaType()", "cd.getType().javaType()", "org.yamcs.yarch.ColumnDefinition.getType()", "java.lang.StringBuilder.append(((((((((\"\\t\\t\" + (cd.getType().javaType())) + \" col\") + (cd.getName())) + \"=(\") + (cd.getType().javaType())) + \")tuple.getColumn(\\\"\") + (cd.getName())) + \"\\\");\\n\"))", "org.yamcs.yarch.ColumnDefinition.getType()"], "Fixed commit": "cdf0e644fc617930d42721c7002f4244e48d9938", "Url": "https://api.github.com/repos/fqqb/yamcs", "Date": "2015-11-22T21:37:24Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.uci.ics.crawler4j.frontier.DocIDServer.getNewUnseenDocID(page.redirectedToUrl)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (docid >= 0) { webURL.setDocid(docid); frontier.schedule(webURL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/406/buggy-version/src.main.java.edu.uci.ics.crawler4j.crawler.WebCrawler.java", "BodyUseAPI": ["edu.uci.ics.crawler4j.url.WebURL.setDocid(int)"], "Fixed commit": "949774bebd27b78727978c2e29f171fe65db637c", "Url": "https://api.github.com/repos/EgbertW/crawler4j", "Date": "2015-07-14T12:55:54Z"},
{"Line": "=>1524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPlan) == null) { java.lang.String description = ((org.totschnig.myexpenses.activity.Template) (mTransaction)).compileDescription(this); mPlan = new org.totschnig.myexpenses.activity.Plan(0L, java.lang.System.currentTimeMillis(), \"\", ((org.totschnig.myexpenses.activity.Template) (mTransaction)).title, description); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/9210/buggy-version/src.org.totschnig.myexpenses.activity.ExpenseEdit.java", "BodyUseAPI": [], "Fixed commit": "bac483cd1a5967c0c92995e52699ea77ab8f9c49", "Url": "https://api.github.com/repos/mtotschnig/MyExpenses", "Date": "2014-11-23T12:58:40Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.redhat.ceylon.compiler.typechecker.model.Declaration.getDeclarationModel()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(dec instanceof com.redhat.ceylon.compiler.typechecker.model.Setter)) { checkMember(that, dec); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/9307/buggy-version/src.com.redhat.ceylon.compiler.typechecker.analyzer.RefinementVisitor.java", "BodyUseAPI": ["com.redhat.ceylon.compiler.typechecker.analyzer.RefinementVisitor.checkMember(com.redhat.ceylon.compiler.typechecker.model.Declaration,com.redhat.ceylon.compiler.typechecker.model.Declaration)"], "Fixed commit": "fe634af7325ebf8c5934bce013e658c8d023bafe", "Url": "https://api.github.com/repos/gavinking/ceylon-spec", "Date": "2012-01-02T16:04:51Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.dmillerw.storage.block.tile.TileController.getStackInSlot(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((drop != null) && ((drop.stackSize) > 0)) drop = drop.copy();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1467/buggy-version/src.main.java.me.dmillerw.storage.block.tile.TileItemBlock.java", "BodyUseAPI": ["net.minecraft.item.ItemStack.copy()"], "Fixed commit": "80d48037157f0b87358a132eedc655698d3b5909", "Url": "https://api.github.com/repos/dmillerw/Impractical-Storage", "Date": "2017-03-22T20:47:08Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((httpSession.getAttribute(\"user\")) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6314/buggy-version/src.main.java.cn.edu.upc.yb.integrate.common.service.CommonAdminService.java", "BodyUseAPI": [], "Fixed commit": "10051e6448d35bf056735af8f34ee2b278e17879", "Url": "https://api.github.com/repos/upcyiban/IntegrateApplication", "Date": "2016-07-11T14:10:51Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.ContentResolver.query(DataProvider_Anime.animeTableUri,java.lang.String[],(((((((com.lynas.et.domain.DataStructure_Anime.ANIMENAME) + \"= '\") + selectedAnimeName) + \"' AND \") + (com.lynas.et.domain.DataStructure_Anime.ANIMEID)) + \" < \") + (prevID)),<nulltype>,((com.lynas.et.domain.DataStructure_Anime.ANIMEID) + \" DESC LIMIT 0, 10\"))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((cursor != null) && ((cursor.getCount()) > 0)) { animeList.removeAll(animeList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7425/buggy-version/ET.src.com.lynas.et.ui.anime.Anime_Episode_Home.java", "BodyUseAPI": [], "Fixed commit": "711e669eddcc6f3014a4d5863c40d178798a1e01", "Url": "https://api.github.com/repos/lynas/Entertainment-Tracker-Pro", "Date": "2013-11-11T04:32:28Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.ContentResolver.query(DataProvider_Anime.animeTableUri,java.lang.String[],(((((((com.lynas.et.domain.DataStructure_Anime.ANIMENAME) + \"= '\") + selectedAnimeName) + \"' AND \") + (com.lynas.et.domain.DataStructure_Anime.ANIMEID)) + \" > \") + (lastID)),<nulltype>,((com.lynas.et.domain.DataStructure_Anime.ANIMEID) + \" ASC LIMIT 0 , 10\"))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((cursor != null) && ((cursor.getCount()) > 0)) { animeList.removeAll(animeList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7425/buggy-version/ET.src.com.lynas.et.ui.anime.Anime_Episode_Home.java", "BodyUseAPI": [], "Fixed commit": "711e669eddcc6f3014a4d5863c40d178798a1e01", "Url": "https://api.github.com/repos/lynas/Entertainment-Tracker-Pro", "Date": "2013-11-11T04:32:28Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.android.volley.VolleyLog.DEBUG) { com.android.volley.VolleyLog.d(\"RequestHeader: %1$s:%2$s\", OkRequest.HEADER_CONTENT_TYPE, request.getPostBodyContentType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/9279/buggy-version/library.src.main.java.im.amomo.volley.OkHttpStack.java", "BodyUseAPI": [], "Fixed commit": "3b20fce0616b4a8ec951b2ada3cc4f2b6d944209", "Url": "https://api.github.com/repos/googolmo/OkVolley", "Date": "2014-04-17T08:40:50Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.android.volley.VolleyLog.DEBUG) { com.android.volley.VolleyLog.d(\"RequestHeader: %1$s:%2$s\", headerName, map.get(headerName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/9279/buggy-version/library.src.main.java.im.amomo.volley.OkHttpStack.java", "BodyUseAPI": [], "Fixed commit": "3b20fce0616b4a8ec951b2ada3cc4f2b6d944209", "Url": "https://api.github.com/repos/googolmo/OkVolley", "Date": "2014-04-17T08:40:50Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.android.volley.VolleyLog.DEBUG) { com.android.volley.VolleyLog.d(\"RequestHeader: %1$s:%2$s\", OkRequest.HEADER_CONTENT_TYPE, request.getBodyContentType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/9279/buggy-version/library.src.main.java.im.amomo.volley.OkHttpStack.java", "BodyUseAPI": [], "Fixed commit": "3b20fce0616b4a8ec951b2ada3cc4f2b6d944209", "Url": "https://api.github.com/repos/googolmo/OkVolley", "Date": "2014-04-17T08:40:50Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (INTENT_PURPOSE.equals(THREAD_VIEW)) { }else { android.content.Intent returnIntent = new android.content.Intent(); com.google.gson.Gson gson = new com.google.gson.Gson(); java.lang.String string = gson.toJson(address); returnIntent.putExtra(\"address\", string); setResult(ca.cs.ualberta.localpost.view.RESULT_OK, returnIntent); alertDialog(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/262/buggy-version/src.ca.cs.ualberta.localpost.view.MapsView.java", "BodyUseAPI": [], "Fixed commit": "b364bd891351629ff051d90d10e4b93074544930", "Url": "https://api.github.com/repos/CMPUT301W14T01/localpost", "Date": "2014-04-08T07:33:22Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.pluto.data.CuentaEntityManager.getCuentbyId(idCuenta)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (cuenta != null) { cuentaEventHandler.fire(cuenta); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6745/buggy-version/src.main.java.org.pluto.delegate.CuentaDelegateImpl.java", "BodyUseAPI": ["javax.enterprise.event.Event<org.pluto.model.Cuenta>.fire(org.pluto.model.Cuenta)"], "Fixed commit": "75529cba81e337a27acbc4b9707d3112e9186e6d", "Url": "https://api.github.com/repos/roar109/pluto", "Date": "2016-01-27T00:41:23Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (removeKey != null) { main.PluginExecutor.LOG.info((removeKey + \" running error exceed. It was removed.\")); dao.insertEvent(conn, \"PE002\", \"ERROR\", (removeKey + \" running error exceed. It was removed.\")); pgPathIntv.remove(removeKey); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5361/buggy-version/src.main.PluginExecutor.java", "BodyUseAPI": ["org.apache.logging.log4j.Logger.info(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.Integer>.remove(java.lang.String)", "util.Dao.insertEvent(java.sql.Connection,java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "6a3722893b453f0d5f3894bf389355698fcfaa57", "Url": "https://api.github.com/repos/catallena7/Metheus-Agent", "Date": "2015-10-21T13:18:00Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentItemBurnTime) == 0) && ((furnaceBurnTime) > 0)) { return 1.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2674/buggy-version/src.main.java.net.blay09.mods.cookingforblockheads.tile.TileOven.java", "BodyUseAPI": [], "Fixed commit": "0885e1208b01e4854a4b5d68d4a96fed4c10fcd3", "Url": "https://api.github.com/repos/blay09/CookingForBlockheads", "Date": "2017-08-14T14:40:04Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((slotCookTime[i]) != (-1)) { (slotCookTime[i])++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2674/buggy-version/src.main.java.net.blay09.mods.cookingforblockheads.tile.TileOven.java", "BodyUseAPI": [], "Fixed commit": "0885e1208b01e4854a4b5d68d4a96fed4c10fcd3", "Url": "https://api.github.com/repos/blay09/CookingForBlockheads", "Date": "2017-08-14T14:40:04Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (e != null) insert(e);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8471/buggy-version/DETROID.src.util.HashTable.java", "BodyUseAPI": ["util.HashTable<E>.insert(E)"], "Fixed commit": "7b2c5e07636dff166df75af1e64ace58da61a027", "Url": "https://api.github.com/repos/ViktorC/DETROID", "Date": "2015-08-27T15:20:47Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((array.length) != 0) sort();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8471/buggy-version/DETROID.src.util.QuickSort.java", "BodyUseAPI": [], "Fixed commit": "7b2c5e07636dff166df75af1e64ace58da61a027", "Url": "https://api.github.com/repos/ViktorC/DETROID", "Date": "2015-08-27T15:20:47Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((array.length) != 0) sort();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8471/buggy-version/DETROID.src.util.QuickSort.java", "BodyUseAPI": [], "Fixed commit": "7b2c5e07636dff166df75af1e64ace58da61a027", "Url": "https://api.github.com/repos/ViktorC/DETROID", "Date": "2015-08-27T15:20:47Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arg0 == arg1) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/479/buggy-version/fm-workbench.resolute.com.rockwellcollins.atc.resolute.analysis.src.com.rockwellcollins.atc.resolute.analysis.execution.NamedElementComparator.java", "BodyUseAPI": [], "Fixed commit": "9bc6a318c79e5a7e4271796fd8eb7f1fe68d1844", "Url": "https://api.github.com/repos/smaccm/smaccm", "Date": "2015-01-29T22:45:15Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (r == 0) { throw new java.lang.IllegalArgumentException(\"Unable to order distinct objects via hashcode\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/479/buggy-version/fm-workbench.resolute.com.rockwellcollins.atc.resolute.analysis.src.com.rockwellcollins.atc.resolute.analysis.execution.NamedElementComparator.java", "BodyUseAPI": [], "Fixed commit": "9bc6a318c79e5a7e4271796fd8eb7f1fe68d1844", "Url": "https://api.github.com/repos/smaccm/smaccm", "Date": "2015-01-29T22:45:15Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == ((mTour.size()) - 1)) { directions.add(paths[solution[(nbVertices - 1)]][solution[nbVertices]]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7348/buggy-version/src.Model.Area.java", "BodyUseAPI": [], "Fixed commit": "22f98bc176431429b337f04da341c917668b0e49", "Url": "https://api.github.com/repos/fasquelito/DevOO", "Date": "2013-12-10T00:18:04Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lombok.val.floorEntry(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((entry != null) && (path.startsWith(entry.getKey()))) { return entry.getValue(); }else if ((defaultRoute) != null) { return defaultRoute; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7954/buggy-version/src.main.java.net.talpidae.viceroy.proxy.ProxyConfig.java", "BodyUseAPI": ["lombok.val.getValue()"], "Fixed commit": "23df83c57295559041851b9bfcfda983562f59fa", "Url": "https://api.github.com/repos/lyind/viceroy", "Date": "2017-05-15T05:59:04Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (val < lowestItem) { lowestItem = val; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3692/buggy-version/src.main.java.de.unima.ki.narminer.utils.TransactionDatabase.java", "BodyUseAPI": [], "Fixed commit": "4a7def45c64e6876e33bb8e4ac0010cf71502e3a", "Url": "https://api.github.com/repos/dfleischhacker/nar-miner", "Date": "2015-05-06T00:03:28Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isInitialized) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7675/buggy-version/app.src.main.java.com.example.mick.emotionanalizer.EmotionAnalizer.java", "BodyUseAPI": [], "Fixed commit": "4dfd113dce5236cbfec255a36c219f0b56b76713", "Url": "https://api.github.com/repos/remc17green/twitteranalysis", "Date": "2017-04-21T12:39:14Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!created) && ((routes.size()) > 0)) { for (net.osmand.plus.GPXUtilities.Route r : routes) { tpoints.add(r.points); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8965/buggy-version/OsmAnd-java.src.net.osmand.plus.GPXUtilities.java", "BodyUseAPI": [], "Fixed commit": "fa8a4244c4405606069d49db56e45b1c653961de", "Url": "https://api.github.com/repos/osmandapp/OsmAnd-core", "Date": "2013-01-09T22:34:38Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ts.points.size()) > 0) { created = true; tpoints.add(ts.points); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8965/buggy-version/OsmAnd-java.src.net.osmand.plus.GPXUtilities.java", "BodyUseAPI": ["java.util.List<java.util.List<net.osmand.plus.GPXUtilities.WptPt>>.add(java.util.List<net.osmand.plus.GPXUtilities.WptPt>)"], "Fixed commit": "fa8a4244c4405606069d49db56e45b1c653961de", "Url": "https://api.github.com/repos/osmandapp/OsmAnd-core", "Date": "2013-01-09T22:34:38Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (success && (org.apache.commons.lang.StringUtils.equals(getProperty(\"copy_map\"), \"true\"))) { java.lang.String copy\u041cap\u0425sltFile = getProperty(\"copy_map_xslt_file\"); if (copy\u041cap\u0425sltFile != null) success = transformMapWithXslt(copy\u041cap\u0425sltFile, new java.io.File(directoryName, \"map.mm\"), \"\", Mode.EXPORT, new java.lang.String[]{ }); else success = copyMap(map, directoryName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/542/buggy-version/freeplane.src.org.freeplane.features.export.mindmapmode.ExportWithXSLT.java", "BodyUseAPI": [], "Fixed commit": "f8b37da931ac20e8e4c1a7bcf32d70b90cf92d1a", "Url": "https://api.github.com/repos/freeplane/freeplane", "Date": "2013-11-01T20:04:01Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (_file.exists()) { _file.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3347/buggy-version/src.net.ftb.data.UserManager.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "0568950d265a6f7a148aee25efcb0b4e546be317", "Url": "https://api.github.com/repos/Slowpoke101/FTBLaunch", "Date": "2014-05-22T04:33:01Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((validDeviceIds) == null) || (((validDeviceIds) != null) && (validDeviceIds.contains(deviceID)))) { com.appium.manager.AndroidDeviceConfiguration.deviceSerail.add(deviceID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6789/buggy-version/src.main.java.com.appium.manager.AndroidDeviceConfiguration.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "dfad5d7320770d0724394773f0ef1cc3edb0cbdf", "Url": "https://api.github.com/repos/brtu/AppiumTestDistribution", "Date": "2016-12-28T20:09:21Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((editableImage.getImage()) == null) && ((editableImage.getImageUrl()) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7980/buggy-version/wcomponents-core.src.main.java.com.github.bordertech.wcomponents.render.webxml.WEditableImageRenderer.java", "BodyUseAPI": [], "Fixed commit": "6a359f5a0f88d7d35c631d500344da3df3915e4c", "Url": "https://api.github.com/repos/ricksbrown/wcomponents", "Date": "2016-05-18T23:49:38Z"},
{"Line": "=>577", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (str.startsWith(\"#\")) str = str.substring(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6359/buggy-version/ext.java.nokogiri.XmlNode.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "280c995e678e1cd591ff50affe9699cdbfc2d98f", "Url": "https://api.github.com/repos/sparklemotion/nokogiri", "Date": "2014-04-16T00:02:03Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.seafile.seadroid2.SettingsManager.instance().getCameraUploadAccountEmail()) != null) { if ((com.seafile.seadroid2.SettingsManager.instance().getCameraUploadAccountEmail().equals(account.getEmail())) && (com.seafile.seadroid2.SettingsManager.instance().getCameraUploadAccountServer().equals(account.getServer()))) { android.content.Intent cameraUploadIntent = new android.content.Intent(this, com.seafile.seadroid2.sync.CameraUploadService.class); stopService(cameraUploadIntent); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2493/buggy-version/src.com.seafile.seadroid2.AccountsActivity.java", "BodyUseAPI": [], "Fixed commit": "3f1b45c96cbfb4389cfc0563257bd04422bcfabc", "Url": "https://api.github.com/repos/Logan676/seadroid", "Date": "2014-10-29T07:08:11Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInputKeywordChar && ((offset + 1) == (getInput().length()))) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3910/buggy-version/org.spoofax.jsglr.src.org.spoofax.jsglr.client.imploder.Tokenizer.java", "BodyUseAPI": [], "Fixed commit": "02a067a64e76d2c9291c467ffb80bd1614dcdc09", "Url": "https://api.github.com/repos/metaborg/jsglr", "Date": "2017-01-31T09:55:55Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((bodyParameterNames) != null) && (!(bodyParameterNames.isEmpty()))) { sb.append(\"; \"); for (int i = 0; i < (bodyParameterNames.size()); i++) { if (i != 0) { sb.append(\", \"); } sb.append(freemarker.core.CoreUtils.toFTLTopLevelIdentifierReference(((java.lang.String) (bodyParameterNames.get(i))))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/418/buggy-version/src.main.java.freemarker.core.UnifiedCall.java", "BodyUseAPI": ["java.util.List.size()", "java.lang.StringBuffer.append(freemarker.core.CoreUtils.toFTLTopLevelIdentifierReference(((java.lang.String) (bodyParameterNames.get(i)))))", "freemarker.core.CoreUtils.toFTLTopLevelIdentifierReference(java.lang.Object)", "java.util.List.get(int)"], "Fixed commit": "a14ef67437fb2ab3d27330c642c97d39822edeb0", "Url": "https://api.github.com/repos/freemarker/freemarker-old", "Date": "2015-01-25T21:43:57Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((app.calvin.bats.Notification.charging) == null) { app.calvin.bats.Notification.charging = !((state == (android.os.BatteryManager.BATTERY_STATUS_NOT_CHARGING)) || (state == (android.os.BatteryManager.BATTERY_STATUS_DISCHARGING))); app.calvin.bats.Notification.lastChange = android.os.SystemClock.elapsedRealtime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3278/buggy-version/app.src.main.java.app.calvin.bats.Notification.java", "BodyUseAPI": [], "Fixed commit": "4e212dea40606af96eedd01a53e83e25d2fd58aa", "Url": "https://api.github.com/repos/calvin-li/bats", "Date": "2015-03-17T02:15:50Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == another) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2431/buggy-version/app.src.main.java.com.example.student.gefriertruhapp.Model.FridgeItem.java", "BodyUseAPI": [], "Fixed commit": "eba4c10ccad0a503ce3a8772153aa4d434786267", "Url": "https://api.github.com/repos/DerGary/FridgeApp", "Date": "2016-01-30T15:53:50Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.joda.time.DateTime.compareTo(org.joda.time.DateTime)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (compare == 0) { return name.compareTo(another.name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2431/buggy-version/app.src.main.java.com.example.student.gefriertruhapp.Model.FridgeItem.java", "BodyUseAPI": [], "Fixed commit": "eba4c10ccad0a503ce3a8772153aa4d434786267", "Url": "https://api.github.com/repos/DerGary/FridgeApp", "Date": "2016-01-30T15:53:50Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((notificationDate) != null) { return -1; }else if ((another.notificationDate) != null) { return 1; }else { return name.compareTo(another.name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2431/buggy-version/app.src.main.java.com.example.student.gefriertruhapp.Model.FridgeItem.java", "BodyUseAPI": [], "Fixed commit": "eba4c10ccad0a503ce3a8772153aa4d434786267", "Url": "https://api.github.com/repos/DerGary/FridgeApp", "Date": "2016-01-30T15:53:50Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Boolean.booleanValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (poolPreparedStatements) { value = ((java.lang.String) (properties.get(com.alibaba.druid.pool.DruidDataSourceFactory.PROP_MAXOPENPREPAREDSTATEMENTS))); if (value != null) { dataSource.setMaxOpenPreparedStatements(java.lang.Integer.parseInt(value)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/251/buggy-version/src.main.java.com.alibaba.druid.pool.DruidDataSourceFactory.java", "BodyUseAPI": [], "Fixed commit": "2dc53e80e4ef0c062cce5025a9dacc83510f89e2", "Url": "https://api.github.com/repos/alibaba/druid", "Date": "2013-04-25T14:04:06Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opendaylight.controller.sal.connect.netconf.util.NetconfMessageTransformUtil.findNode(schemasNodeResult.getResult(),org.opendaylight.yangtools.yang.data.api.YangInstanceIdentifier)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (schemasNode == null) { org.opendaylight.controller.sal.connect.netconf.NetconfStateSchemas.logger.warn(\"{}: Unable to detect available schemas, get to {} was empty\", id, org.opendaylight.controller.sal.connect.netconf.NetconfStateSchemas.STATE_SCHEMAS_IDENTIFIER); return org.opendaylight.controller.sal.connect.netconf.NetconfStateSchemas.EMPTY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7232/buggy-version/opendaylight.md-sal.sal-netconf-connector.src.main.java.org.opendaylight.controller.sal.connect.netconf.NetconfStateSchemas.java", "BodyUseAPI": [], "Fixed commit": "56f33d52dd1de461e54f718960c43d96d37a963a", "Url": "https://api.github.com/repos/mandeepdhami/controller", "Date": "2014-08-25T09:28:58Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.ur.mi.fashionapp.wardrobe.WardrobeActivity.getCurrentFocus()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (view != null) { android.view.inputmethod.InputMethodManager imm = ((android.view.inputmethod.InputMethodManager) (getSystemService(Context.INPUT_METHOD_SERVICE))); imm.hideSoftInputFromWindow(view.getWindowToken(), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1197/buggy-version/app.src.main.java.de.ur.mi.fashionapp.wardrobe.WardrobeActivity.java", "BodyUseAPI": ["android.view.View.getWindowToken()", "android.view.inputmethod.InputMethodManager.hideSoftInputFromWindow(view.getWindowToken(),int)"], "Fixed commit": "db6d265511d04074d28cbf815c46fb199fcd5d66", "Url": "https://api.github.com/repos/einworB/FashionApp", "Date": "2016-03-28T10:09:47Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (deferred == null) { deferred = tv.loilo.promise.Defer.fail(new tv.loilo.promise.NullDeferredException(\"RepeatCallback returned null\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/9302/buggy-version/promise.src.main.java.tv.loilo.promise.Promises.java", "BodyUseAPI": [], "Fixed commit": "cce004843a0263bb6d15be36e08b4143a56d325e", "Url": "https://api.github.com/repos/loilo-inc/loilo-promise", "Date": "2016-06-23T02:10:51Z"},
{"Line": "=>603", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (deferred == null) { deferred = tv.loilo.promise.Defer.fail(new tv.loilo.promise.NullDeferredException(\"ThenCallback returned null\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/9302/buggy-version/promise.src.main.java.tv.loilo.promise.Promises.java", "BodyUseAPI": [], "Fixed commit": "cce004843a0263bb6d15be36e08b4143a56d325e", "Url": "https://api.github.com/repos/loilo-inc/loilo-promise", "Date": "2016-06-23T02:10:51Z"},
{"Line": "=>818", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (handle == null) { handle = tv.loilo.promise.Defer.fail(new tv.loilo.promise.NullDeferredException(\"WhenCallback returned null\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/9302/buggy-version/promise.src.main.java.tv.loilo.promise.Promises.java", "BodyUseAPI": [], "Fixed commit": "cce004843a0263bb6d15be36e08b4143a56d325e", "Url": "https://api.github.com/repos/loilo-inc/loilo-promise", "Date": "2016-06-23T02:10:51Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entityManager.isOpen()) { entityManager.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4200/buggy-version/activejpa-core.src.main.java.org.activejpa.jpa.JPAContext.java", "BodyUseAPI": ["javax.persistence.EntityManager.close()"], "Fixed commit": "f11ee912a39748380665cd2a20e7fd639f8828f8", "Url": "https://api.github.com/repos/juanignacionogueira/activejpa", "Date": "2013-05-22T13:34:08Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(sb.toString().isEmpty())) { if (java.util.regex.Pattern.compile(\"@|#\").matcher(token.get(CoreAnnotations.TextAnnotation.class)).find()) { sentence.addEntity(new fr.eurecom.stanfordnlprestapi.datatypes.Entity(token.get(CoreAnnotations.TextAnnotation.class), token.get(CoreAnnotations.NamedEntityTagAnnotation.class), sentence, context, token.get(CoreAnnotations.CharacterOffsetBeginAnnotation.class), token.get(CoreAnnotations.CharacterOffsetEndAnnotation.class))); } final int index = stanfordSentence.get(CoreAnnotations.TokensAnnotation.class).indexOf(token); final int end = stanfordSentence.get(CoreAnnotations.TokensAnnotation.class).get((index - 1)).get(CoreAnnotations.CharacterOffsetEndAnnotation.class); sentence.addEntity(new fr.eurecom.stanfordnlprestapi.datatypes.Entity(sb.toString(), type, sentence, context, start, end)); sb = new java.lang.StringBuilder(); type = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7059/buggy-version/src.main.java.fr.eurecom.stanfordnlprestapi.core.StanfordNlp.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()", "fr.eurecom.stanfordnlprestapi.interfaces.Sentence.addEntity(fr.eurecom.stanfordnlprestapi.datatypes.Entity)"], "Fixed commit": "fc6e8ee2aa86ae9aab3615dc47ad57fbf61cd56c", "Url": "https://api.github.com/repos/jplu/stanfordNLPRESTAPI", "Date": "2017-08-04T11:21:46Z"},
{"Line": "=>1102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mDeleted)) { if (isDeleteable()) { delete(true); }else if (!(mCanceled)) { save(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1431/buggy-version/src.org.inaturalist.android.ObservationEditor.java", "BodyUseAPI": [], "Fixed commit": "555533a96fd2afaa88d4a5179daa15e26520d96c", "Url": "https://api.github.com/repos/inaturalist/iNaturalistAndroid", "Date": "2014-02-28T21:02:16Z"},
{"Line": "=>848", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newMovableType == (jsettlers.common.movable.EMovableType.PIKEMAN_L1)) { java.lang.System.out.println(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5734/buggy-version/jsettlers.logic.src.jsettlers.logic.movable.Movable.java", "BodyUseAPI": [], "Fixed commit": "1c5397f9fb084ef6e9e1badc52bb509e92e8b6d2", "Url": "https://api.github.com/repos/jsettlers/settlers-remake", "Date": "2015-11-11T10:24:17Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wildfly.plugin.server.StartMojo.createClient()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((org.wildfly.plugin.core.ServerHelper.isStandaloneRunning(client)) || (org.wildfly.plugin.core.ServerHelper.isDomainRunning(client))) { throw new org.apache.maven.plugin.MojoExecutionException(java.lang.String.format(\"%s server is already running?\", serverType)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2848/buggy-version/plugin.src.main.java.org.wildfly.plugin.server.StartMojo.java", "BodyUseAPI": [], "Fixed commit": "3cb81e6ae850052638c7a789252be5d260250278", "Url": "https://api.github.com/repos/wildfly/wildfly-maven-plugin", "Date": "2016-11-11T18:19:12Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityDamageByEntityEvent.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (damaged instanceof org.bukkit.entity.LivingEntity) { org.bukkit.entity.LivingEntity livingEntity = ((org.bukkit.entity.LivingEntity) (damaged)); plugin.healthUtil.sendHealth(player, ((org.bukkit.entity.LivingEntity) (damaged)), ((int) ((livingEntity.getHealth()) - (event.getFinalDamage())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5100/buggy-version/src.com.zeshanaslam.actionhealth.HealthListeners.java", "BodyUseAPI": [], "Fixed commit": "ce78bbc078e8d92a61f99c0aeae931eb2248c26c", "Url": "https://api.github.com/repos/zeshan321/ActionHealth", "Date": "2017-03-21T15:30:18Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityDamageByEntityEvent.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (damaged instanceof org.bukkit.entity.LivingEntity) { org.bukkit.entity.LivingEntity livingEntity = ((org.bukkit.entity.LivingEntity) (damaged)); plugin.healthUtil.sendHealth(player, ((org.bukkit.entity.LivingEntity) (damaged)), ((int) ((livingEntity.getHealth()) - (event.getFinalDamage())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5100/buggy-version/src.com.zeshanaslam.actionhealth.HealthListeners.java", "BodyUseAPI": [], "Fixed commit": "ce78bbc078e8d92a61f99c0aeae931eb2248c26c", "Url": "https://api.github.com/repos/zeshan321/ActionHealth", "Date": "2017-03-21T15:30:18Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!shutdown) { org.bukkit.Bukkit.getScheduler().runTaskLater(org.mcsg.survivalgames.GameManager.getInstance().getPlugin(), new java.lang.Runnable() { @java.lang.Override public void run() { while (ent.hasNext()) { org.bukkit.entity.Entity e = ent.next(); if (e.isValid()) e.remove(); ent.remove(); } } }, 2); }else { while (ent.hasNext()) { org.bukkit.entity.Entity e = ent.next(); if (e.isValid()) e.remove(); ent.remove(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6600/buggy-version/src.main.java.org.mcsg.survivalgames.logging.QueueManager.java", "BodyUseAPI": [], "Fixed commit": "f0171daeb855eb1aa808a2180b2f96869758e243", "Url": "https://api.github.com/repos/khobbits/Survival-Games", "Date": "2013-06-28T07:04:09Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user.getPhotoUrl()) != null) { setAvatar(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4406/buggy-version/app.src.main.java.com.phungnlg.hellodoctor.ProfileFragment.java", "BodyUseAPI": [], "Fixed commit": "77b2aeeaea1cc1b1be8cfc4ad89232d3e08380de", "Url": "https://api.github.com/repos/phungnlg/HelloDoctor", "Date": "2017-07-10T05:33:33Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getPhotoUrl()) != null) { viewHolder.setAvatar(user.getPhotoUrl().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4406/buggy-version/app.src.main.java.com.phungnlg.hellodoctor.ProfileFragment.java", "BodyUseAPI": ["NewsFeedFragment.Holder.setAvatar(user.getPhotoUrl().toString())", "com.google.firebase.auth.FirebaseUser.getPhotoUrl()", "user.getPhotoUrl().toString()"], "Fixed commit": "77b2aeeaea1cc1b1be8cfc4ad89232d3e08380de", "Url": "https://api.github.com/repos/phungnlg/HelloDoctor", "Date": "2017-07-10T05:33:33Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.twitter.heron.ckptmgr.CheckpointManagerConfig.get(CheckpointManagerConfigKey.STORAGE_CONFIG)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (backendConfigObject instanceof java.util.Map) { return ((java.util.Map<java.lang.String, java.lang.Object>) (backendConfigObject)); }else { throw new java.lang.IllegalArgumentException(java.lang.String.format(\"configs for backend storage needs to be map, but is: %s\", backendConfigObject.getClass().getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6587/buggy-version/heron.ckptmgr.src.java.com.twitter.heron.ckptmgr.CheckpointManagerConfig.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String)", "java.lang.Class<? extends java.lang.Object>.getName()", "java.lang.Object.getClass()"], "Fixed commit": "4f767011d8a1c5b5e524da8f0fae2a98d1f50cb8", "Url": "https://api.github.com/repos/streamlio/heron", "Date": "2017-05-09T18:40:34Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (moskitoMusic.isPlaying()) { moskitoMusic.setLooping(false); moskitoMusic.pause(); moskitoMusic.setPosition(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8526/buggy-version/pondSkater2.core.src.com.simplebojocs.pondskater2.Game.GameScreen.java", "BodyUseAPI": ["com.badlogic.gdx.audio.Music.setLooping(boolean)", "com.badlogic.gdx.audio.Music.setPosition(int)", "com.badlogic.gdx.audio.Music.pause()"], "Fixed commit": "c84919348a83957bf6e7d90a196b887ada7217b0", "Url": "https://api.github.com/repos/alexgun131/gameWizardsAOG", "Date": "2016-08-08T17:52:44Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mondrian.rolap.RolapAggregationManager.makeCellRequest(mondrian.rolap.Member[],boolean,boolean,<nulltype>,<nulltype>,mondrian.rolap.RolapEvaluator)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (request == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2274/buggy-version/src.main.mondrian.rolap.RolapAggregationManager.java", "BodyUseAPI": [], "Fixed commit": "8bbeb5d5d894fd87519ae80c7aedae26b99995f1", "Url": "https://api.github.com/repos/pentaho/mondrian", "Date": "2015-02-09T15:24:45Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((endFrame) == (-1)) { return (startFrame) <= (currentFrame); }else { return ((startFrame) <= (currentFrame)) && ((currentFrame) < (endFrame)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6550/buggy-version/A4.src.model.Frame.java", "BodyUseAPI": [], "Fixed commit": "e6b9f450b3fc9bceea0c604f8c5e27cf8a5de969", "Url": "https://api.github.com/repos/yugiohatemu/CS349", "Date": "2013-04-08T01:48:27Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String[]>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (excludedExp != null) { for (java.lang.String p : excludedExp) { models.ExcludedExperiment.create(filter_id, p); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/116/buggy-version/app.controllers.Experimenter.java", "BodyUseAPI": [], "Fixed commit": "8205fce367884aedeb59554a71e0c4466c1dcf28", "Url": "https://api.github.com/repos/dan91/PlayStartApp", "Date": "2014-08-28T14:43:41Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotEmpty(packagingOverride)) { packaging = packagingOverride; }else { packaging = gav.getPackaging(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2347/buggy-version/maven-repository-provisioner.src.main.java.com.simpligility.maven.provisioner.ArtifactRetriever.java", "BodyUseAPI": [], "Fixed commit": "07ecf18cea49fdbdf97a76f33f447710c88d4e61", "Url": "https://api.github.com/repos/simpligility/maven-repository-tools", "Date": "2016-11-08T00:53:14Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((com.jrew.geocatch.mobile.util.ActionBarUtil.TabTag.UPLOADED_PHOTOS_TAB) == tabToSelect) || ((com.jrew.geocatch.mobile.util.ActionBarUtil.TabTag.POSTPONED_PHOTOS_TAB) == tabToSelect)) { com.jrew.geocatch.mobile.util.ActionBarUtil.getActionBarTabByTag(tabToSelect, actionBar).select(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6715/buggy-version/geo-catch-mobile.src.main.java.com.jrew.geocatch.mobile.util.ActionBarUtil.java", "BodyUseAPI": ["com.jrew.geocatch.mobile.util.ActionBarUtil.getActionBarTabByTag(com.jrew.geocatch.mobile.util.ActionBarUtil.TabTag,com.actionbarsherlock.app.ActionBar)", "ActionBar.Tab.select()"], "Fixed commit": "b4d2de3015bbaf28eb756b1bb7637362b9f3b899", "Url": "https://api.github.com/repos/vadzim-kazak/geo-catch", "Date": "2014-02-13T16:46:42Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ashley.core.Engine.getSystem(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (physics != null) { physics.update(deltaTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5221/buggy-version/src.com.siondream.core.SionGame.java", "BodyUseAPI": ["com.siondream.core.entity.systems.PhysicsSystem.update(float)"], "Fixed commit": "d314e64d3546abce038cbb16be25d900345038a2", "Url": "https://api.github.com/repos/siondream/sioncore", "Date": "2014-03-13T09:32:09Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (sCiv == null) { getToroQuestPlayerDataTag(player).removeTag(\"inciv\"); }else { getToroQuestPlayerDataTag(player).setString(\"inciv\", sCiv); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7940/buggy-version/src.main.java.net.torocraft.toroquest.civilization.CivilizationHandlers.java", "BodyUseAPI": ["net.minecraft.nbt.NBTTagCompound.setString(java.lang.String,java.lang.String)"], "Fixed commit": "72fd17a7c4a485d49bdaa2101bd917ee1d998031", "Url": "https://api.github.com/repos/ToroCraft/ToroQuest", "Date": "2016-09-15T23:11:30Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["toast.getView().findViewById(android.R.id.message)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (v != null) v.setGravity(Gravity.CENTER);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3168/buggy-version/app.src.main.java.group5.tcss450.uw.edu.outofgas.VerifyFragment.java", "BodyUseAPI": ["android.widget.TextView.setGravity(Gravity.CENTER)"], "Fixed commit": "191985a89dbc64085a0ea2dfbf1040e08ba770ef", "Url": "https://api.github.com/repos/locbuigia/OutOfGas", "Date": "2017-02-18T02:16:36Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (response.isCommitted()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7117/buggy-version/src.main.java.cn.iPATHopeng.vj.smart.helper.StartupHelper.java", "BodyUseAPI": [], "Fixed commit": "53065d0750afee633c13c58f1c4b79be4fbed4d4", "Url": "https://api.github.com/repos/Venus-WXP/VJSmart", "Date": "2017-10-08T11:02:55Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.heigvd.amt.gamification.services.dao.ApplicationDAOLocal.findByApiKey(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (app == null) throw new java.lang.NullPointerException(\"This application doesn't exists !\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7142/buggy-version/src.GamificationProject.src.main.java.ch.heigvd.amt.gamification.services.ApplicationsManager.java", "BodyUseAPI": [], "Fixed commit": "eb1c5d20ba069f0908b3e990eafd0d012628c9cc", "Url": "https://api.github.com/repos/raphaelracine/Teaching-HEIGVD-AMT-2015-Project", "Date": "2015-12-04T17:45:06Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (itemColor == null) itemColor = new java.awt.Color(255, 255, 255);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3281/buggy-version/src.inventory.item.Item.java", "BodyUseAPI": [], "Fixed commit": "3f4fd3272cc1fa8c369aca1be5afd344e53ea1e3", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2017-03-25T03:26:20Z"},
{"Line": "=>574", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { return super.onNestedFling(target, velocityX, velocityY, consumed); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/990/buggy-version/chromelikeswipelayout.src.main.java.com.asha.ChromeLikeSwipeLayout.java", "BodyUseAPI": [], "Fixed commit": "c77585e50d8e79f3a6e95e0cc8f4788a60e8f56b", "Url": "https://api.github.com/repos/tommytcchan/ChromeLikeSwipeLayout", "Date": "2016-02-09T01:57:47Z"},
{"Line": "=>582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { return super.onNestedPreFling(target, velocityX, velocityY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/990/buggy-version/chromelikeswipelayout.src.main.java.com.asha.ChromeLikeSwipeLayout.java", "BodyUseAPI": [], "Fixed commit": "c77585e50d8e79f3a6e95e0cc8f4788a60e8f56b", "Url": "https://api.github.com/repos/tommytcchan/ChromeLikeSwipeLayout", "Date": "2016-02-09T01:57:47Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) { resolvedActivityList = pm.queryIntentActivities(activityIntent, PackageManager.MATCH_ALL); }else { resolvedActivityList = pm.queryIntentActivities(activityIntent, PackageManager.MATCH_DEFAULT_ONLY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1008/buggy-version/library.src.main.java.org.chromium.customtabsclient.CustomTabsHelper.java", "BodyUseAPI": [], "Fixed commit": "a8b0a066c5d7c31238b742c275b82ca131088e0b", "Url": "https://api.github.com/repos/NoahAndrews/CustomTabsHelper", "Date": "2017-08-12T16:46:29Z"},
{"Line": "=>754", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (uid != null) { mStrips.put(uid, s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2523/buggy-version/ComicReader.src.com.blogspot.applications4android.comicreader.core.Comic.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, com.blogspot.applications4android.comicreader.core.Strip>.put(java.lang.String,com.blogspot.applications4android.comicreader.core.Strip)"], "Fixed commit": "eb81117c85c9229437a7bef26b83d09e97756482", "Url": "https://api.github.com/repos/whitecat/ComicReader", "Date": "2013-02-01T02:17:25Z"},
{"Line": "=>737", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (uid == null) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2523/buggy-version/ComicReader.src.com.blogspot.applications4android.comicreader.core.Comic.java", "BodyUseAPI": [], "Fixed commit": "eb81117c85c9229437a7bef26b83d09e97756482", "Url": "https://api.github.com/repos/whitecat/ComicReader", "Date": "2013-02-01T02:17:25Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(jvmArgument.startsWith(\"-\"))) { jvmArgument = \"-\" + jvmArgument; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7691/buggy-version/src.main.java.com.jayway.maven.plugins.android.phase08preparepackage.DexMojo.java", "BodyUseAPI": [], "Fixed commit": "91d3e1200f3afd5f9f5330927dd83735cae355ec", "Url": "https://api.github.com/repos/simpligility/android-maven-plugin", "Date": "2011-05-17T04:50:37Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list.size()) == 0) return clusters;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/631/buggy-version/biojava3-structure.src.main.java.org.biojava.bio.structure.contact.StructureInterfaceList.java", "BodyUseAPI": [], "Fixed commit": "2917b5c8705e356d1d84bac25f3803e961244d98", "Url": "https://api.github.com/repos/josemduarte/biojava", "Date": "2015-01-16T09:22:48Z"},
{"Line": "=>726", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (annotationValueNode.isReference()) { org.mm.parser.node.ReferenceNode referenceNode = annotationValueNode.getReferenceNode(); org.mm.core.ReferenceType referenceType = referenceNode.getReferenceTypeNode().getReferenceType(); java.util.Optional<? extends org.mm.rendering.text.TextReferenceRendering> referenceRendering = renderReference(referenceNode); if (referenceRendering.isPresent()) { if (referenceType.isQuotedOWLLiteral()) return java.util.Optional.of(new org.mm.rendering.text.TextRendering(((\"\\\"\" + (referenceRendering.get().getRawValue())) + \"\\\"\"))); else return java.util.Optional.of(new org.mm.rendering.text.TextRendering(referenceRendering.get().getRawValue())); }else return java.util.Optional.empty(); }else if (annotationValueNode.isName()) return renderName(annotationValueNode.getNameNode()); else if (annotationValueNode.isLiteral()) { java.util.Optional<? extends org.mm.rendering.text.TextLiteralRendering> literalRendering = renderOWLLiteral(annotationValueNode.getOWLLiteralNode()); if (literalRendering.isPresent()) { if (literalRendering.get().getOWLLiteralType().isQuotedOWLLiteral()) return java.util.Optional.of(new org.mm.rendering.text.TextRendering(((\"\\\"\" + (literalRendering.get().getRawValue())) + \"\\\"\"))); else return java.util.Optional.empty(); }else return java.util.Optional.empty(); }else throw new org.mm.renderer.InternalRendererException((\"unknown child for node \" + (annotationValueNode.getNodeName())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/9162/buggy-version/src.main.java.org.mm.renderer.text.TextRenderer.java", "BodyUseAPI": ["org.mm.parser.node.OWLAnnotationValueNode.getNameNode()", "org.mm.parser.node.OWLAnnotationValueNode.getOWLLiteralNode()", "org.mm.parser.node.OWLAnnotationValueNode.getNodeName()", "org.mm.parser.node.OWLAnnotationValueNode.isLiteral()", "org.mm.renderer.text.TextRenderer.renderName(annotationValueNode.getNameNode())", "org.mm.renderer.text.TextRenderer.renderOWLLiteral(annotationValueNode.getOWLLiteralNode())", "org.mm.parser.node.OWLAnnotationValueNode.getReferenceNode()", "org.mm.parser.node.OWLAnnotationValueNode.isName()"], "Fixed commit": "2dba2f206cec571e665758d7ee3b02fb84ad398c", "Url": "https://api.github.com/repos/protegeproject/mapping-master", "Date": "2015-07-26T05:25:21Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.k.midishapes.midi.MidiDisplayer.shutdown.get()) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7587/buggy-version/src.com.k.midishapes.midi.MidiDisplayer.java", "BodyUseAPI": [], "Fixed commit": "00efbaf95a2d4e91330677a11f556888a9e48e53", "Url": "https://api.github.com/repos/TechShroom/MidiShapesEL", "Date": "2015-12-13T05:35:48Z"},
{"Line": "=>1217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ret < 0) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8199/buggy-version/hadoop-hdfs-project.hadoop-hdfs.src.main.java.org.apache.hadoop.hdfs.DFSInputStream.java", "BodyUseAPI": [], "Fixed commit": "07348360ae4a325a89f6db04edfed65fcb175124", "Url": "https://api.github.com/repos/drankye/hadoop", "Date": "2015-09-01T18:13:11Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mIsPaused) || (checkNavigationHelper())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8261/buggy-version/app.src.net.reichholf.dreamdroid.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "92c32011bdf76437c4a2cd79a349f17c80d3b1d7", "Url": "https://api.github.com/repos/sreichholf/dreamDroid", "Date": "2017-03-05T14:01:27Z"},
{"Line": "=>594", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((task.getParent().getEndDate()) != null) { timeDisplayLabel.setText((\"From \" + (dateFormatter.format(task.getDueDate())))); }else { timeDisplayLabel.setText((\"By \" + (dateFormatter.format(task.getDueDate())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/9061/buggy-version/source.src.planner.TaskBar.java", "BodyUseAPI": ["javax.swing.JLabel.setText((\"From \" + (dateFormatter.format(task.getDueDate()))))", "planner.DisplayTask.getDueDate()", "java.text.SimpleDateFormat.format(task.getDueDate())", "planner.DisplayTask.getDueDate()", "java.text.SimpleDateFormat.format(task.getDueDate())", "javax.swing.JLabel.setText((\"By \" + (dateFormatter.format(task.getDueDate()))))"], "Fixed commit": "49888bfdd2c95e28893cef359b7c67b66241ec2c", "Url": "https://api.github.com/repos/cs2103jan2015-w15-4j/main", "Date": "2015-04-05T21:00:16Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((username) != null) && (!(username.getText().toString().isEmpty()))) && ((password) != null)) && (!(password.getText().toString().isEmpty()))) { firebaseAuth.signInWithEmailAndPassword(username.getText().toString().trim(), password.getText().toString().trim()).addOnCompleteListener(new com.google.android.gms.tasks.OnCompleteListener<com.google.firebase.auth.AuthResult>() { @java.lang.Override public void onComplete(@android.support.annotation.NonNull com.google.android.gms.tasks.Task<com.google.firebase.auth.AuthResult> task) { if (!(task.isSuccessful())) { android.widget.Toast.makeText(getApplicationContext(), \"P\u0159ihl\u00e1\u0161en\u00ed se nezda\u0159ilo\", Toast.LENGTH_SHORT).show(); } } }); }else { android.widget.Toast.makeText(getApplicationContext(), \"Vypl\u0148te v\u0161echny \u00fadaje\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7110/buggy-version/im_app.app.src.main.java.cz.vspj.schrek.im.activity.LoginAcitivty.java", "BodyUseAPI": ["password.getText().toString()", "android.widget.EditText.getText()", "username.getText().toString().trim()", "firebaseAuth.signInWithEmailAndPassword(username.getText().toString().trim(), password.getText().toString().trim()).addOnCompleteListener(com.google.android.gms.tasks.OnCompleteListener<com.google.firebase.auth.AuthResult>)", "password.getText().toString().trim()", "username.getText().toString()", "com.google.firebase.auth.FirebaseAuth.signInWithEmailAndPassword(username.getText().toString().trim(),password.getText().toString().trim())", "android.widget.EditText.getText()"], "Fixed commit": "a7d7275bf54bb6ee9bff6e49415ff0b21f04e11f", "Url": "https://api.github.com/repos/schrek1/bachelor-android-app", "Date": "2017-03-29T12:05:08Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((priorWeights.length) <= 0) return java.lang.Double.NEGATIVE_INFINITY;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3493/buggy-version/open-tracking-tools-api.src.main.java.org.opentrackingtools.distributions.PathStateMixtureDensityModel.java", "BodyUseAPI": [], "Fixed commit": "05f6ce279bf18287326759be37e3b62c45834f64", "Url": "https://api.github.com/repos/openplans/open-tracking-tools", "Date": "2013-03-26T02:48:08Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTree.getLastSelectedPathComponent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(selectedNode.isLeaf())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3497/buggy-version/src.gui.MainInputForm.java", "BodyUseAPI": [], "Fixed commit": "bb3bebeaa5069032ea7540e67b2c1233a5b71a8c", "Url": "https://api.github.com/repos/QuietOne/FONup", "Date": "2014-06-10T20:13:40Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<de.verygame.xue.mapping.tag.attribute.AttributeGroup<? super T>, java.util.Map<java.lang.String, java.lang.Object>>.get(de.verygame.xue.mapping.tag.attribute.AttributeGroup<? super T>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (entry == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4221/buggy-version/xue.src.main.java.de.verygame.xue.mapping.tag.XueAbstractElementTag.java", "BodyUseAPI": [], "Fixed commit": "c02b53f8e9eb5482b7e99fbe3a73d5e00bcd0186", "Url": "https://api.github.com/repos/rcschrg/XUE", "Date": "2017-05-15T20:39:23Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((word1 == null) || (word2 == null)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8867/buggy-version/src.SearchUtils.DocResult.java", "BodyUseAPI": [], "Fixed commit": "c5b0bd31fbe6e1aed3128ec8feed7272ef37c366", "Url": "https://api.github.com/repos/dichenli/DynamoDB555", "Date": "2015-05-05T03:14:06Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(aPane.getChildren().contains(aSketch.getPath()))) { aPane.getChildren().add(aSketch.getPath()); aSketch.getPath().toFront(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4880/buggy-version/src.util.commands.AddDeleteSketchCommand.java", "BodyUseAPI": ["model.Sketch.getPath()", "javafx.scene.layout.Pane.getChildren()", "model.Sketch.getPath()", "aSketch.getPath().toFront()", "aPane.getChildren().add(aSketch.getPath())"], "Fixed commit": "42031ec87f69d60ecc6ecd85addc35307031396b", "Url": "https://api.github.com/repos/chichoch/PenguinUML", "Date": "2016-03-03T14:42:22Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (mode.equals(MainView.ADD)) setView(new passwordgenerator.view.AddView(this.passwords, this)); else if (mode.equals(MainView.ADD_OWN)) setView(new passwordgenerator.view.AddOwnView(this.passwords, this));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4569/buggy-version/password-manager.src.passwordgenerator.controller.AddPController.java", "BodyUseAPI": [], "Fixed commit": "98f6d6b39ddb1279422d830f1013e5adfef6b64a", "Url": "https://api.github.com/repos/BMamba2942/password-manager", "Date": "2015-04-06T00:26:02Z"},
{"Line": "=>675", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((partialResultsCellSizes) == 0) { clearPartialResults(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3533/buggy-version/hbase-client.src.main.java.org.apache.hadoop.hbase.client.ClientScanner.java", "BodyUseAPI": [], "Fixed commit": "b635414e8337be7bc14ca6ae605749c35569b4f7", "Url": "https://api.github.com/repos/apache/hbase", "Date": "2017-03-07T14:23:56Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (element.hasAttribute(\"connection-factory\")) { listenerContainerDefinition.getPropertyValues().add(org.axonframework.contextsupport.spring.amqp.TerminalBeanDefinitionParser.BEAN_REFERENCE_PROPERTIES.get(\"connection-factory\"), new org.springframework.beans.factory.config.RuntimeBeanReference(element.getAttribute(\"connection-factory\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8926/buggy-version/amqp.src.main.java.org.axonframework.contextsupport.spring.amqp.TerminalBeanDefinitionParser.java", "BodyUseAPI": ["org.w3c.dom.Element.getAttribute(java.lang.String)", "listenerContainerDefinition.getPropertyValues().add(java.lang.String,org.springframework.beans.factory.config.RuntimeBeanReference)"], "Fixed commit": "4ae76c7c4c6260a10a7653be3c5ec7390c65c07e", "Url": "https://api.github.com/repos/viadeo/AxonFramework", "Date": "2013-01-20T17:33:03Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (group != null) { key += group; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8234/buggy-version/dubbo-open.src.main.java.com.alibaba.dubbo.open.proxy.ProxyServiceFactory.java", "BodyUseAPI": [], "Fixed commit": "034fd2943b57aa7ed56ce2b78d9d63719ab57be4", "Url": "https://api.github.com/repos/HaoZhang6/dubbox", "Date": "2016-09-30T02:19:00Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (version != null) { key += version; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8234/buggy-version/dubbo-open.src.main.java.com.alibaba.dubbo.open.proxy.ProxyServiceFactory.java", "BodyUseAPI": [], "Fixed commit": "034fd2943b57aa7ed56ce2b78d9d63719ab57be4", "Url": "https://api.github.com/repos/HaoZhang6/dubbox", "Date": "2016-09-30T02:19:00Z"},
{"Line": "=>780", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["won.protocol.util.RdfUtils.ModelVisitor<T>.visit(modelIterator.next())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (newResult != null) { if (result != null) { if ((!allowSame) || (!(result.equals(newResult)))) { throw new won.protocol.exception.IncorrectPropertyCountException((\"Results were found in more than \" + \"one model\"), 1, 2); } } result = newResult; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8993/buggy-version/webofneeds.won-core.src.main.java.won.protocol.util.RdfUtils.java", "BodyUseAPI": ["T.equals(T)"], "Fixed commit": "670c5fea626d1e45f8b36b60d471638402bf54b7", "Url": "https://api.github.com/repos/researchstudio-sat/webofneeds", "Date": "2014-09-22T14:04:27Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((check.charAt(i)) == '1') { zipString += \":::||\"; }else if ((check.charAt(i)) == '2') { zipString += \"::|:|\"; }else if ((check.charAt(i)) == '3') { zipString += \"::||:\"; }else if ((check.charAt(i)) == '4') { zipString += \":|::|\"; }else if ((check.charAt(i)) == '5') { zipString += \":|:|:\"; }else if ((check.charAt(i)) == '6') { zipString += \":||::\"; }else if ((check.charAt(i)) == '7') { zipString += \"|:::|\"; }else if ((check.charAt(i)) == '8') { zipString += \"|::|:\"; }else if ((check.charAt(i)) == '9') { zipString += \"|:|::\"; }else { throw new java.lang.IllegalArgumentException(\"zip is not the correct length\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1804/buggy-version/03Barcode.Barcode.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.lang.String.charAt(int)", "java.lang.String.charAt(int)", "java.lang.String.charAt(int)", "java.lang.String.charAt(int)", "java.lang.String.charAt(int)", "java.lang.String.charAt(int)", "java.lang.String.charAt(int)"], "Fixed commit": "c693b43db9fca4bb2020bf10383a6a979c995ccb", "Url": "https://api.github.com/repos/MashaZorin/MKS21X", "Date": "2016-12-13T11:46:23Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (childrenOrganizations != null) { childrenOrganizations.stream().forEach(( childOrganization) -> { childOrganization.addParentOrganization(this); }); this.childrenOrganizations = childrenOrganizations; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1252/buggy-version/src.main.java.org.tdl.vireo.model.Organization.java", "BodyUseAPI": ["java.util.Set<org.tdl.vireo.model.Organization>.stream()", "java.util.stream.Stream<org.tdl.vireo.model.Organization>.forEach(java.util.function.Consumer<? super org.tdl.vireo.model.Organization>)"], "Fixed commit": "10124d5ad14a8ed9074e52835eb984c6e474011c", "Url": "https://api.github.com/repos/TexasDigitalLibrary/Vireo", "Date": "2015-12-08T22:59:03Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (startFrame > endFrame) { analyzerPanel.displayMessagePopup(\"Start frame must be smaller than end frame.\"); }else if ((startFrame <= 0) || (endFrame <= 0)) { analyzerPanel.displayMessagePopup(\"Frame numbers must be larger than 0.\"); }else { analyzerPanel.setDrawTrajectories(startFrame, endFrame); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4067/buggy-version/src.edu.lclark.drosophila.ButtonToolbar.java", "BodyUseAPI": ["edu.lclark.drosophila.AnalyzerPanel.setDrawTrajectories(int,int)"], "Fixed commit": "9f9cd8397cba99110b2b9bec3e106ff968ae4855", "Url": "https://api.github.com/repos/PeterDrake/Drosophila", "Date": "2014-04-15T22:32:35Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) { mUri = extraStreamUri; }else { mUri = resolvedUri; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1164/buggy-version/SmartReceiptsLibrary.src.main.java.co.smartreceipts.android.model.Attachment.java", "BodyUseAPI": [], "Fixed commit": "5c22c022cc2f65dbc73a111903141060fe0153b7", "Url": "https://api.github.com/repos/wbaumann/SmartReceiptsLibrary", "Date": "2016-04-02T17:58:00Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(filePath.exists())) { filePath = new java.io.File(((\"resources\" + (java.io.File.separator)) + \"client-truststore.jks\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5424/buggy-version/jvm-monitor-agent.src.main.java.communicator.DASPublisher.java", "BodyUseAPI": [], "Fixed commit": "22ae9b82790ab9ae7d28ee7fbe3febd9bebd6aca", "Url": "https://api.github.com/repos/wso2-incubator/automatic-anomaly-detection", "Date": "2016-11-29T08:16:45Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cardsFile.exists()) { java.util.List<java.lang.String> cardJsons = java.nio.file.Files.readAllLines(java.nio.file.Paths.get(cardsFilePath)); for (java.lang.String cardJson : cardJsons) { com.mmerhav.weiboidextractor.selenium.core.model.Card card = gson.fromJson(cardJson, com.mmerhav.weiboidextractor.selenium.core.model.Card.class); cards.add(card); } }else { cardsFile.createNewFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7717/buggy-version/src.main.java.com.mmerhav.weiboidextractor.selenium.core.repository.RepositoryImpl.java", "BodyUseAPI": ["java.io.File.createNewFile()"], "Fixed commit": "6b0d7ec1520f4540cc1ff50b727288b6890f70a9", "Url": "https://api.github.com/repos/Nom1fan/WeiboIdExtractor", "Date": "2017-12-16T21:41:51Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isShowRange) { if ((org.robobrain.sdk.input.Multitouch.getState(0)) == (org.robobrain.sdk.input.Multitouch.POINTER_DOWN)) { if (((((org.robobrain.sdk.input.Multitouch.getX(0)) < (((super.x) + ((crazytd.map.Block.tileSize) / 2)) + ((crazytd.map.Block.tileSize) / 2))) && ((org.robobrain.sdk.input.Multitouch.getX(0)) > (((super.x) + ((crazytd.map.Block.tileSize) / 2)) - ((crazytd.map.Block.tileSize) / 2)))) && ((org.robobrain.sdk.input.Multitouch.getY(0)) < (((super.y) - ((crazytd.map.Block.tileSize) / 2)) + ((crazytd.map.Block.tileSize) / 4)))) && ((org.robobrain.sdk.input.Multitouch.getY(0)) > (((super.y) - ((crazytd.map.Block.tileSize) / 2)) - ((crazytd.map.Block.tileSize) / 4)))) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6043/buggy-version/TD.src.crazytd.sprites.Tower.java", "BodyUseAPI": [], "Fixed commit": "47eb38e4f3cd80008dde8ed57861dafa8906ac9e", "Url": "https://api.github.com/repos/jimmy-gnahz/CrazyTD", "Date": "2014-02-03T20:55:44Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentPlayer) == null) || ((currentPlayer.getName().compareTo(humanPlayer.getName())) != 0)) { javax.swing.JOptionPane.showMessageDialog(null, \"It's not your turn.\"); }else { accusationDialog.setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3659/buggy-version/src.clueGame.GameControlPanel.java", "BodyUseAPI": [], "Fixed commit": "fbecfd090cf3564e92c6df02b0046f154990f65c", "Url": "https://api.github.com/repos/Narvey/ClueGame", "Date": "2012-11-13T15:08:11Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPlayer) != null) { mPlayer.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5745/buggy-version/app.src.main.java.com.mobile.myweather.app.ShowWeather.java", "BodyUseAPI": [], "Fixed commit": "8240025a193fc6c66cf830d77744af2db1c4fae5", "Url": "https://api.github.com/repos/jmg2014/MyWeatherApp", "Date": "2015-05-02T10:27:03Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.mobile.myweather.app.WeatherMapActivity.mPlayer) != null) { com.mobile.myweather.app.WeatherMapActivity.mPlayer.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5745/buggy-version/app.src.main.java.com.mobile.myweather.app.WeatherMapActivity.java", "BodyUseAPI": [], "Fixed commit": "8240025a193fc6c66cf830d77744af2db1c4fae5", "Url": "https://api.github.com/repos/jmg2014/MyWeatherApp", "Date": "2015-05-02T10:27:03Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (tmpName != null) { if (this.dbController.levelIsExisting(tmpName)) { this.levelName = tmpName; this.workspaceController.setMatModelArray(this.dbController.loadLevel(tmpName)); }else { javax.swing.JOptionPane.showMessageDialog(null, \"Level existiert nicht!\", \"Fehler beim Laden\", javax.swing.JOptionPane.WARNING_MESSAGE); this.initiateLoad(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3183/buggy-version/src.Controller.EditorController.java", "BodyUseAPI": ["Controller.DBController.levelIsExisting(java.lang.String)", "Controller.WorkspaceController.setMatModelArray(this.dbController.loadLevel(tmpName))", "Controller.DBController.loadLevel(java.lang.String)"], "Fixed commit": "3e4a101913e3c069bf528a42c1cb6735b40e64bc", "Url": "https://api.github.com/repos/G4mble/LevelEditor", "Date": "2015-01-14T10:27:35Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getPackageManager().queryIntentActivities(i, PackageManager.MATCH_DEFAULT_ONLY).size()) > 0) { startActivity(i); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5356/buggy-version/Android.src.main.java.org.droidplanner.pebble.MainActivity.java", "BodyUseAPI": ["org.droidplanner.pebble.MainActivity.1.startActivity(android.content.Intent)"], "Fixed commit": "9f088cc2efde73dc65dedf6378489f9bf72dc36e", "Url": "https://api.github.com/repos/DroidPlanner/tower-pebble", "Date": "2015-03-20T15:45:58Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"gd1wifiue\".equals(Build.PRODUCT)) { com.commonsware.cwac.camera.DeviceProfile.SINGLETON = new com.commonsware.cwac.camera.DeviceProfile.SamsungGalaxyCameraDeviceProfile(); }else if (\"espressowifiue\".equals(Build.PRODUCT)) { com.commonsware.cwac.camera.DeviceProfile.SINGLETON = new com.commonsware.cwac.camera.DeviceProfile.SamsungGalaxyTab2Profile(); }else if (\"samsung\".equalsIgnoreCase(Build.MANUFACTURER)) { com.commonsware.cwac.camera.DeviceProfile.SINGLETON = new com.commonsware.cwac.camera.DeviceProfile.SamsungDeviceProfile(); }else if (\"motorola\".equalsIgnoreCase(Build.MANUFACTURER)) { com.commonsware.cwac.camera.DeviceProfile.SINGLETON = new com.commonsware.cwac.camera.DeviceProfile.MotorolaDeviceProfile(); }else if (\"htc_vivow\".equalsIgnoreCase(Build.PRODUCT)) { com.commonsware.cwac.camera.DeviceProfile.SINGLETON = new com.commonsware.cwac.camera.DeviceProfile.DroidIncredible2Profile(); }else if (\"C1505_1271-7585\".equalsIgnoreCase(Build.PRODUCT)) { com.commonsware.cwac.camera.DeviceProfile.SINGLETON = new com.commonsware.cwac.camera.DeviceProfile.SonyXperiaEProfile(); }else { com.commonsware.cwac.camera.DeviceProfile.SINGLETON = new com.commonsware.cwac.camera.DeviceProfile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6374/buggy-version/src.com.commonsware.cwac.camera.DeviceProfile.java", "BodyUseAPI": [], "Fixed commit": "9aa44bd1e4ab7deb5beddee2a431876d724301a1", "Url": "https://api.github.com/repos/commonsguy/cwac-camera", "Date": "2013-09-15T16:20:58Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dianping.pigeon.config.ConfigManager.getStringValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(governorAddr)) { page.setGovernorUrl(((governorAddr + \"/services/\") + (com.dianping.pigeon.console.servlet.ServiceServlet.configManager.getAppName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/474/buggy-version/pigeon-console.src.main.java.com.dianping.pigeon.console.servlet.ServiceServlet.java", "BodyUseAPI": ["com.dianping.pigeon.console.servlet.ServicePage.setGovernorUrl(((governorAddr + \"/services/\") + (com.dianping.pigeon.console.servlet.ServiceServlet.configManager.getAppName())))"], "Fixed commit": "b0c0d8b862876ac3d7fd1e2f8e54574623e87b31", "Url": "https://api.github.com/repos/dianping/pigeon", "Date": "2017-02-04T07:39:11Z"},
{"Line": "=>547", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ca2[0].getGroup().getChain().getParent()) != null) { a.setName2(ca2[0].getGroup().getChain().getParent().getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/878/buggy-version/biojava3-structure.src.main.java.org.biojava.bio.structure.align.util.AlignmentTools.java", "BodyUseAPI": ["org.biojava.bio.structure.align.model.AFPChain.setName2(ca2[0].getGroup().getChain().getParent().getName())", "ca2[0].getGroup().getChain().getParent().getName()", "ca2[0].getGroup().getChain().getParent()", "ca2[0].getGroup()", "ca2[0].getGroup().getChain()"], "Fixed commit": "ca13f6a11927595cf09c6b173b1bbb600da6727f", "Url": "https://api.github.com/repos/josemduarte/biojava", "Date": "2013-11-23T02:41:05Z"},
{"Line": "=>2964", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ge.research.sadl.jena.JenaBasedSadlModelValidator.getType(com.ge.research.sadl.sADL.Expression)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((varType.getTypeCheckType()) != null) && ((varType.getTypeCheckType()) instanceof com.ge.research.sadl.model.gp.NamedNode)) { leftDefnType = ((com.ge.research.sadl.model.gp.NamedNode) (varType.getTypeCheckType())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2095/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.JenaBasedSadlModelProcessor.java", "BodyUseAPI": ["com.ge.research.sadl.jena.JenaBasedSadlModelValidator.TypeCheckInfo.getTypeCheckType()"], "Fixed commit": "cb67abcb9aaf29cc5fb1ca3925d2f67081da5bd9", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2017-12-02T22:20:37Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list.isEmpty()) { getLog().warn(((cucumberOutput.getAbsolutePath()) + \" does not exist.\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3988/buggy-version/src.main.java.net.masterthought.cucumber.CucumberReportGeneratorMojo.java", "BodyUseAPI": [], "Fixed commit": "3928298277a8009bb92fe9424657c5d69397084e", "Url": "https://api.github.com/repos/mhshams/maven-cucumber-reporting-mojo", "Date": "2014-12-13T22:23:38Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((algorithmsVisualiser.Button) (cl)).label.matches(\"Asc\")) { clearOptions(1); asc = true; ((algorithmsVisualiser.OptionButton) (cl)).active = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/690/buggy-version/src.algorithmsVisualiser.Visualiser.java", "BodyUseAPI": [], "Fixed commit": "1a6c3f4aa1864207eb7a98ddd772cff3ad123842", "Url": "https://api.github.com/repos/ciarancDT228/Algorithms", "Date": "2016-04-20T22:26:47Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((algorithmsVisualiser.Button) (cl)).label.matches(\"Random\")) { clearOptions(1); random = true; ((algorithmsVisualiser.OptionButton) (cl)).active = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/690/buggy-version/src.algorithmsVisualiser.Visualiser.java", "BodyUseAPI": [], "Fixed commit": "1a6c3f4aa1864207eb7a98ddd772cff3ad123842", "Url": "https://api.github.com/repos/ciarancDT228/Algorithms", "Date": "2016-04-20T22:26:47Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((algorithmsVisualiser.Button) (cl)).label.matches(\"Bubble\")) { clearOptions(2); bubble = true; ((algorithmsVisualiser.OptionButton2) (cl)).active = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/690/buggy-version/src.algorithmsVisualiser.Visualiser.java", "BodyUseAPI": [], "Fixed commit": "1a6c3f4aa1864207eb7a98ddd772cff3ad123842", "Url": "https://api.github.com/repos/ciarancDT228/Algorithms", "Date": "2016-04-20T22:26:47Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((algorithmsVisualiser.Button) (cl)).label.matches(\"Reset\")) { setArray(get(\"Size\")); resetFlags(); enableRun(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/690/buggy-version/src.algorithmsVisualiser.Visualiser.java", "BodyUseAPI": [], "Fixed commit": "1a6c3f4aa1864207eb7a98ddd772cff3ad123842", "Url": "https://api.github.com/repos/ciarancDT228/Algorithms", "Date": "2016-04-20T22:26:47Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((algorithmsVisualiser.Button) (cl)).label.matches(\"Heap\")) { clearOptions(2); heap = true; ((algorithmsVisualiser.OptionButton2) (cl)).active = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/690/buggy-version/src.algorithmsVisualiser.Visualiser.java", "BodyUseAPI": [], "Fixed commit": "1a6c3f4aa1864207eb7a98ddd772cff3ad123842", "Url": "https://api.github.com/repos/ciarancDT228/Algorithms", "Date": "2016-04-20T22:26:47Z"},
{"Line": "=>1629", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRecording) recordingEndTime = counter;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/933/buggy-version/app.src.main.java.com.nakedape.mixmaticlaunchpad.LaunchPadActivity.java", "BodyUseAPI": [], "Fixed commit": "d169843de243adfb2ae4743355bff95bf79976fa", "Url": "https://api.github.com/repos/boozey/MixMaticTouchPad", "Date": "2014-11-05T02:37:47Z"},
{"Line": "=>675", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPlaying) disconnectTouchListeners();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/933/buggy-version/app.src.main.java.com.nakedape.mixmaticlaunchpad.LaunchPadActivity.java", "BodyUseAPI": [], "Fixed commit": "d169843de243adfb2ae4743355bff95bf79976fa", "Url": "https://api.github.com/repos/boozey/MixMaticTouchPad", "Date": "2014-11-05T02:37:47Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.windup.config.parser.ParserContext.processElement(org.w3c.dom.Element)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (object instanceof org.ocpsoft.rewrite.config.Operation) { operations.add(((org.ocpsoft.rewrite.config.Operation) (object))); }else if (object instanceof org.ocpsoft.rewrite.config.Condition) { iterationOver.when(((org.ocpsoft.rewrite.config.Condition) (object))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/689/buggy-version/config-xml.src.main.java.org.jboss.windup.config.parser.xml.perform.IterationHandler.java", "BodyUseAPI": [], "Fixed commit": "6754ccab2ec68f8e20516acc0cdce001aeacd640", "Url": "https://api.github.com/repos/windup/windup", "Date": "2014-12-11T22:21:18Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(source.canTakeStack(context.player))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6847/buggy-version/src.main.java.cpw.mods.inventorysorter.ScrollWheelHandler.java", "BodyUseAPI": [], "Fixed commit": "7e566f09c4ba9e402ead25e97c4cebb6b7660af1", "Url": "https://api.github.com/repos/cpw/inventorysorter", "Date": "2016-03-19T22:25:09Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["InventoryHandler.INSTANCE.getItemStack(Action.ActionContext)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(source.isItemValid(is))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6847/buggy-version/src.main.java.cpw.mods.inventorysorter.ScrollWheelHandler.java", "BodyUseAPI": [], "Fixed commit": "7e566f09c4ba9e402ead25e97c4cebb6b7660af1", "Url": "https://api.github.com/repos/cpw/inventorysorter", "Date": "2016-03-19T22:25:09Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((returnType == (java.lang.Double.class)) || (returnType == (double.class))) { return ((T) (cz.datalite.dao.plsql.helpers.ObjectHelper.extractDouble(value))); }else if (returnType == (java.math.BigDecimal.class)) { return ((T) (cz.datalite.dao.plsql.helpers.ObjectHelper.extractBigDecimal(value))); }else if ((returnType == (java.lang.Boolean.class)) || (returnType == (boolean.class))) { return ((T) (cz.datalite.dao.plsql.helpers.ObjectHelper.extractBoolean(value))); }else if (returnType == (java.lang.String.class)) { return ((T) (cz.datalite.dao.plsql.helpers.ObjectHelper.extractString(value))); }else if (returnType.isEnum()) { return ((T) (cz.datalite.dao.plsql.helpers.EnumHelper.getEnumValue(returnType, cz.datalite.dao.plsql.helpers.ObjectHelper.extractString(value)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3821/buggy-version/SpringService.src.main.java.cz.datalite.dao.plsql.helpers.ObjectHelper.java", "BodyUseAPI": ["cz.datalite.dao.plsql.helpers.EnumHelper.getEnumValue(java.lang.Class<T>,java.lang.String)", "java.lang.Class<T>.isEnum()"], "Fixed commit": "ba8f52a34515593b36a3d9802cd3ba4b73e0c070", "Url": "https://api.github.com/repos/DataLite/zk-dl", "Date": "2014-01-08T08:30:27Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flag) { java.lang.System.out.print(\", \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3914/buggy-version/src.services.CommandService.java", "BodyUseAPI": [], "Fixed commit": "4b48c49c948e96023be2331ba3ea5efd3874a658", "Url": "https://api.github.com/repos/thevicky/project1", "Date": "2016-06-09T18:09:34Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flag) { java.lang.System.out.print(\", \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3914/buggy-version/src.services.CommandService.java", "BodyUseAPI": [], "Fixed commit": "4b48c49c948e96023be2331ba3ea5efd3874a658", "Url": "https://api.github.com/repos/thevicky/project1", "Date": "2016-06-09T18:09:34Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Paths.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(path.isAbsolute())) { path = java.nio.file.Paths.get(projectLocation.append(pathStr).toOSString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8232/buggy-version/Ocaml.src.ocaml.debugging.OcamlDebugger.java", "BodyUseAPI": [], "Fixed commit": "516c72e749f7e9b9bd6d37b62d7c993ca800cf15", "Url": "https://api.github.com/repos/nbros/OcaIDE", "Date": "2014-02-19T09:52:36Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.osmand.exceptionanalyzer.ExceptionAnalyzerMain.DOWNLOAD_MESSAGES) { net.osmand.exceptionanalyzer.ExceptionAnalyzerMain.downloadAttachments(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4187/buggy-version/support-tools.ExceptionAnalyzer.src.main.java.net.osmand.exceptionanalyzer.ExceptionAnalyzerMain.java", "BodyUseAPI": [], "Fixed commit": "7a2c62755f31b11e38485f418d007835a912f035", "Url": "https://api.github.com/repos/osmandapp/OsmAnd-tools", "Date": "2017-05-31T11:29:15Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((device.getName()) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4250/buggy-version/Tendu-android.src.it.chalmers.tendu.network.bluetooth.BluetoothHandler.java", "BodyUseAPI": [], "Fixed commit": "5415b6fd5e3a8b0e876c4b08c452da6f3173109f", "Url": "https://api.github.com/repos/tortal/IT2-LP1-Tendu", "Date": "2013-09-26T09:16:59Z"},
{"Line": "=>926", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["DerpyAI.DerpyAI.threateningPiecesToThem(DerpyAI.DerpyPiece)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((piecesWeCanTakeWith.size()) > 0) { return this.movePiece(piecesWeCanTakeWith.get(0), p.getLocation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/378/buggy-version/src.DerpyAI.DerpyAI.java", "BodyUseAPI": ["DerpyAI.DerpyAI.movePiece(piecesWeCanTakeWith.get(0),p.getLocation())", "java.util.ArrayList<DerpyAI.DerpyPiece>.get(int)"], "Fixed commit": "9f357d3b8978db0e07ea2c08e549962641b4a9a7", "Url": "https://api.github.com/repos/MrClement/Chess", "Date": "2012-10-30T15:33:02Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((client) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2234/buggy-version/src.main.java.redis.clients.jedis.JedisPubSub.java", "BodyUseAPI": [], "Fixed commit": "e211a2fdeec098d18001fc199aa9ed23b6384ad2", "Url": "https://api.github.com/repos/carlvine500/jedis", "Date": "2016-11-30T02:04:50Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.seqcode.projects.chexmix.events.BindingManager.getBindingSubtype(org.seqcode.deepseq.experiments.ExperimentCondition)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (subtypes.get(m).hasMotif()) { double currThreshold = (subtypes.get(m).getMotif().getMaxScore()) * (motifThres); for (int x = 0; x < (scores[m].length); x++) if (((scores[m][x]) >= currThreshold) && ((java.lang.Math.abs((x - index))) < closestMatch)) closestMatch = java.lang.Math.abs((x - index)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7121/buggy-version/src.org.seqcode.projects.chexmix.utilities.EventsPostAnalysis.java", "BodyUseAPI": ["subtypes.get(m).getMotif()", "subtypes.get(m).getMotif().getMaxScore()", "java.util.List<org.seqcode.projects.chexmix.events.BindingSubtype>.get(int)"], "Fixed commit": "3c7f5c46cd9e5e23d84100b350e044d4e3d5fa22", "Url": "https://api.github.com/repos/seqcode/chexmix", "Date": "2017-12-04T03:48:01Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (rightSide) startingHand = 2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5613/buggy-version/src.main.java.edu.mines.csci598.recycler.frontend.GameLogic.java", "BodyUseAPI": [], "Fixed commit": "8019d660c93fb67818040446a7eedf4bfd55d460", "Url": "https://api.github.com/repos/csci598b/frontend", "Date": "2012-12-03T16:09:37Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.idogfooding.backbone.utils.StrKit.isEmpty(title)) { titleTextView.setVisibility(View.GONE); }else { titleTextView.setVisibility(View.VISIBLE); titleTextView.setText(title); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8684/buggy-version/base.src.main.java.com.idogfooding.backbone.widget.FakeToolbar.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.CharSequence)"], "Fixed commit": "9760af23d55017cc24bcfd5821bcb6ba3d5887ab", "Url": "https://api.github.com/repos/zhangchaoxu/backbone-android", "Date": "2017-06-01T03:00:11Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["yahoofinance.Stock.getQuote()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((quote.getPrice()) == null) || ((quote.getChange()) == null)) || ((quote.getChangeInPercent()) == null)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4051/buggy-version/app.src.main.java.com.udacity.stockhawk.sync.QuoteSyncJob.java", "BodyUseAPI": [], "Fixed commit": "3efe4d3590f8f3f84a25ee86a539f3d6b553aec2", "Url": "https://api.github.com/repos/manbradcalf/StockHawk", "Date": "2016-12-15T18:37:28Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((from) != null) && ((to) != null)) { navigate(new org.osmdroid.util.GeoPoint(from.geometry.coordinates[0], from.geometry.coordinates[1]), new org.osmdroid.util.GeoPoint(to.geometry.coordinates[0], to.geometry.coordinates[1])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1513/buggy-version/app.src.main.java.com.github.jtjj222.sudburytransit.fragments.StopsMapFragment.java", "BodyUseAPI": [], "Fixed commit": "aac2ea8217c3c7345a24280eee54a26b5d6c5baa", "Url": "https://api.github.com/repos/justinmichaud/Sudbury-Transit", "Date": "2015-06-16T22:15:52Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentConfigFile.exists()) { this.primaryStage.setTitle(((\"EasyCIE(__\" + (currentConfigFile.getName())) + \"__)\")); refreshSettings(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7577/buggy-version/src.main.java.edu.utah.bmi.simple.gui.controller.Main.java", "BodyUseAPI": ["java.io.File.getName()", "javafx.stage.Stage.setTitle(java.lang.String)"], "Fixed commit": "7e024f3077248fa7f26987e4ad116027947fd620", "Url": "https://api.github.com/repos/jianlins/EasyCIE_GUI", "Date": "2017-12-01T18:29:03Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((currentTaskName) != null) && ((currentTaskName.length()) > 0)) return tasks.getTask(currentTaskName); else return tasks.getTasksList().get(0).getValue();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7577/buggy-version/src.main.java.edu.utah.bmi.simple.gui.controller.Main.java", "BodyUseAPI": ["edu.utah.bmi.simple.gui.entry.TasksFX.getTask(java.lang.String)"], "Fixed commit": "7e024f3077248fa7f26987e4ad116027947fd620", "Url": "https://api.github.com/repos/jianlins/EasyCIE_GUI", "Date": "2017-12-01T18:29:03Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timeInGame) == 0) { cb = new Command.CommandBall(timeInGame, 0, 20); commandsBall.add(cb); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/302/buggy-version/src.GameState.PlayState.java", "BodyUseAPI": [], "Fixed commit": "ed2237b0378722e894b486d00e6d918569909c63", "Url": "https://api.github.com/repos/Facelespedia/pokemon-volleyball", "Date": "2017-05-26T14:18:08Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stream == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5034/buggy-version/src.main.java.org.juurlink.atagone.utils.IOUtils.java", "BodyUseAPI": [], "Fixed commit": "1232e375ea59b399f72360d37079120d282fcc22", "Url": "https://api.github.com/repos/kozmoz/atag-one-api", "Date": "2015-11-26T08:01:06Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isBestNumPassengers()) { str += \" +vazio\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8636/buggy-version/mobile.src.main.java.br.edu.ufcg.analytics.meliorbusao.models.StopTime.java", "BodyUseAPI": [], "Fixed commit": "efc64f0de689d31757954cb7836480973f2ef29c", "Url": "https://api.github.com/repos/analytics-ufcg/melhorbusao-app", "Date": "2016-12-20T18:44:20Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isBestTripDuration()) { str += \" +r\u00e1pido\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8636/buggy-version/mobile.src.main.java.br.edu.ufcg.analytics.meliorbusao.models.StopTime.java", "BodyUseAPI": [], "Fixed commit": "efc64f0de689d31757954cb7836480973f2ef29c", "Url": "https://api.github.com/repos/analytics-ufcg/melhorbusao-app", "Date": "2016-12-20T18:44:20Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stopTimes == null) { android.widget.Toast.makeText(getContext(), getString(R.string.msg_no_bus_next_hour), Toast.LENGTH_LONG).show(); }else { android.widget.ArrayAdapter<br.edu.ufcg.analytics.meliorbusao.models.StopTime> routesArrayAdapter = new android.widget.ArrayAdapter<br.edu.ufcg.analytics.meliorbusao.models.StopTime>(getContext(), R.layout.schedule_item, stopTimes); mScheduleListView.setAdapter(routesArrayAdapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8636/buggy-version/mobile.src.main.java.br.edu.ufcg.analytics.meliorbusao.fragments.StopScheduleFragment.java", "BodyUseAPI": [], "Fixed commit": "efc64f0de689d31757954cb7836480973f2ef29c", "Url": "https://api.github.com/repos/analytics-ufcg/melhorbusao-app", "Date": "2016-12-20T18:44:20Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) == 6) { tbb.addImage(args[3], args[4], args[5]); }else if ((args.length) == 9) { tbb.addImage(args[3], args[4], args[5]); tbb.addImage(args[6], args[7], args[8]); }else if ((args.length) == 12) { tbb.addImage(args[3], args[4], args[5]); tbb.addImage(args[6], args[7], args[8]); tbb.addImage(args[9], args[10], args[11]); }else { org.literacybridge.acm.tbbuilder.TBBuilder.printUsage(); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4260/buggy-version/acm.src.main.java.org.literacybridge.acm.tbbuilder.TBBuilder.java", "BodyUseAPI": ["org.literacybridge.acm.tbbuilder.TBBuilder.addImage(java.lang.String,java.lang.String,java.lang.String)", "org.literacybridge.acm.tbbuilder.TBBuilder.addImage(java.lang.String,java.lang.String,java.lang.String)", "org.literacybridge.acm.tbbuilder.TBBuilder.addImage(java.lang.String,java.lang.String,java.lang.String)", "org.literacybridge.acm.tbbuilder.TBBuilder.addImage(java.lang.String,java.lang.String,java.lang.String)", "org.literacybridge.acm.tbbuilder.TBBuilder.addImage(java.lang.String,java.lang.String,java.lang.String)", "org.literacybridge.acm.tbbuilder.TBBuilder.addImage(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "fe86bb9ae88bea5d50e0066a0eebb205b353a3cb", "Url": "https://api.github.com/repos/LiteracyBridge/acm", "Date": "2015-06-30T22:13:18Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["config.assets.getAssetType(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (type == null) throw new com.badlogic.gdx.utils.GdxRuntimeException((\"asset manager missing \" + name));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4079/buggy-version/core.src.net.mgsx.game.core.storage.EntityGroupSerializer.java", "BodyUseAPI": [], "Fixed commit": "326d6c62acefea6aa3e3ef8554ddca510cd90aaf", "Url": "https://api.github.com/repos/mgsx-dev/gdx-kit", "Date": "2017-02-19T15:32:39Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.badlogic.gdx.utils.JsonReader.parse(com.badlogic.gdx.files.FileHandle)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (jsonData == null) { java.lang.String message = (\"file \" + fileName) + \" is empty or is not a json file.\"; if (parameter.config.failSafe) { Gdx.app.error(\"Storage\", message); }else { throw new com.badlogic.gdx.utils.GdxRuntimeException(message); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4079/buggy-version/core.src.net.mgsx.game.core.storage.EntityGroupLoader.java", "BodyUseAPI": [], "Fixed commit": "326d6c62acefea6aa3e3ef8554ddca510cd90aaf", "Url": "https://api.github.com/repos/mgsx-dev/gdx-kit", "Date": "2017-02-19T15:32:39Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (root == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4079/buggy-version/core.src.net.mgsx.game.core.storage.EngineStorage.java", "BodyUseAPI": [], "Fixed commit": "326d6c62acefea6aa3e3ef8554ddca510cd90aaf", "Url": "https://api.github.com/repos/mgsx-dev/gdx-kit", "Date": "2017-02-19T15:32:39Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (indexingStartColumnIndex == (partitionColumns.size())) { paths.add(fs.getFileStatus(indexingPath).getPath().toString()); }else { org.apache.hadoop.fs.Path[] pathToFilter = statusToPath(fs.listStatus(indexingPath, new io.druid.indexer.path.PartitionPathSpec.PartitionPathFilter(partitionColumns.get(indexingStartColumnIndex)))); for (int idx = indexingStartColumnIndex + 1; idx < (partitionColumns.size()); idx++) { pathToFilter = statusToPath(fs.listStatus(pathToFilter, new io.druid.indexer.path.PartitionPathSpec.PartitionPathFilter(partitionColumns.get(idx)))); } for (org.apache.hadoop.fs.Path path : pathToFilter) { paths.add(path.toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8890/buggy-version/indexing-hadoop.src.main.java.io.druid.indexer.path.PartitionPathSpec.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "org.apache.hadoop.fs.FileSystem.listStatus(org.apache.hadoop.fs.Path,io.druid.indexer.path.PartitionPathSpec.PartitionPathFilter)", "io.druid.indexer.path.PartitionPathSpec.statusToPath(fs.listStatus(pathToFilter, new io.druid.indexer.path.PartitionPathSpec.PartitionPathFilter(partitionColumns.get(idx))))", "java.util.List<java.lang.String>.get(int)", "io.druid.indexer.path.PartitionPathSpec.statusToPath(fs.listStatus(indexingPath, new io.druid.indexer.path.PartitionPathSpec.PartitionPathFilter(partitionColumns.get(indexingStartColumnIndex))))", "java.util.List<java.lang.String>.get(int)", "org.apache.hadoop.fs.FileSystem.listStatus(org.apache.hadoop.fs.Path[],io.druid.indexer.path.PartitionPathSpec.PartitionPathFilter)"], "Fixed commit": "7f26cb3723eda2c68076c552406b77f0534fd593", "Url": "https://api.github.com/repos/sirpkt/druid", "Date": "2016-05-18T03:55:28Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jp.getCurrentToken()) == (com.fasterxml.jackson.core.JsonToken.VALUE_NULL)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3737/buggy-version/src.main.java.org.emfjson.jackson.databind.deser.EObjectDeserializer.java", "BodyUseAPI": [], "Fixed commit": "515029aa1687938b6f8442d13d57345209232502", "Url": "https://api.github.com/repos/DataInMotion/emfjson-jackson", "Date": "2016-03-16T14:24:59Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentTabPosition) != (-1)) { viewPager.setCurrentItem(currentTabPosition); currentTabPosition = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8374/buggy-version/app.src.main.java.ch.pantas.billsplitter.ui.EventDetails.java", "BodyUseAPI": [], "Fixed commit": "96e36e2e1f680c1e25f98982beea01a454850a93", "Url": "https://api.github.com/repos/ybonjour/BillSplitter", "Date": "2014-10-23T11:58:41Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.zxh.classpy.classfile.ClassReader.readConstantInfo()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((c instanceof com.github.zxh.classpy.classfile.cp.ConstantLongInfo) || (c instanceof com.github.zxh.classpy.classfile.cp.ConstantDoubleInfo)) { i++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7101/buggy-version/src.main.java.com.github.zxh.classpy.classfile.cp.ConstantPool.java", "BodyUseAPI": [], "Fixed commit": "c59f7a1b0e7f6dfe02e6cfc929fe03c5ceacbc83", "Url": "https://api.github.com/repos/zxh0/classpy", "Date": "2014-08-14T06:21:41Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wordpress.android.fluxc.utils.MediaUtils.mediaListFromRestResponse(org.wordpress.android.fluxc.network.rest.wpcom.media.MediaWPComRestResponse.MultipleMediaResponse)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((responseMedia != null) && (!(responseMedia.isEmpty()))) { notifyMediaProgress(responseMedia.get(0), 1.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7510/buggy-version/fluxc.src.main.java.org.wordpress.android.fluxc.network.rest.wpcom.media.MediaRestClient.java", "BodyUseAPI": ["org.wordpress.android.fluxc.network.rest.wpcom.media.MediaRestClient.9.notifyMediaProgress(responseMedia.get(0),float)", "java.util.List<org.wordpress.android.fluxc.model.MediaModel>.get(int)"], "Fixed commit": "dd3a9e91a4df27b195b006c947b837e0d411e7db", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android", "Date": "2016-09-01T23:01:51Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (db.inTransaction()) db.endTransaction();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2550/buggy-version/src.main.java.com.easyliteorm.DaoImpl.java", "BodyUseAPI": ["android.database.sqlite.SQLiteDatabase.endTransaction()"], "Fixed commit": "75fc3bfd036ff56bab674332caf20bd6eddb01ba", "Url": "https://api.github.com/repos/mdennis10/EasyLite-Orm", "Date": "2015-09-06T01:56:11Z"},
{"Line": "=>556", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((actionMode) != null) actionMode.finish();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4228/buggy-version/app.src.main.java.com.pear.shopz.ui.ShopinItemsActivity.java", "BodyUseAPI": [], "Fixed commit": "da7fff14abf1819fcdf8ad8b74e8bdead718fdf7", "Url": "https://api.github.com/repos/Daskott/Shopz", "Date": "2016-04-29T09:37:13Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pathName != null) && (java.lang.String.valueOf(pathName).startsWith(\"WEB-INF/classes/\"))) { result.add(org.openntf.domino.utils.DominoUtils.filePathToJavaBinaryName(((java.lang.String) (pathName)).substring(16), \"/\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3932/buggy-version/org.openntf.domino.src.org.openntf.domino.design.impl.DatabaseDesign.java", "BodyUseAPI": [], "Fixed commit": "649543e51917967c9f14481b36173853df4d19c7", "Url": "https://api.github.com/repos/OpenNTF/org.openntf.domino", "Date": "2014-03-03T22:14:03Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mySeason.seasonList) != 0) { totalEpisodes += mySeason.episodesList.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4904/buggy-version/televisionbingecalculator.src.main.java.com.vanillax.televisionbingecalculator.app.TBC.LandingActivityMain.java", "BodyUseAPI": ["mySeason.episodesList.size()"], "Fixed commit": "004f5a4b3cdf3192e0c681b0d27072ae3c891fa1", "Url": "https://api.github.com/repos/mitchross/TBC", "Date": "2014-07-31T01:27:35Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((footer.getState()) == (RefreshFooter.STATE.LOADING)) || ((footer.getState()) == (RefreshFooter.STATE.SUCCESS))) || ((footer.getState()) == (RefreshFooter.STATE.FAIL))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8477/buggy-version/libpulltorefreshlinearly.src.main.java.com.nsnv.mlib.RefreshLinearly.java", "BodyUseAPI": [], "Fixed commit": "252dfe7d9950e98cc85f7de6f042c0ab3b250196", "Url": "https://api.github.com/repos/ccSun/PulltoRefreshLinearLayout", "Date": "2016-01-09T11:01:54Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mButtonCurrent) == (mButtonOtherDevices)) { infos = com.dpower.function.DPFunction.getAccountByPhonetpye(\"0\"); }else if ((mButtonCurrent) == (mButtonPhoneDevices)) { infos = com.dpower.function.DPFunction.getAccountInfoList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5925/buggy-version/src.com.dpower.pub.dp2700.activity.UnBindDeviceActivity.java", "BodyUseAPI": [], "Fixed commit": "c8350a1d729c0ddefed5f6740762e67806a50955", "Url": "https://api.github.com/repos/lichao3140/Pub2700", "Date": "2017-11-15T08:13:32Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(this.blobs.containsKey(fileName))) || (!(this.blobs.get(fileName).equals(hash)))) this.staged.put(fileName, hash);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8352/buggy-version/proj3.gitlet.Index.java", "BodyUseAPI": ["java.util.TreeMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "a3e87c57aeb63d778766b8e2adad85e901effac7", "Url": "https://api.github.com/repos/MadcowD/CS61B", "Date": "2015-12-10T07:49:13Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((model.getSoftware()) != null) { return new com.bloatit.rest.resources.RestSoftware(model.getSoftware()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7574/buggy-version/main.src.main.java.com.bloatit.rest.resources.RestFeature.java", "BodyUseAPI": ["com.bloatit.model.Feature.getSoftware()"], "Fixed commit": "81fc8e0ec2c8ec373dfc16ddb3721d1ff3837cc8", "Url": "https://api.github.com/repos/BloatIt/bloatit", "Date": "2011-06-14T12:55:10Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null != result) { if (!(eventGroupEnabled)) { onEventHandler(inputEventHandler, result); }else { java.lang.String[] allEvents = java.lang.String.valueOf(result).split(eventDelimiter); int i; for (i = 0; i < ((allEvents.length) - 1); i++) { onEventHandler(inputEventHandler, allEvents[i].substring(0, ((allEvents[i].length()) - (endOfLine.length())))); } onEventHandler(inputEventHandler, allEvents[i]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6075/buggy-version/component.src.main.java.org.wso2.extension.siddhi.map.text.sourcemapper.TextSourceMapper.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.valueOf(java.lang.Object)", "org.wso2.extension.siddhi.map.text.sourcemapper.TextSourceMapper.onEventHandler(org.wso2.siddhi.core.stream.input.source.InputEventHandler,java.lang.Object)"], "Fixed commit": "a03f753111bd955a650d58508a244cf37423c92e", "Url": "https://api.github.com/repos/ChathurikaA/siddhi-map-text", "Date": "2017-10-31T09:54:58Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < 11) { contentParsers[i].execute(fileName[i]); }else { contentParsers[i].executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, fileName[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/9186/buggy-version/src.com.sh1r0.noveldroid.BookWriter.java", "BodyUseAPI": [], "Fixed commit": "16fb78d0a8f908a7efc9c6c84a5aa7d3e2c52e3b", "Url": "https://api.github.com/repos/sh1r0/NovelDroid", "Date": "2013-09-12T09:37:59Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < 11) { contentParsers[i].execute(fileName[i]); }else { contentParsers[i].executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, fileName[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/9186/buggy-version/src.com.sh1r0.noveldroid.BookWriter.java", "BodyUseAPI": [], "Fixed commit": "16fb78d0a8f908a7efc9c6c84a5aa7d3e2c52e3b", "Url": "https://api.github.com/repos/sh1r0/NovelDroid", "Date": "2013-09-12T09:37:59Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((temp == null) && (floor < (highestFloor))) { temp = get_mapcase(x, y, (floor - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/9096/buggy-version/zildo.src.main.java.zildo.monde.map.Area.java", "BodyUseAPI": ["zildo.monde.map.Area.get_mapcase(int,int,int)"], "Fixed commit": "c739ff5616387c2dd6bae936fe0ccb0607252d7e", "Url": "https://api.github.com/repos/tchegito/zildo", "Date": "2017-06-17T23:05:44Z"},
{"Line": "=>672", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["zildo.monde.map.Area.readmap(int,int,boolean,zildo.monde.sprites.persos.Perso)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((tile == null) && ((floor) > 0)) { tile = area.readmap(cx, cy, false, ((floor) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/9096/buggy-version/zildo.src.main.java.zildo.monde.sprites.persos.Perso.java", "BodyUseAPI": ["zildo.monde.map.Area.readmap(int,int,boolean,((floor) - 1))"], "Fixed commit": "c739ff5616387c2dd6bae936fe0ccb0607252d7e", "Url": "https://api.github.com/repos/tchegito/zildo", "Date": "2017-06-17T23:05:44Z"},
{"Line": "=>906", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["zildo.monde.map.Area.isCaseBottomLess(int,int,zildo.monde.sprites.persos.Perso)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((isZildo()) && bottomLess) { fall = zildo.monde.sprites.persos.Perso.tileCollision.collide((((int) (x)) % 16), (((int) (y)) % 16), val, foreTile.reverse, Rotation.NOTHING, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/9096/buggy-version/zildo.src.main.java.zildo.monde.sprites.persos.Perso.java", "BodyUseAPI": [], "Fixed commit": "c739ff5616387c2dd6bae936fe0ccb0607252d7e", "Url": "https://api.github.com/repos/tchegito/zildo", "Date": "2017-06-17T23:05:44Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mekanism.common.multipart.ItemGlowPanel.getSideFromVector3(vHit.subtract(Vector3.center))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((pos != null) && (orientation != null)) { codechicken.lib.vec.BlockCoord pos1 = pos.copy().inset(orientation.getOpposite().ordinal()); if (world.isSideSolid(pos1.x, pos1.y, pos1.z, orientation.getOpposite())) { return new mekanism.common.multipart.PartGlowPanel(col, orientation); } if (((world.getTileEntity(pos.x, pos.y, pos.z)) instanceof codechicken.multipart.TileMultipart) && ((((codechicken.multipart.TileMultipart) (world.getTileEntity(pos.x, pos.y, pos.z))).partMap(orientation.ordinal())) instanceof codechicken.microblock.HollowMicroblock)) { return new mekanism.common.multipart.PartGlowPanel(col, orientation); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5726/buggy-version/src.main.java.mekanism.common.multipart.ItemGlowPanel.java", "BodyUseAPI": ["net.minecraftforge.common.util.ForgeDirection.getOpposite()", "net.minecraftforge.common.util.ForgeDirection.ordinal()", "net.minecraft.world.World.getTileEntity(pos.x,pos.y,pos.z)", "orientation.getOpposite().ordinal()", "net.minecraftforge.common.util.ForgeDirection.getOpposite()", "net.minecraft.world.World.isSideSolid(pos1.x,pos1.y,pos1.z,orientation.getOpposite())", "codechicken.lib.vec.BlockCoord.copy()", "net.minecraft.world.World.getTileEntity(pos.x,pos.y,pos.z)", "((codechicken.multipart.TileMultipart) (world.getTileEntity(pos.x, pos.y, pos.z))).partMap(orientation.ordinal())", "pos.copy().inset(orientation.getOpposite().ordinal())"], "Fixed commit": "10107678d10120f887b74ae773b1380724330405", "Url": "https://api.github.com/repos/Dannerick/Mekanism", "Date": "2014-10-17T16:03:42Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tonynowater.smallplayer.service.MusicProvider.isPlayListAvailable()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isListAvailable) { updateMetadata(mMusicProvider.getCurrentPlayingMediaMetadata()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8155/buggy-version/smallplayer.app.src.main.java.com.tonynowater.smallplayer.service.PlayMusicService.java", "BodyUseAPI": [], "Fixed commit": "59e1437ff99c99d65d81305b31e431f38ddb88f8", "Url": "https://api.github.com/repos/tonynowater87/smallplayer", "Date": "2017-11-09T03:21:22Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.voovan.tools.TByteBuffer.indexOf(byteBuffer, \"HTTP/1.\".getBytes())) != 0) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6646/buggy-version/Network.src.main.java.org.voovan.network.messagesplitter.HttpMessageSplitter.java", "BodyUseAPI": [], "Fixed commit": "6b35739c05c9f77692c7c554de84d3105f6bd3e3", "Url": "https://api.github.com/repos/helyho/Voovan", "Date": "2017-09-14T09:53:40Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jetbrains.java.decompiler.struct.StructClass.getMethods()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((methods.getLast().hasModifier(CodeConstants.ACC_STATIC)) && (org.jetbrains.java.decompiler.main.DecompilerContext.getOption(IFernflowerPreferences.USE_DEBUG_LINE_NUMBERS))) { int firstMethodFirstLine = ((org.jetbrains.java.decompiler.main.StructLineNumberTableAttribute) (cl.getMethods().get(1).getAttributes().getWithKey(StructGeneralAttribute.ATTRIBUTE_LINE_NUMBER_TABLE))).getFirstLine(); int staticFirstLine = ((org.jetbrains.java.decompiler.main.StructLineNumberTableAttribute) (methods.getLast().getAttributes().getWithKey(StructGeneralAttribute.ATTRIBUTE_LINE_NUMBER_TABLE))).getFirstLine(); if (staticFirstLine < firstMethodFirstLine) { methods.add(1, methods.remove(((methods.size()) - 1))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/405/buggy-version/src.org.jetbrains.java.decompiler.main.ClassWriter.java", "BodyUseAPI": ["methods.getLast().getAttributes().getWithKey(StructGeneralAttribute.ATTRIBUTE_LINE_NUMBER_TABLE)", "org.jetbrains.java.decompiler.util.VBStyleCollection<org.jetbrains.java.decompiler.struct.StructMethod, java.lang.String>.add(int,methods.remove(((methods.size()) - 1)))", "((org.jetbrains.java.decompiler.main.StructLineNumberTableAttribute) (methods.getLast().getAttributes().getWithKey(StructGeneralAttribute.ATTRIBUTE_LINE_NUMBER_TABLE))).getFirstLine()", "methods.getLast().getAttributes()", "org.jetbrains.java.decompiler.util.VBStyleCollection<org.jetbrains.java.decompiler.struct.StructMethod, java.lang.String>.getLast()", "org.jetbrains.java.decompiler.util.VBStyleCollection<org.jetbrains.java.decompiler.struct.StructMethod, java.lang.String>.remove(((methods.size()) - 1))", "org.jetbrains.java.decompiler.util.VBStyleCollection<org.jetbrains.java.decompiler.struct.StructMethod, java.lang.String>.size()"], "Fixed commit": "d33d953e80e562d2a11eff0a9a454d9bebf4d07b", "Url": "https://api.github.com/repos/jadawil/fernflower", "Date": "2015-08-04T12:25:45Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.erc.dal.SQLiteDatabaseManager.upgradeable) != null) { com.erc.dal.SQLiteDatabaseManager.upgradeable.onUpgrade(db, oldVersion, newVersion); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7247/buggy-version/DataAccessLayer.dal.src.main.java.com.erc.dal.SQLiteDatabaseManager.java", "BodyUseAPI": [], "Fixed commit": "b7c255a6bfbc6500715a7f3a080d1178209c5806", "Url": "https://api.github.com/repos/rochaeinar/data-access", "Date": "2016-11-27T13:32:02Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sourceforge.pmd.lang.java.ast.ASTMethodDeclaration.getFirstParentOfType(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((body != null) && ((body.jjtGetParent()) instanceof net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration)) { return ((net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration) (body.jjtGetParent())).isInterface(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4761/buggy-version/pmd-java.src.main.java.net.sourceforge.pmd.lang.java.ast.ASTMethodDeclaration.java", "BodyUseAPI": ["((net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration) (body.jjtGetParent())).isInterface()", "net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBody.jjtGetParent()"], "Fixed commit": "64b862eef965aaa39c17db1808063e2f129d7057", "Url": "https://api.github.com/repos/Monits/pmd", "Date": "2017-12-20T21:37:49Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == source) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8983/buggy-version/domain.core.src.main.java.com.zh.cashregister.domain.core.service.mapping.LocalizedCodeConverter.java", "BodyUseAPI": [], "Fixed commit": "6a7757a31145d0f3195f30025a4367451167a0d7", "Url": "https://api.github.com/repos/urgelacko/cashregister", "Date": "2014-05-28T21:32:12Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == source) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8983/buggy-version/domain.core.src.main.java.com.zh.cashregister.domain.core.service.mapping.LocalizedCodeConverter.java", "BodyUseAPI": [], "Fixed commit": "6a7757a31145d0f3195f30025a4367451167a0d7", "Url": "https://api.github.com/repos/urgelacko/cashregister", "Date": "2014-05-28T21:32:12Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((g.getNodeDegree(n)) == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2864/buggy-version/src.uk.ac.kent.dover.fastGraph.EnumerateSubgraphNeighbourhood.java", "BodyUseAPI": [], "Fixed commit": "36cd2c020932c6621a6a8304bb63d509149a3326", "Url": "https://api.github.com/repos/peterrodgers/dover", "Date": "2016-11-18T11:00:31Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.seninp.jmotif.sax.parallel.ParallelSAXImplementation.process(double[],int,int,int,int,RulePrunerParameters.SAX_NR_STRATEGY,RulePrunerParameters.SAX_NORM_THRESHOLD)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((java.lang.Thread.currentThread().isInterrupted()) && (null == saxData)) { java.lang.System.err.println(\"Sampler being interrupted, returning NULL!\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5334/buggy-version/src.main.java.net.seninp.gi.rulepruner.RulePruner.java", "BodyUseAPI": [], "Fixed commit": "5187bac8b97f34d4c6748b9c6d6ff8acb6924c30", "Url": "https://api.github.com/repos/jMotif/GI", "Date": "2015-09-03T07:08:12Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(d.exists())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/731/buggy-version/main.autocode.src.org.ejml.GenerateCode32.java", "BodyUseAPI": [], "Fixed commit": "38a296e0b3bc57fe6ff6403b611bf1a5a25cfd82", "Url": "https://api.github.com/repos/lessthanoptimal/ejml", "Date": "2017-01-08T22:37:49Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(ask.equals(\"null\"))) { batchOperations.add(com.sam_chordas.android.stockhawk.rest.Utils.buildBatchOperation(jsonObject)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1122/buggy-version/app.src.main.java.com.sam_chordas.android.stockhawk.rest.Utils.java", "BodyUseAPI": [], "Fixed commit": "d594ce8fe1c67a04ad83f349f0c7dc79703ae96f", "Url": "https://api.github.com/repos/ironthrone/StockHawk", "Date": "2016-06-04T05:41:08Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(ask.equals(\"null\"))) { batchOperations.add(com.sam_chordas.android.stockhawk.rest.Utils.buildBatchOperation(jsonObject)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1122/buggy-version/app.src.main.java.com.sam_chordas.android.stockhawk.rest.Utils.java", "BodyUseAPI": [], "Fixed commit": "d594ce8fe1c67a04ad83f349f0c7dc79703ae96f", "Url": "https://api.github.com/repos/ironthrone/StockHawk", "Date": "2016-06-04T05:41:08Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((zk.getState()) == (ZooKeeper.States.CONNECTED)) { zk.delete(LoggerConstants.OMID_LEDGER_ID_PATH, (-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7934/buggy-version/src.main.java.com.yahoo.omid.tso.persistence.BookKeeperStateLogger.java", "BodyUseAPI": ["org.apache.zookeeper.ZooKeeper.delete(LoggerConstants.OMID_LEDGER_ID_PATH,int)"], "Fixed commit": "432872314fe09d48ff9e981cf67875893200f158", "Url": "https://api.github.com/repos/apache/incubator-omid", "Date": "2012-03-10T09:25:24Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7582/buggy-version/app.src.main.java.com.nicoqueijo.cityskylinequiz.fragments.QuizFragmentTimed.java", "BodyUseAPI": [], "Fixed commit": "fcc8411c7740fb96313b7d3f21275bc68e63e15d", "Url": "https://api.github.com/repos/nicoqueijo/Android-City-Skyline-Quiz", "Date": "2017-09-30T03:34:49Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ee.ut.math.tvt.salessystem.ui.panels.PurchaseItemPanel.getStockItemByBarcode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((stockItem.getQuantity()) == 0) || (quantity > (stockItem.getQuantity()))) { throw new ee.ut.math.tvt.salessystem.domain.exception.OutOfStockException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4424/buggy-version/POS.src.ee.ut.math.tvt.salessystem.ui.panels.PurchaseItemPanel.java", "BodyUseAPI": [], "Fixed commit": "50bfc050d44e099b8a27674f9430c01c45f5d6b1", "Url": "https://api.github.com/repos/SETeam42014/test", "Date": "2014-10-22T19:38:25Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (res == null) { res = tagList.get(text.toLowerCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8942/buggy-version/src.main.java.com.bookmarkanator.bookmarks.BookmarksUtil.java", "BodyUseAPI": [], "Fixed commit": "d48dba2e845ae49efbb9d6ebd533accf85c44bd9", "Url": "https://api.github.com/repos/flightx31/Bookmarkanator-Core", "Date": "2016-04-22T07:04:56Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.Set<java.lang.String[]>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (res == null) { res = tagList.get(text.toUpperCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8942/buggy-version/src.main.java.com.bookmarkanator.bookmarks.BookmarksUtil.java", "BodyUseAPI": [], "Fixed commit": "d48dba2e845ae49efbb9d6ebd533accf85c44bd9", "Url": "https://api.github.com/repos/flightx31/Bookmarkanator-Core", "Date": "2016-04-22T07:04:56Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(direction.isSecondaryOrdinal())) { com.thomas15v.noxray.NoXrayPlugin.updateBlock(location.getBlockRelative(direction)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6518/buggy-version/src.main.java.com.thomas15v.noxray.NoXrayPlugin.java", "BodyUseAPI": ["org.spongepowered.api.world.Location<org.spongepowered.api.world.World>.getBlockRelative(org.spongepowered.api.util.Direction)", "com.thomas15v.noxray.NoXrayPlugin.updateBlock(location.getBlockRelative(direction))"], "Fixed commit": "dec1f963235ebe103d13535e81713aae82c6881b", "Url": "https://api.github.com/repos/thomas15v/NoXray", "Date": "2016-07-08T19:23:06Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (factType == null) { callback.callback(false); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/839/buggy-version/kie-wb-common-widgets.kie-wb-common-ui.src.main.java.org.kie.workbench.common.widgets.client.datamodel.AsyncPackageDataModelOracleImpl.java", "BodyUseAPI": [], "Fixed commit": "8e725dbb432d8429d68b383e78477d3ef275680e", "Url": "https://api.github.com/repos/etirelli/kie-wb-common", "Date": "2013-10-14T12:17:42Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((regex.length()) > 0) regex.append(' ');", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7028/buggy-version/src.main.java.com.forgeessentials.scripting.pattern.Pattern.java", "BodyUseAPI": [], "Fixed commit": "96b7cae5a52d68a72ccbd0c6c7a4a0d65a58fc1a", "Url": "https://api.github.com/repos/Gakai/ForgeEssentialsMain", "Date": "2015-06-16T15:13:37Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSlices) == null) mSlices = new java.util.ArrayList<com.x.app.util.loader.VideoSelectedInfo.SelectedVideoSlice>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7010/buggy-version/src.com.x.app.ui.fragments.VideoSelectedFragment.java", "BodyUseAPI": [], "Fixed commit": "2c38bd752e6925110616c9225236f0c219a74a63", "Url": "https://api.github.com/repos/zackermei/xapp", "Date": "2014-05-09T02:48:52Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node == null) { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4312/buggy-version/opendaylight.md-sal.sal-dom-xsql.src.main.java.org.opendaylight.controller.md.sal.dom.xsql.jdbc.JDBCResultSet.java", "BodyUseAPI": [], "Fixed commit": "71c540b3572415aef56acd4a31b503f24e9da437", "Url": "https://api.github.com/repos/opendaylight/controller", "Date": "2015-01-07T20:05:00Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((request.indices().length) == 0) { return new org.elasticsearch.action.admin.indices.delete.DeleteIndexResponse(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2958/buggy-version/modules.elasticsearch.src.main.java.org.elasticsearch.action.admin.indices.delete.TransportDeleteIndexAction.java", "BodyUseAPI": [], "Fixed commit": "93372868a20f80bc2752dbe59dd90c62d1d35e85", "Url": "https://api.github.com/repos/elastic/elasticsearch", "Date": "2011-04-07T17:08:53Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getActivity().getClass().getSimpleName().equals(\"BookmarkBrowserActivity\")) { }else { createButton.setVisibility(View.VISIBLE); toggleButton.setVisibility(View.VISIBLE); spinner.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5973/buggy-version/app.src.main.java.edu.tacoma.uw.plsanch.gitgud.guide.GuideContentFragment.java", "BodyUseAPI": [], "Fixed commit": "bbca298655a6021084361c7dd89dc262ae9f9965", "Url": "https://api.github.com/repos/Izulkara/GITGUD-1", "Date": "2017-03-11T02:41:38Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gmarkerById.get(marker.id)) != null) { gmarkerById.get(marker.id).remove(); gmarkerById.remove(marker.id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6761/buggy-version/android.app.src.org.opentravelmate.widget.map.NativeMap.java", "BodyUseAPI": ["android.util.SparseArray<com.google.android.gms.maps.model.Marker>.remove(marker.id)", "gmarkerById.get(marker.id).remove()", "android.util.SparseArray<com.google.android.gms.maps.model.Marker>.get(marker.id)"], "Fixed commit": "a266c528cc00c88e782768d1d8605a4c07b94ffd", "Url": "https://api.github.com/repos/marcplouhinec/opentravelmate", "Date": "2013-09-08T10:58:43Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getAttribute(HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (path.startsWith(prefix)) { path = path.substring(prefix.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4000/buggy-version/spring-cloud-function-web.src.main.java.org.springframework.cloud.function.web.FunctionHandlerMapping.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.length()"], "Fixed commit": "5055369cb5fca6bdec3ad32d6a5f7709aa91d88f", "Url": "https://api.github.com/repos/olegz/spring-cloud-function", "Date": "2017-04-24T12:28:44Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUris()) != null) { removeAllWatchContentUris(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6627/buggy-version/src.main.java.com.mridang.operator.ImprovedExtension.java", "BodyUseAPI": [], "Fixed commit": "022cad219b079003fed7b9848235b6efd6d04983", "Url": "https://api.github.com/repos/mridang/dashclock-operator", "Date": "2015-03-29T09:11:31Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((readCache) != null) readCache.changeMaximumAmountOfMemory(calculateReadCacheMaxMemory(cacheSize));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2587/buggy-version/core.src.main.java.com.orientechnologies.orient.core.engine.local.OEngineLocalPaginated.java", "BodyUseAPI": [], "Fixed commit": "63cfd813d7a3a48371b727451e91f38fbfa838e9", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-01-18T12:10:51Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(input.toString().trim().isEmpty())) { mServiceIntent.putExtra(\"tag\", \"add\"); mServiceIntent.putExtra(\"symbol\", input.toString().toUpperCase()); startService(mServiceIntent); }else { android.widget.Toast toast = android.widget.Toast.makeText(this, \"Stock can't be empty!\", Toast.LENGTH_LONG); toast.setGravity(Gravity.CENTER, Gravity.CENTER, 0); toast.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4789/buggy-version/app.src.main.java.com.sam_chordas.android.stockhawk.ui.MyStocksActivity.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,java.lang.String)", "java.lang.String.toUpperCase()", "java.lang.CharSequence.toString()"], "Fixed commit": "d1e5793d6e75f4c945c1f91ab573e2291c2dd831", "Url": "https://api.github.com/repos/rahulravindran0108/Stock-Hawk", "Date": "2016-05-11T13:16:25Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (userType && (!(ldr.equals(org.apache.ignite.internal.util.IgniteUtils.gridClassLoader())))) { desc = userTypesMap(ldr).get(typeId); if (desc != null) return desc; desc = userTypesMap(org.apache.ignite.internal.util.IgniteUtils.gridClassLoader()).get(typeId); if (desc != null) { org.apache.ignite.internal.util.typedef.internal.U.log(null, ((((((\"Unable to load type's class with required class loader. Using type's class \" + \"loaded by system class loader [typeId=\") + typeId) + \", ldr=\") + ldr) + \", cls=\") + (desc.describedClass().getName()))); return desc; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3357/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.portable.PortableContext.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentMap<java.lang.Integer, org.apache.ignite.internal.portable.PortableClassDescriptor>.get(int)", "org.apache.ignite.internal.portable.PortableContext.userTypesMap(java.lang.ClassLoader)", "org.apache.ignite.internal.util.typedef.internal.U.log(<nulltype>,((((((\"Unable to load type's class with required class loader. Using type's class \" + \"loaded by system class loader [typeId=\") + typeId) + \", ldr=\") + ldr) + \", cls=\") + (desc.describedClass().getName())))"], "Fixed commit": "1e8e162e0e3066fda126d7ca8cfe13c74efad914", "Url": "https://api.github.com/repos/apache/ignite", "Date": "2015-09-23T13:50:33Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index) < (header.indexCount)) { aarddict.Entry matchedEntry = get(index); nextEntry = (0 == (comparator.compare(matchedEntry, lookupEntry))) ? matchedEntry : null; (index)++; }else { nextEntry = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4395/buggy-version/src.aarddict.Volume.java", "BodyUseAPI": [], "Fixed commit": "71ded9a8796fe95b8cbfa7e0cbc97d78db404e17", "Url": "https://api.github.com/repos/aarddict/android", "Date": "2013-03-24T03:36:04Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.molgenis.elasticsearch.request.LuceneQueryStringBuilder.getValue(org.molgenis.data.QueryRule)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((value.toString().matches(\"[\\\\.\\\\d]*\")) || (!(queryRule.getOperator().equals(org.molgenis.elasticsearch.request.SEARCH)))) { java.lang.StringBuilder stringTransformer = new java.lang.StringBuilder(); value = stringTransformer.append(\"\\\"\").append(value).append(\"\\\"\").toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1881/buggy-version/molgenis-search-elasticsearch.src.main.java.org.molgenis.elasticsearch.request.LuceneQueryStringBuilder.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()", "java.lang.StringBuilder.append(java.lang.Object)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "5a7714b82b2070172087d8d6567aed5f2737c555", "Url": "https://api.github.com/repos/dennishendriksen/molgenis", "Date": "2014-02-04T15:02:32Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (BenchmarkCriterion.K_ANONYMITY.equals(privacyModel.getCriterion())) { criteria = new org.deidentifier.arx.BenchmarkSetup.BenchmarkCriterion[]{ org.deidentifier.arx.BenchmarkSetup.BenchmarkCriterion.K_ANONYMITY }; }else { criteria = new org.deidentifier.arx.BenchmarkSetup.BenchmarkCriterion[]{ org.deidentifier.arx.BenchmarkSetup.BenchmarkCriterion.K_ANONYMITY, privacyModel.getCriterion() }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/9052/buggy-version/src.org.deidentifier.arx.execution.Compare2d_PA.java", "BodyUseAPI": ["org.deidentifier.arx.PrivacyModel.getCriterion()"], "Fixed commit": "d1f12d715fddb89c7af2183c3251cbc3679b9aa0", "Url": "https://api.github.com/repos/ElMuto/anonbench", "Date": "2017-03-23T15:32:14Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jwkSet == null) { jwkSet = org.apache.cxf.rs.security.jose.jwk.JwkUtils.loadJwkSet(props, m.getExchange().getBus(), cb, reader); if (key != null) { m.getExchange().put(key, jwkSet); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3000/buggy-version/rt.rs.security.jose.src.main.java.org.apache.cxf.rs.security.jose.jwk.JwkUtils.java", "BodyUseAPI": [], "Fixed commit": "45a9a47a9a064813c845dfa74d904936d2698f0a", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2014-12-18T17:17:33Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.getEndDate().compareTo(o.getEndDate())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (compare == 0) { final int nameCompare = this.getName().compareTo(o.getName()); return nameCompare; }else { return compare; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4481/buggy-version/estatioapp.dom.src.main.java.org.estatio.dom.party.OrganisationPreviousName.java", "BodyUseAPI": [], "Fixed commit": "c684e876f5e2feb7ae278aabf26372bd7059dba0", "Url": "https://api.github.com/repos/estatio/estatio", "Date": "2016-05-30T11:23:38Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name.equals(this.getName())) { return \"New name must be different from the current name\"; }else { return previousNameEndDate.isAfter(getClockService().now()) ? \"You can not select a future end date\" : null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4481/buggy-version/estatioapp.dom.src.main.java.org.estatio.dom.party.Organisation.java", "BodyUseAPI": [], "Fixed commit": "c684e876f5e2feb7ae278aabf26372bd7059dba0", "Url": "https://api.github.com/repos/estatio/estatio", "Date": "2016-05-30T11:23:38Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((chans.length()) > 1) com.alta189.chavaadmin.ChavaAdmin.settings.changeProperty(\"muted-channels\", chans.toString().substring(0, ((chans.toString().length()) - 2)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1799/buggy-version/src.main.java.com.alta189.chavaadmin.ChavaAdmin.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.StringBuilder.toString()", "java.lang.String.length()", "java.lang.StringBuilder.toString()", "com.alta189.chavabot.util.SettingsHandler.changeProperty(java.lang.String,java.lang.String)"], "Fixed commit": "762f688c1273474860058effcc5f922e582aba40", "Url": "https://api.github.com/repos/ChavaBot/ChavaAdmin", "Date": "2011-11-18T03:09:56Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gMatrix[i][j]) == 10) spacing = \" \";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4449/buggy-version/src.Graph.java", "BodyUseAPI": [], "Fixed commit": "416ae6e42a0f0718796f61ba577d6e0f05453cb7", "Url": "https://api.github.com/repos/myeaple/MST", "Date": "2014-02-13T19:22:33Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > 0) predecessorsStr += \" \";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4449/buggy-version/src.Graph.java", "BodyUseAPI": [], "Fixed commit": "416ae6e42a0f0718796f61ba577d6e0f05453cb7", "Url": "https://api.github.com/repos/myeaple/MST", "Date": "2014-02-13T19:22:33Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((values != null) && (!(values.isEmpty()))) { for (java.lang.String value : values) { nottableValues.add(org.mockserver.model.NottableString.string(value)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/9145/buggy-version/mockserver-core.src.main.java.org.mockserver.model.NottableString.java", "BodyUseAPI": [], "Fixed commit": "29d162f8a4505da8e2656f66cac35568f19ffa2f", "Url": "https://api.github.com/repos/jamesdbloom/mockserver", "Date": "2015-06-08T14:01:43Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.genotype) != null) { json.put(\"genesStatus\", this.genotype.getGenesStatus()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1445/buggy-version/matching-notification-api.src.main.java.org.phenotips.matchingnotification.match.internal.DefaultPatientInMatch.java", "BodyUseAPI": [], "Fixed commit": "6fa72cdd41ba6123ab416fbe2bd4071997507916", "Url": "https://api.github.com/repos/phenotips/patient-network", "Date": "2017-12-07T16:56:37Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (forwardStrand) { this.startInAssembledContig = (alignment.getSeqStart()) + 1; this.endInAssembledContig = alignment.getSeqEnd(); }else { this.startInAssembledContig = (contigLen - (alignment.getSeqEnd())) + 1; this.endInAssembledContig = contigLen - (alignment.getSeqStart()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7811/buggy-version/src.main.java.org.broadinstitute.hellbender.tools.spark.sv.AlignmentRegion.java", "BodyUseAPI": [], "Fixed commit": "84fc120e8dedf044f2a7e8431586d96239701514", "Url": "https://api.github.com/repos/broadinstitute/gatk", "Date": "2017-03-30T21:54:56Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getAttribute(\"mid\")) != null) mid = ((java.lang.Integer) (request.getAttribute(\"mid\"))); else mid = java.lang.Integer.parseInt(request.getParameter(\"mid\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5449/buggy-version/merchantSystem.src.servlet.ShowIndexPageServlet.java", "BodyUseAPI": ["java.lang.Integer.parseInt(request.getParameter(\"mid\"))", "javax.servlet.http.HttpServletRequest.getAttribute(java.lang.String)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Fixed commit": "e4fb0aa8f555fb824773632a444001d20b3c92ba", "Url": "https://api.github.com/repos/erstenGruppeSehrSchon/projectOne", "Date": "2016-10-17T02:46:19Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getParameter(\"mid\")) != null) mid = java.lang.Integer.parseInt(request.getParameter(\"mid\")); else mid = ((java.lang.Integer) (request.getAttribute(\"mid\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5449/buggy-version/merchantSystem.src.servlet.EditProfileServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "javax.servlet.http.HttpServletRequest.getAttribute(java.lang.String)", "java.lang.Integer.parseInt(request.getParameter(\"mid\"))"], "Fixed commit": "e4fb0aa8f555fb824773632a444001d20b3c92ba", "Url": "https://api.github.com/repos/erstenGruppeSehrSchon/projectOne", "Date": "2016-10-17T02:46:19Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getParameter(\"mid\")) != null) mid = java.lang.Integer.parseInt(request.getParameter(\"mid\")); else mid = ((java.lang.Integer) (request.getAttribute(\"mid\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5449/buggy-version/merchantSystem.src.servlet.ShowEditPageServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "java.lang.Integer.parseInt(request.getParameter(\"mid\"))", "javax.servlet.http.HttpServletRequest.getAttribute(java.lang.String)"], "Fixed commit": "e4fb0aa8f555fb824773632a444001d20b3c92ba", "Url": "https://api.github.com/repos/erstenGruppeSehrSchon/projectOne", "Date": "2016-10-17T02:46:19Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(file.exists())) || (!(file.isDirectory()))) { file.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5890/buggy-version/app.src.main.java.com.npes87184.s2tdroid.MainActivity.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "777aa8e8da7285cc16c86485220b2c5cfe5e8b96", "Url": "https://api.github.com/repos/npes87184/S2TDroid", "Date": "2015-04-11T13:13:54Z"},
{"Line": "=>424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((input) != (game.GameTools.Gesture.NONE)) android.util.Log.d(\"rising_debug_execute_input\", (((((input.toString()) + \" \") + (playerState)) + \" \") + (currentAction.getAnimation().getFrame())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1884/buggy-version/RisingGame.src.object.Player.java", "BodyUseAPI": [], "Fixed commit": "016b39ed84986be3914066272f01fdb0c0adb0c3", "Url": "https://api.github.com/repos/secheung/RisingGame", "Date": "2016-07-03T18:31:36Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Math.abs(g.getXDiffSize())) > (java.lang.Math.abs(g.getYDiffSize()))) { setGesture(g); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1884/buggy-version/RisingGame.src.object.Player.java", "BodyUseAPI": ["object.Player.setGesture(game.GameTools.Gesture)"], "Fixed commit": "016b39ed84986be3914066272f01fdb0c0adb0c3", "Url": "https://api.github.com/repos/secheung/RisingGame", "Date": "2016-07-03T18:31:36Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.kframework.backend.unparser.TermCons.getContents()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!((contents.get(1)) instanceof org.kframework.backend.unparser.ListTerminator)) { indenter.write((separator + \" \")); contents.get(1).accept(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7006/buggy-version/src.javasources.KTool.src.org.kframework.backend.unparser.UnparserFilter.java", "BodyUseAPI": ["contents.get(1).accept(org.kframework.backend.unparser.UnparserFilter)", "java.util.List<org.kframework.backend.unparser.Term>.get(int)"], "Fixed commit": "6ddf55377cd83329379068a74293071ca8e04fb1", "Url": "https://api.github.com/repos/osa1/k", "Date": "2013-12-08T05:46:44Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((B[2].coef[0]) == 0) ByteSub.finalConvert(B[2]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5126/buggy-version/ByteSub.java", "BodyUseAPI": ["ByteSub.finalConvert(ByteSub)"], "Fixed commit": "81e5b6df33ee0bdcddb10e791ba66c82a235225d", "Url": "https://api.github.com/repos/GCCode/ByteSub", "Date": "2013-11-11T17:34:43Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["carrier.getEntity().getLastUpdate()", "seventh.shared.TimeStep.getGameClock()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((lastUpdate + 150) < clockTime) { fadeAlphaColor = 255 - (((int) (clockTime - lastUpdate)) / 3); if ((fadeAlphaColor) < 0) fadeAlphaColor = 0; }else { fadeAlphaColor = 255; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8215/buggy-version/src.seventh.client.ClientFlag.java", "BodyUseAPI": [], "Fixed commit": "d10e1f3a91637bbeda08d8ab8b6137752042441e", "Url": "https://api.github.com/repos/tonysparks/seventh", "Date": "2016-05-29T21:15:27Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cosAngle > 1) { cosAngle = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5012/buggy-version/project.src.de.topobyte.livecg.core.geometry.geom.GeomMath.java", "BodyUseAPI": [], "Fixed commit": "65fcd918b4b18d77fdcbd9b30b92420e80e49123", "Url": "https://api.github.com/repos/sebkur/live-cg", "Date": "2014-03-09T18:28:43Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.symphonyoss.integration.webhook.salesforce.parser.BaseSalesforceParser.getOptionalField(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(accountLink)) { return presentationFormat(org.symphonyoss.integration.webhook.salesforce.parser.BaseSalesforceParser.FORMATTED, accountLink); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5968/buggy-version/src.main.java.org.symphonyoss.integration.webhook.salesforce.parser.BaseSalesforceParser.java", "BodyUseAPI": ["org.symphonyoss.integration.webhook.salesforce.parser.BaseSalesforceParser.presentationFormat(java.lang.String,java.lang.String)"], "Fixed commit": "34ba10a0f9c8e905079865d022b7bb3fec3aeae7", "Url": "https://api.github.com/repos/robson-sanchez/App-Integrations-Salesforce", "Date": "2017-03-29T19:45:38Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.symphonyoss.integration.webhook.salesforce.parser.BaseSalesforceParser.getOptionalField(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(ownerEmail)) { return presentationFormat(org.symphonyoss.integration.webhook.salesforce.parser.BaseSalesforceParser.FORMATTED, ownerEmail); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5968/buggy-version/src.main.java.org.symphonyoss.integration.webhook.salesforce.parser.BaseSalesforceParser.java", "BodyUseAPI": ["org.symphonyoss.integration.webhook.salesforce.parser.BaseSalesforceParser.presentationFormat(java.lang.String,java.lang.String)"], "Fixed commit": "34ba10a0f9c8e905079865d022b7bb3fec3aeae7", "Url": "https://api.github.com/repos/robson-sanchez/App-Integrations-Salesforce", "Date": "2017-03-29T19:45:38Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (textField1.getText().isEmpty()) { }else { name = textField1.getText(); frame2.dispose(); addClient(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/660/buggy-version/src.AddClient.java", "BodyUseAPI": ["javax.swing.JTextField.getText()"], "Fixed commit": "9543e133213a294a203a822bbb5c7930eacd2845", "Url": "https://api.github.com/repos/MartinCosta/FicheroPacha", "Date": "2017-09-16T19:04:46Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (chance.endsWith(\"%\")) chance = chance.substring(0, ((chance.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3579/buggy-version/src.com.gmail.zariust.otherdrops.drop.DropType.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "30f51d505aef7655cbbf97da6305d5e8a7c45f38", "Url": "https://api.github.com/repos/Zarius/Bukkit-OtherBlocks", "Date": "2013-03-20T14:49:49Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (generator.custom.generatorClass.equals(gr.forth.TextualContent.class.getCanonicalName())) { return uriValue(gr.forth.Utils.urnValue(value)); }else { return uriValue(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1977/buggy-version/src.main.java.eu.delving.x3ml.X3MLGeneratorPolicy.java", "BodyUseAPI": [], "Fixed commit": "8ac583f4c7f777788c6188ce5db20831c62d97b2", "Url": "https://api.github.com/repos/isl/x3ml", "Date": "2017-06-20T10:32:43Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMenuItemRefresh) != null) mMenuItemRefresh.setEnabled(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8131/buggy-version/app.src.main.java.de.micmun.android.miwotreff.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9a411d82dc37b97eb8cc45d4422aae312061320c", "Url": "https://api.github.com/repos/MicMun/MiWoTreff", "Date": "2015-03-30T20:03:38Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMenuItemRefresh) != null) mMenuItemRefresh.setEnabled(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8131/buggy-version/app.src.main.java.de.micmun.android.miwotreff.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9a411d82dc37b97eb8cc45d4422aae312061320c", "Url": "https://api.github.com/repos/MicMun/MiWoTreff", "Date": "2015-03-30T20:03:38Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.crea_si.eviacam.service.MousePreferencesActivity.SettingsFragment.getSlaveMode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (slaveMode) { getPreferenceManager().setSharedPreferencesName(Preferences.FILE_SLAVE_MODE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5304/buggy-version/eviacam.src.main.java.com.crea_si.eviacam.service.MousePreferencesActivity.java", "BodyUseAPI": [], "Fixed commit": "e4def6307a8b0ebca8669cd589c8d51734b455f4", "Url": "https://api.github.com/repos/cmauri/eva_facial_mouse", "Date": "2016-04-26T11:06:41Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stmt.getExpressions()) != null) { for (Visitor.Expression expr : stmt.getExpressions()) { flag += expr.accept(this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6162/buggy-version/src.Visitor.PrintAST.java", "BodyUseAPI": ["Visitor.MethodCallExpr.getExpressions()"], "Fixed commit": "b6080ae1cbfcf2be62e1c18cacf601b5869a718a", "Url": "https://api.github.com/repos/gamassimino/compiler_project", "Date": "2016-09-18T00:59:41Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stmt.getNavigation()) != null) flag += stmt.getNavigation().accept(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6162/buggy-version/src.Visitor.PrintAST.java", "BodyUseAPI": ["stmt.getNavigation().accept(Visitor.PrintAST)", "Visitor.MethodCallExpr.getNavigation()"], "Fixed commit": "b6080ae1cbfcf2be62e1c18cacf601b5869a718a", "Url": "https://api.github.com/repos/gamassimino/compiler_project", "Date": "2016-09-18T00:59:41Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stmt.getNavigation()) != null) flag += stmt.getNavigation().accept(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6162/buggy-version/src.Visitor.PrintAST.java", "BodyUseAPI": ["stmt.getNavigation().accept(Visitor.PrintAST)", "Visitor.Navigation.getNavigation()"], "Fixed commit": "b6080ae1cbfcf2be62e1c18cacf601b5869a718a", "Url": "https://api.github.com/repos/gamassimino/compiler_project", "Date": "2016-09-18T00:59:41Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["composition.getNotes().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (playAtBeat.get(j).getIsAttack()) { javax.sound.midi.MidiEvent noteOn = new javax.sound.midi.MidiEvent(message1, (i * (playAtBeat.get(j).attackInt()))); track.add(noteOn); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1657/buggy-version/src.cs3500.music.view2.MidiViewImpl.java", "BodyUseAPI": ["playAtBeat.get(j).attackInt()", "java.util.ArrayList<cs3500.music.view2.Playable>.get(int)"], "Fixed commit": "5ceff90b5f60cf51649b63f882834d482ec9b5b9", "Url": "https://api.github.com/repos/skaplan1995/MusicEditor", "Date": "2015-12-10T00:54:34Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((android.text.TextUtils.isEmpty(fileName)) || (!(fileName.contains(\".\")))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7052/buggy-version/library.src.main.java.cn.finalteam.rxgalleryfinal.ui.activity.NormalFilePickActivity.java", "BodyUseAPI": [], "Fixed commit": "4500386bddbd6dbfb329a3c71565d6db81547b3a", "Url": "https://api.github.com/repos/BeeShield/AndroidPicker", "Date": "2017-09-05T03:09:21Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.getMailManager().getMailConfig().getSender(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == sender) { java.util.Map<java.lang.String, java.lang.String> senders = this.getMailManager().getMailConfig().getSenders(); if (senders.entrySet().iterator().hasNext()) { sender = senders.entrySet().iterator().next().getKey(); }else { throw new com.agiletec.aps.system.exception.ApsSystemException(this.getText(\"note.mail.nosender\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7721/buggy-version/entando-plugin-jpmail.src.main.java.com.agiletec.plugins.jpmail.apsadmin.mail.SmtpConfigAction.java", "BodyUseAPI": [], "Fixed commit": "5e116c38516714e68385412fa0a6712b4abadf9b", "Url": "https://api.github.com/repos/entando/entando-plugins-parent", "Date": "2014-03-06T15:59:47Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rows.size()) < 1) { return 0L; }else return rows.get(((rows.size()) - 1)).getId();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2940/buggy-version/src.ee.ut.math.tvt.salessystem.ui.model.HistoryTableModel.java", "BodyUseAPI": ["ee.ut.math.tvt.salessystem.ui.model.HistoryTableModel.get(((rows.size()) - 1))", "rows.get(((rows.size()) - 1)).getId()", "ee.ut.math.tvt.salessystem.ui.model.HistoryTableModel.size()"], "Fixed commit": "f2eb09d9bfe9dc9934ec35d1d6ba76a9741802a6", "Url": "https://api.github.com/repos/OttMatiisen/Default", "Date": "2014-11-20T10:29:13Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reverse) == null) return ret.toArray();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3536/buggy-version/GFPA.src.gfpa.graph.common.DirectedGraph.java", "BodyUseAPI": [], "Fixed commit": "4d210a8d09dbd34913ff5fdb6ebe33f46fa9902a", "Url": "https://api.github.com/repos/KeitaTakenouchi/GFPA", "Date": "2016-05-01T16:12:01Z"},
{"Line": "=>914", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((taskInstance) != null) { processInstanceVariables.clear(); processInstanceVariables.putAll(bpmModule.getProcessInstanceVariables(taskInstance.getProcessInstanceUUID())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1244/buggy-version/processbase-ui-bpm-3.0.src.main.java.org.processbase.ui.bpm.generator.GeneratedWindow.java", "BodyUseAPI": [], "Fixed commit": "d0084e6fb30116b2bab58017f8d7329f2bae3b9e", "Url": "https://api.github.com/repos/llyys/processbase", "Date": "2011-08-19T14:09:05Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.talend.metadata.managment.utils.MetadataConnectionUtils.createConnection(org.talend.core.model.metadata.IMetadataConnection,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(createConnection.isOk())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2901/buggy-version/main.plugins.org.talend.dataprofiler.core.src.org.talend.dataprofiler.core.helper.ResultSetHelper.java", "BodyUseAPI": [], "Fixed commit": "511a10f84c770e8c597351841ec55e53ac5a71e3", "Url": "https://api.github.com/repos/Talend/tdq-studio-se", "Date": "2015-07-10T06:01:36Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["response.getHeaders().getFirst(ExpressStatementHeader.SIGNATURE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (signatureBase64 == null) { signatureBase64 = response.getHeaders().getFirst(ExpressStatementHeader.SIGNATURE.toLowerCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3891/buggy-version/express-statement-client.src.main.java.io.getlime.app.statement.client.ExpressStatementClient.java", "BodyUseAPI": [], "Fixed commit": "df43bd3e41f75c9773b4d89aab83cbdf0b1510f0", "Url": "https://api.github.com/repos/wultra/express-statement-java", "Date": "2017-03-31T20:25:01Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getRootNodeChildCount()) > 0) { getCategoryTreeModel().insertNodeInto(nodeToAdd, getRootNode(), getRootNodeChildCount()); }else { getRootNode().add(nodeToAdd); getCategoryTreeModel().reload(getRootNode()); setLeafIconToBullet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2708/buggy-version/fhaes.src.main.java.org.fhaes.gui.CategoryEntryPanel.java", "BodyUseAPI": [], "Fixed commit": "d528892bc03e2df0760bd8a3dd8aa2c98adaf4a4", "Url": "https://api.github.com/repos/petebrew/fhaes", "Date": "2015-07-27T17:37:29Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(pro.dbro.timelapse.CameraActivity.taking_picture)) { pro.dbro.timelapse.CameraActivity.taking_picture = true; mCamera.takePicture(CameraUtils.mShutterFeedback, null, null, new pro.dbro.timelapse.CameraUtils.TimeLapsePictureCallback(timelapse_id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3798/buggy-version/src.pro.dbro.timelapse.CameraActivity.java", "BodyUseAPI": [], "Fixed commit": "b3209ea0dd0ff2d1a008fe9ad325f84d203aba2a", "Url": "https://api.github.com/repos/growpedia/Timelapse-Android", "Date": "2012-08-06T23:57:36Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_string.compareTo(\"fluidOunces\")) == 0) { return \"fluid ounces\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7500/buggy-version/src.gui.common.SizeUnits.java", "BodyUseAPI": [], "Fixed commit": "3cc120a2999310ab0d6e44fe2299c81d8269fb25", "Url": "https://api.github.com/repos/caseymonc/hit", "Date": "2012-11-08T00:12:47Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"success\".equalsIgnoreCase(result)) { return new org.springframework.web.servlet.ModelAndView(new org.springframework.web.servlet.view.RedirectView((((((\"TaxInvoice\" + callPageFrom) + \".smi?action=search&TaxInvNo=\") + (taxInvoice.getTaxNo())) + \"&resultRedirect=\") + result), true)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2457/buggy-version/src.java.com.smi.travel.controller.TaxInvoiceController.java", "BodyUseAPI": [], "Fixed commit": "bbc397be768e36f665a9c0eec2f8fe57aaea9106", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2016-02-12T10:27:35Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((!(\"\".equalsIgnoreCase(resultRedirect))) && (resultRedirect != null)) { if (\"success\".equalsIgnoreCase(resultRedirect)) { request.setAttribute(com.smi.travel.controller.TaxInvoiceController.RESULTTEXT, resultRedirect); }else if (\"unsuccess\".equalsIgnoreCase(resultRedirect)) { request.setAttribute(com.smi.travel.controller.TaxInvoiceController.RESULTTEXT, resultRedirect); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2457/buggy-version/src.java.com.smi.travel.controller.TaxInvoiceController.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,java.lang.String)", "javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "bbc397be768e36f665a9c0eec2f8fe57aaea9106", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2016-02-12T10:27:35Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.get(\"accessKey\")) != null) { key = request.get(\"accessKey\").toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3884/buggy-version/devicehive-frontend.src.main.java.com.devicehive.websockets.handlers.CommonHandlers.java", "BodyUseAPI": ["request.get(\"accessKey\").toString()", "com.google.gson.JsonObject.get(java.lang.String)"], "Fixed commit": "2aa9f7803cbc697202c664b9ead78bc3f8f1da3a", "Url": "https://api.github.com/repos/devicehive/devicehive-java-server", "Date": "2016-09-05T10:51:29Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((cur_genre.getCount()) > 0) { while (cur_genre.moveToNext()) { genre_codes.add(cur.getString(0)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8006/buggy-version/app.src.main.java.com.dvdlister.utils.DatabaseHelper.java", "BodyUseAPI": ["android.database.Cursor.moveToNext()"], "Fixed commit": "b1a34bbd1c6c757f42a52d116a047e897514cb3b", "Url": "https://api.github.com/repos/jplabadie/dvdlistmaker", "Date": "2017-12-02T21:22:05Z"},
{"Line": "=>520", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((race) != null) { race.terminate(); race = null; }else { sender.sendMessage(((((org.bukkit.ChatColor.BOLD) + \"\") + (org.bukkit.ChatColor.RED)) + \"There is no active race session\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/9200/buggy-version/src.main.java.io.github.davidg95.equestricraftplugin.EquestriCraftPlugin.java", "BodyUseAPI": [], "Fixed commit": "ee1f8c71bf36aee16ea30b786da07d1f19d425be", "Url": "https://api.github.com/repos/davidg95/EquestriCraftPlugin", "Date": "2017-08-29T13:01:11Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(information.isFolder())) { fs.setTimes(path, information.getLastModifiedTime(), information.getLastAccessedTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3638/buggy-version/projects.org.apache.hadoop.eclipse.release.src.org.apache.hadoop.eclipse.release.HDFSClientRelease.java", "BodyUseAPI": ["org.apache.hadoop.eclipse.hdfs.ResourceInformation.getLastModifiedTime()", "org.apache.hadoop.eclipse.hdfs.ResourceInformation.getLastAccessedTime()", "org.apache.hadoop.fs.FileSystem.setTimes(org.apache.hadoop.fs.Path,information.getLastModifiedTime(),information.getLastAccessedTime())"], "Fixed commit": "70e01fa455d90a316e2a435f548cc103da87aa01", "Url": "https://api.github.com/repos/srimanth-gunturi/hadoop-eclipse", "Date": "2013-04-16T05:34:04Z"},
{"Line": "=>972", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((UQLUtils.THIS.equals(entityAlias2)) && (qs instanceof net.vpc.upa.impl.uql.CompiledUpdate)) { entityAlias2 = qs.getEntityAlias(); if (entityAlias2 == null) { entityAlias2 = detailEntity.getName(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4689/buggy-version/upa-impl.src.main.java.net.vpc.upa.impl.uql.ExpressionCompiler.java", "BodyUseAPI": ["net.vpc.upa.impl.uql.CompiledEntityStatement.getEntityAlias()"], "Fixed commit": "a0967adc4a0d698c0359e98c30c99f813a90582a", "Url": "https://api.github.com/repos/thevpc/upa", "Date": "2017-08-16T13:32:07Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((other.getEntityAlias()) != null) { entityAlias = other.getEntityAlias(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4689/buggy-version/upa-impl.src.main.java.net.vpc.upa.impl.uql.compiledexpression.CompiledUpdate.java", "BodyUseAPI": ["net.vpc.upa.impl.uql.compiledexpression.CompiledUpdate.getEntityAlias()"], "Fixed commit": "a0967adc4a0d698c0359e98c30c99f813a90582a", "Url": "https://api.github.com/repos/thevpc/upa", "Date": "2017-08-16T13:32:07Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(other.joinsTables.isEmpty())) { for (net.vpc.upa.impl.uql.compiledexpression.CompiledJoinCriteria joinsTable : other.joinsTables) { join(((net.vpc.upa.impl.uql.compiledexpression.CompiledJoinCriteria) (joinsTable.copy()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4689/buggy-version/upa-impl.src.main.java.net.vpc.upa.impl.uql.compiledexpression.CompiledUpdate.java", "BodyUseAPI": [], "Fixed commit": "a0967adc4a0d698c0359e98c30c99f813a90582a", "Url": "https://api.github.com/repos/thevpc/upa", "Date": "2017-08-16T13:32:07Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jazmin.server.sip.io.pkts.packet.sip.SipMessage.getCallIDHeader()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (callIDHeader == null) { throw new java.lang.IllegalArgumentException(\"bad message format,missing callId\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1692/buggy-version/JazminServer.src.jazmin.server.sip.SipServer.java", "BodyUseAPI": [], "Fixed commit": "c5a28c343e2d32e6079d03241e5c98c55d4568f1", "Url": "https://api.github.com/repos/guooscar/JazminServer", "Date": "2015-04-28T16:18:32Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.xchris6041x.devin.commands.CommandRegistrar.registerCommand(io.xchris6041x.devin.commands.CommandHandler)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (root != null) io.xchris6041x.devin.Devin.debug(((((\"\\t\\tRegistered command \" + (io.xchris6041x.devin.AnsiColor.CYAN)) + (root.getName())) + (io.xchris6041x.devin.AnsiColor.RESET)) + \" /w Spigot\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3228/buggy-version/src.io.xchris6041x.devin.commands.CommandRegistrar.java", "BodyUseAPI": ["io.xchris6041x.devin.Devin.debug(((((\"\\t\\tRegistered command \" + (io.xchris6041x.devin.AnsiColor.CYAN)) + (root.getName())) + (io.xchris6041x.devin.AnsiColor.RESET)) + \" /w Spigot\"))", "io.xchris6041x.devin.commands.CommandHandler.getName()"], "Fixed commit": "aea561eb5e94c15cb05b6bdcc6bd025d87898071", "Url": "https://api.github.com/repos/xChris6041x/Devin", "Date": "2017-01-16T23:25:44Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((keywords.length) > 0) { return currentState.updateMatchedLabels(repoLabels, keywords[((keywords.length) - 1)]); }else { return currentState.updateMatchedLabels(repoLabels, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1939/buggy-version/src.main.java.ui.components.pickers.LabelPickerUILogic.java", "BodyUseAPI": ["ui.components.pickers.LabelPickerState.updateMatchedLabels(java.util.Set<java.lang.String>,java.lang.String)"], "Fixed commit": "94b529b9a3bed76f52dddb8b046c5ea041ad37e0", "Url": "https://api.github.com/repos/nus-fboa2016-ht/HubTurbo", "Date": "2016-01-31T07:02:22Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((luggage.brand.getID()) != 0) { innerjoinQuery += \"INNER JOIN brand ON luggage.brand_id=brand.id\"; if ((whereQuery.length()) > (nl.itopia.corendon.model.SearchModel.WHERE_DEFAULT_LENGTH)) { whereQuery += \" AND\"; } whereQuery += (\" brand.name = '\" + (luggage.brand.getName())) + \"' \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8405/buggy-version/src.nl.itopia.corendon.model.SearchModel.java", "BodyUseAPI": ["luggage.brand.getName()"], "Fixed commit": "4ddf5c350cd099c3704908907c2e1a8cf5cd1e39", "Url": "https://api.github.com/repos/Biodiscus/Corendon", "Date": "2015-01-10T21:01:42Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ch.trick17.betterchecks.fluent.NumberCheck.isSpecial(x)) || (ch.trick17.betterchecks.fluent.NumberCheck.isSpecial(y))) return java.lang.Double.compare(x.doubleValue(), y.doubleValue()); else return ch.trick17.betterchecks.fluent.NumberCheck.toBigDecimal(x).compareTo(ch.trick17.betterchecks.fluent.NumberCheck.toBigDecimal(y));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4957/buggy-version/core.src.main.java.ch.trick17.betterchecks.fluent.NumberCheck.java", "BodyUseAPI": ["java.math.BigDecimal.compareTo(java.math.BigDecimal)", "ch.trick17.betterchecks.fluent.NumberCheck.toBigDecimal(java.lang.Number)", "java.lang.Number.doubleValue()", "java.lang.Number.doubleValue()", "ch.trick17.betterchecks.fluent.NumberCheck.toBigDecimal(java.lang.Number)", "java.lang.Double.compare(double,double)"], "Fixed commit": "3192605c7252db306ce1be34c8bd83fbf4e26936", "Url": "https://api.github.com/repos/rolve/better-checks", "Date": "2014-01-29T22:27:07Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.scope) != null) { this.scopeInstance = scope.referenceCurrent(); }else { this.scopeInstance = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3184/buggy-version/core-client.src.main.java.org.glassfish.jersey.client.InboundJaxrsResponse.java", "BodyUseAPI": [], "Fixed commit": "f874edcd60a083b84ba3d26d715c2590c7a1a7e7", "Url": "https://api.github.com/repos/jersey/jersey", "Date": "2015-08-11T12:43:28Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scopeInstance) != null) { scopeInstance.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3184/buggy-version/core-client.src.main.java.org.glassfish.jersey.client.InboundJaxrsResponse.java", "BodyUseAPI": [], "Fixed commit": "f874edcd60a083b84ba3d26d715c2590c7a1a7e7", "Url": "https://api.github.com/repos/jersey/jersey", "Date": "2015-08-11T12:43:28Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.stream.Stream<java.lang.String>.collect(java.util.stream.Collector<java.lang.String, ?, java.util.Set<java.lang.String>>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (set.contains(cn)) { set.remove(cn); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1016/buggy-version/src.main.java.org.agenttools.Instrumentor.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.remove(java.lang.String)"], "Fixed commit": "95ffde63d7f82a4e5790f7481210bf8d10a4581e", "Url": "https://api.github.com/repos/Xiermires/agent-tools", "Date": "2017-02-26T09:09:24Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (message != null) { jazmin.server.msg.Session session = ctx.channel().attr(jazmin.server.msg.WebSocketServerHandler.SESSION_KEY).get(); messageServer.receiveMessage(session, message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3848/buggy-version/JazminServer.src.jazmin.server.msg.WebSocketServerHandler.java", "BodyUseAPI": ["jazmin.server.msg.MessageServer.receiveMessage(jazmin.server.msg.Session,jazmin.server.msg.codec.RequestMessage)"], "Fixed commit": "c7ace33aa42a23285ce68547b2fc7e9ef2325c2a", "Url": "https://api.github.com/repos/guooscar/JazminServer", "Date": "2017-04-19T10:56:59Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((columnHasCards(columnFrom)) && (columnFrom != columnTo)) { this.cols.get(columnTo).add(this.getTopCard(columnFrom)); remove(columnFrom); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7854/buggy-version/src.main.java.models.Game.java", "BodyUseAPI": ["models.Game.remove(int)", "models.Game.getTopCard(int)", "java.util.List<java.util.List<models.Card>>.get(int)", "this.cols.get(columnTo).add(models.Card)"], "Fixed commit": "d786c20519f766eea3119b9860b1381d4d5ffae8", "Url": "https://api.github.com/repos/cs361fall2017/team6", "Date": "2017-10-14T04:05:59Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((position) != null) return position.getLine();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5942/buggy-version/src.main.java.net.ossindex.common.utils.PackageDependency.java", "BodyUseAPI": [], "Fixed commit": "da9e9ae1b8070d92ad2ec3f06658c2ffa0193d1e", "Url": "https://api.github.com/repos/OSSIndex/java-api", "Date": "2015-10-02T03:20:07Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((position) != null) return position.getOffset();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5942/buggy-version/src.main.java.net.ossindex.common.utils.PackageDependency.java", "BodyUseAPI": [], "Fixed commit": "da9e9ae1b8070d92ad2ec3f06658c2ffa0193d1e", "Url": "https://api.github.com/repos/OSSIndex/java-api", "Date": "2015-10-02T03:20:07Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((position) != null) return position.getLength();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5942/buggy-version/src.main.java.net.ossindex.common.utils.PackageDependency.java", "BodyUseAPI": [], "Fixed commit": "da9e9ae1b8070d92ad2ec3f06658c2ffa0193d1e", "Url": "https://api.github.com/repos/OSSIndex/java-api", "Date": "2015-10-02T03:20:07Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (policy.equals(\"FIFO\")) { linesPerSet = new pkg.FifoSet[N]; for (int i = 0; i < (linesPerSet.length); i++) { linesPerSet[i] = new pkg.FifoSet(K); } }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7135/buggy-version/CacheSimulator.src.main.java.pkg.Cache.java", "BodyUseAPI": [], "Fixed commit": "fb61abb4083249be4cd59318cb5ca539e6c5e5e2", "Url": "https://api.github.com/repos/KenRud/cache-simulator", "Date": "2015-02-12T22:32:27Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.theminecoder.mcsurvival.managers.PlayerManager.getPlayer(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (player == null) { org.bukkit.event.player.AsyncPlayerPreLoginEvent fakeEvent = new org.bukkit.event.player.AsyncPlayerPreLoginEvent(bukkitPlayer.getName(), bukkitPlayer.getAddress().getAddress(), bukkitPlayer.getUniqueId()); this.onAsyncPlayerPreLogin(fakeEvent); if ((fakeEvent.getLoginResult()) != (AsyncPlayerPreLoginEvent.Result.ALLOWED)) { bukkitPlayer.kickPlayer(fakeEvent.getKickMessage()); return; }else { player = me.theminecoder.mcsurvival.managers.PlayerManager.getPlayer(bukkitPlayer); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5976/buggy-version/src.main.java.me.theminecoder.mcsurvival.listeners.JoinListener.java", "BodyUseAPI": [], "Fixed commit": "5e33fbc0580a97b8c8c5a425cfbf4cd995bfc0f4", "Url": "https://api.github.com/repos/theminecoder/mcsurvival", "Date": "2017-02-06T15:54:04Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.location.Geocoder.getFromLocationName(establishment.getAddress().flatten(),int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((result != null) && ((result.size()) > 0)) { return new com.google.android.gms.maps.model.LatLng(result.get(0).getLatitude(), result.get(0).getLongitude()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5079/buggy-version/app.src.main.java.com.pigdogbay.foodhygieneratings.EstablishmentMapFragment.java", "BodyUseAPI": ["result.get(0).getLongitude()", "result.get(0).getLatitude()", "java.util.List<android.location.Address>.get(int)", "java.util.List<android.location.Address>.get(int)"], "Fixed commit": "5e1c26bf27b110adac1ef66935c7322cd930deb4", "Url": "https://api.github.com/repos/PigDogBay/FHR-Android", "Date": "2017-03-29T09:29:51Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sParam == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4514/buggy-version/kit.src.de.zib.gndms.kit.config.ParameterTools.java", "BodyUseAPI": [], "Fixed commit": "baed878cd05f5f3cde57e615b6ddff6ffe8697f1", "Url": "https://api.github.com/repos/zibhub/GNDMS", "Date": "2012-05-30T17:31:49Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends org.lolin1.models.champion.Champion>.getDeclaredFields()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((i + 1) < (fields.length)) { ret.append(\",\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/9123/buggy-version/src.main.java.org.lolin1.models.champion.Champion.java", "BodyUseAPI": [], "Fixed commit": "e305d2138d2d72b8cf0b202d47dc8fb5c929a64f", "Url": "https://api.github.com/repos/Stoyicker/lolin1-data-provider", "Date": "2014-02-23T15:51:09Z"},
{"Line": "=>2411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getAppUser()) != null) { for (java.util.Iterator i = filterLabSetByCoreFacility(this.getAppUser().getManagingLabs()).iterator(); i.hasNext();) { hci.gnomex.security.Lab lab = ((hci.gnomex.security.Lab) (i.next())); if (lab.getIdLab().equals(idLab)) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5261/buggy-version/src.hci.gnomex.security.SecurityAdvisor.java", "BodyUseAPI": [], "Fixed commit": "022b19fb3d6ecfb7acb5eba464b0de4ff433b53a", "Url": "https://api.github.com/repos/hci-gnomex/gnomex", "Date": "2016-06-10T17:35:59Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4777/buggy-version/src.main.java.worm.abstractation.TableLoader.java", "BodyUseAPI": [], "Fixed commit": "9336dfc46fa7921c0378938e674043a6e6695b13", "Url": "https://api.github.com/repos/willhbr/WORM", "Date": "2016-07-29T03:39:07Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentChat.image.size()) == 1) { intent.putExtra(\"otherParticipantImage\", currentChat.image); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7096/buggy-version/app.src.main.java.larc.ludiconprod.Adapters.ChatAndFriends.ConversationsAdapter.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,currentChat.image)"], "Fixed commit": "7e9c5ff2623eee28614b6fead590be32b9d6a2d3", "Url": "https://api.github.com/repos/CostianuRazvan/LudiconNew", "Date": "2017-10-25T16:01:02Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isGroupFiles())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7058/buggy-version/components.formats-bsd.src.loci.formats.in.MicromanagerReader.java", "BodyUseAPI": [], "Fixed commit": "e3b5f403936dda9ddfa21ac661b7feb8e8622e40", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-03-26T03:46:28Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(RUNTIME)) return \"0\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8381/buggy-version/app.src.main.java.com.miz.abstractclasses.MediumBaseMovie.java", "BodyUseAPI": [], "Fixed commit": "d67e6a3bc8b78f121ce61dcef3761377ff47af48", "Url": "https://api.github.com/repos/MizzleDK/Mizuu", "Date": "2015-01-04T00:29:33Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(cookie.getName().equals(\"MDESID\"))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7392/buggy-version/src.main.java.com.mde.potdroid.helpers.PersistentCookieStore.java", "BodyUseAPI": [], "Fixed commit": "44fc9a5f2bd08ed14e9279542b74999e628365f8", "Url": "https://api.github.com/repos/janoliver/pOT-Droid", "Date": "2016-10-02T14:27:53Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["quizzes.QuizManager.getMyQuizzes(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((quizzesTaken.size()) == 1) { userManager.addAchievement(userId, FinalConstants.TOOK_1); }else if ((quizzesTaken.size()) == 10) { userManager.addAchievement(userId, FinalConstants.TOOK_10); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2152/buggy-version/QuizWhiz.src.quizzes.QuizResultServlet.java", "BodyUseAPI": ["java.util.ArrayList<quizzes.Quiz>.size()"], "Fixed commit": "a345b54c258c2bee21d07d4f00ce33abaaa744ef", "Url": "https://api.github.com/repos/20ghrrdll/CS108", "Date": "2016-03-11T03:21:32Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.type) == (org.solovyev.android.calculator.math.MathType.numeral_base)) { nb = jscl.NumeralBase.getByPrefix(result.match); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2192/buggy-version/app.src.main.java.org.solovyev.android.calculator.NumberBuilder.java", "BodyUseAPI": ["jscl.NumeralBase.getByPrefix(result.match)"], "Fixed commit": "6cd6bdda7c922ef7aeda310e15be693442287e81", "Url": "https://api.github.com/repos/serso/android-calculatorpp", "Date": "2016-05-16T18:48:48Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rey.material.widget.TabPageIndicator.2.getTabView(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (tv != null) { if (!(mScrolling)) updateIndicator(tv.getLeft(), tv.getMeasuredWidth()); smoothScrollTo((((tv.getLeft()) - (((getWidth()) - (tv.getWidth())) / 2)) + (getPaddingLeft())), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6754/buggy-version/lib.src.main.java.com.rey.material.widget.TabPageIndicator.java", "BodyUseAPI": ["com.rey.material.widget.CheckedTextView.getLeft()", "com.rey.material.widget.CheckedTextView.getWidth()", "com.rey.material.widget.TabPageIndicator.2.smoothScrollTo((((tv.getLeft()) - (((getWidth()) - (tv.getWidth())) / 2)) + (getPaddingLeft())),int)", "com.rey.material.widget.CheckedTextView.getLeft()", "com.rey.material.widget.CheckedTextView.getMeasuredWidth()", "com.rey.material.widget.TabPageIndicator.2.updateIndicator(tv.getLeft(),tv.getMeasuredWidth())"], "Fixed commit": "dfffc5aa03ef72be75a0d44e6b056a26f917e935", "Url": "https://api.github.com/repos/rey5137/material", "Date": "2015-11-10T08:11:34Z"},
{"Line": "=>1879", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((facetQuery.indexOf('[')) > (-1)) && ((facetQuery.lastIndexOf(']')) > (-1))) { name = facetQuery.substring(((facetQuery.indexOf('[')) + 1)); name = name.substring(0, name.lastIndexOf(']')).replaceAll(\"TO\", \"-\"); filter = facetQuery.substring(facetQuery.indexOf('[')); filter = filter.substring(0, ((filter.lastIndexOf(']')) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/403/buggy-version/dspace-api.src.main.java.org.dspace.discovery.SolrServiceImpl.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.indexOf(char)", "java.lang.String.indexOf(char)", "java.lang.String.substring(int)"], "Fixed commit": "1dbb6ff8695d189adbf7508dc6b185de2c0c83a9", "Url": "https://api.github.com/repos/akinom/DSpace", "Date": "2014-04-20T05:43:57Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(title.getText().toString().trim().isEmpty())) && (!(description.getText().toString().trim().isEmpty()))) { edit(); finish(); }else { title.setError(\"Requerido\"); description.setError(\"Requerido\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8977/buggy-version/app.src.main.java.com.les.povmt.EditActivity.java", "BodyUseAPI": ["android.widget.EditText.setError(java.lang.String)", "android.widget.EditText.setError(java.lang.String)"], "Fixed commit": "194f50682993773f1079a881f5f71922471de88c", "Url": "https://api.github.com/repos/samueltcsantos/povmt-mobile", "Date": "2016-11-27T00:16:43Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((copyProcessFinished) && (screenOrientationChanged)) { if ((onCopyProjectListener) != null) { onCopyProjectListener.onCopyProject(screenOrientationChanged); dismiss(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/9286/buggy-version/catroid.src.at.tugraz.ist.catroid.ui.dialogs.CopyProjectDialog.java", "BodyUseAPI": [], "Fixed commit": "c6f80aa1f63da505c38f92fb46a53d51c963a716", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2012-08-23T19:17:57Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.hasBorrowed(item.getId()))) { com.mycompany.library.core.QueryProccessor q = WebLib.INSTANCE.getQueryProccessor(); com.mycompany.library.core.ReservedItem reserve = q.findReservedItem(item); if (reserve == null) { reserve = new com.mycompany.library.core.ReservedItem(item, this); }else if (!(this.hasReserved(reserve.getId()))) { reserve.setQue(this); this.setReservedItems(reserve); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3325/buggy-version/Library.src.main.java.com.mycompany.library.core.User.java", "BodyUseAPI": ["com.mycompany.library.core.QueryProccessor.findReservedItem(com.mycompany.library.core.Item)"], "Fixed commit": "9db9a17dcf2b6aa7a08a9f6dba402220a1b70ddc", "Url": "https://api.github.com/repos/britsman/WebApp-Project", "Date": "2012-10-23T20:17:23Z"},
{"Line": "=>644", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.etTo.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((t.length()) == 0) { if (android.text.TextUtils.isEmpty(de.ub0r.android.websms.WebSMS.lastTo)) { de.ub0r.android.websms.WebSMS.lastTo = android.preference.PreferenceManager.getDefaultSharedPreferences(this).getString(de.ub0r.android.websms.WebSMS.PREFS_TO, \"\"); } t = de.ub0r.android.websms.WebSMS.lastTo.trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3365/buggy-version/src.de.ub0r.android.websms.WebSMS.java", "BodyUseAPI": [], "Fixed commit": "dcfe23196feccd81ab0e0c34a92b3a6670efa57c", "Url": "https://api.github.com/repos/felixb/websms", "Date": "2011-02-21T18:48:13Z"},
{"Line": "=>5", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((s1.length()) != (s2.length())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1803/buggy-version/ch01.1.09_-_String_Rotation.StringRotation.java", "BodyUseAPI": [], "Fixed commit": "56f8f534180793ffa34a0e3be5c39725420a1d0a", "Url": "https://api.github.com/repos/austinschwartz/ctci_v6", "Date": "2015-10-05T00:08:38Z"},
{"Line": "=>1435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ofbiz.entity.util.EntityListIterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.ofbiz.base.util.UtilValidate.isEmpty(product)) { flag = false; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8101/buggy-version/hot-deploy.zuczugcommon.src.com.zuczug.product.ZuczugProductServices.java", "BodyUseAPI": [], "Fixed commit": "f477691d1e51c804b65f009d6b527e816c6e4b49", "Url": "https://api.github.com/repos/zuczug/bluemountain", "Date": "2016-06-29T06:23:17Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((input != null) && ((input.getText()) != null)) deal_name = input.getText().toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1278/buggy-version/app.src.main.java.com.alwarsha.activities.MainActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "input.getText().toString()"], "Fixed commit": "48ac14e7d92d3c35ec23478809648b401b9a1414", "Url": "https://api.github.com/repos/RedEyesClub/Alwarsha", "Date": "2014-06-29T10:05:03Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (is_default_track) GPSLoggerServiceIntent.putExtra(\"track_id\", track_id);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5008/buggy-version/app.src.main.java.com.mountain.mytracker.activity.TrackLoggerActivity.java", "BodyUseAPI": [], "Fixed commit": "0360aef33f89acbe45d44ebf671979743f607bfd", "Url": "https://api.github.com/repos/andreistirb/MountainTracker", "Date": "2015-05-30T15:48:19Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lwc.isProtectable(baseBlock)) && (!(DoorMatcher.PROTECTABLES_DOORS.contains(baseBlock.getType())))) { if (tryLoadProtection(baseBlock)) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1277/buggy-version/src.main.java.com.griefcraft.util.ProtectionFinder.java", "BodyUseAPI": ["com.griefcraft.util.ProtectionFinder.tryLoadProtection(org.bukkit.block.Block)"], "Fixed commit": "b682d46f19f38d67d1e84adae4ea443392b17bca", "Url": "https://api.github.com/repos/Hidendra/LWC", "Date": "2011-12-24T04:13:03Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((taskDigitToModify >= 0) && (taskDigitToModify < maxIndex)) { if (taskDigitToModify < (scheduledTasksOverDue.size())) { modifyScheduledTask(executeTask, taskDigitToModify, scheduledTasksOverDue); }else if (taskDigitToModify < ((scheduledTasksToDo.size()) + (scheduledTasksOverDue.size()))) { taskDigitToModify -= scheduledTasksOverDue.size(); modifyScheduledTask(executeTask, taskDigitToModify, scheduledTasksToDo); }else { taskDigitToModify -= (scheduledTasksOverDue.size()) + (scheduledTasksToDo.size()); modifyFloatingTasksToDo(executeTask, taskDigitToModify); } }else { setFeedBack((((Logic.Logic.FEEDBACK_NEGATIVE_TASK_NUM) + \" Else, \") + (Logic.Logic.FEEDBACK_TASK_NUM_NOT_FOUND))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2075/buggy-version/src.Logic.Logic.java", "BodyUseAPI": ["Logic.Logic.modifyScheduledTask(ScheduleHacks.Task,int,java.util.ArrayList<ScheduleHacks.Task>)"], "Fixed commit": "b33caf4501a04e0cc466b040bbd3423f35f7b64d", "Url": "https://api.github.com/repos/cs2103jan2016-t09-2j/main", "Date": "2016-03-07T06:47:35Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(<nulltype>,java.lang.String,java.lang.String,int,<nulltype>,java.lang.Object[],java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (s.equals(this.currentRoom)) { javax.swing.JOptionPane.showMessageDialog(null, \"You are already part of that room!.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4819/buggy-version/438_group14.src.client.java", "BodyUseAPI": [], "Fixed commit": "ba3155e2fdc49b9149f7fc42d073dccfecba6006", "Url": "https://api.github.com/repos/jlcolwick/Team14", "Date": "2012-05-03T22:05:57Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cards.isEmpty())) drawPlayerCardStack.getDrawArray().add(cards.pop());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/344/buggy-version/pandemie.src.games.Pandemie.applicationLogic.CardManager.java", "BodyUseAPI": ["drawPlayerCardStack.getDrawArray().add(cards.pop())", "java.util.Stack<games.Pandemie.applicationLogic.Card>.pop()"], "Fixed commit": "c9dcf0ef89cf9555091c497cb96d91a19abac63b", "Url": "https://api.github.com/repos/marvinIII/pandemie", "Date": "2016-07-21T15:39:29Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cpt != nbAtt) { throw new java.io.IOException(\"Misformated SLF file.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/413/buggy-version/src.main.java.org.thegalactic.context.io.ContextSerializerSLF.java", "BodyUseAPI": [], "Fixed commit": "34ca1ad65596619f7f0bef7e77b0668a804efbd0", "Url": "https://api.github.com/repos/thegalactic/java-lattices", "Date": "2016-06-22T16:18:21Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loanRecurrenceTypeId == 1) { if (meetingDto.getMeetingDetailsDto().getRecurrenceDetails().getWeekOfMonth().equals(0)) { recurringSchedule = new org.mifos.clientportfolio.loan.service.MonthlyOnDayOfMonthSchedule(meetingEvery, meetingDto.getMeetingDetailsDto().getRecurrenceDetails().getDayOfWeek()); }else { recurringSchedule = new org.mifos.clientportfolio.loan.service.MonthlyOnWeekOfMonthSchedule(meetingEvery, meetingDto.getMeetingDetailsDto().getRecurrenceDetails().getWeekOfMonth(), meetingDto.getMeetingDetailsDto().getRecurrenceDetails().getDayOfWeek()); } }else if (loanRecurrenceTypeId == 2) { recurringSchedule = new org.mifos.clientportfolio.loan.service.WeeklySchedule(meetingEvery, meetingDto.getMeetingDetailsDto().getRecurrenceDetails().getDayOfWeek()); }else if (loanRecurrenceTypeId == 3) { recurringSchedule = new org.mifos.clientportfolio.loan.service.DailySchedule(meetingEvery); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4822/buggy-version/appdomain.src.main.java.org.mifos.application.importexport.servicefacade.ImportLoansSavingsFacadeWebTier.java", "BodyUseAPI": [], "Fixed commit": "a0684f19e1208ceb4a4560322b7c39c5b6521b12", "Url": "https://api.github.com/repos/lrozanski/head", "Date": "2013-03-25T16:28:46Z"},
{"Line": "=>738", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (o.isDirty()) { if (o.isSparse()) { org.apache.sysml.runtime.instructions.gpu.context.CSRPointer p = o.getSparseMatrixCudaPointer(); if (p == null) throw new java.lang.RuntimeException(\"CSRPointer is null in clearTemporaryMemory\"); if (((p.rowPtr) != null) && (cudaBlockSizeMap.containsKey(p.rowPtr))) { tmpCudaBlockSizeMap.put(p.rowPtr, cudaBlockSizeMap.get(p.rowPtr)); } if (((p.colInd) != null) && (cudaBlockSizeMap.containsKey(p.colInd))) { tmpCudaBlockSizeMap.put(p.colInd, cudaBlockSizeMap.get(p.colInd)); } if (((p.val) != null) && (cudaBlockSizeMap.containsKey(p.val))) { tmpCudaBlockSizeMap.put(p.val, cudaBlockSizeMap.get(p.val)); } }else { jcuda.Pointer p = o.getJcudaDenseMatrixPtr(); if (p == null) throw new java.lang.RuntimeException(\"Pointer is null in clearTemporaryMemory\"); tmpCudaBlockSizeMap.put(p, cudaBlockSizeMap.get(p)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5244/buggy-version/src.main.java.org.apache.sysml.runtime.instructions.gpu.context.GPUContext.java", "BodyUseAPI": ["org.apache.sysml.runtime.instructions.gpu.context.GPUObject.isSparse()", "org.apache.sysml.runtime.instructions.gpu.context.GPUObject.getSparseMatrixCudaPointer()", "org.apache.sysml.runtime.instructions.gpu.context.GPUObject.getJcudaDenseMatrixPtr()"], "Fixed commit": "d364bb49d1d64c8ba78a83891d112fb440425eca", "Url": "https://api.github.com/repos/nakul02/systemml", "Date": "2017-08-16T23:07:01Z"},
{"Line": "=>741", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.sysml.runtime.instructions.gpu.context.GPUObject.getSparseMatrixCudaPointer()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (p == null) throw new java.lang.RuntimeException(\"CSRPointer is null in clearTemporaryMemory\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5244/buggy-version/src.main.java.org.apache.sysml.runtime.instructions.gpu.context.GPUContext.java", "BodyUseAPI": [], "Fixed commit": "d364bb49d1d64c8ba78a83891d112fb440425eca", "Url": "https://api.github.com/repos/nakul02/systemml", "Date": "2017-08-16T23:07:01Z"},
{"Line": "=>755", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.sysml.runtime.instructions.gpu.context.GPUObject.getJcudaDenseMatrixPtr()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (p == null) throw new java.lang.RuntimeException(\"Pointer is null in clearTemporaryMemory\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5244/buggy-version/src.main.java.org.apache.sysml.runtime.instructions.gpu.context.GPUContext.java", "BodyUseAPI": [], "Fixed commit": "d364bb49d1d64c8ba78a83891d112fb440425eca", "Url": "https://api.github.com/repos/nakul02/systemml", "Date": "2017-08-16T23:07:01Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((code.charAt(0)) != '9') lastCode = code;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2757/buggy-version/JCGFranchise.src.ui.BaseJFrame.java", "BodyUseAPI": [], "Fixed commit": "88cb1ea50bfbbaef3b01c3290857e51ca88968e7", "Url": "https://api.github.com/repos/cbrookshire/JCGProject", "Date": "2013-07-15T04:21:41Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timeoutMs) > newTimeout) { timeoutMs = newTimeout; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8517/buggy-version/libs.SalesforceSDK.src.com.salesforce.androidsdk.security.PasscodeManager.java", "BodyUseAPI": [], "Fixed commit": "bd681767ba19411662911f7350e4d5547255c44b", "Url": "https://api.github.com/repos/wmathurin/SalesforceMobileSDK-Android", "Date": "2017-12-11T23:33:53Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URL.openConnection()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((con.getResponseCode()) == 200) { in = new java.io.BufferedReader(new java.io.InputStreamReader(con.getInputStream())); }else { in = new java.io.BufferedReader(new java.io.InputStreamReader(con.getErrorStream())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1218/buggy-version/rakam-ui.src.main.java.org.rakam.ui.ClusterService.java", "BodyUseAPI": ["java.net.HttpURLConnection.getErrorStream()", "java.net.HttpURLConnection.getInputStream()"], "Fixed commit": "ec45e3b7989f30167dde0039bb5ee029edb786ec", "Url": "https://api.github.com/repos/rakam-io/rakam", "Date": "2016-12-28T12:35:05Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (model == null) { model = org.apache.jena.rdf.model.ModelFactory.createDefaultModel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5586/buggy-version/fcrepo-clients.src.main.java.edu.unc.lib.dl.fcrepo4.WorkObject.java", "BodyUseAPI": [], "Fixed commit": "a45edaaf8549e7b0bac212befd51ad2f533efb95", "Url": "https://api.github.com/repos/UNC-Libraries/Carolina-Digital-Repository", "Date": "2017-08-24T19:17:08Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (contentStream == null) { throw new java.lang.IllegalArgumentException(\"A non-null contentstream is required\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5586/buggy-version/fcrepo-clients.src.main.java.edu.unc.lib.dl.fcrepo4.WorkObject.java", "BodyUseAPI": [], "Fixed commit": "a45edaaf8549e7b0bac212befd51ad2f533efb95", "Url": "https://api.github.com/repos/UNC-Libraries/Carolina-Digital-Repository", "Date": "2017-08-24T19:17:08Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (criteria == null) criteria.where(\"to\").exists(false); else criteria.and(\"to\").exists(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2562/buggy-version/src.main.java.com.xecoder.service.service.MessagesService.java", "BodyUseAPI": ["org.springframework.data.mongodb.core.query.Criteria.and(java.lang.String)", "criteria.where(\"to\").exists(boolean)", "org.springframework.data.mongodb.core.query.Criteria.where(java.lang.String)", "criteria.and(\"to\").exists(boolean)"], "Fixed commit": "26622240d80feda8eae2ef15b36a8c11acc39c64", "Url": "https://api.github.com/repos/ktmswzw/FeelingServer", "Date": "2016-03-22T00:31:35Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.redhat.ceylon.common.tool.ToolModel<T>.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (argumentModelIndex >= (argumentModels.size())) { throw new com.redhat.ceylon.common.tool.OptionArgumentException(\"argument.unexpected\", arg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6194/buggy-version/src.com.redhat.ceylon.common.tool.ToolFactory.java", "BodyUseAPI": [], "Fixed commit": "edd5de156629248169524aafd236b75b5733f659", "Url": "https://api.github.com/repos/ceylon/ceylon-common", "Date": "2012-09-11T15:25:38Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((prefix == null) || (prefix.isEmpty())) { qname = new org.exist.dom.QName(javax.xml.XMLConstants.XMLNS_ATTRIBUTE, uri); }else { qname = new org.exist.dom.QName(prefix, uri, javax.xml.XMLConstants.XMLNS_ATTRIBUTE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6142/buggy-version/src.org.exist.dom.memtree.MemTreeBuilder.java", "BodyUseAPI": [], "Fixed commit": "33ef992740f66f74c61fee55121c34a85057fbb4", "Url": "https://api.github.com/repos/dizzzz/exist", "Date": "2017-11-29T01:56:39Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["User.getPacket_send()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((packets.size()) > 0) latency_current = latency_current / (packets.size());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5524/buggy-version/NTR.src.CalculLatency.java", "BodyUseAPI": ["java.util.List<Packet>.size()"], "Fixed commit": "fd051f0857ff56ecd535ece33821da2ca16de73a", "Url": "https://api.github.com/repos/tandriamil/NTR_Project_ARO_into_RMC_5G", "Date": "2016-04-04T12:20:50Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasLocation) { gps.stopUsingGPS(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1844/buggy-version/app.src.main.java.ca.ualberta.andromeda.AddMoodActivity.java", "BodyUseAPI": [], "Fixed commit": "28534fc45d7f7bfbdde895ac3a9a5be0c80811b4", "Url": "https://api.github.com/repos/CMPUT301W17T16/Andromeda", "Date": "2017-03-31T20:41:48Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["database.DBSet.getInstance().getNameMap().get(name.getName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (nameReloaded == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8410/buggy-version/Qora.src.qora.web.Profile.java", "BodyUseAPI": [], "Fixed commit": "af3fd8f1b826d48a78c8a9ebc56246f71c4a1fa1", "Url": "https://api.github.com/repos/Qoracoin/Qora", "Date": "2015-07-19T12:35:27Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shouldIgnorePaging(request)) { options.disableLimit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/347/buggy-version/server.sonar-server.src.main.java.org.sonar.server.issue.ws.SearchAction.java", "BodyUseAPI": [], "Fixed commit": "cf5621c60850a342757bf146612fda9c34ce3756", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2015-03-30T08:35:10Z"},
{"Line": "=>989", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((userSetting.getEventSettings(eventID)) != null) { if ((userSetting.getEventSettings(eventID).getColorCode()) == null) { userSetting.getEventSettings(eventID).setColorCode(\"000000\"); } checkColor(userSetting.getEventSettings(eventID).getColorCode()); mapper.insertSubscription(eventID, userSetting.getEventSettings(eventID).getColorCode(), userID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5626/buggy-version/src.main.java.unicopa.copa.server.database.DatabaseService.java", "BodyUseAPI": ["userSetting.getEventSettings(eventID).getColorCode()", "unicopa.copa.base.UserSettings.getEventSettings(int)", "unicopa.copa.base.UserSettings.getEventSettings(int)", "userSetting.getEventSettings(eventID).setColorCode(java.lang.String)", "userSetting.getEventSettings(eventID).getColorCode()", "userSetting.getEventSettings(eventID).getColorCode()", "unicopa.copa.base.UserSettings.getEventSettings(int)", "unicopa.copa.server.database.data.persistence.UserSettingMapper.insertSubscription(int,userSetting.getEventSettings(eventID).getColorCode(),int)", "unicopa.copa.base.UserSettings.getEventSettings(int)", "unicopa.copa.server.database.DatabaseService.checkColor(userSetting.getEventSettings(eventID).getColorCode())"], "Fixed commit": "9c2cf545626047aac7d4bb45e216f9736351dbcc", "Url": "https://api.github.com/repos/UniCopa/CopaServer", "Date": "2013-06-30T12:54:51Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentlyRecording) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/163/buggy-version/SoundChanger.app.src.main.java.com.ralemproductions.soundchanger.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6f74bea04905dfc2ed1ebc4cd91761160b0bda35", "Url": "https://api.github.com/repos/Ralem-Productions/AndroidAudio", "Date": "2015-07-09T23:40:12Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.util.Vector<java.lang.Integer>, java.util.HashSet<GraphNode>>.get(java.util.Vector<java.lang.Integer>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (nodes == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6933/buggy-version/src.main.java.NodeSetManager.java", "BodyUseAPI": [], "Fixed commit": "3d9997bf85f14fdd8abf5f5dd449ebecb77a7f30", "Url": "https://api.github.com/repos/erictapen/weird-tree-presenter", "Date": "2015-10-16T15:03:33Z"},
{"Line": "=>629", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((detail.length()) > 1) { detail = detail.substring(1); }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/603/buggy-version/app.src.main.java.com.example.ett10132.musiclist.MainActivityFragment.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "3cd6e9b2cbad551eec156f602a09be173f5d365f", "Url": "https://api.github.com/repos/AkiWiksten/MusicList", "Date": "2016-04-24T11:30:08Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Double.compare(theta, java.lang.Math.PI)) == 0) { xe *= -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7332/buggy-version/3DEngineModel.src.com.jff.engine3d.model.camera.AbstractCameraProjection.java", "BodyUseAPI": [], "Fixed commit": "7700e7e0e53ee42391a78463d88e56e2bd3d57c1", "Url": "https://api.github.com/repos/xal/3dEngine", "Date": "2013-06-08T17:00:39Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event.getClick().isShiftClick()) { event.setCancelled(true); event.getCursor().setType(Material.AIR); }else { if (((event.getCurrentItem().getAmount()) >= 1) && ((event.getRawSlot()) >= (chestInventory.getSize()))) { event.setCancelled(true); event.getCursor().setType(Material.AIR); } if ((event.getRawSlot()) <= (chestInventory.getSize())) { org.bukkit.entity.Player player = ((org.bukkit.entity.Player) (event.getWhoClicked())); player.getWorld().dropItemNaturally(player.getLocation(), event.getCurrentItem()); event.getCursor().setType(Material.AIR); event.setCancelled(true); player.closeInventory(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2421/buggy-version/uChest.src.main.java.com.ullarah.uchest.event.ChestClick.java", "BodyUseAPI": ["event.getCursor().setType(Material.AIR)", "org.bukkit.event.inventory.InventoryClickEvent.getCurrentItem()", "org.bukkit.event.inventory.InventoryClickEvent.getRawSlot()", "org.bukkit.event.inventory.InventoryClickEvent.setCancelled(boolean)", "event.getCursor().setType(Material.AIR)", "org.bukkit.event.inventory.InventoryClickEvent.getCursor()", "org.bukkit.event.inventory.InventoryClickEvent.setCancelled(boolean)", "org.bukkit.event.inventory.InventoryClickEvent.getWhoClicked()", "org.bukkit.event.inventory.InventoryClickEvent.getCursor()", "event.getCurrentItem().getAmount()", "event.getCursor().setType(Material.AIR)", "player.getWorld().dropItemNaturally(player.getLocation(),event.getCurrentItem())", "org.bukkit.event.inventory.InventoryClickEvent.setCancelled(boolean)", "org.bukkit.event.inventory.InventoryClickEvent.getCurrentItem()", "org.bukkit.event.inventory.InventoryClickEvent.getRawSlot()", "org.bukkit.event.inventory.InventoryClickEvent.getCursor()"], "Fixed commit": "331f6f9bf1f638668e941a540a17242b6ac08838", "Url": "https://api.github.com/repos/Ullarah/MinecraftPlugins", "Date": "2016-07-20T07:34:59Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pleijer.getHand().getBlackjackValue()) == value) { if (topPlayer != null) { if ((pleijer.getHand().howManyCards()) < (topPlayer.getHand().howManyCards())) { topPlayer = pleijer; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3763/buggy-version/blj.src.logiikka.Play.java", "BodyUseAPI": ["pleijer.getHand().howManyCards()", "logiikka.Player.getHand()"], "Fixed commit": "0d57d18e67a4db0bf49f0e4f85777e34d6ae56e9", "Url": "https://api.github.com/repos/sampox/OhHa", "Date": "2013-02-21T02:12:37Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdapter) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/9208/buggy-version/app.src.main.java.de.djuelg.neuronizer.presentation.ui.fragments.PreviewFragment.java", "BodyUseAPI": [], "Fixed commit": "3571e7f6194fa3bfd1b0331cad8b4a5c60c10e9d", "Url": "https://api.github.com/repos/djuelg/Neuronizer", "Date": "2017-10-26T09:11:49Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (smartcity.accessibility.database.DatabaseManager.init) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1237/buggy-version/src.main.java.smartcity.accessibility.database.DatabaseManager.java", "BodyUseAPI": [], "Fixed commit": "d7f4846cffe9205e027a56043844d536ae3de68b", "Url": "https://api.github.com/repos/TechnionYP5777/SmartCity-Accessibility", "Date": "2016-12-20T20:15:38Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (AbstractActivity.gif_self.getClass().getName().equals(\"com.llp.lunchkaki.activities.HomeActivity\")) { AbstractActivity.gif_self.findViewById(R.id.label_random_lunch_on).setVisibility(View.GONE); AbstractActivity.gif_self.findViewById(R.id.label_random_lunch_off).setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7375/buggy-version/app.src.main.java.com.llp.lunchkaki.models.User.java", "BodyUseAPI": [], "Fixed commit": "ee1af68dc857dd30e23b7cabaee60874817c714a", "Url": "https://api.github.com/repos/brianfwz/lkk", "Date": "2016-05-04T11:54:11Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (frame == null) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1102/buggy-version/src.jlogic.REPL.java", "BodyUseAPI": [], "Fixed commit": "92667d38956d89d94890f58d30f0fa3e8d58711f", "Url": "https://api.github.com/repos/leod/jlogic", "Date": "2011-09-27T18:43:56Z"},
{"Line": "=>601", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.giraph.master.BspServiceMaster.getZkExt().getData(java.lang.String,boolean,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (data == null) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1113/buggy-version/giraph-core.src.main.java.org.apache.giraph.master.BspServiceMaster.java", "BodyUseAPI": [], "Fixed commit": "c7627c4ac525761f6c3b6c3e5445733af67cdad9", "Url": "https://api.github.com/repos/svenduzont/giraph", "Date": "2013-09-25T18:48:58Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(adjectiveOccurenceMap.containsKey(featureWordSite))) { com.enhype.extract.FeatureWordExtractor.logger.info(((((\"Site: \" + siteId) + \" ; Word: \") + featureWord) + \" can not be found \")); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8710/buggy-version/filter.src.main.java.com.enhype.extract.FeatureWordExtractor.java", "BodyUseAPI": [], "Fixed commit": "ff48917e6aa1fc3c8cde8c00a6979146f462ce32", "Url": "https://api.github.com/repos/angelacoconuts/imm-foundation", "Date": "2014-04-15T23:56:26Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["txtScreen.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (txt.contains(\"Infinity\")) { android.widget.Toast.makeText(getApplicationContext(), \"Operations with infinity not allowed\", Toast.LENGTH_LONG).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7608/buggy-version/Calculator.app.src.main.java.com.bestgroup.ensf409project1part1.calculator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a5b3b9eadc04ab5b9b36cb1afe308b6b09f355ee", "Url": "https://api.github.com/repos/Ben-Graham/ENSF-409-Final", "Date": "2017-03-31T18:01:02Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((processor.getModel().getUrl()) == null) { processor.getModel().setUrl(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5723/buggy-version/phresco-pom.src.main.java.com.phresco.pom.util.SiteConfigurator.java", "BodyUseAPI": ["processor.getModel().setUrl(java.lang.String)", "com.phresco.pom.util.PomProcessor.getModel()"], "Fixed commit": "0dc670a1e553ef70931f93ef1afd04a4da9adf4f", "Url": "https://api.github.com/repos/phresco/phresco", "Date": "2012-07-16T14:09:23Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<hudson.model.ParameterDefinition>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (oldParameter instanceof hudson.model.ChoiceParameterDefinition) { com.joelj.jenkins.eztemplates.utils.EzReflectionUtils.setFieldValue(hudson.model.ChoiceParameterDefinition.class, oldParameter, \"choices\", com.google.common.collect.Lists.newArrayList(((hudson.model.ChoiceParameterDefinition) (newParameter)).getChoices())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6446/buggy-version/src.main.java.com.joelj.jenkins.eztemplates.exclusion.JobParametersExclusion.java", "BodyUseAPI": ["com.joelj.jenkins.eztemplates.utils.EzReflectionUtils.setFieldValue(java.lang.Class,hudson.model.ParameterDefinition,java.lang.String,com.google.common.collect.Lists.newArrayList(((hudson.model.ChoiceParameterDefinition) (newParameter)).getChoices()))"], "Fixed commit": "bde2275eaee0760f551092da036ecb9d37e3c7ab", "Url": "https://api.github.com/repos/juanpablo-santos/ez-templates-plugin", "Date": "2016-08-28T15:17:08Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(plugin.getCustomConfig().getBoolean(\"allowArmor\", true))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7447/buggy-version/NeverBreak.src.com.github.thebiologist13.listeners.EntityDamageListener.java", "BodyUseAPI": [], "Fixed commit": "89292ca433e248345fc034b721486136cf2f155b", "Url": "https://api.github.com/repos/thebiologist13/NeverBreak", "Date": "2012-12-08T04:07:04Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.reactome.web.diagram.client.UserActionsManager.Handler.getHoveredDiagramObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((hovered.getGraphObject()) instanceof org.reactome.web.diagram.data.graph.model.GraphPhysicalEntity) { handler.showDialog(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7297/buggy-version/src.main.java.org.reactome.web.diagram.client.UserActionsManager.java", "BodyUseAPI": [], "Fixed commit": "1f4975583f11d675e6a9cb813523968d6f32745f", "Url": "https://api.github.com/repos/reactome-pwp/diagram", "Date": "2017-01-12T14:48:54Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.struts.action.DynaActionForm.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((title == null) || ((title.length()) == 0)) { org.apache.struts.action.ActionErrors actionErrors = new org.apache.struts.action.ActionErrors(); actionErrors.add(\"finalWorkInformationForm.title\", new org.apache.struts.action.ActionError(\"finalWorkInformationForm.title\")); saveErrors(request, actionErrors); return mapping.getInputForward(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3359/buggy-version/src.main.java.net.sourceforge.fenixedu.presentationTier.Action.teacher.FinalWorkManagementAction.java", "BodyUseAPI": [], "Fixed commit": "dbc4798c8cdf12750077bde1645bf9040df20df5", "Url": "https://api.github.com/repos/diutsu/fenix", "Date": "2013-09-19T13:38:16Z"},
{"Line": "=>3644", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (convertMeta == null) { throw new org.pentaho.di.core.exception.KettleValueException(\"API coding error: convertMeta input parameter should not be equals to null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5772/buggy-version/core.src.org.pentaho.di.core.row.value.ValueMetaBase.java", "BodyUseAPI": [], "Fixed commit": "e1e1bc26aee8022f1f44e8fc544bab9e80a1f7c1", "Url": "https://api.github.com/repos/pentaho-nbaker/pentaho-kettle", "Date": "2014-11-11T10:01:41Z"},
{"Line": "=>3698", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (pol == null) { return null; }else if ((org.pentaho.di.core.Const.isEmpty(pol)) && (valueType != (org.pentaho.di.compatibility.Value.VALUE_TYPE_STRING))) { return null; }else { if (!(org.pentaho.di.core.Const.isEmpty(null_value))) { if ((null_value.length()) <= (pol.length())) { if (pol.equalsIgnoreCase(org.pentaho.di.core.Const.rightPad(new java.lang.StringBuffer(null_value), pol.length()))) { return emptyValue; } } }else { if (org.pentaho.di.core.Const.onlySpaces(pol)) { return emptyValue; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5772/buggy-version/core.src.org.pentaho.di.core.row.value.ValueMetaBase.java", "BodyUseAPI": ["org.pentaho.di.core.Const.onlySpaces(java.lang.String)", "org.pentaho.di.core.Const.rightPad(java.lang.StringBuffer,int)", "org.pentaho.di.core.Const.isEmpty(java.lang.String)", "java.lang.String.length()", "java.lang.String.length()", "java.lang.String.equalsIgnoreCase(org.pentaho.di.core.Const.rightPad(new java.lang.StringBuffer(null_value), pol.length()))"], "Fixed commit": "e1e1bc26aee8022f1f44e8fc544bab9e80a1f7c1", "Url": "https://api.github.com/repos/pentaho-nbaker/pentaho-kettle", "Date": "2014-11-11T10:01:41Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pagesWithOutlines.get(page.getPdfObject())) != null) { for (com.itextpdf.kernel.pdf.PdfOutline outline : pagesWithOutlines.get(page.getPdfObject())) { outline.removeOutline(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8809/buggy-version/kernel.src.main.java.com.itextpdf.kernel.pdf.PdfCatalog.java", "BodyUseAPI": ["com.itextpdf.kernel.pdf.PdfPage.getPdfObject()", "java.util.Map<com.itextpdf.kernel.pdf.PdfObject, java.util.List<com.itextpdf.kernel.pdf.PdfOutline>>.get(page.getPdfObject())"], "Fixed commit": "77816baf8ee05c2edc771c294331da6550719a6b", "Url": "https://api.github.com/repos/itext/itext7", "Date": "2016-08-12T14:15:55Z"},
{"Line": "=>862", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pick_photos) { if (allowMultiple) { animateFab(true, false); }else { setPhotosResult(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2481/buggy-version/app.src.main.java.us.koller.cameraroll.ui.AlbumActivity.java", "BodyUseAPI": [], "Fixed commit": "298630dcfc01b949bc764995c1e1a74faf476ace", "Url": "https://api.github.com/repos/kollerlukas/Camera-Roll-Android-App", "Date": "2017-05-07T22:43:05Z"},
{"Line": "=>697", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (allowMultiple) { android.content.ClipData clipData = createClipData(selected_items); intent.setClipData(clipData); }else { intent.setData(selected_items[0].getUri(this)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2481/buggy-version/app.src.main.java.us.koller.cameraroll.ui.AlbumActivity.java", "BodyUseAPI": [], "Fixed commit": "298630dcfc01b949bc764995c1e1a74faf476ace", "Url": "https://api.github.com/repos/kollerlukas/Camera-Roll-Android-App", "Date": "2017-05-07T22:43:05Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (pasteDetail instanceof org.silverpeas.components.kmelia.KmeliaCopyDetail) { org.silverpeas.components.kmelia.KmeliaCopyDetail copyDetail = ((org.silverpeas.components.kmelia.KmeliaCopyDetail) (pasteDetail)); setPublicationStatus(copyDetail.getPublicationStatus()); setPublicationTargetValidatorIds(copyDetail.getPublicationValidatorIds()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4133/buggy-version/kmelia.kmelia-library.src.main.java.org.silverpeas.components.kmelia.KmeliaCopyDetail.java", "BodyUseAPI": [], "Fixed commit": "e9d16fb920fd88c910ed600fbbe756bdec1afdcd", "Url": "https://api.github.com/repos/SilverTeamWork/Silverpeas-Components", "Date": "2017-02-17T13:28:51Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (caretOffset <= 1) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4735/buggy-version/src.ca.weblite.netbeans.mirah.typinghooks.MirahTypingCompletion.java", "BodyUseAPI": [], "Fixed commit": "cf76ca740c9af1b01b1d5ebe6dc33db321e7bf5c", "Url": "https://api.github.com/repos/shannah/mirah-nbm", "Date": "2014-08-14T00:52:59Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.weblite.netbeans.mirah.lexer.DocumentQuery.getBOL(int)", "ca.weblite.netbeans.mirah.lexer.DocumentQuery.getBOL(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dq.getIndent(prevBOL)) < (dq.getIndent(nextBOL))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4735/buggy-version/src.ca.weblite.netbeans.mirah.typinghooks.MirahTypingCompletion.java", "BodyUseAPI": [], "Fixed commit": "cf76ca740c9af1b01b1d5ebe6dc33db321e7bf5c", "Url": "https://api.github.com/repos/shannah/mirah-nbm", "Date": "2014-08-14T00:52:59Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<T, ca.weblite.netbeans.mirah.typinghooks.TokenBalance.TokenIdPair<T>>.get(T)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (pair == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4735/buggy-version/src.ca.weblite.netbeans.mirah.typinghooks.TokenBalance.java", "BodyUseAPI": [], "Fixed commit": "cf76ca740c9af1b01b1d5ebe6dc33db321e7bf5c", "Url": "https://api.github.com/repos/shannah/mirah-nbm", "Date": "2014-08-14T00:52:59Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(gameObjects.get(i).remove())) && (!(gameObjects.get(i2).remove()))) { gameObjects.get(i).handleCollision(gameObjects.get(i2)); gameObjects.get(i2).handleCollision(gameObjects.get(i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1253/buggy-version/core.src.main.java.sem.group15.bubblebobble.core.Level.java", "BodyUseAPI": ["java.util.List<sem.group15.bubblebobble.core.objects.GameObject>.get(int)", "java.util.List<sem.group15.bubblebobble.core.objects.GameObject>.get(int)", "java.util.List<sem.group15.bubblebobble.core.objects.GameObject>.get(int)", "gameObjects.get(i2).handleCollision(gameObjects.get(i))", "java.util.List<sem.group15.bubblebobble.core.objects.GameObject>.get(int)", "gameObjects.get(i).handleCollision(gameObjects.get(i2))"], "Fixed commit": "83379c6c739c3d94606c7a2e2e462c6cf837c36f", "Url": "https://api.github.com/repos/arjovanramshorst/bubble-bobble-sem", "Date": "2015-10-20T09:28:32Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(object.remove())) { object.update(elapsed); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1253/buggy-version/core.src.main.java.sem.group15.bubblebobble.core.Level.java", "BodyUseAPI": ["sem.group15.bubblebobble.core.objects.GameObject.update(float)"], "Fixed commit": "83379c6c739c3d94606c7a2e2e462c6cf837c36f", "Url": "https://api.github.com/repos/arjovanramshorst/bubble-bobble-sem", "Date": "2015-10-20T09:28:32Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (object instanceof sem.group15.bubblebobble.core.objects.Enemy) { gameObjects.add(1, object); }else { gameObjects.add(object); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1253/buggy-version/core.src.main.java.sem.group15.bubblebobble.core.objects.GameObject.java", "BodyUseAPI": ["java.util.List<sem.group15.bubblebobble.core.objects.GameObject>.add(sem.group15.bubblebobble.core.objects.GameObject)", "java.util.List<sem.group15.bubblebobble.core.objects.GameObject>.add(int,sem.group15.bubblebobble.core.objects.GameObject)"], "Fixed commit": "83379c6c739c3d94606c7a2e2e462c6cf837c36f", "Url": "https://api.github.com/repos/arjovanramshorst/bubble-bobble-sem", "Date": "2015-10-20T09:28:32Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["SetupPage.getSensorRange()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (actualDistance <= sensorRange) { robotLocation = sensor.locateRobot(navPoint); }else { robotLocation = sensor.locateRobot(refPoint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/611/buggy-version/Terminator.src.NavigationSimulation.java", "BodyUseAPI": [], "Fixed commit": "ce936f2357cea2db4f25b6c3fb16aac1d465aee7", "Url": "https://api.github.com/repos/dylan2dakota/Terminator", "Date": "2016-04-16T00:17:16Z"},
{"Line": "=>2161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fi.getParent()) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4045/buggy-version/src.com.leafdigital.ui.UISingleton.java", "BodyUseAPI": [], "Fixed commit": "41e17a7c0b955120c233b15742c52481dc7bc884", "Url": "https://api.github.com/repos/quen/leafchat", "Date": "2011-09-30T14:14:57Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((use.getParent()) instanceof com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.Function) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/29/buggy-version/src.main.java.com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.ClassConstantCanBeUsedInspector.java", "BodyUseAPI": [], "Fixed commit": "78bead92fb692b19194fe7e20d3bd0b5c1c1ebaa", "Url": "https://api.github.com/repos/kalessil/phpinspectionsea", "Date": "2016-12-12T20:50:51Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (amountToPlaceBack > 0) { i1--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4121/buggy-version/src.com.tweakcart.util.ChestUtil.java", "BodyUseAPI": [], "Fixed commit": "f9e4989863e7eac66f289130b0f513da65da34a5", "Url": "https://api.github.com/repos/TweakCraft/TweakCart", "Date": "2011-09-03T02:29:58Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(def.exists())) { def.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5042/buggy-version/src.ConnectionHandler.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "ae3f14cbc3a323cb7ae22ade3bb86f8773e3e18e", "Url": "https://api.github.com/repos/FiXeR-912/Simple-FTP-Server", "Date": "2014-11-14T16:23:31Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.unicef.rapidreg.service.IncidentService.generateAgeSearchCondition(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (ageSearchCondition != null) { conditionGroup.and(ageSearchCondition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5085/buggy-version/app.src.main.java.org.unicef.rapidreg.service.IncidentService.java", "BodyUseAPI": ["com.raizlabs.android.dbflow.sql.language.ConditionGroup.and(com.raizlabs.android.dbflow.sql.language.Condition)"], "Fixed commit": "2cfadb5e263e5b769c2e027538289767a32a9f7f", "Url": "https://api.github.com/repos/UnicefNY/RapidReg", "Date": "2017-01-13T05:55:49Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.unicef.rapidreg.service.TracingService.generateAgeSearchCondition(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (ageSearchCondition != null) { conditionGroup.and(ageSearchCondition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5085/buggy-version/app.src.main.java.org.unicef.rapidreg.service.TracingService.java", "BodyUseAPI": ["com.raizlabs.android.dbflow.sql.language.ConditionGroup.and(com.raizlabs.android.dbflow.sql.language.Condition)"], "Fixed commit": "2cfadb5e263e5b769c2e027538289767a32a9f7f", "Url": "https://api.github.com/repos/UnicefNY/RapidReg", "Date": "2017-01-13T05:55:49Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityDamageByEntityEvent.getDamager()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((damager.getItemInHand().getType().equals(Material.BOW)) && (!(event.getCause().equals(DamageCause.PROJECTILE)))) dealtDamage = 20; else dealtDamage = (PvpBalance.Damage.calcDamage(damager)) + (rand.nextInt(((PvpBalance.Damage.calcDamage(damager)) / 10)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5172/buggy-version/src.PvpBalance.DBZListener.java", "BodyUseAPI": ["java.util.Random.nextInt(((PvpBalance.Damage.calcDamage(damager)) / 10))", "PvpBalance.Damage.calcDamage(org.bukkit.entity.Player)", "PvpBalance.Damage.calcDamage(org.bukkit.entity.Player)"], "Fixed commit": "cd8a7a46303ca125f788bb93a3cfe153086c49e8", "Url": "https://api.github.com/repos/crehop/pvpBalance", "Date": "2013-07-02T20:46:49Z"},
{"Line": "=>1325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.energy_home.jemma.ah.hac.lib.EndPoint.getPeerServiceCluster(peerAppliance.getPid(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (appllianceControlServer != null) { ((org.energy_home.jemma.ah.hac.IServiceCluster) (appllianceControlServer)).setAttributeSubscription(ApplianceControlServer.ATTR_StartTime_NAME, ISubscriptionParameters.DEFAULT_SUBSCRIPTION_PARAMETERS, null); ((org.energy_home.jemma.ah.hac.IServiceCluster) (appllianceControlServer)).setAttributeSubscription(ApplianceControlServer.ATTR_FinishTime_NAME, ISubscriptionParameters.DEFAULT_SUBSCRIPTION_PARAMETERS, null); ((org.energy_home.jemma.ah.hac.IServiceCluster) (appllianceControlServer)).setAttributeSubscription(ApplianceControlServer.ATTR_CycleTarget0_NAME, ISubscriptionParameters.DEFAULT_SUBSCRIPTION_PARAMETERS, null); ((org.energy_home.jemma.ah.hac.IServiceCluster) (appllianceControlServer)).setAttributeSubscription(ApplianceControlServer.ATTR_CycleTarget1_NAME, ISubscriptionParameters.DEFAULT_SUBSCRIPTION_PARAMETERS, null); ((org.energy_home.jemma.ah.hac.IServiceCluster) (appllianceControlServer)).setAttributeSubscription(ApplianceControlServer.ATTR_TemperatureTarget0_NAME, ISubscriptionParameters.DEFAULT_SUBSCRIPTION_PARAMETERS, null); ((org.energy_home.jemma.ah.hac.IServiceCluster) (appllianceControlServer)).setAttributeSubscription(ApplianceControlServer.ATTR_TemperatureTarget1_NAME, ISubscriptionParameters.DEFAULT_SUBSCRIPTION_PARAMETERS, null); ((org.energy_home.jemma.ah.hac.IServiceCluster) (appllianceControlServer)).setAttributeSubscription(ApplianceControlServer.ATTR_RemainingTime_NAME, ISubscriptionParameters.DEFAULT_SUBSCRIPTION_PARAMETERS, null); }else { org.energy_home.jemma.ah.internal.greenathome.GreenathomeAppliance.LOG.debug((\"ApplianceControlServer Server Cluster missing on appliance \" + peerAppliancePid)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8356/buggy-version/jemma.osgi.ah.greenathome.src.main.java.org.energy_home.jemma.ah.internal.greenathome.GreenathomeAppliance.java", "BodyUseAPI": [], "Fixed commit": "b54d0c2de789193d540c8aa0535f6f3015fbdf75", "Url": "https://api.github.com/repos/marcoNieddu/jemma", "Date": "2014-11-06T10:44:11Z"},
{"Line": "=>637", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((mode > 0) && (mode < 8))) { java.lang.System.out.println(\"Please choose a valid mode.\"); mode = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/9220/buggy-version/Woo.java", "BodyUseAPI": [], "Fixed commit": "08bb862c87574aa04b0ec8602435a4a138786e7b", "Url": "https://api.github.com/repos/rhuiz4/Skull", "Date": "2017-01-20T18:38:14Z"},
{"Line": "=>621", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((mode > 0) && (mode < 3))) { java.lang.System.out.println(\"Please choose a valid mode.\"); mode = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/9220/buggy-version/Woo.java", "BodyUseAPI": [], "Fixed commit": "08bb862c87574aa04b0ec8602435a4a138786e7b", "Url": "https://api.github.com/repos/rhuiz4/Skull", "Date": "2017-01-20T18:38:14Z"},
{"Line": "=>642", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mode == 7) game.playSurvival(); else if ((mode < 7) && (mode > 0)) { game.BattleTrainer(mode); mode = 0; }else java.lang.System.out.println(\"Choose a valid mode\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/9220/buggy-version/Woo.java", "BodyUseAPI": ["Woo.BattleTrainer(int)"], "Fixed commit": "08bb862c87574aa04b0ec8602435a4a138786e7b", "Url": "https://api.github.com/repos/rhuiz4/Skull", "Date": "2017-01-20T18:38:14Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.arcbees.gquery.tooltip.client.TooltipImpl.readDataAttributes(java.lang.String,int,com.arcbees.gquery.tooltip.client.TooltipImpl.IntegerConverter)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (delay != (-1)) { options.withDelay(delay); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1697/buggy-version/tooltip.src.main.java.com.arcbees.gquery.tooltip.client.TooltipImpl.java", "BodyUseAPI": ["com.arcbees.gquery.tooltip.client.TooltipOptions.withDelay(int)"], "Fixed commit": "9957d3ecdc3b783607f54dbdcc4a2ea2a6075ccf", "Url": "https://api.github.com/repos/ArcBees/ArcBees-GQuery-Plugins", "Date": "2014-01-28T22:26:29Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((tmpUserName) == null) || (tmpUserName.equals(\"\"))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3648/buggy-version/src.com.example.playpalpengame.BeginActivity.java", "BodyUseAPI": [], "Fixed commit": "7c87374b159d78deea6e6c7d4285b8f0502ca415", "Url": "https://api.github.com/repos/b99902062/PlayPalPenGame", "Date": "2014-09-01T05:38:41Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pr == null) pr = com.semanticcms.core.servlet.PageRefResolver.getCurrentPageRef(servletContext, request);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8718/buggy-version/src.main.java.com.semanticcms.core.servlet.Page.java", "BodyUseAPI": [], "Fixed commit": "3bc87afaea994257a9791cec8af717bd49521769", "Url": "https://api.github.com/repos/aoindustries/semanticcms-core-servlet", "Date": "2017-07-15T05:20:48Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (this.useSpinner) { setupIncrementCompWidthHint(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7850/buggy-version/uk.ac.gda.common.rcp.src.uk.ac.gda.ui.components.NumberEditorControl.java", "BodyUseAPI": [], "Fixed commit": "cb6022d37ccb5717221142bd3b0e29c403a820ab", "Url": "https://api.github.com/repos/openGDA/gda-common-rcp", "Date": "2014-03-19T17:51:44Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (viewName.matches(\"^[^_]+_i$\")) { java.lang.String tempViewName = viewName.substring(0, ((viewName.length()) - 2)); java.util.ArrayList<java.lang.String> indexTableNameList = ds.getIndexTable(tempViewName); if ((indexTableNameList.size()) != 0) { java.util.Collections.sort(indexTableNameList); viewName = indexTableNameList.get(((indexTableNameList.size()) - 1)); view = new simsql.compiler.View(viewName, ds.getSQL(viewName), ds.getAttsFromView(viewName), getObjectType(viewName)); } }else if (viewName.matches(\"^[^_]+(_[0-9]+)+$\")) { java.util.HashMap<java.lang.String, java.lang.Integer> indices = simsql.compiler.MultidimensionalTableSchema.getIndicesFromQualifiedName(viewName); java.lang.String tempName = simsql.compiler.MultidimensionalTableSchema.getTableNameFromQualifiedName(viewName); java.util.ArrayList<java.lang.String> indexTableNameList = ds.getIndexTable(tempName); if ((((indices.size()) == 1) && ((indexTableNameList.size()) != 0)) && (indexTableNameList.contains((tempName + \"_i\")))) { viewName = tempName + \"_i\"; view = new simsql.compiler.View(viewName, ds.getSQL(viewName), ds.getAttsFromView(viewName), getObjectType(viewName)); }else if (((indices.size()) != 0) && ((indexTableNameList.size()) != 0)) { for (java.lang.String vn : indexTableNameList) { simsql.compiler.MultidimensionalSchemaIndices ids = new simsql.compiler.MultidimensionalSchemaIndices(vn); if (ids.areIndicesForThisTable(indices)) { view = new simsql.compiler.View(vn, ds.getSQL(vn), ds.getAttsFromView(vn), getObjectType(vn)); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6887/buggy-version/src.main.java.simsql.compiler.Catalog.java", "BodyUseAPI": ["java.lang.String.matches(java.lang.String)", "simsql.compiler.MultidimensionalTableSchema.getIndicesFromQualifiedName(java.lang.String)", "java.lang.String.length()", "java.lang.String.substring(int,int)", "simsql.compiler.MultidimensionalTableSchema.getTableNameFromQualifiedName(java.lang.String)"], "Fixed commit": "960684649883435fd455eb4128c58aea9da8da2e", "Url": "https://api.github.com/repos/dimitrijejankov/simsql", "Date": "2016-09-02T00:37:43Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (editor != null) editor.setFont(com.cburch.logisim.prefs.AppPreferences.getScaledFont(editor.getFont()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/500/buggy-version/src.com.cburch.logisim.gui.generic.AttrTable.java", "BodyUseAPI": ["com.cburch.logisim.prefs.AppPreferences.getScaledFont(java.awt.Font)", "java.awt.Component.getFont()", "java.awt.Component.setFont(com.cburch.logisim.prefs.AppPreferences.getScaledFont(editor.getFont()))"], "Fixed commit": "a9fa92cd64efa97fc28ae7c98d8948b730703bb2", "Url": "https://api.github.com/repos/reds-heig/logisim-evolution", "Date": "2017-03-08T22:51:42Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hp > 10) { hp = 10; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6710/buggy-version/core.src.com.hasbrouckproductions.rhasbrouck.games.World.java", "BodyUseAPI": [], "Fixed commit": "6bdeb37144f2048f4f749d0b358b58446300a6f2", "Url": "https://api.github.com/repos/hasbrour1/StarOmega", "Date": "2016-09-19T14:36:36Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.shiro.SecurityUtils.getSubject().getPrincipal()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(\"1\".equals(user.getUser().isStaffFlag()))) { inv.addModel(\"customerCode\", user.getUser().getCustomer().getCode()); inv.addModel(\"customerName\", user.getUser().getCustomer().getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8343/buggy-version/web.src.main.java.org.one.gene.web.order.OrderController.java", "BodyUseAPI": ["org.one.gene.domain.service.account.ShiroDbRealm.ShiroUser.getUser()", "user.getUser().getCustomer()", "org.one.gene.domain.service.account.ShiroDbRealm.ShiroUser.getUser()", "com.sinosoft.one.mvc.web.Invocation.addModel(java.lang.String,user.getUser().getCustomer().getName())", "com.sinosoft.one.mvc.web.Invocation.addModel(java.lang.String,user.getUser().getCustomer().getCode())", "user.getUser().getCustomer()", "user.getUser().getCustomer().getCode()", "user.getUser().getCustomer().getName()"], "Fixed commit": "6485f8c61f8a9dd4372cb903ae7e9db73e4ca408", "Url": "https://api.github.com/repos/sanctityQ/gene", "Date": "2015-05-10T12:33:53Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((timestamp) instanceof org.apache.flink.streaming.api.windowing.helper.SystemTimestamp) && ((otherTSW.timestamp) instanceof org.apache.flink.streaming.api.windowing.helper.SystemTimestamp)) { return true; }else { return ((startTime) == (otherTSW.startTime)) && ((timestamp.getClass()) == (otherTSW.timestamp.getClass())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/526/buggy-version/flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.helper.TimestampWrapper.java", "BodyUseAPI": ["org.apache.flink.streaming.api.windowing.helper.Timestamp<T>.getClass()"], "Fixed commit": "dfaff31352f73de9463c7999b0bd54898a944050", "Url": "https://api.github.com/repos/mbalassi/flink", "Date": "2015-04-26T09:29:44Z"},
{"Line": "=>745", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isReadResponseForErrors())) { killed = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/481/buggy-version/CodenameOne.src.com.codename1.io.ConnectionRequest.java", "BodyUseAPI": [], "Fixed commit": "5fd76ee0ba571642861f610fec01c5baaf87c0cf", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2015-12-06T14:25:31Z"},
{"Line": "=>5514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((con.getResponseCode()) >= 200) && ((con.getResponseCode()) < 300)) { is = con.getInputStream(); }else { is = con.getErrorStream(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/481/buggy-version/Ports.JavaSE.src.com.codename1.impl.javase.JavaSEPort.java", "BodyUseAPI": ["java.net.HttpURLConnection.getErrorStream()", "java.net.HttpURLConnection.getInputStream()"], "Fixed commit": "5fd76ee0ba571642861f610fec01c5baaf87c0cf", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2015-12-06T14:25:31Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.getBillByURL(bill)) == null) { super.addItem(bill); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3217/buggy-version/app.src.main.java.com.android.politicalforcast.mohammad.politicalforecast.BillList.java", "BodyUseAPI": ["com.android.politicalforcast.mohammad.politicalforecast.ItemList<com.android.politicalforcast.mohammad.politicalforecast.Bill>.addItem(com.android.politicalforcast.mohammad.politicalforecast.Bill)"], "Fixed commit": "7266b12e057c322af1a8442d798223d070622d85", "Url": "https://api.github.com/repos/alfaiyma/PoliticalMeter", "Date": "2017-07-27T02:19:55Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((game.getUser1().getId()) == (quickture.at.quickture.model.DataHolder.getCurrentUser().getId())) { if ((game.getScore1()) == null) l.getChildAt(0).setBackgroundColor(quickture.at.quickture.view.adapter.OpenGamesAdapter.ViewHolder.cardView.getResources().getColor(R.color.darkred2)); else l.getChildAt(0).setBackgroundColor(quickture.at.quickture.view.adapter.OpenGamesAdapter.ViewHolder.cardView.getResources().getColor(R.color.darkgreen2)); }else if ((game.getUser2().getId()) == (quickture.at.quickture.model.DataHolder.getCurrentUser().getId())) { if ((game.getScore2()) == null) l.getChildAt(0).setBackgroundColor(quickture.at.quickture.view.adapter.OpenGamesAdapter.ViewHolder.cardView.getResources().getColor(R.color.darkred2)); else l.getChildAt(0).setBackgroundColor(quickture.at.quickture.view.adapter.OpenGamesAdapter.ViewHolder.cardView.getResources().getColor(R.color.darkgreen2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1705/buggy-version/Android.Quickture.app.src.main.java.quickture.at.quickture.view.adapter.OpenGamesAdapter.java", "BodyUseAPI": ["quickture.at.quickture.model.Game.getUser2()", "quickture.at.quickture.model.Game.getScore1()", "game.getUser2().getId()", "quickture.at.quickture.model.Game.getScore2()"], "Fixed commit": "b06c6176b7347c063047534075d83c29d5c9afc1", "Url": "https://api.github.com/repos/rtobi/quickture", "Date": "2015-06-03T13:26:39Z"},
{"Line": "=>3766", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.bluetooth.hfp.HeadsetStateMachine.parseUnknownAt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (atCommand.startsWith(\"+CSQ\")) atResponseCodeNative(HeadsetHalConstants.AT_RESPONSE_ERROR, 4, getByteAddress(device)); else if (!(processVendorSpecificAt(atCommand))) atResponseCodeNative(HeadsetHalConstants.AT_RESPONSE_ERROR, 0, getByteAddress(device));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4535/buggy-version/src.com.android.bluetooth.hfp.HeadsetStateMachine.java", "BodyUseAPI": ["com.android.bluetooth.hfp.HeadsetStateMachine.processVendorSpecificAt(java.lang.String)"], "Fixed commit": "42357f3b918b1ea51e81c3d844023051de193155", "Url": "https://api.github.com/repos/Citrus-CAF/packages_apps_Bluetooth", "Date": "2017-02-02T17:07:00Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (linkTemp.endsWith(\"/\")) { linkTemp = linkTemp.substring(0, ((linkTemp.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1381/buggy-version/app.src.main.java.org.happymtb.unofficial.task.KoSObjectTask.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "fda8a978b4c6589a12b751fb2a79315e2713571a", "Url": "https://api.github.com/repos/adrianlandborn/happymtb", "Date": "2016-05-30T05:14:26Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(com.idega.util.StringUtil.isEmpty(groupIdentifier))) && (!(com.idega.util.StringUtil.isEmpty(externalId)))) { return getSingleResult(DocumentURITypeEntity.FIND_BY_EXTERNAL_ID, com.idega.block.pdf.data.DocumentURITypeEntity.class, new com.idega.core.persistence.Param(com.idega.block.pdf.data.DocumentURITypeEntity.externalIdProp, externalId), new com.idega.core.persistence.Param(com.idega.block.pdf.data.DocumentURIGroupEntity.identifierProp, groupIdentifier)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4465/buggy-version/src.java.com.idega.block.pdf.data.dao.impl.DocumentURITypeDAOImpl.java", "BodyUseAPI": ["com.idega.block.pdf.data.dao.impl.DocumentURITypeDAOImpl.getSingleResult(DocumentURITypeEntity.FIND_BY_EXTERNAL_ID,java.lang.Class,com.idega.core.persistence.Param,com.idega.core.persistence.Param)"], "Fixed commit": "7d399874e0b7b20e0b5208e6922ed53d1896ffdd", "Url": "https://api.github.com/repos/idega/com.idega.block.pdf", "Date": "2016-02-08T14:23:48Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.base.Optional<org.jboss.pressgang.belay.oauth2.authserver.data.model.TokenGrant>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((tokenGrant.getGrantUser().getPrimaryIdentity()) != null) && ((tokenGrant.getGrantUser().getPrimaryIdentity().getIdentifier()) != null)) { builder.setGrantUserPrimaryIdentifier(tokenGrant.getGrantUser().getPrimaryIdentity().getIdentifier()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5917/buggy-version/OAuth2.OAuth2AuthServerProvider.src.main.java.org.jboss.pressgang.belay.oauth2.authserver.data.dao.TokenGrantDao.java", "BodyUseAPI": ["TokenGrantInfo.TokenGrantInfoBuilder.setGrantUserPrimaryIdentifier(tokenGrant.getGrantUser().getPrimaryIdentity().getIdentifier())", "tokenGrant.getGrantUser().getPrimaryIdentity()", "tokenGrant.getGrantUser().getPrimaryIdentity().getIdentifier()", "org.jboss.pressgang.belay.oauth2.authserver.data.model.TokenGrant.getGrantUser()"], "Fixed commit": "3d59be719d723199c231a26bb3310867645cc529", "Url": "https://api.github.com/repos/pressgang-belay/belay", "Date": "2012-12-17T06:41:45Z"},
{"Line": "=>2396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (buildData.getBuildOptions().getInsertBugLinks()) { xmlPreProcessor.processInitialContentBugLink(buildData, initialContent, chapter, parentNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7165/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.builder.DocBookBuilder.java", "BodyUseAPI": ["org.jboss.pressgang.ccms.contentspec.builder.DocBookXMLPreProcessor.processInitialContentBugLink(org.jboss.pressgang.ccms.contentspec.builder.structures.BuildData,org.jboss.pressgang.ccms.contentspec.InitialContent,org.w3c.dom.Document,org.w3c.dom.Element)"], "Fixed commit": "c5de24e5bb15b835ed4091036b8a78018834ef9d", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSBuilder", "Date": "2014-02-26T00:54:47Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (strTmp.equals(end)) return stpNp + 2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5000/buggy-version/Word_Ladder.Solution.java", "BodyUseAPI": [], "Fixed commit": "11742b0a3222b2dace811a1e6ddc7fba52cbb999", "Url": "https://api.github.com/repos/CTH1989/LeetCode-Java", "Date": "2014-02-18T08:55:30Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (codeArray[charIndex].equals(\"--\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3997/buggy-version/src.assignment2.GameBoard.java", "BodyUseAPI": [], "Fixed commit": "41a7769ba7d960976c4a3580c15aec3121973d48", "Url": "https://api.github.com/repos/cpuguy96/EE422C", "Date": "2017-02-14T07:40:47Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (print) java.lang.System.out.println(results[0]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4305/buggy-version/src.aliceinnets.python.PythonScriptUtil.java", "BodyUseAPI": [], "Fixed commit": "7a9f8cf0107ec1bcb8808a02b240141f6c41f15b", "Url": "https://api.github.com/repos/aliceinnets/java-python", "Date": "2017-06-10T21:01:50Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ablgroup.daily2.dummy.ideas.IdeasRepository.getTodayTopic()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ideasContent != null) ideaList = ideasContent.list;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8829/buggy-version/app.src.main.java.ablgroup.daily2.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "85d8fcbf715f05b1e9fa43471033b05fe695c2fd", "Url": "https://api.github.com/repos/AnthonyGraindorge/Pause-cafe", "Date": "2016-11-21T20:22:01Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ideasRepository.getTodayTopic()) != null) databaseReference.child(\"users\").child(user.getUid()).child(\"produce\").child(ablgroup.daily2.dummy.repositories.RepositoryAbstract.getNormativeCurrentDate().replace(\"/\", \"-\")).child(\"ideas\").setValue(ideasRepository.getTodayTopic().toMap());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8829/buggy-version/app.src.main.java.layout.sub_page_produce.java", "BodyUseAPI": ["ablgroup.daily2.dummy.ideas.IdeasRepository.getTodayTopic()", "ideasRepository.getTodayTopic().toMap()", "databaseReference.child(\"users\").child(user.getUid()).child(\"produce\").child(ablgroup.daily2.dummy.repositories.RepositoryAbstract.getNormativeCurrentDate().replace(\"/\", \"-\")).child(\"ideas\").setValue(ideasRepository.getTodayTopic().toMap())"], "Fixed commit": "85d8fcbf715f05b1e9fa43471033b05fe695c2fd", "Url": "https://api.github.com/repos/AnthonyGraindorge/Pause-cafe", "Date": "2016-11-21T20:22:01Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((i == 0) && (j == 0)) java.lang.System.out.println((((((\"(\" + i) + \",\") + j) + \") = \") + (img.getRGB(i, j))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/9060/buggy-version/src.main.java.com.mbax2dh2.PinballMachine.PinballComponents.CollisionObjects.CollisionMap.java", "BodyUseAPI": [], "Fixed commit": "2e3ff8e71bb4fc0acdcf52711924aa2be6030245", "Url": "https://api.github.com/repos/Cennix/PinballsAndFractals", "Date": "2015-03-12T18:40:55Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((i == 240) && (j == 340)) java.lang.System.out.println((((((\"(\" + i) + \",\") + j) + \") = \") + (img.getRGB(i, j))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/9060/buggy-version/src.main.java.com.mbax2dh2.PinballMachine.PinballComponents.CollisionObjects.CollisionMap.java", "BodyUseAPI": [], "Fixed commit": "2e3ff8e71bb4fc0acdcf52711924aa2be6030245", "Url": "https://api.github.com/repos/Cennix/PinballsAndFractals", "Date": "2015-03-12T18:40:55Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (onDone != null) { onDone.run(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5831/buggy-version/src.io.flutter.sdk.FlutterCommand.java", "BodyUseAPI": ["java.lang.Runnable.run()"], "Fixed commit": "7bc8131a302236653dd89de9d018cd762e4772ae", "Url": "https://api.github.com/repos/jwren/flutter-intellij", "Date": "2017-06-29T13:44:21Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((validate()) != null) { stateListener.stateChanged(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5831/buggy-version/src.io.flutter.module.FlutterSmallIDEGeneratorPeer.java", "BodyUseAPI": [], "Fixed commit": "7bc8131a302236653dd89de9d018cd762e4772ae", "Url": "https://api.github.com/repos/jwren/flutter-intellij", "Date": "2017-06-29T13:44:21Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((day_x) == (cal.get(java.util.Calendar.getInstance().DAY_OF_MONTH))) { if ((hour_y) < (cal.get(java.util.Calendar.getInstance().HOUR_OF_DAY))) { android.widget.Toast.makeText(getApplicationContext(), \"Hora invalida.\", Toast.LENGTH_SHORT).show(); }else { if (((hour_y) == (cal.get(java.util.Calendar.getInstance().HOUR_OF_DAY))) && ((min_y) < (cal.get(java.util.Calendar.getInstance().MINUTE)))) { android.widget.Toast.makeText(getApplicationContext(), \"Minuto invalido.\", Toast.LENGTH_SHORT).show(); }else { if ((((!(mAsunto.getText().equals(\"\"))) && (!(mDestinatario.getText().equals(\"\")))) && (!(mMensaje.getText().equals(\"\")))) || ((filesStream.length) > 0)) { if ((filesStream.length) > 0) { MakeFirstHttpRequest(); }else { MakeHttpRequest(); } }else { android.widget.Toast.makeText(getApplicationContext(), \"Rellene los campos.\", Toast.LENGTH_SHORT).show(); } } } }else { if ((((!(mAsunto.getText().equals(\"\"))) && (!(mDestinatario.getText().equals(\"\")))) && (!(mMensaje.getText().equals(\"\")))) || ((filesStream.length) > 0)) { if ((filesStream.length) > 0) { MakeFirstHttpRequest(); }else { MakeHttpRequest(); } }else { android.widget.Toast.makeText(getApplicationContext(), \"Rellene los campos.\", Toast.LENGTH_SHORT).show(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1061/buggy-version/TextLater.app.src.main.java.com.gestion.textlater.textlater.EnviarMensajeActivity.java", "BodyUseAPI": ["java.util.Calendar.get(int)", "java.util.Calendar.get(int)", "java.util.Calendar.get(int)"], "Fixed commit": "ccababfbf946f2a528007253b1451183fd7e0646", "Url": "https://api.github.com/repos/RZzero/TextLater", "Date": "2017-04-15T01:38:11Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (scannerDevice != null) { for (org.demo.scannerservice.Scanner device : scannerDevice.getListDevices()) { scannerListModel.addElement(device); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2558/buggy-version/FileBrowserSuite.OptionsModule.src.org.demo.options.scanner.GeneralScannerOptionsPanel.java", "BodyUseAPI": ["org.demo.scannerservice.ScannerDevice.getListDevices()"], "Fixed commit": "a2c7eff4398ace418e65a32b4980ccc86ddde223", "Url": "https://api.github.com/repos/gokudomatic/Classeur", "Date": "2011-05-16T06:27:03Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((date.get(java.util.Calendar.YEAR)) < 1000) throw new java.lang.Exception();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6088/buggy-version/package1.GUICampingReg.java", "BodyUseAPI": [], "Fixed commit": "8e9012f485e1f0a73238010d730d38251431a1f2", "Url": "https://api.github.com/repos/CptSpaceToaster/CampingProject", "Date": "2013-10-30T13:48:27Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((java.lang.Integer.parseInt(input)) % 1000000) == 0) { java.lang.System.out.println(); continue; }else if (((tenThousand && thousand) && ((java.lang.Character.getNumericValue(input.charAt(((input.length()) - 4)))) != 0)) && ((java.lang.Character.getNumericValue(input.charAt(((input.length()) - 5)))) != 0)) { java.lang.System.out.print(\"-\"); }else if (((tenThousand && (!thousand)) && ((java.lang.Character.getNumericValue(input.charAt(((input.length()) - 4)))) != 0)) && ((java.lang.Character.getNumericValue(input.charAt(((input.length()) - 5)))) != 0)) { java.lang.System.out.print(\" thousand \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3561/buggy-version/src.NumWord.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.length()", "java.lang.Character.getNumericValue(char)", "java.lang.String.charAt(int)", "java.lang.String.length()", "java.lang.Character.getNumericValue(char)", "java.lang.String.charAt(int)", "java.lang.String.charAt(int)", "java.lang.String.length()", "java.lang.Character.getNumericValue(char)", "java.lang.String.charAt(int)", "java.lang.Character.getNumericValue(char)"], "Fixed commit": "cfc3a96545e9195196704adf4ad4414122cd6199", "Url": "https://api.github.com/repos/BertrandHustle/TIY-Number-to-Word", "Date": "2016-04-17T02:48:05Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getContext().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (lstSelectedProduct != null) { for (java.lang.Integer it : lstSelectedProduct) { productIds += (it.toString()) + \",\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2121/buggy-version/axelor-base.src.main.java.com.axelor.apps.base.web.ProductController.java", "BodyUseAPI": [], "Fixed commit": "ea17383cca062e844a67d9d16e74c047de5aa55e", "Url": "https://api.github.com/repos/axelor/axelor-business-suite", "Date": "2015-12-16T08:07:42Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (('0' <= c) && (c <= '9')) { if (!(org.mozilla.javascript.Context.getCurrentContext().hasFeature(Context.FEATURE_HTMLUNIT_PARSE_INT_RADIX_10))) { radix = 8; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7925/buggy-version/src.org.mozilla.javascript.NativeGlobal.java", "BodyUseAPI": [], "Fixed commit": "ffef82c9df2c4a7f78294ace1a9c8333a324aedf", "Url": "https://api.github.com/repos/HtmlUnit/htmlunit-rhino-fork", "Date": "2013-12-18T09:17:04Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((colNames.length) <= (org.molgenis.vcf.meta.VcfMeta.COL_FORMAT_IDX)) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5501/buggy-version/Genotype-IO.src.main.java.org.molgenis.vcf.meta.VcfMeta.java", "BodyUseAPI": [], "Fixed commit": "9368424fc095a47026220d77f525182c1408f3da", "Url": "https://api.github.com/repos/harmjanwestra/systemsgenetics", "Date": "2014-09-02T11:00:11Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((prefixes.size()) == 0) { return false; }else { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7922/buggy-version/src.main.java.nl.mpi.oai.harvester.Worker.java", "BodyUseAPI": [], "Fixed commit": "2d8f03d8274d83e635b1dfc32e164fbef1ad6eb7", "Url": "https://api.github.com/repos/clarin-eric/oai-harvest-manager", "Date": "2015-02-05T13:57:44Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((provider) != null) { provider.onDestroy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5315/buggy-version/android.src.main.java.com.marianhello.bgloc.LocationService.java", "BodyUseAPI": [], "Fixed commit": "48ec5966b0762f0afa4828218d879009fb256dc0", "Url": "https://api.github.com/repos/ronakkaria/cordova-plugin-background-geolocation", "Date": "2016-06-15T10:17:32Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (solveGrid()) { solveButton.setText(\"Clear\"); mSolved = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7084/buggy-version/sudokusolver.SudokuSolver.java", "BodyUseAPI": [], "Fixed commit": "8962744327315a13c8c834b85ea7c9eb3e8fd388", "Url": "https://api.github.com/repos/kjarosz/Sudoku-Solver", "Date": "2014-09-25T16:33:05Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parameter.getDetectingEnable()) && (org.apache.commons.lang.StringUtils.startsWithIgnoreCase(parameter.getDetectingSQL(), \"select\"))) { heartBeatErr.setMessage(\"invaliedHeartBeat\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1455/buggy-version/manager.web.src.main.java.com.alibaba.otter.manager.web.home.module.action.CanalAction.java", "BodyUseAPI": [], "Fixed commit": "fa35e9056c33193ebed9f11b404c97c58d1cb2f5", "Url": "https://api.github.com/repos/alibaba/otter", "Date": "2013-10-18T06:12:46Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parameter.getDetectingEnable()) && (org.apache.commons.lang.StringUtils.startsWithIgnoreCase(parameter.getDetectingSQL(), \"select\"))) { heartBeatErr.setMessage(\"invaliedHeartBeat\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1455/buggy-version/manager.web.src.main.java.com.alibaba.otter.manager.web.home.module.action.CanalAction.java", "BodyUseAPI": [], "Fixed commit": "fa35e9056c33193ebed9f11b404c97c58d1cb2f5", "Url": "https://api.github.com/repos/alibaba/otter", "Date": "2013-10-18T06:12:46Z"},
{"Line": "=>473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sourceProductFileSelector.getSelectedProduct()) != null) { oldIfileName = sourceProductFileSelector.getSelectedProduct().getFileLocation().getAbsolutePath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3945/buggy-version/seadas-processing.src.main.java.gov.nasa.gsfc.seadas.processing.processor.MultlevelProcessorForm.java", "BodyUseAPI": ["sourceProductFileSelector.getSelectedProduct().getFileLocation()", "gov.nasa.gsfc.seadas.processing.processor.SourceProductFileSelector.getSelectedProduct()", "sourceProductFileSelector.getSelectedProduct().getFileLocation().getAbsolutePath()"], "Fixed commit": "78871f8545d768a860adbe5d083eca4d4f50d572", "Url": "https://api.github.com/repos/seadas/seadas", "Date": "2013-09-17T19:46:03Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((outFile.getParentFile()) != null) outFile.getParentFile().mkdirs();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1762/buggy-version/s-ramp-shell.src.main.java.org.overlord.sramp.shell.commands.core.GetContentCommand.java", "BodyUseAPI": ["java.io.File.mkdirs()", "java.io.File.getParentFile()"], "Fixed commit": "d832353423817ce312745d271dc73a3cccae5a0f", "Url": "https://api.github.com/repos/KurtStam/s-ramp", "Date": "2013-07-23T01:36:12Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.overlord.sramp.atom.archive.expand.ZipToSrampArchiveContext.getJarEntry(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (switchyardXmlFile == null) { switchyardXmlFile = context.getJarEntry(\"WEB-INF/switchyard.xml\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1762/buggy-version/s-ramp-integration-switchyard.src.main.java.org.overlord.sramp.integration.switchyard.expand.SwitchYardArtifactFilter.java", "BodyUseAPI": [], "Fixed commit": "d832353423817ce312745d271dc73a3cccae5a0f", "Url": "https://api.github.com/repos/KurtStam/s-ramp", "Date": "2013-07-23T01:36:12Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (m_stopFlag) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4276/buggy-version/rhogen-wizard.src.rhogenwizard.AsyncStreamReader.java", "BodyUseAPI": [], "Fixed commit": "dedbbf250d0755e7842f11a153000bcb5674b7ee", "Url": "https://api.github.com/repos/rhomobile/rhostudio", "Date": "2012-04-09T23:09:00Z"},
{"Line": "=>1692", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((op.getTerm()) instanceof com.redhat.ceylon.compiler.typechecker.tree.Tree.NaturalLiteral) { com.sun.tools.javac.tree.JCTree.JCExpression lit = expressionGen().transform(op); lit = expressionGen().applyErasureAndBoxing(lit, op.getTypeModel(), false, BoxingStrategy.UNBOXED, parameter.getType()); appendStaticArgument(((com.redhat.ceylon.compiler.typechecker.tree.Tree.NaturalLiteral) (op.getTerm())), lit); }else { super.visit(op); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1840/buggy-version/src.com.redhat.ceylon.compiler.java.codegen.ClassTransformer.java", "BodyUseAPI": ["expressionGen().applyErasureAndBoxing(com.sun.tools.javac.tree.JCTree.JCExpression,op.getTypeModel(),boolean,BoxingStrategy.UNBOXED,parameter.getType())", "com.redhat.ceylon.compiler.typechecker.tree.Visitor.visit(Tree.NegativeOp)", "Tree.NegativeOp.getTerm()", "Tree.NegativeOp.getTypeModel()", "AnnotationConstructorVisitor.appendStaticArgument(((com.redhat.ceylon.compiler.typechecker.tree.Tree.NaturalLiteral) (op.getTerm())),com.sun.tools.javac.tree.JCTree.JCExpression)", "expressionGen().transform(Tree.NegativeOp)"], "Fixed commit": "00a9f796bb28d4f55e21cc0d49533bf7c9f3950a", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2013-06-25T10:56:30Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8538/buggy-version/src.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "b43f31659cbdfb5796e805725148960a400eaad5", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fragmentedChannel) == null) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4760/buggy-version/core.src.main.java.io.undertow.websockets.core.WebSocketChannel.java", "BodyUseAPI": [], "Fixed commit": "de1ac170bab50a3db4b65c305c41b83b6d4c92bb", "Url": "https://api.github.com/repos/spaletta/undertow", "Date": "2017-09-05T22:52:35Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((source) == null) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4760/buggy-version/core.src.main.java.io.undertow.protocols.ajp.AjpClientChannel.java", "BodyUseAPI": [], "Fixed commit": "de1ac170bab50a3db4b65c305c41b83b6d4c92bb", "Url": "https://api.github.com/repos/spaletta/undertow", "Date": "2017-09-05T22:52:35Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((klassen.size()) <= 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/711/buggy-version/src.main.java.de.ads.timer.webservice.Notification.MessageController.java", "BodyUseAPI": [], "Fixed commit": "fd109bf9806eaff13d257205a4521a7c51430919", "Url": "https://api.github.com/repos/adstimer/Webservice", "Date": "2015-12-04T09:49:48Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (string.equals(\"operation\")) { return new mc.compiler.OperationToken(location); }else if (string.equals(\"STOP\")) { return new mc.compiler.StopToken(location); }else if (string.equals(\"ERROR\")) { return new mc.compiler.ErrorToken(location); }else if (string.equals(\"const\")) { return new mc.compiler.ConstToken(location); }else if (string.equals(\"range\")) { return new mc.compiler.RangeToken(location); }else if (string.equals(\"set\")) { return new mc.compiler.SetToken(location); }else if (string.equals(\"if\")) { return new mc.compiler.IfToken(location); }else if (string.equals(\"then\")) { return new mc.compiler.ThenToken(location); }else if (string.equals(\"else\")) { return new mc.compiler.ElseToken(location); }else if (string.equals(\"when\")) { return new mc.compiler.WhenToken(location); }else if (string.equals(\"forall\")) { return new mc.compiler.ForAllToken(location); }else if (java.lang.Character.isUpperCase(string.charAt(0))) { return new mc.compiler.IdentifierToken(string, location); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7528/buggy-version/modelchecker.src.main.java.mc.compiler.Lexer.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.Character.isUpperCase(char)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.charAt(int)"], "Fixed commit": "ee246d8d9231f938090c11a4436577d4b2227825", "Url": "https://api.github.com/repos/DavidSheridan/Model-Checker", "Date": "2017-02-09T20:15:06Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(main.fileExists())) { main.write(driver, locale, items); driver.close(); locale = main.changeLocale(); profile.setPreference(\"intl.accept_languages\", locale); driver = new org.openqa.selenium.firefox.FirefoxDriver(profile); driver.get(baseUrl); items = main.getItems(driver); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8656/buggy-version/src.main.java", "BodyUseAPI": [], "Fixed commit": "fcc0f2e1c4bd8a957d5c6c4104acce973b636f39", "Url": "https://api.github.com/repos/EvaSokol/Bing", "Date": "2014-07-28T08:32:41Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (currentTopic == null) currentTopic = xStrings.getString(\"ChatMessagePanel.emptyTopic\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1683/buggy-version/src.com.thevoiceasia.phonebox.chat.ChatShortcutBar.java", "BodyUseAPI": [], "Fixed commit": "eb339ca2825f2e29d05c030c89d0f50695c7b51c", "Url": "https://api.github.com/repos/waynemerricks/asteriskphone", "Date": "2016-03-18T12:19:28Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.worldObj.getBlockId(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (bid == (Block.bedrock.blockID)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/429/buggy-version/src.org.yogpstop.qp.TileQuarry.java", "BodyUseAPI": [], "Fixed commit": "7239c7ec84e1845bc90969037b594b2e6c83bb9a", "Url": "https://api.github.com/repos/yogpstop/QuarryPlus", "Date": "2013-10-05T14:54:21Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.bam.darkhouseextreme.app.utilities.Utilities.room02) { fragment.isRoom(1, 2); }else { android.widget.Toast.makeText(getApplicationContext(), \"The wall seem to crumble.\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7494/buggy-version/app.src.main.java.com.bam.darkhouseextreme.app.activities.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "6ef76e96565904fed90606d87b7176ed9afccfd9", "Url": "https://api.github.com/repos/ChobiJava/DarkHouseExtreme", "Date": "2015-05-25T06:35:29Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Props.wsidDomain.equals(localName)) { param.wsidDomain = cleanContentAsString(null); }else if (Props.defaultAuthType.equals(localName)) { java.lang.String str = cleanContentAsString(null); if (str != null) { param.defaultAuthType = com.github.obase.webc.AuthType.valueOf(str); } }else if (Props.refererDomain.equals(localName)) { param.refererDomain = cleanContentAsString(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/928/buggy-version/obase-webc.src.main.java.com.github.obase.webc.config.WebcConfigParser.java", "BodyUseAPI": ["Props.refererDomain.equals(java.lang.String)", "Props.defaultAuthType.equals(java.lang.String)"], "Fixed commit": "1993abe42c48abba3e47a1df63f4045e930194f0", "Url": "https://api.github.com/repos/obase/java", "Date": "2017-08-30T10:18:59Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<com.creativemd.littletiles.common.utils.LittleTilePreview>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((preview.isCustomPreview()) && (!(preview.getTypeID().equals(\"\")))) nbt.setString(\"type\", preview.getTypeID());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8994/buggy-version/src.main.java.com.creativemd.littletiles.common.items.ItemBlockTiles.java", "BodyUseAPI": ["net.minecraft.nbt.NBTTagCompound.setString(java.lang.String,preview.getTypeID())", "com.creativemd.littletiles.common.utils.LittleTilePreview.getTypeID()"], "Fixed commit": "ac17e81857c685d71af83d488d85f1e8ebe56e3f", "Url": "https://api.github.com/repos/CreativeMD/LittleTiles", "Date": "2017-01-22T16:48:19Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.Integer>.toArray(java.lang.Integer[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((bpms.length) > 0) { max = bpms[0]; min = bpms[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/806/buggy-version/app.src.main.java.com.example.fernandopessina.hearttracker.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "59ba114d6e037d03197a96a647c1a3d71c087775", "Url": "https://api.github.com/repos/ferpessina/HeartTracker", "Date": "2016-11-16T18:14:22Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bpm < 600) && (bpm > 20)) saveMeasurement(bpm);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/806/buggy-version/app.src.main.java.com.example.fernandopessina.hearttracker.MeasureActivity.java", "BodyUseAPI": ["com.example.fernandopessina.hearttracker.MeasureActivity.saveMeasurement(float)"], "Fixed commit": "59ba114d6e037d03197a96a647c1a3d71c087775", "Url": "https://api.github.com/repos/ferpessina/HeartTracker", "Date": "2016-11-16T18:14:22Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fi.uta.fsd.metka.storage.collecting.JsonPathParser.findFirstTerminatingValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (title != null) { if ((title.getNodeType()) == (com.fasterxml.jackson.databind.node.JsonNodeType.OBJECT)) { com.fasterxml.jackson.databind.JsonNode def = title.get(\"default\"); if ((def != null) && ((def.getNodeType()) != (com.fasterxml.jackson.databind.node.JsonNodeType.NULL))) { com.fasterxml.jackson.databind.JsonNode langField = title.get(language.toValue()); if ((langField != null) && ((langField.getNodeType()) != (com.fasterxml.jackson.databind.node.JsonNodeType.NULL))) { titleStr = langField.textValue(); }else { titleStr = def.textValue(); } } }else { if (org.springframework.util.StringUtils.hasText(title.textValue())) { titleStr = title.textValue(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2106/buggy-version/metka.src.main.java.fi.uta.fsd.metka.storage.collecting.JsonPathParser.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.JsonNode.textValue()", "com.fasterxml.jackson.databind.JsonNode.get(language.toValue())", "com.fasterxml.jackson.databind.JsonNode.textValue()", "org.springframework.util.StringUtils.hasText(title.textValue())", "com.fasterxml.jackson.databind.JsonNode.getNodeType()", "com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)"], "Fixed commit": "666f35f67a6552fea086c840d877a445546f319c", "Url": "https://api.github.com/repos/Tietoarkisto/metka", "Date": "2014-10-17T08:08:16Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (kernel != null) kernel.disableCache();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/77/buggy-version/src.main.java.it.uniroma2.sag.kelp.data.representation.structure.similarity.VectorBasedStructureElementSimilarity.java", "BodyUseAPI": ["it.uniroma2.sag.kelp.kernel.Kernel.disableCache()"], "Fixed commit": "a7faf4a030a3adae2bda3cf54858b3c9c58438a2", "Url": "https://api.github.com/repos/SAG-KeLP-Legacy/discrete-representation", "Date": "2015-08-05T09:21:11Z"},
{"Line": "=>559", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position < 1) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7817/buggy-version/MetroBike.src.com.HuskySoft.metrobike.ui.SearchActivity.java", "BodyUseAPI": [], "Fixed commit": "08e0342f4a5855b9407645eac6e3e77e96cdb165", "Url": "https://api.github.com/repos/alaurenz/metrobike", "Date": "2013-05-06T03:05:06Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(buildcraftAdditions.config.ConfigurationHandler.shouldRegisterDusts)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1915/buggy-version/src.main.java.buildcraftAdditions.BuildcraftAdditions.java", "BodyUseAPI": [], "Fixed commit": "c82c5e21014b98ca7a89abb3cb4bbf1d0b895f2e", "Url": "https://api.github.com/repos/BCA-Team/Buildcraft-Additions", "Date": "2015-02-15T11:09:23Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getContentResolver().query(ScannedApplicationContract.CONTENT_URI,<nulltype>,<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (cursor != null) { cursor.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8659/buggy-version/app.src.main.java.org.satorysoft.cotton.di.mortar.ApplicationListPresenter.java", "BodyUseAPI": ["android.database.Cursor.close()"], "Fixed commit": "bed2c7e2b4a12e3abbb0495de1854eed824e081c", "Url": "https://api.github.com/repos/viacheslavokolitiy/cotton", "Date": "2015-05-12T12:34:11Z"},
{"Line": "=>2532", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { throw new java.lang.IllegalArgumentException(\"Filter value cannot be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2800/buggy-version/core.org.wso2.carbon.user.core.src.main.java.org.wso2.carbon.user.core.jdbc.JDBCUserStoreManager.java", "BodyUseAPI": [], "Fixed commit": "1bd91a29c37b117916793da4e043cfcc9a5aea79", "Url": "https://api.github.com/repos/wso2/carbon-kernel", "Date": "2015-05-29T03:22:02Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentFloor) > seedAtFloor) || (((currentFloor) == seedAtFloor) && ((currentFloor) > seedGotoFloor))) { setMoveStatus(com.aug.elevator.model.Elevator.MoveStatus.DOWN); setted = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/476/buggy-version/src.com.aug.elevator.model.Elevator.java", "BodyUseAPI": [], "Fixed commit": "defcf21b4f1749c7ced2dd128f0c867f791676c1", "Url": "https://api.github.com/repos/augustan/ElevatorSchedule", "Date": "2015-06-21T04:43:50Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (location.getWorld().equals(source.getWorld())) { distanceSquared = location.distanceSquared(source); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1694/buggy-version/src.main.java.com.elmakers.mine.bukkit.utility.Target.java", "BodyUseAPI": ["org.bukkit.Location.distanceSquared(org.bukkit.Location)"], "Fixed commit": "c918bc3d615f9b1e303e54b02edaaf0c0f9421c9", "Url": "https://api.github.com/repos/elBukkit/MagicLib", "Date": "2015-11-13T22:31:12Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dto.getIdOperatore()) != null) { it.govpay.orm.IdOperatore idOperatore = new it.govpay.orm.IdOperatore(); idOperatore.setId(dto.getIdOperatore()); vo.setIdOperatore(idOperatore); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/9103/buggy-version/govpay-orm.src.main.java.it.govpay.bd.model.converter.IncassoConverter.java", "BodyUseAPI": ["it.govpay.bd.model.Incasso.getIdOperatore()", "it.govpay.orm.IdOperatore.setId(dto.getIdOperatore())"], "Fixed commit": "c72b1694c72a9e8b6b9d3f553b53c1de6531beb7", "Url": "https://api.github.com/repos/link-it/GovPay", "Date": "2017-11-17T11:13:57Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["CAS.Equation.getSubEquation(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (sub.isType(CAS.INTEGER)) { if (((((CAS.EquationObjects.MathInteger) (sub.getRoot())).num.intValue()) == 0) || ((((CAS.EquationObjects.MathInteger) (sub.getRoot())).num.intValue()) == 1)) { return false; } if (foundConstant) { return false; } foundConstant = true; }else if (subOp == (CAS.EquationObjects.MathOperator.FRACTION)) { if (foundConstant) { return false; } foundConstant = true; }else if (!(((((subOp == (CAS.EquationObjects.MathOperator.ADD)) || (subOp == (CAS.EquationObjects.MathOperator.POWER))) || (subOp == (CAS.EquationObjects.MathOperator.FACTORIAL))) || (subOp == (CAS.EquationObjects.MathOperator.CUSTOM_FUNCTION))) || ((subOp.getSubType()) == (CAS.EquationObjects.MathOperatorSubtype.SYMBOL)))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/404/buggy-version/src.main.java.CAS.Identifier.java", "BodyUseAPI": ["((CAS.EquationObjects.MathInteger) (sub.getRoot())).num.intValue()", "CAS.Equation.getRoot()", "((CAS.EquationObjects.MathInteger) (sub.getRoot())).num.intValue()", "CAS.Equation.getRoot()"], "Fixed commit": "2d4b9c65978d33a0c167bdd41a96c5ab202992ec", "Url": "https://api.github.com/repos/JRoper18/cas", "Date": "2017-01-16T15:09:09Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (log.isDebugEnabled()) { log.debug(java.lang.String.format(\"Will be looking for tables xml at %s\", tablesClassPath)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6394/buggy-version/model.src.main.java.net.resthub.factory.XmlClasspathFactory.java", "BodyUseAPI": [], "Fixed commit": "c771000757122c980f909d8c1fdd924c5e96192d", "Url": "https://api.github.com/repos/valdasraps/resthub", "Date": "2015-05-05T12:05:59Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (serializedRecord == null) { return java.util.Collections.singletonList(new org.apache.kafka.clients.producer.ProducerRecord(topic, partition, timestamp, key, null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7246/buggy-version/src.main.java.com.linkedin.kafka.clients.largemessage.MessageSplitterImpl.java", "BodyUseAPI": [], "Fixed commit": "44f19cb8bbfde6a9776af26ac76dbd8906ce343d", "Url": "https://api.github.com/repos/linkedin/li-apache-kafka-clients", "Date": "2017-09-22T20:58:19Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof java.lang.Exception) { org.apache.cxf.transport.jms.util.PollingMessageListenerContainer.LOG.log(java.util.logging.Level.WARNING, \"Unexpected exception. Restarting session and consumer\", ((java.lang.Exception) (e))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2845/buggy-version/rt.transports.jms.src.main.java.org.apache.cxf.transport.jms.util.PollingMessageListenerContainer.java", "BodyUseAPI": [], "Fixed commit": "cae5b6fb8b2189bd57959c7ca5e7fb88c5c0eb34", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2017-03-24T16:36:48Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof java.lang.Exception) { org.apache.cxf.transport.jms.util.PollingMessageListenerContainer.LOG.log(java.util.logging.Level.WARNING, \"Exception while processing jms message in cxf. Rolling back\", ((java.lang.Exception) (e))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2845/buggy-version/rt.transports.jms.src.main.java.org.apache.cxf.transport.jms.util.PollingMessageListenerContainer.java", "BodyUseAPI": [], "Fixed commit": "cae5b6fb8b2189bd57959c7ca5e7fb88c5c0eb34", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2017-03-24T16:36:48Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((type.getSmallImage()) != null) return type.getSmallImage();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/9116/buggy-version/integrar-t-android.src.main.java.org.utn.proyecto.helpful.integrart.integrar_t_android.activities.calendar.Task.java", "BodyUseAPI": ["org.utn.proyecto.helpful.integrart.integrar_t_android.activities.calendar.TaskType.getSmallImage()"], "Fixed commit": "a3b091e2741da2c71a8b1caa6b69ed71c0f498f3", "Url": "https://api.github.com/repos/Proyecto-UTN-2012/Proyecto-UTN-2012", "Date": "2012-11-16T19:23:47Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((type.getPictogram()) != null) return type.getPictogram();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/9116/buggy-version/integrar-t-android.src.main.java.org.utn.proyecto.helpful.integrart.integrar_t_android.activities.calendar.Task.java", "BodyUseAPI": ["org.utn.proyecto.helpful.integrart.integrar_t_android.activities.calendar.TaskType.getPictogram()"], "Fixed commit": "a3b091e2741da2c71a8b1caa6b69ed71c0f498f3", "Url": "https://api.github.com/repos/Proyecto-UTN-2012/Proyecto-UTN-2012", "Date": "2012-11-16T19:23:47Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((type.getLargeImage()) != null) return type.getLargeImage();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/9116/buggy-version/integrar-t-android.src.main.java.org.utn.proyecto.helpful.integrart.integrar_t_android.activities.calendar.Task.java", "BodyUseAPI": ["org.utn.proyecto.helpful.integrart.integrar_t_android.activities.calendar.TaskType.getLargeImage()"], "Fixed commit": "a3b091e2741da2c71a8b1caa6b69ed71c0f498f3", "Url": "https://api.github.com/repos/Proyecto-UTN-2012/Proyecto-UTN-2012", "Date": "2012-11-16T19:23:47Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((type.getSmallImage()) != null) return type.getSmallImage();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/9116/buggy-version/integrar-t-android.src.main.java.org.utn.proyecto.helpful.integrart.integrar_t_android.activities.calendar.Task.java", "BodyUseAPI": ["org.utn.proyecto.helpful.integrart.integrar_t_android.activities.calendar.TaskType.getSmallImage()"], "Fixed commit": "a3b091e2741da2c71a8b1caa6b69ed71c0f498f3", "Url": "https://api.github.com/repos/Proyecto-UTN-2012/Proyecto-UTN-2012", "Date": "2012-11-16T19:23:47Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.delving.x3ml.engine.XPathInput.valueAt(org.w3c.dom.Node,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (key.isEmpty()) { gr.forth.Utils.printErrorMessages((((((\"ERROR FOUND: Empty value for \\\"\" + rangeExpression) + \"/\") + rangeKeyPath) + \"\\\"\\t The node from the input XML is: \") + ($(node).toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8203/buggy-version/src.main.java.eu.delving.x3ml.engine.XPathInput.java", "BodyUseAPI": [], "Fixed commit": "b055d031bded2875844091beec8f18b42cc8fd8f", "Url": "https://api.github.com/repos/isl/x3ml", "Date": "2015-12-11T13:21:08Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldName.equals(\"this$0\")) { return oldName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1990/buggy-version/compiler.backend.src.org.jetbrains.jet.codegen.inline.LambdaTransformer.java", "BodyUseAPI": [], "Fixed commit": "7fb9de2654511ce27d790b2fee577fa75d55b410", "Url": "https://api.github.com/repos/voddan/kotlin", "Date": "2014-03-09T07:19:15Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (paramMap == null) { return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5977/buggy-version/src.io.itit.itf.okhttp.PostBuilder.java", "BodyUseAPI": [], "Fixed commit": "753fc2f63e137bcab059432018b57c0f30990dd8", "Url": "https://api.github.com/repos/icecooly/FastHttpClient", "Date": "2016-09-22T17:21:17Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.modelmapper.internal.util.Primitives.isPrimitiveWrapper(sourceType))) sourceToDestination.put(source, destination);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1442/buggy-version/core.src.main.java.org.modelmapper.internal.MappingContextImpl.java", "BodyUseAPI": [], "Fixed commit": "6b00ea074962405e8990ce916709a5e3d457d8cc", "Url": "https://api.github.com/repos/jhalterman/modelmapper", "Date": "2014-04-20T19:06:18Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.ebelli.simpledrawing.Utilities.getDir().exists()) { for (java.io.File drawing : drawings) { mAdapterDrawings.add(drawing.getAbsolutePath()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/867/buggy-version/SimpleDrawing.app.src.main.java.com.ebelli.simpledrawing.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c5bc89a380b2019fb3bef2be4968a636421f68d3", "Url": "https://api.github.com/repos/ebelli/simple-drawing", "Date": "2015-09-17T15:44:51Z"},
{"Line": "=>3215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(java.lang.Character.isDigit(input.charAt(3)))) { return 3; }else if (!(java.lang.Character.isDigit(input.charAt(4)))) { return 4; }else if ((input.length()) < 8) { return 4; }else if (input.matches(\"^/\\\\*\\\\![0-9]{5}.*\")) { return 8; }else { return 3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6122/buggy-version/src.com.client9.libinjection.SQLParse.java", "BodyUseAPI": ["java.lang.Character.isDigit(char)", "java.lang.String.length()", "java.lang.String.matches(java.lang.String)", "java.lang.String.charAt(int)"], "Fixed commit": "5c6ae94710bee476d941bea4835e95d49efa9461", "Url": "https://api.github.com/repos/Kanatoko/libinjection-Java", "Date": "2013-04-19T13:22:13Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) > 0) { if ((args[0].equals(\"--debug\")) || (args[0].equals(\"-d\"))) { net.mua.jypsum.Main debugJypsum = new net.mua.jypsum.Main(\"DEBUG\"); debugJypsum.debug(); } }else { net.mua.jypsum.Main myJypsum = new net.mua.jypsum.Main(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8347/buggy-version/src.net.mua.jypsum.Main.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "99f554a7c5728cd51fc312ab0812ffc6beaf3ef0", "Url": "https://api.github.com/repos/nonconvergent/Jypsum", "Date": "2013-04-22T10:54:00Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dreamlink.game.kickball.MainActivity.bindService(android.content.Intent,android.content.ServiceConnection,Context.BIND_AUTO_CREATE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result) { android.util.Log.d(com.dreamlink.game.kickball.MainActivity.TAG, \"bind service success.\"); }else { android.widget.Toast.makeText(this, \"Bind communication service fail.\", Toast.LENGTH_LONG).show(); android.util.Log.e(com.dreamlink.game.kickball.MainActivity.TAG, \"bind service fail.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/9283/buggy-version/src.com.dreamlink.game.kickball.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "374a298f5d8c3ebaf545915abb33ae09d39266d6", "Url": "https://api.github.com/repos/liangPATHofei1100/KickBall", "Date": "2013-08-19T15:28:07Z"},
{"Line": "=>494", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((Global.MapTitle) == null) || (Global.MapTitle.equals(\"\"))) { mapTitleText.setText(\"\ufffdL\ufffda\ufffd\u03e6W\ufffd\ufffd\"); }else { mapTitleText.setText(Global.MapTitle); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4078/buggy-version/src.proj.Position.PositionActivity.java", "BodyUseAPI": [], "Fixed commit": "b35a7b1aa8be655088ae6305a4ea6f69a107ef51", "Url": "https://api.github.com/repos/danny602/posClient", "Date": "2011-10-19T20:00:18Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newSubmissions.size()) == 0) { nomore = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3013/buggy-version/app.src.main.java.me.ccrama.redditslide.Adapters.SubredditSearchPosts.java", "BodyUseAPI": [], "Fixed commit": "61938248bddad684a149622ab0b097d6c5d46af1", "Url": "https://api.github.com/repos/Alexendoo/Slide", "Date": "2016-02-16T01:24:20Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (be.artoria.belfortapp.app.SupportManager.haveNetworkConnection()) { be.artoria.belfortapp.activities.MainActivity.downloading = true; android.util.Log.i(PrefUtils.TAG, \"Started downloading in the background\"); new be.artoria.belfortapp.activities.MainActivity.DownloadDataTask().execute(PrefUtils.DATASET_URL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3282/buggy-version/app.src.main.java.be.artoria.belfortapp.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "26d212358261cee867355a8e11c11a1c02a6d496", "Url": "https://api.github.com/repos/oSoc14/Artoria", "Date": "2014-09-15T12:31:50Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["backend.codegen.MachineBasicBlock.getInstAt(int)", "tools.OutParamWrapper<java.lang.Integer>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isPhysicalRegister(mi.getOperand(ti).getReg())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4017/buggy-version/java.backend.codegen.TwoAddrInstructionPass.java", "BodyUseAPI": [], "Fixed commit": "f841bc3c4d00a9d4fd85b367161c6bfa9a30ddd9", "Url": "https://api.github.com/repos/JianpingZeng/xcc", "Date": "2017-11-21T12:31:59Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sb.length()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3406/buggy-version/src.main.java.caexbot.commands.chat.InsultCommand.java", "BodyUseAPI": [], "Fixed commit": "595e963f4f3ed35d7fe1669b9d7f19f9fbfe89da", "Url": "https://api.github.com/repos/Sgmaniac1255/caexbot", "Date": "2017-02-03T03:27:49Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["invocation.getMethod().getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((invocation.getMock()) instanceof com.google.gwt.dom.client.Element) && (methodName.equals(\"getTagName\"))) { java.lang.String className = invocation.getMock().getClass().getSimpleName(); return className.substring(0, className.indexOf(\"Element\")).toLowerCase(); }else { return super.answer(invocation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6120/buggy-version/gwtmockito.src.main.java.com.google.gwtmockito.impl.ReturnsCustomMocks.java", "BodyUseAPI": ["org.mockito.invocation.InvocationOnMock.getMock()", "invocation.getMock().getClass()", "org.mockito.internal.stubbing.defaultanswers.ReturnsMocks.answer(org.mockito.invocation.InvocationOnMock)", "invocation.getMock().getClass().getSimpleName()"], "Fixed commit": "815bffe90f89f60e594c909a474bb150b941ed19", "Url": "https://api.github.com/repos/google/gwtmockito", "Date": "2014-05-05T08:02:55Z"},
{"Line": "=>1313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (((itemInHand != null) && (itemInHand != (item))) && (itemInHand.equals(item))) { item = itemInHand; isInOffhand = true; return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6499/buggy-version/Magic.src.main.java.com.elmakers.mine.bukkit.wand.Wand.java", "BodyUseAPI": [], "Fixed commit": "7af8c8a1352a8e96fb5f04c458803290b436f17c", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2017-10-24T22:20:49Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getCookies()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null != cookies) { for (javax.servlet.http.Cookie c : cookies) { java.lang.String nm = c.getName(); m.put(nm, c); if ((!sessionResolved) && (org.rythmengine.utils.S.eq(cookieName, nm))) { resolveSession(c); sessionResolved = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7387/buggy-version/src.main.java.org.rythmengine.spring.web.SessionManager.java", "BodyUseAPI": [], "Fixed commit": "d3c43a65ebc14d094ea0d6883e401964d314c91e", "Url": "https://api.github.com/repos/greenlaw110/spring-rythm", "Date": "2013-12-26T11:51:41Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (java.nio.file.Files.exists(localDevFile)) { finalInputStream = java.nio.file.Files.newInputStream(localDevFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5163/buggy-version/src.main.java.io.jsync.logging.impl.LoggerFactory.java", "BodyUseAPI": [], "Fixed commit": "e6fefff86a44b21bab81d954fa0ab9c158d41ebd", "Url": "https://api.github.com/repos/BestellenSoftware/jsync.io", "Date": "2017-09-18T16:35:50Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["onl.deepspace.wgs.LoginActivity.findViewById(R.id.saveLogin)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (saveLoginBox != null) { java.lang.Boolean saveLogin = saveLoginBox.isChecked(); if (saveLogin) { onl.deepspace.wgs.Helper.setPw(getBaseContext(), ((android.widget.TextView) (findViewById(R.id.password))).getText().toString()); onl.deepspace.wgs.Helper.setEmail(getBaseContext(), ((android.widget.TextView) (findViewById(R.id.email))).getText().toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/9228/buggy-version/app.src.main.java.onl.deepspace.wgs.LoginActivity.java", "BodyUseAPI": ["android.widget.CheckBox.isChecked()"], "Fixed commit": "c60a025674f55dae09cef4789850b005f33984c6", "Url": "https://api.github.com/repos/DeepSpaceDev/WGS-App", "Date": "2016-02-24T21:17:53Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((movies.size()) >= 4) { for (int i = 0; i < 4; i++) { int index = randomGenerator.nextInt(movies.size()); if ((!(intList.contains(index))) && ((movies.get(index).Poster) != null)) { intList.add(index); randomMovies.add(movies.get(index)); }else { i--; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1664/buggy-version/app.src.main.java.com.example.stefan.movies.Fragments.Tabs.Fragment_A0_OverView.java", "BodyUseAPI": ["java.util.ArrayList<com.example.stefan.movies.Model.Movie>.size()", "java.util.ArrayList<com.example.stefan.movies.Model.Movie>.add(movies.get(index))", "java.util.Random.nextInt(movies.size())", "java.util.ArrayList<com.example.stefan.movies.Model.Movie>.get(int)", "java.util.ArrayList<com.example.stefan.movies.Model.Movie>.get(int)"], "Fixed commit": "74aeeb22e539cbed73d2fe89cd734980336ca831", "Url": "https://api.github.com/repos/Stjo83/Movies", "Date": "2016-07-16T14:03:05Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newID.startsWith(\"#\")) { newID = newID.replace(\"#\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8098/buggy-version/src.main.java.widoco.LODEParser.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "153c0e077a746a06cc32cbbf642b68df96d98428", "Url": "https://api.github.com/repos/dgarijo/Widoco", "Date": "2016-01-13T14:23:02Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (IndexFound == true) { ((display.SecondWindow) (parent)).TableGreyScale[(i - 1)] = false; ((display.SecondWindow) (parent)).TableColour[(i - 1)][0] = -1; ((display.SecondWindow) (parent)).TableColour[(i - 1)][1] = -1; ((display.SecondWindow) (parent)).TableColour[(i - 1)][2] = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1162/buggy-version/src.display.ColorPanel.java", "BodyUseAPI": [], "Fixed commit": "de8892625eaa7cc447cbc9f86eeeb4573ebc6628", "Url": "https://api.github.com/repos/grueld/UI_A1", "Date": "2012-10-19T05:06:36Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JPanel.getBackground()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (tmp != null) { RemoveColorInTables(tmp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1162/buggy-version/src.display.ColorPanel.java", "BodyUseAPI": ["display.ColorPanel.RemoveColorInTables(java.awt.Color)"], "Fixed commit": "de8892625eaa7cc447cbc9f86eeeb4573ebc6628", "Url": "https://api.github.com/repos/grueld/UI_A1", "Date": "2012-10-19T05:06:36Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((calendar.getTimeInMillis()) < (java.util.Calendar.getInstance().getTimeInMillis())) { calendar.add(java.util.Calendar.DATE, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8447/buggy-version/app.src.main.java.com.inasweaterpoorlyknit.blackflagsharkalarm.Overview.java", "BodyUseAPI": ["java.util.Calendar.add(int,int)"], "Fixed commit": "e4e40ebb60b19ab301eded13ac5752083af6293d", "Url": "https://api.github.com/repos/Lucodivo/BlackFlagSharkAlarm", "Date": "2016-02-25T03:57:26Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.isInstance(when)) { found.add(((T) (when))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1377/buggy-version/camel-core.src.main.java.org.apache.camel.model.ProcessorDefinitionHelper.java", "BodyUseAPI": [], "Fixed commit": "191a8479656ce09ab26f2235fd8a0bd77ffb6807", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-09-22T07:05:59Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (identity instanceof providers.BattleshipLoginUsernamePasswordAuthUser) { user = models.User.findByUsernamePasswordIdentity(((providers.BattleshipLoginUsernamePasswordAuthUser) (identity))); }else { user = models.User.findByAuthUserIdentity(identity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8093/buggy-version/app.service.BattleshipUserService.java", "BodyUseAPI": ["models.User.findByAuthUserIdentity(com.feth.play.module.pa.user.AuthUserIdentity)"], "Fixed commit": "34f7e5987ed32a05ad63cd639329fa1bb046a645", "Url": "https://api.github.com/repos/daniel-sandro/WTEC-WS15", "Date": "2015-11-22T14:39:53Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stack == null) { stack = net.minecraft.item.ItemStack.EMPTY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4874/buggy-version/src.main.java.com.lothrazar.cyclicmagic.block.tileentity.TileEntityBaseMachineInvo.java", "BodyUseAPI": [], "Fixed commit": "af5279109fce7b2b6ef7bdb637c1b8caa6e67d9b", "Url": "https://api.github.com/repos/PrinceOfAmber/Cyclic", "Date": "2017-02-23T03:19:36Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.longhaiyan.common.bean.UserSession.getUserId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (userId == selfId) { return cn.longhaiyan.common.bean.ResponseEntity.failure(Errors.MESSAGE_NONE_RECEIVE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7669/buggy-version/src.main.java.cn.longhaiyan.message.web.MessageUserChatController.java", "BodyUseAPI": [], "Fixed commit": "05eeefc92b439ae090642a6f4c5d32fa0164d21d", "Url": "https://api.github.com/repos/chenxubiao/bank", "Date": "2017-05-17T11:08:25Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((frame.getHeight()) != (frame.getPreferredSize().getHeight())) { frame.setSize(frame.getWidth(), ((int) (frame.getPreferredSize().getHeight()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3748/buggy-version/vuzetty-client.src.java.main.ru.alepar.vuzetty.client.gui.MonitorTorrent.java", "BodyUseAPI": ["javax.swing.JFrame.setSize(int,double)", "java.awt.Dimension.getHeight()", "javax.swing.JFrame.getWidth()", "javax.swing.JFrame.getPreferredSize()"], "Fixed commit": "d5bc1cc1521d41782c515357ee350e06334c90e3", "Url": "https://api.github.com/repos/alepar/vuzetty", "Date": "2012-05-22T15:23:55Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((note_entity.getDate()) instanceof java.sql.Date) { d = ((java.sql.Date) (note_entity.getDate())).toLocalDate(); }else { d = note_entity.getDate().toInstant().atZone(java.time.ZoneId.systemDefault()).toLocalDate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3620/buggy-version/database_mockup.src.animalkeeping.model.NotesFrom.java", "BodyUseAPI": ["T.getDate()", "((java.sql.Date) (note_entity.getDate())).toLocalDate()", "T.getDate()", "note_entity.getDate().toInstant().atZone(java.time.ZoneId)", "note_entity.getDate().toInstant()", "note_entity.getDate().toInstant().atZone(java.time.ZoneId.systemDefault()).toLocalDate()"], "Fixed commit": "48973aad621190ed818d765e8a84ab213ec25e68", "Url": "https://api.github.com/repos/jgrewe/animal_keeping", "Date": "2017-02-15T14:46:45Z"},
{"Line": "=>1068", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.jodah.expiringmap.ExpiringMap.EntryMap<K, V>.get(K)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (entry != null) { entry.expirationNanos.set(java.util.concurrent.TimeUnit.NANOSECONDS.convert(duration, timeUnit)); resetEntry(entry, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2793/buggy-version/src.main.java.net.jodah.expiringmap.ExpiringMap.java", "BodyUseAPI": ["net.jodah.expiringmap.ExpiringMap<K, V>.resetEntry(net.jodah.expiringmap.ExpiringMap.ExpiringEntry<K, V>,boolean)", "java.util.concurrent.atomic.AtomicLong.set(long)"], "Fixed commit": "f2285c4945898b1aa1475a9b86124f9175733491", "Url": "https://api.github.com/repos/jhalterman/expiringmap", "Date": "2016-05-13T17:16:18Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tcp.getActive())) { try { tcp.close(); } catch (java.lang.Exception e) { } java.lang.System.out.println(\"The other side disconnected\"); return new States.Disconnected(); }else if (input.startsWith(\":y\")) { tcp.send(new Messages.ClientAcceptMessage(5, Messages.Message.minSize, 0, \"\", new byte[0])); return new States.Chatting(); }else if (input.startsWith(\":n\")) { tcp.send(new Messages.DeclineConnectMessage(10, Messages.Message.minSize, 0, \"\", new byte[0])); try { tcp.close(); } catch (java.lang.Exception e) { } return new States.Disconnected(); }else if (input.startsWith(\":\")) { java.lang.System.out.println(\"Invalid command\"); return this; }else if (!(input.equals(\"\"))) { java.lang.System.out.println(\"You cannot chat in this state\"); return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1824/buggy-version/Chat.src.States.UserConfirmConnection.java", "BodyUseAPI": ["Communications.TCP.send(Messages.DeclineConnectMessage)", "Communications.TCP.close()", "Communications.TCP.close()", "Communications.TCP.send(Messages.ClientAcceptMessage)"], "Fixed commit": "317ce2c15ac02db3883299d41fc491e6d9656541", "Url": "https://api.github.com/repos/ragnarok089/CS544", "Date": "2013-06-07T20:16:37Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.text.DecimalFormat.format(float)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((min.length()) >= 4) { mm = min.substring(4, 8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2823/buggy-version/Android.SoniCity.src.com.jessescott.sonicity.PlayActivity.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "1ead96a21588a6e199c94f5714731e4ad7acb901", "Url": "https://api.github.com/repos/JesseScott/SoniCity", "Date": "2013-06-15T00:51:46Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.text.DecimalFormat.format(float)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((min.length()) >= 4) { mm = min.substring(2, 4); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2823/buggy-version/Android.SoniCity.src.com.jessescott.sonicity.PlayActivity.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "1ead96a21588a6e199c94f5714731e4ad7acb901", "Url": "https://api.github.com/repos/JesseScott/SoniCity", "Date": "2013-06-15T00:51:46Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(participants.get(0).getUsername().toLowerCase().equals(clientMessage.getSender().getUsername().toLowerCase()))) { participants.add(clientMessage.getSender()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2593/buggy-version/mobile.src.main.java.sketchagram.chalmers.com.model.User.java", "BodyUseAPI": ["java.util.List<sketchagram.chalmers.com.model.ADigitalPerson>.add(clientMessage.getSender())", "sketchagram.chalmers.com.model.ClientMessage.getSender()"], "Fixed commit": "24c9150bd4123114f5b4e419ca0c04d88462108e", "Url": "https://api.github.com/repos/frapperino/sketchagram", "Date": "2015-05-03T13:01:22Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { pub.devrel.easypermissions.EasyPermissions.requestPermissions(this, rationale, se.eelde.granter.GranterFragment.RC_PERMISSIONS, requestedPermissions); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7606/buggy-version/granter.src.main.java.se.eelde.granter.GranterFragment.java", "BodyUseAPI": [], "Fixed commit": "50db9ce95abe8ef95a9e922144c2e8727ed418c4", "Url": "https://api.github.com/repos/erikeelde/Granter", "Date": "2017-11-15T15:33:44Z"},
{"Line": "=>572", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mapAdvices) != null) { for (org.ihtsdo.otf.mapping.model.MapAdvice ma : this.mapAdvices) { if (!(me.getMapAdvices().contains(ma))) return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7133/buggy-version/jpa-model.src.main.java.org.ihtsdo.otf.mapping.jpa.MapEntryJpa.java", "BodyUseAPI": [], "Fixed commit": "9b22a7da85a90edc4e1ff0481b8b68e8b0cd9dc7", "Url": "https://api.github.com/repos/WestCoastInformatics/OTF-Mapping-Service", "Date": "2014-11-22T01:06:49Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, com.sun.codemodel.JFieldVar>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (fieldName.startsWith(\"_\")) { if (!(com.sun.codemodel.JJavaName.isJavaIdentifier(fieldName.substring(1)))) fieldName = fieldName.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2887/buggy-version/modules.activiti-cxf.src.main.java.org.activiti.engine.impl.webservice.CxfWSDLImporter.java", "BodyUseAPI": ["java.lang.String.substring(int)", "com.sun.codemodel.JJavaName.isJavaIdentifier(java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "6c49cbdd14a2486566ad09b71ab5c59064c11cd2", "Url": "https://api.github.com/repos/vasiledirla/Activiti", "Date": "2015-03-25T23:14:54Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(currentMotion.smartView.collapsed)) && (distance > 0)) { for (com.github.paperrose.dragscrollpager.DragScrollPager.OnContentScrollListener listener : scrollListeners) { listener.onScroll(distance); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5379/buggy-version/src.main.java.com.github.paperrose.dragscrollpager.DragScrollPager.java", "BodyUseAPI": ["com.github.paperrose.dragscrollpager.DragScrollPager.OnContentScrollListener.onScroll(float)"], "Fixed commit": "7c750dc7651eb513cec7585b858c61c4c797367e", "Url": "https://api.github.com/repos/paperrose/DragScrollPager", "Date": "2017-03-02T15:08:30Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((str == null) || ((str.length()) == 0)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2503/buggy-version/src.com.brilliantSolutions.StringtoInteger.java", "BodyUseAPI": [], "Fixed commit": "4ce3f675e8c79a08cc96edcc2d732d5e53dfed89", "Url": "https://api.github.com/repos/lyenliang/LeetCode-OJ", "Date": "2015-09-19T06:11:32Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((level) == 1) { addActor(fruitGenerator); addActor(poisonGenerator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5348/buggy-version/core.src.br.com.danielhabib.snake.screens.SnakeScreen.java", "BodyUseAPI": [], "Fixed commit": "1b7e8d11c9535a4dfa5d47c8b0e4dd2144a9a880", "Url": "https://api.github.com/repos/danielhvs/snake-libgdx-actors", "Date": "2016-03-21T13:42:45Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (combinedResult != null) { combinedResult.onCombineFinished(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5949/buggy-version/hazelcast.src.main.java.com.hazelcast.client.impl.protocol.task.map.DefaultMapAggregateMessageTask.java", "BodyUseAPI": ["com.hazelcast.map.impl.query.AggregationResult.onCombineFinished()"], "Fixed commit": "74878e64c7a14a24ccc89b2df65be7c7ed20f45a", "Url": "https://api.github.com/repos/tkountis/hazelcast", "Date": "2016-11-19T19:31:05Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playerChange) { checkMessage = grid.check(\"X\"); }else { checkMessage = grid.check(\"O\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6990/buggy-version/code-name-taran.src.com.spaghettisoft.component.connectthefour.ConnectTheFour.java", "BodyUseAPI": [], "Fixed commit": "fbb0b96f7446c41b284bd0037cd3442a20de0260", "Url": "https://api.github.com/repos/bozhidar-projects/git-introduction", "Date": "2016-06-07T12:54:18Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isEnded())) { playerChange = !(playerChange); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6990/buggy-version/code-name-taran.src.com.spaghettisoft.component.connectthefour.ConnectTheFour.java", "BodyUseAPI": [], "Fixed commit": "fbb0b96f7446c41b284bd0037cd3442a20de0260", "Url": "https://api.github.com/repos/bozhidar-projects/git-introduction", "Date": "2016-06-07T12:54:18Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (inputStream != null) { inputStream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/9157/buggy-version/src.main.java.edu.illinois.library.cantaloupe.processor.ImageIoProcessor.java", "BodyUseAPI": ["javax.imageio.stream.ImageInputStream.close()"], "Fixed commit": "f5c94a24971c8a0a7fff2533e831bc658037d924", "Url": "https://api.github.com/repos/medusa-project/cantaloupe", "Date": "2015-09-30T14:02:52Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isolateClassLoader) { projectClassLoader = new java.net.URLClassLoader(projectClasspathList.toArray(new java.net.URL[projectClasspathList.size()]), mavenClassLoader); }else { projectClassLoader = new java.net.URLClassLoader(projectClasspathList.toArray(new java.net.URL[projectClasspathList.size()]), pluginClassLoader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/160/buggy-version/src.main.java.org.mk300.maven.plugin.drools.PkgBuilderMojo.java", "BodyUseAPI": [], "Fixed commit": "6311053d2430273cb10c6c392f08f6148e643593", "Url": "https://api.github.com/repos/mkobayas/drools-pkg-maven-plugin", "Date": "2015-02-10T10:30:09Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((panelCount) == 0) { navigator.loadViews(preferences); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1988/buggy-version/bilingual-reader.src.cz.metaverse.android.bilingualreader.ReaderActivity.java", "BodyUseAPI": [], "Fixed commit": "45c9ab7a68d2162cd369aeede1e8641961035ec3", "Url": "https://api.github.com/repos/tomparys/bilingual-reader", "Date": "2015-04-21T19:55:00Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.isSelected()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value == true) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4453/buggy-version/src.net.sf.memoranda.ui.TaskPanel.java", "BodyUseAPI": [], "Fixed commit": "0feb3a8930f892e863e32b6ec63fefbf8de6d27b", "Url": "https://api.github.com/repos/ser316asu/SER316-Nuremberg", "Date": "2017-03-28T22:50:49Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.multiplier) <= 0) { throw new de.alaoli.games.minecraft.mods.yadm.data.DataException(\"KnockbackSetting 'multiplier' must be greater than 0.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1538/buggy-version/src.main.java.de.alaoli.games.minecraft.mods.yadm.data.settings.worldborder.KnockbackSetting.java", "BodyUseAPI": [], "Fixed commit": "15302def396c2416ba335bb1e8021698f1b4ca5d", "Url": "https://api.github.com/repos/DerOli82/yadm", "Date": "2016-12-01T16:00:00Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((valasz == 0) && ((root.getParentFile()) != null)) { root = root.getParentFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3258/buggy-version/Terminal.src.terminal.Terminal.java", "BodyUseAPI": ["java.io.File.getParentFile()"], "Fixed commit": "15db54df49889e7a4279ae8768f391d4931af64a", "Url": "https://api.github.com/repos/PJozeph/Java-SE-Practicing", "Date": "2017-03-12T07:54:08Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (HostNamespaces.SYNTHESIZED.equals(deployable.getNamespaceURI())) { broadcastSnapshot(Names.HOST_CONTRIBUTION, LogicalState.NEW); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5729/buggy-version/extension.federated.fabric3-federation-node.src.main.java.org.fabric3.federation.node.deploy.SnapshotDeployListener.java", "BodyUseAPI": [], "Fixed commit": "dd0c76ceb12a356ff948e8481589441bd2a8e49d", "Url": "https://api.github.com/repos/Fabric3/fabric3-core", "Date": "2013-11-08T00:30:21Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.unibe.ese.team1.controller.service.AdService.getAdById(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (ad == null) { return nBid; }else if ((bidHistoryDao.findTop1ByadIdOrderByBidDesc(adId)) == null) { return nBid < (ad.getStartOffer()) ? ad.getStartOffer() : nBid; }else { currentBid = bidHistoryDao.findTop1ByadIdOrderByBidDesc(adId).getBid(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3047/buggy-version/baseProject.src.main.java.ch.unibe.ese.team1.controller.service.BidHistoryService.java", "BodyUseAPI": ["ch.unibe.ese.team1.model.Ad.getStartOffer()", "ch.unibe.ese.team1.model.Ad.getStartOffer()"], "Fixed commit": "cf401c7adae26708daa956d35b1fef301f2badde", "Url": "https://api.github.com/repos/scg-unibe-ch/ese2016-team4", "Date": "2016-11-07T09:17:34Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((event.getValue()) == null) || (event.getValue().trim().equalsIgnoreCase(\"\"))) { mv.set(\"value\", null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3605/buggy-version/roda-ui.roda-wui.src.main.java.org.roda.wui.client.browse.FormUtilities.java", "BodyUseAPI": [], "Fixed commit": "bb8cd019583c7b06bdcc85289cb7d4cd0ce013f9", "Url": "https://api.github.com/repos/keeps/roda", "Date": "2016-09-09T14:43:32Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((inferredTypeMirror.getKind()) == (javax.lang.model.type.TypeKind.WILDCARD)) { while ((inferredTypeMirror.getKind()) == (javax.lang.model.type.TypeKind.WILDCARD)) { inferredTypeMirror = ((javax.lang.model.type.WildcardType) (inferredTypeMirror)).getExtendsBound(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8031/buggy-version/framework.src.org.checkerframework.framework.type.DefaultInferredTypesApplier.java", "BodyUseAPI": ["javax.lang.model.type.TypeMirror.getKind()"], "Fixed commit": "624dde7a7d62a2ed92c53ebb8e98077bac4f187d", "Url": "https://api.github.com/repos/typetools/checker-framework", "Date": "2017-10-11T18:15:26Z"},
{"Line": "=>1137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sourceRecord.launchedFromUid) == callingUid) { callingPackage = sourceRecord.launchedFromPackage; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/575/buggy-version/services.java.com.android.server.am.ActivityStackSupervisor.java", "BodyUseAPI": [], "Fixed commit": "a796168da0ea139fe7312678f5031cd96c50097c", "Url": "https://api.github.com/repos/zhangxin8105/android_frameworks_base", "Date": "2014-03-13T01:12:13Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.cli.Option.builder(\"c\").longOpt(\"commit\").desc(\"A commit SHAR1 or branch id. Defaults to HEAD\").hasArg().build()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (cmd.hasOption(commitOpt.getOpt())) { commit = cmd.getOptionValue(commitOpt.getOpt()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3072/buggy-version/core.tracability-driver.src.main.java.org.overturetool.tracability.driver.Main.java", "BodyUseAPI": ["org.apache.commons.cli.CommandLine.getOptionValue(commitOpt.getOpt())", "org.apache.commons.cli.Option.getOpt()"], "Fixed commit": "cb36c4d712ca823f358f14e32cd1cda8587ed782", "Url": "https://api.github.com/repos/overturetool/intocps-tracability-driver", "Date": "2017-01-30T13:12:24Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args == null) || ((args.length) == 0)) { player.openInventory(plugin.getMenu().createRestartGUI(player)); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3251/buggy-version/uSkyBlock-Core.src.main.java.us.talabrek.ultimateskyblock.command.island.RestartCommand.java", "BodyUseAPI": [], "Fixed commit": "bc02bd43f84dbd3582e6eec16e1ebda3fcfb5e7a", "Url": "https://api.github.com/repos/i9hdkill/uSkyBlock", "Date": "2016-03-13T21:48:51Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isHost) java.lang.System.out.println(\"Telling Client to stop\"); else java.lang.System.out.println(\"Telling Server to stop\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3886/buggy-version/src.pongreloaded.MultiplayerGame.java", "BodyUseAPI": [], "Fixed commit": "6196bf2d2a938766d4e7d602f4475eda93c2a33d", "Url": "https://api.github.com/repos/Mcat12/PongReloaded", "Date": "2014-04-05T19:05:13Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["EkIntegration.PomParser.getNode(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (plugins == null) { plugins = getNode(\"/project/build/pluginManagement/plugins\"); plugin_new_path = \"/project/build/pluginManagement/plugins\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3464/buggy-version/src.main.java.EkIntegration.PomParser.java", "BodyUseAPI": [], "Fixed commit": "5d9e40d50af9f219cbe5acdfc51bfc56d7d2b43d", "Url": "https://api.github.com/repos/jalatif/Ekstazi_POM_Parser", "Date": "2014-12-15T08:26:51Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (email.getScheduledDate().before(new java.util.Date())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4053/buggy-version/src.main.java.com.pratilipi.api.impl.email.EmailProcessApi.java", "BodyUseAPI": [], "Fixed commit": "0a78221648ec2c3a4f1a26d76332e27a54f2d459", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2017-02-07T05:24:25Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (minute < 10) { java.lang.String minuteString = \"0\" + (java.lang.Integer.toString(minute)); time.setText((((java.lang.Integer.toString(hourOfTheDay)) + \":\") + minuteString)); }else { time.setText((((java.lang.Integer.toString(hourOfTheDay)) + \":\") + (java.lang.Integer.toString(minute)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8626/buggy-version/app.src.main.java.com.mycompany.futuretext.InputActivity.java", "BodyUseAPI": ["java.lang.Integer.toString(int)", "java.lang.Integer.toString(int)", "android.widget.EditText.setText(java.lang.String)"], "Fixed commit": "851b0d0a631b9f11af1c89413faa8d98a739beda", "Url": "https://api.github.com/repos/taylordohmen/FutureText", "Date": "2015-07-14T16:04:21Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i != 0) { previousDate = dueDates.get((i - 1)).getDate(); previousDate.set(java.util.Calendar.HOUR_OF_DAY, 0); previousDate.set(java.util.Calendar.MINUTE, 0); previousDate.set(java.util.Calendar.SECOND, 0); previousDate.set(java.util.Calendar.MILLISECOND, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7243/buggy-version/app.src.main.java.com.sarmento.mitchell.gradesaver2.widgets.DueDatesWidgetViewsFactory.java", "BodyUseAPI": ["java.util.List<com.sarmento.mitchell.gradesaver2.model.DueDate>.get(int)", "dueDates.get((i - 1)).getDate()"], "Fixed commit": "e0754bb2584c8fa555e561f3534094896e51af62", "Url": "https://api.github.com/repos/MitchellSarmento/GradeBook", "Date": "2017-02-03T01:13:13Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Element.getElementsByTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(viewBookInfo.isEmpty())) { for (org.jsoup.nodes.Element d : viewBookInfo) { d.remove(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/9189/buggy-version/FixedIt.src.fixedIt.modelComponents.Registrar.java", "BodyUseAPI": [], "Fixed commit": "427441dc5c86f8a24d5e8baaf989a78d1c68b3e1", "Url": "https://api.github.com/repos/mrjones2014/FixedIt", "Date": "2016-04-05T00:23:07Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Paths.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(trustStoreFile.isAbsolute())) { java.nio.file.Path ddfHomePath = java.nio.file.Paths.get(java.lang.System.getProperty(\"ddf.home\")); trustStoreFile = java.nio.file.Paths.get(ddfHomePath.toString(), trustStoreFile.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1981/buggy-version/platform.security.certificate.security-certificate-keystoreeditor.src.main.java.org.codice.ddf.security.certificate.keystore.editor.KeystoreEditor.java", "BodyUseAPI": ["java.nio.file.Paths.get(java.lang.String,java.lang.String)", "java.nio.file.Path.toString()"], "Fixed commit": "5e7d3223adeca5d078a0d2a96f6d3ca14e3b017b", "Url": "https://api.github.com/repos/codice/ddf-ui", "Date": "2015-09-10T13:34:49Z"},
{"Line": "=>506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Paths.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(trustStoreFile.isAbsolute())) { java.nio.file.Path ddfHomePath = java.nio.file.Paths.get(java.lang.System.getProperty(\"ddf.home\")); trustStoreFile = java.nio.file.Paths.get(ddfHomePath.toString(), trustStoreFile.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1981/buggy-version/platform.security.certificate.security-certificate-keystoreeditor.src.main.java.org.codice.ddf.security.certificate.keystore.editor.KeystoreEditor.java", "BodyUseAPI": ["java.nio.file.Path.toString()", "java.nio.file.Paths.get(java.lang.String,java.lang.String)"], "Fixed commit": "5e7d3223adeca5d078a0d2a96f6d3ca14e3b017b", "Url": "https://api.github.com/repos/codice/ddf-ui", "Date": "2015-09-10T13:34:49Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Paths.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(keyStoreFile.isAbsolute())) { java.nio.file.Path ddfHomePath = java.nio.file.Paths.get(java.lang.System.getProperty(\"ddf.home\")); keyStoreFile = java.nio.file.Paths.get(ddfHomePath.toString(), keyStoreFile.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1981/buggy-version/platform.security.certificate.security-certificate-keystoreeditor.src.main.java.org.codice.ddf.security.certificate.keystore.editor.KeystoreEditor.java", "BodyUseAPI": ["java.nio.file.Path.toString()", "java.nio.file.Paths.get(java.lang.String,java.lang.String)"], "Fixed commit": "5e7d3223adeca5d078a0d2a96f6d3ca14e3b017b", "Url": "https://api.github.com/repos/codice/ddf-ui", "Date": "2015-09-10T13:34:49Z"},
{"Line": "=>494", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Paths.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(keyStoreFile.isAbsolute())) { java.nio.file.Path ddfHomePath = java.nio.file.Paths.get(java.lang.System.getProperty(\"ddf.home\")); keyStoreFile = java.nio.file.Paths.get(ddfHomePath.toString(), keyStoreFile.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1981/buggy-version/platform.security.certificate.security-certificate-keystoreeditor.src.main.java.org.codice.ddf.security.certificate.keystore.editor.KeystoreEditor.java", "BodyUseAPI": ["java.nio.file.Paths.get(java.lang.String,java.lang.String)", "java.nio.file.Path.toString()"], "Fixed commit": "5e7d3223adeca5d078a0d2a96f6d3ca14e3b017b", "Url": "https://api.github.com/repos/codice/ddf-ui", "Date": "2015-09-10T13:34:49Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.endsWith(rule, \"]\"))) { rule += \"]\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5445/buggy-version/src.main.java.com.jelly.eoss.security.FilterRuleFactory.java", "BodyUseAPI": [], "Fixed commit": "9fd8d5e076536115b8b36bfde4e3a951502b20c7", "Url": "https://api.github.com/repos/jelly-liu/EOSS", "Date": "2016-10-29T08:57:06Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang.StringUtils.split(java.lang.String,char)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((arr != null) && ((arr.length) == 2)) { resultFinding = arr[0]; resultImpression = arr[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3246/buggy-version/omod.src.main.java.org.openmrs.module.kenyaemr.fragment.controller.intake.EnterLabResultFragmentController.java", "BodyUseAPI": [], "Fixed commit": "6142bddc791bd2ee90ba1f5b14baacb70da6424e", "Url": "https://api.github.com/repos/hispindia/his-hiv-emr", "Date": "2016-02-10T19:07:52Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.MouseInfo.getPointerInfo()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (mousePointer != null) { java.awt.Point mouseLocation = mousePointer.getLocation(); robot.mouseMove(mouseLocation.x, mouseLocation.y); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6601/buggy-version/src.main.java.Plugin.java", "BodyUseAPI": ["java.awt.PointerInfo.getLocation()"], "Fixed commit": "d66e919577112fa59647021e1da7a2fd44d156a3", "Url": "https://api.github.com/repos/silentsoft/actlist-plugin-stay-awake", "Date": "2017-01-06T15:37:30Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTabbedPane.getSelectedComponent()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (ps == null) { javax.swing.JOptionPane.showMessageDialog(this, \"No configuration tab opened\", \"No tab\", javax.swing.JOptionPane.INFORMATION_MESSAGE); }else { ps.getProgressFrame().setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2073/buggy-version/View.src.main.java.hr.fer.zemris.ecf.lab.view.ECFLab.java", "BodyUseAPI": ["ps.getProgressFrame().setVisible(boolean)", "hr.fer.zemris.ecf.lab.view.layout.ParametersSelection.getProgressFrame()"], "Fixed commit": "b337e4ec104f8e8e9bc7323533077f32990d919e", "Url": "https://api.github.com/repos/domagojstankovic/ECF_Lab", "Date": "2015-06-05T16:14:00Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((manager.getUser().getGroup().getId().intValue()) == 4) { if (containsAny(requestURL, Constants.CC_ALLOWED_URLS)) { return true; }else { response.sendRedirect(Constants.HOME_GET_URL); return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6389/buggy-version/healthplease-webapp.src.main.java.com.rns.healthplease.web.controller.HPSecurityHandler.java", "BodyUseAPI": [], "Fixed commit": "89fda295fa00236abfe4e722665c4a7a1b9123a6", "Url": "https://api.github.com/repos/ajaxkulkarni/hp", "Date": "2016-10-13T13:01:03Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(response.response.isCommitted())) { response.write(template.render(context)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2540/buggy-version/src.bowser.handler.RouteHandler.java", "BodyUseAPI": ["bowser.Response.write(template.render(context))"], "Fixed commit": "851b2dbb34c94cc87d39fecbf744406fa07a6ee3", "Url": "https://api.github.com/repos/mirraj2/bowser", "Date": "2015-10-06T16:10:58Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(requiredArgs.containsKey(\"--accessToken\"))) { requiredArgs.put(\"--accessToken\", token); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/9290/buggy-version/net.acomputerdog.BlazeLoader.tweaklauncher.TweakLauncher.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "a457c2775040e63eb90e75cf6f84e4368555439d", "Url": "https://api.github.com/repos/warriordog/BlazeLoader", "Date": "2013-12-07T13:47:20Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tokenIndex != (-1)) && (tokenIndex < (args.size()))) { token = args.get((tokenIndex + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/9290/buggy-version/net.acomputerdog.BlazeLoader.tweaklauncher.TweakLauncher.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)"], "Fixed commit": "a457c2775040e63eb90e75cf6f84e4368555439d", "Url": "https://api.github.com/repos/warriordog/BlazeLoader", "Date": "2013-12-07T13:47:20Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((policy == null) || ((policy.getDefaultHeader()) == null)) || ((policy.getDefaultHeader().getText()) == null)) { }else { root.addChild(new edu.virginia.lib.findingaid.structure.Element(profile.getUnassignedType(), policy.getDefaultHeader().getText())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1838/buggy-version/src.main.java.edu.virginia.lib.findingaid.WordParser.java", "BodyUseAPI": ["org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy.getDefaultHeader()", "edu.virginia.lib.findingaid.structure.Element.addChild(edu.virginia.lib.findingaid.structure.Element)", "policy.getDefaultHeader().getText()"], "Fixed commit": "5196ad0ff54daa1f9de6040d716ddf567b4b6e04", "Url": "https://api.github.com/repos/uvalib/transmog", "Date": "2015-05-18T15:15:55Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((receivedHistory.size()) > (se.cgbystrom.netty.http.BandwidthMeterHandler.HISTORY_SIZE)) receivedHistory.removeFirst();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2053/buggy-version/src.main.java.se.cgbystrom.netty.http.BandwidthMeterHandler.java", "BodyUseAPI": ["java.util.LinkedList<java.lang.Long>.removeFirst()"], "Fixed commit": "fe47675e157b8dfdb4a2f22e1cfe5f8065d81d93", "Url": "https://api.github.com/repos/cgbystrom/netty-tools", "Date": "2011-05-13T17:12:05Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sentHistory.size()) > (se.cgbystrom.netty.http.BandwidthMeterHandler.HISTORY_SIZE)) sentHistory.removeFirst();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2053/buggy-version/src.main.java.se.cgbystrom.netty.http.BandwidthMeterHandler.java", "BodyUseAPI": ["java.util.LinkedList<java.lang.Long>.removeFirst()"], "Fixed commit": "fe47675e157b8dfdb4a2f22e1cfe5f8065d81d93", "Url": "https://api.github.com/repos/cgbystrom/netty-tools", "Date": "2011-05-13T17:12:05Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((unknownLetterNGramProbability) == null) { unknownLetterNGramProbability = java.math.BigDecimal.ONE.divide(java.math.BigDecimal.valueOf(letterMarkovModel.getRootNode().getTerminalInfo().getCount()), MathConstants.PREC_10_HALF_UP); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5550/buggy-version/src.main.java.com.ciphertool.engine.fitness.cipherkey.ProbabilisticFitnessEvaluator.java", "BodyUseAPI": [], "Fixed commit": "21f62ec9d0aa6c6514a77c9aff26e48a656de754", "Url": "https://api.github.com/repos/beldenge/DecipherEngine", "Date": "2017-02-01T05:59:15Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["s.getExamSession().getExams().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (exam.hasPeriodHardConstraint(EPeriodHardConstraint.EXAM_COINCIDENCE)) { return false; }else if (!(util.Solving.canHost(s, examId, target.getPeriod().getId(), s.getResult()))) { return false; }else if (!(util.Solving.getAvailablePeriod(s, examId, s.getResult()).contains(target.getPeriod().getId()))) { return false; }else if (!(util.Solving.findSuitable(s, examId, target.getPeriod().getId(), s.getResult()).contains(target.getRoom().getId()))) { return false; }else { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8533/buggy-version/src.solve.IteratedLocalSearchSolver.java", "BodyUseAPI": [], "Fixed commit": "27907bfdd6e0d33af94862c1871d341dfcfe293f", "Url": "https://api.github.com/repos/X3N0-Life-Form/Examination-Timetabling", "Date": "2013-05-21T09:13:45Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["struct.Solution.getResultForExam(int)", "s.getExamSession().getExams().get(int)", "s.getExamSession().getExams().get(int)", "struct.Solution.getResultForExam(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((targetClone.getPeriod().getId()) != (originClone.getPeriod().getId())) && ((e1.hasPeriodHardConstraint(EPeriodHardConstraint.EXAM_COINCIDENCE)) || (e2.hasPeriodHardConstraint(EPeriodHardConstraint.EXAM_COINCIDENCE)))) { return false; }else if (((e1.getRoomHardConstraint()) != null) || ((e2.getRoomHardConstraint()) != null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8533/buggy-version/src.util.Moving.java", "BodyUseAPI": ["struct.Exam.getRoomHardConstraint()", "struct.Exam.getRoomHardConstraint()"], "Fixed commit": "27907bfdd6e0d33af94862c1871d341dfcfe293f", "Url": "https://api.github.com/repos/X3N0-Life-Form/Examination-Timetabling", "Date": "2013-05-21T09:13:45Z"},
{"Line": "=>437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.drools.mas.helpers.AsyncDroolsAgentService.getResponses(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (incomingAnswers != null) { answers.addAll(incomingAnswers); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8528/buggy-version/drools-mas-generic-client.src.main.java.org.drools.mas.helpers.DialogueHelper.java", "BodyUseAPI": ["java.util.List<org.drools.mas.ACLMessage>.addAll(java.util.List<org.drools.mas.ACLMessage>)"], "Fixed commit": "7e8c5069ca2ed2b42dfafb28434086d71956604d", "Url": "https://api.github.com/repos/SocraticGrid/drools-mas", "Date": "2014-01-20T19:14:40Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(java.nio.file.Files.exists(this.log))) { java.nio.file.Files.createFile(this.log); }else { if ((!(java.nio.file.Files.isRegularFile(this.log))) || (!(java.nio.file.Files.isWritable(this.log)))) { throw new java.io.IOException(((\"Cannot write to file \\\"\" + (log.toString())) + \"\\\"\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6572/buggy-version/src.main.java.by.iddqd.passcracker.cli.Logger.java", "BodyUseAPI": ["java.nio.file.Files.createFile(java.nio.file.Path)", "java.nio.file.Files.isWritable(java.nio.file.Path)", "java.nio.file.Files.isRegularFile(java.nio.file.Path)"], "Fixed commit": "a465a425f810218142da8b014ea830cd86110949", "Url": "https://api.github.com/repos/iddqdby/PassCracker", "Date": "2014-12-23T11:57:41Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPrevButton) != null) { mPrevButton.setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { mCurrentIndex = (((mCurrentIndex) + (mQuestionBank.length)) - 1) % (mQuestionBank.length); updateQuestion(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7467/buggy-version/app.src.main.java.com.example.ben.geoquiz.QuizActivity.java", "BodyUseAPI": [], "Fixed commit": "7ace8268a1f9f01da70f728bfb81cb838fdefa77", "Url": "https://api.github.com/repos/BenWng/GeoQuiz", "Date": "2016-10-10T16:22:17Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (commandMatcher.find()) { this.command = jp.meganetaaan.deviceconnect.plugin.sjcam.sjcam.SjcamDevice.Command.getCommand(java.lang.Integer.parseInt(commandMatcher.group(1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/581/buggy-version/plugin.src.main.java.jp.meganetaaan.deviceconnect.plugin.sjcam.sjcam.SjcamDevice.java", "BodyUseAPI": [], "Fixed commit": "df14831639b6c652ff3a7daaef33d77c9b442372", "Url": "https://api.github.com/repos/meganetaaan/deviceconnect-plugin-sjcam", "Date": "2017-12-17T15:03:31Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (regexMatcher.find()) { this.status = java.lang.Integer.parseInt(regexMatcher.group(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/581/buggy-version/plugin.src.main.java.jp.meganetaaan.deviceconnect.plugin.sjcam.sjcam.SjcamDevice.java", "BodyUseAPI": [], "Fixed commit": "df14831639b6c652ff3a7daaef33d77c9b442372", "Url": "https://api.github.com/repos/meganetaaan/deviceconnect-plugin-sjcam", "Date": "2017-12-17T15:03:31Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((application.JMeterHandler.tempDirectory) == null) { application.JMeterHandler.tempDirectory = (tempPropsFile.getParent()) + \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7152/buggy-version/src.main.java.application.JMeterHandler.java", "BodyUseAPI": [], "Fixed commit": "48f46ad5fa9703896b2983e7077812bb2854ed12", "Url": "https://api.github.com/repos/SonOfLysander/jmeter-csv-parser", "Date": "2014-03-26T21:32:07Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(isEndOfPage(row))) { row.removeTopBorders(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5637/buggy-version/src.main.java.be.quodlibet.boxable.Table.java", "BodyUseAPI": ["be.quodlibet.boxable.Row<T>.removeTopBorders()"], "Fixed commit": "55594672db49e57271f2d56ed07df2c6580a8f9f", "Url": "https://api.github.com/repos/dhorions/boxable", "Date": "2016-04-15T05:09:24Z"},
{"Line": "=>466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (obj instanceof org.mozilla.javascript.ScriptableObject) { stmt.setString(index, obj.toString()); }else if (obj instanceof org.jaggeryjs.hostobjects.stream.StreamHostObject) { org.jaggeryjs.hostobjects.stream.StreamHostObject stream = ((org.jaggeryjs.hostobjects.stream.StreamHostObject) (obj)); stmt.setBinaryStream(index, stream.getStream()); }else { stmt.setString(index, org.jaggeryjs.scriptengine.util.HostObjectUtil.serializeObject(obj)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4845/buggy-version/components.hostobjects.org.jaggeryjs.hostobjects.db.src.main.java.org.jaggeryjs.hostobjects.db.DatabaseHostObject.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.sql.PreparedStatement.setString(int,java.lang.String)", "java.sql.PreparedStatement.setString(int,org.jaggeryjs.scriptengine.util.HostObjectUtil.serializeObject(obj))", "org.jaggeryjs.scriptengine.util.HostObjectUtil.serializeObject(java.lang.Object)"], "Fixed commit": "5c9d777b8f38bdc40b15bb11b379c1439ac5f0cb", "Url": "https://api.github.com/repos/dulichan/jaggery", "Date": "2013-11-05T11:08:12Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (argument.isReference()) { local.setReference(true); statement.getUnstableLocal().add(argument.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3080/buggy-version/src.ru.regenix.jphp.compiler.jvm.stetament.MethodStmtCompiler.java", "BodyUseAPI": ["ru.regenix.jphp.tokenizer.token.stmt.ArgumentStmtToken.getName()", "statement.getUnstableLocal().add(argument.getName())"], "Fixed commit": "9ebeed09bd43f17d06ed8c72dffa337e799af2b6", "Url": "https://api.github.com/repos/dim-s/jvm-php", "Date": "2013-12-11T10:08:53Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resultObj.getInt(\"status\")) == 210) { java.lang.System.out.println(\"\u6ca1\u6709\u4fe1\u606f\"); pw.println(\"\u6ca1\u6709\u4fe1\u606f\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3751/buggy-version/src.main.java.verify_service.credit_check.java", "BodyUseAPI": [], "Fixed commit": "a6899d0c9b8047fc7d07c6091b3aa3c2bb3e94cc", "Url": "https://api.github.com/repos/fanfannnmn/aliyun-id-verify", "Date": "2017-11-03T03:37:14Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gsingh.learnkirtan.shabad.ShabadNotes.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((note.getLength()) == (gsingh.learnkirtan.note.Note.Length.LONG)) { table.setValueAt(note.getNoteText(), i, j); if (j == 15) { j = 0; i++; }else { j++; } table.setValueAt(\"-\", i, j); }else if ((note.getLength()) == (gsingh.learnkirtan.note.Note.Length.HALF)) { gsingh.learnkirtan.note.Note note2 = notes.get((++index)); table.setValueAt((((note.getNoteText()) + \"-\") + (note2.getNoteText())), i, j); }else { table.setValueAt(note.getNoteText(), i, j); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7537/buggy-version/src.gsingh.learnkirtan.ui.shabadeditor.tableeditor.TableShabadEditor.java", "BodyUseAPI": ["gsingh.learnkirtan.ui.shabadeditor.tableeditor.ShabadTable.setValueAt(note.getNoteText(),int,int)", "gsingh.learnkirtan.ui.shabadeditor.tableeditor.ShabadTable.setValueAt((((note.getNoteText()) + \"-\") + (note2.getNoteText())),int,int)", "gsingh.learnkirtan.ui.shabadeditor.tableeditor.ShabadTable.setValueAt(note.getNoteText(),int,int)", "gsingh.learnkirtan.note.Note.getNoteText()", "gsingh.learnkirtan.note.Note.getNoteText()", "gsingh.learnkirtan.note.Note.getLength()", "gsingh.learnkirtan.note.Note.getNoteText()"], "Fixed commit": "8da3d1194bf5729ba3dba6aa15d7917dd2993ce4", "Url": "https://api.github.com/repos/gsingh93/Learn-Kirtan", "Date": "2013-03-21T23:05:02Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isConnected) { android.util.Log.i(\"NETWORK CONNECTION\", com.lpuente.pack_Lib.WebData.getConnectType(_context)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1196/buggy-version/Java_1.Java1_w3.src.com.lpuente.java1_w3.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "350c477ec56fdefc2899466783debf2e84c044e7", "Url": "https://api.github.com/repos/kenshiryu7/mdv-projects", "Date": "2012-11-06T23:51:07Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getInnerTopic()) != null) { topicList.add(getInnerTopic()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2239/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.Process.java", "BodyUseAPI": [], "Fixed commit": "05d36b0802f56bf7634965cb1c7e8bc77f1e14df", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSContentSpec", "Date": "2013-09-04T02:54:46Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (newValue == null) { content += (\" <b>REMOVED</b><i> \" + (oldValue.getUsername())) + \"</i><br />\"; }else { content += (((\" <b>FROM</b><i> \" + (oldValue.getUsername())) + \" </i><b>TO</b><i> \") + (newValue.getUsername())) + \"</i><br />\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1930/buggy-version/DefectTracker.src.edu.wpi.cs.wpisuitetng.modules.defecttracker.defect.DefectChangesetPanel.java", "BodyUseAPI": [], "Fixed commit": "41ed46be12720a5c2d9ce0e65ac5771b8446c36c", "Url": "https://api.github.com/repos/fracture91/wpi-suite-tng", "Date": "2013-01-23T02:03:08Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key == (processing.core.PConstants.RETURN)) key = processing.core.PConstants.ENTER;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4300/buggy-version/src.net.kopeph.ld31.InputHandler.java", "BodyUseAPI": [], "Fixed commit": "39e383e1d82542110ca7350b7f15fa00d338998e", "Url": "https://api.github.com/repos/hazmatsuitor/Blockade-Runner", "Date": "2015-03-09T00:02:03Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((events) == null) { events = new java.util.LinkedHashMap<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7344/buggy-version/ticket-system-common.src.rmi.common.User.java", "BodyUseAPI": [], "Fixed commit": "49bf7b12379282e2da73a99a7680560eb5260b61", "Url": "https://api.github.com/repos/Olchawa/Ticket-system-for-football-matches", "Date": "2017-08-28T17:14:11Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userRole == null) { return \"redirect:/login\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/119/buggy-version/src.main.java.by.gstu.interviewstreet.web.controller.IndexController.java", "BodyUseAPI": [], "Fixed commit": "ec152ee6cc2d014cd06acaa30d74f569e45b4186", "Url": "https://api.github.com/repos/gorych/Interview-Street", "Date": "2016-06-20T11:56:20Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (text == \"\") { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7352/buggy-version/src.main.java.String_Calculator.Calculator.java", "BodyUseAPI": [], "Fixed commit": "297b37259df96428daa77bba6a90106687051502", "Url": "https://api.github.com/repos/hutton85is/String_Calculator", "Date": "2016-10-13T20:21:16Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4320/buggy-version/src.snc.lsr.util.StackEx.java", "BodyUseAPI": [], "Fixed commit": "1b98f436318adfe2c4890d10a53dce66e5d1d0e1", "Url": "https://api.github.com/repos/nyx2014/MyCalculator", "Date": "2015-10-30T14:52:31Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (task.taskMetrics.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3655/buggy-version/src.info.App.java", "BodyUseAPI": [], "Fixed commit": "c49379cbf507f4fea3f497105d9c22ecf87f9a32", "Url": "https://api.github.com/repos/EddiePi/tracing-server", "Date": "2017-04-01T18:12:28Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((names) != null) { names.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3016/buggy-version/app.src.main.java.com.oliver.bathurst.individualproject.BeaconActivity.java", "BodyUseAPI": [], "Fixed commit": "da98ca0596b9b78fb665be524eda3ab7359fa8fc", "Url": "https://api.github.com/repos/OliverBathurst/Individual-Project", "Date": "2017-10-16T14:11:10Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((names) != null) { devices.setAdapter(new android.widget.ArrayAdapter(this, R.layout.list_view, R.id.listviewAdapt, names)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3016/buggy-version/app.src.main.java.com.oliver.bathurst.individualproject.BeaconActivity.java", "BodyUseAPI": [], "Fixed commit": "da98ca0596b9b78fb665be524eda3ab7359fa8fc", "Url": "https://api.github.com/repos/OliverBathurst/Individual-Project", "Date": "2017-10-16T14:11:10Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(use64Bit)) { for (int i = 0; i < (markers.length); i++) { markers[i] = (markers[i]) & 4294967295L; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3089/buggy-version/components.formats-gpl.src.loci.formats.in.NDPIReader.java", "BodyUseAPI": [], "Fixed commit": "720f357bdcb82b4cc49e8a47ad345d9613d7b2f7", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-05-22T19:36:34Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openlmis.core.LMISApp.getContext()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (errorMessage.equals(context.getString(R.string.hint_network_error))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3959/buggy-version/app.src.main.java.org.openlmis.core.network.SyncErrorsMap.java", "BodyUseAPI": [], "Fixed commit": "5d710fdd314a158fe866215b1d7f0fd537cacdc0", "Url": "https://api.github.com/repos/SIGLUS/lmis-moz-mobile", "Date": "2016-02-26T07:53:52Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(Common.KEYWORD)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(keyword)) { keyword = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6444/buggy-version/src.main.java.org.b3log.solo.processor.SearchProcessor.java", "BodyUseAPI": [], "Fixed commit": "d056a1e0d8abcf527880f0c0208042eddd3ff6ec", "Url": "https://api.github.com/repos/b3log/solo", "Date": "2017-10-11T01:12:32Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cleanup) cleanupBatch();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1770/buggy-version/src.main.java.org.n3r.eql.impl.EqlBatch.java", "BodyUseAPI": [], "Fixed commit": "7996a2a41a49c71d1920ad279ac4d2e82605d432", "Url": "https://api.github.com/repos/bingoohuang/eql", "Date": "2013-11-01T09:53:08Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) displayHearings();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3810/buggy-version/src.com.sunlightlabs.android.congress.fragments.HearingListFragment.java", "BodyUseAPI": [], "Fixed commit": "15aa61c83e2c5ce186913d8127f202323b88c72f", "Url": "https://api.github.com/repos/sunlightlabs/congress-android", "Date": "2013-03-15T17:37:52Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controller.Move.getPiece()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((piece.getType()) == (PieceType.PAWN)) { ((pieces.Pawn) (piece)).setMoved(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2935/buggy-version/src.controller.Board.java", "BodyUseAPI": [], "Fixed commit": "528c79ef1310c75190af4c4d5fbf9522657987ec", "Url": "https://api.github.com/repos/CommonGuy/SimpleChess", "Date": "2014-09-05T12:10:22Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<? extends I>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((this.getSafeClass()) != null) && (!(this.getSafeClass().isAssignableFrom(next.getClass())))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7730/buggy-version/core.src.main.java.xdi2.core.util.iterators.CastingIterator.java", "BodyUseAPI": [], "Fixed commit": "98d64ac78d0cb2dddff2a725507f0993256bdccb", "Url": "https://api.github.com/repos/peacekeeper/xdi2", "Date": "2013-04-11T16:07:23Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasStarted()) throw new java.lang.IllegalStateException(\"addSpawn(...) cannot be called after the Wave has been started\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3982/buggy-version/TowerDefense.src.com.group23.towerdefense.spawn.Wave.java", "BodyUseAPI": [], "Fixed commit": "6ec8c1adb89ca4e8ba123362ad22febdecee58b8", "Url": "https://api.github.com/repos/siketh/COP4331_Project", "Date": "2014-04-04T17:11:02Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.mage.plugins.card.dl.sources.MythicspoilerComSource.cardNameAliasesStart.containsKey(cardSet)) { aliasesStart.addAll(org.mage.plugins.card.dl.sources.MythicspoilerComSource.cardNameAliasesStart.get(cardSet)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3321/buggy-version/Mage.Client.src.main.java.org.mage.plugins.card.dl.sources.MythicspoilerComSource.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.Set<java.lang.String>>.get(java.lang.String)", "java.util.Set<java.lang.String>.addAll(java.util.Set<java.lang.String>)"], "Fixed commit": "b3cadac4eaca1c3206db3c0af046d32c9a9c211a", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2015-10-04T20:58:09Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(fragment instanceof com.dawhey.mlij_blogapp.Fragments.ChapterFragment)) { if ((fragmentManager.getBackStackEntryCount()) > 0) { fragmentManager.popBackStack(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4025/buggy-version/app.src.main.java.com.dawhey.mlij_blogapp.Activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "35dab3b828d87045dd280468814c4fa9c7c65a5f", "Url": "https://api.github.com/repos/dawhey/mlij-blog-reader", "Date": "2017-03-21T19:33:56Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((Q.get(state).get(actions.get(i))) > maxQ) { maxQs.clear(); maxQ = Q.get(state).get(actions.get(i)); maxQs.add(i); }else if ((Q.get(state).get(actions.get(i))) == maxQ) { maxQs.add(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7664/buggy-version/src.CSCI446.Project4.Algorithms.SARSA.java", "BodyUseAPI": ["java.util.Map<CSCI446.Project4.Track.State, java.util.Map<CSCI446.Project4.Algorithms.Action, java.lang.Double>>.get(CSCI446.Project4.Track.State)", "java.util.Map<CSCI446.Project4.Track.State, java.util.Map<CSCI446.Project4.Algorithms.Action, java.lang.Double>>.get(CSCI446.Project4.Track.State)", "Q.get(state).get(actions.get(i))", "java.util.List<CSCI446.Project4.Algorithms.Action>.get(int)", "java.util.List<java.lang.Integer>.add(int)", "java.util.List<CSCI446.Project4.Algorithms.Action>.get(int)", "java.util.List<java.lang.Integer>.add(int)", "Q.get(state).get(actions.get(i))"], "Fixed commit": "df8f15845e4382224018a9085db4c55c92e843aa", "Url": "https://api.github.com/repos/Faore/ReinforcementLearning-CSCI446", "Date": "2016-12-12T15:44:58Z"},
{"Line": "=>460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (cssFile != null) { java.lang.String filePath = cssFile.getAbsolutePath(); if ((filePath.trim().length()) != 0) { commandSegments.add(\"-H\"); commandSegments.add(cssFile.getAbsolutePath()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2233/buggy-version/MarkdownWriterMain.src.main.java.com.galvin.markdown.compilers.PandocCompiler.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()", "java.util.List<java.lang.String>.add(java.lang.String)", "java.io.File.getAbsolutePath()"], "Fixed commit": "6a0453ae0441f08286d1a97919ab3d0a8a593bca", "Url": "https://api.github.com/repos/thomasgalvin/MarkdownWriter", "Date": "2017-12-05T14:42:33Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bloatit.model.Software.getImage()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (image != null) { return new com.bloatit.rest.resources.RestFileMetadata(image); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/381/buggy-version/main.src.main.java.com.bloatit.rest.resources.RestSoftware.java", "BodyUseAPI": [], "Fixed commit": "a622c4e594c5a7ea9b02ca6612d98f7ffff2056c", "Url": "https://api.github.com/repos/BloatIt/bloatit", "Date": "2011-11-21T14:10:12Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sorcer.resolver.Resolver.resolveSimpleName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (result != null) { cache.put(name, result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2568/buggy-version/tools.sos-boot.src.main.java.sorcer.boot.util.JarClassPathHelper.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.io.File>.put(java.lang.String,java.io.File)"], "Fixed commit": "9eba68462adbbb093c3eca195a114f64d123664d", "Url": "https://api.github.com/repos/sorcersoft/sorcer", "Date": "2013-09-09T15:34:40Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sorcer.resolver.ArtifactResolver.resolveSimpleName(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (relPath == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2568/buggy-version/sos.sos-env.src.main.java.sorcer.resolver.Resolver.java", "BodyUseAPI": [], "Fixed commit": "9eba68462adbbb093c3eca195a114f64d123664d", "Url": "https://api.github.com/repos/sorcersoft/sorcer", "Date": "2013-09-09T15:34:40Z"},
{"Line": "=>565", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["au.csiro.snorocket.core.model.Datatype.getOperator()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lhsOp != (au.csiro.ontology.model.Operator.EQUALS)) { return false; }else { return d1.getLiteral().equals(d2.getLiteral()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7194/buggy-version/snorocket-core.src.main.java.au.csiro.snorocket.core.concurrent.Context.java", "BodyUseAPI": [], "Fixed commit": "20d8de9bde5c3f787e0fe94cb7d35c8e416b3ade", "Url": "https://api.github.com/repos/aehrc/snorocket", "Date": "2013-05-08T22:51:25Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.edu.nju.gyue.service.UserService.usernameToUid(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (uid.equals(gallery.uid)) { return cn.edu.nju.gyue.util.ResultMessage.SUCCESS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1961/buggy-version/src.main.java.cn.edu.nju.gyue.service.impl.GalleryServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "a1acee154fdbd8f66e36570d1fe2ba609efbf657", "Url": "https://api.github.com/repos/Gyue15/picup_back_end", "Date": "2017-12-10T14:25:30Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((buttonAction) != null) { buttonAction.setEnabled(((text.toString().length()) > 0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/9087/buggy-version/LykkeWallet.app.src.main.java.com.lykkex.LykkeWallet.gui.fragments.registration.RegistrationStep2Fragment.java", "BodyUseAPI": [], "Fixed commit": "b3e8557069f4a29514d5805552a5559b1fabdb82", "Url": "https://api.github.com/repos/nirmel-lykkex/LykkeAndroid", "Date": "2016-06-11T22:19:47Z"},
{"Line": "=>717", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.labkey.workflow.WorkflowManager.getProcessDefinition(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (globalDefinition != null) deployWorkflow(new java.io.File(globalDefinition.getResourceName()), container); else throw new java.io.FileNotFoundException((\"No process definition for key \" + processDefinitionKey));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8780/buggy-version/src.org.labkey.workflow.WorkflowManager.java", "BodyUseAPI": ["org.activiti.engine.repository.ProcessDefinition.getResourceName()", "org.labkey.workflow.WorkflowManager.deployWorkflow(java.io.File,org.labkey.api.data.Container)"], "Fixed commit": "2f3a68ac44858f7a0fffc8afa70031d09dab8fdb", "Url": "https://api.github.com/repos/LabKey/workflow", "Date": "2016-06-08T15:26:46Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (dataString[0].contains(\"a\")) { firstTimeStamp = java.lang.Double.parseDouble(dataString[0].replace(\"a\", \"\")); data[0][j] = firstTimeStamp; }else { data[0][j] = firstTimeStamp + (timeInterval * (java.lang.Double.parseDouble(dataString[0]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2890/buggy-version/src.web.api.finance.GoogleFinanceGetpricesApi.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "9e16d5c90ee140f9acc7d6eb3bb5ba328810a317", "Url": "https://api.github.com/repos/aliceinnets/java-xlabs", "Date": "2017-01-13T13:13:09Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(plan.planPath().isEmpty())) { bw.write(\",\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2277/buggy-version/src.pt.lsts.neptus.mra.exporters.GEOJSONExporter.java", "BodyUseAPI": [], "Fixed commit": "b497de786d9a93f31900e4719463764e2a624cbd", "Url": "https://api.github.com/repos/LSTS/neptus", "Date": "2015-10-16T13:52:03Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (audioClip.isActive()) audioClip.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6806/buggy-version/jTunes.src.jTunes.database.AudioPlayer.java", "BodyUseAPI": ["javax.sound.sampled.Clip.stop()"], "Fixed commit": "b6e7ed4b0f826a7474b3155c120a566e51eb4ea1", "Url": "https://api.github.com/repos/ahmed3m/jTunes", "Date": "2016-05-22T21:00:33Z"},
{"Line": "=>1598", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((op.id) != null) { org.json.JSONArray result = delete(((((org.inaturalist.android.INaturalistService.HOST) + \"/observation_photos/\") + (op.id)) + \".json\"), null); if (result == null) { c.close(); throw new org.inaturalist.android.SyncFailedException(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4859/buggy-version/iNaturalist.src.main.java.org.inaturalist.android.INaturalistService.java", "BodyUseAPI": ["org.inaturalist.android.INaturalistService.delete(((((org.inaturalist.android.INaturalistService.HOST) + \"/observation_photos/\") + (op.id)) + \".json\"),<nulltype>)"], "Fixed commit": "6855be15880b1cfac87d2f60703f3e93e1e18936", "Url": "https://api.github.com/repos/inaturalist/iNaturalistAndroid", "Date": "2017-07-06T04:59:37Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jasonwangex.easyCoursera.examination.dao.TagExamDao.count(java.util.List<org.hibernate.criterion.Criterion>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (total == 0) return \"\u8be5\u77e5\u8bc6\u70b9\u4e0b\u672a\u7ed1\u5b9a\u4efb\u4f55\u9898\u76ee\uff0c\u8bf7\u8054\u7cfb\u8001\u5e08\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4636/buggy-version/src.main.java.com.jasonwangex.easyCoursera.callback.service.QrcodeScanHandler.java", "BodyUseAPI": [], "Fixed commit": "1b1da350ea8eccf091d477c42c142749169e21a9", "Url": "https://api.github.com/repos/JasonWangex/EasyCoursera", "Date": "2017-05-23T16:25:21Z"},
{"Line": "=>10917", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<android.graphics.Bitmap>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((aBitmap) == srcBitmap) { aBitmap = srcBitmap.copy(srcBitmap.getConfig(), false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2480/buggy-version/src.com.rfo.basic.Run.java", "BodyUseAPI": ["android.graphics.Bitmap.getConfig()", "android.graphics.Bitmap.copy(srcBitmap.getConfig(),boolean)"], "Fixed commit": "6b86bc3ecf1ae98a917ad4f7d74b00b57e229a62", "Url": "https://api.github.com/repos/RFO-BASIC/Basic", "Date": "2014-10-22T18:50:49Z"},
{"Line": "=>10964", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<android.graphics.Bitmap>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((aBitmap) == srcBitmap) { aBitmap = srcBitmap.copy(srcBitmap.getConfig(), false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2480/buggy-version/src.com.rfo.basic.Run.java", "BodyUseAPI": ["android.graphics.Bitmap.copy(srcBitmap.getConfig(),boolean)", "android.graphics.Bitmap.getConfig()"], "Fixed commit": "6b86bc3ecf1ae98a917ad4f7d74b00b57e229a62", "Url": "https://api.github.com/repos/RFO-BASIC/Basic", "Date": "2014-10-22T18:50:49Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (world.isRemote) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1642/buggy-version/src.main.java.romelo333.notenoughwands.ForgeEventHandlers.java", "BodyUseAPI": [], "Fixed commit": "5aa9d53aea1afc135fab0b3b95522d8f8eaea39b", "Url": "https://api.github.com/repos/romelo333/notenoughwands", "Date": "2015-10-23T12:47:11Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (world.isRemote) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1642/buggy-version/src.main.java.romelo333.notenoughwands.ForgeEventHandlers.java", "BodyUseAPI": [], "Fixed commit": "5aa9d53aea1afc135fab0b3b95522d8f8eaea39b", "Url": "https://api.github.com/repos/romelo333/notenoughwands", "Date": "2015-10-23T12:47:11Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (compare != (entry.getValue())) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/9144/buggy-version/TocFinal.java", "BodyUseAPI": [], "Fixed commit": "34251e451aa6465591181ded69bace3aeda246b1", "Url": "https://api.github.com/repos/Mouther/TOC_Final", "Date": "2014-07-03T12:18:39Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fastj.fit.model.TSuite.getLast()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (tcase != null) { try { tcase.valid(); tcase.initTStage(); } catch (org.fastj.fit.intf.DataInvalidException e) { suite.getTestCases().remove(tcase); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1542/buggy-version/src.org.fastj.fit.tool.TCSLoader.java", "BodyUseAPI": ["org.fastj.fit.model.TestCase.initTStage()", "org.fastj.fit.model.TestCase.valid()", "suite.getTestCases().remove(org.fastj.fit.model.TestCase)"], "Fixed commit": "f0b4c81523b4d04d4c08861dc62da359636b6eaa", "Url": "https://api.github.com/repos/fastj/fit", "Date": "2016-01-12T12:17:21Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.device.mgt.common.configuration.mgt.TenantConfiguration.getConfiguration()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (configList == null) { configList = new java.util.ArrayList<org.wso2.carbon.device.mgt.common.configuration.mgt.ConfigurationEntry>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4708/buggy-version/modules.apps.jax-rs.mdm-admin.src.main.java.org.wso2.carbon.mdm.api.Configuration.java", "BodyUseAPI": [], "Fixed commit": "b5481db97ffb911fc46103763ff2bb4ca61e8723", "Url": "https://api.github.com/repos/Kamidu/product-mdm", "Date": "2016-03-10T04:27:04Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mortaramultimedia.wordwolfappandroid.data.Model.getSelectedTiles().contains(td)) { return false; }else if (sameCol && sameRow) { return false; }else if ((sameRow && adjCol) || (sameCol && adjRow)) { return true; }else { android.util.Log.w(com.mortaramultimedia.wordwolfappandroid.game.GameManager.TAG, \"isValidTileSelection: UNHANDLED CASE\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/397/buggy-version/app.src.main.java.com.mortaramultimedia.wordwolfappandroid.game.GameManager.java", "BodyUseAPI": [], "Fixed commit": "2b14a48ea9d56a9437f8bee10672e8476f8873e1", "Url": "https://api.github.com/repos/jmortara/WordWolfAppAndroid", "Date": "2016-04-05T03:30:17Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.processes) == null) { this.processes = processes; }else { this.processes.clear(); this.processes.addAll(processes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/9276/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Batch.java", "BodyUseAPI": [], "Fixed commit": "7642d4bcae760184405f635014297974c2d4ad80", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.batches) == null) { this.batches = batches; }else { this.batches.clear(); this.batches.addAll(batches); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/9276/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Process.java", "BodyUseAPI": [], "Fixed commit": "7642d4bcae760184405f635014297974c2d4ad80", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (difficultyLevel == 1) { difficultyLevel = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3485/buggy-version/roomforchange.roomforchange.src.com.sturdyhelmetgames.roomforchange.level.RoomTemplate.java", "BodyUseAPI": [], "Fixed commit": "b398959e896f080cc0174ca3f157c8377d1dd338", "Url": "https://api.github.com/repos/antionio/game-off-2013", "Date": "2013-11-30T20:00:35Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cmd.getName().equalsIgnoreCase(\"spawnplayer\")) { if (sender instanceof org.bukkit.entity.Player) { org.bukkit.entity.Player p = ((org.bukkit.entity.Player) (sender)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1207/buggy-version/src.com.comze_instancelabs.christmasmobs.Main.java", "BodyUseAPI": [], "Fixed commit": "180c5f13a507c49ad8a246a006ff6449b475b641", "Url": "https://api.github.com/repos/instance01/ChristmasZombie", "Date": "2013-12-14T00:36:01Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recordCount) > 0) { flush(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2293/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.store.parquet.ParquetRecordWriter.java", "BodyUseAPI": [], "Fixed commit": "d08b8b80880e12d29aa29bd0087c66554db166e4", "Url": "https://api.github.com/repos/apache/incubator-drill", "Date": "2014-05-15T19:14:06Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (swatch == null) swatch = new android.support.v7.graphics.Palette.Swatch(prefs.getInt(PreferenceUtils.PREF_CUSTOM_COLOR, Color.WHITE), 1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1622/buggy-version/app.src.main.java.james.medianotification.services.NotificationService.java", "BodyUseAPI": [], "Fixed commit": "3735b3111d6b90b94f6804018649a665073bc8b2", "Url": "https://api.github.com/repos/TheAndroidMaster/MediaNotification", "Date": "2017-08-07T14:21:36Z"},
{"Line": "=>804", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isTopicAdmin(nd.getNodePK().getId())) { return getKmeliaBm().updateTopic(nd, alertType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4454/buggy-version/kmelia.kmelia-war.src.main.java.com.stratelia.webactiv.kmelia.control.KmeliaSessionController.java", "BodyUseAPI": ["com.stratelia.webactiv.kmelia.control.ejb.KmeliaBm.updateTopic(com.stratelia.webactiv.util.node.model.NodeDetail,java.lang.String)"], "Fixed commit": "2532b769342b20c175de822a2f52c44b1d4209cc", "Url": "https://api.github.com/repos/ebonnet/Silverpeas-Components", "Date": "2015-07-20T13:14:07Z"},
{"Line": "=>1472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(kmelia.isTopicAdmin(id))) { return \"/admin/jsp/accessForbidden.jsp\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4454/buggy-version/kmelia.kmelia-war.src.main.java.com.stratelia.webactiv.kmelia.servlets.KmeliaRequestRouter.java", "BodyUseAPI": [], "Fixed commit": "2532b769342b20c175de822a2f52c44b1d4209cc", "Url": "https://api.github.com/repos/ebonnet/Silverpeas-Components", "Date": "2015-07-20T13:14:07Z"},
{"Line": "=>1514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.silverpeas.servlet.HttpRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (kmelia.isTopicAdmin(nodeId)) { kmelia.updateTopicRole(role, nodeId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4454/buggy-version/kmelia.kmelia-war.src.main.java.com.stratelia.webactiv.kmelia.servlets.KmeliaRequestRouter.java", "BodyUseAPI": ["com.stratelia.webactiv.kmelia.control.KmeliaSessionController.updateTopicRole(java.lang.String,java.lang.String)"], "Fixed commit": "2532b769342b20c175de822a2f52c44b1d4209cc", "Url": "https://api.github.com/repos/ebonnet/Silverpeas-Components", "Date": "2015-07-20T13:14:07Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (clientMap.containsKey(threadID)) { com.tapsi.ConnectionClientThreads currentUser = clientMap.get(threadID); currentUser.sendMessage(msg); }else { try { throw new com.tapsi.GeoDoorExceptions(\"null - key doesn't exist anymore\"); } catch (com.tapsi.GeoDoorExceptions geoDoorExceptions) { geoDoorExceptions.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1579/buggy-version/src.com.tapsi.ServerThread.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, com.tapsi.ConnectionClientThreads>.get(java.lang.String)"], "Fixed commit": "4e6ee3442aa2e6e760fa9628c2101fd4aac70e4f", "Url": "https://api.github.com/repos/CapitisDamnare/GeoDoorServer2", "Date": "2017-10-15T04:22:16Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shouldResetStepsBeforeEachScenario()) { net.thucydides.jbehave.ThucydidesStepFactory.resetContext(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6695/buggy-version/src.main.java.net.thucydides.jbehave.ThucydidesReporter.java", "BodyUseAPI": [], "Fixed commit": "5727efdceff388856734368895512e4e1432f852", "Url": "https://api.github.com/repos/thucydides-webtests/thucydides-jbehave", "Date": "2014-02-24T23:56:37Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.dongnan.androidapi.MainActivity.getActionBar()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (actionBar != null) { actionBar.setTitle(title); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8495/buggy-version/app.src.main.java.com.android.dongnan.androidapi.MainActivity.java", "BodyUseAPI": ["android.app.ActionBar.setTitle(java.lang.String)"], "Fixed commit": "62813e5e9683cc6e0fccd195c6aea133b02e0b96", "Url": "https://api.github.com/repos/dongnan2017/dream", "Date": "2016-05-31T13:29:34Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((token.getType()) == (RIGHT_BRACKET)) { rootNode.addChild(subtree); }else if ((token.getType()) == (DOT_DOT)) { wci.frontend.pascal.parsers.ICodeNode operand1 = subtree; token = nextToken(); token = currentToken(); wci.frontend.pascal.parsers.ICodeNode operand2 = parse(token); if (((operand1.getType()) == (INTEGER_CONSTANT)) && ((operand2.getType()) == (INTEGER_CONSTANT))) { int from = ((java.lang.Integer) (operand1.getAttribute(wci.frontend.pascal.parsers.VALUE))); int to = ((java.lang.Integer) (operand2.getAttribute(wci.frontend.pascal.parsers.VALUE))); while (from <= to) { wci.frontend.pascal.parsers.ICodeNode child = wci.frontend.pascal.parsers.ICodeFactory.createICodeNode(wci.frontend.pascal.parsers.INTEGER_CONSTANT); child.setAttribute(wci.frontend.pascal.parsers.VALUE, from); rootNode.addChild(child); from++; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3723/buggy-version/Assignment3.src.wci.frontend.pascal.parsers.ExpressionParser.java", "BodyUseAPI": ["wci.frontend.pascal.parsers.Token.getType()"], "Fixed commit": "640d87c077bb68b6fc202039d024f7c2cf123e24", "Url": "https://api.github.com/repos/udaiveerS/CS-153", "Date": "2015-10-02T05:49:27Z"},
{"Line": "=>621", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(availableMethods.contains(\"publickey\"))) throw new hudson.AbortException(\"The server doesn't support the public key authentication\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2548/buggy-version/src.main.java.hudson.plugins.sshslaves.SSHLauncher.java", "BodyUseAPI": [], "Fixed commit": "515cbcab456d1a8497e497c1ab5ac553a63180d1", "Url": "https://api.github.com/repos/jenkinsci/ssh-slaves-plugin", "Date": "2011-08-25T21:42:41Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.simiancage.bukkit.messagechangerlite.Config.getMessages(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (message == null) { message = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7733/buggy-version/src.org.simiancage.bukkit.messagechangerlite.MessageChangerLite.java", "BodyUseAPI": [], "Fixed commit": "e54241cfebecbef6e31c622bd0373db6c9df5e6e", "Url": "https://api.github.com/repos/dredhorse/MessageChangerLite", "Date": "2012-09-07T18:29:50Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playerName) == null) { setPlayerName(com.Ben12345rocks.AdvancedCore.Utils.getInstance().getPlayerName(getUUID())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6314/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Objects.User.java", "BodyUseAPI": [], "Fixed commit": "53b9ee23fdd1b88d219c21669993a95cb2996613", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2016-09-01T00:56:11Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((attachedTo) != null) attachedTo.invalidate();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3019/buggy-version/src.main.java.io.github.tonodus.bukkit.MapGUI.core.BaseComponent.java", "BodyUseAPI": [], "Fixed commit": "62b79968e1b4b80cc815f4c49cac4242ac36b5bb", "Url": "https://api.github.com/repos/Tonodus/MapGUI", "Date": "2014-08-16T16:29:58Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v7.widget.RecyclerView.findChildViewUnder(e.getX(),e.getY())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (childView != null) { final int position = rv.getChildAdapterPosition(childView); onItemClick(childView, position); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5652/buggy-version/OnItemClickListener.java", "BodyUseAPI": ["android.support.v7.widget.RecyclerView.getChildAdapterPosition(android.view.View)", "me.codego.view.OnItemClickListener.1.onItemClick(android.view.View,int)"], "Fixed commit": "0a8ed2f1067ca2b620783ead9500fa5f0c2038bc", "Url": "https://api.github.com/repos/mengxn/OnItemClickListener", "Date": "2017-08-18T08:47:04Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v7.widget.RecyclerView.findChildViewUnder(e.getX(),e.getY())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (childView != null) { final int position = rv.getChildAdapterPosition(childView); onItemLongClick(childView, position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5652/buggy-version/OnItemClickListener.java", "BodyUseAPI": ["android.support.v7.widget.RecyclerView.getChildAdapterPosition(android.view.View)", "me.codego.view.OnItemClickListener.1.onItemLongClick(android.view.View,int)"], "Fixed commit": "0a8ed2f1067ca2b620783ead9500fa5f0c2038bc", "Url": "https://api.github.com/repos/mengxn/OnItemClickListener", "Date": "2017-08-18T08:47:04Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((e.getNodeArrayPos()) < 1)) e.setNodeArrayPos(((e.getNodeArrayPos()) - 1000));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5046/buggy-version/core.src.main.buildings.towers.RiotShield.java", "BodyUseAPI": ["enemies.Enemy.setNodeArrayPos(((e.getNodeArrayPos()) - 1000))", "enemies.Enemy.getNodeArrayPos()"], "Fixed commit": "6c00f3af336d3155a6926a76858a281f00b7bdb7", "Url": "https://api.github.com/repos/Coec0/tda367-JOKE", "Date": "2017-05-14T20:46:44Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.g) != null) { this.a(\"I'm sorry... I can't let you do that, Dave\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4550/buggy-version/src.main.java.net.minecraft.server.NetLoginHandler.java", "BodyUseAPI": [], "Fixed commit": "ff0731f0b3ce0a89c25a44530a4600220561f4f4", "Url": "https://api.github.com/repos/FallenMoonNetwork/CanaryRecode", "Date": "2013-09-04T18:20:51Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((secretcontent.indexOf(((\";\" + name) + \"=\"))) == (-1)) && ((secretcontent.indexOf((name + \"=\"))) == 0)) { startindexpasswd = (name.length()) + 1; endofpasswd = (secretcontent.indexOf(\";\", startindexpasswd)) + 1; }else { startindexpasswd = ((secretcontent.indexOf(((\";\" + name) + \"=\"))) + (name.length())) + 2; endofpasswd = secretcontent.indexOf(\";\", startindexpasswd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/862/buggy-version/SecretFileManager.java", "BodyUseAPI": ["java.lang.StringBuffer.indexOf(java.lang.String,int)", "java.lang.String.length()", "java.lang.String.length()", "java.lang.StringBuffer.indexOf(java.lang.String,int)", "java.lang.StringBuffer.indexOf(java.lang.String)"], "Fixed commit": "314f5e992226db48aae27d12f7f5863f23238155", "Url": "https://api.github.com/repos/todestoast/passer", "Date": "2015-02-14T23:40:26Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (value != null) { break CHECK_LOOP; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5332/buggy-version/qtiworks-jqtiplus.src.main.java.uk.ac.ed.ph.jqtiplus.running.ItemSessionController.java", "BodyUseAPI": [], "Fixed commit": "8b9a0143a5f99cdad7546686e126c8d741d0a002", "Url": "https://api.github.com/repos/davemckain/qtiworks", "Date": "2012-08-12T12:47:52Z"},
{"Line": "=>788", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (baseWeight != null) weight = baseWeight;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4571/buggy-version/cz.mzk.recordmanager.server.src.main.java.cz.mzk.recordmanager.server.metadata.MetadataMarcRecord.java", "BodyUseAPI": [], "Fixed commit": "36fd4c394e3e404fe9ed09080747ebec6e7b5370", "Url": "https://api.github.com/repos/moravianlibrary/RecordManager2", "Date": "2015-05-07T08:15:46Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player) == null) player = new org.edx.mobile.player.Player();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3550/buggy-version/VideoLocker.src.main.java.org.edx.mobile.player.PlayerFragment.java", "BodyUseAPI": [], "Fixed commit": "d4594d63e12b243f1af8d09de5c7dd52693b2d5b", "Url": "https://api.github.com/repos/edx/edx-app-android", "Date": "2015-12-10T07:25:22Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (IsUpdatable(data)) { state = UpdateRanking(data); }else { state = -2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6013/buggy-version/src.Ranking.RankingProcessing.java", "BodyUseAPI": ["Ranking.RankingProcessing.UpdateRanking(Ranking.RankingDataBean)"], "Fixed commit": "0abc57fe97e723787cd200d4d3220d84f08dca5d", "Url": "https://api.github.com/repos/MCompan/CommunityServer", "Date": "2015-06-09T18:19:37Z"},
{"Line": "=>472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getMetaData()) instanceof uk.ac.diamond.scisoft.analysis.io.IDiffractionMetadata) { shape[0] = ((uk.ac.diamond.scisoft.analysis.io.IDiffractionMetadata) (getMetaData())).getDetector2DProperties().getPx(); shape[1] = ((uk.ac.diamond.scisoft.analysis.io.IDiffractionMetadata) (getMetaData())).getDetector2DProperties().getPy(); }else { shape = getImageTrace().getData().getShape(); int temp = shape[0]; shape[0] = shape[1]; shape[1] = temp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3304/buggy-version/org.dawnsci.plotting.src.org.dawnsci.plotting.tools.profile.RadialProfileTool.java", "BodyUseAPI": [], "Fixed commit": "4a8c498e7b389e24ce3928fa5d576ffdc26e5cb4", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2013-05-16T12:48:46Z"},
{"Line": "=>640", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (toolbarJoinsTabs()) { setColorPercent(1.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/9114/buggy-version/materialviewpager.src.main.java.com.github.florent37.materialviewpager.MaterialViewPagerAnimator.java", "BodyUseAPI": [], "Fixed commit": "c0b3332d2f9d3530445ef0ef4bb027f0eecf993e", "Url": "https://api.github.com/repos/shumin0809/MaterialViewPager", "Date": "2015-08-11T21:05:32Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["circuit.timing.TimingNode.getPin()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (sinkPin != pathSourcePin) { todo.push(new circuit.timing.TimingGraph.TraversePair(sinkPin, totalDelay)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7758/buggy-version/src.circuit.timing.TimingGraph.java", "BodyUseAPI": ["java.util.Stack<circuit.timing.TimingGraph.TraversePair>.push(circuit.timing.TimingGraph.TraversePair)"], "Fixed commit": "15da488621326b64b2769b88a316346f2e54f956", "Url": "https://api.github.com/repos/EliasVansteenkiste/FPGA-CAD-Framework", "Date": "2016-01-18T19:30:47Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.adiaz.controllers.CompetitionsManager.queryCompetitionsByIdEntity(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((competition.getLastPublished()) != null) { competitionDetails.setLastPublished(competition.getLastPublished().getTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1010/buggy-version/src.main.java.com.adiaz.controllers.RESTController.java", "BodyUseAPI": ["com.adiaz.controllers.RESTController.CompetitionDetails.setLastPublished(competition.getLastPublished().getTime())", "competition.getLastPublished().getTime()", "com.adiaz.controllers.Competition.getLastPublished()"], "Fixed commit": "b2641e2513b3f2c3f6eb016655c7d04bd7e00949", "Url": "https://api.github.com/repos/AntonioDiaz/LocalSportsWeb", "Date": "2017-09-20T15:49:38Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key.equals(javax.xml.transform.OutputKeys.CDATA_SECTION_ELEMENTS)) { value = value.replaceAll(\"\\\\{\\\\}\", \"{''}\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5715/buggy-version/src.main.java.nl.armatiek.xslweb.web.servlet.XSLWebServlet.java", "BodyUseAPI": [], "Fixed commit": "724f1c0f89891773f0c4fcdb40def35e7808a675", "Url": "https://api.github.com/repos/Armatiek/xslweb", "Date": "2015-11-02T08:35:03Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mDefaultConversion) == null) && (!(conversion.mTo.contentEquals(mFrom)))) { mDefaultConversion = conversion.mTo; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8749/buggy-version/app.src.main.java.com.app.badoo.myapplication.infrastucture.ConversionList.java", "BodyUseAPI": [], "Fixed commit": "ed422cbd1d3252c986966f65297d36ec93a538cc", "Url": "https://api.github.com/repos/gileichenbaum/Badoo_exersice", "Date": "2016-05-13T13:06:27Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((c.getTimeInMillis()) >= (plugin.playertime.get(playername))) { listmessage(player, \"messages.depart-combat\"); deleteFromMemory(playername); org.bukkit.Bukkit.getScheduler().cancelTask(integername); if (plugin.flyingplayers.contains(player.getName())) { plugin.flyingplayers.remove(player.getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8657/buggy-version/src.net.aemservers.pvptag.PvPTagListener.java", "BodyUseAPI": ["net.aemservers.pvptag.PvPTagListener.2.deleteFromMemory(java.lang.String)", "plugin.flyingplayers.contains(player.getName())", "plugin.flyingplayers.remove(player.getName())"], "Fixed commit": "a6d5542cb1764bc339c60a54676abb7e9159c7d6", "Url": "https://api.github.com/repos/th3controller/PvPTag", "Date": "2013-06-09T04:07:19Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (HPAFactor > 0.9) HPAFactor = 0.9;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1948/buggy-version/src.main.java.housing.HouseholdBehaviour.java", "BodyUseAPI": [], "Fixed commit": "f031d066fb14a72e37327956e3b3245adb1f9e5f", "Url": "https://api.github.com/repos/adrian-carro/spatial-housing-model", "Date": "2017-10-05T19:09:44Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((windows[i].end) >= (dailyData.size())) { lastDay = getValueOr(dailyData.get(((dailyData.size()) - 1)), \"w_date\", \"\"); }else { lastDay = getValueOr(dailyData.get(windows[i].end), \"w_date\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2005/buggy-version/src.main.java.org.agmip.functions.ExperimentHelper.java", "BodyUseAPI": ["java.util.ArrayList<java.util.Map>.get(int)", "org.agmip.functions.ExperimentHelper.getValueOr(java.util.Map,java.lang.String,java.lang.String)", "java.util.ArrayList<java.util.Map>.get(int)", "org.agmip.functions.ExperimentHelper.getValueOr(java.util.Map,java.lang.String,java.lang.String)", "java.util.ArrayList<java.util.Map>.size()"], "Fixed commit": "c50f5ff1f1afdcfa1b0e6005c44db3d9c3c7d753", "Url": "https://api.github.com/repos/MengZhang/agmip-common-functions", "Date": "2013-04-15T14:27:58Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ctx.eContainer()) instanceof com.rockwellcollins.atc.resolute.resolute.FunctionDefinition) { return org.eclipse.xtext.scoping.IScope.NULLSCOPE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6839/buggy-version/fm-workbench.resolute.com.rockwellcollins.atc.resolute.src.com.rockwellcollins.atc.resolute.scoping.ResoluteScopeProvider.java", "BodyUseAPI": [], "Fixed commit": "fdabb9a72a447f17a912163554009ddc299c07fe", "Url": "https://api.github.com/repos/smaccm/smaccm", "Date": "2015-11-10T15:59:45Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.reprezen.kaizen.oasparser.val.NumericUtils.NumericType.types) == null) com.reprezen.kaizen.oasparser.val.NumericUtils.NumericType.types = com.google.common.collect.Maps.newHashMap();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6981/buggy-version/kaizen-openapi-parser.src.main.java.com.reprezen.kaizen.oasparser.val.NumericUtils.java", "BodyUseAPI": [], "Fixed commit": "e4ab7a6df999f074c5bd943c9c53aa1276bab4d6", "Url": "https://api.github.com/repos/slinkydeveloper/KaiZen-OpenApi-Parser", "Date": "2017-05-29T23:46:24Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cur == '\\'') && inQuote) { inQuote = false; }else if (inQuote) { }else if (cur == '=') { if (((i + 1) < (chars.length)) && ((chars[(i + 1)]) == '=')) { i++; }else if (((i - 1) >= 0) && ((chars[(i - 1)]) == '!')) { }else { snapshot = stack.size(); assignment_index = i; } }else if (cur == '(') { stack.push(i); }else if (cur == ')') { stack.pop(); if ((stack.size()) == (snapshot - 1)) { ranges.add(new java.awt.Point(assignment_index, i)); snapshot = -1; assignment_index = -1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2437/buggy-version/src.edu.ucla.cs.mine.PredicatePatternMiner.java", "BodyUseAPI": [], "Fixed commit": "e0ed17f7f82267b8f4a47a69000ec7e87e774d9d", "Url": "https://api.github.com/repos/husttroy/Maple", "Date": "2017-03-20T17:03:26Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cur == '\"') && (!inQuote)) { inQuote = true; }else if (((cur == '\\'') && (i > 0)) && ((chars[(i - 1)]) == '\\\\')) { }else if ((cur == '\\'') && (!inQuote)) { inQuote = true; }else if ((cur == '\"') && inQuote) { inQuote = false; }else if ((cur == '\\'') && inQuote) { inQuote = false; }else if (inQuote) { }else if (cur == '=') { if (((i + 1) < (chars.length)) && ((chars[(i + 1)]) == '=')) { i++; }else if (((i - 1) >= 0) && ((chars[(i - 1)]) == '!')) { }else { snapshot = stack.size(); assignment_index = i; } }else if (cur == '(') { stack.push(i); }else if (cur == ')') { stack.pop(); if ((stack.size()) == (snapshot - 1)) { ranges.add(new java.awt.Point(assignment_index, i)); snapshot = -1; assignment_index = -1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2437/buggy-version/src.edu.ucla.cs.mine.PredicatePatternMiner.java", "BodyUseAPI": [], "Fixed commit": "e0ed17f7f82267b8f4a47a69000ec7e87e774d9d", "Url": "https://api.github.com/repos/husttroy/Maple", "Date": "2017-03-20T17:03:26Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["femr.data.daos.IRepository<femr.common.models.IPatient>.findAll(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((patients.size()) > 0) { response.setResponseObject(patients); }else { response.addError(\"patients\", \"No patients available\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5930/buggy-version/app.femr.business.services.ResearchService.java", "BodyUseAPI": ["femr.business.dtos.ServiceResponse<java.util.List<? extends femr.common.models.IPatient>>.setResponseObject(java.util.List<? extends femr.common.models.IPatient>)"], "Fixed commit": "f1ccbe0584376f674b7d9dd0413d2b9755965f7c", "Url": "https://api.github.com/repos/codeitandloadit/femr", "Date": "2014-03-09T04:02:22Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (statusCode >= 400) { throw new java.lang.RuntimeException(response.getStatusLine().getReasonPhrase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8136/buggy-version/gdp-common-utilities.src.main.java.gov.usgs.cida.gdp.urs.URSLoginProvider.java", "BodyUseAPI": [], "Fixed commit": "4ae243740a8d8d7be1f407f4e38b718878f9da27", "Url": "https://api.github.com/repos/jiwalker-usgs/geo-data-portal", "Date": "2015-10-05T21:31:41Z"},
{"Line": "=>808", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type.getType()) == (PROTOBUF)) { methodvisitor.visitTypeInsn(Opcodes.CHECKCAST, org.apache.tajo.engine.codegen.TajoGeneratorAdapter.getInternalName(org.apache.tajo.engine.codegen.ProtobufDatum.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6010/buggy-version/tajo-core.src.main.java.org.apache.tajo.engine.codegen.TajoGeneratorAdapter.java", "BodyUseAPI": [], "Fixed commit": "ca3f0adde32c28a0c073546f3f01271576064953", "Url": "https://api.github.com/repos/hyunsik/tajo", "Date": "2014-09-13T14:45:15Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getCause().first(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((optional.isPresent()) && ((optional.get()) == nmsPlayer)) { if ((this.callback) != null) { this.callback.accept(player, event.getText().asList()); } nmsWorld.removeTileEntity(pos); nmsWorld.setBlockState(pos, Blocks.AIR.getDefaultState(), 0); nmsPlayer.connection.sendPacket(new net.minecraft.network.play.server.SPacketBlockChange(nmsWorld, pos)); event.setCancelled(true); org.spongepowered.api.Sponge.getEventManager().unregisterListeners(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1250/buggy-version/src.com.github.ustc_zzzz.virtualsign.unsafe.VirtualSignFrostburnImpl.java", "BodyUseAPI": ["nmsPlayer.connection.sendPacket(net.minecraft.network.play.server.SPacketBlockChange)"], "Fixed commit": "db4a986fe363878d21ff1201469ff86a8c70e157", "Url": "https://api.github.com/repos/ustc-zzzz/VirtualSign", "Date": "2016-12-10T18:14:16Z"},
{"Line": "=>699", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pp.getErrorIndex()) >= 0) { throw new java.text.ParseException(string, pp.getErrorIndex()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4210/buggy-version/core.src.org.pentaho.di.core.row.value.ValueMetaBase.java", "BodyUseAPI": ["java.text.ParsePosition.getErrorIndex()"], "Fixed commit": "0125c88f7f614073986ea8076740117a80cef3ce", "Url": "https://api.github.com/repos/DavidStanitzki/pentaho-kettle", "Date": "2015-08-13T08:59:03Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((play.equals(sender)) || (play.equals(receiver))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8537/buggy-version/src.at.pcgamingfreaks.MarriageMaster.Bukkit.Commands.MarryChat.java", "BodyUseAPI": [], "Fixed commit": "a7e31354710fdff71c3f2504ab15c40eaf89d368", "Url": "https://api.github.com/repos/GeorgH93/MarriageMaster", "Date": "2016-05-14T21:15:16Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.deidentifier.arx.gui.view.impl.wizard.ImportWizardModelColumn.getColumn()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (c instanceof org.deidentifier.arx.io.ImportColumnIndexed) { columnIndex = ((org.deidentifier.arx.io.ImportColumnIndexed) (column.getColumn())).getIndex(); }else if ((column.getColumn()) instanceof org.deidentifier.arx.io.ImportColumnJDBC) { columnIndex = ((org.deidentifier.arx.io.ImportColumnJDBC) (column.getColumn())).getIndex(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7996/buggy-version/src.gui.org.deidentifier.arx.gui.view.impl.wizard.ImportWizardModel.java", "BodyUseAPI": [], "Fixed commit": "e9092d7c032932d8674fab5b191d75a8be7bd0fa", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2015-03-13T10:05:16Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((address) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7059/buggy-version/api.src.main.java.com.stockholm.api.socket.AcceptorManager.java", "BodyUseAPI": [], "Fixed commit": "fbbde1f10b9f22f1a9cc295c2920b2294c03eeab", "Url": "https://api.github.com/repos/xidian/stockholm-api", "Date": "2017-04-15T03:51:23Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (wartosc == null) throw new java.lang.NullPointerException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2663/buggy-version/src.main.java.model.Waluta.java", "BodyUseAPI": [], "Fixed commit": "92bb63e52892fafb4ad202705f1c7bc2c211a9d2", "Url": "https://api.github.com/repos/orf1888/Subiekt", "Date": "2014-05-13T20:20:27Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userInfo.getLastName()) == null) { return \"newAccount\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8702/buggy-version/src.main.java.com.mds.springshop.controller.UserController.java", "BodyUseAPI": [], "Fixed commit": "80d567264da664aacd7871e09573dc008f20a485", "Url": "https://api.github.com/repos/BeatriceBianca/SpringShop", "Date": "2017-04-22T08:28:39Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jetbrains.jetpad.vclang.term.definition.visitor.DefinitionCheckTypeVisitor.visitClass(com.jetbrains.jetpad.vclang.term.definition.ClassDefinition,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (result != null) { result.setLocalNamespace(localNamespace); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/9070/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.module.source.ParseSource.java", "BodyUseAPI": ["com.jetbrains.jetpad.vclang.term.definition.ClassDefinition.setLocalNamespace(com.jetbrains.jetpad.vclang.module.Namespace)"], "Fixed commit": "751bedeaa637f658abe974ee9d66fdd42b29d706", "Url": "https://api.github.com/repos/valis/vclang", "Date": "2015-09-17T16:40:29Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(dbName.equals(\"\"))) { return dbName; }else { throw new java.lang.IllegalArgumentException(\"Database name is not populated\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7159/buggy-version/src.main.java.main.DbCredentials.java", "BodyUseAPI": [], "Fixed commit": "021ecaf390621343086cc99f39423934b06c83bf", "Url": "https://api.github.com/repos/ipermyakovafls/odymetrics", "Date": "2016-08-23T14:43:57Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(userName.equals(\"\"))) { return userName; }else { throw new java.lang.IllegalArgumentException(\"User name is not populated\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7159/buggy-version/src.main.java.main.DbCredentials.java", "BodyUseAPI": [], "Fixed commit": "021ecaf390621343086cc99f39423934b06c83bf", "Url": "https://api.github.com/repos/ipermyakovafls/odymetrics", "Date": "2016-08-23T14:43:57Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(propFilePath.equals(\"\"))) { return propFilePath; }else { throw new java.lang.IllegalArgumentException(\"Prop file path is not populated\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7159/buggy-version/src.main.java.main.DbCredentials.java", "BodyUseAPI": [], "Fixed commit": "021ecaf390621343086cc99f39423934b06c83bf", "Url": "https://api.github.com/repos/ipermyakovafls/odymetrics", "Date": "2016-08-23T14:43:57Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(schemaName.equals(\"\"))) { return schemaName; }else { throw new java.lang.IllegalArgumentException(\"Schema name is not populated\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7159/buggy-version/src.main.java.main.DbCredentials.java", "BodyUseAPI": [], "Fixed commit": "021ecaf390621343086cc99f39423934b06c83bf", "Url": "https://api.github.com/repos/ipermyakovafls/odymetrics", "Date": "2016-08-23T14:43:57Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tableName.equals(\"\"))) { return tableName; }else { throw new java.lang.IllegalArgumentException(\"Table name is not populated\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7159/buggy-version/src.main.java.main.DbCredentials.java", "BodyUseAPI": [], "Fixed commit": "021ecaf390621343086cc99f39423934b06c83bf", "Url": "https://api.github.com/repos/ipermyakovafls/odymetrics", "Date": "2016-08-23T14:43:57Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["itemBarcode.getText().toString().isEmpty()", "itemPrice.getText().toString().isEmpty()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (checkPrice || checkBarcode) { android.widget.Toast.makeText(this, \"Still have some Blank Field!\", Toast.LENGTH_SHORT).show(); }else { java.util.Date now = new java.util.Date(); java.lang.String time = new java.text.SimpleDateFormat(\"EEE, d MMM yyyy HH:mm:ss Z\").format(now); int id = inventory.getProductCatalog().getProductByBarcode(itemBarcode.getText().toString()).getId(); boolean success = inventory.getStock().addNewProductLot(time, amount, id, java.lang.Double.parseDouble(itemPrice.getText().toString())); if (success) { android.widget.Toast.makeText(this, (\"Successfully Add : \" + (itemName.getText().toString())), Toast.LENGTH_SHORT).show(); }else { android.widget.Toast.makeText(this, (\"FAIL to Add : \" + (itemName.getText().toString())), Toast.LENGTH_SHORT).show(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5514/buggy-version/src.com.refresh.pos.ui.StockAddActivity.java", "BodyUseAPI": [], "Fixed commit": "332db11e75d45dea927f05788bc783c23bb4db6e", "Url": "https://api.github.com/repos/mapfap/pos", "Date": "2013-10-09T07:01:58Z"},
{"Line": "=>559", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (end > 99999) { return new com.linecorp.bot.model.message.TextMessage(\"\u9ab0\u5b50\u90a3\u9ebc\u5927\u53bb\u62c9\u65af\u7dad\u52a0\u65af\u963f\uff01\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1945/buggy-version/spring-boot-cc.src.main.java.com.cc.service.impl.NudoCCServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "eff83fbed1a2e08795bf39255513c867330e6287", "Url": "https://api.github.com/repos/eatnoodles/LineBotCC", "Date": "2017-07-17T07:20:03Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (card != null) { view.getClubTextField().setText(java.lang.Integer.toString(cardSettings.getCount(card, Suit.CLUB))); view.getHeartTextField().setText(java.lang.Integer.toString(cardSettings.getCount(card, Suit.DIAMOND))); view.getDiamondTextField().setText(java.lang.Integer.toString(cardSettings.getCount(card, Suit.HEART))); view.getSpadeTextField().setText(java.lang.Integer.toString(cardSettings.getCount(card, Suit.SPADE))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3130/buggy-version/src.main.java.controller.TableTab.CardRestrictionsMenuController.java", "BodyUseAPI": ["java.lang.Integer.toString(cardSettings.getCount(card, Suit.HEART))", "model.CardSettings.getCount(model.PlayingCard,Suit.CLUB)", "java.lang.Integer.toString(cardSettings.getCount(card, Suit.CLUB))", "view.getSpadeTextField().setText(java.lang.String)", "java.lang.Integer.toString(cardSettings.getCount(card, Suit.SPADE))", "view.getClubTextField().setText(java.lang.String)", "java.lang.Integer.toString(cardSettings.getCount(card, Suit.DIAMOND))", "model.CardSettings.getCount(model.PlayingCard,Suit.DIAMOND)", "model.CardSettings.getCount(model.PlayingCard,Suit.HEART)", "model.CardSettings.getCount(model.PlayingCard,Suit.SPADE)", "view.getHeartTextField().setText(java.lang.String)", "view.getDiamondTextField().setText(java.lang.String)"], "Fixed commit": "d1aa880dbd5eb59ef36ef8c35584aafbc1c305c4", "Url": "https://api.github.com/repos/vamaraju/shuffle-the-rules", "Date": "2017-05-01T22:59:24Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((s.length()) == 0) { targetResultTextView.setText(\" \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7129/buggy-version/app.src.main.java.com.mozawa.coineyapp.ui.conversion.ConversionDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "48bbc0f9e42d77b8db1802d6dedbe78401aa55ba", "Url": "https://api.github.com/repos/momo-ozawa/currency-converter", "Date": "2016-11-13T11:37:37Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["common.CraftrMap.getBlock(cb.x,cb.y)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((cbo.getBlockChar()) == (modifiedMap.updateLook(cb))) && ((cbo.getColor()) == (cb.getColor()))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1933/buggy-version/common.CraftrPhysics.java", "BodyUseAPI": [], "Fixed commit": "98447ccaf1daed22c5ee2456e9e9cb9e2efb141d", "Url": "https://api.github.com/repos/asiekierka/64pixels", "Date": "2013-07-03T23:37:41Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((blockIterationTimes.size()) > 0) { for (java.lang.Long n : blockIterationTimes) { averageBlockIterationTime += n; } averageBlockIterationTime /= blockIterationTimes.size(); java.util.Collections.sort(blockIterationTimes); stringBuilder.append((\"\\nAvg B Time: \" + (com.builtbroken.jlib.lang.StringHelpers.formatNanoTime(averageBlockIterationTime)))); stringBuilder.append((\"\\nMin B Time: \" + (com.builtbroken.jlib.lang.StringHelpers.formatNanoTime(blockIterationTimes.get(0))))); stringBuilder.append((\"\\nMax B Time: \" + (com.builtbroken.jlib.lang.StringHelpers.formatNanoTime(blockIterationTimes.get(((blockIterationTimes.size()) - 1)))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7881/buggy-version/src.main.scala.com.builtbroken.mc.prefab.explosive.blast.BlastRunProfile.java", "BodyUseAPI": ["com.builtbroken.jlib.lang.StringHelpers.formatNanoTime(java.lang.Long)", "java.util.List<java.lang.Long>.size()", "java.lang.StringBuilder.append((\"\\nMax B Time: \" + (com.builtbroken.jlib.lang.StringHelpers.formatNanoTime(blockIterationTimes.get(((blockIterationTimes.size()) - 1))))))", "java.util.List<java.lang.Long>.get(int)", "java.lang.StringBuilder.append((\"\\nMin B Time: \" + (com.builtbroken.jlib.lang.StringHelpers.formatNanoTime(blockIterationTimes.get(0)))))", "java.util.List<java.lang.Long>.get(int)", "com.builtbroken.jlib.lang.StringHelpers.formatNanoTime(java.lang.Long)", "java.util.Collections.sort(java.util.List<java.lang.Long>)", "java.util.List<java.lang.Long>.size()"], "Fixed commit": "9de4e793d91f41e1afd12fd63391c7ef528793b6", "Url": "https://api.github.com/repos/VoltzEngine-Project/Engine", "Date": "2015-10-31T22:18:27Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i >= 4) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7094/buggy-version/src.logic.ArenasHandler.java", "BodyUseAPI": [], "Fixed commit": "db7be16b8d671ec72e1b9605694e4170475113ff", "Url": "https://api.github.com/repos/DavidNavalho/SikuliScripts", "Date": "2016-01-25T10:18:14Z"},
{"Line": "=>1094", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((exitExists) == false) && ((heroExists) == false)) javax.swing.JOptionPane.showMessageDialog(createMaze, \"You don't have an exit and hero assigned!\", \"Save game\", javax.swing.JOptionPane.INFORMATION_MESSAGE); else if ((heroExists) == false) javax.swing.JOptionPane.showMessageDialog(createMaze, \"You don't have a hero assigned!\", \"Save game\", javax.swing.JOptionPane.INFORMATION_MESSAGE); else if ((exitExists) == false) javax.swing.JOptionPane.showMessageDialog(createMaze, \"You don't have an exit assigned!\", \"Save game\", javax.swing.JOptionPane.INFORMATION_MESSAGE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6700/buggy-version/gui.GameFrame.java", "BodyUseAPI": [], "Fixed commit": "98338b2650ad38f1b0515947f012b2aea826fd38", "Url": "https://api.github.com/repos/PedroRomanoBarbosa/LG-Romano", "Date": "2015-04-13T16:52:54Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.neumimto.rpg.gui.GuiHelper.skillConfigurationToItemStacks(cz.neumimto.rpg.gui.SkillData)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i > ((itemStacks.size()) - 1)) { return build; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6469/buggy-version/Plugin.src.main.java.cz.neumimto.rpg.gui.GuiHelper.java", "BodyUseAPI": [], "Fixed commit": "0a233d198b2faa79b01061d4dd5d17eacb04d94f", "Url": "https://api.github.com/repos/NeumimTo/NT-RPG", "Date": "2017-11-04T17:14:27Z"},
{"Line": "=>669", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["at.bitandart.zoubek.mervin.diagram.diff.DiagramDiffView.DiffHighlightListener.findFigureOfMatchedObject(at.bitandart.zoubek.mervin.model.modelreview.ModelReview,org.eclipse.emf.ecore.EObject,org.eclipse.gef.EditPart)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (figure != null) { return figure; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8154/buggy-version/plugins.at.bitandart.zoubek.mervin.src.at.bitandart.zoubek.mervin.diagram.diff.DiagramDiffView.java", "BodyUseAPI": [], "Fixed commit": "9cc677878d2785f5bfe541a748290aadccbf3803", "Url": "https://api.github.com/repos/theArchonius/mervin", "Date": "2016-09-28T10:15:45Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((super.getKey()) instanceof org.raml.v2.internal.impl.commons.nodes.AnnotationReferenceNode) { node = ((org.raml.v2.internal.impl.commons.nodes.AnnotationReferenceNode) (super.getKey())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3922/buggy-version/raml-parser-2.src.main.java.org.raml.v2.internal.impl.commons.nodes.AnnotationNode.java", "BodyUseAPI": ["org.raml.yagi.framework.nodes.KeyValueNodeImpl.getKey()"], "Fixed commit": "ef8b408dadf854d5c04171ffa4d149ed0010b414", "Url": "https://api.github.com/repos/Clockworkideas/raml-java-parser", "Date": "2017-05-28T20:56:53Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.raml.yagi.framework.nodes.Node.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (key != null) { java.lang.String currentKey = ((org.raml.yagi.framework.nodes.SimpleTypeNode) (key)).getLiteralValue().replace(\"/\", \"~1\"); keysStack.push(currentKey); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3922/buggy-version/yagi.src.main.java.org.raml.yagi.framework.nodes.ErrorNode.java", "BodyUseAPI": [], "Fixed commit": "ef8b408dadf854d5c04171ffa4d149ed0010b414", "Url": "https://api.github.com/repos/Clockworkideas/raml-java-parser", "Date": "2017-05-28T20:56:53Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.player.getCurrentEquippedItem()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (currentEquipped == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1138/buggy-version/src.portablejim.veinminermodsupport.VeinMinerModSupport.java", "BodyUseAPI": [], "Fixed commit": "e098af7cac148da32ba3083105188a9532755285", "Url": "https://api.github.com/repos/portablejim/VeinMinerModSupport", "Date": "2013-11-09T04:09:59Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6674/buggy-version/catroid.src.at.tugraz.ist.catroid.ui.fragment.CostumeFragment.java", "BodyUseAPI": [], "Fixed commit": "7cf10876d24540cc9bd2b33b58d4c6d7016cd1ec", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2012-09-18T13:21:56Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (chrom > 23) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2246/buggy-version/WriteFM.java", "BodyUseAPI": [], "Fixed commit": "2d2ad3a4b7708531fb23b064df2583fedae2a7f1", "Url": "https://api.github.com/repos/ebenmichael/genomics", "Date": "2015-06-12T22:08:58Z"},
{"Line": "=>511", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((responseData != null) && ((responseData.get(\"fuse-group-results\")) != null)) { java.lang.String results = ((java.lang.String) (responseData.get(\"fuse-group-results\"))); if (!(results.isEmpty())) { selectedUserDn = \"\"; getUserlistFromAgent(); tr.org.liderahenk.liderconsole.core.widgets.Notifier.notifyandShow(null, \"\", tr.org.liderahenk.usb.ltsp.i18n.Messages.getString(\"AUTHORIZED_OK\"), null, NotifierTheme.ERROR_THEME); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7992/buggy-version/lider-console-usb-ltsp.src.tr.org.liderahenk.usb.ltsp.dialogs.UsbFuseGroupDialog.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "5c4d9af7d54455c2920c93b55f4473563a7cb234", "Url": "https://api.github.com/repos/Pardus-LiderAhenk/lider-ahenk-usb-ltsp-plugin", "Date": "2017-11-20T07:05:02Z"},
{"Line": "=>2409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file_match && rank_match) { found = true; m.i1 = md.to_i; m.j1 = md.to_j; javachessgui.Board dummy_check_test = new javachessgui.Board(false); dummy_check_test.set_from_fen(report_fen()); dummy_check_test.make_move(m); if (dummy_check_test.is_in_check(turn)) { found = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7791/buggy-version/src.javachessgui.Board.java", "BodyUseAPI": [], "Fixed commit": "d2935d455244337ece3534f3452bb479e8c2291f", "Url": "https://api.github.com/repos/javachessgui/javachessgui", "Date": "2015-06-04T05:48:47Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (v instanceof android.widget.ImageView) { v.setBackgroundResource(outValue.resourceId); int padding = ((int) ((info.papdt.blacklight.ui.common.SlidingTabLayout.TAB_ICON_VIEW_PADDING_DIPS) * (getResources().getDisplayMetrics().density))); v.setPadding(padding, padding, padding, padding); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4816/buggy-version/blacklight-base.src.main.java.info.papdt.blacklight.ui.common.SlidingTabLayout.java", "BodyUseAPI": ["android.view.View.setPadding(int,int,int,int)", "android.view.View.setBackgroundResource(outValue.resourceId)"], "Fixed commit": "49b17b3cf2ef7a579c6fab09cae64c6406e77974", "Url": "https://api.github.com/repos/JasprW/BlackLight", "Date": "2015-08-10T14:11:47Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { getFragmentManager().beginTransaction().add(R.id.fragment_container, new com.example.c4q.exam12212016.AnimalFragment()).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4192/buggy-version/app.src.main.java.com.example.c4q.exam12212016.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "cf437285f59d0887e974964b0da35ce7bf5aa71f", "Url": "https://api.github.com/repos/MinaMeltem/ExamDecember21-2016", "Date": "2016-12-22T02:22:12Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(facebookUser)) { navigateToMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/9057/buggy-version/HIOFCommuting.src.bachelor.register.FinishProfileFragment.java", "BodyUseAPI": [], "Fixed commit": "c8555ead3ccc11078f08f38839e3de3d4a8ca3d5", "Url": "https://api.github.com/repos/patricmj/HIOFCommuting", "Date": "2014-04-05T17:26:39Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (name != null) parsedName.setName(name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/287/buggy-version/webadmin.src.main.java.pt.floraon.taxonomy.TaxonomyImporter.java", "BodyUseAPI": ["pt.floraon.taxonomy.entities.TaxEnt.setName(java.lang.String)"], "Fixed commit": "42f4639560036d2975ed816a6c98cd3a12bfc7e1", "Url": "https://api.github.com/repos/miguel-porto/flora-on-server", "Date": "2017-04-06T21:44:51Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (proj == (proj.getRootProject())) proj.getLogger().lifecycle((\"Adding local forge repo: \" + repoDir));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2418/buggy-version/src.main.java.net.minecraftforge.gradle.user.ForgeUserPlugin.java", "BodyUseAPI": ["proj.getLogger().lifecycle(java.lang.String)", "org.gradle.api.Project.getLogger()"], "Fixed commit": "1171bbf0f4e63626a9844e851ebc7d3cb74dc920", "Url": "https://api.github.com/repos/matthewprenger/ForgeGradle", "Date": "2014-01-28T16:29:27Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (learningMethod.getName().equals(GeneticAlgorithmLearningMethod.NAME)) { ((neural_network.GeneticAlgorithmLearningMethod) (learningMethod)).getGeneticAlgorithm().setNeuralNetwork(drawingNetwork); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/194/buggy-version/src.ui.Interface.java", "BodyUseAPI": [], "Fixed commit": "1392f137f1fe52cf09380bd4c9dda4dfac1b3f17", "Url": "https://api.github.com/repos/austinapatel/Handwritten-Recognition", "Date": "2017-04-25T14:15:18Z"},
{"Line": "=>510", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (start == (java.lang.Long.MIN_VALUE)) { throw new java.lang.UnsupportedOperationException(\"Proleptic history without any gregorian reform date.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2765/buggy-version/time4j-android.src.main.java.net.time4j.history.ChronoHistory.java", "BodyUseAPI": [], "Fixed commit": "00211fdbf35e0734ee031b4aea751ff35a738083", "Url": "https://api.github.com/repos/MenoData/Time4A", "Date": "2015-10-24T02:44:26Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.magnet.magnetchat.ui.activities.MMXChatActivity.getSupportActionBar()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (bar != null) bar.setTitle(sequence);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6821/buggy-version/sdk.src.main.java.com.magnet.magnetchat.ui.activities.MMXChatActivity.java", "BodyUseAPI": ["android.support.v7.app.ActionBar.setTitle(java.lang.CharSequence)"], "Fixed commit": "5bb38fbeda5467b94209bb5b29461efab7eedc45", "Url": "https://api.github.com/repos/magnetsystems/message-chatkit-android", "Date": "2016-06-08T11:59:50Z"}]}
